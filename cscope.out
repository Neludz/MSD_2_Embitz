cscope 15 D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz"               0001960598
	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\croutine.c

29 
	~"FªeRTOS.h
"

30 
	~"èsk.h
"

31 
	~"¸outöe.h
"

34 #i‡–
c⁄figUSE_CO_ROUTINES
 != 0 )

40 #ifde‡
p‹tREMOVE_STATIC_QUALIFIER


41 

	)

46 
Li°_t
 
	gpxRódyCoRoutöeLi°s
[ 
c⁄figMAX_CO_ROUTINE_PRIORITIES
 ];

47 
Li°_t
 
	gxDñayedCoRoutöeLi°1
;

48 
Li°_t
 
	gxDñayedCoRoutöeLi°2
;

49 
Li°_t
 * 
	gpxDñayedCoRoutöeLi°
 = 
NULL
;

50 
Li°_t
 * 
	gpxOvîÊowDñayedCoRoutöeLi°
 = 
NULL
;

51 
Li°_t
 
	gxPídögRódyCoRoutöeLi°
;

54 
CRCB_t
 * 
	gpxCuºítCoRoutöe
 = 
NULL
;

55 
UBa£Ty≥_t
 
	guxT›CoRoutöeRódyPri‹ôy
 = 0;

56 
TickTy≥_t
 
	gxCoRoutöeTickCou¡
 = 0, 
	gxLa°TickCou¡
 = 0, 
	gxPas£dTicks
 = 0;

59 
	#c‹INITIAL_STATE
 ( 0 )

	)

68 
	#¥vAddCoRoutöeToRódyQueue
–
pxCRCB
 ) \

70 if–
pxCRCB
->
uxPri‹ôy
 > 
uxT›CoRoutöeRódyPri‹ôy
 ) \

72 
uxT›CoRoutöeRódyPri‹ôy
 = 
pxCRCB
->
uxPri‹ôy
; \

74 
	`vLi°In£πEnd
––
Li°_t
 * ) &–
pxRódyCoRoutöeLi°s
[ 
pxCRCB
->
uxPri‹ôy
 ] ), &–pxCRCB->
xGíîicLi°Iãm
 ) ); \

75 }

	)

81 
¥vInôüli£CoRoutöeLi°s
( );

89 
¥vCheckPídögRódyLi°
( );

99 
¥vCheckDñayedLi°
( );

103 
Ba£Ty≥_t
 
	$xCoRoutöeCª©e
–
¸COROUTINE_CODE
 
pxCoRoutöeCode
,

104 
UBa£Ty≥_t
 
uxPri‹ôy
,

105 
UBa£Ty≥_t
 
uxIndex
 )

107 
Ba£Ty≥_t
 
xRëu∫
;

108 
CRCB_t
 * 
pxCoRoutöe
;

111 
pxCoRoutöe
 = ( 
CRCB_t
 * ) 
	`pvP‹tMÆloc
( ( CRCB_t ) );

113 if–
pxCoRoutöe
 )

117 if–
pxCuºítCoRoutöe
 =
NULL
 )

119 
pxCuºítCoRoutöe
 = 
pxCoRoutöe
;

120 
	`¥vInôüli£CoRoutöeLi°s
();

124 if–
uxPri‹ôy
 >
c⁄figMAX_CO_ROUTINE_PRIORITIES
 )

126 
uxPri‹ôy
 = 
c⁄figMAX_CO_ROUTINE_PRIORITIES
 - 1;

130 
pxCoRoutöe
->
uxSèã
 = 
c‹INITIAL_STATE
;

131 
pxCoRoutöe
->
uxPri‹ôy
 = uxPriority;

132 
pxCoRoutöe
->
uxIndex
 = uxIndex;

133 
pxCoRoutöe
->
pxCoRoutöeFun˘i⁄
 = 
pxCoRoutöeCode
;

136 
	`vLi°Inôüli£Iãm
–&–
pxCoRoutöe
->
xGíîicLi°Iãm
 ) );

137 
	`vLi°Inôüli£Iãm
–&–
pxCoRoutöe
->
xEvítLi°Iãm
 ) );

142 
	`li°SET_LIST_ITEM_OWNER
–&–
pxCoRoutöe
->
xGíîicLi°Iãm
 ),ÖxCoRoutine );

143 
	`li°SET_LIST_ITEM_OWNER
–&–
pxCoRoutöe
->
xEvítLi°Iãm
 ),ÖxCoRoutine );

146 
	`li°SET_LIST_ITEM_VALUE
–&–
pxCoRoutöe
->
xEvítLi°Iãm
 ), ( ( 
TickTy≥_t
 ) 
c⁄figMAX_CO_ROUTINE_PRIORITIES
 - ( TickTy≥_àË
uxPri‹ôy
 ) );

150 
	`¥vAddCoRoutöeToRódyQueue
–
pxCoRoutöe
 );

152 
xRëu∫
 = 
pdPASS
;

156 
xRëu∫
 = 
îrCOULD_NOT_ALLOCATE_REQUIRED_MEMORY
;

159  
xRëu∫
;

160 
	}
}

163 
	$vCoRoutöeAddToDñayedLi°
–
TickTy≥_t
 
xTicksToDñay
,

164 
Li°_t
 * 
pxEvítLi°
 )

166 
TickTy≥_t
 
xTimeToWake
;

170 
xTimeToWake
 = 
xCoRoutöeTickCou¡
 + 
xTicksToDñay
;

175 –Ë
	`uxLi°Remove
––
Li°Iãm_t
 * ) &–
pxCuºítCoRoutöe
->
xGíîicLi°Iãm
 ) );

178 
	`li°SET_LIST_ITEM_VALUE
–&–
pxCuºítCoRoutöe
->
xGíîicLi°Iãm
 ), 
xTimeToWake
 );

180 if–
xTimeToWake
 < 
xCoRoutöeTickCou¡
 )

184 
	`vLi°In£π
––
Li°_t
 * ) 
pxOvîÊowDñayedCoRoutöeLi°
, ( 
Li°Iãm_t
 * ) &–
pxCuºítCoRoutöe
->
xGíîicLi°Iãm
 ) );

190 
	`vLi°In£π
––
Li°_t
 * ) 
pxDñayedCoRoutöeLi°
, ( 
Li°Iãm_t
 * ) &–
pxCuºítCoRoutöe
->
xGíîicLi°Iãm
 ) );

193 if–
pxEvítLi°
 )

197 
	`vLi°In£π
–
pxEvítLi°
, &–
pxCuºítCoRoutöe
->
xEvítLi°Iãm
 ) );

199 
	}
}

202 
	$¥vCheckPídögRódyLi°
( )

207  
	`li°LIST_IS_EMPTY
–&
xPídögRódyCoRoutöeLi°
 ) =
pdFALSE
 )

209 
CRCB_t
 * 
pxUnblockedCRCB
;

212 
	`p‹tDISABLE_INTERRUPTS
();

214 
pxUnblockedCRCB
 = ( 
CRCB_t
 * ) 
	`li°GET_OWNER_OF_HEAD_ENTRY
––&
xPídögRódyCoRoutöeLi°
 ) );

215 –Ë
	`uxLi°Remove
–&–
pxUnblockedCRCB
->
xEvítLi°Iãm
 ) );

217 
	`p‹tENABLE_INTERRUPTS
();

219 –Ë
	`uxLi°Remove
–&–
pxUnblockedCRCB
->
xGíîicLi°Iãm
 ) );

220 
	`¥vAddCoRoutöeToRódyQueue
–
pxUnblockedCRCB
 );

222 
	}
}

225 
	$¥vCheckDñayedLi°
( )

227 
CRCB_t
 * 
pxCRCB
;

229 
xPas£dTicks
 = 
	`xTaskGëTickCou¡
(Ë- 
xLa°TickCou¡
;

231  
xPas£dTicks
 )

233 
xCoRoutöeTickCou¡
++;

234 
xPas£dTicks
--;

237 if–
xCoRoutöeTickCou¡
 == 0 )

239 
Li°_t
 * 
pxTemp
;

243 
pxTemp
 = 
pxDñayedCoRoutöeLi°
;

244 
pxDñayedCoRoutöeLi°
 = 
pxOvîÊowDñayedCoRoutöeLi°
;

245 
pxOvîÊowDñayedCoRoutöeLi°
 = 
pxTemp
;

249  
	`li°LIST_IS_EMPTY
–
pxDñayedCoRoutöeLi°
 ) =
pdFALSE
 )

251 
pxCRCB
 = ( 
CRCB_t
 * ) 
	`li°GET_OWNER_OF_HEAD_ENTRY
–
pxDñayedCoRoutöeLi°
 );

253 if–
xCoRoutöeTickCou¡
 < 
	`li°GET_LIST_ITEM_VALUE
–&–
pxCRCB
->
xGíîicLi°Iãm
 ) ) )

259 
	`p‹tDISABLE_INTERRUPTS
();

266 –Ë
	`uxLi°Remove
–&–
pxCRCB
->
xGíîicLi°Iãm
 ) );

269 if–
pxCRCB
->
xEvítLi°Iãm
.
pxC⁄èöî
 )

271 –Ë
	`uxLi°Remove
–&–
pxCRCB
->
xEvítLi°Iãm
 ) );

274 
	`p‹tENABLE_INTERRUPTS
();

276 
	`¥vAddCoRoutöeToRódyQueue
–
pxCRCB
 );

280 
xLa°TickCou¡
 = 
xCoRoutöeTickCou¡
;

281 
	}
}

284 
	$vCoRoutöeScheduÀ
( )

289 if–
pxDñayedCoRoutöeLi°
 !
NULL
 )

292 
	`¥vCheckPídögRódyLi°
();

295 
	`¥vCheckDñayedLi°
();

298  
	`li°LIST_IS_EMPTY
–&–
pxRódyCoRoutöeLi°s
[ 
uxT›CoRoutöeRódyPri‹ôy
 ] ) ) )

300 if–
uxT›CoRoutöeRódyPri‹ôy
 == 0 )

306 --
uxT›CoRoutöeRódyPri‹ôy
;

311 
	`li°GET_OWNER_OF_NEXT_ENTRY
–
pxCuºítCoRoutöe
, &–
pxRódyCoRoutöeLi°s
[ 
uxT›CoRoutöeRódyPri‹ôy
 ] ) );

314 –
pxCuºítCoRoutöe
->
pxCoRoutöeFun˘i⁄
 )–pxCuºítCoRoutöe,ÖxCuºítCoRoutöe->
uxIndex
 );

316 
	}
}

319 
	$¥vInôüli£CoRoutöeLi°s
( )

321 
UBa£Ty≥_t
 
uxPri‹ôy
;

323  
uxPri‹ôy
 = 0; uxPri‹ôy < 
c⁄figMAX_CO_ROUTINE_PRIORITIES
; uxPriority++ )

325 
	`vLi°Inôüli£
––
Li°_t
 * ) &–
pxRódyCoRoutöeLi°s
[ 
uxPri‹ôy
 ] ) );

328 
	`vLi°Inôüli£
––
Li°_t
 * ) &
xDñayedCoRoutöeLi°1
 );

329 
	`vLi°Inôüli£
––
Li°_t
 * ) &
xDñayedCoRoutöeLi°2
 );

330 
	`vLi°Inôüli£
––
Li°_t
 * ) &
xPídögRódyCoRoutöeLi°
 );

334 
pxDñayedCoRoutöeLi°
 = &
xDñayedCoRoutöeLi°1
;

335 
pxOvîÊowDñayedCoRoutöeLi°
 = &
xDñayedCoRoutöeLi°2
;

336 
	}
}

339 
Ba£Ty≥_t
 
	$xCoRoutöeRemoveFromEvítLi°
–c⁄° 
Li°_t
 * 
pxEvítLi°
 )

341 
CRCB_t
 * 
pxUnblockedCRCB
;

342 
Ba£Ty≥_t
 
xRëu∫
;

347 
pxUnblockedCRCB
 = ( 
CRCB_t
 * ) 
	`li°GET_OWNER_OF_HEAD_ENTRY
–
pxEvítLi°
 );

348 –Ë
	`uxLi°Remove
–&–
pxUnblockedCRCB
->
xEvítLi°Iãm
 ) );

349 
	`vLi°In£πEnd
––
Li°_t
 * ) &–
xPídögRódyCoRoutöeLi°
 ), &–
pxUnblockedCRCB
->
xEvítLi°Iãm
 ) );

351 if–
pxUnblockedCRCB
->
uxPri‹ôy
 >
pxCuºítCoRoutöe
->uxPriority )

353 
xRëu∫
 = 
pdTRUE
;

357 
xRëu∫
 = 
pdFALSE
;

360  
xRëu∫
;

361 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\event_groups.c

30 
	~<°dlib.h
>

35 
	#MPU_WRAPPERS_INCLUDED_FROM_API_FILE


	)

38 
	~"FªeRTOS.h
"

39 
	~"èsk.h
"

40 
	~"timîs.h
"

41 
	~"evít_groups.h
"

47 #unde‡
MPU_WRAPPERS_INCLUDED_FROM_API_FILE


52 #i‡
c⁄figUSE_16_BIT_TICKS
 == 1

53 
	#evítCLEAR_EVENTS_ON_EXIT_BIT
 0x0100U

	)

54 
	#evítUNBLOCKED_DUE_TO_BIT_SET
 0x0200U

	)

55 
	#evítWAIT_FOR_ALL_BITS
 0x0400U

	)

56 
	#evítEVENT_BITS_CONTROL_BYTES
 0xff00U

	)

58 
	#evítCLEAR_EVENTS_ON_EXIT_BIT
 0x01000000UL

	)

59 
	#evítUNBLOCKED_DUE_TO_BIT_SET
 0x02000000UL

	)

60 
	#evítWAIT_FOR_ALL_BITS
 0x04000000UL

	)

61 
	#evítEVENT_BITS_CONTROL_BYTES
 0xff000000UL

	)

64 
	sEvítGroupDef_t


66 
EvítBôs_t
 
	muxEvítBôs
;

67 
Li°_t
 
	mxTasksWaôögF‹Bôs
;

69 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

70 
UBa£Ty≥_t
 
	muxEvítGroupNumbî
;

73 #i‡––
c⁄figSUPPORT_STATIC_ALLOCATION
 =1 ) && ( 
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 ) )

74 
uöt8_t
 
	mucSètiˇŒyAŒoˇãd
;

76 } 
	tEvítGroup_t
;

88 
Ba£Ty≥_t
 
	$¥vTe°WaôC⁄dôi⁄
–c⁄° 
EvítBôs_t
 
uxCuºítEvítBôs
,

89 c⁄° 
EvítBôs_t
 
uxBôsToWaôF‹
,

90 c⁄° 
Ba£Ty≥_t
 
xWaôF‹AŒBôs
 ) 
PRIVILEGED_FUNCTION
;

94 #i‡–
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 )

96 
EvítGroupH™dÀ_t
 
	$xEvítGroupCª©eSètic
–
SèticEvítGroup_t
 * 
pxEvítGroupBuf„r
 )

98 
EvítGroup_t
 * 
pxEvítBôs
;

101 
	`c⁄figASSERT
–
pxEvítGroupBuf„r
 );

103 #i‡–
c⁄figASSERT_DEFINED
 == 1 )

108 vﬁ©ûê
size_t
 
xSize
 = –
SèticEvítGroup_t
 );

109 
	`c⁄figASSERT
–
xSize
 =–
EvítGroup_t
 ) );

114 
pxEvítBôs
 = ( 
EvítGroup_t
 * ) 
pxEvítGroupBuf„r
;

116 if–
pxEvítBôs
 !
NULL
 )

118 
pxEvítBôs
->
uxEvítBôs
 = 0;

119 
	`vLi°Inôüli£
–&–
pxEvítBôs
->
xTasksWaôögF‹Bôs
 ) );

121 #i‡–
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 )

126 
pxEvítBôs
->
ucSètiˇŒyAŒoˇãd
 = 
pdTRUE
;

130 
	`åa˚EVENT_GROUP_CREATE
–
pxEvítBôs
 );

137 
	`åa˚EVENT_GROUP_CREATE_FAILED
();

140  
pxEvítBôs
;

141 
	}
}

146 #i‡–
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 )

148 
EvítGroupH™dÀ_t
 
	$xEvítGroupCª©e
( )

150 
EvítGroup_t
 * 
pxEvítBôs
;

165 
pxEvítBôs
 = ( 
EvítGroup_t
 * ) 
	`pvP‹tMÆloc
( ( EventGroup_t ) );

167 if–
pxEvítBôs
 !
NULL
 )

169 
pxEvítBôs
->
uxEvítBôs
 = 0;

170 
	`vLi°Inôüli£
–&–
pxEvítBôs
->
xTasksWaôögF‹Bôs
 ) );

172 #i‡–
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 )

177 
pxEvítBôs
->
ucSètiˇŒyAŒoˇãd
 = 
pdFALSE
;

181 
	`åa˚EVENT_GROUP_CREATE
–
pxEvítBôs
 );

185 
	`åa˚EVENT_GROUP_CREATE_FAILED
();

188  
pxEvítBôs
;

189 
	}
}

194 
EvítBôs_t
 
	$xEvítGroupSync
–
EvítGroupH™dÀ_t
 
xEvítGroup
,

195 c⁄° 
EvítBôs_t
 
uxBôsToSë
,

196 c⁄° 
EvítBôs_t
 
uxBôsToWaôF‹
,

197 
TickTy≥_t
 
xTicksToWaô
 )

199 
EvítBôs_t
 
uxOrigöÆBôVÆue
, 
uxRëu∫
;

200 
EvítGroup_t
 * 
pxEvítBôs
 = 
xEvítGroup
;

201 
Ba£Ty≥_t
 
xAÃódyYõlded
;

202 
Ba£Ty≥_t
 
xTimeoutOccuºed
 = 
pdFALSE
;

204 
	`c⁄figASSERT
––
uxBôsToWaôF‹
 & 
evítEVENT_BITS_CONTROL_BYTES
 ) == 0 );

205 
	`c⁄figASSERT
–
uxBôsToWaôF‹
 != 0 );

206 #i‡––
INCLUDE_xTaskGëScheduÀrSèã
 =1 ) || ( 
c⁄figUSE_TIMERS
 == 1 ) )

208 
	`c⁄figASSERT
–!––
	`xTaskGëScheduÀrSèã
(Ë=
èskSCHEDULER_SUSPENDED
 ) && ( 
xTicksToWaô
 != 0 ) ) );

212 
	`vTaskSu•ídAŒ
();

214 
uxOrigöÆBôVÆue
 = 
pxEvítBôs
->
uxEvítBôs
;

216 –Ë
	`xEvítGroupSëBôs
–
xEvítGroup
, 
uxBôsToSë
 );

218 if–––
uxOrigöÆBôVÆue
 | 
uxBôsToSë
 ) & 
uxBôsToWaôF‹
 ) == uxBitsToWaitFor )

221 
uxRëu∫
 = ( 
uxOrigöÆBôVÆue
 | 
uxBôsToSë
 );

225 
pxEvítBôs
->
uxEvítBôs
 &~
uxBôsToWaôF‹
;

227 
xTicksToWaô
 = 0;

231 if–
xTicksToWaô
 !–
TickTy≥_t
 ) 0 )

233 
	`åa˚EVENT_GROUP_SYNC_BLOCK
–
xEvítGroup
, 
uxBôsToSë
, 
uxBôsToWaôF‹
 );

238 
	`vTaskPœ˚OnUn‹dîedEvítLi°
–&–
pxEvítBôs
->
xTasksWaôögF‹Bôs
 ), ( 
uxBôsToWaôF‹
 | 
evítCLEAR_EVENTS_ON_EXIT_BIT
 | 
evítWAIT_FOR_ALL_BITS
 ), 
xTicksToWaô
 );

244 
uxRëu∫
 = 0;

250 
uxRëu∫
 = 
pxEvítBôs
->
uxEvítBôs
;

251 
xTimeoutOccuºed
 = 
pdTRUE
;

255 
xAÃódyYõlded
 = 
	`xTaskResumeAŒ
();

257 if–
xTicksToWaô
 !–
TickTy≥_t
 ) 0 )

259 if–
xAÃódyYõlded
 =
pdFALSE
 )

261 
	`p‹tYIELD_WITHIN_API
();

265 
	`mtCOVERAGE_TEST_MARKER
();

272 
uxRëu∫
 = 
	`uxTaskRe£tEvítIãmVÆue
();

274 if––
uxRëu∫
 & 
evítUNBLOCKED_DUE_TO_BIT_SET
 ) =–
EvítBôs_t
 ) 0 )

277 
	`èskENTER_CRITICAL
();

279 
uxRëu∫
 = 
pxEvítBôs
->
uxEvítBôs
;

285 if––
uxRëu∫
 & 
uxBôsToWaôF‹
 ) == uxBitsToWaitFor )

287 
pxEvítBôs
->
uxEvítBôs
 &~
uxBôsToWaôF‹
;

291 
	`mtCOVERAGE_TEST_MARKER
();

294 
	`èskEXIT_CRITICAL
();

296 
xTimeoutOccuºed
 = 
pdTRUE
;

305 
uxRëu∫
 &~
evítEVENT_BITS_CONTROL_BYTES
;

308 
	`åa˚EVENT_GROUP_SYNC_END
–
xEvítGroup
, 
uxBôsToSë
, 
uxBôsToWaôF‹
, 
xTimeoutOccuºed
 );

311 –Ë
xTimeoutOccuºed
;

313  
uxRëu∫
;

314 
	}
}

317 
EvítBôs_t
 
	$xEvítGroupWaôBôs
–
EvítGroupH™dÀ_t
 
xEvítGroup
,

318 c⁄° 
EvítBôs_t
 
uxBôsToWaôF‹
,

319 c⁄° 
Ba£Ty≥_t
 
xCÀ¨OnExô
,

320 c⁄° 
Ba£Ty≥_t
 
xWaôF‹AŒBôs
,

321 
TickTy≥_t
 
xTicksToWaô
 )

323 
EvítGroup_t
 * 
pxEvítBôs
 = 
xEvítGroup
;

324 
EvítBôs_t
 
uxRëu∫
, 
uxC⁄åﬁBôs
 = 0;

325 
Ba£Ty≥_t
 
xWaôC⁄dôi⁄Më
, 
xAÃódyYõlded
;

326 
Ba£Ty≥_t
 
xTimeoutOccuºed
 = 
pdFALSE
;

330 
	`c⁄figASSERT
–
xEvítGroup
 );

331 
	`c⁄figASSERT
––
uxBôsToWaôF‹
 & 
evítEVENT_BITS_CONTROL_BYTES
 ) == 0 );

332 
	`c⁄figASSERT
–
uxBôsToWaôF‹
 != 0 );

333 #i‡––
INCLUDE_xTaskGëScheduÀrSèã
 =1 ) || ( 
c⁄figUSE_TIMERS
 == 1 ) )

335 
	`c⁄figASSERT
–!––
	`xTaskGëScheduÀrSèã
(Ë=
èskSCHEDULER_SUSPENDED
 ) && ( 
xTicksToWaô
 != 0 ) ) );

339 
	`vTaskSu•ídAŒ
();

341 c⁄° 
EvítBôs_t
 
uxCuºítEvítBôs
 = 
pxEvítBôs
->
uxEvítBôs
;

344 
xWaôC⁄dôi⁄Më
 = 
	`¥vTe°WaôC⁄dôi⁄
–
uxCuºítEvítBôs
, 
uxBôsToWaôF‹
, 
xWaôF‹AŒBôs
 );

346 if–
xWaôC⁄dôi⁄Më
 !
pdFALSE
 )

350 
uxRëu∫
 = 
uxCuºítEvítBôs
;

351 
xTicksToWaô
 = ( 
TickTy≥_t
 ) 0;

354 if–
xCÀ¨OnExô
 !
pdFALSE
 )

356 
pxEvítBôs
->
uxEvítBôs
 &~
uxBôsToWaôF‹
;

360 
	`mtCOVERAGE_TEST_MARKER
();

363 if–
xTicksToWaô
 =–
TickTy≥_t
 ) 0 )

367 
uxRëu∫
 = 
uxCuºítEvítBôs
;

368 
xTimeoutOccuºed
 = 
pdTRUE
;

376 if–
xCÀ¨OnExô
 !
pdFALSE
 )

378 
uxC⁄åﬁBôs
 |
evítCLEAR_EVENTS_ON_EXIT_BIT
;

382 
	`mtCOVERAGE_TEST_MARKER
();

385 if–
xWaôF‹AŒBôs
 !
pdFALSE
 )

387 
uxC⁄åﬁBôs
 |
evítWAIT_FOR_ALL_BITS
;

391 
	`mtCOVERAGE_TEST_MARKER
();

397 
	`vTaskPœ˚OnUn‹dîedEvítLi°
–&–
pxEvítBôs
->
xTasksWaôögF‹Bôs
 ), ( 
uxBôsToWaôF‹
 | 
uxC⁄åﬁBôs
 ), 
xTicksToWaô
 );

402 
uxRëu∫
 = 0;

404 
	`åa˚EVENT_GROUP_WAIT_BITS_BLOCK
–
xEvítGroup
, 
uxBôsToWaôF‹
 );

407 
xAÃódyYõlded
 = 
	`xTaskResumeAŒ
();

409 if–
xTicksToWaô
 !–
TickTy≥_t
 ) 0 )

411 if–
xAÃódyYõlded
 =
pdFALSE
 )

413 
	`p‹tYIELD_WITHIN_API
();

417 
	`mtCOVERAGE_TEST_MARKER
();

424 
uxRëu∫
 = 
	`uxTaskRe£tEvítIãmVÆue
();

426 if––
uxRëu∫
 & 
evítUNBLOCKED_DUE_TO_BIT_SET
 ) =–
EvítBôs_t
 ) 0 )

428 
	`èskENTER_CRITICAL
();

431 
uxRëu∫
 = 
pxEvítBôs
->
uxEvítBôs
;

435 if–
	`¥vTe°WaôC⁄dôi⁄
–
uxRëu∫
, 
uxBôsToWaôF‹
, 
xWaôF‹AŒBôs
 ) !
pdFALSE
 )

437 if–
xCÀ¨OnExô
 !
pdFALSE
 )

439 
pxEvítBôs
->
uxEvítBôs
 &~
uxBôsToWaôF‹
;

443 
	`mtCOVERAGE_TEST_MARKER
();

448 
	`mtCOVERAGE_TEST_MARKER
();

451 
xTimeoutOccuºed
 = 
pdTRUE
;

453 
	`èskEXIT_CRITICAL
();

461 
uxRëu∫
 &~
evítEVENT_BITS_CONTROL_BYTES
;

464 
	`åa˚EVENT_GROUP_WAIT_BITS_END
–
xEvítGroup
, 
uxBôsToWaôF‹
, 
xTimeoutOccuºed
 );

467 –Ë
xTimeoutOccuºed
;

469  
uxRëu∫
;

470 
	}
}

473 
EvítBôs_t
 
	$xEvítGroupCÀ¨Bôs
–
EvítGroupH™dÀ_t
 
xEvítGroup
,

474 c⁄° 
EvítBôs_t
 
uxBôsToCÀ¨
 )

476 
EvítGroup_t
 * 
pxEvítBôs
 = 
xEvítGroup
;

477 
EvítBôs_t
 
uxRëu∫
;

481 
	`c⁄figASSERT
–
xEvítGroup
 );

482 
	`c⁄figASSERT
––
uxBôsToCÀ¨
 & 
evítEVENT_BITS_CONTROL_BYTES
 ) == 0 );

484 
	`èskENTER_CRITICAL
();

486 
	`åa˚EVENT_GROUP_CLEAR_BITS
–
xEvítGroup
, 
uxBôsToCÀ¨
 );

490 
uxRëu∫
 = 
pxEvítBôs
->
uxEvítBôs
;

493 
pxEvítBôs
->
uxEvítBôs
 &~
uxBôsToCÀ¨
;

495 
	`èskEXIT_CRITICAL
();

497  
uxRëu∫
;

498 
	}
}

501 #i‡––
c⁄figUSE_TRACE_FACILITY
 =1 ) && ( 
INCLUDE_xTimîPídFun˘i⁄CÆl
 =1 ) && ( 
c⁄figUSE_TIMERS
 == 1 ) )

503 
Ba£Ty≥_t
 
	$xEvítGroupCÀ¨BôsFromISR
–
EvítGroupH™dÀ_t
 
xEvítGroup
,

504 c⁄° 
EvítBôs_t
 
uxBôsToCÀ¨
 )

506 
Ba£Ty≥_t
 
xRëu∫
;

508 
	`åa˚EVENT_GROUP_CLEAR_BITS_FROM_ISR
–
xEvítGroup
, 
uxBôsToCÀ¨
 );

509 
xRëu∫
 = 
	`xTimîPídFun˘i⁄CÆlFromISR
–
vEvítGroupCÀ¨BôsCÆlback
, ( * ) 
xEvítGroup
, ( 
uöt32_t
 ) 
uxBôsToCÀ¨
, 
NULL
 );

511  
xRëu∫
;

512 
	}
}

517 
EvítBôs_t
 
	$xEvítGroupGëBôsFromISR
–
EvítGroupH™dÀ_t
 
xEvítGroup
 )

519 
UBa£Ty≥_t
 
uxSavedI¡îru±Sètus
;

520 
EvítGroup_t
 c⁄° * c⁄° 
pxEvítBôs
 = 
xEvítGroup
;

521 
EvítBôs_t
 
uxRëu∫
;

523 
uxSavedI¡îru±Sètus
 = 
	`p‹tSET_INTERRUPT_MASK_FROM_ISR
();

525 
uxRëu∫
 = 
pxEvítBôs
->
uxEvítBôs
;

527 
	`p‹tCLEAR_INTERRUPT_MASK_FROM_ISR
–
uxSavedI¡îru±Sètus
 );

529  
uxRëu∫
;

530 
	}
}

533 
EvítBôs_t
 
	$xEvítGroupSëBôs
–
EvítGroupH™dÀ_t
 
xEvítGroup
,

534 c⁄° 
EvítBôs_t
 
uxBôsToSë
 )

536 
Li°Iãm_t
 * 
pxLi°Iãm
, * 
pxNext
;

537 
Li°Iãm_t
 c⁄° * 
pxLi°End
;

538 
Li°_t
 c⁄° * 
pxLi°
;

539 
EvítBôs_t
 
uxBôsToCÀ¨
 = 0, 
uxBôsWaôedF‹
, 
uxC⁄åﬁBôs
;

540 
EvítGroup_t
 * 
pxEvítBôs
 = 
xEvítGroup
;

541 
Ba£Ty≥_t
 
xM©chFound
 = 
pdFALSE
;

545 
	`c⁄figASSERT
–
xEvítGroup
 );

546 
	`c⁄figASSERT
––
uxBôsToSë
 & 
evítEVENT_BITS_CONTROL_BYTES
 ) == 0 );

548 
pxLi°
 = &–
pxEvítBôs
->
xTasksWaôögF‹Bôs
 );

549 
pxLi°End
 = 
	`li°GET_END_MARKER
–
pxLi°
 );

550 
	`vTaskSu•ídAŒ
();

552 
	`åa˚EVENT_GROUP_SET_BITS
–
xEvítGroup
, 
uxBôsToSë
 );

554 
pxLi°Iãm
 = 
	`li°GET_HEAD_ENTRY
–
pxLi°
 );

557 
pxEvítBôs
->
uxEvítBôs
 |
uxBôsToSë
;

560  
pxLi°Iãm
 !
pxLi°End
 )

562 
pxNext
 = 
	`li°GET_NEXT
–
pxLi°Iãm
 );

563 
uxBôsWaôedF‹
 = 
	`li°GET_LIST_ITEM_VALUE
–
pxLi°Iãm
 );

564 
xM©chFound
 = 
pdFALSE
;

567 
uxC⁄åﬁBôs
 = 
uxBôsWaôedF‹
 & 
evítEVENT_BITS_CONTROL_BYTES
;

568 
uxBôsWaôedF‹
 &~
evítEVENT_BITS_CONTROL_BYTES
;

570 if––
uxC⁄åﬁBôs
 & 
evítWAIT_FOR_ALL_BITS
 ) =–
EvítBôs_t
 ) 0 )

573 if––
uxBôsWaôedF‹
 & 
pxEvítBôs
->
uxEvítBôs
 ) !–
EvítBôs_t
 ) 0 )

575 
xM©chFound
 = 
pdTRUE
;

579 
	`mtCOVERAGE_TEST_MARKER
();

582 if––
uxBôsWaôedF‹
 & 
pxEvítBôs
->
uxEvítBôs
 ) == uxBitsWaitedFor )

585 
xM©chFound
 = 
pdTRUE
;

592 if–
xM©chFound
 !
pdFALSE
 )

595 if––
uxC⁄åﬁBôs
 & 
evítCLEAR_EVENTS_ON_EXIT_BIT
 ) !–
EvítBôs_t
 ) 0 )

597 
uxBôsToCÀ¨
 |
uxBôsWaôedF‹
;

601 
	`mtCOVERAGE_TEST_MARKER
();

609 
	`vTaskRemoveFromUn‹dîedEvítLi°
–
pxLi°Iãm
, 
pxEvítBôs
->
uxEvítBôs
 | 
evítUNBLOCKED_DUE_TO_BIT_SET
 );

615 
pxLi°Iãm
 = 
pxNext
;

620 
pxEvítBôs
->
uxEvítBôs
 &~
uxBôsToCÀ¨
;

622 –Ë
	`xTaskResumeAŒ
();

624  
pxEvítBôs
->
uxEvítBôs
;

625 
	}
}

628 
	$vEvítGroupDñëe
–
EvítGroupH™dÀ_t
 
xEvítGroup
 )

630 
EvítGroup_t
 * 
pxEvítBôs
 = 
xEvítGroup
;

631 c⁄° 
Li°_t
 * 
pxTasksWaôögF‹Bôs
;

633 
	`c⁄figASSERT
–
pxEvítBôs
 );

635 
pxTasksWaôögF‹Bôs
 = &–
pxEvítBôs
->
xTasksWaôögF‹Bôs
 );

637 
	`vTaskSu•ídAŒ
();

639 
	`åa˚EVENT_GROUP_DELETE
–
xEvítGroup
 );

641  
	`li°CURRENT_LIST_LENGTH
–
pxTasksWaôögF‹Bôs
 ) > ( 
UBa£Ty≥_t
 ) 0 )

645 
	`c⁄figASSERT
–
pxTasksWaôögF‹Bôs
->
xLi°End
.
pxNext
 !–c⁄° 
Li°Iãm_t
 * ) &(ÖxTasksWaitingForBits->xListEnd ) );

646 
	`vTaskRemoveFromUn‹dîedEvítLi°
–
pxTasksWaôögF‹Bôs
->
xLi°End
.
pxNext
, 
evítUNBLOCKED_DUE_TO_BIT_SET
 );

649 #i‡––
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 =1 ) && ( 
c⁄figSUPPORT_STATIC_ALLOCATION
 == 0 ) )

653 
	`vP‹tFªe
–
pxEvítBôs
 );

655 #ñi‡––
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 =1 ) && ( 
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 ) )

659 if–
pxEvítBôs
->
ucSètiˇŒyAŒoˇãd
 =–
uöt8_t
 ) 
pdFALSE
 )

661 
	`vP‹tFªe
–
pxEvítBôs
 );

665 
	`mtCOVERAGE_TEST_MARKER
();

670 –Ë
	`xTaskResumeAŒ
();

671 
	}
}

676 
	$vEvítGroupSëBôsCÆlback
–* 
pvEvítGroup
,

677 c⁄° 
uöt32_t
 
ulBôsToSë
 )

679 –Ë
	`xEvítGroupSëBôs
–
pvEvítGroup
, ( 
EvítBôs_t
 ) 
ulBôsToSë
 );

680 
	}
}

685 
	$vEvítGroupCÀ¨BôsCÆlback
–* 
pvEvítGroup
,

686 c⁄° 
uöt32_t
 
ulBôsToCÀ¨
 )

688 –Ë
	`xEvítGroupCÀ¨Bôs
–
pvEvítGroup
, ( 
EvítBôs_t
 ) 
ulBôsToCÀ¨
 );

689 
	}
}

692 
Ba£Ty≥_t
 
	$¥vTe°WaôC⁄dôi⁄
–c⁄° 
EvítBôs_t
 
uxCuºítEvítBôs
,

693 c⁄° 
EvítBôs_t
 
uxBôsToWaôF‹
,

694 c⁄° 
Ba£Ty≥_t
 
xWaôF‹AŒBôs
 )

696 
Ba£Ty≥_t
 
xWaôC⁄dôi⁄Më
 = 
pdFALSE
;

698 if–
xWaôF‹AŒBôs
 =
pdFALSE
 )

702 if––
uxCuºítEvítBôs
 & 
uxBôsToWaôF‹
 ) !–
EvítBôs_t
 ) 0 )

704 
xWaôC⁄dôi⁄Më
 = 
pdTRUE
;

708 
	`mtCOVERAGE_TEST_MARKER
();

715 if––
uxCuºítEvítBôs
 & 
uxBôsToWaôF‹
 ) == uxBitsToWaitFor )

717 
xWaôC⁄dôi⁄Më
 = 
pdTRUE
;

721 
	`mtCOVERAGE_TEST_MARKER
();

725  
xWaôC⁄dôi⁄Më
;

726 
	}
}

729 #i‡––
c⁄figUSE_TRACE_FACILITY
 =1 ) && ( 
INCLUDE_xTimîPídFun˘i⁄CÆl
 =1 ) && ( 
c⁄figUSE_TIMERS
 == 1 ) )

731 
Ba£Ty≥_t
 
	$xEvítGroupSëBôsFromISR
–
EvítGroupH™dÀ_t
 
xEvítGroup
,

732 c⁄° 
EvítBôs_t
 
uxBôsToSë
,

733 
Ba£Ty≥_t
 * 
pxHighîPri‹ôyTaskWokí
 )

735 
Ba£Ty≥_t
 
xRëu∫
;

737 
	`åa˚EVENT_GROUP_SET_BITS_FROM_ISR
–
xEvítGroup
, 
uxBôsToSë
 );

738 
xRëu∫
 = 
	`xTimîPídFun˘i⁄CÆlFromISR
–
vEvítGroupSëBôsCÆlback
, ( * ) 
xEvítGroup
, ( 
uöt32_t
 ) 
uxBôsToSë
, 
pxHighîPri‹ôyTaskWokí
 );

740  
xRëu∫
;

741 
	}
}

746 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

748 
UBa£Ty≥_t
 
	$uxEvítGroupGëNumbî
–* 
xEvítGroup
 )

750 
UBa£Ty≥_t
 
xRëu∫
;

751 
EvítGroup_t
 c⁄° * 
pxEvítBôs
 = ( EvítGroup_à* ) 
xEvítGroup
;

753 if–
xEvítGroup
 =
NULL
 )

755 
xRëu∫
 = 0;

759 
xRëu∫
 = 
pxEvítBôs
->
uxEvítGroupNumbî
;

762  
xRëu∫
;

763 
	}
}

768 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

770 
	$vEvítGroupSëNumbî
–* 
xEvítGroup
,

771 
UBa£Ty≥_t
 
uxEvítGroupNumbî
 )

773 ––
EvítGroup_t
 * ) 
xEvítGroup
 )->
uxEvítGroupNumbî
 = uxEventGroupNumber;

774 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\heap_1.c

37 
	~<°dlib.h
>

42 
	#MPU_WRAPPERS_INCLUDED_FROM_API_FILE


	)

44 
	~"FªeRTOS.h
"

45 
	~"èsk.h
"

47 #unde‡
MPU_WRAPPERS_INCLUDED_FROM_API_FILE


49 #i‡–
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 0 )

50 #îr‹ 
This
 
fûe
 
mu°
 
nŸ
 
be
 
u£d
 
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 
is
 0

54 
	#c⁄figADJUSTED_HEAP_SIZE
 ( 
c⁄figTOTAL_HEAP_SIZE
 - 
p‹tBYTE_ALIGNMENT
 )

	)

57 #i‡–
c⁄figAPPLICATION_ALLOCATED_HEAP
 == 1 )

61 
uöt8_t
 
ucHóp
[ 
c⁄figTOTAL_HEAP_SIZE
 ];

63 
uöt8_t
 
	gucHóp
[ 
c⁄figTOTAL_HEAP_SIZE
 ];

67 
size_t
 
	gxNextFªeByã
 = ( size_t ) 0;

71 * 
	$pvP‹tMÆloc
–
size_t
 
xW™ãdSize
 )

73 * 
pvRëu∫
 = 
NULL
;

74 
uöt8_t
 * 
pucAlig√dHóp
 = 
NULL
;

77 #i‡–
p‹tBYTE_ALIGNMENT
 != 1 )

79 if–
xW™ãdSize
 & 
p‹tBYTE_ALIGNMENT_MASK
 )

82 i‡–(
xW™ãdSize
 + ( 
p‹tBYTE_ALIGNMENT
 - ( xW™ãdSizê& 
p‹tBYTE_ALIGNMENT_MASK
 ) )) > xWantedSize )

84 
xW™ãdSize
 +–
p‹tBYTE_ALIGNMENT
 - ( xW™ãdSizê& 
p‹tBYTE_ALIGNMENT_MASK
 ) );

88 
xW™ãdSize
 = 0;

94 
	`vTaskSu•ídAŒ
();

96 if–
pucAlig√dHóp
 =
NULL
 )

99 
pucAlig√dHóp
 = ( 
uöt8_t
 * ) ( ( ( 
p‹tPOINTER_SIZE_TYPE
 ) & 
ucHóp
[ 
p‹tBYTE_ALIGNMENT
 - 1 ] ) & ( ~––p‹tPOINTER_SIZE_TYPE ) 
p‹tBYTE_ALIGNMENT_MASK
 ) ) );

103 if––
xW™ãdSize
 > 0 ) &&

104 ––
xNextFªeByã
 + 
xW™ãdSize
 ) < 
c⁄figADJUSTED_HEAP_SIZE
 ) &&

105 ––
xNextFªeByã
 + 
xW™ãdSize
 ) > xNextFreeByte ) )

109 
pvRëu∫
 = 
pucAlig√dHóp
 + 
xNextFªeByã
;

110 
xNextFªeByã
 +
xW™ãdSize
;

113 
	`åa˚MALLOC
–
pvRëu∫
, 
xW™ãdSize
 );

115 –Ë
	`xTaskResumeAŒ
();

117 #i‡–
c⁄figUSE_MALLOC_FAILED_HOOK
 == 1 )

119 if–
pvRëu∫
 =
NULL
 )

121 
	`vAµliˇti⁄MÆlocFaûedHook
( );

122 
	`vAµliˇti⁄MÆlocFaûedHook
();

127  
pvRëu∫
;

128 
	}
}

131 
	$vP‹tFªe
–* 
pv
 )

136 –Ë
pv
;

139 
	`c⁄figASSERT
–
pv
 =
NULL
 );

140 
	}
}

143 
	$vP‹tInôüli£Blocks
( )

146 
xNextFªeByã
 = ( 
size_t
 ) 0;

147 
	}
}

150 
size_t
 
	$xP‹tGëFªeHópSize
( )

152 –
c⁄figADJUSTED_HEAP_SIZE
 - 
xNextFªeByã
 );

153 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\FreeRTOS.h

29 #i‚de‡
INC_FREERTOS_H


30 
	#INC_FREERTOS_H


	)

35 
	~<°ddef.h
>

50 
	~<°döt.h
>

53 #ifde‡
__˝lu•lus


59 
	~"FªeRTOSC⁄fig.h
"

62 
	~"¥ojdefs.h
"

65 
	~"p‹èbÀ.h
"

68 #i‚de‡
c⁄figUSE_NEWLIB_REENTRANT


69 
	#c⁄figUSE_NEWLIB_REENTRANT
 0

	)

73 #i‡–
c⁄figUSE_NEWLIB_REENTRANT
 == 1 )

74 
	~<ªít.h
>

83 #i‚de‡
c⁄figMINIMAL_STACK_SIZE


84 #îr‹ 
Missög
 
deföôi⁄
: 
c⁄figMINIMAL_STACK_SIZE
 
mu°
 
be
 
deföed
 
ö
 
FªeRTOSC⁄fig
.
h
. c⁄figMINIMAL_STACK_SIZE 
deföes
 
the
 
size
 (ö 
w‹ds
Ë
of
Åhê
°ack
 
Æloˇãd
 
to
Åhê
idÀ
 
èsk
. 
Re„r
Åÿthê
demo
 
¥oje˘
 
¥ovided
 
your
 
p‹t
 
a
 
suôabÀ
 
vÆue
.

87 #i‚de‡
c⁄figMAX_PRIORITIES


88 #îr‹ 
Missög
 
deföôi⁄
: 
c⁄figMAX_PRIORITIES
 
mu°
 
be
 
deföed
 
ö
 
FªeRTOSC⁄fig
.
h
. 
Sì
 
the
 
C⁄figuøti⁄
 
£˘i⁄
 
of
Åhê
FªeRTOS
 
API
 
documíèti⁄
 
dëaûs
.

91 #i‡
c⁄figMAX_PRIORITIES
 < 1

92 #îr‹ 
c⁄figMAX_PRIORITIES
 
mu°
 
be
 
deföed
 
to
 bê
gª©î
 
th™
 
‹
 
equÆ
Åo 1.

95 #i‚de‡
c⁄figUSE_PREEMPTION


96 #îr‹ 
Missög
 
deföôi⁄
: 
c⁄figUSE_PREEMPTION
 
mu°
 
be
 
deföed
 
ö
 
FªeRTOSC⁄fig
.
h
 
as
 
eôhî
 1 
‹
 0. 
Sì
 
the
 
C⁄figuøti⁄
 
£˘i⁄
 
of
Åhê
FªeRTOS
 
API
 
documíèti⁄
 
dëaûs
.

99 #i‚de‡
c⁄figUSE_IDLE_HOOK


100 #îr‹ 
Missög
 
deföôi⁄
: 
c⁄figUSE_IDLE_HOOK
 
mu°
 
be
 
deföed
 
ö
 
FªeRTOSC⁄fig
.
h
 
as
 
eôhî
 1 
‹
 0. 
Sì
 
the
 
C⁄figuøti⁄
 
£˘i⁄
 
of
Åhê
FªeRTOS
 
API
 
documíèti⁄
 
dëaûs
.

103 #i‚de‡
c⁄figUSE_TICK_HOOK


104 #îr‹ 
Missög
 
deföôi⁄
: 
c⁄figUSE_TICK_HOOK
 
mu°
 
be
 
deföed
 
ö
 
FªeRTOSC⁄fig
.
h
 
as
 
eôhî
 1 
‹
 0. 
Sì
 
the
 
C⁄figuøti⁄
 
£˘i⁄
 
of
Åhê
FªeRTOS
 
API
 
documíèti⁄
 
dëaûs
.

107 #i‚de‡
c⁄figUSE_16_BIT_TICKS


108 #îr‹ 
Missög
 
deföôi⁄
: 
c⁄figUSE_16_BIT_TICKS
 
mu°
 
be
 
deföed
 
ö
 
FªeRTOSC⁄fig
.
h
 
as
 
eôhî
 1 
‹
 0. 
Sì
 
the
 
C⁄figuøti⁄
 
£˘i⁄
 
of
Åhê
FªeRTOS
 
API
 
documíèti⁄
 
dëaûs
.

111 #i‚de‡
c⁄figUSE_CO_ROUTINES


112 
	#c⁄figUSE_CO_ROUTINES
 0

	)

115 #i‚de‡
INCLUDE_vTaskPri‹ôySë


116 
	#INCLUDE_vTaskPri‹ôySë
 0

	)

119 #i‚de‡
INCLUDE_uxTaskPri‹ôyGë


120 
	#INCLUDE_uxTaskPri‹ôyGë
 0

	)

123 #i‚de‡
INCLUDE_vTaskDñëe


124 
	#INCLUDE_vTaskDñëe
 0

	)

127 #i‚de‡
INCLUDE_vTaskSu•íd


128 
	#INCLUDE_vTaskSu•íd
 0

	)

131 #ifde‡
INCLUDE_xTaskDñayU¡û


132 #ifde‡
INCLUDE_vTaskDñayU¡û


137 #îr‹ 
INCLUDE_vTaskDñayU¡û
 
™d
 
INCLUDE_xTaskDñayU¡û
 
¨e
 
bŸh
 
deföed
. INCLUDE_vTaskDñayU¡û 
is
 
no
 
l⁄gî
 
ªquúed
ánd 
should
 
be
 
ªmoved


141 #i‚de‡
INCLUDE_xTaskDñayU¡û


142 #ifde‡
INCLUDE_vTaskDñayU¡û


149 
	#INCLUDE_xTaskDñayU¡û
 
INCLUDE_vTaskDñayU¡û


	)

153 #i‚de‡
INCLUDE_xTaskDñayU¡û


154 
	#INCLUDE_xTaskDñayU¡û
 0

	)

157 #i‚de‡
INCLUDE_vTaskDñay


158 
	#INCLUDE_vTaskDñay
 0

	)

161 #i‚de‡
INCLUDE_xTaskGëIdÀTaskH™dÀ


162 
	#INCLUDE_xTaskGëIdÀTaskH™dÀ
 0

	)

165 #i‚de‡
INCLUDE_xTaskAb‹tDñay


166 
	#INCLUDE_xTaskAb‹tDñay
 0

	)

169 #i‚de‡
INCLUDE_xQueueGëMuãxHﬁdî


170 
	#INCLUDE_xQueueGëMuãxHﬁdî
 0

	)

173 #i‚de‡
INCLUDE_xSem≠h‹eGëMuãxHﬁdî


174 
	#INCLUDE_xSem≠h‹eGëMuãxHﬁdî
 
INCLUDE_xQueueGëMuãxHﬁdî


	)

177 #i‚de‡
INCLUDE_xTaskGëH™dÀ


178 
	#INCLUDE_xTaskGëH™dÀ
 0

	)

181 #i‚de‡
INCLUDE_uxTaskGëSèckHighW©îM¨k


182 
	#INCLUDE_uxTaskGëSèckHighW©îM¨k
 0

	)

185 #i‚de‡
INCLUDE_uxTaskGëSèckHighW©îM¨k2


186 
	#INCLUDE_uxTaskGëSèckHighW©îM¨k2
 0

	)

189 #i‚de‡
INCLUDE_eTaskGëSèã


190 
	#INCLUDE_eTaskGëSèã
 0

	)

193 #i‚de‡
INCLUDE_xTaskResumeFromISR


194 
	#INCLUDE_xTaskResumeFromISR
 1

	)

197 #i‚de‡
INCLUDE_xTimîPídFun˘i⁄CÆl


198 
	#INCLUDE_xTimîPídFun˘i⁄CÆl
 0

	)

201 #i‚de‡
INCLUDE_xTaskGëScheduÀrSèã


202 
	#INCLUDE_xTaskGëScheduÀrSèã
 0

	)

205 #i‚de‡
INCLUDE_xTaskGëCuºítTaskH™dÀ


206 
	#INCLUDE_xTaskGëCuºítTaskH™dÀ
 0

	)

209 #i‡
c⁄figUSE_CO_ROUTINES
 != 0

210 #i‚de‡
c⁄figMAX_CO_ROUTINE_PRIORITIES


211 #îr‹ 
c⁄figMAX_CO_ROUTINE_PRIORITIES
 
mu°
 
be
 
gª©î
 
th™
 
‹
 
equÆ
 
to
 1.

215 #i‚de‡
c⁄figUSE_DAEMON_TASK_STARTUP_HOOK


216 
	#c⁄figUSE_DAEMON_TASK_STARTUP_HOOK
 0

	)

219 #i‚de‡
c⁄figUSE_APPLICATION_TASK_TAG


220 
	#c⁄figUSE_APPLICATION_TASK_TAG
 0

	)

223 #i‚de‡
c⁄figNUM_THREAD_LOCAL_STORAGE_POINTERS


224 
	#c⁄figNUM_THREAD_LOCAL_STORAGE_POINTERS
 0

	)

227 #i‚de‡
c⁄figUSE_RECURSIVE_MUTEXES


228 
	#c⁄figUSE_RECURSIVE_MUTEXES
 0

	)

231 #i‚de‡
c⁄figUSE_MUTEXES


232 
	#c⁄figUSE_MUTEXES
 0

	)

235 #i‚de‡
c⁄figUSE_TIMERS


236 
	#c⁄figUSE_TIMERS
 0

	)

239 #i‚de‡
c⁄figUSE_COUNTING_SEMAPHORES


240 
	#c⁄figUSE_COUNTING_SEMAPHORES
 0

	)

243 #i‚de‡
c⁄figUSE_ALTERNATIVE_API


244 
	#c⁄figUSE_ALTERNATIVE_API
 0

	)

247 #i‚de‡
p‹tCRITICAL_NESTING_IN_TCB


248 
	#p‹tCRITICAL_NESTING_IN_TCB
 0

	)

251 #i‚de‡
c⁄figMAX_TASK_NAME_LEN


252 
	#c⁄figMAX_TASK_NAME_LEN
 16

	)

255 #i‚de‡
c⁄figIDLE_SHOULD_YIELD


256 
	#c⁄figIDLE_SHOULD_YIELD
 1

	)

259 #i‡
c⁄figMAX_TASK_NAME_LEN
 < 1

260 #îr‹ 
c⁄figMAX_TASK_NAME_LEN
 
mu°
 
be
 
£t
 
to
 
a
 
möimum
 
of
 1 
ö
 
FªeRTOSC⁄fig
.
h


263 #i‚de‡
c⁄figASSERT


264 
	#c⁄figASSERT
–
x
 )

	)

265 
	#c⁄figASSERT_DEFINED
 0

	)

267 
	#c⁄figASSERT_DEFINED
 1

	)

275 #i‚de‡
c⁄figPRECONDITION


276 
	#c⁄figPRECONDITION
–
X
 ) 
	`c⁄figASSERT
–X )

	)

277 
	#c⁄figPRECONDITION_DEFINED
 0

	)

279 
	#c⁄figPRECONDITION_DEFINED
 1

	)

282 #i‚de‡
p‹tMEMORY_BARRIER


283 
	#p‹tMEMORY_BARRIER
()

	)

286 #i‚de‡
p‹tSOFTWARE_BARRIER


287 
	#p‹tSOFTWARE_BARRIER
()

	)

291 #i‡
c⁄figUSE_TIMERS
 == 1

293 #i‚de‡
c⁄figTIMER_TASK_PRIORITY


294 #îr‹ 
If
 
c⁄figUSE_TIMERS
 
is
 
£t
 
to
 1 
thí
 
c⁄figTIMER_TASK_PRIORITY
 
mu°
 
Æso
 
be
 
deföed
.

297 #i‚de‡
c⁄figTIMER_QUEUE_LENGTH


298 #îr‹ 
If
 
c⁄figUSE_TIMERS
 
is
 
£t
 
to
 1 
thí
 
c⁄figTIMER_QUEUE_LENGTH
 
mu°
 
Æso
 
be
 
deföed
.

301 #i‚de‡
c⁄figTIMER_TASK_STACK_DEPTH


302 #îr‹ 
If
 
c⁄figUSE_TIMERS
 
is
 
£t
 
to
 1 
thí
 
c⁄figTIMER_TASK_STACK_DEPTH
 
mu°
 
Æso
 
be
 
deföed
.

307 #i‚de‡
p‹tSET_INTERRUPT_MASK_FROM_ISR


308 
	#p‹tSET_INTERRUPT_MASK_FROM_ISR
(Ë0

	)

311 #i‚de‡
p‹tCLEAR_INTERRUPT_MASK_FROM_ISR


312 
	#p‹tCLEAR_INTERRUPT_MASK_FROM_ISR
–
uxSavedSètusVÆue
 ) ( Ë
	)
uxSavedStatusValue

315 #i‚de‡
p‹tCLEAN_UP_TCB


316 
	#p‹tCLEAN_UP_TCB
–
pxTCB
 ) ( Ë
	)
pxTCB

319 #i‚de‡
p‹tPRE_TASK_DELETE_HOOK


320 
	#p‹tPRE_TASK_DELETE_HOOK
–
pvTaskToDñëe
, 
pxYõldPídög
 )

	)

323 #i‚de‡
p‹tSETUP_TCB


324 
	#p‹tSETUP_TCB
–
pxTCB
 ) ( Ë
	)
pxTCB

327 #i‚de‡
c⁄figQUEUE_REGISTRY_SIZE


328 
	#c⁄figQUEUE_REGISTRY_SIZE
 0U

	)

331 #i‡–
c⁄figQUEUE_REGISTRY_SIZE
 < 1 )

332 
	#vQueueAddToRegi°ry
–
xQueue
, 
pcName
 )

	)

333 
	#vQueueUƒegi°îQueue
–
xQueue
 )

	)

334 
	#pcQueueGëName
–
xQueue
 )

	)

337 #i‚de‡
p‹tPOINTER_SIZE_TYPE


338 
	#p‹tPOINTER_SIZE_TYPE
 
uöt32_t


	)

342 #i‚de‡
åa˚START


346 
	#åa˚START
()

	)

349 #i‚de‡
åa˚END


353 
	#åa˚END
()

	)

356 #i‚de‡
åa˚TASK_SWITCHED_IN


360 
	#åa˚TASK_SWITCHED_IN
()

	)

363 #i‚de‡
åa˚INCREASE_TICK_COUNT


367 
	#åa˚INCREASE_TICK_COUNT
–
x
 )

	)

370 #i‚de‡
åa˚LOW_POWER_IDLE_BEGIN


372 
	#åa˚LOW_POWER_IDLE_BEGIN
()

	)

375 #i‚de‡
åa˚LOW_POWER_IDLE_END


377 
	#åa˚LOW_POWER_IDLE_END
()

	)

380 #i‚de‡
åa˚TASK_SWITCHED_OUT


384 
	#åa˚TASK_SWITCHED_OUT
()

	)

387 #i‚de‡
åa˚TASK_PRIORITY_INHERIT


394 
	#åa˚TASK_PRIORITY_INHERIT
–
pxTCBOfMuãxHﬁdî
, 
uxInhîôedPri‹ôy
 )

	)

397 #i‚de‡
åa˚TASK_PRIORITY_DISINHERIT


403 
	#åa˚TASK_PRIORITY_DISINHERIT
–
pxTCBOfMuãxHﬁdî
, 
uxOrigöÆPri‹ôy
 )

	)

406 #i‚de‡
åa˚BLOCKING_ON_QUEUE_RECEIVE


412 
	#åa˚BLOCKING_ON_QUEUE_RECEIVE
–
pxQueue
 )

	)

415 #i‚de‡
åa˚BLOCKING_ON_QUEUE_PEEK


421 
	#åa˚BLOCKING_ON_QUEUE_PEEK
–
pxQueue
 )

	)

424 #i‚de‡
åa˚BLOCKING_ON_QUEUE_SEND


430 
	#åa˚BLOCKING_ON_QUEUE_SEND
–
pxQueue
 )

	)

433 #i‚de‡
c⁄figCHECK_FOR_STACK_OVERFLOW


434 
	#c⁄figCHECK_FOR_STACK_OVERFLOW
 0

	)

437 #i‚de‡
c⁄figRECORD_STACK_HIGH_ADDRESS


438 
	#c⁄figRECORD_STACK_HIGH_ADDRESS
 0

	)

441 #i‚de‡
c⁄figINCLUDE_FREERTOS_TASK_C_ADDITIONS_H


442 
	#c⁄figINCLUDE_FREERTOS_TASK_C_ADDITIONS_H
 0

	)

447 #i‚de‡
åa˚MOVED_TASK_TO_READY_STATE


448 
	#åa˚MOVED_TASK_TO_READY_STATE
–
pxTCB
 )

	)

451 #i‚de‡
åa˚POST_MOVED_TASK_TO_READY_STATE


452 
	#åa˚POST_MOVED_TASK_TO_READY_STATE
–
pxTCB
 )

	)

455 #i‚de‡
åa˚QUEUE_CREATE


456 
	#åa˚QUEUE_CREATE
–
pxNewQueue
 )

	)

459 #i‚de‡
åa˚QUEUE_CREATE_FAILED


460 
	#åa˚QUEUE_CREATE_FAILED
–
ucQueueTy≥
 )

	)

463 #i‚de‡
åa˚CREATE_MUTEX


464 
	#åa˚CREATE_MUTEX
–
pxNewQueue
 )

	)

467 #i‚de‡
åa˚CREATE_MUTEX_FAILED


468 
	#åa˚CREATE_MUTEX_FAILED
()

	)

471 #i‚de‡
åa˚GIVE_MUTEX_RECURSIVE


472 
	#åa˚GIVE_MUTEX_RECURSIVE
–
pxMuãx
 )

	)

475 #i‚de‡
åa˚GIVE_MUTEX_RECURSIVE_FAILED


476 
	#åa˚GIVE_MUTEX_RECURSIVE_FAILED
–
pxMuãx
 )

	)

479 #i‚de‡
åa˚TAKE_MUTEX_RECURSIVE


480 
	#åa˚TAKE_MUTEX_RECURSIVE
–
pxMuãx
 )

	)

483 #i‚de‡
åa˚TAKE_MUTEX_RECURSIVE_FAILED


484 
	#åa˚TAKE_MUTEX_RECURSIVE_FAILED
–
pxMuãx
 )

	)

487 #i‚de‡
åa˚CREATE_COUNTING_SEMAPHORE


488 
	#åa˚CREATE_COUNTING_SEMAPHORE
()

	)

491 #i‚de‡
åa˚CREATE_COUNTING_SEMAPHORE_FAILED


492 
	#åa˚CREATE_COUNTING_SEMAPHORE_FAILED
()

	)

495 #i‚de‡
åa˚QUEUE_SET_SEND


496 
	#åa˚QUEUE_SET_SEND
 
åa˚QUEUE_SEND


	)

499 #i‚de‡
åa˚QUEUE_SEND


500 
	#åa˚QUEUE_SEND
–
pxQueue
 )

	)

503 #i‚de‡
åa˚QUEUE_SEND_FAILED


504 
	#åa˚QUEUE_SEND_FAILED
–
pxQueue
 )

	)

507 #i‚de‡
åa˚QUEUE_RECEIVE


508 
	#åa˚QUEUE_RECEIVE
–
pxQueue
 )

	)

511 #i‚de‡
åa˚QUEUE_PEEK


512 
	#åa˚QUEUE_PEEK
–
pxQueue
 )

	)

515 #i‚de‡
åa˚QUEUE_PEEK_FAILED


516 
	#åa˚QUEUE_PEEK_FAILED
–
pxQueue
 )

	)

519 #i‚de‡
åa˚QUEUE_PEEK_FROM_ISR


520 
	#åa˚QUEUE_PEEK_FROM_ISR
–
pxQueue
 )

	)

523 #i‚de‡
åa˚QUEUE_RECEIVE_FAILED


524 
	#åa˚QUEUE_RECEIVE_FAILED
–
pxQueue
 )

	)

527 #i‚de‡
åa˚QUEUE_SEND_FROM_ISR


528 
	#åa˚QUEUE_SEND_FROM_ISR
–
pxQueue
 )

	)

531 #i‚de‡
åa˚QUEUE_SEND_FROM_ISR_FAILED


532 
	#åa˚QUEUE_SEND_FROM_ISR_FAILED
–
pxQueue
 )

	)

535 #i‚de‡
åa˚QUEUE_RECEIVE_FROM_ISR


536 
	#åa˚QUEUE_RECEIVE_FROM_ISR
–
pxQueue
 )

	)

539 #i‚de‡
åa˚QUEUE_RECEIVE_FROM_ISR_FAILED


540 
	#åa˚QUEUE_RECEIVE_FROM_ISR_FAILED
–
pxQueue
 )

	)

543 #i‚de‡
åa˚QUEUE_PEEK_FROM_ISR_FAILED


544 
	#åa˚QUEUE_PEEK_FROM_ISR_FAILED
–
pxQueue
 )

	)

547 #i‚de‡
åa˚QUEUE_DELETE


548 
	#åa˚QUEUE_DELETE
–
pxQueue
 )

	)

551 #i‚de‡
åa˚TASK_CREATE


552 
	#åa˚TASK_CREATE
–
pxNewTCB
 )

	)

555 #i‚de‡
åa˚TASK_CREATE_FAILED


556 
	#åa˚TASK_CREATE_FAILED
()

	)

559 #i‚de‡
åa˚TASK_DELETE


560 
	#åa˚TASK_DELETE
–
pxTaskToDñëe
 )

	)

563 #i‚de‡
åa˚TASK_DELAY_UNTIL


564 
	#åa˚TASK_DELAY_UNTIL
–
x
 )

	)

567 #i‚de‡
åa˚TASK_DELAY


568 
	#åa˚TASK_DELAY
()

	)

571 #i‚de‡
åa˚TASK_PRIORITY_SET


572 
	#åa˚TASK_PRIORITY_SET
–
pxTask
, 
uxNewPri‹ôy
 )

	)

575 #i‚de‡
åa˚TASK_SUSPEND


576 
	#åa˚TASK_SUSPEND
–
pxTaskToSu•íd
 )

	)

579 #i‚de‡
åa˚TASK_RESUME


580 
	#åa˚TASK_RESUME
–
pxTaskToResume
 )

	)

583 #i‚de‡
åa˚TASK_RESUME_FROM_ISR


584 
	#åa˚TASK_RESUME_FROM_ISR
–
pxTaskToResume
 )

	)

587 #i‚de‡
åa˚TASK_INCREMENT_TICK


588 
	#åa˚TASK_INCREMENT_TICK
–
xTickCou¡
 )

	)

591 #i‚de‡
åa˚TIMER_CREATE


592 
	#åa˚TIMER_CREATE
–
pxNewTimî
 )

	)

595 #i‚de‡
åa˚TIMER_CREATE_FAILED


596 
	#åa˚TIMER_CREATE_FAILED
()

	)

599 #i‚de‡
åa˚TIMER_COMMAND_SEND


600 
	#åa˚TIMER_COMMAND_SEND
–
xTimî
, 
xMesßgeID
, 
xMesßgeVÆueVÆue
, 
xRëu∫
 )

	)

603 #i‚de‡
åa˚TIMER_EXPIRED


604 
	#åa˚TIMER_EXPIRED
–
pxTimî
 )

	)

607 #i‚de‡
åa˚TIMER_COMMAND_RECEIVED


608 
	#åa˚TIMER_COMMAND_RECEIVED
–
pxTimî
, 
xMesßgeID
, 
xMesßgeVÆue
 )

	)

611 #i‚de‡
åa˚MALLOC


612 
	#åa˚MALLOC
–
pvAddªss
, 
uiSize
 )

	)

615 #i‚de‡
åa˚FREE


616 
	#åa˚FREE
–
pvAddªss
, 
uiSize
 )

	)

619 #i‚de‡
åa˚EVENT_GROUP_CREATE


620 
	#åa˚EVENT_GROUP_CREATE
–
xEvítGroup
 )

	)

623 #i‚de‡
åa˚EVENT_GROUP_CREATE_FAILED


624 
	#åa˚EVENT_GROUP_CREATE_FAILED
()

	)

627 #i‚de‡
åa˚EVENT_GROUP_SYNC_BLOCK


628 
	#åa˚EVENT_GROUP_SYNC_BLOCK
–
xEvítGroup
, 
uxBôsToSë
, 
uxBôsToWaôF‹
 )

	)

631 #i‚de‡
åa˚EVENT_GROUP_SYNC_END


632 
	#åa˚EVENT_GROUP_SYNC_END
–
xEvítGroup
, 
uxBôsToSë
, 
uxBôsToWaôF‹
, 
xTimeoutOccuºed
 ) ( Ë
	)
xTimeoutOccurred

635 #i‚de‡
åa˚EVENT_GROUP_WAIT_BITS_BLOCK


636 
	#åa˚EVENT_GROUP_WAIT_BITS_BLOCK
–
xEvítGroup
, 
uxBôsToWaôF‹
 )

	)

639 #i‚de‡
åa˚EVENT_GROUP_WAIT_BITS_END


640 
	#åa˚EVENT_GROUP_WAIT_BITS_END
–
xEvítGroup
, 
uxBôsToWaôF‹
, 
xTimeoutOccuºed
 ) ( Ë
	)
xTimeoutOccurred

643 #i‚de‡
åa˚EVENT_GROUP_CLEAR_BITS


644 
	#åa˚EVENT_GROUP_CLEAR_BITS
–
xEvítGroup
, 
uxBôsToCÀ¨
 )

	)

647 #i‚de‡
åa˚EVENT_GROUP_CLEAR_BITS_FROM_ISR


648 
	#åa˚EVENT_GROUP_CLEAR_BITS_FROM_ISR
–
xEvítGroup
, 
uxBôsToCÀ¨
 )

	)

651 #i‚de‡
åa˚EVENT_GROUP_SET_BITS


652 
	#åa˚EVENT_GROUP_SET_BITS
–
xEvítGroup
, 
uxBôsToSë
 )

	)

655 #i‚de‡
åa˚EVENT_GROUP_SET_BITS_FROM_ISR


656 
	#åa˚EVENT_GROUP_SET_BITS_FROM_ISR
–
xEvítGroup
, 
uxBôsToSë
 )

	)

659 #i‚de‡
åa˚EVENT_GROUP_DELETE


660 
	#åa˚EVENT_GROUP_DELETE
–
xEvítGroup
 )

	)

663 #i‚de‡
åa˚PEND_FUNC_CALL


664 
	#åa˚PEND_FUNC_CALL
–
xFun˘i⁄ToPíd
, 
pvP¨amëî1
, 
ulP¨amëî2
, 
ªt
 )

	)

667 #i‚de‡
åa˚PEND_FUNC_CALL_FROM_ISR


668 
	#åa˚PEND_FUNC_CALL_FROM_ISR
–
xFun˘i⁄ToPíd
, 
pvP¨amëî1
, 
ulP¨amëî2
, 
ªt
 )

	)

671 #i‚de‡
åa˚QUEUE_REGISTRY_ADD


672 
	#åa˚QUEUE_REGISTRY_ADD
–
xQueue
, 
pcQueueName
 )

	)

675 #i‚de‡
åa˚TASK_NOTIFY_TAKE_BLOCK


676 
	#åa˚TASK_NOTIFY_TAKE_BLOCK
–
uxIndexToWaô
 )

	)

679 #i‚de‡
åa˚TASK_NOTIFY_TAKE


680 
	#åa˚TASK_NOTIFY_TAKE
–
uxIndexToWaô
 )

	)

683 #i‚de‡
åa˚TASK_NOTIFY_WAIT_BLOCK


684 
	#åa˚TASK_NOTIFY_WAIT_BLOCK
–
uxIndexToWaô
 )

	)

687 #i‚de‡
åa˚TASK_NOTIFY_WAIT


688 
	#åa˚TASK_NOTIFY_WAIT
–
uxIndexToWaô
 )

	)

691 #i‚de‡
åa˚TASK_NOTIFY


692 
	#åa˚TASK_NOTIFY
–
uxIndexToNŸify
 )

	)

695 #i‚de‡
åa˚TASK_NOTIFY_FROM_ISR


696 
	#åa˚TASK_NOTIFY_FROM_ISR
–
uxIndexToNŸify
 )

	)

699 #i‚de‡
åa˚TASK_NOTIFY_GIVE_FROM_ISR


700 
	#åa˚TASK_NOTIFY_GIVE_FROM_ISR
–
uxIndexToNŸify
 )

	)

703 #i‚de‡
åa˚STREAM_BUFFER_CREATE_FAILED


704 
	#åa˚STREAM_BUFFER_CREATE_FAILED
–
xIsMesßgeBuf„r
 )

	)

707 #i‚de‡
åa˚STREAM_BUFFER_CREATE_STATIC_FAILED


708 
	#åa˚STREAM_BUFFER_CREATE_STATIC_FAILED
–
xRëu∫
, 
xIsMesßgeBuf„r
 )

	)

711 #i‚de‡
åa˚STREAM_BUFFER_CREATE


712 
	#åa˚STREAM_BUFFER_CREATE
–
pxSåómBuf„r
, 
xIsMesßgeBuf„r
 )

	)

715 #i‚de‡
åa˚STREAM_BUFFER_DELETE


716 
	#åa˚STREAM_BUFFER_DELETE
–
xSåómBuf„r
 )

	)

719 #i‚de‡
åa˚STREAM_BUFFER_RESET


720 
	#åa˚STREAM_BUFFER_RESET
–
xSåómBuf„r
 )

	)

723 #i‚de‡
åa˚BLOCKING_ON_STREAM_BUFFER_SEND


724 
	#åa˚BLOCKING_ON_STREAM_BUFFER_SEND
–
xSåómBuf„r
 )

	)

727 #i‚de‡
åa˚STREAM_BUFFER_SEND


728 
	#åa˚STREAM_BUFFER_SEND
–
xSåómBuf„r
, 
xByãsSít
 )

	)

731 #i‚de‡
åa˚STREAM_BUFFER_SEND_FAILED


732 
	#åa˚STREAM_BUFFER_SEND_FAILED
–
xSåómBuf„r
 )

	)

735 #i‚de‡
åa˚STREAM_BUFFER_SEND_FROM_ISR


736 
	#åa˚STREAM_BUFFER_SEND_FROM_ISR
–
xSåómBuf„r
, 
xByãsSít
 )

	)

739 #i‚de‡
åa˚BLOCKING_ON_STREAM_BUFFER_RECEIVE


740 
	#åa˚BLOCKING_ON_STREAM_BUFFER_RECEIVE
–
xSåómBuf„r
 )

	)

743 #i‚de‡
åa˚STREAM_BUFFER_RECEIVE


744 
	#åa˚STREAM_BUFFER_RECEIVE
–
xSåómBuf„r
, 
xRe˚ivedLígth
 )

	)

747 #i‚de‡
åa˚STREAM_BUFFER_RECEIVE_FAILED


748 
	#åa˚STREAM_BUFFER_RECEIVE_FAILED
–
xSåómBuf„r
 )

	)

751 #i‚de‡
åa˚STREAM_BUFFER_RECEIVE_FROM_ISR


752 
	#åa˚STREAM_BUFFER_RECEIVE_FROM_ISR
–
xSåómBuf„r
, 
xRe˚ivedLígth
 )

	)

755 #i‚de‡
c⁄figGENERATE_RUN_TIME_STATS


756 
	#c⁄figGENERATE_RUN_TIME_STATS
 0

	)

759 #i‡–
c⁄figGENERATE_RUN_TIME_STATS
 == 1 )

761 #i‚de‡
p‹tCONFIGURE_TIMER_FOR_RUN_TIME_STATS


762 #îr‹ 
If
 
c⁄figGENERATE_RUN_TIME_STATS
 
is
 
deföed
 
thí
 
p‹tCONFIGURE_TIMER_FOR_RUN_TIME_STATS
 
mu°
 
Æso
 
be
 deföed.Ö‹tCONFIGURE_TIMER_FOR_RUN_TIME_STATS 
should
 
ˇŒ
 
a
 
p‹t
 
œyî
 
fun˘i⁄
 
to
 
£tup
á 
≥rùhîÆ
 
timî
/
cou¡î
 
th©
 
ˇn
Åhí bê
u£d
 
as
 
the
 
run
 
time
 cou¡îÅimê
ba£
.

765 #i‚de‡
p‹tGET_RUN_TIME_COUNTER_VALUE


766 #i‚de‡
p‹tALT_GET_RUN_TIME_COUNTER_VALUE


767 #îr‹ 
If
 
c⁄figGENERATE_RUN_TIME_STATS
 
is
 
deföed
 
thí
 
eôhî
 
p‹tGET_RUN_TIME_COUNTER_VALUE
 
‹
 
p‹tALT_GET_RUN_TIME_COUNTER_VALUE
 
mu°
 
Æso
 
be
 deföed. 
Sì
 
the
 
exam∂es
 
¥ovided
 
™d
Åhê
FªeRTOS
 
web
 
sôe
 
m‹e
 
öf‹m©i⁄
.

773 #i‚de‡
p‹tCONFIGURE_TIMER_FOR_RUN_TIME_STATS


774 
	#p‹tCONFIGURE_TIMER_FOR_RUN_TIME_STATS
()

	)

777 #i‚de‡
c⁄figUSE_MALLOC_FAILED_HOOK


778 
	#c⁄figUSE_MALLOC_FAILED_HOOK
 0

	)

781 #i‚de‡
p‹tPRIVILEGE_BIT


782 
	#p‹tPRIVILEGE_BIT
 ( ( 
UBa£Ty≥_t
 ) 0x00 )

	)

785 #i‚de‡
p‹tYIELD_WITHIN_API


786 
	#p‹tYIELD_WITHIN_API
 
p‹tYIELD


	)

789 #i‚de‡
p‹tSUPPRESS_TICKS_AND_SLEEP


790 
	#p‹tSUPPRESS_TICKS_AND_SLEEP
–
xEx≥˘edIdÀTime
 )

	)

793 #i‚de‡
c⁄figEXPECTED_IDLE_TIME_BEFORE_SLEEP


794 
	#c⁄figEXPECTED_IDLE_TIME_BEFORE_SLEEP
 2

	)

797 #i‡
c⁄figEXPECTED_IDLE_TIME_BEFORE_SLEEP
 < 2

798 #îr‹ 
c⁄figEXPECTED_IDLE_TIME_BEFORE_SLEEP
 
mu°
 
nŸ
 
be
 
Àss
 
th™
 2

801 #i‚de‡
c⁄figUSE_TICKLESS_IDLE


802 
	#c⁄figUSE_TICKLESS_IDLE
 0

	)

805 #i‚de‡
c⁄figPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING


806 
	#c⁄figPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING
–
x
 )

	)

809 #i‚de‡
c⁄figPRE_SLEEP_PROCESSING


810 
	#c⁄figPRE_SLEEP_PROCESSING
–
x
 )

	)

813 #i‚de‡
c⁄figPOST_SLEEP_PROCESSING


814 
	#c⁄figPOST_SLEEP_PROCESSING
–
x
 )

	)

817 #i‚de‡
c⁄figUSE_QUEUE_SETS


818 
	#c⁄figUSE_QUEUE_SETS
 0

	)

821 #i‚de‡
p‹tTASK_USES_FLOATING_POINT


822 
	#p‹tTASK_USES_FLOATING_POINT
()

	)

825 #i‚de‡
p‹tALLOCATE_SECURE_CONTEXT


826 
	#p‹tALLOCATE_SECURE_CONTEXT
–
ulSecuªSèckSize
 )

	)

829 #i‚de‡
p‹tDONT_DISCARD


830 
	#p‹tDONT_DISCARD


	)

833 #i‚de‡
c⁄figUSE_TIME_SLICING


834 
	#c⁄figUSE_TIME_SLICING
 1

	)

837 #i‚de‡
c⁄figINCLUDE_APPLICATION_DEFINED_PRIVILEGED_FUNCTIONS


838 
	#c⁄figINCLUDE_APPLICATION_DEFINED_PRIVILEGED_FUNCTIONS
 0

	)

841 #i‚de‡
c⁄figUSE_STATS_FORMATTING_FUNCTIONS


842 
	#c⁄figUSE_STATS_FORMATTING_FUNCTIONS
 0

	)

845 #i‚de‡
p‹tASSERT_IF_INTERRUPT_PRIORITY_INVALID


846 
	#p‹tASSERT_IF_INTERRUPT_PRIORITY_INVALID
()

	)

849 #i‚de‡
c⁄figUSE_TRACE_FACILITY


850 
	#c⁄figUSE_TRACE_FACILITY
 0

	)

853 #i‚de‡
mtCOVERAGE_TEST_MARKER


854 
	#mtCOVERAGE_TEST_MARKER
()

	)

857 #i‚de‡
mtCOVERAGE_TEST_DELAY


858 
	#mtCOVERAGE_TEST_DELAY
()

	)

861 #i‚de‡
p‹tASSERT_IF_IN_ISR


862 
	#p‹tASSERT_IF_IN_ISR
()

	)

865 #i‚de‡
c⁄figUSE_PORT_OPTIMISED_TASK_SELECTION


866 
	#c⁄figUSE_PORT_OPTIMISED_TASK_SELECTION
 0

	)

869 #i‚de‡
c⁄figAPPLICATION_ALLOCATED_HEAP


870 
	#c⁄figAPPLICATION_ALLOCATED_HEAP
 0

	)

873 #i‚de‡
c⁄figUSE_TASK_NOTIFICATIONS


874 
	#c⁄figUSE_TASK_NOTIFICATIONS
 1

	)

877 #i‚de‡
c⁄figTASK_NOTIFICATION_ARRAY_ENTRIES


878 
	#c⁄figTASK_NOTIFICATION_ARRAY_ENTRIES
 1

	)

881 #i‡
c⁄figTASK_NOTIFICATION_ARRAY_ENTRIES
 < 1

882 #îr‹ 
c⁄figTASK_NOTIFICATION_ARRAY_ENTRIES
 
mu°
 
be
 
©
 
Àa°
 1

885 #i‚de‡
c⁄figUSE_POSIX_ERRNO


886 
	#c⁄figUSE_POSIX_ERRNO
 0

	)

889 #i‚de‡
p‹tTICK_TYPE_IS_ATOMIC


890 
	#p‹tTICK_TYPE_IS_ATOMIC
 0

	)

893 #i‚de‡
c⁄figSUPPORT_STATIC_ALLOCATION


895 
	#c⁄figSUPPORT_STATIC_ALLOCATION
 0

	)

898 #i‚de‡
c⁄figSUPPORT_DYNAMIC_ALLOCATION


900 
	#c⁄figSUPPORT_DYNAMIC_ALLOCATION
 1

	)

903 #i‚de‡
c⁄figSTACK_DEPTH_TYPE


907 
	#c⁄figSTACK_DEPTH_TYPE
 
uöt16_t


	)

910 #i‚de‡
c⁄figRUN_TIME_COUNTER_TYPE


915 
	#c⁄figRUN_TIME_COUNTER_TYPE
 
uöt32_t


	)

918 #i‚de‡
c⁄figMESSAGE_BUFFER_LENGTH_TYPE


923 
	#c⁄figMESSAGE_BUFFER_LENGTH_TYPE
 
size_t


	)

927 #i‡–
c⁄figUSE_TICKLESS_IDLE
 != 0 )

928 #i‡–
INCLUDE_vTaskSu•íd
 != 1 )

929 #îr‹ 
INCLUDE_vTaskSu•íd
 
mu°
 
be
 
£t
 
to
 1 
c⁄figUSE_TICKLESS_IDLE
 
is
 
nŸ
 setÅo 0

933 #i‡––
c⁄figSUPPORT_STATIC_ALLOCATION
 =0 ) && ( 
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 0 ) )

934 #îr‹ 
c⁄figSUPPORT_STATIC_ALLOCATION
 
™d
 
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 
ˇ¬Ÿ
 
bŸh
 
be
 0, 
but
 
ˇn
 both be 1.

937 #i‡––
c⁄figUSE_RECURSIVE_MUTEXES
 =1 ) && ( 
c⁄figUSE_MUTEXES
 != 1 ) )

938 #îr‹ 
c⁄figUSE_MUTEXES
 
mu°
 
be
 
£t
 
to
 1Åÿ
u£
 
ªcursive
 
muãxes


941 #i‚de‡
c⁄figINITIAL_TICK_COUNT


942 
	#c⁄figINITIAL_TICK_COUNT
 0

	)

945 #i‡–
p‹tTICK_TYPE_IS_ATOMIC
 == 0 )

950 
	#p‹tTICK_TYPE_ENTER_CRITICAL
(Ë
	`p‹tENTER_CRITICAL
()

	)

951 
	#p‹tTICK_TYPE_EXIT_CRITICAL
(Ë
	`p‹tEXIT_CRITICAL
()

	)

952 
	#p‹tTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR
(Ë
	`p‹tSET_INTERRUPT_MASK_FROM_ISR
()

	)

953 
	#p‹tTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR
–
x
 ) 
	`p‹tCLEAR_INTERRUPT_MASK_FROM_ISR
––x ) )

	)

958 
	#p‹tTICK_TYPE_ENTER_CRITICAL
()

	)

959 
	#p‹tTICK_TYPE_EXIT_CRITICAL
()

	)

960 
	#p‹tTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR
(Ë0

	)

961 
	#p‹tTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR
–
x
 ) ( Ë
	)
x

966 #i‚de‡
c⁄figENABLE_BACKWARD_COMPATIBILITY


967 
	#c⁄figENABLE_BACKWARD_COMPATIBILITY
 1

	)

970 #i‚de‡
c⁄figPRINTF


982 
	#c⁄figPRINTF
–
X
 )

	)

985 #i‚de‡
c⁄figMAX


989 
	#c⁄figMAX
–
a
, 
b
 ) ( ( (á ) > ( b ) ) ? (á ) : ( b ) )

	)

992 #i‚de‡
c⁄figMIN


996 
	#c⁄figMIN
–
a
, 
b
 ) ( ( (á ) < ( b ) ) ? (á ) : ( b ) )

	)

999 #i‡
c⁄figENABLE_BACKWARD_COMPATIBILITY
 == 1

1000 
	#eTaskSèãGë
 
eTaskGëSèã


	)

1001 
	#p‹tTickTy≥
 
TickTy≥_t


	)

1002 
	#xTaskH™dÀ
 
TaskH™dÀ_t


	)

1003 
	#xQueueH™dÀ
 
QueueH™dÀ_t


	)

1004 
	#xSem≠h‹eH™dÀ
 
Sem≠h‹eH™dÀ_t


	)

1005 
	#xQueueSëH™dÀ
 
QueueSëH™dÀ_t


	)

1006 
	#xQueueSëMembîH™dÀ
 
QueueSëMembîH™dÀ_t


	)

1007 
	#xTimeOutTy≥
 
TimeOut_t


	)

1008 
	#xMem‹yRegi⁄
 
Mem‹yRegi⁄_t


	)

1009 
	#xTaskP¨amëîs
 
TaskP¨amëîs_t


	)

1010 
	#xTaskSètusTy≥
 
TaskSètus_t


	)

1011 
	#xTimîH™dÀ
 
TimîH™dÀ_t


	)

1012 
	#xCoRoutöeH™dÀ
 
CoRoutöeH™dÀ_t


	)

1013 
	#pdTASK_HOOK_CODE
 
TaskHookFun˘i⁄_t


	)

1014 
	#p‹tTICK_RATE_MS
 
p‹tTICK_PERIOD_MS


	)

1015 
	#pcTaskGëTaskName
 
pcTaskGëName


	)

1016 
	#pcTimîGëTimîName
 
pcTimîGëName


	)

1017 
	#pcQueueGëQueueName
 
pcQueueGëName


	)

1018 
	#vTaskGëTaskInfo
 
vTaskGëInfo


	)

1019 
	#xTaskGëIdÀRunTimeCou¡î
 
ulTaskGëIdÀRunTimeCou¡î


	)

1023 
	#tmrTIMER_CALLBACK
 
TimîCÆlbackFun˘i⁄_t


	)

1024 
	#pdTASK_CODE
 
TaskFun˘i⁄_t


	)

1025 
	#xLi°Iãm
 
Li°Iãm_t


	)

1026 
	#xLi°
 
Li°_t


	)

1030 
	#pxC⁄èöî
 
pvC⁄èöî


	)

1033 #i‡–
c⁄figUSE_ALTERNATIVE_API
 != 0 )

1034 #îr‹ 
The
 
Æã∫©ive
 
API
 
was
 
dïªˇãd
 
some
 
time
 
ago
, 
™d
 wa†
ªmoved
 
ö
 
FªeRTOS
 
V9
.0 0

1041 #i‚de‡
c⁄figUSE_TASK_FPU_SUPPORT


1042 
	#c⁄figUSE_TASK_FPU_SUPPORT
 1

	)

1047 #i‚de‡
c⁄figENABLE_MPU


1048 
	#c⁄figENABLE_MPU
 0

	)

1053 #i‚de‡
c⁄figENABLE_FPU


1054 
	#c⁄figENABLE_FPU
 1

	)

1059 #i‚de‡
c⁄figENABLE_TRUSTZONE


1060 
	#c⁄figENABLE_TRUSTZONE
 1

	)

1065 #i‚de‡
c⁄figRUN_FREERTOS_SECURE_ONLY


1066 
	#c⁄figRUN_FREERTOS_SECURE_ONLY
 0

	)

1069 #i‚de‡
c⁄figRUN_ADDITIONAL_TESTS


1070 
	#c⁄figRUN_ADDITIONAL_TESTS
 0

	)

1116 
	#tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE
 \

1117 –––
p‹tUSING_MPU_WRAPPERS
 =0 ) && ( 
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 =1 ) && ( 
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 ) ) || \

1118 ––
p‹tUSING_MPU_WRAPPERS
 =1 ) && ( 
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 =1 ) ) )

	)

1130 
	sxSTATIC_LIST_ITEM


1132 #i‡–
c⁄figUSE_LIST_DATA_INTEGRITY_CHECK_BYTES
 == 1 )

1133 
TickTy≥_t
 
xDummy1
;

1135 
TickTy≥_t
 
xDummy2
;

1136 * 
pvDummy3
[ 4 ];

1137 #i‡–
c⁄figUSE_LIST_DATA_INTEGRITY_CHECK_BYTES
 == 1 )

1138 
TickTy≥_t
 
xDummy4
;

1141 
xSTATIC_LIST_ITEM
 
	tSèticLi°Iãm_t
;

1144 
	sxSTATIC_MINI_LIST_ITEM


1146 #i‡–
c⁄figUSE_LIST_DATA_INTEGRITY_CHECK_BYTES
 == 1 )

1147 
TickTy≥_t
 
xDummy1
;

1149 
TickTy≥_t
 
xDummy2
;

1150 * 
pvDummy3
[ 2 ];

1152 
xSTATIC_MINI_LIST_ITEM
 
	tSèticMöiLi°Iãm_t
;

1155 
	sxSTATIC_LIST


1157 #i‡–
c⁄figUSE_LIST_DATA_INTEGRITY_CHECK_BYTES
 == 1 )

1158 
TickTy≥_t
 
xDummy1
;

1160 
UBa£Ty≥_t
 
uxDummy2
;

1161 * 
pvDummy3
;

1162 
SèticMöiLi°Iãm_t
 
xDummy4
;

1163 #i‡–
c⁄figUSE_LIST_DATA_INTEGRITY_CHECK_BYTES
 == 1 )

1164 
TickTy≥_t
 
xDummy5
;

1166 } 
	tSèticLi°_t
;

1181 
	sxSTATIC_TCB


1183 * 
pxDummy1
;

1184 #i‡–
p‹tUSING_MPU_WRAPPERS
 == 1 )

1185 
xMPU_SETTINGS
 
xDummy2
;

1187 
SèticLi°Iãm_t
 
xDummy3
[ 2 ];

1188 
UBa£Ty≥_t
 
uxDummy5
;

1189 * 
pxDummy6
;

1190 
uöt8_t
 
ucDummy7
[ 
c⁄figMAX_TASK_NAME_LEN
 ];

1191 #i‡––
p‹tSTACK_GROWTH
 > 0 ) || ( 
c⁄figRECORD_STACK_HIGH_ADDRESS
 == 1 ) )

1192 * 
pxDummy8
;

1194 #i‡–
p‹tCRITICAL_NESTING_IN_TCB
 == 1 )

1195 
UBa£Ty≥_t
 
uxDummy9
;

1197 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

1198 
UBa£Ty≥_t
 
uxDummy10
[ 2 ];

1200 #i‡–
c⁄figUSE_MUTEXES
 == 1 )

1201 
UBa£Ty≥_t
 
uxDummy12
[ 2 ];

1203 #i‡–
c⁄figUSE_APPLICATION_TASK_TAG
 == 1 )

1204 * 
pxDummy14
;

1206 #i‡–
c⁄figNUM_THREAD_LOCAL_STORAGE_POINTERS
 > 0 )

1207 * 
pvDummy15
[ 
c⁄figNUM_THREAD_LOCAL_STORAGE_POINTERS
 ];

1209 #i‡–
c⁄figGENERATE_RUN_TIME_STATS
 == 1 )

1210 
c⁄figRUN_TIME_COUNTER_TYPE
 
ulDummy16
;

1212 #i‡–
c⁄figUSE_NEWLIB_REENTRANT
 == 1 )

1213 
_ªít
 
xDummy17
;

1215 #i‡–
c⁄figUSE_TASK_NOTIFICATIONS
 == 1 )

1216 
uöt32_t
 
ulDummy18
[ 
c⁄figTASK_NOTIFICATION_ARRAY_ENTRIES
 ];

1217 
uöt8_t
 
ucDummy19
[ 
c⁄figTASK_NOTIFICATION_ARRAY_ENTRIES
 ];

1219 #i‡–
tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE
 != 0 )

1220 
uöt8_t
 
uxDummy20
;

1223 #i‡–
INCLUDE_xTaskAb‹tDñay
 == 1 )

1224 
uöt8_t
 
ucDummy21
;

1226 #i‡–
c⁄figUSE_POSIX_ERRNO
 == 1 )

1227 
iDummy22
;

1229 } 
	tSèticTask_t
;

1245 
	sxSTATIC_QUEUE


1247 * 
pvDummy1
[ 3 ];

1251 * 
pvDummy2
;

1252 
UBa£Ty≥_t
 
uxDummy2
;

1253 } 
u
;

1255 
SèticLi°_t
 
xDummy3
[ 2 ];

1256 
UBa£Ty≥_t
 
uxDummy4
[ 3 ];

1257 
uöt8_t
 
ucDummy5
[ 2 ];

1259 #i‡––
c⁄figSUPPORT_STATIC_ALLOCATION
 =1 ) && ( 
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 ) )

1260 
uöt8_t
 
ucDummy6
;

1263 #i‡–
c⁄figUSE_QUEUE_SETS
 == 1 )

1264 * 
pvDummy7
;

1267 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

1268 
UBa£Ty≥_t
 
uxDummy8
;

1269 
uöt8_t
 
ucDummy9
;

1271 } 
	tSèticQueue_t
;

1272 
SèticQueue_t
 
	tSèticSem≠h‹e_t
;

1288 
	sxSTATIC_EVENT_GROUP


1290 
TickTy≥_t
 
xDummy1
;

1291 
SèticLi°_t
 
xDummy2
;

1293 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

1294 
UBa£Ty≥_t
 
uxDummy3
;

1297 #i‡––
c⁄figSUPPORT_STATIC_ALLOCATION
 =1 ) && ( 
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 ) )

1298 
uöt8_t
 
ucDummy4
;

1300 } 
	tSèticEvítGroup_t
;

1316 
	sxSTATIC_TIMER


1318 * 
pvDummy1
;

1319 
SèticLi°Iãm_t
 
xDummy2
;

1320 
TickTy≥_t
 
xDummy3
;

1321 * 
pvDummy5
;

1322 
TaskFun˘i⁄_t
 
pvDummy6
;

1323 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

1324 
UBa£Ty≥_t
 
uxDummy7
;

1326 
uöt8_t
 
ucDummy8
;

1327 } 
	tSèticTimî_t
;

1343 
	sxSTATIC_STREAM_BUFFER


1345 
size_t
 
uxDummy1
[ 4 ];

1346 * 
pvDummy2
[ 3 ];

1347 
uöt8_t
 
ucDummy3
;

1348 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

1349 
UBa£Ty≥_t
 
uxDummy4
;

1351 } 
	tSèticSåómBuf„r_t
;

1354 
SèticSåómBuf„r_t
 
	tSèticMesßgeBuf„r_t
;

1357 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\FreeRTOSConfig.h

28 #i‚de‡
FREERTOS_CONFIG_H


29 
	#FREERTOS_CONFIG_H


	)

44 
	#c⁄figUSE_PREEMPTION
 0

	)

45 
	#c⁄figUSE_IDLE_HOOK
 0

	)

46 
	#c⁄figUSE_TICK_HOOK
 0

	)

47 
	#c⁄figCPU_CLOCK_HZ
 ( ( Ë72000000 )

	)

48 
	#c⁄figTICK_RATE_HZ
 ( ( 
TickTy≥_t
 ) 1000 )

	)

49 
	#c⁄figMAX_PRIORITIES
 ( 5 )

	)

50 
	#c⁄figMINIMAL_STACK_SIZE
 ( ( Ë128 )

	)

51 
	#c⁄figTOTAL_HEAP_SIZE
 ( ( 
size_t
 ) ( 15 * 1024 ) )

	)

52 
	#c⁄figMAX_TASK_NAME_LEN
 ( 10 )

	)

53 
	#c⁄figUSE_TRACE_FACILITY
 0

	)

54 
	#c⁄figUSE_16_BIT_TICKS
 0

	)

55 
	#c⁄figIDLE_SHOULD_YIELD
 1

	)

60 
	#c⁄figUSE_TIMERS
 1

	)

61 
	#c⁄figTIMER_TASK_PRIORITY
 ( 
tskIDLE_PRIORITY
 + 4)

	)

62 
	#c⁄figTIMER_QUEUE_LENGTH
 6

	)

63 
	#c⁄figTIMER_TASK_STACK_DEPTH
 ( 
c⁄figMINIMAL_STACK_SIZE
 )

	)

66 
	#c⁄figUSE_CO_ROUTINES
 0

	)

67 
	#c⁄figMAX_CO_ROUTINE_PRIORITIES
 ( 2 )

	)

69 
	#c⁄figUSE_MUTEXES
 0

	)

70 
	#c⁄figUSE_COUNTING_SEMAPHORES
 0

	)

71 
	#c⁄figUSE_ALTERNATIVE_API
 0

	)

72 
	#c⁄figCHECK_FOR_STACK_OVERFLOW
 2

	)

73 
	#c⁄figUSE_RECURSIVE_MUTEXES
 0

	)

74 
	#c⁄figQUEUE_REGISTRY_SIZE
 0

	)

75 
	#c⁄figGENERATE_RUN_TIME_STATS
 0

	)

80 
	#INCLUDE_vTaskPri‹ôySë
 1

	)

81 
	#INCLUDE_uxTaskPri‹ôyGë
 1

	)

82 
	#INCLUDE_vTaskDñëe
 1

	)

83 
	#INCLUDE_vTaskCÀ™UpResour˚s
 0

	)

84 
	#INCLUDE_vTaskSu•íd
 1

	)

85 
	#INCLUDE_vTaskDñayU¡û
 1

	)

86 
	#INCLUDE_vTaskDñay
 1

	)

87 
	#INCLUDE_eTaskGëSèã
 1

	)

91 
	#c⁄figKERNEL_INTERRUPT_PRIORITY
 255

	)

94 
	#c⁄figMAX_SYSCALL_INTERRUPT_PRIORITY
 191

	)

101 
	#c⁄figLIBRARY_KERNEL_INTERRUPT_PRIORITY
 15

	)

106 
	#c⁄figCOM0_RX_BUFFER_LENGTH
 128

	)

107 
	#c⁄figCOM0_TX_BUFFER_LENGTH
 128

	)

108 
	#c⁄figCOM1_RX_BUFFER_LENGTH
 128

	)

109 
	#c⁄figCOM1_TX_BUFFER_LENGTH
 128

	)

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\StackMacros.h

30 #i‚de‡
_MSC_VER


31 #w¨nög 
The
 
«me
 
of
 
this
 
fûe
 
has
 
ch™ged
 
to
 
°ack_ma¸os
.
h
. 
PÀa£
 
upd©e
 
your
 
code
 
acc‹dögly
. 
This
 
sour˚
 fûê(
which
 ha†
the
 
‹igöÆ
ÇameË
wûl
 
be
 
ªmoved
 
ö
 
futuª
 
ªÀa£d
.

34 
	~"°ack_ma¸os.h
"

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\atomic.h

38 #i‚de‡
ATOMIC_H


39 
	#ATOMIC_H


	)

41 #i‚de‡
INC_FREERTOS_H


46 
	~<°döt.h
>

49 #ifde‡
__˝lu•lus


62 #i‡
deföed
–
p‹tSET_INTERRUPT_MASK_FROM_ISR
 )

65 
	#ATOMIC_ENTER_CRITICAL
() \

66 
UBa£Ty≥_t
 
uxCrôiˇlSe˘i⁄Ty≥
 = 
	`p‹tSET_INTERRUPT_MASK_FROM_ISR
()

	)

68 
	#ATOMIC_EXIT_CRITICAL
() \

69 
	`p‹tCLEAR_INTERRUPT_MASK_FROM_ISR
–
uxCrôiˇlSe˘i⁄Ty≥
 )

	)

74 
	#ATOMIC_ENTER_CRITICAL
(Ë
	`p‹tENTER_CRITICAL
()

	)

75 
	#ATOMIC_EXIT_CRITICAL
(Ë
	`p‹tEXIT_CRITICAL
()

	)

86 #i‚de‡
p‹tFORCE_INLINE


87 
	#p‹tFORCE_INLINE


	)

90 
	#ATOMIC_COMPARE_AND_SWAP_SUCCESS
 0x1U

	)

91 
	#ATOMIC_COMPARE_AND_SWAP_FAILURE
 0x0U

	)

110 
p‹tFORCE_INLINE
 
uöt32_t
 
Atomic_Com∑ªAndSw≠_u32
–uöt32_àvﬁ©ûê* 
pulDe°ö©i⁄
,

111 
uöt32_t
 
ulExch™ge
,

112 
uöt32_t
 
ulCom∑ønd
 )

114 
uöt32_t
 
ulRëu∫VÆue
;

116 
ATOMIC_ENTER_CRITICAL
();

118 if–*
pulDe°ö©i⁄
 =
ulCom∑ønd
 )

120 *
pulDe°ö©i⁄
 = 
ulExch™ge
;

121 
ulRëu∫VÆue
 = 
ATOMIC_COMPARE_AND_SWAP_SUCCESS
;

125 
ulRëu∫VÆue
 = 
ATOMIC_COMPARE_AND_SWAP_FAILURE
;

128 
ATOMIC_EXIT_CRITICAL
();

130  
ulRëu∫VÆue
;

146 
p‹tFORCE_INLINE
 * 
Atomic_Sw≠Poöãrs_p32
–* vﬁ©ûê* 
µvDe°ö©i⁄
,

147 * 
pvExch™ge
 )

149 * 
pRëu∫VÆue
;

151 
ATOMIC_ENTER_CRITICAL
();

153 
pRëu∫VÆue
 = *
µvDe°ö©i⁄
;

154 *
µvDe°ö©i⁄
 = 
pvExch™ge
;

156 
ATOMIC_EXIT_CRITICAL
();

158  
pRëu∫VÆue
;

178 
p‹tFORCE_INLINE
 
uöt32_t
 
Atomic_Com∑ªAndSw≠Poöãrs_p32
–* vﬁ©ûê* 
µvDe°ö©i⁄
,

179 * 
pvExch™ge
,

180 * 
pvCom∑ønd
 )

182 
uöt32_t
 
ulRëu∫VÆue
 = 
ATOMIC_COMPARE_AND_SWAP_FAILURE
;

184 
ATOMIC_ENTER_CRITICAL
();

186 if–*
µvDe°ö©i⁄
 =
pvCom∑ønd
 )

188 *
µvDe°ö©i⁄
 = 
pvExch™ge
;

189 
ulRëu∫VÆue
 = 
ATOMIC_COMPARE_AND_SWAP_SUCCESS
;

192 
ATOMIC_EXIT_CRITICAL
();

194  
ulRëu∫VÆue
;

211 
p‹tFORCE_INLINE
 
uöt32_t
 
Atomic_Add_u32
–uöt32_àvﬁ©ûê* 
pulAddíd
,

212 
uöt32_t
 
ulCou¡
 )

214 
uöt32_t
 
ulCuºít
;

216 
ATOMIC_ENTER_CRITICAL
();

218 
ulCuºít
 = *
pulAddíd
;

219 *
pulAddíd
 +
ulCou¡
;

221 
ATOMIC_EXIT_CRITICAL
();

223  
ulCuºít
;

239 
p‹tFORCE_INLINE
 
uöt32_t
 
Atomic_Subåa˘_u32
–uöt32_àvﬁ©ûê* 
pulAddíd
,

240 
uöt32_t
 
ulCou¡
 )

242 
uöt32_t
 
ulCuºít
;

244 
ATOMIC_ENTER_CRITICAL
();

246 
ulCuºít
 = *
pulAddíd
;

247 *
pulAddíd
 -
ulCou¡
;

249 
ATOMIC_EXIT_CRITICAL
();

251  
ulCuºít
;

265 
p‹tFORCE_INLINE
 
uöt32_t
 
Atomic_In¸emít_u32
–uöt32_àvﬁ©ûê* 
pulAddíd
 )

267 
uöt32_t
 
ulCuºít
;

269 
ATOMIC_ENTER_CRITICAL
();

271 
ulCuºít
 = *
pulAddíd
;

272 *
pulAddíd
 += 1;

274 
ATOMIC_EXIT_CRITICAL
();

276  
ulCuºít
;

290 
p‹tFORCE_INLINE
 
uöt32_t
 
Atomic_De¸emít_u32
–uöt32_àvﬁ©ûê* 
pulAddíd
 )

292 
uöt32_t
 
ulCuºít
;

294 
ATOMIC_ENTER_CRITICAL
();

296 
ulCuºít
 = *
pulAddíd
;

297 *
pulAddíd
 -= 1;

299 
ATOMIC_EXIT_CRITICAL
();

301  
ulCuºít
;

317 
p‹tFORCE_INLINE
 
uöt32_t
 
Atomic_OR_u32
–uöt32_àvﬁ©ûê* 
pulDe°ö©i⁄
,

318 
uöt32_t
 
ulVÆue
 )

320 
uöt32_t
 
ulCuºít
;

322 
ATOMIC_ENTER_CRITICAL
();

324 
ulCuºít
 = *
pulDe°ö©i⁄
;

325 *
pulDe°ö©i⁄
 |
ulVÆue
;

327 
ATOMIC_EXIT_CRITICAL
();

329  
ulCuºít
;

344 
p‹tFORCE_INLINE
 
uöt32_t
 
Atomic_AND_u32
–uöt32_àvﬁ©ûê* 
pulDe°ö©i⁄
,

345 
uöt32_t
 
ulVÆue
 )

347 
uöt32_t
 
ulCuºít
;

349 
ATOMIC_ENTER_CRITICAL
();

351 
ulCuºít
 = *
pulDe°ö©i⁄
;

352 *
pulDe°ö©i⁄
 &
ulVÆue
;

354 
ATOMIC_EXIT_CRITICAL
();

356  
ulCuºít
;

371 
p‹tFORCE_INLINE
 
uöt32_t
 
Atomic_NAND_u32
–uöt32_àvﬁ©ûê* 
pulDe°ö©i⁄
,

372 
uöt32_t
 
ulVÆue
 )

374 
uöt32_t
 
ulCuºít
;

376 
ATOMIC_ENTER_CRITICAL
();

378 
ulCuºít
 = *
pulDe°ö©i⁄
;

379 *
pulDe°ö©i⁄
 = ~–
ulCuºít
 & 
ulVÆue
 );

381 
ATOMIC_EXIT_CRITICAL
();

383  
ulCuºít
;

398 
p‹tFORCE_INLINE
 
uöt32_t
 
Atomic_XOR_u32
–uöt32_àvﬁ©ûê* 
pulDe°ö©i⁄
,

399 
uöt32_t
 
ulVÆue
 )

401 
uöt32_t
 
ulCuºít
;

403 
ATOMIC_ENTER_CRITICAL
();

405 
ulCuºít
 = *
pulDe°ö©i⁄
;

406 *
pulDe°ö©i⁄
 ^
ulVÆue
;

408 
ATOMIC_EXIT_CRITICAL
();

410  
ulCuºít
;

414 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\croutine.h

29 #i‚de‡
CO_ROUTINE_H


30 
	#CO_ROUTINE_H


	)

32 #i‚de‡
INC_FREERTOS_H


36 
	~"li°.h
"

39 #ifde‡
__˝lu•lus


47 * 
	tCoRoutöeH™dÀ_t
;

50 (* 
¸COROUTINE_CODE
)–
	tCoRoutöeH™dÀ_t
,

51 
	tUBa£Ty≥_t
 );

53 
	sc‹CoRoutöeC⁄åﬁBlock


55 
¸COROUTINE_CODE
 
pxCoRoutöeFun˘i⁄
;

56 
Li°Iãm_t
 
xGíîicLi°Iãm
;

57 
Li°Iãm_t
 
xEvítLi°Iãm
;

58 
UBa£Ty≥_t
 
uxPri‹ôy
;

59 
UBa£Ty≥_t
 
uxIndex
;

60 
uöt16_t
 
uxSèã
;

61 } 
	tCRCB_t
;

136 
Ba£Ty≥_t
 
xCoRoutöeCª©e
–
¸COROUTINE_CODE
 
pxCoRoutöeCode
,

137 
UBa£Ty≥_t
 
uxPri‹ôy
,

138 
UBa£Ty≥_t
 
uxIndex
 );

181 
vCoRoutöeScheduÀ
( );

214 
	#¸START
–
pxCRCB
 ) \

215  ( ( 
CRCB_t
 * ) ( 
pxCRCB
 ) )->
uxSèã
 ) { \

216 0:

	)

249 
	#¸END
(Ë}

	)

255 
	#¸SET_STATE0
–
xH™dÀ
 ) \

256 ––
CRCB_t
 * ) ( 
xH™dÀ
 ) )->
uxSèã
 = ( 
__LINE__
 * 2 ); ; \

257 –
__LINE__
 * 2 ):

	)

258 
	#¸SET_STATE1
–
xH™dÀ
 ) \

259 ––
CRCB_t
 * ) ( 
xH™dÀ
 ) )->
uxSèã
 = ( ( 
__LINE__
 * 2 ) + 1 ); ; \

260 ––
__LINE__
 * 2 ) + 1 ):

	)

310 
	#¸DELAY
–
xH™dÀ
, 
xTicksToDñay
 ) \

311 if––
xTicksToDñay
 ) > 0 ) \

313 
	`vCoRoutöeAddToDñayedLi°
––
xTicksToDñay
 ), 
NULL
 ); \

315 
	`¸SET_STATE0
––
xH™dÀ
 ) );

	)

402 
	#¸QUEUE_SEND
–
xH™dÀ
, 
pxQueue
, 
pvIãmToQueue
, 
xTicksToWaô
, 
pxResu…
 ) \

404 *–
pxResu…
 ) = 
	`xQueueCRSíd
––
pxQueue
 ), ( 
pvIãmToQueue
 ), ( 
xTicksToWaô
 ) ); \

405 if–*–
pxResu…
 ) =
îrQUEUE_BLOCKED
 ) \

407 
	`¸SET_STATE0
––
xH™dÀ
 ) ); \

408 *
pxResu…
 = 
	`xQueueCRSíd
––
pxQueue
 ), ( 
pvIãmToQueue
 ), 0 ); \

410 if–*
pxResu…
 =
îrQUEUE_YIELD
 ) \

412 
	`¸SET_STATE1
––
xH™dÀ
 ) ); \

413 *
pxResu…
 = 
pdPASS
; \

415 }

	)

496 
	#¸QUEUE_RECEIVE
–
xH™dÀ
, 
pxQueue
, 
pvBuf„r
, 
xTicksToWaô
, 
pxResu…
 ) \

498 *–
pxResu…
 ) = 
	`xQueueCRRe˚ive
––
pxQueue
 ), ( 
pvBuf„r
 ), ( 
xTicksToWaô
 ) ); \

499 if–*–
pxResu…
 ) =
îrQUEUE_BLOCKED
 ) \

501 
	`¸SET_STATE0
––
xH™dÀ
 ) ); \

502 *–
pxResu…
 ) = 
	`xQueueCRRe˚ive
––
pxQueue
 ), ( 
pvBuf„r
 ), 0 ); \

504 if–*–
pxResu…
 ) =
îrQUEUE_YIELD
 ) \

506 
	`¸SET_STATE1
––
xH™dÀ
 ) ); \

507 *–
pxResu…
 ) = 
pdPASS
; \

509 }

	)

607 
	#¸QUEUE_SEND_FROM_ISR
–
pxQueue
, 
pvIãmToQueue
, 
xCoRoutöePªviou¶yWokí
 ) \

608 
	`xQueueCRSídFromISR
––
pxQueue
 ), ( 
pvIãmToQueue
 ), ( 
xCoRoutöePªviou¶yWokí
 ) )

	)

723 
	#¸QUEUE_RECEIVE_FROM_ISR
–
pxQueue
, 
pvBuf„r
, 
pxCoRoutöeWokí
 ) \

724 
	`xQueueCRRe˚iveFromISR
––
pxQueue
 ), ( 
pvBuf„r
 ), ( 
pxCoRoutöeWokí
 ) )

	)

735 
vCoRoutöeAddToDñayedLi°
–
TickTy≥_t
 
xTicksToDñay
,

736 
Li°_t
 * 
pxEvítLi°
 );

745 
Ba£Ty≥_t
 
xCoRoutöeRemoveFromEvítLi°
–c⁄° 
Li°_t
 * 
pxEvítLi°
 );

748 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\deprecated_definitions.h

29 #i‚de‡
DEPRECATED_DEFINITIONS_H


30 
	#DEPRECATED_DEFINITIONS_H


	)

42 #ifde‡
OPEN_WATCOM_INDUSTRIAL_PC_PORT


43 
	~"..\..\Sour˚\p‹èbÀ\ow©com\16bôdos\pc\p‹tma¸o.h
"

44 –
__öãºu±
 
	t__Ár
 * 
	tpxISR
 )();

47 #ifde‡
OPEN_WATCOM_FLASH_LITE_186_PORT


48 
	~"..\..\Sour˚\p‹èbÀ\ow©com\16bôdos\Êsh186\p‹tma¸o.h
"

49 –
__öãºu±
 
	t__Ár
 * 
	tpxISR
 )();

52 #ifde‡
GCC_MEGA_AVR


53 
	~"../p‹èbÀ/GCC/ATMega323/p‹tma¸o.h
"

56 #ifde‡
IAR_MEGA_AVR


57 
	~"../p‹èbÀ/IAR/ATMega323/p‹tma¸o.h
"

60 #ifde‡
MPLAB_PIC24_PORT


61 
	~"../../Sour˚/p‹èbÀ/MPLAB/PIC24_dsPIC/p‹tma¸o.h
"

64 #ifde‡
MPLAB_DSPIC_PORT


65 
	~"../../Sour˚/p‹èbÀ/MPLAB/PIC24_dsPIC/p‹tma¸o.h
"

68 #ifde‡
MPLAB_PIC18F_PORT


69 
	~"../../Sour˚/p‹èbÀ/MPLAB/PIC18F/p‹tma¸o.h
"

72 #ifde‡
MPLAB_PIC32MX_PORT


73 
	~"../../Sour˚/p‹èbÀ/MPLAB/PIC32MX/p‹tma¸o.h
"

76 #ifde‡
_FEDPICC


77 
	~"libFªeRTOS/In˛ude/p‹tma¸o.h
"

80 #ifde‡
SDCC_CYGNAL


81 
	~"../../Sour˚/p‹èbÀ/SDCC/Cyg«l/p‹tma¸o.h
"

84 #ifde‡
GCC_ARM7


85 
	~"../../Sour˚/p‹èbÀ/GCC/ARM7_LPC2000/p‹tma¸o.h
"

88 #ifde‡
GCC_ARM7_ECLIPSE


89 
	~"p‹tma¸o.h
"

92 #ifde‡
ROWLEY_LPC23xx


93 
	~"../../Sour˚/p‹èbÀ/GCC/ARM7_LPC23xx/p‹tma¸o.h
"

96 #ifde‡
IAR_MSP430


97 
	~"..\..\Sour˚\p‹èbÀ\IAR\MSP430\p‹tma¸o.h
"

100 #ifde‡
GCC_MSP430


101 
	~"../../Sour˚/p‹èbÀ/GCC/MSP430F449/p‹tma¸o.h
"

104 #ifde‡
ROWLEY_MSP430


105 
	~"../../Sour˚/p‹èbÀ/RowÀy/MSP430F449/p‹tma¸o.h
"

108 #ifde‡
ARM7_LPC21xx_KEIL_RVDS


109 
	~"..\..\Sour˚\p‹èbÀ\RVDS\ARM7_LPC21xx\p‹tma¸o.h
"

112 #ifde‡
SAM7_GCC


113 
	~"../../Sour˚/p‹èbÀ/GCC/ARM7_AT91SAM7S/p‹tma¸o.h
"

116 #ifde‡
SAM7_IAR


117 
	~"..\..\Sour˚\p‹èbÀ\IAR\AtmñSAM7S64\p‹tma¸o.h
"

120 #ifde‡
SAM9XE_IAR


121 
	~"..\..\Sour˚\p‹èbÀ\IAR\AtmñSAM9XE\p‹tma¸o.h
"

124 #ifde‡
LPC2000_IAR


125 
	~"..\..\Sour˚\p‹èbÀ\IAR\LPC2000\p‹tma¸o.h
"

128 #ifde‡
STR71X_IAR


129 
	~"..\..\Sour˚\p‹èbÀ\IAR\STR71x\p‹tma¸o.h
"

132 #ifde‡
STR75X_IAR


133 
	~"..\..\Sour˚\p‹èbÀ\IAR\STR75x\p‹tma¸o.h
"

136 #ifde‡
STR75X_GCC


137 
	~"..\..\Sour˚\p‹èbÀ\GCC\STR75x\p‹tma¸o.h
"

140 #ifde‡
STR91X_IAR


141 
	~"..\..\Sour˚\p‹èbÀ\IAR\STR91x\p‹tma¸o.h
"

144 #ifde‡
GCC_H8S


145 
	~"../../Sour˚/p‹èbÀ/GCC/H8S2329/p‹tma¸o.h
"

148 #ifde‡
GCC_AT91FR40008


149 
	~"../../Sour˚/p‹èbÀ/GCC/ARM7_AT91FR40008/p‹tma¸o.h
"

152 #ifde‡
RVDS_ARMCM3_LM3S102


153 
	~"../../Sour˚/p‹èbÀ/RVDS/ARM_CM3/p‹tma¸o.h
"

156 #ifde‡
GCC_ARMCM3_LM3S102


157 
	~"../../Sour˚/p‹èbÀ/GCC/ARM_CM3/p‹tma¸o.h
"

160 #ifde‡
GCC_ARMCM3


161 
	~"../../Sour˚/p‹èbÀ/GCC/ARM_CM3/p‹tma¸o.h
"

164 #ifde‡
IAR_ARM_CM3


165 
	~"../../Sour˚/p‹èbÀ/IAR/ARM_CM3/p‹tma¸o.h
"

168 #ifde‡
IAR_ARMCM3_LM


169 
	~"../../Sour˚/p‹èbÀ/IAR/ARM_CM3/p‹tma¸o.h
"

172 #ifde‡
HCS12_CODE_WARRIOR


173 
	~"../../Sour˚/p‹èbÀ/CodeW¨ri‹/HCS12/p‹tma¸o.h
"

176 #ifde‡
MICROBLAZE_GCC


177 
	~"../../Sour˚/p‹èbÀ/GCC/Mi¸oBœze/p‹tma¸o.h
"

180 #ifde‡
TERN_EE


181 
	~"..\..\Sour˚\p‹èbÀ\P¨adigm\Tîn_EE\smÆl\p‹tma¸o.h
"

184 #ifde‡
GCC_HCS12


185 
	~"../../Sour˚/p‹èbÀ/GCC/HCS12/p‹tma¸o.h
"

188 #ifde‡
GCC_MCF5235


189 
	~"../../Sour˚/p‹èbÀ/GCC/MCF5235/p‹tma¸o.h
"

192 #ifde‡
COLDFIRE_V2_GCC


193 
	~"../../../Sour˚/p‹èbÀ/GCC/CﬁdFúe_V2/p‹tma¸o.h
"

196 #ifde‡
COLDFIRE_V2_CODEWARRIOR


197 
	~"../../Sour˚/p‹èbÀ/CodeW¨ri‹/CﬁdFúe_V2/p‹tma¸o.h
"

200 #ifde‡
GCC_PPC405


201 
	~"../../Sour˚/p‹èbÀ/GCC/PPC405_Xûöx/p‹tma¸o.h
"

204 #ifde‡
GCC_PPC440


205 
	~"../../Sour˚/p‹èbÀ/GCC/PPC440_Xûöx/p‹tma¸o.h
"

208 #ifde‡
_16FX_SOFTUNE


209 
	~"..\..\Sour˚\p‹èbÀ\So·u√\MB96340\p‹tma¸o.h
"

212 #ifde‡
BCC_INDUSTRIAL_PC_PORT


216 
	~"‰c⁄fig.h
"

217 
	~"..\p‹èbÀ\BCC\16BôDOS\PC\¥tma¸o.h
"

218 –
__öãºu±
 
	t__Ár
 * 
	tpxISR
 )();

221 #ifde‡
BCC_FLASH_LITE_186_PORT


225 
	~"‰c⁄fig.h
"

226 
	~"..\p‹èbÀ\BCC\16BôDOS\Êsh186\¥tma¸o.h
"

227 –
__öãºu±
 
	t__Ár
 * 
	tpxISR
 )();

230 #ifde‡
__GNUC__


231 #ifde‡
__AVR32_AVR32A__


232 
	~"p‹tma¸o.h
"

236 #ifde‡
__ICCAVR32__


237 #ifde‡
__CORE__


238 #i‡
__CORE__
 =
__AVR32A__


239 
	~"p‹tma¸o.h
"

244 #ifde‡
__91467D


245 
	~"p‹tma¸o.h
"

248 #ifde‡
__96340


249 
	~"p‹tma¸o.h
"

253 #ifde‡
__IAR_V850ES_Fx3__


254 
	~"../../Sour˚/p‹èbÀ/IAR/V850ES/p‹tma¸o.h
"

257 #ifde‡
__IAR_V850ES_Jx3__


258 
	~"../../Sour˚/p‹èbÀ/IAR/V850ES/p‹tma¸o.h
"

261 #ifde‡
__IAR_V850ES_Jx3_L__


262 
	~"../../Sour˚/p‹èbÀ/IAR/V850ES/p‹tma¸o.h
"

265 #ifde‡
__IAR_V850ES_Jx2__


266 
	~"../../Sour˚/p‹èbÀ/IAR/V850ES/p‹tma¸o.h
"

269 #ifde‡
__IAR_V850ES_Hx2__


270 
	~"../../Sour˚/p‹èbÀ/IAR/V850ES/p‹tma¸o.h
"

273 #ifde‡
__IAR_78K0R_Kx3__


274 
	~"../../Sour˚/p‹èbÀ/IAR/78K0R/p‹tma¸o.h
"

277 #ifde‡
__IAR_78K0R_Kx3L__


278 
	~"../../Sour˚/p‹èbÀ/IAR/78K0R/p‹tma¸o.h
"

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\event_groups.h

29 #i‚de‡
EVENT_GROUPS_H


30 
	#EVENT_GROUPS_H


	)

32 #i‚de‡
INC_FREERTOS_H


33 #îr‹ "ö˛udêFªeRTOS.h" 
mu°
 
≠≥¨
 
ö
 
sour˚
 
fûes
 
bef‹e
 "includeÉvent_groups.h"

37 
	~"timîs.h
"

40 #ifde‡
__˝lu•lus


84 
EvítGroupDef_t
;

85 
EvítGroupDef_t
 * 
	tEvítGroupH™dÀ_t
;

95 
TickTy≥_t
 
	tEvítBôs_t
;

149 #i‡–
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 )

150 
EvítGroupH™dÀ_t
 
xEvítGroupCª©e
–Ë
PRIVILEGED_FUNCTION
;

202 #i‡–
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 )

203 
EvítGroupH™dÀ_t
 
xEvítGroupCª©eSètic
–
SèticEvítGroup_t
 * 
pxEvítGroupBuf„r
 ) 
PRIVILEGED_FUNCTION
;

298 
EvítBôs_t
 
xEvítGroupWaôBôs
–
EvítGroupH™dÀ_t
 
xEvítGroup
,

299 c⁄° 
EvítBôs_t
 
uxBôsToWaôF‹
,

300 c⁄° 
Ba£Ty≥_t
 
xCÀ¨OnExô
,

301 c⁄° 
Ba£Ty≥_t
 
xWaôF‹AŒBôs
,

302 
TickTy≥_t
 
xTicksToWaô
 ) 
PRIVILEGED_FUNCTION
;

359 
EvítBôs_t
 
xEvítGroupCÀ¨Bôs
–
EvítGroupH™dÀ_t
 
xEvítGroup
,

360 c⁄° 
EvítBôs_t
 
uxBôsToCÀ¨
 ) 
PRIVILEGED_FUNCTION
;

415 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

416 
Ba£Ty≥_t
 
xEvítGroupCÀ¨BôsFromISR
–
EvítGroupH™dÀ_t
 
xEvítGroup
,

417 c⁄° 
EvítBôs_t
 
uxBôsToCÀ¨
 ) 
PRIVILEGED_FUNCTION
;

419 
	#xEvítGroupCÀ¨BôsFromISR
–
xEvítGroup
, 
uxBôsToCÀ¨
 ) \

420 
	`xTimîPídFun˘i⁄CÆlFromISR
–
vEvítGroupCÀ¨BôsCÆlback
, ( * ) 
xEvítGroup
, ( 
uöt32_t
 ) 
uxBôsToCÀ¨
, 
NULL
 )

	)

495 
EvítBôs_t
 
xEvítGroupSëBôs
–
EvítGroupH™dÀ_t
 
xEvítGroup
,

496 c⁄° 
EvítBôs_t
 
uxBôsToSë
 ) 
PRIVILEGED_FUNCTION
;

570 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

571 
Ba£Ty≥_t
 
xEvítGroupSëBôsFromISR
–
EvítGroupH™dÀ_t
 
xEvítGroup
,

572 c⁄° 
EvítBôs_t
 
uxBôsToSë
,

573 
Ba£Ty≥_t
 * 
pxHighîPri‹ôyTaskWokí
 ) 
PRIVILEGED_FUNCTION
;

575 
	#xEvítGroupSëBôsFromISR
–
xEvítGroup
, 
uxBôsToSë
, 
pxHighîPri‹ôyTaskWokí
 ) \

576 
	`xTimîPídFun˘i⁄CÆlFromISR
–
vEvítGroupSëBôsCÆlback
, ( * ) 
xEvítGroup
, ( 
uöt32_t
 ) 
uxBôsToSë
, 
pxHighîPri‹ôyTaskWokí
 )

	)

703 
EvítBôs_t
 
xEvítGroupSync
–
EvítGroupH™dÀ_t
 
xEvítGroup
,

704 c⁄° 
EvítBôs_t
 
uxBôsToSë
,

705 c⁄° 
EvítBôs_t
 
uxBôsToWaôF‹
,

706 
TickTy≥_t
 
xTicksToWaô
 ) 
PRIVILEGED_FUNCTION
;

725 
	#xEvítGroupGëBôs
–
xEvítGroup
 ) 
	`xEvítGroupCÀ¨Bôs
–xEvítGroup, 0 )

	)

742 
EvítBôs_t
 
xEvítGroupGëBôsFromISR
–
EvítGroupH™dÀ_t
 
xEvítGroup
 ) 
PRIVILEGED_FUNCTION
;

756 
vEvítGroupDñëe
–
EvítGroupH™dÀ_t
 
xEvítGroup
 ) 
PRIVILEGED_FUNCTION
;

759 
vEvítGroupSëBôsCÆlback
–* 
pvEvítGroup
,

760 c⁄° 
uöt32_t
 
ulBôsToSë
 ) 
PRIVILEGED_FUNCTION
;

761 
vEvítGroupCÀ¨BôsCÆlback
–* 
pvEvítGroup
,

762 c⁄° 
uöt32_t
 
ulBôsToCÀ¨
 ) 
PRIVILEGED_FUNCTION
;

765 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

766 
UBa£Ty≥_t
 
uxEvítGroupGëNumbî
–* 
xEvítGroup
 ) 
PRIVILEGED_FUNCTION
;

767 
vEvítGroupSëNumbî
–* 
xEvítGroup
,

768 
UBa£Ty≥_t
 
uxEvítGroupNumbî
 ) 
PRIVILEGED_FUNCTION
;

772 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\list.h

58 #i‚de‡
LIST_H


59 
	#LIST_H


	)

61 #i‚de‡
INC_FREERTOS_H


93 #i‚de‡
c⁄figLIST_VOLATILE


94 
	#c⁄figLIST_VOLATILE


	)

98 #ifde‡
__˝lu•lus


108 #i‡–
c⁄figUSE_LIST_DATA_INTEGRITY_CHECK_BYTES
 == 0 )

110 
	#li°FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE


	)

111 
	#li°SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE


	)

112 
	#li°FIRST_LIST_INTEGRITY_CHECK_VALUE


	)

113 
	#li°SECOND_LIST_INTEGRITY_CHECK_VALUE


	)

114 
	#li°SET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE
–
pxIãm
 )

	)

115 
	#li°SET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE
–
pxIãm
 )

	)

116 
	#li°SET_LIST_INTEGRITY_CHECK_1_VALUE
–
pxLi°
 )

	)

117 
	#li°SET_LIST_INTEGRITY_CHECK_2_VALUE
–
pxLi°
 )

	)

118 
	#li°TEST_LIST_ITEM_INTEGRITY
–
pxIãm
 )

	)

119 
	#li°TEST_LIST_INTEGRITY
–
pxLi°
 )

	)

122 
	#li°FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE
 
TickTy≥_t
 
xLi°IãmI¡egrôyVÆue1
;

	)

123 
	#li°SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE
 
TickTy≥_t
 
xLi°IãmI¡egrôyVÆue2
;

	)

124 
	#li°FIRST_LIST_INTEGRITY_CHECK_VALUE
 
TickTy≥_t
 
xLi°I¡egrôyVÆue1
;

	)

125 
	#li°SECOND_LIST_INTEGRITY_CHECK_VALUE
 
TickTy≥_t
 
xLi°I¡egrôyVÆue2
;

	)

128 
	#li°SET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE
–
pxIãm
 ) (ÖxIãm )->
xLi°IãmI¡egrôyVÆue1
 = 
pdINTEGRITY_CHECK_VALUE


	)

129 
	#li°SET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE
–
pxIãm
 ) (ÖxIãm )->
xLi°IãmI¡egrôyVÆue2
 = 
pdINTEGRITY_CHECK_VALUE


	)

130 
	#li°SET_LIST_INTEGRITY_CHECK_1_VALUE
–
pxLi°
 ) (ÖxLi° )->
xLi°I¡egrôyVÆue1
 = 
pdINTEGRITY_CHECK_VALUE


	)

131 
	#li°SET_LIST_INTEGRITY_CHECK_2_VALUE
–
pxLi°
 ) (ÖxLi° )->
xLi°I¡egrôyVÆue2
 = 
pdINTEGRITY_CHECK_VALUE


	)

135 
	#li°TEST_LIST_ITEM_INTEGRITY
–
pxIãm
 ) 
	`c⁄figASSERT
–––pxIãm )->
xLi°IãmI¡egrôyVÆue1
 =
pdINTEGRITY_CHECK_VALUE
 ) && ( (ÖxIãm )->
xLi°IãmI¡egrôyVÆue2
 =pdINTEGRITY_CHECK_VALUE ) )

	)

136 
	#li°TEST_LIST_INTEGRITY
–
pxLi°
 ) 
	`c⁄figASSERT
–––pxLi° )->
xLi°I¡egrôyVÆue1
 =
pdINTEGRITY_CHECK_VALUE
 ) && ( (ÖxLi° )->
xLi°I¡egrôyVÆue2
 =pdINTEGRITY_CHECK_VALUE ) )

	)

143 
	gxLIST
;

144 
	sxLIST_ITEM


146 
li°FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE


147 
c⁄figLIST_VOLATILE
 
TickTy≥_t
 
	gxIãmVÆue
;

148 
xLIST_ITEM
 * 
c⁄figLIST_VOLATILE
 
	gpxNext
;

149 
xLIST_ITEM
 * 
c⁄figLIST_VOLATILE
 
	gpxPªvious
;

150 * 
	gpvOw√r
;

151 
xLIST
 * 
c⁄figLIST_VOLATILE
 
	gpxC⁄èöî
;

152 
	gli°SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE


154 
xLIST_ITEM
 
	tLi°Iãm_t
;

156 
	sxMINI_LIST_ITEM


158 
li°FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE


159 
c⁄figLIST_VOLATILE
 
TickTy≥_t
 
	gxIãmVÆue
;

160 
xLIST_ITEM
 * 
c⁄figLIST_VOLATILE
 
	gpxNext
;

161 
xLIST_ITEM
 * 
c⁄figLIST_VOLATILE
 
	gpxPªvious
;

163 
xMINI_LIST_ITEM
 
	tMöiLi°Iãm_t
;

168 
	sxLIST


170 
li°FIRST_LIST_INTEGRITY_CHECK_VALUE


171 vﬁ©ûê
UBa£Ty≥_t
 
	guxNumbîOfIãms
;

172 
Li°Iãm_t
 * 
c⁄figLIST_VOLATILE
 
	gpxIndex
;

173 
MöiLi°Iãm_t
 
	gxLi°End
;

174 
	gli°SECOND_LIST_INTEGRITY_CHECK_VALUE


175 } 
	tLi°_t
;

184 
	#li°SET_LIST_ITEM_OWNER
–
pxLi°Iãm
, 
pxOw√r
 ) ( (ÖxLi°Iãm )->
pvOw√r
 = ( * ) (ÖxOw√∏Ë)

	)

193 
	#li°GET_LIST_ITEM_OWNER
–
pxLi°Iãm
 ) ( (ÖxLi°Iãm )->
pvOw√r
 )

	)

202 
	#li°SET_LIST_ITEM_VALUE
–
pxLi°Iãm
, 
xVÆue
 ) ( (ÖxLi°Iãm )->
xIãmVÆue
 = ( xVÆuêË)

	)

212 
	#li°GET_LIST_ITEM_VALUE
–
pxLi°Iãm
 ) ( (ÖxLi°Iãm )->
xIãmVÆue
 )

	)

221 
	#li°GET_ITEM_VALUE_OF_HEAD_ENTRY
–
pxLi°
 ) ( ( (ÖxLi° )->
xLi°End
 ).
pxNext
->
xIãmVÆue
 )

	)

229 
	#li°GET_HEAD_ENTRY
–
pxLi°
 ) ( ( (ÖxLi° )->
xLi°End
 ).
pxNext
 )

	)

237 
	#li°GET_NEXT
–
pxLi°Iãm
 ) ( (ÖxLi°Iãm )->
pxNext
 )

	)

245 
	#li°GET_END_MARKER
–
pxLi°
 ) ( ( 
Li°Iãm_t
 c⁄° * ) ( &––pxLi° )->
xLi°End
 ) ) )

	)

254 
	#li°LIST_IS_EMPTY
–
pxLi°
 ) ( ( (ÖxLi° )->
uxNumbîOfIãms
 =–
UBa£Ty≥_t
 ) 0 ) ? 
pdTRUE
 : 
pdFALSE
 )

	)

259 
	#li°CURRENT_LIST_LENGTH
–
pxLi°
 ) ( (ÖxLi° )->
uxNumbîOfIãms
 )

	)

281 
	#li°GET_OWNER_OF_NEXT_ENTRY
–
pxTCB
, 
pxLi°
 ) \

283 
Li°_t
 * c⁄° 
pxC⁄°Li°
 = ( 
pxLi°
 ); \

286 –
pxC⁄°Li°
 )->
pxIndex
 = (ÖxC⁄°Li° )->pxIndex->
pxNext
; \

287 if––* ) ( 
pxC⁄°Li°
 )->
pxIndex
 =–* ) &––pxC⁄°Li° )->
xLi°End
 ) ) \

289 –
pxC⁄°Li°
 )->
pxIndex
 = (ÖxC⁄°Li° )->pxIndex->
pxNext
; \

291 –
pxTCB
 ) = ( 
pxC⁄°Li°
 )->
pxIndex
->
pvOw√r
; \

292 }

	)

310 
	#li°REMOVE_ITEM
–
pxIãmToRemove
 ) \

314 
Li°_t
 * c⁄° 
pxLi°
 = ( 
pxIãmToRemove
 )->
pxC⁄èöî
; \

316 –
pxIãmToRemove
 )->
pxNext
->
pxPªvious
 = (ÖxItemToRemove )->pxPrevious; \

317 –
pxIãmToRemove
 )->
pxPªvious
->
pxNext
 = (ÖxItemToRemove )->pxNext; \

319 if–
pxLi°
->
pxIndex
 =–
pxIãmToRemove
 ) ) \

321 
pxLi°
->
pxIndex
 = ( 
pxIãmToRemove
 )->
pxPªvious
; \

324 –
pxIãmToRemove
 )->
pxC⁄èöî
 = 
NULL
; \

325 –
pxLi°
->
uxNumbîOfIãms
 )--; \

326 }

	)

350 
	#li°INSERT_END
–
pxLi°
, 
pxNewLi°Iãm
 ) \

352 
Li°Iãm_t
 * c⁄° 
pxIndex
 = ( 
pxLi°
 )->pxIndex; \

357 
	`li°TEST_LIST_INTEGRITY
––
pxLi°
 ) ); \

358 
	`li°TEST_LIST_ITEM_INTEGRITY
––
pxNewLi°Iãm
 ) ); \

363 –
pxNewLi°Iãm
 )->
pxNext
 = 
pxIndex
; \

364 –
pxNewLi°Iãm
 )->
pxPªvious
 = 
pxIndex
->pxPrevious; \

366 
pxIndex
->
pxPªvious
->
pxNext
 = ( 
pxNewLi°Iãm
 ); \

367 
pxIndex
->
pxPªvious
 = ( 
pxNewLi°Iãm
 ); \

370 –
pxNewLi°Iãm
 )->
pxC⁄èöî
 = ( 
pxLi°
 ); \

372 ––
pxLi°
 )->
uxNumbîOfIãms
 )++; \

373 }

	)

391 
	#li°GET_OWNER_OF_HEAD_ENTRY
–
pxLi°
 ) ( ( &––pxLi° )->
xLi°End
 ) )->
pxNext
->
pvOw√r
 )

	)

402 
	#li°IS_CONTAINED_WITHIN
–
pxLi°
, 
pxLi°Iãm
 ) ( ( (ÖxLi°Iãm )->
pxC⁄èöî
 =–pxLi° ) ) ? ( 
pdTRUE
 ) : ( 
pdFALSE
 ) )

	)

410 
	#li°LIST_ITEM_CONTAINER
–
pxLi°Iãm
 ) ( (ÖxLi°Iãm )->
pxC⁄èöî
 )

	)

417 
	#li°LIST_IS_INITIALISED
–
pxLi°
 ) ( (ÖxLi° )->
xLi°End
.
xIãmVÆue
 =
p‹tMAX_DELAY
 )

	)

429 
vLi°Inôüli£
–
Li°_t
 * c⁄° 
pxLi°
 ) 
	gPRIVILEGED_FUNCTION
;

440 
vLi°Inôüli£Iãm
–
Li°Iãm_t
 * c⁄° 
pxIãm
 ) 
	gPRIVILEGED_FUNCTION
;

453 
vLi°In£π
–
Li°_t
 * c⁄° 
pxLi°
,

454 
Li°Iãm_t
 * c⁄° 
pxNewLi°Iãm
 ) 
	gPRIVILEGED_FUNCTION
;

475 
vLi°In£πEnd
–
Li°_t
 * c⁄° 
pxLi°
,

476 
Li°Iãm_t
 * c⁄° 
pxNewLi°Iãm
 ) 
	gPRIVILEGED_FUNCTION
;

491 
UBa£Ty≥_t
 
uxLi°Remove
–
Li°Iãm_t
 * c⁄° 
pxIãmToRemove
 ) 
	gPRIVILEGED_FUNCTION
;

494 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\message_buffer.h

63 #i‚de‡
FREERTOS_MESSAGE_BUFFER_H


64 
	#FREERTOS_MESSAGE_BUFFER_H


	)

66 #i‚de‡
INC_FREERTOS_H


71 
	~"°ªam_buf„r.h
"

74 #i‡
deföed
–
__˝lu•lus
 )

85 * 
	tMesßgeBuf„rH™dÀ_t
;

145 
	#xMesßgeBuf„rCª©e
–
xBuf„rSizeByãs
 ) \

146 –
MesßgeBuf„rH™dÀ_t
 ) 
	`xSåómBuf„rGíîicCª©e
–
xBuf„rSizeByãs
, ( 
size_t
 ) 0, 
pdTRUE
 )

	)

212 
	#xMesßgeBuf„rCª©eSètic
–
xBuf„rSizeByãs
, 
pucMesßgeBuf„rSt‹ageAªa
, 
pxSèticMesßgeBuf„r
 ) \

213 –
MesßgeBuf„rH™dÀ_t
 ) 
	`xSåómBuf„rGíîicCª©eSètic
–
xBuf„rSizeByãs
, 0, 
pdTRUE
, 
pucMesßgeBuf„rSt‹ageAªa
, 
pxSèticMesßgeBuf„r
 )

	)

312 
	#xMesßgeBuf„rSíd
–
xMesßgeBuf„r
, 
pvTxD©a
, 
xD©aLígthByãs
, 
xTicksToWaô
 ) \

313 
	`xSåómBuf„rSíd
––
SåómBuf„rH™dÀ_t
 ) 
xMesßgeBuf„r
, 
pvTxD©a
, 
xD©aLígthByãs
, 
xTicksToWaô
 )

	)

417 
	#xMesßgeBuf„rSídFromISR
–
xMesßgeBuf„r
, 
pvTxD©a
, 
xD©aLígthByãs
, 
pxHighîPri‹ôyTaskWokí
 ) \

418 
	`xSåómBuf„rSídFromISR
––
SåómBuf„rH™dÀ_t
 ) 
xMesßgeBuf„r
, 
pvTxD©a
, 
xD©aLígthByãs
, 
pxHighîPri‹ôyTaskWokí
 )

	)

506 
	#xMesßgeBuf„rRe˚ive
–
xMesßgeBuf„r
, 
pvRxD©a
, 
xBuf„rLígthByãs
, 
xTicksToWaô
 ) \

507 
	`xSåómBuf„rRe˚ive
––
SåómBuf„rH™dÀ_t
 ) 
xMesßgeBuf„r
, 
pvRxD©a
, 
xBuf„rLígthByãs
, 
xTicksToWaô
 )

	)

608 
	#xMesßgeBuf„rRe˚iveFromISR
–
xMesßgeBuf„r
, 
pvRxD©a
, 
xBuf„rLígthByãs
, 
pxHighîPri‹ôyTaskWokí
 ) \

609 
	`xSåómBuf„rRe˚iveFromISR
––
SåómBuf„rH™dÀ_t
 ) 
xMesßgeBuf„r
, 
pvRxD©a
, 
xBuf„rLígthByãs
, 
pxHighîPri‹ôyTaskWokí
 )

	)

629 
	#vMesßgeBuf„rDñëe
–
xMesßgeBuf„r
 ) \

630 
	`vSåómBuf„rDñëe
––
SåómBuf„rH™dÀ_t
 ) 
xMesßgeBuf„r
 )

	)

647 
	#xMesßgeBuf„rIsFuŒ
–
xMesßgeBuf„r
 ) \

648 
	`xSåómBuf„rIsFuŒ
––
SåómBuf„rH™dÀ_t
 ) 
xMesßgeBuf„r
 )

	)

664 
	#xMesßgeBuf„rIsEm±y
–
xMesßgeBuf„r
 ) \

665 
	`xSåómBuf„rIsEm±y
––
SåómBuf„rH™dÀ_t
 ) 
xMesßgeBuf„r
 )

	)

688 
	#xMesßgeBuf„rRe£t
–
xMesßgeBuf„r
 ) \

689 
	`xSåómBuf„rRe£t
––
SåómBuf„rH™dÀ_t
 ) 
xMesßgeBuf„r
 )

	)

711 
	#xMesßgeBuf„rS∑˚AvaûabÀ
–
xMesßgeBuf„r
 ) \

712 
	`xSåómBuf„rS∑˚sAvaûabÀ
––
SåómBuf„rH™dÀ_t
 ) 
xMesßgeBuf„r
 )

	)

713 
	#xMesßgeBuf„rS∑˚sAvaûabÀ
–
xMesßgeBuf„r
 ) \

714 
	`xSåómBuf„rS∑˚sAvaûabÀ
––
SåómBuf„rH™dÀ_t
 ) 
xMesßgeBuf„r
 )

	)

733 
	#xMesßgeBuf„rNextLígthByãs
–
xMesßgeBuf„r
 ) \

734 
	`xSåómBuf„rNextMesßgeLígthByãs
––
SåómBuf„rH™dÀ_t
 ) 
xMesßgeBuf„r
 ) 
PRIVILEGED_FUNCTION
;

	)

773 
	#xMesßgeBuf„rSídCom∂ëedFromISR
–
xMesßgeBuf„r
, 
pxHighîPri‹ôyTaskWokí
 ) \

774 
	`xSåómBuf„rSídCom∂ëedFromISR
––
SåómBuf„rH™dÀ_t
 ) 
xMesßgeBuf„r
, 
pxHighîPri‹ôyTaskWokí
 )

	)

814 
	#xMesßgeBuf„rRe˚iveCom∂ëedFromISR
–
xMesßgeBuf„r
, 
pxHighîPri‹ôyTaskWokí
 ) \

815 
	`xSåómBuf„rRe˚iveCom∂ëedFromISR
––
SåómBuf„rH™dÀ_t
 ) 
xMesßgeBuf„r
, 
pxHighîPri‹ôyTaskWokí
 )

	)

818 #i‡
deföed
–
__˝lu•lus
 )

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\mpu_prototypes.h

38 #i‚de‡
MPU_PROTOTYPES_H


39 
	#MPU_PROTOTYPES_H


	)

42 
Ba£Ty≥_t
 
	$MPU_xTaskCª©e
–
TaskFun˘i⁄_t
 
pxTaskCode
,

43 c⁄° * c⁄° 
pcName
,

44 c⁄° 
uöt16_t
 
usSèckDïth
,

45 * c⁄° 
pvP¨amëîs
,

46 
UBa£Ty≥_t
 
uxPri‹ôy
,

47 
TaskH™dÀ_t
 * c⁄° 
pxCª©edTask
 ) 
FREERTOS_SYSTEM_CALL
;

48 
TaskH™dÀ_t
 
	$MPU_xTaskCª©eSètic
–
TaskFun˘i⁄_t
 
pxTaskCode
,

49 c⁄° * c⁄° 
pcName
,

50 c⁄° 
uöt32_t
 
ulSèckDïth
,

51 * c⁄° 
pvP¨amëîs
,

52 
UBa£Ty≥_t
 
uxPri‹ôy
,

53 
SèckTy≥_t
 * c⁄° 
puxSèckBuf„r
,

54 
SèticTask_t
 * c⁄° 
pxTaskBuf„r
 ) 
FREERTOS_SYSTEM_CALL
;

55 
	$MPU_vTaskDñëe
–
TaskH™dÀ_t
 
xTaskToDñëe
 ) 
FREERTOS_SYSTEM_CALL
;

56 
	$MPU_vTaskDñay
–c⁄° 
TickTy≥_t
 
xTicksToDñay
 ) 
FREERTOS_SYSTEM_CALL
;

57 
Ba£Ty≥_t
 
	$MPU_xTaskDñayU¡û
–
TickTy≥_t
 * c⁄° 
pxPªviousWakeTime
,

58 c⁄° 
TickTy≥_t
 
xTimeIn¸emít
 ) 
FREERTOS_SYSTEM_CALL
;

59 
Ba£Ty≥_t
 
	$MPU_xTaskAb‹tDñay
–
TaskH™dÀ_t
 
xTask
 ) 
FREERTOS_SYSTEM_CALL
;

60 
UBa£Ty≥_t
 
	$MPU_uxTaskPri‹ôyGë
–c⁄° 
TaskH™dÀ_t
 
xTask
 ) 
FREERTOS_SYSTEM_CALL
;

61 
eTaskSèã
 
	$MPU_eTaskGëSèã
–
TaskH™dÀ_t
 
xTask
 ) 
FREERTOS_SYSTEM_CALL
;

62 
	$MPU_vTaskGëInfo
–
TaskH™dÀ_t
 
xTask
,

63 
TaskSètus_t
 * 
pxTaskSètus
,

64 
Ba£Ty≥_t
 
xGëFªeSèckS∑˚
,

65 
eTaskSèã
 
eSèã
 ) 
FREERTOS_SYSTEM_CALL
;

66 
	$MPU_vTaskPri‹ôySë
–
TaskH™dÀ_t
 
xTask
,

67 
UBa£Ty≥_t
 
uxNewPri‹ôy
 ) 
FREERTOS_SYSTEM_CALL
;

68 
	$MPU_vTaskSu•íd
–
TaskH™dÀ_t
 
xTaskToSu•íd
 ) 
FREERTOS_SYSTEM_CALL
;

69 
	$MPU_vTaskResume
–
TaskH™dÀ_t
 
xTaskToResume
 ) 
FREERTOS_SYSTEM_CALL
;

70 
	$MPU_vTaskSèπScheduÀr
–Ë
FREERTOS_SYSTEM_CALL
;

71 
	$MPU_vTaskSu•ídAŒ
–Ë
FREERTOS_SYSTEM_CALL
;

72 
Ba£Ty≥_t
 
	$MPU_xTaskResumeAŒ
–Ë
FREERTOS_SYSTEM_CALL
;

73 
TickTy≥_t
 
	$MPU_xTaskGëTickCou¡
–Ë
FREERTOS_SYSTEM_CALL
;

74 
UBa£Ty≥_t
 
	$MPU_uxTaskGëNumbîOfTasks
–Ë
FREERTOS_SYSTEM_CALL
;

75 * 
	$MPU_pcTaskGëName
–
TaskH™dÀ_t
 
xTaskToQuîy
 ) 
FREERTOS_SYSTEM_CALL
;

76 
TaskH™dÀ_t
 
	$MPU_xTaskGëH™dÀ
–c⁄° * 
pcNameToQuîy
 ) 
FREERTOS_SYSTEM_CALL
;

77 
UBa£Ty≥_t
 
	$MPU_uxTaskGëSèckHighW©îM¨k
–
TaskH™dÀ_t
 
xTask
 ) 
FREERTOS_SYSTEM_CALL
;

78 
c⁄figSTACK_DEPTH_TYPE
 
	$MPU_uxTaskGëSèckHighW©îM¨k2
–
TaskH™dÀ_t
 
xTask
 ) 
FREERTOS_SYSTEM_CALL
;

79 
	$MPU_vTaskSëAµliˇti⁄TaskTag
–
TaskH™dÀ_t
 
xTask
,

80 
TaskHookFun˘i⁄_t
 
pxHookFun˘i⁄
 ) 
FREERTOS_SYSTEM_CALL
;

81 
TaskHookFun˘i⁄_t
 
	$MPU_xTaskGëAµliˇti⁄TaskTag
–
TaskH™dÀ_t
 
xTask
 ) 
FREERTOS_SYSTEM_CALL
;

82 
	$MPU_vTaskSëThªadLoˇlSt‹agePoöãr
–
TaskH™dÀ_t
 
xTaskToSë
,

83 
Ba£Ty≥_t
 
xIndex
,

84 * 
pvVÆue
 ) 
FREERTOS_SYSTEM_CALL
;

85 * 
	$MPU_pvTaskGëThªadLoˇlSt‹agePoöãr
–
TaskH™dÀ_t
 
xTaskToQuîy
,

86 
Ba£Ty≥_t
 
xIndex
 ) 
FREERTOS_SYSTEM_CALL
;

87 
Ba£Ty≥_t
 
	$MPU_xTaskCÆlAµliˇti⁄TaskHook
–
TaskH™dÀ_t
 
xTask
,

88 * 
pvP¨amëî
 ) 
FREERTOS_SYSTEM_CALL
;

89 
TaskH™dÀ_t
 
	$MPU_xTaskGëIdÀTaskH™dÀ
–Ë
FREERTOS_SYSTEM_CALL
;

90 
UBa£Ty≥_t
 
	$MPU_uxTaskGëSy°emSèã
–
TaskSètus_t
 * c⁄° 
pxTaskSètusAºay
,

91 c⁄° 
UBa£Ty≥_t
 
uxAºaySize
,

92 
c⁄figRUN_TIME_COUNTER_TYPE
 * c⁄° 
pulTŸÆRunTime
 ) 
FREERTOS_SYSTEM_CALL
;

93 
c⁄figRUN_TIME_COUNTER_TYPE
 
	$MPU_ulTaskGëIdÀRunTimeCou¡î
–Ë
FREERTOS_SYSTEM_CALL
;

94 
c⁄figRUN_TIME_COUNTER_TYPE
 
	$MPU_ulTaskGëIdÀRunTimePî˚¡
–Ë
FREERTOS_SYSTEM_CALL
;

95 
	$MPU_vTaskLi°
–* 
pcWrôeBuf„r
 ) 
FREERTOS_SYSTEM_CALL
;

96 
	$MPU_vTaskGëRunTimeSèts
–* 
pcWrôeBuf„r
 ) 
FREERTOS_SYSTEM_CALL
;

97 
Ba£Ty≥_t
 
	$MPU_xTaskGíîicNŸify
–
TaskH™dÀ_t
 
xTaskToNŸify
,

98 
UBa£Ty≥_t
 
uxIndexToNŸify
,

99 
uöt32_t
 
ulVÆue
,

100 
eNŸifyA˘i⁄
 
eA˘i⁄
,

101 
uöt32_t
 * 
pulPªviousNŸifiˇti⁄VÆue
 ) 
FREERTOS_SYSTEM_CALL
;

102 
Ba£Ty≥_t
 
	$MPU_xTaskGíîicNŸifyWaô
–
UBa£Ty≥_t
 
uxIndexToWaôOn
,

103 
uöt32_t
 
ulBôsToCÀ¨OnE¡ry
,

104 
uöt32_t
 
ulBôsToCÀ¨OnExô
,

105 
uöt32_t
 * 
pulNŸifiˇti⁄VÆue
,

106 
TickTy≥_t
 
xTicksToWaô
 ) 
FREERTOS_SYSTEM_CALL
;

107 
uöt32_t
 
	$MPU_ulTaskGíîicNŸifyTake
–
UBa£Ty≥_t
 
uxIndexToWaôOn
,

108 
Ba£Ty≥_t
 
xCÀ¨Cou¡OnExô
,

109 
TickTy≥_t
 
xTicksToWaô
 ) 
FREERTOS_SYSTEM_CALL
;

110 
Ba£Ty≥_t
 
	$MPU_xTaskGíîicNŸifySèãCÀ¨
–
TaskH™dÀ_t
 
xTask
,

111 
UBa£Ty≥_t
 
uxIndexToCÀ¨
 ) 
FREERTOS_SYSTEM_CALL
;

112 
uöt32_t
 
	$MPU_ulTaskGíîicNŸifyVÆueCÀ¨
–
TaskH™dÀ_t
 
xTask
,

113 
UBa£Ty≥_t
 
uxIndexToCÀ¨
,

114 
uöt32_t
 
ulBôsToCÀ¨
 ) 
FREERTOS_SYSTEM_CALL
;

115 
Ba£Ty≥_t
 
	$MPU_xTaskIn¸emítTick
–Ë
FREERTOS_SYSTEM_CALL
;

116 
TaskH™dÀ_t
 
	$MPU_xTaskGëCuºítTaskH™dÀ
–Ë
FREERTOS_SYSTEM_CALL
;

117 
	$MPU_vTaskSëTimeOutSèã
–
TimeOut_t
 * c⁄° 
pxTimeOut
 ) 
FREERTOS_SYSTEM_CALL
;

118 
Ba£Ty≥_t
 
	$MPU_xTaskCheckF‹TimeOut
–
TimeOut_t
 * c⁄° 
pxTimeOut
,

119 
TickTy≥_t
 * c⁄° 
pxTicksToWaô
 ) 
FREERTOS_SYSTEM_CALL
;

120 
	$MPU_vTaskMis£dYõld
–Ë
FREERTOS_SYSTEM_CALL
;

121 
Ba£Ty≥_t
 
	$MPU_xTaskGëScheduÀrSèã
–Ë
FREERTOS_SYSTEM_CALL
;

122 
Ba£Ty≥_t
 
	$MPU_xTaskC©chUpTicks
–
TickTy≥_t
 
xTicksToC©chUp
 ) 
FREERTOS_SYSTEM_CALL
;

125 
Ba£Ty≥_t
 
	$MPU_xQueueGíîicSíd
–
QueueH™dÀ_t
 
xQueue
,

126 c⁄° * c⁄° 
pvIãmToQueue
,

127 
TickTy≥_t
 
xTicksToWaô
,

128 c⁄° 
Ba£Ty≥_t
 
xC›yPosôi⁄
 ) 
FREERTOS_SYSTEM_CALL
;

129 
Ba£Ty≥_t
 
	$MPU_xQueueRe˚ive
–
QueueH™dÀ_t
 
xQueue
,

130 * c⁄° 
pvBuf„r
,

131 
TickTy≥_t
 
xTicksToWaô
 ) 
FREERTOS_SYSTEM_CALL
;

132 
Ba£Ty≥_t
 
	$MPU_xQueuePìk
–
QueueH™dÀ_t
 
xQueue
,

133 * c⁄° 
pvBuf„r
,

134 
TickTy≥_t
 
xTicksToWaô
 ) 
FREERTOS_SYSTEM_CALL
;

135 
Ba£Ty≥_t
 
	$MPU_xQueueSem≠h‹eTake
–
QueueH™dÀ_t
 
xQueue
,

136 
TickTy≥_t
 
xTicksToWaô
 ) 
FREERTOS_SYSTEM_CALL
;

137 
UBa£Ty≥_t
 
	$MPU_uxQueueMesßgesWaôög
–c⁄° 
QueueH™dÀ_t
 
xQueue
 ) 
FREERTOS_SYSTEM_CALL
;

138 
UBa£Ty≥_t
 
	$MPU_uxQueueS∑˚sAvaûabÀ
–c⁄° 
QueueH™dÀ_t
 
xQueue
 ) 
FREERTOS_SYSTEM_CALL
;

139 
	$MPU_vQueueDñëe
–
QueueH™dÀ_t
 
xQueue
 ) 
FREERTOS_SYSTEM_CALL
;

140 
QueueH™dÀ_t
 
	$MPU_xQueueCª©eMuãx
–c⁄° 
uöt8_t
 
ucQueueTy≥
 ) 
FREERTOS_SYSTEM_CALL
;

141 
QueueH™dÀ_t
 
	$MPU_xQueueCª©eMuãxSètic
–c⁄° 
uöt8_t
 
ucQueueTy≥
,

142 
SèticQueue_t
 * 
pxSèticQueue
 ) 
FREERTOS_SYSTEM_CALL
;

143 
QueueH™dÀ_t
 
	$MPU_xQueueCª©eCou¡ögSem≠h‹e
–c⁄° 
UBa£Ty≥_t
 
uxMaxCou¡
,

144 c⁄° 
UBa£Ty≥_t
 
uxInôülCou¡
 ) 
FREERTOS_SYSTEM_CALL
;

145 
QueueH™dÀ_t
 
	$MPU_xQueueCª©eCou¡ögSem≠h‹eSètic
–c⁄° 
UBa£Ty≥_t
 
uxMaxCou¡
,

146 c⁄° 
UBa£Ty≥_t
 
uxInôülCou¡
,

147 
SèticQueue_t
 * 
pxSèticQueue
 ) 
FREERTOS_SYSTEM_CALL
;

148 
TaskH™dÀ_t
 
	$MPU_xQueueGëMuãxHﬁdî
–
QueueH™dÀ_t
 
xSem≠h‹e
 ) 
FREERTOS_SYSTEM_CALL
;

149 
Ba£Ty≥_t
 
	$MPU_xQueueTakeMuãxRecursive
–
QueueH™dÀ_t
 
xMuãx
,

150 
TickTy≥_t
 
xTicksToWaô
 ) 
FREERTOS_SYSTEM_CALL
;

151 
Ba£Ty≥_t
 
	$MPU_xQueueGiveMuãxRecursive
–
QueueH™dÀ_t
 
pxMuãx
 ) 
FREERTOS_SYSTEM_CALL
;

152 
	$MPU_vQueueAddToRegi°ry
–
QueueH™dÀ_t
 
xQueue
,

153 c⁄° * 
pcName
 ) 
FREERTOS_SYSTEM_CALL
;

154 
	$MPU_vQueueUƒegi°îQueue
–
QueueH™dÀ_t
 
xQueue
 ) 
FREERTOS_SYSTEM_CALL
;

155 c⁄° * 
	$MPU_pcQueueGëName
–
QueueH™dÀ_t
 
xQueue
 ) 
FREERTOS_SYSTEM_CALL
;

156 
QueueH™dÀ_t
 
	$MPU_xQueueGíîicCª©e
–c⁄° 
UBa£Ty≥_t
 
uxQueueLígth
,

157 c⁄° 
UBa£Ty≥_t
 
uxIãmSize
,

158 c⁄° 
uöt8_t
 
ucQueueTy≥
 ) 
FREERTOS_SYSTEM_CALL
;

159 
QueueH™dÀ_t
 
	$MPU_xQueueGíîicCª©eSètic
–c⁄° 
UBa£Ty≥_t
 
uxQueueLígth
,

160 c⁄° 
UBa£Ty≥_t
 
uxIãmSize
,

161 
uöt8_t
 * 
pucQueueSt‹age
,

162 
SèticQueue_t
 * 
pxSèticQueue
,

163 c⁄° 
uöt8_t
 
ucQueueTy≥
 ) 
FREERTOS_SYSTEM_CALL
;

164 
QueueSëH™dÀ_t
 
	$MPU_xQueueCª©eSë
–c⁄° 
UBa£Ty≥_t
 
uxEvítQueueLígth
 ) 
FREERTOS_SYSTEM_CALL
;

165 
Ba£Ty≥_t
 
	$MPU_xQueueAddToSë
–
QueueSëMembîH™dÀ_t
 
xQueueOrSem≠h‹e
,

166 
QueueSëH™dÀ_t
 
xQueueSë
 ) 
FREERTOS_SYSTEM_CALL
;

167 
Ba£Ty≥_t
 
	$MPU_xQueueRemoveFromSë
–
QueueSëMembîH™dÀ_t
 
xQueueOrSem≠h‹e
,

168 
QueueSëH™dÀ_t
 
xQueueSë
 ) 
FREERTOS_SYSTEM_CALL
;

169 
QueueSëMembîH™dÀ_t
 
	$MPU_xQueueSñe˘FromSë
–
QueueSëH™dÀ_t
 
xQueueSë
,

170 c⁄° 
TickTy≥_t
 
xTicksToWaô
 ) 
FREERTOS_SYSTEM_CALL
;

171 
Ba£Ty≥_t
 
	$MPU_xQueueGíîicRe£t
–
QueueH™dÀ_t
 
xQueue
,

172 
Ba£Ty≥_t
 
xNewQueue
 ) 
FREERTOS_SYSTEM_CALL
;

173 
	$MPU_vQueueSëQueueNumbî
–
QueueH™dÀ_t
 
xQueue
,

174 
UBa£Ty≥_t
 
uxQueueNumbî
 ) 
FREERTOS_SYSTEM_CALL
;

175 
UBa£Ty≥_t
 
	$MPU_uxQueueGëQueueNumbî
–
QueueH™dÀ_t
 
xQueue
 ) 
FREERTOS_SYSTEM_CALL
;

176 
uöt8_t
 
	$MPU_ucQueueGëQueueTy≥
–
QueueH™dÀ_t
 
xQueue
 ) 
FREERTOS_SYSTEM_CALL
;

179 
TimîH™dÀ_t
 
	$MPU_xTimîCª©e
–c⁄° * c⁄° 
pcTimîName
,

180 c⁄° 
TickTy≥_t
 
xTimîPîiodInTicks
,

181 c⁄° 
UBa£Ty≥_t
 
uxAutoRñﬂd
,

182 * c⁄° 
pvTimîID
,

183 
TimîCÆlbackFun˘i⁄_t
 
pxCÆlbackFun˘i⁄
 ) 
FREERTOS_SYSTEM_CALL
;

184 
TimîH™dÀ_t
 
	$MPU_xTimîCª©eSètic
–c⁄° * c⁄° 
pcTimîName
,

185 c⁄° 
TickTy≥_t
 
xTimîPîiodInTicks
,

186 c⁄° 
UBa£Ty≥_t
 
uxAutoRñﬂd
,

187 * c⁄° 
pvTimîID
,

188 
TimîCÆlbackFun˘i⁄_t
 
pxCÆlbackFun˘i⁄
,

189 
SèticTimî_t
 * 
pxTimîBuf„r
 ) 
FREERTOS_SYSTEM_CALL
;

190 * 
	$MPU_pvTimîGëTimîID
–c⁄° 
TimîH™dÀ_t
 
xTimî
 ) 
FREERTOS_SYSTEM_CALL
;

191 
	$MPU_vTimîSëTimîID
–
TimîH™dÀ_t
 
xTimî
,

192 * 
pvNewID
 ) 
FREERTOS_SYSTEM_CALL
;

193 
Ba£Ty≥_t
 
	$MPU_xTimîIsTimîA˘ive
–
TimîH™dÀ_t
 
xTimî
 ) 
FREERTOS_SYSTEM_CALL
;

194 
TaskH™dÀ_t
 
	$MPU_xTimîGëTimîD´m⁄TaskH™dÀ
–Ë
FREERTOS_SYSTEM_CALL
;

195 
Ba£Ty≥_t
 
	$MPU_xTimîPídFun˘i⁄CÆl
–
PídedFun˘i⁄_t
 
xFun˘i⁄ToPíd
,

196 * 
pvP¨amëî1
,

197 
uöt32_t
 
ulP¨amëî2
,

198 
TickTy≥_t
 
xTicksToWaô
 ) 
FREERTOS_SYSTEM_CALL
;

199 c⁄° * 
	$MPU_pcTimîGëName
–
TimîH™dÀ_t
 
xTimî
 ) 
FREERTOS_SYSTEM_CALL
;

200 
	$MPU_vTimîSëRñﬂdMode
–
TimîH™dÀ_t
 
xTimî
,

201 c⁄° 
UBa£Ty≥_t
 
uxAutoRñﬂd
 ) 
FREERTOS_SYSTEM_CALL
;

202 
UBa£Ty≥_t
 
	$MPU_uxTimîGëRñﬂdMode
–
TimîH™dÀ_t
 
xTimî
 ) 
FREERTOS_SYSTEM_CALL
;

203 
TickTy≥_t
 
	$MPU_xTimîGëPîiod
–
TimîH™dÀ_t
 
xTimî
 ) 
FREERTOS_SYSTEM_CALL
;

204 
TickTy≥_t
 
	$MPU_xTimîGëExpúyTime
–
TimîH™dÀ_t
 
xTimî
 ) 
FREERTOS_SYSTEM_CALL
;

205 
Ba£Ty≥_t
 
	$MPU_xTimîCª©eTimîTask
–Ë
FREERTOS_SYSTEM_CALL
;

206 
Ba£Ty≥_t
 
	$MPU_xTimîGíîicComm™d
–
TimîH™dÀ_t
 
xTimî
,

207 c⁄° 
Ba£Ty≥_t
 
xComm™dID
,

208 c⁄° 
TickTy≥_t
 
xO±i⁄ÆVÆue
,

209 
Ba£Ty≥_t
 * c⁄° 
pxHighîPri‹ôyTaskWokí
,

210 c⁄° 
TickTy≥_t
 
xTicksToWaô
 ) 
FREERTOS_SYSTEM_CALL
;

213 
EvítGroupH™dÀ_t
 
	$MPU_xEvítGroupCª©e
–Ë
FREERTOS_SYSTEM_CALL
;

214 
EvítGroupH™dÀ_t
 
	$MPU_xEvítGroupCª©eSètic
–
SèticEvítGroup_t
 * 
pxEvítGroupBuf„r
 ) 
FREERTOS_SYSTEM_CALL
;

215 
EvítBôs_t
 
	$MPU_xEvítGroupWaôBôs
–
EvítGroupH™dÀ_t
 
xEvítGroup
,

216 c⁄° 
EvítBôs_t
 
uxBôsToWaôF‹
,

217 c⁄° 
Ba£Ty≥_t
 
xCÀ¨OnExô
,

218 c⁄° 
Ba£Ty≥_t
 
xWaôF‹AŒBôs
,

219 
TickTy≥_t
 
xTicksToWaô
 ) 
FREERTOS_SYSTEM_CALL
;

220 
EvítBôs_t
 
	$MPU_xEvítGroupCÀ¨Bôs
–
EvítGroupH™dÀ_t
 
xEvítGroup
,

221 c⁄° 
EvítBôs_t
 
uxBôsToCÀ¨
 ) 
FREERTOS_SYSTEM_CALL
;

222 
EvítBôs_t
 
	$MPU_xEvítGroupSëBôs
–
EvítGroupH™dÀ_t
 
xEvítGroup
,

223 c⁄° 
EvítBôs_t
 
uxBôsToSë
 ) 
FREERTOS_SYSTEM_CALL
;

224 
EvítBôs_t
 
	$MPU_xEvítGroupSync
–
EvítGroupH™dÀ_t
 
xEvítGroup
,

225 c⁄° 
EvítBôs_t
 
uxBôsToSë
,

226 c⁄° 
EvítBôs_t
 
uxBôsToWaôF‹
,

227 
TickTy≥_t
 
xTicksToWaô
 ) 
FREERTOS_SYSTEM_CALL
;

228 
	$MPU_vEvítGroupDñëe
–
EvítGroupH™dÀ_t
 
xEvítGroup
 ) 
FREERTOS_SYSTEM_CALL
;

229 
UBa£Ty≥_t
 
	$MPU_uxEvítGroupGëNumbî
–* 
xEvítGroup
 ) 
FREERTOS_SYSTEM_CALL
;

232 
size_t
 
	$MPU_xSåómBuf„rSíd
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
,

233 c⁄° * 
pvTxD©a
,

234 
size_t
 
xD©aLígthByãs
,

235 
TickTy≥_t
 
xTicksToWaô
 ) 
FREERTOS_SYSTEM_CALL
;

236 
size_t
 
	$MPU_xSåómBuf„rRe˚ive
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
,

237 * 
pvRxD©a
,

238 
size_t
 
xBuf„rLígthByãs
,

239 
TickTy≥_t
 
xTicksToWaô
 ) 
FREERTOS_SYSTEM_CALL
;

240 
size_t
 
	$MPU_xSåómBuf„rNextMesßgeLígthByãs
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 ) 
FREERTOS_SYSTEM_CALL
;

241 
	$MPU_vSåómBuf„rDñëe
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 ) 
FREERTOS_SYSTEM_CALL
;

242 
Ba£Ty≥_t
 
	$MPU_xSåómBuf„rIsFuŒ
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 ) 
FREERTOS_SYSTEM_CALL
;

243 
Ba£Ty≥_t
 
	$MPU_xSåómBuf„rIsEm±y
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 ) 
FREERTOS_SYSTEM_CALL
;

244 
Ba£Ty≥_t
 
	$MPU_xSåómBuf„rRe£t
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 ) 
FREERTOS_SYSTEM_CALL
;

245 
size_t
 
	$MPU_xSåómBuf„rS∑˚sAvaûabÀ
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 ) 
FREERTOS_SYSTEM_CALL
;

246 
size_t
 
	$MPU_xSåómBuf„rByãsAvaûabÀ
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 ) 
FREERTOS_SYSTEM_CALL
;

247 
Ba£Ty≥_t
 
	$MPU_xSåómBuf„rSëTriggîLevñ
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
,

248 
size_t
 
xTriggîLevñ
 ) 
FREERTOS_SYSTEM_CALL
;

249 
SåómBuf„rH™dÀ_t
 
	$MPU_xSåómBuf„rGíîicCª©e
–
size_t
 
xBuf„rSizeByãs
,

250 
size_t
 
xTriggîLevñByãs
,

251 
Ba£Ty≥_t
 
xIsMesßgeBuf„r
 ) 
FREERTOS_SYSTEM_CALL
;

252 
SåómBuf„rH™dÀ_t
 
	$MPU_xSåómBuf„rGíîicCª©eSètic
–
size_t
 
xBuf„rSizeByãs
,

253 
size_t
 
xTriggîLevñByãs
,

254 
Ba£Ty≥_t
 
xIsMesßgeBuf„r
,

255 
uöt8_t
 * c⁄° 
pucSåómBuf„rSt‹ageAªa
,

256 
SèticSåómBuf„r_t
 * c⁄° 
pxSèticSåómBuf„r
 ) 
FREERTOS_SYSTEM_CALL
;

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\mpu_wrappers.h

29 #i‚de‡
MPU_WRAPPERS_H


30 
	#MPU_WRAPPERS_H


	)

34 #i‡–
p‹tUSING_MPU_WRAPPERS
 == 1 )

39 #i‚de‡
MPU_WRAPPERS_INCLUDED_FROM_API_FILE


50 
	#xTaskCª©e
 
MPU_xTaskCª©e


	)

51 
	#xTaskCª©eSètic
 
MPU_xTaskCª©eSètic


	)

52 
	#vTaskDñëe
 
MPU_vTaskDñëe


	)

53 
	#vTaskDñay
 
MPU_vTaskDñay


	)

54 
	#xTaskDñayU¡û
 
MPU_xTaskDñayU¡û


	)

55 
	#xTaskAb‹tDñay
 
MPU_xTaskAb‹tDñay


	)

56 
	#uxTaskPri‹ôyGë
 
MPU_uxTaskPri‹ôyGë


	)

57 
	#eTaskGëSèã
 
MPU_eTaskGëSèã


	)

58 
	#vTaskGëInfo
 
MPU_vTaskGëInfo


	)

59 
	#vTaskPri‹ôySë
 
MPU_vTaskPri‹ôySë


	)

60 
	#vTaskSu•íd
 
MPU_vTaskSu•íd


	)

61 
	#vTaskResume
 
MPU_vTaskResume


	)

62 
	#vTaskSu•ídAŒ
 
MPU_vTaskSu•ídAŒ


	)

63 
	#xTaskResumeAŒ
 
MPU_xTaskResumeAŒ


	)

64 
	#xTaskGëTickCou¡
 
MPU_xTaskGëTickCou¡


	)

65 
	#uxTaskGëNumbîOfTasks
 
MPU_uxTaskGëNumbîOfTasks


	)

66 
	#pcTaskGëName
 
MPU_pcTaskGëName


	)

67 
	#xTaskGëH™dÀ
 
MPU_xTaskGëH™dÀ


	)

68 
	#uxTaskGëSèckHighW©îM¨k
 
MPU_uxTaskGëSèckHighW©îM¨k


	)

69 
	#uxTaskGëSèckHighW©îM¨k2
 
MPU_uxTaskGëSèckHighW©îM¨k2


	)

70 
	#vTaskSëAµliˇti⁄TaskTag
 
MPU_vTaskSëAµliˇti⁄TaskTag


	)

71 
	#xTaskGëAµliˇti⁄TaskTag
 
MPU_xTaskGëAµliˇti⁄TaskTag


	)

72 
	#vTaskSëThªadLoˇlSt‹agePoöãr
 
MPU_vTaskSëThªadLoˇlSt‹agePoöãr


	)

73 
	#pvTaskGëThªadLoˇlSt‹agePoöãr
 
MPU_pvTaskGëThªadLoˇlSt‹agePoöãr


	)

74 
	#xTaskCÆlAµliˇti⁄TaskHook
 
MPU_xTaskCÆlAµliˇti⁄TaskHook


	)

75 
	#xTaskGëIdÀTaskH™dÀ
 
MPU_xTaskGëIdÀTaskH™dÀ


	)

76 
	#uxTaskGëSy°emSèã
 
MPU_uxTaskGëSy°emSèã


	)

77 
	#vTaskLi°
 
MPU_vTaskLi°


	)

78 
	#vTaskGëRunTimeSèts
 
MPU_vTaskGëRunTimeSèts


	)

79 
	#ulTaskGëIdÀRunTimeCou¡î
 
MPU_ulTaskGëIdÀRunTimeCou¡î


	)

80 
	#ulTaskGëIdÀRunTimePî˚¡
 
MPU_ulTaskGëIdÀRunTimePî˚¡


	)

81 
	#xTaskGíîicNŸify
 
MPU_xTaskGíîicNŸify


	)

82 
	#xTaskGíîicNŸifyWaô
 
MPU_xTaskGíîicNŸifyWaô


	)

83 
	#ulTaskGíîicNŸifyTake
 
MPU_ulTaskGíîicNŸifyTake


	)

84 
	#xTaskGíîicNŸifySèãCÀ¨
 
MPU_xTaskGíîicNŸifySèãCÀ¨


	)

85 
	#ulTaskGíîicNŸifyVÆueCÀ¨
 
MPU_ulTaskGíîicNŸifyVÆueCÀ¨


	)

86 
	#xTaskC©chUpTicks
 
MPU_xTaskC©chUpTicks


	)

88 
	#xTaskGëCuºítTaskH™dÀ
 
MPU_xTaskGëCuºítTaskH™dÀ


	)

89 
	#vTaskSëTimeOutSèã
 
MPU_vTaskSëTimeOutSèã


	)

90 
	#xTaskCheckF‹TimeOut
 
MPU_xTaskCheckF‹TimeOut


	)

91 
	#xTaskGëScheduÀrSèã
 
MPU_xTaskGëScheduÀrSèã


	)

94 
	#xQueueGíîicSíd
 
MPU_xQueueGíîicSíd


	)

95 
	#xQueueRe˚ive
 
MPU_xQueueRe˚ive


	)

96 
	#xQueuePìk
 
MPU_xQueuePìk


	)

97 
	#xQueueSem≠h‹eTake
 
MPU_xQueueSem≠h‹eTake


	)

98 
	#uxQueueMesßgesWaôög
 
MPU_uxQueueMesßgesWaôög


	)

99 
	#uxQueueS∑˚sAvaûabÀ
 
MPU_uxQueueS∑˚sAvaûabÀ


	)

100 
	#vQueueDñëe
 
MPU_vQueueDñëe


	)

101 
	#xQueueCª©eMuãx
 
MPU_xQueueCª©eMuãx


	)

102 
	#xQueueCª©eMuãxSètic
 
MPU_xQueueCª©eMuãxSètic


	)

103 
	#xQueueCª©eCou¡ögSem≠h‹e
 
MPU_xQueueCª©eCou¡ögSem≠h‹e


	)

104 
	#xQueueCª©eCou¡ögSem≠h‹eSètic
 
MPU_xQueueCª©eCou¡ögSem≠h‹eSètic


	)

105 
	#xQueueGëMuãxHﬁdî
 
MPU_xQueueGëMuãxHﬁdî


	)

106 
	#xQueueTakeMuãxRecursive
 
MPU_xQueueTakeMuãxRecursive


	)

107 
	#xQueueGiveMuãxRecursive
 
MPU_xQueueGiveMuãxRecursive


	)

108 
	#xQueueGíîicCª©e
 
MPU_xQueueGíîicCª©e


	)

109 
	#xQueueGíîicCª©eSètic
 
MPU_xQueueGíîicCª©eSètic


	)

110 
	#xQueueCª©eSë
 
MPU_xQueueCª©eSë


	)

111 
	#xQueueAddToSë
 
MPU_xQueueAddToSë


	)

112 
	#xQueueRemoveFromSë
 
MPU_xQueueRemoveFromSë


	)

113 
	#xQueueSñe˘FromSë
 
MPU_xQueueSñe˘FromSë


	)

114 
	#xQueueGíîicRe£t
 
MPU_xQueueGíîicRe£t


	)

116 #i‡–
c⁄figQUEUE_REGISTRY_SIZE
 > 0 )

117 
	#vQueueAddToRegi°ry
 
MPU_vQueueAddToRegi°ry


	)

118 
	#vQueueUƒegi°îQueue
 
MPU_vQueueUƒegi°îQueue


	)

119 
	#pcQueueGëName
 
MPU_pcQueueGëName


	)

123 
	#xTimîCª©e
 
MPU_xTimîCª©e


	)

124 
	#xTimîCª©eSètic
 
MPU_xTimîCª©eSètic


	)

125 
	#pvTimîGëTimîID
 
MPU_pvTimîGëTimîID


	)

126 
	#vTimîSëTimîID
 
MPU_vTimîSëTimîID


	)

127 
	#xTimîIsTimîA˘ive
 
MPU_xTimîIsTimîA˘ive


	)

128 
	#xTimîGëTimîD´m⁄TaskH™dÀ
 
MPU_xTimîGëTimîD´m⁄TaskH™dÀ


	)

129 
	#xTimîPídFun˘i⁄CÆl
 
MPU_xTimîPídFun˘i⁄CÆl


	)

130 
	#pcTimîGëName
 
MPU_pcTimîGëName


	)

131 
	#vTimîSëRñﬂdMode
 
MPU_vTimîSëRñﬂdMode


	)

132 
	#uxTimîGëRñﬂdMode
 
MPU_uxTimîGëRñﬂdMode


	)

133 
	#xTimîGëPîiod
 
MPU_xTimîGëPîiod


	)

134 
	#xTimîGëExpúyTime
 
MPU_xTimîGëExpúyTime


	)

135 
	#xTimîGíîicComm™d
 
MPU_xTimîGíîicComm™d


	)

138 
	#xEvítGroupCª©e
 
MPU_xEvítGroupCª©e


	)

139 
	#xEvítGroupCª©eSètic
 
MPU_xEvítGroupCª©eSètic


	)

140 
	#xEvítGroupWaôBôs
 
MPU_xEvítGroupWaôBôs


	)

141 
	#xEvítGroupCÀ¨Bôs
 
MPU_xEvítGroupCÀ¨Bôs


	)

142 
	#xEvítGroupSëBôs
 
MPU_xEvítGroupSëBôs


	)

143 
	#xEvítGroupSync
 
MPU_xEvítGroupSync


	)

144 
	#vEvítGroupDñëe
 
MPU_vEvítGroupDñëe


	)

148 
	#xSåómBuf„rSíd
 
MPU_xSåómBuf„rSíd


	)

149 
	#xSåómBuf„rRe˚ive
 
MPU_xSåómBuf„rRe˚ive


	)

150 
	#xSåómBuf„rNextMesßgeLígthByãs
 
MPU_xSåómBuf„rNextMesßgeLígthByãs


	)

151 
	#vSåómBuf„rDñëe
 
MPU_vSåómBuf„rDñëe


	)

152 
	#xSåómBuf„rIsFuŒ
 
MPU_xSåómBuf„rIsFuŒ


	)

153 
	#xSåómBuf„rIsEm±y
 
MPU_xSåómBuf„rIsEm±y


	)

154 
	#xSåómBuf„rRe£t
 
MPU_xSåómBuf„rRe£t


	)

155 
	#xSåómBuf„rS∑˚sAvaûabÀ
 
MPU_xSåómBuf„rS∑˚sAvaûabÀ


	)

156 
	#xSåómBuf„rByãsAvaûabÀ
 
MPU_xSåómBuf„rByãsAvaûabÀ


	)

157 
	#xSåómBuf„rSëTriggîLevñ
 
MPU_xSåómBuf„rSëTriggîLevñ


	)

158 
	#xSåómBuf„rGíîicCª©e
 
MPU_xSåómBuf„rGíîicCª©e


	)

159 
	#xSåómBuf„rGíîicCª©eSètic
 
MPU_xSåómBuf„rGíîicCª©eSètic


	)

165 
	#PRIVILEGED_FUNCTION


	)

166 
	#PRIVILEGED_DATA
 
	`__©åibuã__
––
	`£˘i⁄
–"¥ivûeged_d©a" ) ) )

	)

167 
	#FREERTOS_SYSTEM_CALL


	)

172 
	#PRIVILEGED_FUNCTION
 
	`__©åibuã__
––
	`£˘i⁄
–"¥ivûeged_fun˘i⁄s" ) ) )

	)

173 
	#PRIVILEGED_DATA
 
	`__©åibuã__
––
	`£˘i⁄
–"¥ivûeged_d©a" ) ) )

	)

174 
	#FREERTOS_SYSTEM_CALL
 
	`__©åibuã__
––
	`£˘i⁄
–"‰ìπos_sy°em_ˇŒs" ) ) )

	)

182 
	#xP‹tRai£Privûege
–
xRu¬ögPrivûeged
 ) \

185 
xRu¬ögPrivûeged
 = 
	`p‹tIS_PRIVILEGED
(); \

188 if–
xRu¬ögPrivûeged
 =
pdFALSE
 ) \

190 
	`p‹tRAISE_PRIVILEGE
(); \

192 }

	)

198 
	#vP‹tRe£tPrivûege
–
xRu¬ögPrivûeged
 ) \

200 if–
xRu¬ögPrivûeged
 =
pdFALSE
 ) \

202 
	`p‹tRESET_PRIVILEGE
(); \

204 }

	)

210 
	#PRIVILEGED_FUNCTION


	)

211 
	#PRIVILEGED_DATA


	)

212 
	#FREERTOS_SYSTEM_CALL


	)

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\portable.h

33 #i‚de‡
PORTABLE_H


34 
	#PORTABLE_H


	)

46 
	~"dïªˇãd_deföôi⁄s.h
"

52 #i‚de‡
p‹tENTER_CRITICAL


53 
	~"p‹tma¸o.h
"

56 #i‡
p‹tBYTE_ALIGNMENT
 == 32

57 
	#p‹tBYTE_ALIGNMENT_MASK
 ( 0x001‡)

	)

58 #ñi‡
p‹tBYTE_ALIGNMENT
 == 16

59 
	#p‹tBYTE_ALIGNMENT_MASK
 ( 0x000‡)

	)

60 #ñi‡
p‹tBYTE_ALIGNMENT
 == 8

61 
	#p‹tBYTE_ALIGNMENT_MASK
 ( 0x0007 )

	)

62 #ñi‡
p‹tBYTE_ALIGNMENT
 == 4

63 
	#p‹tBYTE_ALIGNMENT_MASK
 ( 0x0003 )

	)

64 #ñi‡
p‹tBYTE_ALIGNMENT
 == 2

65 
	#p‹tBYTE_ALIGNMENT_MASK
 ( 0x0001 )

	)

66 #ñi‡
p‹tBYTE_ALIGNMENT
 == 1

67 
	#p‹tBYTE_ALIGNMENT_MASK
 ( 0x0000 )

	)

72 #i‚de‡
p‹tUSING_MPU_WRAPPERS


73 
	#p‹tUSING_MPU_WRAPPERS
 0

	)

76 #i‚de‡
p‹tNUM_CONFIGURABLE_REGIONS


77 
	#p‹tNUM_CONFIGURABLE_REGIONS
 1

	)

80 #i‚de‡
p‹tHAS_STACK_OVERFLOW_CHECKING


81 
	#p‹tHAS_STACK_OVERFLOW_CHECKING
 0

	)

84 #i‚de‡
p‹tARCH_NAME


85 
	#p‹tARCH_NAME
 
NULL


	)

88 #i‚de‡
c⁄figSTACK_ALLOCATION_FROM_SEPARATE_HEAP


90 
	#c⁄figSTACK_ALLOCATION_FROM_SEPARATE_HEAP
 0

	)

94 #ifde‡
__˝lu•lus


99 
	~"mpu_wøµîs.h
"

107 #i‡–
p‹tUSING_MPU_WRAPPERS
 == 1 )

108 #i‡–
p‹tHAS_STACK_OVERFLOW_CHECKING
 == 1 )

109 
SèckTy≥_t
 * 
pxP‹tInôüli£Sèck
–SèckTy≥_à* 
pxT›OfSèck
,

110 
SèckTy≥_t
 * 
pxEndOfSèck
,

111 
TaskFun˘i⁄_t
 
pxCode
,

112 * 
pvP¨amëîs
,

113 
Ba£Ty≥_t
 
xRunPrivûeged
 ) 
PRIVILEGED_FUNCTION
;

115 
SèckTy≥_t
 * 
pxP‹tInôüli£Sèck
–SèckTy≥_à* 
pxT›OfSèck
,

116 
TaskFun˘i⁄_t
 
pxCode
,

117 * 
pvP¨amëîs
,

118 
Ba£Ty≥_t
 
xRunPrivûeged
 ) 
PRIVILEGED_FUNCTION
;

121 #i‡–
p‹tHAS_STACK_OVERFLOW_CHECKING
 == 1 )

122 
SèckTy≥_t
 * 
pxP‹tInôüli£Sèck
–SèckTy≥_à* 
pxT›OfSèck
,

123 
SèckTy≥_t
 * 
pxEndOfSèck
,

124 
TaskFun˘i⁄_t
 
pxCode
,

125 * 
pvP¨amëîs
 ) 
PRIVILEGED_FUNCTION
;

127 
SèckTy≥_t
 * 
pxP‹tInôüli£Sèck
–SèckTy≥_à* 
pxT›OfSèck
,

128 
TaskFun˘i⁄_t
 
pxCode
,

129 * 
pvP¨amëîs
 ) 
PRIVILEGED_FUNCTION
;

135 
	sHópRegi⁄


137 
uöt8_t
 * 
pucSèπAddªss
;

138 
size_t
 
xSizeInByãs
;

139 } 
	tHópRegi⁄_t
;

142 
	sxHópSèts


144 
size_t
 
xAvaûabÀHópS∑˚InByãs
;

145 
size_t
 
xSizeOfL¨ge°FªeBlockInByãs
;

146 
size_t
 
xSizeOfSmÆÀ°FªeBlockInByãs
;

147 
size_t
 
xNumbîOfFªeBlocks
;

148 
size_t
 
xMöimumEvîFªeByãsRemaöög
;

149 
size_t
 
xNumbîOfSuc˚ssfulAŒoˇti⁄s
;

150 
size_t
 
xNumbîOfSuc˚ssfulFªes
;

151 } 
	tHópSèts_t
;

164 
vP‹tDeföeHópRegi⁄s
–c⁄° 
HópRegi⁄_t
 * c⁄° 
pxHópRegi⁄s
 ) 
PRIVILEGED_FUNCTION
;

170 
vP‹tGëHópSèts
–
HópSèts_t
 * 
pxHópSèts
 );

175 * 
pvP‹tMÆloc
–
size_t
 
xSize
 ) 
PRIVILEGED_FUNCTION
;

176 
vP‹tFªe
–* 
pv
 ) 
PRIVILEGED_FUNCTION
;

177 
vP‹tInôüli£Blocks
–Ë
PRIVILEGED_FUNCTION
;

178 
size_t
 
xP‹tGëFªeHópSize
–Ë
PRIVILEGED_FUNCTION
;

179 
size_t
 
xP‹tGëMöimumEvîFªeHópSize
–Ë
PRIVILEGED_FUNCTION
;

181 #i‡–
c⁄figSTACK_ALLOCATION_FROM_SEPARATE_HEAP
 == 1 )

182 * 
pvP‹tMÆlocSèck
–
size_t
 
xSize
 ) 
PRIVILEGED_FUNCTION
;

183 
vP‹tFªeSèck
–* 
pv
 ) 
PRIVILEGED_FUNCTION
;

185 
	#pvP‹tMÆlocSèck
 
pvP‹tMÆloc


	)

186 
	#vP‹tFªeSèck
 
vP‹tFªe


	)

193 
Ba£Ty≥_t
 
xP‹tSèπScheduÀr
–Ë
PRIVILEGED_FUNCTION
;

200 
vP‹tEndScheduÀr
–Ë
PRIVILEGED_FUNCTION
;

209 #i‡–
p‹tUSING_MPU_WRAPPERS
 == 1 )

210 
xMEMORY_REGION
;

211 
vP‹tSt‹eTaskMPUSëtögs
–
xMPU_SETTINGS
 * 
xMPUSëtögs
,

212 c⁄° 
xMEMORY_REGION
 * c⁄° 
xRegi⁄s
,

213 
SèckTy≥_t
 * 
pxBŸtomOfSèck
,

214 
uöt32_t
 
ulSèckDïth
 ) 
PRIVILEGED_FUNCTION
;

218 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\portmacro.h

30 #i‚de‡
PORTMACRO_H


31 
	#PORTMACRO_H


	)

33 #ifde‡
__˝lu•lus


48 
	#p‹tCHAR
 

	)

49 
	#p‹tFLOAT
 

	)

50 
	#p‹tDOUBLE
 

	)

51 
	#p‹tLONG
 

	)

52 
	#p‹tSHORT
 

	)

53 
	#p‹tSTACK_TYPE
 
uöt32_t


	)

54 
	#p‹tBASE_TYPE
 

	)

56 
p‹tSTACK_TYPE
 
	tSèckTy≥_t
;

57 
	tBa£Ty≥_t
;

58 
	tUBa£Ty≥_t
;

60 #i‡–
c⁄figUSE_16_BIT_TICKS
 == 1 )

61 
uöt16_t
 
	tTickTy≥_t
;

62 
	#p‹tMAX_DELAY
 ( 
TickTy≥_t
 ) 0xffff

	)

64 
uöt32_t
 
	tTickTy≥_t
;

65 
	#p‹tMAX_DELAY
 ( 
TickTy≥_t
 ) 0xffffffffUL

	)

69 
	#p‹tTICK_TYPE_IS_ATOMIC
 1

	)

74 
	#p‹tSTACK_GROWTH
 ( -1 )

	)

75 
	#p‹tTICK_PERIOD_MS
 ( ( 
TickTy≥_t
 ) 1000 / 
c⁄figTICK_RATE_HZ
 )

	)

76 
	#p‹tBYTE_ALIGNMENT
 8

	)

77 
	#p‹tDONT_DISCARD
 
	`__©åibuã__
––
u£d
 ) )

	)

81 
	#p‹tYIELD
() \

84 
p‹tNVIC_INT_CTRL_REG
 = 
p‹tNVIC_PENDSVSET_BIT
; \

88 
__asm
 volatile ( "dsb" ::: "memory" ); \

89 
__asm
 volatile ( "isb" ); \

90 }

	)

92 
	#p‹tNVIC_INT_CTRL_REG
 ( *––vﬁ©ûê
uöt32_t
 * ) 0xe000ed04 ) )

	)

93 
	#p‹tNVIC_PENDSVSET_BIT
 ( 1UL << 28UL )

	)

94 
	#p‹tEND_SWITCHING_ISR
–
xSwôchRequúed
 ) dÿ{ if–xSwôchRequúed !
pdFALSE
 ) 
	`p‹tYIELD
(); }  0 )

	)

95 
	#p‹tYIELD_FROM_ISR
–
x
 ) 
	`p‹tEND_SWITCHING_ISR
–x )

	)

99 
vP‹tE¡îCrôiˇl
( );

100 
vP‹tExôCrôiˇl
( );

101 
	#p‹tSET_INTERRUPT_MASK_FROM_ISR
(Ë
	`ulP‹tRai£BASEPRI
()

	)

102 
	#p‹tCLEAR_INTERRUPT_MASK_FROM_ISR
–
x
 ) 
	`vP‹tSëBASEPRI
–x )

	)

103 
	#p‹tDISABLE_INTERRUPTS
(Ë
	`vP‹tRai£BASEPRI
()

	)

104 
	#p‹tENABLE_INTERRUPTS
(Ë
	`vP‹tSëBASEPRI
–0 )

	)

105 
	#p‹tENTER_CRITICAL
(Ë
	`vP‹tE¡îCrôiˇl
()

	)

106 
	#p‹tEXIT_CRITICAL
(Ë
	`vP‹tExôCrôiˇl
()

	)

113 
	#p‹tTASK_FUNCTION_PROTO
–
vFun˘i⁄
, 
pvP¨amëîs
 ) 
	`vFun˘i⁄
–*ÖvP¨amëî†)

	)

114 
	#p‹tTASK_FUNCTION
–
vFun˘i⁄
, 
pvP¨amëîs
 ) 
	`vFun˘i⁄
–*ÖvP¨amëî†)

	)

118 #i‚de‡
p‹tSUPPRESS_TICKS_AND_SLEEP


119 
vP‹tSuµªssTicksAndSÀï
–
TickTy≥_t
 
xEx≥˘edIdÀTime
 );

120 
	#p‹tSUPPRESS_TICKS_AND_SLEEP
–
xEx≥˘edIdÀTime
 ) 
	`vP‹tSuµªssTicksAndSÀï
–xEx≥˘edIdÀTimê)

	)

125 #i‚de‡
c⁄figUSE_PORT_OPTIMISED_TASK_SELECTION


126 
	#c⁄figUSE_PORT_OPTIMISED_TASK_SELECTION
 1

	)

129 #i‡
c⁄figUSE_PORT_OPTIMISED_TASK_SELECTION
 == 1

132 
__©åibuã__
––
Æways_ölöe
 ) ) 
ölöe
 
uöt8_t
 
ucP‹tCou¡LódögZîos
–
uöt32_t
 
ulBôm≠
 )

134 
uöt8_t
 
	gucRëu∫
;

136 
__asm
 vﬁ©ûê–"˛z %0, %1" : "Ù" ( 
ucRëu∫
 ) : "r" ( 
ulBôm≠
 ) : "memory" );

138  
	gucRëu∫
;

142 #i‡–
c⁄figMAX_PRIORITIES
 > 32 )

143 #îr‹ 
c⁄figUSE_PORT_OPTIMISED_TASK_SELECTION
 
ˇn
 
⁄ly
 
be
 
£t
 
to
 1 
whí
 
c⁄figMAX_PRIORITIES
 
is
 
Àss
 
th™
 
‹
 
equÆ
Åÿ32. 
It
 i†
vîy
 
øª
 
th©
 
a
 
sy°em
 
ªquúes
 
m‹e
Åh™ 10Åÿ15 
dif„ªn˚
 
¥i‹ôõs
 
as
 
èsks
Åh© 
sh¨e
á 
¥i‹ôy
 
wûl
 
time
 
¶i˚
.

147 
	#p‹tRECORD_READY_PRIORITY
–
uxPri‹ôy
, 
uxRódyPri‹ôõs
 ) ( uxRódyPri‹ôõ†Ë|–1UL << ( uxPri‹ôy ) )

	)

148 
	#p‹tRESET_READY_PRIORITY
–
uxPri‹ôy
, 
uxRódyPri‹ôõs
 ) ( uxRódyPri‹ôõ†Ë&~–1UL << ( uxPri‹ôy ) )

	)

152 
	#p‹tGET_HIGHEST_PRIORITY
–
uxT›Pri‹ôy
, 
uxRódyPri‹ôõs
 ) uxT›Pri‹ôy = ( 31UL - ( 
uöt32_t
 ) 
	`ucP‹tCou¡LódögZîos
––uxRódyPri‹ôõ†ËË)

	)

158 #ifde‡
c⁄figASSERT


159 
vP‹tVÆid©eI¡îru±Pri‹ôy
( );

160 
	#p‹tASSERT_IF_INTERRUPT_PRIORITY_INVALID
(Ë
	`vP‹tVÆid©eI¡îru±Pri‹ôy
()

	)

164 
	#p‹tNOP
()

	)

166 
	#p‹tINLINE
 
__ölöe


	)

168 #i‚de‡
p‹tFORCE_INLINE


169 
	#p‹tFORCE_INLINE
 
ölöe
 
	`__©åibuã__
––
Æways_ölöe
 ) )

	)

174 
p‹tFORCE_INLINE
 
Ba£Ty≥_t
 
xP‹tIsInsideI¡îru±
( )

176 
uöt32_t
 
	gulCuºítI¡îru±
;

177 
Ba£Ty≥_t
 
	gxRëu∫
;

180 
__asm
 vﬁ©ûê–"mr†%0, ip§" : "Ù" ( 
ulCuºítI¡îru±
 )::"memory" );

182 if–
	gulCuºítI¡îru±
 == 0 )

184 
xRëu∫
 = 
pdFALSE
;

188 
	gxRëu∫
 = 
pdTRUE
;

191  
	gxRëu∫
;

196 
p‹tFORCE_INLINE
 
vP‹tRai£BASEPRI
( )

198 
uöt32_t
 
	gulNewBASEPRI
;

200 
__asm
 volatile

206 : "Ù" ( 
ulNewBASEPRI
 ) : "i" ( 
c⁄figMAX_SYSCALL_INTERRUPT_PRIORITY
 ) : "memory"

212 
p‹tFORCE_INLINE
 
uöt32_t
 
ulP‹tRai£BASEPRI
( )

214 
uöt32_t
 
	gulOrigöÆBASEPRI
, 
	gulNewBASEPRI
;

216 
__asm
 volatile

223 : "Ù" ( 
ulOrigöÆBASEPRI
 ), "Ù" ( 
	gulNewBASEPRI
 ) : "i" ( 
c⁄figMAX_SYSCALL_INTERRUPT_PRIORITY
 ) : "memory"

228  
	gulOrigöÆBASEPRI
;

232 
p‹tFORCE_INLINE
 
vP‹tSëBASEPRI
–
uöt32_t
 
ulNewMaskVÆue
 )

234 
__asm
 volatile

236 " m§ ba£¥i, %0 "::"r" ( 
ulNewMaskVÆue
 ) : "memory"

241 
	#p‹tMEMORY_BARRIER
(Ë
__asm
 vﬁ©ûê–"" ::: "mem‹y" )

	)

243 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\projdefs.h

29 #i‚de‡
PROJDEFS_H


30 
	#PROJDEFS_H


	)

36 (* 
	tTaskFun˘i⁄_t
)( * );

41 #i‚de‡
pdMS_TO_TICKS


42 
	#pdMS_TO_TICKS
–
xTimeInMs
 ) ( ( 
TickTy≥_t
 ) ( ( ( TickTy≥_àË–xTimeInM†Ë* ( TickTy≥_àË
c⁄figTICK_RATE_HZ
 ) / ( TickTy≥_àË1000U ) )

	)

45 
	#pdFALSE
 ( ( 
Ba£Ty≥_t
 ) 0 )

	)

46 
	#pdTRUE
 ( ( 
Ba£Ty≥_t
 ) 1 )

	)

48 
	#pdPASS
 ( 
pdTRUE
 )

	)

49 
	#pdFAIL
 ( 
pdFALSE
 )

	)

50 
	#îrQUEUE_EMPTY
 ( ( 
Ba£Ty≥_t
 ) 0 )

	)

51 
	#îrQUEUE_FULL
 ( ( 
Ba£Ty≥_t
 ) 0 )

	)

54 
	#îrCOULD_NOT_ALLOCATE_REQUIRED_MEMORY
 ( -1 )

	)

55 
	#îrQUEUE_BLOCKED
 ( -4 )

	)

56 
	#îrQUEUE_YIELD
 ( -5 )

	)

59 #i‚de‡
c⁄figUSE_LIST_DATA_INTEGRITY_CHECK_BYTES


60 
	#c⁄figUSE_LIST_DATA_INTEGRITY_CHECK_BYTES
 0

	)

63 #i‡–
c⁄figUSE_16_BIT_TICKS
 == 1 )

64 
	#pdINTEGRITY_CHECK_VALUE
 0x5a5a

	)

66 
	#pdINTEGRITY_CHECK_VALUE
 0x5a5a5a5aUL

	)

71 
	#pdFREERTOS_ERRNO_NONE
 0

	)

72 
	#pdFREERTOS_ERRNO_ENOENT
 2

	)

73 
	#pdFREERTOS_ERRNO_EINTR
 4

	)

74 
	#pdFREERTOS_ERRNO_EIO
 5

	)

75 
	#pdFREERTOS_ERRNO_ENXIO
 6

	)

76 
	#pdFREERTOS_ERRNO_EBADF
 9

	)

77 
	#pdFREERTOS_ERRNO_EAGAIN
 11

	)

78 
	#pdFREERTOS_ERRNO_EWOULDBLOCK
 11

	)

79 
	#pdFREERTOS_ERRNO_ENOMEM
 12

	)

80 
	#pdFREERTOS_ERRNO_EACCES
 13

	)

81 
	#pdFREERTOS_ERRNO_EFAULT
 14

	)

82 
	#pdFREERTOS_ERRNO_EBUSY
 16

	)

83 
	#pdFREERTOS_ERRNO_EEXIST
 17

	)

84 
	#pdFREERTOS_ERRNO_EXDEV
 18

	)

85 
	#pdFREERTOS_ERRNO_ENODEV
 19

	)

86 
	#pdFREERTOS_ERRNO_ENOTDIR
 20

	)

87 
	#pdFREERTOS_ERRNO_EISDIR
 21

	)

88 
	#pdFREERTOS_ERRNO_EINVAL
 22

	)

89 
	#pdFREERTOS_ERRNO_ENOSPC
 28

	)

90 
	#pdFREERTOS_ERRNO_ESPIPE
 29

	)

91 
	#pdFREERTOS_ERRNO_EROFS
 30

	)

92 
	#pdFREERTOS_ERRNO_EUNATCH
 42

	)

93 
	#pdFREERTOS_ERRNO_EBADE
 50

	)

94 
	#pdFREERTOS_ERRNO_EFTYPE
 79

	)

95 
	#pdFREERTOS_ERRNO_ENMFILE
 89

	)

96 
	#pdFREERTOS_ERRNO_ENOTEMPTY
 90

	)

97 
	#pdFREERTOS_ERRNO_ENAMETOOLONG
 91

	)

98 
	#pdFREERTOS_ERRNO_EOPNOTSUPP
 95

	)

99 
	#pdFREERTOS_ERRNO_ENOBUFS
 105

	)

100 
	#pdFREERTOS_ERRNO_ENOPROTOOPT
 109

	)

101 
	#pdFREERTOS_ERRNO_EADDRINUSE
 112

	)

102 
	#pdFREERTOS_ERRNO_ETIMEDOUT
 116

	)

103 
	#pdFREERTOS_ERRNO_EINPROGRESS
 119

	)

104 
	#pdFREERTOS_ERRNO_EALREADY
 120

	)

105 
	#pdFREERTOS_ERRNO_EADDRNOTAVAIL
 125

	)

106 
	#pdFREERTOS_ERRNO_EISCONN
 127

	)

107 
	#pdFREERTOS_ERRNO_ENOTCONN
 128

	)

108 
	#pdFREERTOS_ERRNO_ENOMEDIUM
 135

	)

109 
	#pdFREERTOS_ERRNO_EILSEQ
 138

	)

110 
	#pdFREERTOS_ERRNO_ECANCELED
 140

	)

114 
	#pdFREERTOS_LITTLE_ENDIAN
 0

	)

115 
	#pdFREERTOS_BIG_ENDIAN
 1

	)

118 
	#pdLITTLE_ENDIAN
 
pdFREERTOS_LITTLE_ENDIAN


	)

119 
	#pdBIG_ENDIAN
 
pdFREERTOS_BIG_ENDIAN


	)

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\queue.h

30 #i‚de‡
QUEUE_H


31 
	#QUEUE_H


	)

33 #i‚de‡
INC_FREERTOS_H


34 #îr‹ "ö˛udêFªeRTOS.h" 
mu°
 
≠≥¨
 
ö
 
sour˚
 
fûes
 
bef‹e
 "include queue.h"

38 #ifde‡
__˝lu•lus


43 
	~"èsk.h
"

50 
QueueDeföôi⁄
;

51 
QueueDeföôi⁄
 * 
	tQueueH™dÀ_t
;

58 
QueueDeföôi⁄
 * 
	tQueueSëH™dÀ_t
;

65 
QueueDeföôi⁄
 * 
	tQueueSëMembîH™dÀ_t
;

68 
	#queueSEND_TO_BACK
 ( ( 
Ba£Ty≥_t
 ) 0 )

	)

69 
	#queueSEND_TO_FRONT
 ( ( 
Ba£Ty≥_t
 ) 1 )

	)

70 
	#queueOVERWRITE
 ( ( 
Ba£Ty≥_t
 ) 2 )

	)

73 
	#queueQUEUE_TYPE_BASE
 ( ( 
uöt8_t
 ) 0U )

	)

74 
	#queueQUEUE_TYPE_SET
 ( ( 
uöt8_t
 ) 0U )

	)

75 
	#queueQUEUE_TYPE_MUTEX
 ( ( 
uöt8_t
 ) 1U )

	)

76 
	#queueQUEUE_TYPE_COUNTING_SEMAPHORE
 ( ( 
uöt8_t
 ) 2U )

	)

77 
	#queueQUEUE_TYPE_BINARY_SEMAPHORE
 ( ( 
uöt8_t
 ) 3U )

	)

78 
	#queueQUEUE_TYPE_RECURSIVE_MUTEX
 ( ( 
uöt8_t
 ) 4U )

	)

148 #i‡–
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 )

149 
	#xQueueCª©e
–
uxQueueLígth
, 
uxIãmSize
 ) 
	`xQueueGíîicCª©e
––uxQueueLígth ), ( uxIãmSizê), ( 
queueQUEUE_TYPE_BASE
 ) )

	)

234 #i‡–
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 )

235 
	#xQueueCª©eSètic
–
uxQueueLígth
, 
uxIãmSize
, 
pucQueueSt‹age
, 
pxQueueBuf„r
 ) 
	`xQueueGíîicCª©eSètic
––uxQueueLígth ), ( uxIãmSizê), (ÖucQueueSt‹agê), (ÖxQueueBuf„∏), ( 
queueQUEUE_TYPE_BASE
 ) )

	)

316 
	#xQueueSídToFr⁄t
–
xQueue
, 
pvIãmToQueue
, 
xTicksToWaô
 ) \

317 
	`xQueueGíîicSíd
––
xQueue
 ), ( 
pvIãmToQueue
 ), ( 
xTicksToWaô
 ), 
queueSEND_TO_FRONT
 )

	)

399 
	#xQueueSídToBack
–
xQueue
, 
pvIãmToQueue
, 
xTicksToWaô
 ) \

400 
	`xQueueGíîicSíd
––
xQueue
 ), ( 
pvIãmToQueue
 ), ( 
xTicksToWaô
 ), 
queueSEND_TO_BACK
 )

	)

484 
	#xQueueSíd
–
xQueue
, 
pvIãmToQueue
, 
xTicksToWaô
 ) \

485 
	`xQueueGíîicSíd
––
xQueue
 ), ( 
pvIãmToQueue
 ), ( 
xTicksToWaô
 ), 
queueSEND_TO_BACK
 )

	)

568 
	#xQueueOvîwrôe
–
xQueue
, 
pvIãmToQueue
 ) \

569 
	`xQueueGíîicSíd
––
xQueue
 ), ( 
pvIãmToQueue
 ), 0, 
queueOVERWRITE
 )

	)

657 
Ba£Ty≥_t
 
xQueueGíîicSíd
–
QueueH™dÀ_t
 
xQueue
,

658 c⁄° * c⁄° 
pvIãmToQueue
,

659 
TickTy≥_t
 
xTicksToWaô
,

660 c⁄° 
Ba£Ty≥_t
 
xC›yPosôi⁄
 ) 
PRIVILEGED_FUNCTION
;

755 
Ba£Ty≥_t
 
xQueuePìk
–
QueueH™dÀ_t
 
xQueue
,

756 * c⁄° 
pvBuf„r
,

757 
TickTy≥_t
 
xTicksToWaô
 ) 
PRIVILEGED_FUNCTION
;

791 
Ba£Ty≥_t
 
xQueuePìkFromISR
–
QueueH™dÀ_t
 
xQueue
,

792 * c⁄° 
pvBuf„r
 ) 
PRIVILEGED_FUNCTION
;

884 
Ba£Ty≥_t
 
xQueueRe˚ive
–
QueueH™dÀ_t
 
xQueue
,

885 * c⁄° 
pvBuf„r
,

886 
TickTy≥_t
 
xTicksToWaô
 ) 
PRIVILEGED_FUNCTION
;

903 
UBa£Ty≥_t
 
uxQueueMesßgesWaôög
–c⁄° 
QueueH™dÀ_t
 
xQueue
 ) 
PRIVILEGED_FUNCTION
;

922 
UBa£Ty≥_t
 
uxQueueS∑˚sAvaûabÀ
–c⁄° 
QueueH™dÀ_t
 
xQueue
 ) 
PRIVILEGED_FUNCTION
;

938 
vQueueDñëe
–
QueueH™dÀ_t
 
xQueue
 ) 
PRIVILEGED_FUNCTION
;

1008 
	#xQueueSídToFr⁄tFromISR
–
xQueue
, 
pvIãmToQueue
, 
pxHighîPri‹ôyTaskWokí
 ) \

1009 
	`xQueueGíîicSídFromISR
––
xQueue
 ), ( 
pvIãmToQueue
 ), ( 
pxHighîPri‹ôyTaskWokí
 ), 
queueSEND_TO_FRONT
 )

	)

1080 
	#xQueueSídToBackFromISR
–
xQueue
, 
pvIãmToQueue
, 
pxHighîPri‹ôyTaskWokí
 ) \

1081 
	`xQueueGíîicSídFromISR
––
xQueue
 ), ( 
pvIãmToQueue
 ), ( 
pxHighîPri‹ôyTaskWokí
 ), 
queueSEND_TO_BACK
 )

	)

1168 
	#xQueueOvîwrôeFromISR
–
xQueue
, 
pvIãmToQueue
, 
pxHighîPri‹ôyTaskWokí
 ) \

1169 
	`xQueueGíîicSídFromISR
––
xQueue
 ), ( 
pvIãmToQueue
 ), ( 
pxHighîPri‹ôyTaskWokí
 ), 
queueOVERWRITE
 )

	)

1243 
	#xQueueSídFromISR
–
xQueue
, 
pvIãmToQueue
, 
pxHighîPri‹ôyTaskWokí
 ) \

1244 
	`xQueueGíîicSídFromISR
––
xQueue
 ), ( 
pvIãmToQueue
 ), ( 
pxHighîPri‹ôyTaskWokí
 ), 
queueSEND_TO_BACK
 )

	)

1323 
Ba£Ty≥_t
 
xQueueGíîicSídFromISR
–
QueueH™dÀ_t
 
xQueue
,

1324 c⁄° * c⁄° 
pvIãmToQueue
,

1325 
Ba£Ty≥_t
 * c⁄° 
pxHighîPri‹ôyTaskWokí
,

1326 c⁄° 
Ba£Ty≥_t
 
xC›yPosôi⁄
 ) 
PRIVILEGED_FUNCTION
;

1327 
Ba£Ty≥_t
 
xQueueGiveFromISR
–
QueueH™dÀ_t
 
xQueue
,

1328 
Ba£Ty≥_t
 * c⁄° 
pxHighîPri‹ôyTaskWokí
 ) 
PRIVILEGED_FUNCTION
;

1417 
Ba£Ty≥_t
 
xQueueRe˚iveFromISR
–
QueueH™dÀ_t
 
xQueue
,

1418 * c⁄° 
pvBuf„r
,

1419 
Ba£Ty≥_t
 * c⁄° 
pxHighîPri‹ôyTaskWokí
 ) 
PRIVILEGED_FUNCTION
;

1425 
Ba£Ty≥_t
 
xQueueIsQueueEm±yFromISR
–c⁄° 
QueueH™dÀ_t
 
xQueue
 ) 
PRIVILEGED_FUNCTION
;

1426 
Ba£Ty≥_t
 
xQueueIsQueueFuŒFromISR
–c⁄° 
QueueH™dÀ_t
 
xQueue
 ) 
PRIVILEGED_FUNCTION
;

1427 
UBa£Ty≥_t
 
uxQueueMesßgesWaôögFromISR
–c⁄° 
QueueH™dÀ_t
 
xQueue
 ) 
PRIVILEGED_FUNCTION
;

1438 
Ba£Ty≥_t
 
xQueueCRSídFromISR
–
QueueH™dÀ_t
 
xQueue
,

1439 c⁄° * 
pvIãmToQueue
,

1440 
Ba£Ty≥_t
 
xCoRoutöePªviou¶yWokí
 );

1441 
Ba£Ty≥_t
 
xQueueCRRe˚iveFromISR
–
QueueH™dÀ_t
 
xQueue
,

1442 * 
pvBuf„r
,

1443 
Ba£Ty≥_t
 * 
pxTaskWokí
 );

1444 
Ba£Ty≥_t
 
xQueueCRSíd
–
QueueH™dÀ_t
 
xQueue
,

1445 c⁄° * 
pvIãmToQueue
,

1446 
TickTy≥_t
 
xTicksToWaô
 );

1447 
Ba£Ty≥_t
 
xQueueCRRe˚ive
–
QueueH™dÀ_t
 
xQueue
,

1448 * 
pvBuf„r
,

1449 
TickTy≥_t
 
xTicksToWaô
 );

1456 
QueueH™dÀ_t
 
xQueueCª©eMuãx
–c⁄° 
uöt8_t
 
ucQueueTy≥
 ) 
PRIVILEGED_FUNCTION
;

1457 
QueueH™dÀ_t
 
xQueueCª©eMuãxSètic
–c⁄° 
uöt8_t
 
ucQueueTy≥
,

1458 
SèticQueue_t
 * 
pxSèticQueue
 ) 
PRIVILEGED_FUNCTION
;

1459 
QueueH™dÀ_t
 
xQueueCª©eCou¡ögSem≠h‹e
–c⁄° 
UBa£Ty≥_t
 
uxMaxCou¡
,

1460 c⁄° 
UBa£Ty≥_t
 
uxInôülCou¡
 ) 
PRIVILEGED_FUNCTION
;

1461 
QueueH™dÀ_t
 
xQueueCª©eCou¡ögSem≠h‹eSètic
–c⁄° 
UBa£Ty≥_t
 
uxMaxCou¡
,

1462 c⁄° 
UBa£Ty≥_t
 
uxInôülCou¡
,

1463 
SèticQueue_t
 * 
pxSèticQueue
 ) 
PRIVILEGED_FUNCTION
;

1464 
Ba£Ty≥_t
 
xQueueSem≠h‹eTake
–
QueueH™dÀ_t
 
xQueue
,

1465 
TickTy≥_t
 
xTicksToWaô
 ) 
PRIVILEGED_FUNCTION
;

1466 
TaskH™dÀ_t
 
xQueueGëMuãxHﬁdî
–
QueueH™dÀ_t
 
xSem≠h‹e
 ) 
PRIVILEGED_FUNCTION
;

1467 
TaskH™dÀ_t
 
xQueueGëMuãxHﬁdîFromISR
–
QueueH™dÀ_t
 
xSem≠h‹e
 ) 
PRIVILEGED_FUNCTION
;

1473 
Ba£Ty≥_t
 
xQueueTakeMuãxRecursive
–
QueueH™dÀ_t
 
xMuãx
,

1474 
TickTy≥_t
 
xTicksToWaô
 ) 
PRIVILEGED_FUNCTION
;

1475 
Ba£Ty≥_t
 
xQueueGiveMuãxRecursive
–
QueueH™dÀ_t
 
xMuãx
 ) 
PRIVILEGED_FUNCTION
;

1481 
	#xQueueRe£t
–
xQueue
 ) 
	`xQueueGíîicRe£t
–xQueue, 
pdFALSE
 )

	)

1509 #i‡–
c⁄figQUEUE_REGISTRY_SIZE
 > 0 )

1510 
vQueueAddToRegi°ry
–
QueueH™dÀ_t
 
xQueue
,

1511 c⁄° * 
pcQueueName
 ) 
PRIVILEGED_FUNCTION
;

1524 #i‡–
c⁄figQUEUE_REGISTRY_SIZE
 > 0 )

1525 
vQueueUƒegi°îQueue
–
QueueH™dÀ_t
 
xQueue
 ) 
PRIVILEGED_FUNCTION
;

1539 #i‡–
c⁄figQUEUE_REGISTRY_SIZE
 > 0 )

1540 c⁄° * 
pcQueueGëName
–
QueueH™dÀ_t
 
xQueue
 ) 
PRIVILEGED_FUNCTION
;

1548 #i‡–
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 )

1549 
QueueH™dÀ_t
 
xQueueGíîicCª©e
–c⁄° 
UBa£Ty≥_t
 
uxQueueLígth
,

1550 c⁄° 
UBa£Ty≥_t
 
uxIãmSize
,

1551 c⁄° 
uöt8_t
 
ucQueueTy≥
 ) 
PRIVILEGED_FUNCTION
;

1559 #i‡–
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 )

1560 
QueueH™dÀ_t
 
xQueueGíîicCª©eSètic
–c⁄° 
UBa£Ty≥_t
 
uxQueueLígth
,

1561 c⁄° 
UBa£Ty≥_t
 
uxIãmSize
,

1562 
uöt8_t
 * 
pucQueueSt‹age
,

1563 
SèticQueue_t
 * 
pxSèticQueue
,

1564 c⁄° 
uöt8_t
 
ucQueueTy≥
 ) 
PRIVILEGED_FUNCTION
;

1615 
QueueSëH™dÀ_t
 
xQueueCª©eSë
–c⁄° 
UBa£Ty≥_t
 
uxEvítQueueLígth
 ) 
PRIVILEGED_FUNCTION
;

1639 
Ba£Ty≥_t
 
xQueueAddToSë
–
QueueSëMembîH™dÀ_t
 
xQueueOrSem≠h‹e
,

1640 
QueueSëH™dÀ_t
 
xQueueSë
 ) 
PRIVILEGED_FUNCTION
;

1659 
Ba£Ty≥_t
 
xQueueRemoveFromSë
–
QueueSëMembîH™dÀ_t
 
xQueueOrSem≠h‹e
,

1660 
QueueSëH™dÀ_t
 
xQueueSë
 ) 
PRIVILEGED_FUNCTION
;

1696 
QueueSëMembîH™dÀ_t
 
xQueueSñe˘FromSë
–
QueueSëH™dÀ_t
 
xQueueSë
,

1697 c⁄° 
TickTy≥_t
 
xTicksToWaô
 ) 
PRIVILEGED_FUNCTION
;

1702 
QueueSëMembîH™dÀ_t
 
xQueueSñe˘FromSëFromISR
–
QueueSëH™dÀ_t
 
xQueueSë
 ) 
PRIVILEGED_FUNCTION
;

1705 
vQueueWaôF‹MesßgeRe°ri˘ed
–
QueueH™dÀ_t
 
xQueue
,

1706 
TickTy≥_t
 
xTicksToWaô
,

1707 c⁄° 
Ba£Ty≥_t
 
xWaôIndeföôñy
 ) 
PRIVILEGED_FUNCTION
;

1708 
Ba£Ty≥_t
 
xQueueGíîicRe£t
–
QueueH™dÀ_t
 
xQueue
,

1709 
Ba£Ty≥_t
 
xNewQueue
 ) 
PRIVILEGED_FUNCTION
;

1710 
vQueueSëQueueNumbî
–
QueueH™dÀ_t
 
xQueue
,

1711 
UBa£Ty≥_t
 
uxQueueNumbî
 ) 
PRIVILEGED_FUNCTION
;

1712 
UBa£Ty≥_t
 
uxQueueGëQueueNumbî
–
QueueH™dÀ_t
 
xQueue
 ) 
PRIVILEGED_FUNCTION
;

1713 
uöt8_t
 
ucQueueGëQueueTy≥
–
QueueH™dÀ_t
 
xQueue
 ) 
PRIVILEGED_FUNCTION
;

1717 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\semphr.h

29 #i‚de‡
SEMAPHORE_H


30 
	#SEMAPHORE_H


	)

32 #i‚de‡
INC_FREERTOS_H


33 #îr‹ "ö˛udêFªeRTOS.h" 
mu°
 
≠≥¨
 
ö
 
sour˚
 
fûes
 
bef‹e
 "include semphr.h"

36 
	~"queue.h
"

38 
QueueH™dÀ_t
 
	tSem≠h‹eH™dÀ_t
;

40 
	#£mBINARY_SEMAPHORE_QUEUE_LENGTH
 ( ( 
uöt8_t
 ) 1U )

	)

41 
	#£mSEMAPHORE_QUEUE_ITEM_LENGTH
 ( ( 
uöt8_t
 ) 0U )

	)

42 
	#£mGIVE_BLOCK_TIME
 ( ( 
TickTy≥_t
 ) 0U )

	)

96 #i‡–
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 )

97 
	#vSem≠h‹eCª©eBö¨y
–
xSem≠h‹e
 ) \

99 –
xSem≠h‹e
 ) = 
	`xQueueGíîicCª©e
––
UBa£Ty≥_t
 ) 1, 
£mSEMAPHORE_QUEUE_ITEM_LENGTH
, 
queueQUEUE_TYPE_BINARY_SEMAPHORE
 ); \

100 if––
xSem≠h‹e
 ) !
NULL
 ) \

102 –Ë
	`xSem≠h‹eGive
––
xSem≠h‹e
 ) ); \

104 }

	)

166 #i‡–
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 )

167 
	#xSem≠h‹eCª©eBö¨y
(Ë
	`xQueueGíîicCª©e
––
UBa£Ty≥_t
 ) 1, 
£mSEMAPHORE_QUEUE_ITEM_LENGTH
, 
queueQUEUE_TYPE_BINARY_SEMAPHORE
 )

	)

227 #i‡–
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 )

228 
	#xSem≠h‹eCª©eBö¨ySètic
–
pxSèticSem≠h‹e
 ) 
	`xQueueGíîicCª©eSètic
––
UBa£Ty≥_t
 ) 1, 
£mSEMAPHORE_QUEUE_ITEM_LENGTH
, 
NULL
,ÖxSèticSem≠h‹e, 
queueQUEUE_TYPE_BINARY_SEMAPHORE
 )

	)

298 
	#xSem≠h‹eTake
–
xSem≠h‹e
, 
xBlockTime
 ) 
	`xQueueSem≠h‹eTake
––xSem≠h‹ê), ( xBlockTimêË)

	)

393 #i‡–
c⁄figUSE_RECURSIVE_MUTEXES
 == 1 )

394 
	#xSem≠h‹eTakeRecursive
–
xMuãx
, 
xBlockTime
 ) 
	`xQueueTakeMuãxRecursive
––xMuãx ), ( xBlockTimêË)

	)

460 
	#xSem≠h‹eGive
–
xSem≠h‹e
 ) 
	`xQueueGíîicSíd
––
QueueH™dÀ_t
 ) ( xSem≠h‹ê), 
NULL
, 
£mGIVE_BLOCK_TIME
, 
queueSEND_TO_BACK
 )

	)

546 #i‡–
c⁄figUSE_RECURSIVE_MUTEXES
 == 1 )

547 
	#xSem≠h‹eGiveRecursive
–
xMuãx
 ) 
	`xQueueGiveMuãxRecursive
––xMuãx ) )

	)

640 
	#xSem≠h‹eGiveFromISR
–
xSem≠h‹e
, 
pxHighîPri‹ôyTaskWokí
 ) 
	`xQueueGiveFromISR
––
QueueH™dÀ_t
 ) ( xSem≠h‹ê), (ÖxHighîPri‹ôyTaskWokí ) )

	)

675 
	#xSem≠h‹eTakeFromISR
–
xSem≠h‹e
, 
pxHighîPri‹ôyTaskWokí
 ) 
	`xQueueRe˚iveFromISR
––
QueueH™dÀ_t
 ) ( xSem≠h‹ê), 
NULL
, (ÖxHighîPri‹ôyTaskWokí ) )

	)

734 #i‡–
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 )

735 
	#xSem≠h‹eCª©eMuãx
(Ë
	`xQueueCª©eMuãx
–
queueQUEUE_TYPE_MUTEX
 )

	)

797 #i‡–
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 )

798 
	#xSem≠h‹eCª©eMuãxSètic
–
pxMuãxBuf„r
 ) 
	`xQueueCª©eMuãxSètic
–
queueQUEUE_TYPE_MUTEX
, (ÖxMuãxBuf„∏Ë)

	)

867 #i‡––
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 =1 ) && ( 
c⁄figUSE_RECURSIVE_MUTEXES
 == 1 ) )

868 
	#xSem≠h‹eCª©eRecursiveMuãx
(Ë
	`xQueueCª©eMuãx
–
queueQUEUE_TYPE_RECURSIVE_MUTEX
 )

	)

942 #i‡––
c⁄figSUPPORT_STATIC_ALLOCATION
 =1 ) && ( 
c⁄figUSE_RECURSIVE_MUTEXES
 == 1 ) )

943 
	#xSem≠h‹eCª©eRecursiveMuãxSètic
–
pxSèticSem≠h‹e
 ) 
	`xQueueCª©eMuãxSètic
–
queueQUEUE_TYPE_RECURSIVE_MUTEX
,ÖxSèticSem≠h‹ê)

	)

1024 #i‡–
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 )

1025 
	#xSem≠h‹eCª©eCou¡ög
–
uxMaxCou¡
, 
uxInôülCou¡
 ) 
	`xQueueCª©eCou¡ögSem≠h‹e
––uxMaxCou¡ ), ( uxInôülCou¡ ) )

	)

1111 #i‡–
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 )

1112 
	#xSem≠h‹eCª©eCou¡ögSètic
–
uxMaxCou¡
, 
uxInôülCou¡
, 
pxSem≠h‹eBuf„r
 ) 
	`xQueueCª©eCou¡ögSem≠h‹eSètic
––uxMaxCou¡ ), ( uxInôülCou¡ ), (ÖxSem≠h‹eBuf„∏Ë)

	)

1129 
	#vSem≠h‹eDñëe
–
xSem≠h‹e
 ) 
	`vQueueDñëe
––
QueueH™dÀ_t
 ) ( xSem≠h‹êË)

	)

1146 
	#xSem≠h‹eGëMuãxHﬁdî
–
xSem≠h‹e
 ) 
	`xQueueGëMuãxHﬁdî
––xSem≠h‹êË)

	)

1159 
	#xSem≠h‹eGëMuãxHﬁdîFromISR
–
xSem≠h‹e
 ) 
	`xQueueGëMuãxHﬁdîFromISR
––xSem≠h‹êË)

	)

1173 
	#uxSem≠h‹eGëCou¡
–
xSem≠h‹e
 ) 
	`uxQueueMesßgesWaôög
––
QueueH™dÀ_t
 ) ( xSem≠h‹êË)

	)

1187 
	#uxSem≠h‹eGëCou¡FromISR
–
xSem≠h‹e
 ) 
	`uxQueueMesßgesWaôögFromISR
––
QueueH™dÀ_t
 ) ( xSem≠h‹êË)

	)

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\stack_macros.h

29 #i‚de‡
STACK_MACROS_H


30 
	#STACK_MACROS_H


	)

52 #i‚de‡
p‹tSTACK_LIMIT_PADDING


53 
	#p‹tSTACK_LIMIT_PADDING
 0

	)

56 #i‡––
c⁄figCHECK_FOR_STACK_OVERFLOW
 =1 ) && ( 
p‹tSTACK_GROWTH
 < 0 ) )

59 
	#èskCHECK_FOR_STACK_OVERFLOW
() \

62 if–
pxCuºítTCB
->
pxT›OfSèck
 <pxCuºítTCB->
pxSèck
 + 
p‹tSTACK_LIMIT_PADDING
 ) \

64 
	`vAµliˇti⁄SèckOvîÊowHook
––
TaskH™dÀ_t
 ) 
pxCuºítTCB
,ÖxCuºítTCB->
pcTaskName
 ); \

66 }

	)

71 #i‡––
c⁄figCHECK_FOR_STACK_OVERFLOW
 =1 ) && ( 
p‹tSTACK_GROWTH
 > 0 ) )

74 
	#èskCHECK_FOR_STACK_OVERFLOW
() \

78 if–
pxCuºítTCB
->
pxT›OfSèck
 >pxCuºítTCB->
pxEndOfSèck
 - 
p‹tSTACK_LIMIT_PADDING
 ) \

80 
	`vAµliˇti⁄SèckOvîÊowHook
––
TaskH™dÀ_t
 ) 
pxCuºítTCB
,ÖxCuºítTCB->
pcTaskName
 ); \

82 }

	)

87 #i‡––
c⁄figCHECK_FOR_STACK_OVERFLOW
 > 1 ) && ( 
p‹tSTACK_GROWTH
 < 0 ) )

89 
	#èskCHECK_FOR_STACK_OVERFLOW
() \

91 c⁄° 
uöt32_t
 * c⁄° 
pulSèck
 = ( uöt32_à* ) 
pxCuºítTCB
->
pxSèck
; \

92 c⁄° 
uöt32_t
 
ulCheckVÆue
 = ( uint32_t ) 0xa5a5a5a5; \

94 if––
pulSèck
[ 0 ] !
ulCheckVÆue
 ) || \

95 –
pulSèck
[ 1 ] !
ulCheckVÆue
 ) || \

96 –
pulSèck
[ 2 ] !
ulCheckVÆue
 ) || \

97 –
pulSèck
[ 3 ] !
ulCheckVÆue
 ) ) \

99 
	`vAµliˇti⁄SèckOvîÊowHook
––
TaskH™dÀ_t
 ) 
pxCuºítTCB
,ÖxCuºítTCB->
pcTaskName
 ); \

101 }

	)

106 #i‡––
c⁄figCHECK_FOR_STACK_OVERFLOW
 > 1 ) && ( 
p‹tSTACK_GROWTH
 > 0 ) )

108 
	#èskCHECK_FOR_STACK_OVERFLOW
() \

110 
öt8_t
 * 
pcEndOfSèck
 = ( i¡8_à* ) 
pxCuºítTCB
->
pxEndOfSèck
; \

111 c⁄° 
uöt8_t
 
ucEx≥˘edSèckByãs
[] = { 
tskSTACK_FILL_BYTE
,ÅskSTACK_FILL_BYTE,ÅskSTACK_FILL_BYTE,ÅskSTACK_FILL_BYTE, \

112 
tskSTACK_FILL_BYTE
,ÅskSTACK_FILL_BYTE,ÅskSTACK_FILL_BYTE,ÅskSTACK_FILL_BYTE, \

113 
tskSTACK_FILL_BYTE
,ÅskSTACK_FILL_BYTE,ÅskSTACK_FILL_BYTE,ÅskSTACK_FILL_BYTE, \

114 
tskSTACK_FILL_BYTE
,ÅskSTACK_FILL_BYTE,ÅskSTACK_FILL_BYTE,ÅskSTACK_FILL_BYTE, \

115 
tskSTACK_FILL_BYTE
,ÅskSTACK_FILL_BYTE,ÅskSTACK_FILL_BYTE,ÅskSTACK_FILL_BYTE }; \

118 
pcEndOfSèck
 -–
ucEx≥˘edSèckByãs
 ); \

121 if–
	`memcmp
––* ) 
pcEndOfSèck
, ( * ) 
ucEx≥˘edSèckByãs
, ( ucExpectedStackBytes ) ) != 0 ) \

123 
	`vAµliˇti⁄SèckOvîÊowHook
––
TaskH™dÀ_t
 ) 
pxCuºítTCB
,ÖxCuºítTCB->
pcTaskName
 ); \

125 }

	)

131 #i‚de‡
èskCHECK_FOR_STACK_OVERFLOW


132 
	#èskCHECK_FOR_STACK_OVERFLOW
()

	)

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\stream_buffer.h

52 #i‚de‡
STREAM_BUFFER_H


53 
	#STREAM_BUFFER_H


	)

55 #i‚de‡
INC_FREERTOS_H


60 #i‡
deföed
–
__˝lu•lus
 )

71 
SåómBuf„rDef_t
;

72 
SåómBuf„rDef_t
 * 
	tSåómBuf„rH™dÀ_t
;

140 
	#xSåómBuf„rCª©e
–
xBuf„rSizeByãs
, 
xTriggîLevñByãs
 ) 
	`xSåómBuf„rGíîicCª©e
–xBuf„rSizeByãs, xTriggîLevñByãs, 
pdFALSE
 )

	)

221 
	#xSåómBuf„rCª©eSètic
–
xBuf„rSizeByãs
, 
xTriggîLevñByãs
, 
pucSåómBuf„rSt‹ageAªa
, 
pxSèticSåómBuf„r
 ) \

222 
	`xSåómBuf„rGíîicCª©eSètic
–
xBuf„rSizeByãs
, 
xTriggîLevñByãs
, 
pdFALSE
, 
pucSåómBuf„rSt‹ageAªa
, 
pxSèticSåómBuf„r
 )

	)

316 
size_t
 
xSåómBuf„rSíd
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
,

317 c⁄° * 
pvTxD©a
,

318 
size_t
 
xD©aLígthByãs
,

319 
TickTy≥_t
 
xTicksToWaô
 ) 
PRIVILEGED_FUNCTION
;

417 
size_t
 
xSåómBuf„rSídFromISR
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
,

418 c⁄° * 
pvTxD©a
,

419 
size_t
 
xD©aLígthByãs
,

420 
Ba£Ty≥_t
 * c⁄° 
pxHighîPri‹ôyTaskWokí
 ) 
PRIVILEGED_FUNCTION
;

506 
size_t
 
xSåómBuf„rRe˚ive
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
,

507 * 
pvRxD©a
,

508 
size_t
 
xBuf„rLígthByãs
,

509 
TickTy≥_t
 
xTicksToWaô
 ) 
PRIVILEGED_FUNCTION
;

592 
size_t
 
xSåómBuf„rRe˚iveFromISR
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
,

593 * 
pvRxD©a
,

594 
size_t
 
xBuf„rLígthByãs
,

595 
Ba£Ty≥_t
 * c⁄° 
pxHighîPri‹ôyTaskWokí
 ) 
PRIVILEGED_FUNCTION
;

617 
vSåómBuf„rDñëe
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 ) 
PRIVILEGED_FUNCTION
;

637 
Ba£Ty≥_t
 
xSåómBuf„rIsFuŒ
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 ) 
PRIVILEGED_FUNCTION
;

657 
Ba£Ty≥_t
 
xSåómBuf„rIsEm±y
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 ) 
PRIVILEGED_FUNCTION
;

680 
Ba£Ty≥_t
 
xSåómBuf„rRe£t
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 ) 
PRIVILEGED_FUNCTION
;

701 
size_t
 
xSåómBuf„rS∑˚sAvaûabÀ
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 ) 
PRIVILEGED_FUNCTION
;

722 
size_t
 
xSåómBuf„rByãsAvaûabÀ
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 ) 
PRIVILEGED_FUNCTION
;

759 
Ba£Ty≥_t
 
xSåómBuf„rSëTriggîLevñ
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
,

760 
size_t
 
xTriggîLevñ
 ) 
PRIVILEGED_FUNCTION
;

799 
Ba£Ty≥_t
 
xSåómBuf„rSídCom∂ëedFromISR
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
,

800 
Ba£Ty≥_t
 * 
pxHighîPri‹ôyTaskWokí
 ) 
PRIVILEGED_FUNCTION
;

840 
Ba£Ty≥_t
 
xSåómBuf„rRe˚iveCom∂ëedFromISR
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
,

841 
Ba£Ty≥_t
 * 
pxHighîPri‹ôyTaskWokí
 ) 
PRIVILEGED_FUNCTION
;

844 
SåómBuf„rH™dÀ_t
 
xSåómBuf„rGíîicCª©e
–
size_t
 
xBuf„rSizeByãs
,

845 
size_t
 
xTriggîLevñByãs
,

846 
Ba£Ty≥_t
 
xIsMesßgeBuf„r
 ) 
PRIVILEGED_FUNCTION
;

848 
SåómBuf„rH™dÀ_t
 
xSåómBuf„rGíîicCª©eSètic
–
size_t
 
xBuf„rSizeByãs
,

849 
size_t
 
xTriggîLevñByãs
,

850 
Ba£Ty≥_t
 
xIsMesßgeBuf„r
,

851 
uöt8_t
 * c⁄° 
pucSåómBuf„rSt‹ageAªa
,

852 
SèticSåómBuf„r_t
 * c⁄° 
pxSèticSåómBuf„r
 ) 
PRIVILEGED_FUNCTION
;

854 
size_t
 
xSåómBuf„rNextMesßgeLígthByãs
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 ) 
PRIVILEGED_FUNCTION
;

856 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

857 
vSåómBuf„rSëSåómBuf„rNumbî
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
,

858 
UBa£Ty≥_t
 
uxSåómBuf„rNumbî
 ) 
PRIVILEGED_FUNCTION
;

859 
UBa£Ty≥_t
 
uxSåómBuf„rGëSåómBuf„rNumbî
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 ) 
PRIVILEGED_FUNCTION
;

860 
uöt8_t
 
ucSåómBuf„rGëSåómBuf„rTy≥
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 ) 
PRIVILEGED_FUNCTION
;

864 #i‡
deföed
–
__˝lu•lus
 )

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\task.h

30 #i‚de‡
INC_TASK_H


31 
	#INC_TASK_H


	)

33 #i‚de‡
INC_FREERTOS_H


37 
	~"li°.h
"

40 #ifde‡
__˝lu•lus


56 
	#tskKERNEL_VERSION_NUMBER
 "V10.4.6"

	)

57 
	#tskKERNEL_VERSION_MAJOR
 10

	)

58 
	#tskKERNEL_VERSION_MINOR
 4

	)

59 
	#tskKERNEL_VERSION_BUILD
 6

	)

63 
	#tskMPU_REGION_READ_ONLY
 ( 1UL << 0UL )

	)

64 
	#tskMPU_REGION_READ_WRITE
 ( 1UL << 1UL )

	)

65 
	#tskMPU_REGION_EXECUTE_NEVER
 ( 1UL << 2UL )

	)

66 
	#tskMPU_REGION_NORMAL_MEMORY
 ( 1UL << 3UL )

	)

67 
	#tskMPU_REGION_DEVICE_MEMORY
 ( 1UL << 4UL )

	)

74 
	#tskDEFAULT_INDEX_TO_NOTIFY
 ( 0 )

	)

86 
tskTaskC⁄åﬁBlock
;

87 
tskTaskC⁄åﬁBlock
 * 
	tTaskH™dÀ_t
;

93 
Ba£Ty≥_t
 (* 
	tTaskHookFun˘i⁄_t
)( * );

98 
eRu¬ög
 = 0,

99 
eRódy
,

100 
eBlocked
,

101 
eSu•íded
,

102 
eDñëed
,

103 
eInvÆid


104 } 
	teTaskSèã
;

109 
eNoA˘i⁄
 = 0,

110 
eSëBôs
,

111 
eIn¸emít
,

112 
eSëVÆueWôhOvîwrôe
,

113 
eSëVÆueWôhoutOvîwrôe


114 } 
	teNŸifyA˘i⁄
;

119 
	sxTIME_OUT


121 
Ba£Ty≥_t
 
xOvîÊowCou¡
;

122 
TickTy≥_t
 
xTimeOnE¡îög
;

123 } 
	tTimeOut_t
;

128 
	sxMEMORY_REGION


130 * 
pvBa£Addªss
;

131 
uöt32_t
 
ulLígthInByãs
;

132 
uöt32_t
 
ulP¨amëîs
;

133 } 
	tMem‹yRegi⁄_t
;

138 
	sxTASK_PARAMETERS


140 
TaskFun˘i⁄_t
 
pvTaskCode
;

141 c⁄° * 
pcName
;

142 
c⁄figSTACK_DEPTH_TYPE
 
usSèckDïth
;

143 * 
pvP¨amëîs
;

144 
UBa£Ty≥_t
 
uxPri‹ôy
;

145 
SèckTy≥_t
 * 
puxSèckBuf„r
;

146 
Mem‹yRegi⁄_t
 
xRegi⁄s
[ 
p‹tNUM_CONFIGURABLE_REGIONS
 ];

147 #i‡––
p‹tUSING_MPU_WRAPPERS
 =1 ) && ( 
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 ) )

148 
SèticTask_t
 * c⁄° 
pxTaskBuf„r
;

150 } 
	tTaskP¨amëîs_t
;

154 
	sxTASK_STATUS


156 
TaskH™dÀ_t
 
xH™dÀ
;

157 c⁄° * 
pcTaskName
;

158 
UBa£Ty≥_t
 
xTaskNumbî
;

159 
eTaskSèã
 
eCuºítSèã
;

160 
UBa£Ty≥_t
 
uxCuºítPri‹ôy
;

161 
UBa£Ty≥_t
 
uxBa£Pri‹ôy
;

162 
c⁄figRUN_TIME_COUNTER_TYPE
 
ulRunTimeCou¡î
;

163 
SèckTy≥_t
 * 
pxSèckBa£
;

164 
c⁄figSTACK_DEPTH_TYPE
 
usSèckHighW©îM¨k
;

165 } 
	tTaskSètus_t
;

170 
eAb‹tSÀï
 = 0,

171 
eSènd¨dSÀï
,

172 
eNoTasksWaôögTimeout


173 } 
	teSÀïModeSètus
;

180 
	#tskIDLE_PRIORITY
 ( ( 
UBa£Ty≥_t
 ) 0U )

	)

190 
	#èskYIELD
(Ë
	`p‹tYIELD
()

	)

204 
	#èskENTER_CRITICAL
(Ë
	`p‹tENTER_CRITICAL
()

	)

205 
	#èskENTER_CRITICAL_FROM_ISR
(Ë
	`p‹tSET_INTERRUPT_MASK_FROM_ISR
()

	)

219 
	#èskEXIT_CRITICAL
(Ë
	`p‹tEXIT_CRITICAL
()

	)

220 
	#èskEXIT_CRITICAL_FROM_ISR
–
x
 ) 
	`p‹tCLEAR_INTERRUPT_MASK_FROM_ISR
–x )

	)

230 
	#èskDISABLE_INTERRUPTS
(Ë
	`p‹tDISABLE_INTERRUPTS
()

	)

240 
	#èskENABLE_INTERRUPTS
(Ë
	`p‹tENABLE_INTERRUPTS
()

	)

245 
	#èskSCHEDULER_SUSPENDED
 ( ( 
Ba£Ty≥_t
 ) 0 )

	)

246 
	#èskSCHEDULER_NOT_STARTED
 ( ( 
Ba£Ty≥_t
 ) 1 )

	)

247 
	#èskSCHEDULER_RUNNING
 ( ( 
Ba£Ty≥_t
 ) 2 )

	)

348 #i‡–
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 )

349 
Ba£Ty≥_t
 
xTaskCª©e
–
TaskFun˘i⁄_t
 
pxTaskCode
,

350 c⁄° * c⁄° 
pcName
,

351 c⁄° 
c⁄figSTACK_DEPTH_TYPE
 
usSèckDïth
,

352 * c⁄° 
pvP¨amëîs
,

353 
UBa£Ty≥_t
 
uxPri‹ôy
,

354 
TaskH™dÀ_t
 * c⁄° 
pxCª©edTask
 ) 
PRIVILEGED_FUNCTION
;

465 #i‡–
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 )

466 
TaskH™dÀ_t
 
xTaskCª©eSètic
–
TaskFun˘i⁄_t
 
pxTaskCode
,

467 c⁄° * c⁄° 
pcName
,

468 c⁄° 
uöt32_t
 
ulSèckDïth
,

469 * c⁄° 
pvP¨amëîs
,

470 
UBa£Ty≥_t
 
uxPri‹ôy
,

471 
SèckTy≥_t
 * c⁄° 
puxSèckBuf„r
,

472 
SèticTask_t
 * c⁄° 
pxTaskBuf„r
 ) 
PRIVILEGED_FUNCTION
;

548 #i‡–
p‹tUSING_MPU_WRAPPERS
 == 1 )

549 
Ba£Ty≥_t
 
xTaskCª©eRe°ri˘ed
–c⁄° 
TaskP¨amëîs_t
 * c⁄° 
pxTaskDeföôi⁄
,

550 
TaskH™dÀ_t
 * 
pxCª©edTask
 ) 
PRIVILEGED_FUNCTION
;

638 #i‡––
p‹tUSING_MPU_WRAPPERS
 =1 ) && ( 
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 ) )

639 
Ba£Ty≥_t
 
xTaskCª©eRe°ri˘edSètic
–c⁄° 
TaskP¨amëîs_t
 * c⁄° 
pxTaskDeföôi⁄
,

640 
TaskH™dÀ_t
 * 
pxCª©edTask
 ) 
PRIVILEGED_FUNCTION
;

690 
vTaskAŒoˇãMPURegi⁄s
–
TaskH™dÀ_t
 
xTask
,

691 c⁄° 
Mem‹yRegi⁄_t
 * c⁄° 
pxRegi⁄s
 ) 
PRIVILEGED_FUNCTION
;

734 
vTaskDñëe
–
TaskH™dÀ_t
 
xTaskToDñëe
 ) 
PRIVILEGED_FUNCTION
;

788 
vTaskDñay
–c⁄° 
TickTy≥_t
 
xTicksToDñay
 ) 
PRIVILEGED_FUNCTION
;

855 
Ba£Ty≥_t
 
xTaskDñayU¡û
–
TickTy≥_t
 * c⁄° 
pxPªviousWakeTime
,

856 c⁄° 
TickTy≥_t
 
xTimeIn¸emít
 ) 
PRIVILEGED_FUNCTION
;

862 
	#vTaskDñayU¡û
–
pxPªviousWakeTime
, 
xTimeIn¸emít
 ) \

864 –Ë
	`xTaskDñayU¡û
–
pxPªviousWakeTime
, 
xTimeIn¸emít
 ); \

865 }

	)

898 
Ba£Ty≥_t
 
xTaskAb‹tDñay
–
TaskH™dÀ_t
 
xTask
 ) 
PRIVILEGED_FUNCTION
;

947 
UBa£Ty≥_t
 
uxTaskPri‹ôyGë
–c⁄° 
TaskH™dÀ_t
 
xTask
 ) 
PRIVILEGED_FUNCTION
;

957 
UBa£Ty≥_t
 
uxTaskPri‹ôyGëFromISR
–c⁄° 
TaskH™dÀ_t
 
xTask
 ) 
PRIVILEGED_FUNCTION
;

977 
eTaskSèã
 
eTaskGëSèã
–
TaskH™dÀ_t
 
xTask
 ) 
PRIVILEGED_FUNCTION
;

1035 
vTaskGëInfo
–
TaskH™dÀ_t
 
xTask
,

1036 
TaskSètus_t
 * 
pxTaskSètus
,

1037 
Ba£Ty≥_t
 
xGëFªeSèckS∑˚
,

1038 
eTaskSèã
 
eSèã
 ) 
PRIVILEGED_FUNCTION
;

1082 
vTaskPri‹ôySë
–
TaskH™dÀ_t
 
xTask
,

1083 
UBa£Ty≥_t
 
uxNewPri‹ôy
 ) 
PRIVILEGED_FUNCTION
;

1136 
vTaskSu•íd
–
TaskH™dÀ_t
 
xTaskToSu•íd
 ) 
PRIVILEGED_FUNCTION
;

1187 
vTaskResume
–
TaskH™dÀ_t
 
xTaskToResume
 ) 
PRIVILEGED_FUNCTION
;

1218 
Ba£Ty≥_t
 
xTaskResumeFromISR
–
TaskH™dÀ_t
 
xTaskToResume
 ) 
PRIVILEGED_FUNCTION
;

1253 
vTaskSèπScheduÀr
–Ë
PRIVILEGED_FUNCTION
;

1311 
vTaskEndScheduÀr
–Ë
PRIVILEGED_FUNCTION
;

1364 
vTaskSu•ídAŒ
–Ë
PRIVILEGED_FUNCTION
;

1420 
Ba£Ty≥_t
 
xTaskResumeAŒ
–Ë
PRIVILEGED_FUNCTION
;

1437 
TickTy≥_t
 
xTaskGëTickCou¡
–Ë
PRIVILEGED_FUNCTION
;

1455 
TickTy≥_t
 
xTaskGëTickCou¡FromISR
–Ë
PRIVILEGED_FUNCTION
;

1471 
UBa£Ty≥_t
 
uxTaskGëNumbîOfTasks
–Ë
PRIVILEGED_FUNCTION
;

1486 * 
pcTaskGëName
–
TaskH™dÀ_t
 
xTaskToQuîy
 ) 
PRIVILEGED_FUNCTION
;

1504 
TaskH™dÀ_t
 
xTaskGëH™dÀ
–c⁄° * 
pcNameToQuîy
 ) 
PRIVILEGED_FUNCTION
;

1533 
UBa£Ty≥_t
 
uxTaskGëSèckHighW©îM¨k
–
TaskH™dÀ_t
 
xTask
 ) 
PRIVILEGED_FUNCTION
;

1562 
c⁄figSTACK_DEPTH_TYPE
 
uxTaskGëSèckHighW©îM¨k2
–
TaskH™dÀ_t
 
xTask
 ) 
PRIVILEGED_FUNCTION
;

1570 #ifde‡
c⁄figUSE_APPLICATION_TASK_TAG


1571 #i‡
c⁄figUSE_APPLICATION_TASK_TAG
 == 1

1583 
vTaskSëAµliˇti⁄TaskTag
–
TaskH™dÀ_t
 
xTask
,

1584 
TaskHookFun˘i⁄_t
 
pxHookFun˘i⁄
 ) 
PRIVILEGED_FUNCTION
;

1596 
TaskHookFun˘i⁄_t
 
xTaskGëAµliˇti⁄TaskTag
–
TaskH™dÀ_t
 
xTask
 ) 
PRIVILEGED_FUNCTION
;

1607 
TaskHookFun˘i⁄_t
 
xTaskGëAµliˇti⁄TaskTagFromISR
–
TaskH™dÀ_t
 
xTask
 ) 
PRIVILEGED_FUNCTION
;

1611 #i‡–
c⁄figNUM_THREAD_LOCAL_STORAGE_POINTERS
 > 0 )

1618 
vTaskSëThªadLoˇlSt‹agePoöãr
–
TaskH™dÀ_t
 
xTaskToSë
,

1619 
Ba£Ty≥_t
 
xIndex
,

1620 * 
pvVÆue
 ) 
PRIVILEGED_FUNCTION
;

1621 * 
pvTaskGëThªadLoˇlSt‹agePoöãr
–
TaskH™dÀ_t
 
xTaskToQuîy
,

1622 
Ba£Ty≥_t
 
xIndex
 ) 
PRIVILEGED_FUNCTION
;

1626 #i‡–
c⁄figCHECK_FOR_STACK_OVERFLOW
 > 0 )

1641 
vAµliˇti⁄SèckOvîÊowHook
–
TaskH™dÀ_t
 
xTask
,

1642 * 
pcTaskName
 );

1646 #i‡ ( 
c⁄figUSE_TICK_HOOK
 > 0 )

1656 
vAµliˇti⁄TickHook
( );

1660 #i‡–
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 )

1675 
vAµliˇti⁄GëIdÀTaskMem‹y
–
SèticTask_t
 ** 
µxIdÀTaskTCBBuf„r
,

1676 
SèckTy≥_t
 ** 
µxIdÀTaskSèckBuf„r
,

1677 
uöt32_t
 * 
pulIdÀTaskSèckSize
 );

1693 
Ba£Ty≥_t
 
xTaskCÆlAµliˇti⁄TaskHook
–
TaskH™dÀ_t
 
xTask
,

1694 * 
pvP¨amëî
 ) 
PRIVILEGED_FUNCTION
;

1703 
TaskH™dÀ_t
 
xTaskGëIdÀTaskH™dÀ
–Ë
PRIVILEGED_FUNCTION
;

1802 
UBa£Ty≥_t
 
uxTaskGëSy°emSèã
–
TaskSètus_t
 * c⁄° 
pxTaskSètusAºay
,

1803 c⁄° 
UBa£Ty≥_t
 
uxAºaySize
,

1804 
c⁄figRUN_TIME_COUNTER_TYPE
 * c⁄° 
pulTŸÆRunTime
 ) 
PRIVILEGED_FUNCTION
;

1855 
vTaskLi°
–* 
pcWrôeBuf„r
 ) 
PRIVILEGED_FUNCTION
;

1911 
vTaskGëRunTimeSèts
–* 
pcWrôeBuf„r
 ) 
PRIVILEGED_FUNCTION
;

1951 
c⁄figRUN_TIME_COUNTER_TYPE
 
ulTaskGëIdÀRunTimeCou¡î
–Ë
PRIVILEGED_FUNCTION
;

1952 
c⁄figRUN_TIME_COUNTER_TYPE
 
ulTaskGëIdÀRunTimePî˚¡
–Ë
PRIVILEGED_FUNCTION
;

2062 
Ba£Ty≥_t
 
xTaskGíîicNŸify
–
TaskH™dÀ_t
 
xTaskToNŸify
,

2063 
UBa£Ty≥_t
 
uxIndexToNŸify
,

2064 
uöt32_t
 
ulVÆue
,

2065 
eNŸifyA˘i⁄
 
eA˘i⁄
,

2066 
uöt32_t
 * 
pulPªviousNŸifiˇti⁄VÆue
 ) 
PRIVILEGED_FUNCTION
;

2067 
	#xTaskNŸify
–
xTaskToNŸify
, 
ulVÆue
, 
eA˘i⁄
 ) \

2068 
	`xTaskGíîicNŸify
––
xTaskToNŸify
 ), ( 
tskDEFAULT_INDEX_TO_NOTIFY
 ), ( 
ulVÆue
 ), ( 
eA˘i⁄
 ), 
NULL
 )

	)

2069 
	#xTaskNŸifyIndexed
–
xTaskToNŸify
, 
uxIndexToNŸify
, 
ulVÆue
, 
eA˘i⁄
 ) \

2070 
	`xTaskGíîicNŸify
––
xTaskToNŸify
 ), ( 
uxIndexToNŸify
 ), ( 
ulVÆue
 ), ( 
eA˘i⁄
 ), 
NULL
 )

	)

2096 
	#xTaskNŸifyAndQuîy
–
xTaskToNŸify
, 
ulVÆue
, 
eA˘i⁄
, 
pulPªviousNŸifyVÆue
 ) \

2097 
	`xTaskGíîicNŸify
––
xTaskToNŸify
 ), ( 
tskDEFAULT_INDEX_TO_NOTIFY
 ), ( 
ulVÆue
 ), ( 
eA˘i⁄
 ), ( 
pulPªviousNŸifyVÆue
 ) )

	)

2098 
	#xTaskNŸifyAndQuîyIndexed
–
xTaskToNŸify
, 
uxIndexToNŸify
, 
ulVÆue
, 
eA˘i⁄
, 
pulPªviousNŸifyVÆue
 ) \

2099 
	`xTaskGíîicNŸify
––
xTaskToNŸify
 ), ( 
uxIndexToNŸify
 ), ( 
ulVÆue
 ), ( 
eA˘i⁄
 ), ( 
pulPªviousNŸifyVÆue
 ) )

	)

2214 
Ba£Ty≥_t
 
xTaskGíîicNŸifyFromISR
–
TaskH™dÀ_t
 
xTaskToNŸify
,

2215 
UBa£Ty≥_t
 
uxIndexToNŸify
,

2216 
uöt32_t
 
ulVÆue
,

2217 
eNŸifyA˘i⁄
 
eA˘i⁄
,

2218 
uöt32_t
 * 
pulPªviousNŸifiˇti⁄VÆue
,

2219 
Ba£Ty≥_t
 * 
pxHighîPri‹ôyTaskWokí
 ) 
PRIVILEGED_FUNCTION
;

2220 
	#xTaskNŸifyFromISR
–
xTaskToNŸify
, 
ulVÆue
, 
eA˘i⁄
, 
pxHighîPri‹ôyTaskWokí
 ) \

2221 
	`xTaskGíîicNŸifyFromISR
––
xTaskToNŸify
 ), ( 
tskDEFAULT_INDEX_TO_NOTIFY
 ), ( 
ulVÆue
 ), ( 
eA˘i⁄
 ), 
NULL
, ( 
pxHighîPri‹ôyTaskWokí
 ) )

	)

2222 
	#xTaskNŸifyIndexedFromISR
–
xTaskToNŸify
, 
uxIndexToNŸify
, 
ulVÆue
, 
eA˘i⁄
, 
pxHighîPri‹ôyTaskWokí
 ) \

2223 
	`xTaskGíîicNŸifyFromISR
––
xTaskToNŸify
 ), ( 
uxIndexToNŸify
 ), ( 
ulVÆue
 ), ( 
eA˘i⁄
 ), 
NULL
, ( 
pxHighîPri‹ôyTaskWokí
 ) )

	)

2249 
	#xTaskNŸifyAndQuîyIndexedFromISR
–
xTaskToNŸify
, 
uxIndexToNŸify
, 
ulVÆue
, 
eA˘i⁄
, 
pulPªviousNŸifiˇti⁄VÆue
, 
pxHighîPri‹ôyTaskWokí
 ) \

2250 
	`xTaskGíîicNŸifyFromISR
––
xTaskToNŸify
 ), ( 
uxIndexToNŸify
 ), ( 
ulVÆue
 ), ( 
eA˘i⁄
 ), ( 
pulPªviousNŸifiˇti⁄VÆue
 ), ( 
pxHighîPri‹ôyTaskWokí
 ) )

	)

2251 
	#xTaskNŸifyAndQuîyFromISR
–
xTaskToNŸify
, 
ulVÆue
, 
eA˘i⁄
, 
pulPªviousNŸifiˇti⁄VÆue
, 
pxHighîPri‹ôyTaskWokí
 ) \

2252 
	`xTaskGíîicNŸifyFromISR
––
xTaskToNŸify
 ), ( 
tskDEFAULT_INDEX_TO_NOTIFY
 ), ( 
ulVÆue
 ), ( 
eA˘i⁄
 ), ( 
pulPªviousNŸifiˇti⁄VÆue
 ), ( 
pxHighîPri‹ôyTaskWokí
 ) )

	)

2358 
Ba£Ty≥_t
 
xTaskGíîicNŸifyWaô
–
UBa£Ty≥_t
 
uxIndexToWaôOn
,

2359 
uöt32_t
 
ulBôsToCÀ¨OnE¡ry
,

2360 
uöt32_t
 
ulBôsToCÀ¨OnExô
,

2361 
uöt32_t
 * 
pulNŸifiˇti⁄VÆue
,

2362 
TickTy≥_t
 
xTicksToWaô
 ) 
PRIVILEGED_FUNCTION
;

2363 
	#xTaskNŸifyWaô
–
ulBôsToCÀ¨OnE¡ry
, 
ulBôsToCÀ¨OnExô
, 
pulNŸifiˇti⁄VÆue
, 
xTicksToWaô
 ) \

2364 
	`xTaskGíîicNŸifyWaô
–
tskDEFAULT_INDEX_TO_NOTIFY
, ( 
ulBôsToCÀ¨OnE¡ry
 ), ( 
ulBôsToCÀ¨OnExô
 ), ( 
pulNŸifiˇti⁄VÆue
 ), ( 
xTicksToWaô
 ) )

	)

2365 
	#xTaskNŸifyWaôIndexed
–
uxIndexToWaôOn
, 
ulBôsToCÀ¨OnE¡ry
, 
ulBôsToCÀ¨OnExô
, 
pulNŸifiˇti⁄VÆue
, 
xTicksToWaô
 ) \

2366 
	`xTaskGíîicNŸifyWaô
––
uxIndexToWaôOn
 ), ( 
ulBôsToCÀ¨OnE¡ry
 ), ( 
ulBôsToCÀ¨OnExô
 ), ( 
pulNŸifiˇti⁄VÆue
 ), ( 
xTicksToWaô
 ) )

	)

2440 
	#xTaskNŸifyGive
–
xTaskToNŸify
 ) \

2441 
	`xTaskGíîicNŸify
––
xTaskToNŸify
 ), ( 
tskDEFAULT_INDEX_TO_NOTIFY
 ), ( 0 ), 
eIn¸emít
, 
NULL
 )

	)

2442 
	#xTaskNŸifyGiveIndexed
–
xTaskToNŸify
, 
uxIndexToNŸify
 ) \

2443 
	`xTaskGíîicNŸify
––
xTaskToNŸify
 ), ( 
uxIndexToNŸify
 ), ( 0 ), 
eIn¸emít
, 
NULL
 )

	)

2524 
vTaskGíîicNŸifyGiveFromISR
–
TaskH™dÀ_t
 
xTaskToNŸify
,

2525 
UBa£Ty≥_t
 
uxIndexToNŸify
,

2526 
Ba£Ty≥_t
 * 
pxHighîPri‹ôyTaskWokí
 ) 
PRIVILEGED_FUNCTION
;

2527 
	#vTaskNŸifyGiveFromISR
–
xTaskToNŸify
, 
pxHighîPri‹ôyTaskWokí
 ) \

2528 
	`vTaskGíîicNŸifyGiveFromISR
––
xTaskToNŸify
 ), ( 
tskDEFAULT_INDEX_TO_NOTIFY
 ), ( 
pxHighîPri‹ôyTaskWokí
 ) );

	)

2529 
	#vTaskNŸifyGiveIndexedFromISR
–
xTaskToNŸify
, 
uxIndexToNŸify
, 
pxHighîPri‹ôyTaskWokí
 ) \

2530 
	`vTaskGíîicNŸifyGiveFromISR
––
xTaskToNŸify
 ), ( 
uxIndexToNŸify
 ), ( 
pxHighîPri‹ôyTaskWokí
 ) );

	)

2630 
uöt32_t
 
ulTaskGíîicNŸifyTake
–
UBa£Ty≥_t
 
uxIndexToWaôOn
,

2631 
Ba£Ty≥_t
 
xCÀ¨Cou¡OnExô
,

2632 
TickTy≥_t
 
xTicksToWaô
 ) 
PRIVILEGED_FUNCTION
;

2633 
	#ulTaskNŸifyTake
–
xCÀ¨Cou¡OnExô
, 
xTicksToWaô
 ) \

2634 
	`ulTaskGíîicNŸifyTake
––
tskDEFAULT_INDEX_TO_NOTIFY
 ), ( 
xCÀ¨Cou¡OnExô
 ), ( 
xTicksToWaô
 ) )

	)

2635 
	#ulTaskNŸifyTakeIndexed
–
uxIndexToWaôOn
, 
xCÀ¨Cou¡OnExô
, 
xTicksToWaô
 ) \

2636 
	`ulTaskGíîicNŸifyTake
––
uxIndexToWaôOn
 ), ( 
xCÀ¨Cou¡OnExô
 ), ( 
xTicksToWaô
 ) )

	)

2695 
Ba£Ty≥_t
 
xTaskGíîicNŸifySèãCÀ¨
–
TaskH™dÀ_t
 
xTask
,

2696 
UBa£Ty≥_t
 
uxIndexToCÀ¨
 ) 
PRIVILEGED_FUNCTION
;

2697 
	#xTaskNŸifySèãCÀ¨
–
xTask
 ) \

2698 
	`xTaskGíîicNŸifySèãCÀ¨
––
xTask
 ), ( 
tskDEFAULT_INDEX_TO_NOTIFY
 ) )

	)

2699 
	#xTaskNŸifySèãCÀ¨Indexed
–
xTask
, 
uxIndexToCÀ¨
 ) \

2700 
	`xTaskGíîicNŸifySèãCÀ¨
––
xTask
 ), ( 
uxIndexToCÀ¨
 ) )

	)

2760 
uöt32_t
 
ulTaskGíîicNŸifyVÆueCÀ¨
–
TaskH™dÀ_t
 
xTask
,

2761 
UBa£Ty≥_t
 
uxIndexToCÀ¨
,

2762 
uöt32_t
 
ulBôsToCÀ¨
 ) 
PRIVILEGED_FUNCTION
;

2763 
	#ulTaskNŸifyVÆueCÀ¨
–
xTask
, 
ulBôsToCÀ¨
 ) \

2764 
	`ulTaskGíîicNŸifyVÆueCÀ¨
––
xTask
 ), ( 
tskDEFAULT_INDEX_TO_NOTIFY
 ), ( 
ulBôsToCÀ¨
 ) )

	)

2765 
	#ulTaskNŸifyVÆueCÀ¨Indexed
–
xTask
, 
uxIndexToCÀ¨
, 
ulBôsToCÀ¨
 ) \

2766 
	`ulTaskGíîicNŸifyVÆueCÀ¨
––
xTask
 ), ( 
uxIndexToCÀ¨
 ), ( 
ulBôsToCÀ¨
 ) )

	)

2782 
vTaskSëTimeOutSèã
–
TimeOut_t
 * c⁄° 
pxTimeOut
 ) 
PRIVILEGED_FUNCTION
;

2867 
Ba£Ty≥_t
 
xTaskCheckF‹TimeOut
–
TimeOut_t
 * c⁄° 
pxTimeOut
,

2868 
TickTy≥_t
 * c⁄° 
pxTicksToWaô
 ) 
PRIVILEGED_FUNCTION
;

2896 
Ba£Ty≥_t
 
xTaskC©chUpTicks
–
TickTy≥_t
 
xTicksToC©chUp
 ) 
PRIVILEGED_FUNCTION
;

2918 
Ba£Ty≥_t
 
xTaskIn¸emítTick
–Ë
PRIVILEGED_FUNCTION
;

2951 
vTaskPœ˚OnEvítLi°
–
Li°_t
 * c⁄° 
pxEvítLi°
,

2952 c⁄° 
TickTy≥_t
 
xTicksToWaô
 ) 
PRIVILEGED_FUNCTION
;

2953 
vTaskPœ˚OnUn‹dîedEvítLi°
–
Li°_t
 * 
pxEvítLi°
,

2954 c⁄° 
TickTy≥_t
 
xIãmVÆue
,

2955 c⁄° 
TickTy≥_t
 
xTicksToWaô
 ) 
PRIVILEGED_FUNCTION
;

2968 
vTaskPœ˚OnEvítLi°Re°ri˘ed
–
Li°_t
 * c⁄° 
pxEvítLi°
,

2969 
TickTy≥_t
 
xTicksToWaô
,

2970 c⁄° 
Ba£Ty≥_t
 
xWaôIndeföôñy
 ) 
PRIVILEGED_FUNCTION
;

2996 
Ba£Ty≥_t
 
xTaskRemoveFromEvítLi°
–c⁄° 
Li°_t
 * c⁄° 
pxEvítLi°
 ) 
PRIVILEGED_FUNCTION
;

2997 
vTaskRemoveFromUn‹dîedEvítLi°
–
Li°Iãm_t
 * 
pxEvítLi°Iãm
,

2998 c⁄° 
TickTy≥_t
 
xIãmVÆue
 ) 
PRIVILEGED_FUNCTION
;

3008 
p‹tDONT_DISCARD
 
vTaskSwôchC⁄ãxt
–Ë
PRIVILEGED_FUNCTION
;

3014 
TickTy≥_t
 
uxTaskRe£tEvítIãmVÆue
–Ë
PRIVILEGED_FUNCTION
;

3019 
TaskH™dÀ_t
 
xTaskGëCuºítTaskH™dÀ
–Ë
PRIVILEGED_FUNCTION
;

3025 
vTaskMis£dYõld
–Ë
PRIVILEGED_FUNCTION
;

3031 
Ba£Ty≥_t
 
xTaskGëScheduÀrSèã
–Ë
PRIVILEGED_FUNCTION
;

3037 
Ba£Ty≥_t
 
xTaskPri‹ôyInhîô
–
TaskH™dÀ_t
 c⁄° 
pxMuãxHﬁdî
 ) 
PRIVILEGED_FUNCTION
;

3043 
Ba£Ty≥_t
 
xTaskPri‹ôyDisöhîô
–
TaskH™dÀ_t
 c⁄° 
pxMuãxHﬁdî
 ) 
PRIVILEGED_FUNCTION
;

3053 
vTaskPri‹ôyDisöhîôA·îTimeout
–
TaskH™dÀ_t
 c⁄° 
pxMuãxHﬁdî
,

3054 
UBa£Ty≥_t
 
uxHighe°Pri‹ôyWaôögTask
 ) 
PRIVILEGED_FUNCTION
;

3059 
UBa£Ty≥_t
 
uxTaskGëTaskNumbî
–
TaskH™dÀ_t
 
xTask
 ) 
PRIVILEGED_FUNCTION
;

3065 
vTaskSëTaskNumbî
–
TaskH™dÀ_t
 
xTask
,

3066 c⁄° 
UBa£Ty≥_t
 
uxH™dÀ
 ) 
PRIVILEGED_FUNCTION
;

3076 
vTaskSãpTick
–c⁄° 
TickTy≥_t
 
xTicksToJump
 ) 
PRIVILEGED_FUNCTION
;

3092 
eSÀïModeSètus
 
eTaskC⁄fúmSÀïModeSètus
–Ë
PRIVILEGED_FUNCTION
;

3098 
TaskH™dÀ_t
 
pvTaskIn¸emítMuãxHñdCou¡
–Ë
PRIVILEGED_FUNCTION
;

3104 
vTaskI¡î«lSëTimeOutSèã
–
TimeOut_t
 * c⁄° 
pxTimeOut
 ) 
PRIVILEGED_FUNCTION
;

3108 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\timers.h

30 #i‚de‡
TIMERS_H


31 
	#TIMERS_H


	)

33 #i‚de‡
INC_FREERTOS_H


39 
	~"èsk.h
"

43 #ifde‡
__˝lu•lus


57 
	#tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR
 ( ( 
Ba£Ty≥_t
 ) -2 )

	)

58 
	#tmrCOMMAND_EXECUTE_CALLBACK
 ( ( 
Ba£Ty≥_t
 ) -1 )

	)

59 
	#tmrCOMMAND_START_DONT_TRACE
 ( ( 
Ba£Ty≥_t
 ) 0 )

	)

60 
	#tmrCOMMAND_START
 ( ( 
Ba£Ty≥_t
 ) 1 )

	)

61 
	#tmrCOMMAND_RESET
 ( ( 
Ba£Ty≥_t
 ) 2 )

	)

62 
	#tmrCOMMAND_STOP
 ( ( 
Ba£Ty≥_t
 ) 3 )

	)

63 
	#tmrCOMMAND_CHANGE_PERIOD
 ( ( 
Ba£Ty≥_t
 ) 4 )

	)

64 
	#tmrCOMMAND_DELETE
 ( ( 
Ba£Ty≥_t
 ) 5 )

	)

66 
	#tmrFIRST_FROM_ISR_COMMAND
 ( ( 
Ba£Ty≥_t
 ) 6 )

	)

67 
	#tmrCOMMAND_START_FROM_ISR
 ( ( 
Ba£Ty≥_t
 ) 6 )

	)

68 
	#tmrCOMMAND_RESET_FROM_ISR
 ( ( 
Ba£Ty≥_t
 ) 7 )

	)

69 
	#tmrCOMMAND_STOP_FROM_ISR
 ( ( 
Ba£Ty≥_t
 ) 8 )

	)

70 
	#tmrCOMMAND_CHANGE_PERIOD_FROM_ISR
 ( ( 
Ba£Ty≥_t
 ) 9 )

	)

79 
tmrTimîC⁄åﬁ
;

80 
tmrTimîC⁄åﬁ
 * 
	tTimîH™dÀ_t
;

85 (* 
TimîCÆlbackFun˘i⁄_t
)–
	tTimîH™dÀ_t
 
	txTimî
 );

91 (* 
PídedFun˘i⁄_t
)( *,

92 
	tuöt32_t
 );

231 #i‡–
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 )

232 
TimîH™dÀ_t
 
xTimîCª©e
–c⁄° * c⁄° 
pcTimîName
,

233 c⁄° 
TickTy≥_t
 
xTimîPîiodInTicks
,

234 c⁄° 
UBa£Ty≥_t
 
uxAutoRñﬂd
,

235 * c⁄° 
pvTimîID
,

236 
TimîCÆlbackFun˘i⁄_t
 
pxCÆlbackFun˘i⁄
 ) 
PRIVILEGED_FUNCTION
;

361 #i‡–
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 )

362 
TimîH™dÀ_t
 
xTimîCª©eSètic
–c⁄° * c⁄° 
pcTimîName
,

363 c⁄° 
TickTy≥_t
 
xTimîPîiodInTicks
,

364 c⁄° 
UBa£Ty≥_t
 
uxAutoRñﬂd
,

365 * c⁄° 
pvTimîID
,

366 
TimîCÆlbackFun˘i⁄_t
 
pxCÆlbackFun˘i⁄
,

367 
SèticTimî_t
 * 
pxTimîBuf„r
 ) 
PRIVILEGED_FUNCTION
;

390 * 
pvTimîGëTimîID
–c⁄° 
TimîH™dÀ_t
 
xTimî
 ) 
PRIVILEGED_FUNCTION
;

411 
vTimîSëTimîID
–
TimîH™dÀ_t
 
xTimî
,

412 * 
pvNewID
 ) 
PRIVILEGED_FUNCTION
;

449 
Ba£Ty≥_t
 
xTimîIsTimîA˘ive
–
TimîH™dÀ_t
 
xTimî
 ) 
PRIVILEGED_FUNCTION
;

457 
TaskH™dÀ_t
 
xTimîGëTimîD´m⁄TaskH™dÀ
–Ë
PRIVILEGED_FUNCTION
;

509 
	#xTimîSèπ
–
xTimî
, 
xTicksToWaô
 ) \

510 
	`xTimîGíîicComm™d
––
xTimî
 ), 
tmrCOMMAND_START
, ( 
	`xTaskGëTickCou¡
(Ë), 
NULL
, ( 
xTicksToWaô
 ) )

	)

552 
	#xTimîSt›
–
xTimî
, 
xTicksToWaô
 ) \

553 
	`xTimîGíîicComm™d
––
xTimî
 ), 
tmrCOMMAND_STOP
, 0U, 
NULL
, ( 
xTicksToWaô
 ) )

	)

633 
	#xTimîCh™gePîiod
–
xTimî
, 
xNewPîiod
, 
xTicksToWaô
 ) \

634 
	`xTimîGíîicComm™d
––
xTimî
 ), 
tmrCOMMAND_CHANGE_PERIOD
, ( 
xNewPîiod
 ), 
NULL
, ( 
xTicksToWaô
 ) )

	)

672 
	#xTimîDñëe
–
xTimî
, 
xTicksToWaô
 ) \

673 
	`xTimîGíîicComm™d
––
xTimî
 ), 
tmrCOMMAND_DELETE
, 0U, 
NULL
, ( 
xTicksToWaô
 ) )

	)

797 
	#xTimîRe£t
–
xTimî
, 
xTicksToWaô
 ) \

798 
	`xTimîGíîicComm™d
––
xTimî
 ), 
tmrCOMMAND_RESET
, ( 
	`xTaskGëTickCou¡
(Ë), 
NULL
, ( 
xTicksToWaô
 ) )

	)

884 
	#xTimîSèπFromISR
–
xTimî
, 
pxHighîPri‹ôyTaskWokí
 ) \

885 
	`xTimîGíîicComm™d
––
xTimî
 ), 
tmrCOMMAND_START_FROM_ISR
, ( 
	`xTaskGëTickCou¡FromISR
(Ë), ( 
pxHighîPri‹ôyTaskWokí
 ), 0U )

	)

948 
	#xTimîSt›FromISR
–
xTimî
, 
pxHighîPri‹ôyTaskWokí
 ) \

949 
	`xTimîGíîicComm™d
––
xTimî
 ), 
tmrCOMMAND_STOP_FROM_ISR
, 0, ( 
pxHighîPri‹ôyTaskWokí
 ), 0U )

	)

1022 
	#xTimîCh™gePîiodFromISR
–
xTimî
, 
xNewPîiod
, 
pxHighîPri‹ôyTaskWokí
 ) \

1023 
	`xTimîGíîicComm™d
––
xTimî
 ), 
tmrCOMMAND_CHANGE_PERIOD_FROM_ISR
, ( 
xNewPîiod
 ), ( 
pxHighîPri‹ôyTaskWokí
 ), 0U )

	)

1109 
	#xTimîRe£tFromISR
–
xTimî
, 
pxHighîPri‹ôyTaskWokí
 ) \

1110 
	`xTimîGíîicComm™d
––
xTimî
 ), 
tmrCOMMAND_RESET_FROM_ISR
, ( 
	`xTaskGëTickCou¡FromISR
(Ë), ( 
pxHighîPri‹ôyTaskWokí
 ), 0U )

	)

1201 
Ba£Ty≥_t
 
xTimîPídFun˘i⁄CÆlFromISR
–
PídedFun˘i⁄_t
 
xFun˘i⁄ToPíd
,

1202 * 
pvP¨amëî1
,

1203 
uöt32_t
 
ulP¨amëî2
,

1204 
Ba£Ty≥_t
 * 
pxHighîPri‹ôyTaskWokí
 ) 
PRIVILEGED_FUNCTION
;

1238 
Ba£Ty≥_t
 
xTimîPídFun˘i⁄CÆl
–
PídedFun˘i⁄_t
 
xFun˘i⁄ToPíd
,

1239 * 
pvP¨amëî1
,

1240 
uöt32_t
 
ulP¨amëî2
,

1241 
TickTy≥_t
 
xTicksToWaô
 ) 
PRIVILEGED_FUNCTION
;

1252 c⁄° * 
pcTimîGëName
–
TimîH™dÀ_t
 
xTimî
 ) 
PRIVILEGED_FUNCTION
;

1269 
vTimîSëRñﬂdMode
–
TimîH™dÀ_t
 
xTimî
,

1270 c⁄° 
UBa£Ty≥_t
 
uxAutoRñﬂd
 ) 
PRIVILEGED_FUNCTION
;

1284 
UBa£Ty≥_t
 
uxTimîGëRñﬂdMode
–
TimîH™dÀ_t
 
xTimî
 ) 
PRIVILEGED_FUNCTION
;

1295 
TickTy≥_t
 
xTimîGëPîiod
–
TimîH™dÀ_t
 
xTimî
 ) 
PRIVILEGED_FUNCTION
;

1310 
TickTy≥_t
 
xTimîGëExpúyTime
–
TimîH™dÀ_t
 
xTimî
 ) 
PRIVILEGED_FUNCTION
;

1316 
Ba£Ty≥_t
 
xTimîCª©eTimîTask
–Ë
PRIVILEGED_FUNCTION
;

1317 
Ba£Ty≥_t
 
xTimîGíîicComm™d
–
TimîH™dÀ_t
 
xTimî
,

1318 c⁄° 
Ba£Ty≥_t
 
xComm™dID
,

1319 c⁄° 
TickTy≥_t
 
xO±i⁄ÆVÆue
,

1320 
Ba£Ty≥_t
 * c⁄° 
pxHighîPri‹ôyTaskWokí
,

1321 c⁄° 
TickTy≥_t
 
xTicksToWaô
 ) 
PRIVILEGED_FUNCTION
;

1323 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

1324 
vTimîSëTimîNumbî
–
TimîH™dÀ_t
 
xTimî
,

1325 
UBa£Ty≥_t
 
uxTimîNumbî
 ) 
PRIVILEGED_FUNCTION
;

1326 
UBa£Ty≥_t
 
uxTimîGëTimîNumbî
–
TimîH™dÀ_t
 
xTimî
 ) 
PRIVILEGED_FUNCTION
;

1329 #i‡–
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 )

1344 
vAµliˇti⁄GëTimîTaskMem‹y
–
SèticTask_t
 ** 
µxTimîTaskTCBBuf„r
,

1345 
SèckTy≥_t
 ** 
µxTimîTaskSèckBuf„r
,

1346 
uöt32_t
 * 
pulTimîTaskSèckSize
 );

1351 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\list.c

30 
	~<°dlib.h
>

35 
	#MPU_WRAPPERS_INCLUDED_FROM_API_FILE


	)

37 
	~"FªeRTOS.h
"

38 
	~"li°.h
"

44 #unde‡
MPU_WRAPPERS_INCLUDED_FROM_API_FILE


50 
	$vLi°Inôüli£
–
Li°_t
 * c⁄° 
pxLi°
 )

55 
pxLi°
->
pxIndex
 = ( 
Li°Iãm_t
 * ) &–pxLi°->
xLi°End
 );

59 
pxLi°
->
xLi°End
.
xIãmVÆue
 = 
p‹tMAX_DELAY
;

63 
pxLi°
->
xLi°End
.
pxNext
 = ( 
Li°Iãm_t
 * ) &(ÖxList->xListEnd );

64 
pxLi°
->
xLi°End
.
pxPªvious
 = ( 
Li°Iãm_t
 * ) &(ÖxList->xListEnd );

66 
pxLi°
->
uxNumbîOfIãms
 = ( 
UBa£Ty≥_t
 ) 0U;

70 
	`li°SET_LIST_INTEGRITY_CHECK_1_VALUE
–
pxLi°
 );

71 
	`li°SET_LIST_INTEGRITY_CHECK_2_VALUE
–
pxLi°
 );

72 
	}
}

75 
	$vLi°Inôüli£Iãm
–
Li°Iãm_t
 * c⁄° 
pxIãm
 )

78 
pxIãm
->
pxC⁄èöî
 = 
NULL
;

82 
	`li°SET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE
–
pxIãm
 );

83 
	`li°SET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE
–
pxIãm
 );

84 
	}
}

87 
	$vLi°In£πEnd
–
Li°_t
 * c⁄° 
pxLi°
,

88 
Li°Iãm_t
 * c⁄° 
pxNewLi°Iãm
 )

90 
Li°Iãm_t
 * c⁄° 
pxIndex
 = 
pxLi°
->pxIndex;

95 
	`li°TEST_LIST_INTEGRITY
–
pxLi°
 );

96 
	`li°TEST_LIST_ITEM_INTEGRITY
–
pxNewLi°Iãm
 );

101 
pxNewLi°Iãm
->
pxNext
 = 
pxIndex
;

102 
pxNewLi°Iãm
->
pxPªvious
 = 
pxIndex
->pxPrevious;

105 
	`mtCOVERAGE_TEST_DELAY
();

107 
pxIndex
->
pxPªvious
->
pxNext
 = 
pxNewLi°Iãm
;

108 
pxIndex
->
pxPªvious
 = 
pxNewLi°Iãm
;

111 
pxNewLi°Iãm
->
pxC⁄èöî
 = 
pxLi°
;

113 –
pxLi°
->
uxNumbîOfIãms
 )++;

114 
	}
}

117 
	$vLi°In£π
–
Li°_t
 * c⁄° 
pxLi°
,

118 
Li°Iãm_t
 * c⁄° 
pxNewLi°Iãm
 )

120 
Li°Iãm_t
 * 
pxIãøt‹
;

121 c⁄° 
TickTy≥_t
 
xVÆueOfIn£πi⁄
 = 
pxNewLi°Iãm
->
xIãmVÆue
;

126 
	`li°TEST_LIST_INTEGRITY
–
pxLi°
 );

127 
	`li°TEST_LIST_ITEM_INTEGRITY
–
pxNewLi°Iãm
 );

137 if–
xVÆueOfIn£πi⁄
 =
p‹tMAX_DELAY
 )

139 
pxIãøt‹
 = 
pxLi°
->
xLi°End
.
pxPªvious
;

168  
pxIãøt‹
 = ( 
Li°Iãm_t
 * ) &–
pxLi°
->
xLi°End
 );ÖxIãøt‹->
pxNext
->
xIãmVÆue
 <
xVÆueOfIn£πi⁄
;ÖxIterator =ÖxIterator->pxNext )

175 
pxNewLi°Iãm
->
pxNext
 = 
pxIãøt‹
->pxNext;

176 
pxNewLi°Iãm
->
pxNext
->
pxPªvious
 =ÖxNewListItem;

177 
pxNewLi°Iãm
->
pxPªvious
 = 
pxIãøt‹
;

178 
pxIãøt‹
->
pxNext
 = 
pxNewLi°Iãm
;

182 
pxNewLi°Iãm
->
pxC⁄èöî
 = 
pxLi°
;

184 –
pxLi°
->
uxNumbîOfIãms
 )++;

185 
	}
}

188 
UBa£Ty≥_t
 
	$uxLi°Remove
–
Li°Iãm_t
 * c⁄° 
pxIãmToRemove
 )

192 
Li°_t
 * c⁄° 
pxLi°
 = 
pxIãmToRemove
->
pxC⁄èöî
;

194 
pxIãmToRemove
->
pxNext
->
pxPªvious
 =ÖxItemToRemove->pxPrevious;

195 
pxIãmToRemove
->
pxPªvious
->
pxNext
 =ÖxItemToRemove->pxNext;

198 
	`mtCOVERAGE_TEST_DELAY
();

201 if–
pxLi°
->
pxIndex
 =
pxIãmToRemove
 )

203 
pxLi°
->
pxIndex
 = 
pxIãmToRemove
->
pxPªvious
;

207 
	`mtCOVERAGE_TEST_MARKER
();

210 
pxIãmToRemove
->
pxC⁄èöî
 = 
NULL
;

211 –
pxLi°
->
uxNumbîOfIãms
 )--;

213  
pxLi°
->
uxNumbîOfIãms
;

214 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\port.c

34 
	~"FªeRTOS.h
"

35 
	~"èsk.h
"

40 #i‚de‡
c⁄figKERNEL_INTERRUPT_PRIORITY


41 
	#c⁄figKERNEL_INTERRUPT_PRIORITY
 255

	)

44 #i‚de‡
c⁄figSYSTICK_CLOCK_HZ


45 
	#c⁄figSYSTICK_CLOCK_HZ
 
c⁄figCPU_CLOCK_HZ


	)

47 
	#p‹tNVIC_SYSTICK_CLK_BIT
 ( 1UL << 2UL )

	)

52 
	#p‹tNVIC_SYSTICK_CLK_BIT
 ( 0 )

	)

56 
	#p‹tNVIC_SYSTICK_CTRL_REG
 ( *––vﬁ©ûê
uöt32_t
 * ) 0xe000e010 ) )

	)

57 
	#p‹tNVIC_SYSTICK_LOAD_REG
 ( *––vﬁ©ûê
uöt32_t
 * ) 0xe000e014 ) )

	)

58 
	#p‹tNVIC_SYSTICK_CURRENT_VALUE_REG
 ( *––vﬁ©ûê
uöt32_t
 * ) 0xe000e018 ) )

	)

59 
	#p‹tNVIC_SHPR3_REG
 ( *––vﬁ©ûê
uöt32_t
 * ) 0xe000ed20 ) )

	)

61 
	#p‹tNVIC_SYSTICK_INT_BIT
 ( 1UL << 1UL )

	)

62 
	#p‹tNVIC_SYSTICK_ENABLE_BIT
 ( 1UL << 0UL )

	)

63 
	#p‹tNVIC_SYSTICK_COUNT_FLAG_BIT
 ( 1UL << 16UL )

	)

64 
	#p‹tNVIC_PENDSVCLEAR_BIT
 ( 1UL << 27UL )

	)

65 
	#p‹tNVIC_PEND_SYSTICK_CLEAR_BIT
 ( 1UL << 25UL )

	)

67 
	#p‹tNVIC_PENDSV_PRI
 ( ( ( 
uöt32_t
 ) 
c⁄figKERNEL_INTERRUPT_PRIORITY
 ) << 16UL )

	)

68 
	#p‹tNVIC_SYSTICK_PRI
 ( ( ( 
uöt32_t
 ) 
c⁄figKERNEL_INTERRUPT_PRIORITY
 ) << 24UL )

	)

71 
	#p‹tFIRST_USER_INTERRUPT_NUMBER
 ( 16 )

	)

72 
	#p‹tNVIC_IP_REGISTERS_OFFSET_16
 ( 0xE000E3F0 )

	)

73 
	#p‹tAIRCR_REG
 ( *––vﬁ©ûê
uöt32_t
 * ) 0xE000ED0C ) )

	)

74 
	#p‹tMAX_8_BIT_VALUE
 ( ( 
uöt8_t
 ) 0xf‡)

	)

75 
	#p‹tTOP_BIT_OF_BYTE
 ( ( 
uöt8_t
 ) 0x80 )

	)

76 
	#p‹tMAX_PRIGROUP_BITS
 ( ( 
uöt8_t
 ) 7 )

	)

77 
	#p‹tPRIORITY_GROUP_MASK
 ( 0x07UL << 8UL )

	)

78 
	#p‹tPRIGROUP_SHIFT
 ( 8UL )

	)

81 
	#p‹tVECTACTIVE_MASK
 ( 0xFFUL )

	)

84 
	#p‹tINITIAL_XPSR
 ( 0x01000000UL )

	)

87 
	#p‹tMAX_24_BIT_NUMBER
 ( 0xffffffUL )

	)

92 
	#p‹tMISSED_COUNTS_FACTOR
 ( 45UL )

	)

96 
	#p‹tSTART_ADDRESS_MASK
 ( ( 
SèckTy≥_t
 ) 0xffffff„UL )

	)

101 #ifde‡
c⁄figTASK_RETURN_ADDRESS


102 
	#p‹tTASK_RETURN_ADDRESS
 
c⁄figTASK_RETURN_ADDRESS


	)

104 
	#p‹tTASK_RETURN_ADDRESS
 
¥vTaskExôEº‹


	)

112 
vP‹tSëupTimîI¡îru±
( );

117 
	$xP‹tPídSVH™dÀr
–Ë
	`__©åibuã__
––
«ked
 ) );

118 
	`xP‹tSysTickH™dÀr
( );

119 
	$vP‹tSVCH™dÀr
–Ë
	`__©åibuã__
––
«ked
 ) );

124 
	$¥vP‹tSèπFú°Task
–Ë
	`__©åibuã__
––
«ked
 ) );

129 
	`¥vTaskExôEº‹
( );

135 
UBa£Ty≥_t
 
uxCrôiˇlNe°ög
 = 0xaaaaaaaa;

140 #i‡–
c⁄figUSE_TICKLESS_IDLE
 == 1 )

141 
uöt32_t
 
ulTimîCou¡sF‹O√Tick
 = 0;

148 #i‡–
c⁄figUSE_TICKLESS_IDLE
 == 1 )

149 
uöt32_t
 
xMaximumPossibÀSuµªs£dTicks
 = 0;

156 #i‡–
c⁄figUSE_TICKLESS_IDLE
 == 1 )

157 
uöt32_t
 
ulSt›≥dTimîCom≥nßti⁄
 = 0;

165 #i‡–
c⁄figASSERT_DEFINED
 == 1 )

166 
uöt8_t
 
ucMaxSysCÆlPri‹ôy
 = 0;

167 
uöt32_t
 
ulMaxPRIGROUPVÆue
 = 0;

168 c⁄° vﬁ©ûê
uöt8_t
 * c⁄° 
pcI¡îru±Pri‹ôyRegi°îs
 = ( c⁄° vﬁ©ûêuöt8_à* c⁄° ) 
p‹tNVIC_IP_REGISTERS_OFFSET_16
;

176 
SèckTy≥_t
 * 
	$pxP‹tInôüli£Sèck
–
SèckTy≥_t
 * 
pxT›OfSèck
,

177 
TaskFun˘i⁄_t
 
pxCode
,

178 * 
pvP¨amëîs
 )

182 
pxT›OfSèck
--;

183 *
pxT›OfSèck
 = 
p‹tINITIAL_XPSR
;

184 
pxT›OfSèck
--;

185 *
pxT›OfSèck
 = ( ( 
SèckTy≥_t
 ) 
pxCode
 ) & 
p‹tSTART_ADDRESS_MASK
;

186 
pxT›OfSèck
--;

187 *
pxT›OfSèck
 = ( 
SèckTy≥_t
 ) 
p‹tTASK_RETURN_ADDRESS
;

188 
pxT›OfSèck
 -= 5;

189 *
pxT›OfSèck
 = ( 
SèckTy≥_t
 ) 
pvP¨amëîs
;

190 
pxT›OfSèck
 -= 8;

192  
pxT›OfSèck
;

193 
	}
}

196 
	$¥vTaskExôEº‹
( )

198 vﬁ©ûê
uöt32_t
 
ulDummy
 = 0UL;

206 
	`c⁄figASSERT
–
uxCrôiˇlNe°ög
 == ~0UL );

207 
	`p‹tDISABLE_INTERRUPTS
();

209  
ulDummy
 == 0 )

219 
	}
}

222 
	$vP‹tSVCH™dÀr
( )

224 
__asm
 volatile (

239 
	}
}

242 
	$¥vP‹tSèπFú°Task
( )

244 
__asm
 volatile (

257 
	}
}

263 
Ba£Ty≥_t
 
	$xP‹tSèπScheduÀr
( )

267 
	`c⁄figASSERT
–
c⁄figMAX_SYSCALL_INTERRUPT_PRIORITY
 );

269 #i‡–
c⁄figASSERT_DEFINED
 == 1 )

271 vﬁ©ûê
uöt32_t
 
ulOrigöÆPri‹ôy
;

272 vﬁ©ûê
uöt8_t
 * c⁄° 
pucFú°U£rPri‹ôyRegi°î
 = ( vﬁ©ûêuöt8_à* c⁄° ) ( 
p‹tNVIC_IP_REGISTERS_OFFSET_16
 + 
p‹tFIRST_USER_INTERRUPT_NUMBER
 );

273 vﬁ©ûê
uöt8_t
 
ucMaxPri‹ôyVÆue
;

281 
ulOrigöÆPri‹ôy
 = *
pucFú°U£rPri‹ôyRegi°î
;

285 *
pucFú°U£rPri‹ôyRegi°î
 = 
p‹tMAX_8_BIT_VALUE
;

288 
ucMaxPri‹ôyVÆue
 = *
pucFú°U£rPri‹ôyRegi°î
;

291 
ucMaxSysCÆlPri‹ôy
 = 
c⁄figMAX_SYSCALL_INTERRUPT_PRIORITY
 & 
ucMaxPri‹ôyVÆue
;

295 
ulMaxPRIGROUPVÆue
 = 
p‹tMAX_PRIGROUP_BITS
;

297  ( 
ucMaxPri‹ôyVÆue
 & 
p‹tTOP_BIT_OF_BYTE
 ) ==ÖortTOP_BIT_OF_BYTE )

299 
ulMaxPRIGROUPVÆue
--;

300 
ucMaxPri‹ôyVÆue
 <<–
uöt8_t
 ) 0x01;

303 #ifde‡
__NVIC_PRIO_BITS


308 
	`c⁄figASSERT
––
p‹tMAX_PRIGROUP_BITS
 - 
ulMaxPRIGROUPVÆue
 ) =
__NVIC_PRIO_BITS
 );

312 #ifde‡
c⁄figPRIO_BITS


317 
	`c⁄figASSERT
––
p‹tMAX_PRIGROUP_BITS
 - 
ulMaxPRIGROUPVÆue
 ) =
c⁄figPRIO_BITS
 );

323 
ulMaxPRIGROUPVÆue
 <<
p‹tPRIGROUP_SHIFT
;

324 
ulMaxPRIGROUPVÆue
 &
p‹tPRIORITY_GROUP_MASK
;

328 *
pucFú°U£rPri‹ôyRegi°î
 = 
ulOrigöÆPri‹ôy
;

333 
p‹tNVIC_SHPR3_REG
 |
p‹tNVIC_PENDSV_PRI
;

334 
p‹tNVIC_SHPR3_REG
 |
p‹tNVIC_SYSTICK_PRI
;

338 
	`vP‹tSëupTimîI¡îru±
();

341 
uxCrôiˇlNe°ög
 = 0;

344 
	`¥vP‹tSèπFú°Task
();

352 
	`vTaskSwôchC⁄ãxt
();

353 
	`¥vTaskExôEº‹
();

357 
	}
}

360 
	$vP‹tEndScheduÀr
( )

364 
	`c⁄figASSERT
–
uxCrôiˇlNe°ög
 == 1000UL );

365 
	}
}

368 
	$vP‹tE¡îCrôiˇl
( )

370 
	`p‹tDISABLE_INTERRUPTS
();

371 
uxCrôiˇlNe°ög
++;

378 if–
uxCrôiˇlNe°ög
 == 1 )

380 
	`c⁄figASSERT
––
p‹tNVIC_INT_CTRL_REG
 & 
p‹tVECTACTIVE_MASK
 ) == 0 );

382 
	}
}

385 
	$vP‹tExôCrôiˇl
( )

387 
	`c⁄figASSERT
–
uxCrôiˇlNe°ög
 );

388 
uxCrôiˇlNe°ög
--;

390 if–
uxCrôiˇlNe°ög
 == 0 )

392 
	`p‹tENABLE_INTERRUPTS
();

394 
	}
}

397 
	$xP‹tPídSVH™dÀr
( )

401 
__asm
 volatile

429 ::"i" ( 
c⁄figMAX_SYSCALL_INTERRUPT_PRIORITY
 )

431 
	}
}

434 
	$xP‹tSysTickH™dÀr
( )

440 
	`p‹tDISABLE_INTERRUPTS
();

443 if–
	`xTaskIn¸emítTick
(Ë!
pdFALSE
 )

447 
p‹tNVIC_INT_CTRL_REG
 = 
p‹tNVIC_PENDSVSET_BIT
;

450 
	`p‹tENABLE_INTERRUPTS
();

451 
	}
}

454 #i‡–
c⁄figUSE_TICKLESS_IDLE
 == 1 )

456 
__©åibuã__
––
wók
 ) ) 
	$vP‹tSuµªssTicksAndSÀï
–
TickTy≥_t
 
xEx≥˘edIdÀTime
 )

458 
uöt32_t
 
ulRñﬂdVÆue
, 
ulCom∂ëeTickPîiods
, 
ulCom∂ëedSysTickDe¸emíts
;

459 
TickTy≥_t
 
xModifübÀIdÀTime
;

462 if–
xEx≥˘edIdÀTime
 > 
xMaximumPossibÀSuµªs£dTicks
 )

464 
xEx≥˘edIdÀTime
 = 
xMaximumPossibÀSuµªs£dTicks
;

471 
p‹tNVIC_SYSTICK_CTRL_REG
 &~
p‹tNVIC_SYSTICK_ENABLE_BIT
;

476 
ulRñﬂdVÆue
 = 
p‹tNVIC_SYSTICK_CURRENT_VALUE_REG
 + ( 
ulTimîCou¡sF‹O√Tick
 * ( 
xEx≥˘edIdÀTime
 - 1UL ) );

478 if–
ulRñﬂdVÆue
 > 
ulSt›≥dTimîCom≥nßti⁄
 )

480 
ulRñﬂdVÆue
 -
ulSt›≥dTimîCom≥nßti⁄
;

485 
__asm
 volatile ( "cpsid i" ::: "memory" );

486 
__asm
 volatile ( "dsb" );

487 
__asm
 volatile ( "isb" );

491 if–
	`eTaskC⁄fúmSÀïModeSètus
(Ë=
eAb‹tSÀï
 )

495 
p‹tNVIC_SYSTICK_LOAD_REG
 = 
p‹tNVIC_SYSTICK_CURRENT_VALUE_REG
;

498 
p‹tNVIC_SYSTICK_CTRL_REG
 |
p‹tNVIC_SYSTICK_ENABLE_BIT
;

502 
p‹tNVIC_SYSTICK_LOAD_REG
 = 
ulTimîCou¡sF‹O√Tick
 - 1UL;

506 
__asm
 volatile ( "cpsie i" ::: "memory" );

511 
p‹tNVIC_SYSTICK_LOAD_REG
 = 
ulRñﬂdVÆue
;

515 
p‹tNVIC_SYSTICK_CURRENT_VALUE_REG
 = 0UL;

518 
p‹tNVIC_SYSTICK_CTRL_REG
 |
p‹tNVIC_SYSTICK_ENABLE_BIT
;

525 
xModifübÀIdÀTime
 = 
xEx≥˘edIdÀTime
;

526 
	`c⁄figPRE_SLEEP_PROCESSING
–
xModifübÀIdÀTime
 );

528 if–
xModifübÀIdÀTime
 > 0 )

530 
__asm
 volatile ( "dsb" ::: "memory" );

531 
__asm
 volatile ( "wfi" );

532 
__asm
 volatile ( "isb" );

535 
	`c⁄figPOST_SLEEP_PROCESSING
–
xEx≥˘edIdÀTime
 );

540 
__asm
 volatile ( "cpsie i" ::: "memory" );

541 
__asm
 volatile ( "dsb" );

542 
__asm
 volatile ( "isb" );

548 
__asm
 volatile ( "cpsid i" ::: "memory" );

549 
__asm
 volatile ( "dsb" );

550 
__asm
 volatile ( "isb" );

559 
p‹tNVIC_SYSTICK_CTRL_REG
 = ( 
p‹tNVIC_SYSTICK_CLK_BIT
 | 
p‹tNVIC_SYSTICK_INT_BIT
 );

566 if––
p‹tNVIC_SYSTICK_CTRL_REG
 & 
p‹tNVIC_SYSTICK_COUNT_FLAG_BIT
 ) != 0 )

568 
uöt32_t
 
ulCÆcuœãdLﬂdVÆue
;

574 
ulCÆcuœãdLﬂdVÆue
 = ( 
ulTimîCou¡sF‹O√Tick
 - 1UL ) - ( 
ulRñﬂdVÆue
 - 
p‹tNVIC_SYSTICK_CURRENT_VALUE_REG
 );

579 if––
ulCÆcuœãdLﬂdVÆue
 < 
ulSt›≥dTimîCom≥nßti⁄
 ) || ( ulCÆcuœãdLﬂdVÆuê> 
ulTimîCou¡sF‹O√Tick
 ) )

581 
ulCÆcuœãdLﬂdVÆue
 = ( 
ulTimîCou¡sF‹O√Tick
 - 1UL );

584 
p‹tNVIC_SYSTICK_LOAD_REG
 = 
ulCÆcuœãdLﬂdVÆue
;

589 
ulCom∂ëeTickPîiods
 = 
xEx≥˘edIdÀTime
 - 1UL;

597 
ulCom∂ëedSysTickDe¸emíts
 = ( 
xEx≥˘edIdÀTime
 * 
ulTimîCou¡sF‹O√Tick
 ) - 
p‹tNVIC_SYSTICK_CURRENT_VALUE_REG
;

601 
ulCom∂ëeTickPîiods
 = 
ulCom∂ëedSysTickDe¸emíts
 / 
ulTimîCou¡sF‹O√Tick
;

605 
p‹tNVIC_SYSTICK_LOAD_REG
 = ( ( 
ulCom∂ëeTickPîiods
 + 1UL ) * 
ulTimîCou¡sF‹O√Tick
 ) - 
ulCom∂ëedSysTickDe¸emíts
;

611 
p‹tNVIC_SYSTICK_CURRENT_VALUE_REG
 = 0UL;

612 
p‹tNVIC_SYSTICK_CTRL_REG
 |
p‹tNVIC_SYSTICK_ENABLE_BIT
;

613 
	`vTaskSãpTick
–
ulCom∂ëeTickPîiods
 );

614 
p‹tNVIC_SYSTICK_LOAD_REG
 = 
ulTimîCou¡sF‹O√Tick
 - 1UL;

617 
__asm
 volatile ( "cpsie i" ::: "memory" );

619 
	}
}

628 
__©åibuã__
––
wók
 ) ) 
	$vP‹tSëupTimîI¡îru±
( )

631 #i‡–
c⁄figUSE_TICKLESS_IDLE
 == 1 )

633 
ulTimîCou¡sF‹O√Tick
 = ( 
c⁄figSYSTICK_CLOCK_HZ
 / 
c⁄figTICK_RATE_HZ
 );

634 
xMaximumPossibÀSuµªs£dTicks
 = 
p‹tMAX_24_BIT_NUMBER
 / 
ulTimîCou¡sF‹O√Tick
;

635 
ulSt›≥dTimîCom≥nßti⁄
 = 
p‹tMISSED_COUNTS_FACTOR
 / ( 
c⁄figCPU_CLOCK_HZ
 / 
c⁄figSYSTICK_CLOCK_HZ
 );

640 
p‹tNVIC_SYSTICK_CTRL_REG
 = 0UL;

641 
p‹tNVIC_SYSTICK_CURRENT_VALUE_REG
 = 0UL;

644 
p‹tNVIC_SYSTICK_LOAD_REG
 = ( 
c⁄figSYSTICK_CLOCK_HZ
 / 
c⁄figTICK_RATE_HZ
 ) - 1UL;

645 
p‹tNVIC_SYSTICK_CTRL_REG
 = ( 
p‹tNVIC_SYSTICK_CLK_BIT
 | 
p‹tNVIC_SYSTICK_INT_BIT
 | 
p‹tNVIC_SYSTICK_ENABLE_BIT
 );

646 
	}
}

649 #i‡–
c⁄figASSERT_DEFINED
 == 1 )

651 
	$vP‹tVÆid©eI¡îru±Pri‹ôy
( )

653 
uöt32_t
 
ulCuºítI¡îru±
;

654 
uöt8_t
 
ucCuºítPri‹ôy
;

657 
__asm
 vﬁ©ûê–"mr†%0, ip§" : "Ù" ( 
ulCuºítI¡îru±
 )::"memory" );

660 if–
ulCuºítI¡îru±
 >
p‹tFIRST_USER_INTERRUPT_NUMBER
 )

663 
ucCuºítPri‹ôy
 = 
pcI¡îru±Pri‹ôyRegi°îs
[ 
ulCuºítI¡îru±
 ];

688 
	`c⁄figASSERT
–
ucCuºítPri‹ôy
 >
ucMaxSysCÆlPri‹ôy
 );

704 
	`c⁄figASSERT
––
p‹tAIRCR_REG
 & 
p‹tPRIORITY_GROUP_MASK
 ) <
ulMaxPRIGROUPVÆue
 );

705 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\queue.c

29 
	~<°dlib.h
>

30 
	~<°rög.h
>

35 
	#MPU_WRAPPERS_INCLUDED_FROM_API_FILE


	)

37 
	~"FªeRTOS.h
"

38 
	~"èsk.h
"

39 
	~"queue.h
"

41 #i‡–
c⁄figUSE_CO_ROUTINES
 == 1 )

42 
	~"¸outöe.h
"

49 #unde‡
MPU_WRAPPERS_INCLUDED_FROM_API_FILE


53 
	#queueUNLOCKED
 ( ( 
öt8_t
 ) -1 )

	)

54 
	#queueLOCKED_UNMODIFIED
 ( ( 
öt8_t
 ) 0 )

	)

55 
	#queueINT8_MAX
 ( ( 
öt8_t
 ) 127 )

	)

66 
	#uxQueueTy≥
 
pcHód


	)

67 
	#queueQUEUE_IS_MUTEX
 
NULL


	)

69 
	sQueuePoöãrs


71 
öt8_t
 * 
	mpcTaû
;

72 
öt8_t
 * 
	mpcRódFrom
;

73 } 
	tQueuePoöãrs_t
;

75 
	sSem≠h‹eD©a


77 
TaskH™dÀ_t
 
	mxMuãxHﬁdî
;

78 
UBa£Ty≥_t
 
	muxRecursiveCÆlCou¡
;

79 } 
	tSem≠h‹eD©a_t
;

83 
	#queueSEMAPHORE_QUEUE_ITEM_LENGTH
 ( ( 
UBa£Ty≥_t
 ) 0 )

	)

84 
	#queueMUTEX_GIVE_BLOCK_TIME
 ( ( 
TickTy≥_t
 ) 0U )

	)

86 #i‡–
c⁄figUSE_PREEMPTION
 == 0 )

90 
	#queueYIELD_IF_USING_PREEMPTION
()

	)

92 
	#queueYIELD_IF_USING_PREEMPTION
(Ë
	`p‹tYIELD_WITHIN_API
()

	)

100 
	sQueueDeföôi⁄


102 
öt8_t
 * 
	mpcHód
;

103 
öt8_t
 * 
	mpcWrôeTo
;

107 
QueuePoöãrs_t
 
	mxQueue
;

108 
Sem≠h‹eD©a_t
 
	mxSem≠h‹e
;

109 } 
	mu
;

111 
Li°_t
 
	mxTasksWaôögToSíd
;

112 
Li°_t
 
	mxTasksWaôögToRe˚ive
;

114 vﬁ©ûê
UBa£Ty≥_t
 
	muxMesßgesWaôög
;

115 
UBa£Ty≥_t
 
	muxLígth
;

116 
UBa£Ty≥_t
 
	muxIãmSize
;

118 vﬁ©ûê
öt8_t
 
	mcRxLock
;

119 vﬁ©ûê
öt8_t
 
	mcTxLock
;

121 #i‡––
c⁄figSUPPORT_STATIC_ALLOCATION
 =1 ) && ( 
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 ) )

122 
uöt8_t
 
	mucSètiˇŒyAŒoˇãd
;

125 #i‡–
c⁄figUSE_QUEUE_SETS
 == 1 )

126 
QueueDeföôi⁄
 * 
	mpxQueueSëC⁄èöî
;

129 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

130 
UBa£Ty≥_t
 
	muxQueueNumbî
;

131 
uöt8_t
 
	mucQueueTy≥
;

133 } 
	txQUEUE
;

137 
xQUEUE
 
	tQueue_t
;

145 #i‡–
c⁄figQUEUE_REGISTRY_SIZE
 > 0 )

150 
	sQUEUE_REGISTRY_ITEM


152 c⁄° * 
	mpcQueueName
;

153 
QueueH™dÀ_t
 
	mxH™dÀ
;

154 } 
	txQueueRegi°ryIãm
;

159 
xQueueRegi°ryIãm
 
	tQueueRegi°ryIãm_t
;

164 
PRIVILEGED_DATA
 
QueueRegi°ryIãm_t
 
	gxQueueRegi°ry
[ 
c⁄figQUEUE_REGISTRY_SIZE
 ];

176 
	$¥vU∆ockQueue
–
Queue_t
 * c⁄° 
pxQueue
 ) 
PRIVILEGED_FUNCTION
;

183 
Ba£Ty≥_t
 
	$¥vIsQueueEm±y
–c⁄° 
Queue_t
 * 
pxQueue
 ) 
PRIVILEGED_FUNCTION
;

190 
Ba£Ty≥_t
 
	$¥vIsQueueFuŒ
–c⁄° 
Queue_t
 * 
pxQueue
 ) 
PRIVILEGED_FUNCTION
;

196 
Ba£Ty≥_t
 
	$¥vC›yD©aToQueue
–
Queue_t
 * c⁄° 
pxQueue
,

197 c⁄° * 
pvIãmToQueue
,

198 c⁄° 
Ba£Ty≥_t
 
xPosôi⁄
 ) 
PRIVILEGED_FUNCTION
;

203 
	$¥vC›yD©aFromQueue
–
Queue_t
 * c⁄° 
pxQueue
,

204 * c⁄° 
pvBuf„r
 ) 
PRIVILEGED_FUNCTION
;

206 #i‡–
c⁄figUSE_QUEUE_SETS
 == 1 )

212 
Ba£Ty≥_t
 
	$¥vNŸifyQueueSëC⁄èöî
–c⁄° 
Queue_t
 * c⁄° 
pxQueue
 ) 
PRIVILEGED_FUNCTION
;

219 
	$¥vInôüli£NewQueue
–c⁄° 
UBa£Ty≥_t
 
uxQueueLígth
,

220 c⁄° 
UBa£Ty≥_t
 
uxIãmSize
,

221 
uöt8_t
 * 
pucQueueSt‹age
,

222 c⁄° 
uöt8_t
 
ucQueueTy≥
,

223 
Queue_t
 * 
pxNewQueue
 ) 
PRIVILEGED_FUNCTION
;

230 #i‡–
c⁄figUSE_MUTEXES
 == 1 )

231 
	$¥vInôüli£Muãx
–
Queue_t
 * 
pxNewQueue
 ) 
PRIVILEGED_FUNCTION
;

234 #i‡–
c⁄figUSE_MUTEXES
 == 1 )

243 
UBa£Ty≥_t
 
	$¥vGëDisöhîôPri‹ôyA·îTimeout
–c⁄° 
Queue_t
 * c⁄° 
pxQueue
 ) 
PRIVILEGED_FUNCTION
;

251 
	#¥vLockQueue
–
pxQueue
 ) \

252 
	`èskENTER_CRITICAL
(); \

254 if––
pxQueue
 )->
cRxLock
 =
queueUNLOCKED
 ) \

256 –
pxQueue
 )->
cRxLock
 = 
queueLOCKED_UNMODIFIED
; \

258 if––
pxQueue
 )->
cTxLock
 =
queueUNLOCKED
 ) \

260 –
pxQueue
 )->
cTxLock
 = 
queueLOCKED_UNMODIFIED
; \

262 
	}
} \

263 
	`èskEXIT_CRITICAL
()

	)

266 
Ba£Ty≥_t
 
	$xQueueGíîicRe£t
–
QueueH™dÀ_t
 
xQueue
,

267 
Ba£Ty≥_t
 
xNewQueue
 )

269 
Ba£Ty≥_t
 
xRëu∫
 = 
pdPASS
;

270 
Queue_t
 * c⁄° 
pxQueue
 = 
xQueue
;

272 
	`c⁄figASSERT
–
pxQueue
 );

274 if––
pxQueue
 !
NULL
 ) &&

275 –
pxQueue
->
uxLígth
 >= 1U ) &&

277 ––
SIZE_MAX
 / 
pxQueue
->
uxLígth
 ) >pxQueue->
uxIãmSize
 ) )

279 
	`èskENTER_CRITICAL
();

281 
pxQueue
->
u
.
xQueue
.
pcTaû
 =ÖxQueue->
pcHód
 + (ÖxQueue->
uxLígth
 *ÖxQueue->
uxIãmSize
 );

282 
pxQueue
->
uxMesßgesWaôög
 = ( 
UBa£Ty≥_t
 ) 0U;

283 
pxQueue
->
pcWrôeTo
 =ÖxQueue->
pcHód
;

284 
pxQueue
->
u
.
xQueue
.
pcRódFrom
 =ÖxQueue->
pcHód
 + ( (ÖxQueue->
uxLígth
 - 1U ) *ÖxQueue->
uxIãmSize
 );

285 
pxQueue
->
cRxLock
 = 
queueUNLOCKED
;

286 
pxQueue
->
cTxLock
 = 
queueUNLOCKED
;

288 if–
xNewQueue
 =
pdFALSE
 )

295 if–
	`li°LIST_IS_EMPTY
–&–
pxQueue
->
xTasksWaôögToSíd
 ) ) =
pdFALSE
 )

297 if–
	`xTaskRemoveFromEvítLi°
–&–
pxQueue
->
xTasksWaôögToSíd
 ) ) !
pdFALSE
 )

299 
	`queueYIELD_IF_USING_PREEMPTION
();

303 
	`mtCOVERAGE_TEST_MARKER
();

308 
	`mtCOVERAGE_TEST_MARKER
();

314 
	`vLi°Inôüli£
–&–
pxQueue
->
xTasksWaôögToSíd
 ) );

315 
	`vLi°Inôüli£
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) );

318 
	`èskEXIT_CRITICAL
();

322 
xRëu∫
 = 
pdFAIL
;

325 
	`c⁄figASSERT
–
xRëu∫
 !
pdFAIL
 );

329  
xRëu∫
;

330 
	}
}

333 #i‡–
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 )

335 
QueueH™dÀ_t
 
	$xQueueGíîicCª©eSètic
–c⁄° 
UBa£Ty≥_t
 
uxQueueLígth
,

336 c⁄° 
UBa£Ty≥_t
 
uxIãmSize
,

337 
uöt8_t
 * 
pucQueueSt‹age
,

338 
SèticQueue_t
 * 
pxSèticQueue
,

339 c⁄° 
uöt8_t
 
ucQueueTy≥
 )

341 
Queue_t
 * 
pxNewQueue
 = 
NULL
;

345 
	`c⁄figASSERT
–
pxSèticQueue
 );

347 if––
uxQueueLígth
 > ( 
UBa£Ty≥_t
 ) 0 ) &&

348 –
pxSèticQueue
 !
NULL
 ) &&

352 –!––
pucQueueSt‹age
 !
NULL
 ) && ( 
uxIãmSize
 == 0 ) ) ) &&

353 –!––
pucQueueSt‹age
 =
NULL
 ) && ( 
uxIãmSize
 != 0 ) ) ) )

355 #i‡–
c⁄figASSERT_DEFINED
 == 1 )

360 vﬁ©ûê
size_t
 
xSize
 = –
SèticQueue_t
 );

363 
	`c⁄figASSERT
–
xSize
 =–
Queue_t
 ) );

364 –Ë
xSize
;

371 
pxNewQueue
 = ( 
Queue_t
 * ) 
pxSèticQueue
;

373 #i‡–
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 )

378 
pxNewQueue
->
ucSètiˇŒyAŒoˇãd
 = 
pdTRUE
;

382 
	`¥vInôüli£NewQueue
–
uxQueueLígth
, 
uxIãmSize
, 
pucQueueSt‹age
, 
ucQueueTy≥
, 
pxNewQueue
 );

386 
	`c⁄figASSERT
–
pxNewQueue
 );

387 
	`mtCOVERAGE_TEST_MARKER
();

390  
pxNewQueue
;

391 
	}
}

396 #i‡–
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 )

398 
QueueH™dÀ_t
 
	$xQueueGíîicCª©e
–c⁄° 
UBa£Ty≥_t
 
uxQueueLígth
,

399 c⁄° 
UBa£Ty≥_t
 
uxIãmSize
,

400 c⁄° 
uöt8_t
 
ucQueueTy≥
 )

402 
Queue_t
 * 
pxNewQueue
 = 
NULL
;

403 
size_t
 
xQueueSizeInByãs
;

404 
uöt8_t
 * 
pucQueueSt‹age
;

406 if––
uxQueueLígth
 > ( 
UBa£Ty≥_t
 ) 0 ) &&

408 ––
SIZE_MAX
 / 
uxQueueLígth
 ) >
uxIãmSize
 ) &&

410 ––
SIZE_MAX
 - –
Queue_t
 ) ) >–
uxQueueLígth
 * 
uxIãmSize
 ) ) )

415 
xQueueSizeInByãs
 = ( 
size_t
 ) ( 
uxQueueLígth
 * 
uxIãmSize
 );

426 
pxNewQueue
 = ( 
Queue_t
 * ) 
	`pvP‹tMÆloc
––Queue_àË+ 
xQueueSizeInByãs
 );

428 if–
pxNewQueue
 !
NULL
 )

432 
pucQueueSt‹age
 = ( 
uöt8_t
 * ) 
pxNewQueue
;

433 
pucQueueSt‹age
 +–
Queue_t
 );

435 #i‡–
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 )

440 
pxNewQueue
->
ucSètiˇŒyAŒoˇãd
 = 
pdFALSE
;

444 
	`¥vInôüli£NewQueue
–
uxQueueLígth
, 
uxIãmSize
, 
pucQueueSt‹age
, 
ucQueueTy≥
, 
pxNewQueue
 );

448 
	`åa˚QUEUE_CREATE_FAILED
–
ucQueueTy≥
 );

449 
	`mtCOVERAGE_TEST_MARKER
();

454 
	`c⁄figASSERT
–
pxNewQueue
 );

455 
	`mtCOVERAGE_TEST_MARKER
();

458  
pxNewQueue
;

459 
	}
}

464 
	$¥vInôüli£NewQueue
–c⁄° 
UBa£Ty≥_t
 
uxQueueLígth
,

465 c⁄° 
UBa£Ty≥_t
 
uxIãmSize
,

466 
uöt8_t
 * 
pucQueueSt‹age
,

467 c⁄° 
uöt8_t
 
ucQueueTy≥
,

468 
Queue_t
 * 
pxNewQueue
 )

472 –Ë
ucQueueTy≥
;

474 if–
uxIãmSize
 =–
UBa£Ty≥_t
 ) 0 )

480 
pxNewQueue
->
pcHód
 = ( 
öt8_t
 * )ÖxNewQueue;

485 
pxNewQueue
->
pcHód
 = ( 
öt8_t
 * ) 
pucQueueSt‹age
;

490 
pxNewQueue
->
uxLígth
 = 
uxQueueLígth
;

491 
pxNewQueue
->
uxIãmSize
 = uxItemSize;

492 –Ë
	`xQueueGíîicRe£t
–
pxNewQueue
, 
pdTRUE
 );

494 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

496 
pxNewQueue
->
ucQueueTy≥
 = ucQueueType;

500 #i‡–
c⁄figUSE_QUEUE_SETS
 == 1 )

502 
pxNewQueue
->
pxQueueSëC⁄èöî
 = 
NULL
;

506 
	`åa˚QUEUE_CREATE
–
pxNewQueue
 );

507 
	}
}

510 #i‡–
c⁄figUSE_MUTEXES
 == 1 )

512 
	$¥vInôüli£Muãx
–
Queue_t
 * 
pxNewQueue
 )

514 if–
pxNewQueue
 !
NULL
 )

520 
pxNewQueue
->
u
.
xSem≠h‹e
.
xMuãxHﬁdî
 = 
NULL
;

521 
pxNewQueue
->
uxQueueTy≥
 = 
queueQUEUE_IS_MUTEX
;

524 
pxNewQueue
->
u
.
xSem≠h‹e
.
uxRecursiveCÆlCou¡
 = 0;

526 
	`åa˚CREATE_MUTEX
–
pxNewQueue
 );

529 –Ë
	`xQueueGíîicSíd
–
pxNewQueue
, 
NULL
, ( 
TickTy≥_t
 ) 0U, 
queueSEND_TO_BACK
 );

533 
	`åa˚CREATE_MUTEX_FAILED
();

535 
	}
}

540 #i‡––
c⁄figUSE_MUTEXES
 =1 ) && ( 
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 ) )

542 
QueueH™dÀ_t
 
	$xQueueCª©eMuãx
–c⁄° 
uöt8_t
 
ucQueueTy≥
 )

544 
QueueH™dÀ_t
 
xNewQueue
;

545 c⁄° 
UBa£Ty≥_t
 
uxMuãxLígth
 = ( UBa£Ty≥_àË1, 
uxMuãxSize
 = ( UBaseType_t ) 0;

547 
xNewQueue
 = 
	`xQueueGíîicCª©e
–
uxMuãxLígth
, 
uxMuãxSize
, 
ucQueueTy≥
 );

548 
	`¥vInôüli£Muãx
––
Queue_t
 * ) 
xNewQueue
 );

550  
xNewQueue
;

551 
	}
}

556 #i‡––
c⁄figUSE_MUTEXES
 =1 ) && ( 
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 ) )

558 
QueueH™dÀ_t
 
	$xQueueCª©eMuãxSètic
–c⁄° 
uöt8_t
 
ucQueueTy≥
,

559 
SèticQueue_t
 * 
pxSèticQueue
 )

561 
QueueH™dÀ_t
 
xNewQueue
;

562 c⁄° 
UBa£Ty≥_t
 
uxMuãxLígth
 = ( UBa£Ty≥_àË1, 
uxMuãxSize
 = ( UBaseType_t ) 0;

566 –Ë
ucQueueTy≥
;

568 
xNewQueue
 = 
	`xQueueGíîicCª©eSètic
–
uxMuãxLígth
, 
uxMuãxSize
, 
NULL
, 
pxSèticQueue
, 
ucQueueTy≥
 );

569 
	`¥vInôüli£Muãx
––
Queue_t
 * ) 
xNewQueue
 );

571  
xNewQueue
;

572 
	}
}

577 #i‡––
c⁄figUSE_MUTEXES
 =1 ) && ( 
INCLUDE_xSem≠h‹eGëMuãxHﬁdî
 == 1 ) )

579 
TaskH™dÀ_t
 
	$xQueueGëMuãxHﬁdî
–
QueueH™dÀ_t
 
xSem≠h‹e
 )

581 
TaskH™dÀ_t
 
pxRëu∫
;

582 
Queue_t
 * c⁄° 
pxSem≠h‹e
 = ( Queue_à* ) 
xSem≠h‹e
;

584 
	`c⁄figASSERT
–
xSem≠h‹e
 );

591 
	`èskENTER_CRITICAL
();

593 if–
pxSem≠h‹e
->
uxQueueTy≥
 =
queueQUEUE_IS_MUTEX
 )

595 
pxRëu∫
 = 
pxSem≠h‹e
->
u
.
xSem≠h‹e
.
xMuãxHﬁdî
;

599 
pxRëu∫
 = 
NULL
;

602 
	`èskEXIT_CRITICAL
();

604  
pxRëu∫
;

605 
	}
}

610 #i‡––
c⁄figUSE_MUTEXES
 =1 ) && ( 
INCLUDE_xSem≠h‹eGëMuãxHﬁdî
 == 1 ) )

612 
TaskH™dÀ_t
 
	$xQueueGëMuãxHﬁdîFromISR
–
QueueH™dÀ_t
 
xSem≠h‹e
 )

614 
TaskH™dÀ_t
 
pxRëu∫
;

616 
	`c⁄figASSERT
–
xSem≠h‹e
 );

621 if–––
Queue_t
 * ) 
xSem≠h‹e
 )->
uxQueueTy≥
 =
queueQUEUE_IS_MUTEX
 )

623 
pxRëu∫
 = ( ( 
Queue_t
 * ) 
xSem≠h‹e
 )->
u
.xSem≠h‹e.
xMuãxHﬁdî
;

627 
pxRëu∫
 = 
NULL
;

630  
pxRëu∫
;

631 
	}
}

636 #i‡–
c⁄figUSE_RECURSIVE_MUTEXES
 == 1 )

638 
Ba£Ty≥_t
 
	$xQueueGiveMuãxRecursive
–
QueueH™dÀ_t
 
xMuãx
 )

640 
Ba£Ty≥_t
 
xRëu∫
;

641 
Queue_t
 * c⁄° 
pxMuãx
 = ( Queue_à* ) 
xMuãx
;

643 
	`c⁄figASSERT
–
pxMuãx
 );

651 if–
pxMuãx
->
u
.
xSem≠h‹e
.
xMuãxHﬁdî
 =
	`xTaskGëCuºítTaskH™dÀ
() )

653 
	`åa˚GIVE_MUTEX_RECURSIVE
–
pxMuãx
 );

660 –
pxMuãx
->
u
.
xSem≠h‹e
.
uxRecursiveCÆlCou¡
 )--;

663 if–
pxMuãx
->
u
.
xSem≠h‹e
.
uxRecursiveCÆlCou¡
 =–
UBa£Ty≥_t
 ) 0 )

667 –Ë
	`xQueueGíîicSíd
–
pxMuãx
, 
NULL
, 
queueMUTEX_GIVE_BLOCK_TIME
, 
queueSEND_TO_BACK
 );

671 
	`mtCOVERAGE_TEST_MARKER
();

674 
xRëu∫
 = 
pdPASS
;

680 
xRëu∫
 = 
pdFAIL
;

682 
	`åa˚GIVE_MUTEX_RECURSIVE_FAILED
–
pxMuãx
 );

685  
xRëu∫
;

686 
	}
}

691 #i‡–
c⁄figUSE_RECURSIVE_MUTEXES
 == 1 )

693 
Ba£Ty≥_t
 
	$xQueueTakeMuãxRecursive
–
QueueH™dÀ_t
 
xMuãx
,

694 
TickTy≥_t
 
xTicksToWaô
 )

696 
Ba£Ty≥_t
 
xRëu∫
;

697 
Queue_t
 * c⁄° 
pxMuãx
 = ( Queue_à* ) 
xMuãx
;

699 
	`c⁄figASSERT
–
pxMuãx
 );

704 
	`åa˚TAKE_MUTEX_RECURSIVE
–
pxMuãx
 );

706 if–
pxMuãx
->
u
.
xSem≠h‹e
.
xMuãxHﬁdî
 =
	`xTaskGëCuºítTaskH™dÀ
() )

708 –
pxMuãx
->
u
.
xSem≠h‹e
.
uxRecursiveCÆlCou¡
 )++;

709 
xRëu∫
 = 
pdPASS
;

713 
xRëu∫
 = 
	`xQueueSem≠h‹eTake
–
pxMuãx
, 
xTicksToWaô
 );

718 if–
xRëu∫
 !
pdFAIL
 )

720 –
pxMuãx
->
u
.
xSem≠h‹e
.
uxRecursiveCÆlCou¡
 )++;

724 
	`åa˚TAKE_MUTEX_RECURSIVE_FAILED
–
pxMuãx
 );

728  
xRëu∫
;

729 
	}
}

734 #i‡––
c⁄figUSE_COUNTING_SEMAPHORES
 =1 ) && ( 
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 ) )

736 
QueueH™dÀ_t
 
	$xQueueCª©eCou¡ögSem≠h‹eSètic
–c⁄° 
UBa£Ty≥_t
 
uxMaxCou¡
,

737 c⁄° 
UBa£Ty≥_t
 
uxInôülCou¡
,

738 
SèticQueue_t
 * 
pxSèticQueue
 )

740 
QueueH™dÀ_t
 
xH™dÀ
 = 
NULL
;

742 if––
uxMaxCou¡
 != 0 ) &&

743 –
uxInôülCou¡
 <
uxMaxCou¡
 ) )

745 
xH™dÀ
 = 
	`xQueueGíîicCª©eSètic
–
uxMaxCou¡
, 
queueSEMAPHORE_QUEUE_ITEM_LENGTH
, 
NULL
, 
pxSèticQueue
, 
queueQUEUE_TYPE_COUNTING_SEMAPHORE
 );

747 if–
xH™dÀ
 !
NULL
 )

749 ––
Queue_t
 * ) 
xH™dÀ
 )->
uxMesßgesWaôög
 = 
uxInôülCou¡
;

751 
	`åa˚CREATE_COUNTING_SEMAPHORE
();

755 
	`åa˚CREATE_COUNTING_SEMAPHORE_FAILED
();

760 
	`c⁄figASSERT
–
xH™dÀ
 );

761 
	`mtCOVERAGE_TEST_MARKER
();

764  
xH™dÀ
;

765 
	}
}

770 #i‡––
c⁄figUSE_COUNTING_SEMAPHORES
 =1 ) && ( 
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 ) )

772 
QueueH™dÀ_t
 
	$xQueueCª©eCou¡ögSem≠h‹e
–c⁄° 
UBa£Ty≥_t
 
uxMaxCou¡
,

773 c⁄° 
UBa£Ty≥_t
 
uxInôülCou¡
 )

775 
QueueH™dÀ_t
 
xH™dÀ
 = 
NULL
;

777 if––
uxMaxCou¡
 != 0 ) &&

778 –
uxInôülCou¡
 <
uxMaxCou¡
 ) )

780 
xH™dÀ
 = 
	`xQueueGíîicCª©e
–
uxMaxCou¡
, 
queueSEMAPHORE_QUEUE_ITEM_LENGTH
, 
queueQUEUE_TYPE_COUNTING_SEMAPHORE
 );

782 if–
xH™dÀ
 !
NULL
 )

784 ––
Queue_t
 * ) 
xH™dÀ
 )->
uxMesßgesWaôög
 = 
uxInôülCou¡
;

786 
	`åa˚CREATE_COUNTING_SEMAPHORE
();

790 
	`åa˚CREATE_COUNTING_SEMAPHORE_FAILED
();

795 
	`c⁄figASSERT
–
xH™dÀ
 );

796 
	`mtCOVERAGE_TEST_MARKER
();

799  
xH™dÀ
;

800 
	}
}

805 
Ba£Ty≥_t
 
	$xQueueGíîicSíd
–
QueueH™dÀ_t
 
xQueue
,

806 c⁄° * c⁄° 
pvIãmToQueue
,

807 
TickTy≥_t
 
xTicksToWaô
,

808 c⁄° 
Ba£Ty≥_t
 
xC›yPosôi⁄
 )

810 
Ba£Ty≥_t
 
xE¡ryTimeSë
 = 
pdFALSE
, 
xYõldRequúed
;

811 
TimeOut_t
 
xTimeOut
;

812 
Queue_t
 * c⁄° 
pxQueue
 = 
xQueue
;

814 
	`c⁄figASSERT
–
pxQueue
 );

815 
	`c⁄figASSERT
–!––
pvIãmToQueue
 =
NULL
 ) && ( 
pxQueue
->
uxIãmSize
 !–
UBa£Ty≥_t
 ) 0U ) ) );

816 
	`c⁄figASSERT
–!––
xC›yPosôi⁄
 =
queueOVERWRITE
 ) && ( 
pxQueue
->
uxLígth
 != 1 ) ) );

817 #i‡––
INCLUDE_xTaskGëScheduÀrSèã
 =1 ) || ( 
c⁄figUSE_TIMERS
 == 1 ) )

819 
	`c⁄figASSERT
–!––
	`xTaskGëScheduÀrSèã
(Ë=
èskSCHEDULER_SUSPENDED
 ) && ( 
xTicksToWaô
 != 0 ) ) );

828 
	`èskENTER_CRITICAL
();

834 if––
pxQueue
->
uxMesßgesWaôög
 <ÖxQueue->
uxLígth
 ) || ( 
xC›yPosôi⁄
 =
queueOVERWRITE
 ) )

836 
	`åa˚QUEUE_SEND
–
pxQueue
 );

838 #i‡–
c⁄figUSE_QUEUE_SETS
 == 1 )

840 c⁄° 
UBa£Ty≥_t
 
uxPªviousMesßgesWaôög
 = 
pxQueue
->
uxMesßgesWaôög
;

842 
xYõldRequúed
 = 
	`¥vC›yD©aToQueue
–
pxQueue
, 
pvIãmToQueue
, 
xC›yPosôi⁄
 );

844 if–
pxQueue
->
pxQueueSëC⁄èöî
 !
NULL
 )

846 if––
xC›yPosôi⁄
 =
queueOVERWRITE
 ) && ( 
uxPªviousMesßgesWaôög
 !–
UBa£Ty≥_t
 ) 0 ) )

851 
	`mtCOVERAGE_TEST_MARKER
();

853 if–
	`¥vNŸifyQueueSëC⁄èöî
–
pxQueue
 ) !
pdFALSE
 )

858 
	`queueYIELD_IF_USING_PREEMPTION
();

862 
	`mtCOVERAGE_TEST_MARKER
();

869 if–
	`li°LIST_IS_EMPTY
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) ) =
pdFALSE
 )

871 if–
	`xTaskRemoveFromEvítLi°
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) ) !
pdFALSE
 )

877 
	`queueYIELD_IF_USING_PREEMPTION
();

881 
	`mtCOVERAGE_TEST_MARKER
();

884 if–
xYõldRequúed
 !
pdFALSE
 )

890 
	`queueYIELD_IF_USING_PREEMPTION
();

894 
	`mtCOVERAGE_TEST_MARKER
();

900 
xYõldRequúed
 = 
	`¥vC›yD©aToQueue
–
pxQueue
, 
pvIãmToQueue
, 
xC›yPosôi⁄
 );

904 if–
	`li°LIST_IS_EMPTY
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) ) =
pdFALSE
 )

906 if–
	`xTaskRemoveFromEvítLi°
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) ) !
pdFALSE
 )

912 
	`queueYIELD_IF_USING_PREEMPTION
();

916 
	`mtCOVERAGE_TEST_MARKER
();

919 if–
xYõldRequúed
 !
pdFALSE
 )

925 
	`queueYIELD_IF_USING_PREEMPTION
();

929 
	`mtCOVERAGE_TEST_MARKER
();

934 
	`èskEXIT_CRITICAL
();

935  
pdPASS
;

939 if–
xTicksToWaô
 =–
TickTy≥_t
 ) 0 )

943 
	`èskEXIT_CRITICAL
();

947 
	`åa˚QUEUE_SEND_FAILED
–
pxQueue
 );

948  
îrQUEUE_FULL
;

950 if–
xE¡ryTimeSë
 =
pdFALSE
 )

954 
	`vTaskI¡î«lSëTimeOutSèã
–&
xTimeOut
 );

955 
xE¡ryTimeSë
 = 
pdTRUE
;

960 
	`mtCOVERAGE_TEST_MARKER
();

964 
	`èskEXIT_CRITICAL
();

969 
	`vTaskSu•ídAŒ
();

970 
	`¥vLockQueue
–
pxQueue
 );

973 if–
	`xTaskCheckF‹TimeOut
–&
xTimeOut
, &
xTicksToWaô
 ) =
pdFALSE
 )

975 if–
	`¥vIsQueueFuŒ
–
pxQueue
 ) !
pdFALSE
 )

977 
	`åa˚BLOCKING_ON_QUEUE_SEND
–
pxQueue
 );

978 
	`vTaskPœ˚OnEvítLi°
–&–
pxQueue
->
xTasksWaôögToSíd
 ), 
xTicksToWaô
 );

985 
	`¥vU∆ockQueue
–
pxQueue
 );

992 if–
	`xTaskResumeAŒ
(Ë=
pdFALSE
 )

994 
	`p‹tYIELD_WITHIN_API
();

1000 
	`¥vU∆ockQueue
–
pxQueue
 );

1001 –Ë
	`xTaskResumeAŒ
();

1007 
	`¥vU∆ockQueue
–
pxQueue
 );

1008 –Ë
	`xTaskResumeAŒ
();

1010 
	`åa˚QUEUE_SEND_FAILED
–
pxQueue
 );

1011  
îrQUEUE_FULL
;

1014 
	}
}

1017 
Ba£Ty≥_t
 
	$xQueueGíîicSídFromISR
–
QueueH™dÀ_t
 
xQueue
,

1018 c⁄° * c⁄° 
pvIãmToQueue
,

1019 
Ba£Ty≥_t
 * c⁄° 
pxHighîPri‹ôyTaskWokí
,

1020 c⁄° 
Ba£Ty≥_t
 
xC›yPosôi⁄
 )

1022 
Ba£Ty≥_t
 
xRëu∫
;

1023 
UBa£Ty≥_t
 
uxSavedI¡îru±Sètus
;

1024 
Queue_t
 * c⁄° 
pxQueue
 = 
xQueue
;

1026 
	`c⁄figASSERT
–
pxQueue
 );

1027 
	`c⁄figASSERT
–!––
pvIãmToQueue
 =
NULL
 ) && ( 
pxQueue
->
uxIãmSize
 !–
UBa£Ty≥_t
 ) 0U ) ) );

1028 
	`c⁄figASSERT
–!––
xC›yPosôi⁄
 =
queueOVERWRITE
 ) && ( 
pxQueue
->
uxLígth
 != 1 ) ) );

1044 
	`p‹tASSERT_IF_INTERRUPT_PRIORITY_INVALID
();

1051 
uxSavedI¡îru±Sètus
 = 
	`p‹tSET_INTERRUPT_MASK_FROM_ISR
();

1053 if––
pxQueue
->
uxMesßgesWaôög
 <ÖxQueue->
uxLígth
 ) || ( 
xC›yPosôi⁄
 =
queueOVERWRITE
 ) )

1055 c⁄° 
öt8_t
 
cTxLock
 = 
pxQueue
->cTxLock;

1056 c⁄° 
UBa£Ty≥_t
 
uxPªviousMesßgesWaôög
 = 
pxQueue
->
uxMesßgesWaôög
;

1058 
	`åa˚QUEUE_SEND_FROM_ISR
–
pxQueue
 );

1065 –Ë
	`¥vC›yD©aToQueue
–
pxQueue
, 
pvIãmToQueue
, 
xC›yPosôi⁄
 );

1069 if–
cTxLock
 =
queueUNLOCKED
 )

1071 #i‡–
c⁄figUSE_QUEUE_SETS
 == 1 )

1073 if–
pxQueue
->
pxQueueSëC⁄èöî
 !
NULL
 )

1075 if––
xC›yPosôi⁄
 =
queueOVERWRITE
 ) && ( 
uxPªviousMesßgesWaôög
 !–
UBa£Ty≥_t
 ) 0 ) )

1080 
	`mtCOVERAGE_TEST_MARKER
();

1082 if–
	`¥vNŸifyQueueSëC⁄èöî
–
pxQueue
 ) !
pdFALSE
 )

1087 if–
pxHighîPri‹ôyTaskWokí
 !
NULL
 )

1089 *
pxHighîPri‹ôyTaskWokí
 = 
pdTRUE
;

1093 
	`mtCOVERAGE_TEST_MARKER
();

1098 
	`mtCOVERAGE_TEST_MARKER
();

1103 if–
	`li°LIST_IS_EMPTY
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) ) =
pdFALSE
 )

1105 if–
	`xTaskRemoveFromEvítLi°
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) ) !
pdFALSE
 )

1109 if–
pxHighîPri‹ôyTaskWokí
 !
NULL
 )

1111 *
pxHighîPri‹ôyTaskWokí
 = 
pdTRUE
;

1115 
	`mtCOVERAGE_TEST_MARKER
();

1120 
	`mtCOVERAGE_TEST_MARKER
();

1125 
	`mtCOVERAGE_TEST_MARKER
();

1131 if–
	`li°LIST_IS_EMPTY
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) ) =
pdFALSE
 )

1133 if–
	`xTaskRemoveFromEvítLi°
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) ) !
pdFALSE
 )

1137 if–
pxHighîPri‹ôyTaskWokí
 !
NULL
 )

1139 *
pxHighîPri‹ôyTaskWokí
 = 
pdTRUE
;

1143 
	`mtCOVERAGE_TEST_MARKER
();

1148 
	`mtCOVERAGE_TEST_MARKER
();

1153 
	`mtCOVERAGE_TEST_MARKER
();

1157 –Ë
uxPªviousMesßgesWaôög
;

1165 
	`c⁄figASSERT
–
cTxLock
 !
queueINT8_MAX
 );

1167 
pxQueue
->
cTxLock
 = ( 
öt8_t
 ) ( cTxLock + 1 );

1170 
xRëu∫
 = 
pdPASS
;

1174 
	`åa˚QUEUE_SEND_FROM_ISR_FAILED
–
pxQueue
 );

1175 
xRëu∫
 = 
îrQUEUE_FULL
;

1178 
	`p‹tCLEAR_INTERRUPT_MASK_FROM_ISR
–
uxSavedI¡îru±Sètus
 );

1180  
xRëu∫
;

1181 
	}
}

1184 
Ba£Ty≥_t
 
	$xQueueGiveFromISR
–
QueueH™dÀ_t
 
xQueue
,

1185 
Ba£Ty≥_t
 * c⁄° 
pxHighîPri‹ôyTaskWokí
 )

1187 
Ba£Ty≥_t
 
xRëu∫
;

1188 
UBa£Ty≥_t
 
uxSavedI¡îru±Sètus
;

1189 
Queue_t
 * c⁄° 
pxQueue
 = 
xQueue
;

1197 
	`c⁄figASSERT
–
pxQueue
 );

1201 
	`c⁄figASSERT
–
pxQueue
->
uxIãmSize
 == 0 );

1206 
	`c⁄figASSERT
–!––
pxQueue
->
uxQueueTy≥
 =
queueQUEUE_IS_MUTEX
 ) && (ÖxQueue->
u
.
xSem≠h‹e
.
xMuãxHﬁdî
 !
NULL
 ) ) );

1222 
	`p‹tASSERT_IF_INTERRUPT_PRIORITY_INVALID
();

1224 
uxSavedI¡îru±Sètus
 = 
	`p‹tSET_INTERRUPT_MASK_FROM_ISR
();

1226 c⁄° 
UBa£Ty≥_t
 
uxMesßgesWaôög
 = 
pxQueue
->uxMessagesWaiting;

1231 if–
uxMesßgesWaôög
 < 
pxQueue
->
uxLígth
 )

1233 c⁄° 
öt8_t
 
cTxLock
 = 
pxQueue
->cTxLock;

1235 
	`åa˚QUEUE_SEND_FROM_ISR
–
pxQueue
 );

1243 
pxQueue
->
uxMesßgesWaôög
 = uxMesßgesWaôög + ( 
UBa£Ty≥_t
 ) 1;

1247 if–
cTxLock
 =
queueUNLOCKED
 )

1249 #i‡–
c⁄figUSE_QUEUE_SETS
 == 1 )

1251 if–
pxQueue
->
pxQueueSëC⁄èöî
 !
NULL
 )

1253 if–
	`¥vNŸifyQueueSëC⁄èöî
–
pxQueue
 ) !
pdFALSE
 )

1258 if–
pxHighîPri‹ôyTaskWokí
 !
NULL
 )

1260 *
pxHighîPri‹ôyTaskWokí
 = 
pdTRUE
;

1264 
	`mtCOVERAGE_TEST_MARKER
();

1269 
	`mtCOVERAGE_TEST_MARKER
();

1274 if–
	`li°LIST_IS_EMPTY
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) ) =
pdFALSE
 )

1276 if–
	`xTaskRemoveFromEvítLi°
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) ) !
pdFALSE
 )

1280 if–
pxHighîPri‹ôyTaskWokí
 !
NULL
 )

1282 *
pxHighîPri‹ôyTaskWokí
 = 
pdTRUE
;

1286 
	`mtCOVERAGE_TEST_MARKER
();

1291 
	`mtCOVERAGE_TEST_MARKER
();

1296 
	`mtCOVERAGE_TEST_MARKER
();

1302 if–
	`li°LIST_IS_EMPTY
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) ) =
pdFALSE
 )

1304 if–
	`xTaskRemoveFromEvítLi°
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) ) !
pdFALSE
 )

1308 if–
pxHighîPri‹ôyTaskWokí
 !
NULL
 )

1310 *
pxHighîPri‹ôyTaskWokí
 = 
pdTRUE
;

1314 
	`mtCOVERAGE_TEST_MARKER
();

1319 
	`mtCOVERAGE_TEST_MARKER
();

1324 
	`mtCOVERAGE_TEST_MARKER
();

1333 
	`c⁄figASSERT
–
cTxLock
 !
queueINT8_MAX
 );

1335 
pxQueue
->
cTxLock
 = ( 
öt8_t
 ) ( cTxLock + 1 );

1338 
xRëu∫
 = 
pdPASS
;

1342 
	`åa˚QUEUE_SEND_FROM_ISR_FAILED
–
pxQueue
 );

1343 
xRëu∫
 = 
îrQUEUE_FULL
;

1346 
	`p‹tCLEAR_INTERRUPT_MASK_FROM_ISR
–
uxSavedI¡îru±Sètus
 );

1348  
xRëu∫
;

1349 
	}
}

1352 
Ba£Ty≥_t
 
	$xQueueRe˚ive
–
QueueH™dÀ_t
 
xQueue
,

1353 * c⁄° 
pvBuf„r
,

1354 
TickTy≥_t
 
xTicksToWaô
 )

1356 
Ba£Ty≥_t
 
xE¡ryTimeSë
 = 
pdFALSE
;

1357 
TimeOut_t
 
xTimeOut
;

1358 
Queue_t
 * c⁄° 
pxQueue
 = 
xQueue
;

1361 
	`c⁄figASSERT
––
pxQueue
 ) );

1365 
	`c⁄figASSERT
–!–––
pvBuf„r
 ) =
NULL
 ) && ( ( 
pxQueue
 )->
uxIãmSize
 !–
UBa£Ty≥_t
 ) 0U ) ) );

1368 #i‡––
INCLUDE_xTaskGëScheduÀrSèã
 =1 ) || ( 
c⁄figUSE_TIMERS
 == 1 ) )

1370 
	`c⁄figASSERT
–!––
	`xTaskGëScheduÀrSèã
(Ë=
èskSCHEDULER_SUSPENDED
 ) && ( 
xTicksToWaô
 != 0 ) ) );

1379 
	`èskENTER_CRITICAL
();

1381 c⁄° 
UBa£Ty≥_t
 
uxMesßgesWaôög
 = 
pxQueue
->uxMessagesWaiting;

1385 if–
uxMesßgesWaôög
 > ( 
UBa£Ty≥_t
 ) 0 )

1388 
	`¥vC›yD©aFromQueue
–
pxQueue
, 
pvBuf„r
 );

1389 
	`åa˚QUEUE_RECEIVE
–
pxQueue
 );

1390 
pxQueue
->
uxMesßgesWaôög
 = uxMesßgesWaôög - ( 
UBa£Ty≥_t
 ) 1;

1395 if–
	`li°LIST_IS_EMPTY
–&–
pxQueue
->
xTasksWaôögToSíd
 ) ) =
pdFALSE
 )

1397 if–
	`xTaskRemoveFromEvítLi°
–&–
pxQueue
->
xTasksWaôögToSíd
 ) ) !
pdFALSE
 )

1399 
	`queueYIELD_IF_USING_PREEMPTION
();

1403 
	`mtCOVERAGE_TEST_MARKER
();

1408 
	`mtCOVERAGE_TEST_MARKER
();

1411 
	`èskEXIT_CRITICAL
();

1412  
pdPASS
;

1416 if–
xTicksToWaô
 =–
TickTy≥_t
 ) 0 )

1420 
	`èskEXIT_CRITICAL
();

1421 
	`åa˚QUEUE_RECEIVE_FAILED
–
pxQueue
 );

1422  
îrQUEUE_EMPTY
;

1424 if–
xE¡ryTimeSë
 =
pdFALSE
 )

1428 
	`vTaskI¡î«lSëTimeOutSèã
–&
xTimeOut
 );

1429 
xE¡ryTimeSë
 = 
pdTRUE
;

1434 
	`mtCOVERAGE_TEST_MARKER
();

1438 
	`èskEXIT_CRITICAL
();

1443 
	`vTaskSu•ídAŒ
();

1444 
	`¥vLockQueue
–
pxQueue
 );

1447 if–
	`xTaskCheckF‹TimeOut
–&
xTimeOut
, &
xTicksToWaô
 ) =
pdFALSE
 )

1451 if–
	`¥vIsQueueEm±y
–
pxQueue
 ) !
pdFALSE
 )

1453 
	`åa˚BLOCKING_ON_QUEUE_RECEIVE
–
pxQueue
 );

1454 
	`vTaskPœ˚OnEvítLi°
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ), 
xTicksToWaô
 );

1455 
	`¥vU∆ockQueue
–
pxQueue
 );

1457 if–
	`xTaskResumeAŒ
(Ë=
pdFALSE
 )

1459 
	`p‹tYIELD_WITHIN_API
();

1463 
	`mtCOVERAGE_TEST_MARKER
();

1470 
	`¥vU∆ockQueue
–
pxQueue
 );

1471 –Ë
	`xTaskResumeAŒ
();

1478 
	`¥vU∆ockQueue
–
pxQueue
 );

1479 –Ë
	`xTaskResumeAŒ
();

1481 if–
	`¥vIsQueueEm±y
–
pxQueue
 ) !
pdFALSE
 )

1483 
	`åa˚QUEUE_RECEIVE_FAILED
–
pxQueue
 );

1484  
îrQUEUE_EMPTY
;

1488 
	`mtCOVERAGE_TEST_MARKER
();

1492 
	}
}

1495 
Ba£Ty≥_t
 
	$xQueueSem≠h‹eTake
–
QueueH™dÀ_t
 
xQueue
,

1496 
TickTy≥_t
 
xTicksToWaô
 )

1498 
Ba£Ty≥_t
 
xE¡ryTimeSë
 = 
pdFALSE
;

1499 
TimeOut_t
 
xTimeOut
;

1500 
Queue_t
 * c⁄° 
pxQueue
 = 
xQueue
;

1502 #i‡–
c⁄figUSE_MUTEXES
 == 1 )

1503 
Ba£Ty≥_t
 
xInhîô™˚Occuºed
 = 
pdFALSE
;

1507 
	`c⁄figASSERT
––
pxQueue
 ) );

1511 
	`c⁄figASSERT
–
pxQueue
->
uxIãmSize
 == 0 );

1514 #i‡––
INCLUDE_xTaskGëScheduÀrSèã
 =1 ) || ( 
c⁄figUSE_TIMERS
 == 1 ) )

1516 
	`c⁄figASSERT
–!––
	`xTaskGëScheduÀrSèã
(Ë=
èskSCHEDULER_SUSPENDED
 ) && ( 
xTicksToWaô
 != 0 ) ) );

1525 
	`èskENTER_CRITICAL
();

1529 c⁄° 
UBa£Ty≥_t
 
uxSem≠h‹eCou¡
 = 
pxQueue
->
uxMesßgesWaôög
;

1533 if–
uxSem≠h‹eCou¡
 > ( 
UBa£Ty≥_t
 ) 0 )

1535 
	`åa˚QUEUE_RECEIVE
–
pxQueue
 );

1539 
pxQueue
->
uxMesßgesWaôög
 = 
uxSem≠h‹eCou¡
 - ( 
UBa£Ty≥_t
 ) 1;

1541 #i‡–
c⁄figUSE_MUTEXES
 == 1 )

1543 if–
pxQueue
->
uxQueueTy≥
 =
queueQUEUE_IS_MUTEX
 )

1547 
pxQueue
->
u
.
xSem≠h‹e
.
xMuãxHﬁdî
 = 
	`pvTaskIn¸emítMuãxHñdCou¡
();

1551 
	`mtCOVERAGE_TEST_MARKER
();

1558 if–
	`li°LIST_IS_EMPTY
–&–
pxQueue
->
xTasksWaôögToSíd
 ) ) =
pdFALSE
 )

1560 if–
	`xTaskRemoveFromEvítLi°
–&–
pxQueue
->
xTasksWaôögToSíd
 ) ) !
pdFALSE
 )

1562 
	`queueYIELD_IF_USING_PREEMPTION
();

1566 
	`mtCOVERAGE_TEST_MARKER
();

1571 
	`mtCOVERAGE_TEST_MARKER
();

1574 
	`èskEXIT_CRITICAL
();

1575  
pdPASS
;

1579 if–
xTicksToWaô
 =–
TickTy≥_t
 ) 0 )

1584 #i‡–
c⁄figUSE_MUTEXES
 == 1 )

1586 
	`c⁄figASSERT
–
xInhîô™˚Occuºed
 =
pdFALSE
 );

1592 
	`èskEXIT_CRITICAL
();

1593 
	`åa˚QUEUE_RECEIVE_FAILED
–
pxQueue
 );

1594  
îrQUEUE_EMPTY
;

1596 if–
xE¡ryTimeSë
 =
pdFALSE
 )

1600 
	`vTaskI¡î«lSëTimeOutSèã
–&
xTimeOut
 );

1601 
xE¡ryTimeSë
 = 
pdTRUE
;

1606 
	`mtCOVERAGE_TEST_MARKER
();

1610 
	`èskEXIT_CRITICAL
();

1615 
	`vTaskSu•ídAŒ
();

1616 
	`¥vLockQueue
–
pxQueue
 );

1619 if–
	`xTaskCheckF‹TimeOut
–&
xTimeOut
, &
xTicksToWaô
 ) =
pdFALSE
 )

1625 if–
	`¥vIsQueueEm±y
–
pxQueue
 ) !
pdFALSE
 )

1627 
	`åa˚BLOCKING_ON_QUEUE_RECEIVE
–
pxQueue
 );

1629 #i‡–
c⁄figUSE_MUTEXES
 == 1 )

1631 if–
pxQueue
->
uxQueueTy≥
 =
queueQUEUE_IS_MUTEX
 )

1633 
	`èskENTER_CRITICAL
();

1635 
xInhîô™˚Occuºed
 = 
	`xTaskPri‹ôyInhîô
–
pxQueue
->
u
.
xSem≠h‹e
.
xMuãxHﬁdî
 );

1637 
	`èskEXIT_CRITICAL
();

1641 
	`mtCOVERAGE_TEST_MARKER
();

1646 
	`vTaskPœ˚OnEvítLi°
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ), 
xTicksToWaô
 );

1647 
	`¥vU∆ockQueue
–
pxQueue
 );

1649 if–
	`xTaskResumeAŒ
(Ë=
pdFALSE
 )

1651 
	`p‹tYIELD_WITHIN_API
();

1655 
	`mtCOVERAGE_TEST_MARKER
();

1662 
	`¥vU∆ockQueue
–
pxQueue
 );

1663 –Ë
	`xTaskResumeAŒ
();

1669 
	`¥vU∆ockQueue
–
pxQueue
 );

1670 –Ë
	`xTaskResumeAŒ
();

1676 if–
	`¥vIsQueueEm±y
–
pxQueue
 ) !
pdFALSE
 )

1678 #i‡–
c⁄figUSE_MUTEXES
 == 1 )

1683 if–
xInhîô™˚Occuºed
 !
pdFALSE
 )

1685 
	`èskENTER_CRITICAL
();

1687 
UBa£Ty≥_t
 
uxHighe°WaôögPri‹ôy
;

1694 
uxHighe°WaôögPri‹ôy
 = 
	`¥vGëDisöhîôPri‹ôyA·îTimeout
–
pxQueue
 );

1695 
	`vTaskPri‹ôyDisöhîôA·îTimeout
–
pxQueue
->
u
.
xSem≠h‹e
.
xMuãxHﬁdî
, 
uxHighe°WaôögPri‹ôy
 );

1697 
	`èskEXIT_CRITICAL
();

1702 
	`åa˚QUEUE_RECEIVE_FAILED
–
pxQueue
 );

1703  
îrQUEUE_EMPTY
;

1707 
	`mtCOVERAGE_TEST_MARKER
();

1711 
	}
}

1714 
Ba£Ty≥_t
 
	$xQueuePìk
–
QueueH™dÀ_t
 
xQueue
,

1715 * c⁄° 
pvBuf„r
,

1716 
TickTy≥_t
 
xTicksToWaô
 )

1718 
Ba£Ty≥_t
 
xE¡ryTimeSë
 = 
pdFALSE
;

1719 
TimeOut_t
 
xTimeOut
;

1720 
öt8_t
 * 
pcOrigöÆRódPosôi⁄
;

1721 
Queue_t
 * c⁄° 
pxQueue
 = 
xQueue
;

1724 
	`c⁄figASSERT
––
pxQueue
 ) );

1728 
	`c⁄figASSERT
–!–––
pvBuf„r
 ) =
NULL
 ) && ( ( 
pxQueue
 )->
uxIãmSize
 !–
UBa£Ty≥_t
 ) 0U ) ) );

1731 #i‡––
INCLUDE_xTaskGëScheduÀrSèã
 =1 ) || ( 
c⁄figUSE_TIMERS
 == 1 ) )

1733 
	`c⁄figASSERT
–!––
	`xTaskGëScheduÀrSèã
(Ë=
èskSCHEDULER_SUSPENDED
 ) && ( 
xTicksToWaô
 != 0 ) ) );

1742 
	`èskENTER_CRITICAL
();

1744 c⁄° 
UBa£Ty≥_t
 
uxMesßgesWaôög
 = 
pxQueue
->uxMessagesWaiting;

1748 if–
uxMesßgesWaôög
 > ( 
UBa£Ty≥_t
 ) 0 )

1753 
pcOrigöÆRódPosôi⁄
 = 
pxQueue
->
u
.
xQueue
.
pcRódFrom
;

1755 
	`¥vC›yD©aFromQueue
–
pxQueue
, 
pvBuf„r
 );

1756 
	`åa˚QUEUE_PEEK
–
pxQueue
 );

1759 
pxQueue
->
u
.
xQueue
.
pcRódFrom
 = 
pcOrigöÆRódPosôi⁄
;

1763 if–
	`li°LIST_IS_EMPTY
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) ) =
pdFALSE
 )

1765 if–
	`xTaskRemoveFromEvítLi°
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) ) !
pdFALSE
 )

1768 
	`queueYIELD_IF_USING_PREEMPTION
();

1772 
	`mtCOVERAGE_TEST_MARKER
();

1777 
	`mtCOVERAGE_TEST_MARKER
();

1780 
	`èskEXIT_CRITICAL
();

1781  
pdPASS
;

1785 if–
xTicksToWaô
 =–
TickTy≥_t
 ) 0 )

1789 
	`èskEXIT_CRITICAL
();

1790 
	`åa˚QUEUE_PEEK_FAILED
–
pxQueue
 );

1791  
îrQUEUE_EMPTY
;

1793 if–
xE¡ryTimeSë
 =
pdFALSE
 )

1798 
	`vTaskI¡î«lSëTimeOutSèã
–&
xTimeOut
 );

1799 
xE¡ryTimeSë
 = 
pdTRUE
;

1804 
	`mtCOVERAGE_TEST_MARKER
();

1808 
	`èskEXIT_CRITICAL
();

1813 
	`vTaskSu•ídAŒ
();

1814 
	`¥vLockQueue
–
pxQueue
 );

1817 if–
	`xTaskCheckF‹TimeOut
–&
xTimeOut
, &
xTicksToWaô
 ) =
pdFALSE
 )

1821 if–
	`¥vIsQueueEm±y
–
pxQueue
 ) !
pdFALSE
 )

1823 
	`åa˚BLOCKING_ON_QUEUE_PEEK
–
pxQueue
 );

1824 
	`vTaskPœ˚OnEvítLi°
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ), 
xTicksToWaô
 );

1825 
	`¥vU∆ockQueue
–
pxQueue
 );

1827 if–
	`xTaskResumeAŒ
(Ë=
pdFALSE
 )

1829 
	`p‹tYIELD_WITHIN_API
();

1833 
	`mtCOVERAGE_TEST_MARKER
();

1840 
	`¥vU∆ockQueue
–
pxQueue
 );

1841 –Ë
	`xTaskResumeAŒ
();

1848 
	`¥vU∆ockQueue
–
pxQueue
 );

1849 –Ë
	`xTaskResumeAŒ
();

1851 if–
	`¥vIsQueueEm±y
–
pxQueue
 ) !
pdFALSE
 )

1853 
	`åa˚QUEUE_PEEK_FAILED
–
pxQueue
 );

1854  
îrQUEUE_EMPTY
;

1858 
	`mtCOVERAGE_TEST_MARKER
();

1862 
	}
}

1865 
Ba£Ty≥_t
 
	$xQueueRe˚iveFromISR
–
QueueH™dÀ_t
 
xQueue
,

1866 * c⁄° 
pvBuf„r
,

1867 
Ba£Ty≥_t
 * c⁄° 
pxHighîPri‹ôyTaskWokí
 )

1869 
Ba£Ty≥_t
 
xRëu∫
;

1870 
UBa£Ty≥_t
 
uxSavedI¡îru±Sètus
;

1871 
Queue_t
 * c⁄° 
pxQueue
 = 
xQueue
;

1873 
	`c⁄figASSERT
–
pxQueue
 );

1874 
	`c⁄figASSERT
–!––
pvBuf„r
 =
NULL
 ) && ( 
pxQueue
->
uxIãmSize
 !–
UBa£Ty≥_t
 ) 0U ) ) );

1890 
	`p‹tASSERT_IF_INTERRUPT_PRIORITY_INVALID
();

1892 
uxSavedI¡îru±Sètus
 = 
	`p‹tSET_INTERRUPT_MASK_FROM_ISR
();

1894 c⁄° 
UBa£Ty≥_t
 
uxMesßgesWaôög
 = 
pxQueue
->uxMessagesWaiting;

1897 if–
uxMesßgesWaôög
 > ( 
UBa£Ty≥_t
 ) 0 )

1899 c⁄° 
öt8_t
 
cRxLock
 = 
pxQueue
->cRxLock;

1901 
	`åa˚QUEUE_RECEIVE_FROM_ISR
–
pxQueue
 );

1903 
	`¥vC›yD©aFromQueue
–
pxQueue
, 
pvBuf„r
 );

1904 
pxQueue
->
uxMesßgesWaôög
 = uxMesßgesWaôög - ( 
UBa£Ty≥_t
 ) 1;

1910 if–
cRxLock
 =
queueUNLOCKED
 )

1912 if–
	`li°LIST_IS_EMPTY
–&–
pxQueue
->
xTasksWaôögToSíd
 ) ) =
pdFALSE
 )

1914 if–
	`xTaskRemoveFromEvítLi°
–&–
pxQueue
->
xTasksWaôögToSíd
 ) ) !
pdFALSE
 )

1918 if–
pxHighîPri‹ôyTaskWokí
 !
NULL
 )

1920 *
pxHighîPri‹ôyTaskWokí
 = 
pdTRUE
;

1924 
	`mtCOVERAGE_TEST_MARKER
();

1929 
	`mtCOVERAGE_TEST_MARKER
();

1934 
	`mtCOVERAGE_TEST_MARKER
();

1941 
	`c⁄figASSERT
–
cRxLock
 !
queueINT8_MAX
 );

1943 
pxQueue
->
cRxLock
 = ( 
öt8_t
 ) ( cRxLock + 1 );

1946 
xRëu∫
 = 
pdPASS
;

1950 
xRëu∫
 = 
pdFAIL
;

1951 
	`åa˚QUEUE_RECEIVE_FROM_ISR_FAILED
–
pxQueue
 );

1954 
	`p‹tCLEAR_INTERRUPT_MASK_FROM_ISR
–
uxSavedI¡îru±Sètus
 );

1956  
xRëu∫
;

1957 
	}
}

1960 
Ba£Ty≥_t
 
	$xQueuePìkFromISR
–
QueueH™dÀ_t
 
xQueue
,

1961 * c⁄° 
pvBuf„r
 )

1963 
Ba£Ty≥_t
 
xRëu∫
;

1964 
UBa£Ty≥_t
 
uxSavedI¡îru±Sètus
;

1965 
öt8_t
 * 
pcOrigöÆRódPosôi⁄
;

1966 
Queue_t
 * c⁄° 
pxQueue
 = 
xQueue
;

1968 
	`c⁄figASSERT
–
pxQueue
 );

1969 
	`c⁄figASSERT
–!––
pvBuf„r
 =
NULL
 ) && ( 
pxQueue
->
uxIãmSize
 !–
UBa£Ty≥_t
 ) 0U ) ) );

1970 
	`c⁄figASSERT
–
pxQueue
->
uxIãmSize
 != 0 );

1986 
	`p‹tASSERT_IF_INTERRUPT_PRIORITY_INVALID
();

1988 
uxSavedI¡îru±Sètus
 = 
	`p‹tSET_INTERRUPT_MASK_FROM_ISR
();

1991 if–
pxQueue
->
uxMesßgesWaôög
 > ( 
UBa£Ty≥_t
 ) 0 )

1993 
	`åa˚QUEUE_PEEK_FROM_ISR
–
pxQueue
 );

1997 
pcOrigöÆRódPosôi⁄
 = 
pxQueue
->
u
.
xQueue
.
pcRódFrom
;

1998 
	`¥vC›yD©aFromQueue
–
pxQueue
, 
pvBuf„r
 );

1999 
pxQueue
->
u
.
xQueue
.
pcRódFrom
 = 
pcOrigöÆRódPosôi⁄
;

2001 
xRëu∫
 = 
pdPASS
;

2005 
xRëu∫
 = 
pdFAIL
;

2006 
	`åa˚QUEUE_PEEK_FROM_ISR_FAILED
–
pxQueue
 );

2009 
	`p‹tCLEAR_INTERRUPT_MASK_FROM_ISR
–
uxSavedI¡îru±Sètus
 );

2011  
xRëu∫
;

2012 
	}
}

2015 
UBa£Ty≥_t
 
	$uxQueueMesßgesWaôög
–c⁄° 
QueueH™dÀ_t
 
xQueue
 )

2017 
UBa£Ty≥_t
 
uxRëu∫
;

2019 
	`c⁄figASSERT
–
xQueue
 );

2021 
	`èskENTER_CRITICAL
();

2023 
uxRëu∫
 = ( ( 
Queue_t
 * ) 
xQueue
 )->
uxMesßgesWaôög
;

2025 
	`èskEXIT_CRITICAL
();

2027  
uxRëu∫
;

2028 
	}
}

2031 
UBa£Ty≥_t
 
	$uxQueueS∑˚sAvaûabÀ
–c⁄° 
QueueH™dÀ_t
 
xQueue
 )

2033 
UBa£Ty≥_t
 
uxRëu∫
;

2034 
Queue_t
 * c⁄° 
pxQueue
 = 
xQueue
;

2036 
	`c⁄figASSERT
–
pxQueue
 );

2038 
	`èskENTER_CRITICAL
();

2040 
uxRëu∫
 = 
pxQueue
->
uxLígth
 -ÖxQueue->
uxMesßgesWaôög
;

2042 
	`èskEXIT_CRITICAL
();

2044  
uxRëu∫
;

2045 
	}
}

2048 
UBa£Ty≥_t
 
	$uxQueueMesßgesWaôögFromISR
–c⁄° 
QueueH™dÀ_t
 
xQueue
 )

2050 
UBa£Ty≥_t
 
uxRëu∫
;

2051 
Queue_t
 * c⁄° 
pxQueue
 = 
xQueue
;

2053 
	`c⁄figASSERT
–
pxQueue
 );

2054 
uxRëu∫
 = 
pxQueue
->
uxMesßgesWaôög
;

2056  
uxRëu∫
;

2057 
	}
}

2060 
	$vQueueDñëe
–
QueueH™dÀ_t
 
xQueue
 )

2062 
Queue_t
 * c⁄° 
pxQueue
 = 
xQueue
;

2064 
	`c⁄figASSERT
–
pxQueue
 );

2065 
	`åa˚QUEUE_DELETE
–
pxQueue
 );

2067 #i‡–
c⁄figQUEUE_REGISTRY_SIZE
 > 0 )

2069 
	`vQueueUƒegi°îQueue
–
pxQueue
 );

2073 #i‡––
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 =1 ) && ( 
c⁄figSUPPORT_STATIC_ALLOCATION
 == 0 ) )

2077 
	`vP‹tFªe
–
pxQueue
 );

2079 #ñi‡––
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 =1 ) && ( 
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 ) )

2083 if–
pxQueue
->
ucSètiˇŒyAŒoˇãd
 =–
uöt8_t
 ) 
pdFALSE
 )

2085 
	`vP‹tFªe
–
pxQueue
 );

2089 
	`mtCOVERAGE_TEST_MARKER
();

2096 –Ë
pxQueue
;

2099 
	}
}

2102 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

2104 
UBa£Ty≥_t
 
	$uxQueueGëQueueNumbî
–
QueueH™dÀ_t
 
xQueue
 )

2106  ( ( 
Queue_t
 * ) 
xQueue
 )->
uxQueueNumbî
;

2107 
	}
}

2112 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

2114 
	$vQueueSëQueueNumbî
–
QueueH™dÀ_t
 
xQueue
,

2115 
UBa£Ty≥_t
 
uxQueueNumbî
 )

2117 ––
Queue_t
 * ) 
xQueue
 )->
uxQueueNumbî
 = uxQueueNumber;

2118 
	}
}

2123 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

2125 
uöt8_t
 
	$ucQueueGëQueueTy≥
–
QueueH™dÀ_t
 
xQueue
 )

2127  ( ( 
Queue_t
 * ) 
xQueue
 )->
ucQueueTy≥
;

2128 
	}
}

2133 #i‡–
c⁄figUSE_MUTEXES
 == 1 )

2135 
UBa£Ty≥_t
 
	$¥vGëDisöhîôPri‹ôyA·îTimeout
–c⁄° 
Queue_t
 * c⁄° 
pxQueue
 )

2137 
UBa£Ty≥_t
 
uxHighe°Pri‹ôyOfWaôögTasks
;

2145 if–
	`li°CURRENT_LIST_LENGTH
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) ) > 0U )

2147 
uxHighe°Pri‹ôyOfWaôögTasks
 = ( 
UBa£Ty≥_t
 ) 
c⁄figMAX_PRIORITIES
 - ( UBa£Ty≥_àË
	`li°GET_ITEM_VALUE_OF_HEAD_ENTRY
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) );

2151 
uxHighe°Pri‹ôyOfWaôögTasks
 = 
tskIDLE_PRIORITY
;

2154  
uxHighe°Pri‹ôyOfWaôögTasks
;

2155 
	}
}

2160 
Ba£Ty≥_t
 
	$¥vC›yD©aToQueue
–
Queue_t
 * c⁄° 
pxQueue
,

2161 c⁄° * 
pvIãmToQueue
,

2162 c⁄° 
Ba£Ty≥_t
 
xPosôi⁄
 )

2164 
Ba£Ty≥_t
 
xRëu∫
 = 
pdFALSE
;

2165 
UBa£Ty≥_t
 
uxMesßgesWaôög
;

2169 
uxMesßgesWaôög
 = 
pxQueue
->uxMessagesWaiting;

2171 if–
pxQueue
->
uxIãmSize
 =–
UBa£Ty≥_t
 ) 0 )

2173 #i‡–
c⁄figUSE_MUTEXES
 == 1 )

2175 if–
pxQueue
->
uxQueueTy≥
 =
queueQUEUE_IS_MUTEX
 )

2178 
xRëu∫
 = 
	`xTaskPri‹ôyDisöhîô
–
pxQueue
->
u
.
xSem≠h‹e
.
xMuãxHﬁdî
 );

2179 
pxQueue
->
u
.
xSem≠h‹e
.
xMuãxHﬁdî
 = 
NULL
;

2183 
	`mtCOVERAGE_TEST_MARKER
();

2188 if–
xPosôi⁄
 =
queueSEND_TO_BACK
 )

2190 –Ë
	`mem˝y
––* ) 
pxQueue
->
pcWrôeTo
, 
pvIãmToQueue
, ( 
size_t
 )ÖxQueue->
uxIãmSize
 );

2191 
pxQueue
->
pcWrôeTo
 +pxQueue->
uxIãmSize
;

2193 if–
pxQueue
->
pcWrôeTo
 >pxQueue->
u
.
xQueue
.
pcTaû
 )

2195 
pxQueue
->
pcWrôeTo
 =ÖxQueue->
pcHód
;

2199 
	`mtCOVERAGE_TEST_MARKER
();

2204 –Ë
	`mem˝y
––* ) 
pxQueue
->
u
.
xQueue
.
pcRódFrom
, 
pvIãmToQueue
, ( 
size_t
 )ÖxQueue->
uxIãmSize
 );

2205 
pxQueue
->
u
.
xQueue
.
pcRódFrom
 -pxQueue->
uxIãmSize
;

2207 if–
pxQueue
->
u
.
xQueue
.
pcRódFrom
 <ÖxQueue->
pcHód
 )

2209 
pxQueue
->
u
.
xQueue
.
pcRódFrom
 = (ÖxQueue->u.xQueue.
pcTaû
 -ÖxQueue->
uxIãmSize
 );

2213 
	`mtCOVERAGE_TEST_MARKER
();

2216 if–
xPosôi⁄
 =
queueOVERWRITE
 )

2218 if–
uxMesßgesWaôög
 > ( 
UBa£Ty≥_t
 ) 0 )

2224 --
uxMesßgesWaôög
;

2228 
	`mtCOVERAGE_TEST_MARKER
();

2233 
	`mtCOVERAGE_TEST_MARKER
();

2237 
pxQueue
->
uxMesßgesWaôög
 = uxMesßgesWaôög + ( 
UBa£Ty≥_t
 ) 1;

2239  
xRëu∫
;

2240 
	}
}

2243 
	$¥vC›yD©aFromQueue
–
Queue_t
 * c⁄° 
pxQueue
,

2244 * c⁄° 
pvBuf„r
 )

2246 if–
pxQueue
->
uxIãmSize
 !–
UBa£Ty≥_t
 ) 0 )

2248 
pxQueue
->
u
.
xQueue
.
pcRódFrom
 +pxQueue->
uxIãmSize
;

2250 if–
pxQueue
->
u
.
xQueue
.
pcRódFrom
 >pxQueue->u.xQueue.
pcTaû
 )

2252 
pxQueue
->
u
.
xQueue
.
pcRódFrom
 =ÖxQueue->
pcHód
;

2256 
	`mtCOVERAGE_TEST_MARKER
();

2259 –Ë
	`mem˝y
––* ) 
pvBuf„r
, ( * ) 
pxQueue
->
u
.
xQueue
.
pcRódFrom
, ( 
size_t
 )ÖxQueue->
uxIãmSize
 );

2261 
	}
}

2264 
	$¥vU∆ockQueue
–
Queue_t
 * c⁄° 
pxQueue
 )

2272 
	`èskENTER_CRITICAL
();

2274 
öt8_t
 
cTxLock
 = 
pxQueue
->cTxLock;

2277  
cTxLock
 > 
queueLOCKED_UNMODIFIED
 )

2281 #i‡–
c⁄figUSE_QUEUE_SETS
 == 1 )

2283 if–
pxQueue
->
pxQueueSëC⁄èöî
 !
NULL
 )

2285 if–
	`¥vNŸifyQueueSëC⁄èöî
–
pxQueue
 ) !
pdFALSE
 )

2290 
	`vTaskMis£dYõld
();

2294 
	`mtCOVERAGE_TEST_MARKER
();

2302 if–
	`li°LIST_IS_EMPTY
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) ) =
pdFALSE
 )

2304 if–
	`xTaskRemoveFromEvítLi°
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) ) !
pdFALSE
 )

2308 
	`vTaskMis£dYõld
();

2312 
	`mtCOVERAGE_TEST_MARKER
();

2325 if–
	`li°LIST_IS_EMPTY
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) ) =
pdFALSE
 )

2327 if–
	`xTaskRemoveFromEvítLi°
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) ) !
pdFALSE
 )

2331 
	`vTaskMis£dYõld
();

2335 
	`mtCOVERAGE_TEST_MARKER
();

2345 --
cTxLock
;

2348 
pxQueue
->
cTxLock
 = 
queueUNLOCKED
;

2350 
	`èskEXIT_CRITICAL
();

2353 
	`èskENTER_CRITICAL
();

2355 
öt8_t
 
cRxLock
 = 
pxQueue
->cRxLock;

2357  
cRxLock
 > 
queueLOCKED_UNMODIFIED
 )

2359 if–
	`li°LIST_IS_EMPTY
–&–
pxQueue
->
xTasksWaôögToSíd
 ) ) =
pdFALSE
 )

2361 if–
	`xTaskRemoveFromEvítLi°
–&–
pxQueue
->
xTasksWaôögToSíd
 ) ) !
pdFALSE
 )

2363 
	`vTaskMis£dYõld
();

2367 
	`mtCOVERAGE_TEST_MARKER
();

2370 --
cRxLock
;

2378 
pxQueue
->
cRxLock
 = 
queueUNLOCKED
;

2380 
	`èskEXIT_CRITICAL
();

2381 
	}
}

2384 
Ba£Ty≥_t
 
	$¥vIsQueueEm±y
–c⁄° 
Queue_t
 * 
pxQueue
 )

2386 
Ba£Ty≥_t
 
xRëu∫
;

2388 
	`èskENTER_CRITICAL
();

2390 if–
pxQueue
->
uxMesßgesWaôög
 =–
UBa£Ty≥_t
 ) 0 )

2392 
xRëu∫
 = 
pdTRUE
;

2396 
xRëu∫
 = 
pdFALSE
;

2399 
	`èskEXIT_CRITICAL
();

2401  
xRëu∫
;

2402 
	}
}

2405 
Ba£Ty≥_t
 
	$xQueueIsQueueEm±yFromISR
–c⁄° 
QueueH™dÀ_t
 
xQueue
 )

2407 
Ba£Ty≥_t
 
xRëu∫
;

2408 
Queue_t
 * c⁄° 
pxQueue
 = 
xQueue
;

2410 
	`c⁄figASSERT
–
pxQueue
 );

2412 if–
pxQueue
->
uxMesßgesWaôög
 =–
UBa£Ty≥_t
 ) 0 )

2414 
xRëu∫
 = 
pdTRUE
;

2418 
xRëu∫
 = 
pdFALSE
;

2421  
xRëu∫
;

2422 
	}
}

2425 
Ba£Ty≥_t
 
	$¥vIsQueueFuŒ
–c⁄° 
Queue_t
 * 
pxQueue
 )

2427 
Ba£Ty≥_t
 
xRëu∫
;

2429 
	`èskENTER_CRITICAL
();

2431 if–
pxQueue
->
uxMesßgesWaôög
 =pxQueue->
uxLígth
 )

2433 
xRëu∫
 = 
pdTRUE
;

2437 
xRëu∫
 = 
pdFALSE
;

2440 
	`èskEXIT_CRITICAL
();

2442  
xRëu∫
;

2443 
	}
}

2446 
Ba£Ty≥_t
 
	$xQueueIsQueueFuŒFromISR
–c⁄° 
QueueH™dÀ_t
 
xQueue
 )

2448 
Ba£Ty≥_t
 
xRëu∫
;

2449 
Queue_t
 * c⁄° 
pxQueue
 = 
xQueue
;

2451 
	`c⁄figASSERT
–
pxQueue
 );

2453 if–
pxQueue
->
uxMesßgesWaôög
 =pxQueue->
uxLígth
 )

2455 
xRëu∫
 = 
pdTRUE
;

2459 
xRëu∫
 = 
pdFALSE
;

2462  
xRëu∫
;

2463 
	}
}

2466 #i‡–
c⁄figUSE_CO_ROUTINES
 == 1 )

2468 
Ba£Ty≥_t
 
	$xQueueCRSíd
–
QueueH™dÀ_t
 
xQueue
,

2469 c⁄° * 
pvIãmToQueue
,

2470 
TickTy≥_t
 
xTicksToWaô
 )

2472 
Ba£Ty≥_t
 
xRëu∫
;

2473 
Queue_t
 * c⁄° 
pxQueue
 = 
xQueue
;

2478 
	`p‹tDISABLE_INTERRUPTS
();

2480 if–
	`¥vIsQueueFuŒ
–
pxQueue
 ) !
pdFALSE
 )

2484 if–
xTicksToWaô
 > ( 
TickTy≥_t
 ) 0 )

2488 
	`vCoRoutöeAddToDñayedLi°
–
xTicksToWaô
, &–
pxQueue
->
xTasksWaôögToSíd
 ) );

2489 
	`p‹tENABLE_INTERRUPTS
();

2490  
îrQUEUE_BLOCKED
;

2494 
	`p‹tENABLE_INTERRUPTS
();

2495  
îrQUEUE_FULL
;

2499 
	`p‹tENABLE_INTERRUPTS
();

2501 
	`p‹tDISABLE_INTERRUPTS
();

2503 if–
pxQueue
->
uxMesßgesWaôög
 <ÖxQueue->
uxLígth
 )

2506 
	`¥vC›yD©aToQueue
–
pxQueue
, 
pvIãmToQueue
, 
queueSEND_TO_BACK
 );

2507 
xRëu∫
 = 
pdPASS
;

2510 if–
	`li°LIST_IS_EMPTY
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) ) =
pdFALSE
 )

2516 if–
	`xCoRoutöeRemoveFromEvítLi°
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) ) !
pdFALSE
 )

2520 
xRëu∫
 = 
îrQUEUE_YIELD
;

2524 
	`mtCOVERAGE_TEST_MARKER
();

2529 
	`mtCOVERAGE_TEST_MARKER
();

2534 
xRëu∫
 = 
îrQUEUE_FULL
;

2537 
	`p‹tENABLE_INTERRUPTS
();

2539  
xRëu∫
;

2540 
	}
}

2545 #i‡–
c⁄figUSE_CO_ROUTINES
 == 1 )

2547 
Ba£Ty≥_t
 
	$xQueueCRRe˚ive
–
QueueH™dÀ_t
 
xQueue
,

2548 * 
pvBuf„r
,

2549 
TickTy≥_t
 
xTicksToWaô
 )

2551 
Ba£Ty≥_t
 
xRëu∫
;

2552 
Queue_t
 * c⁄° 
pxQueue
 = 
xQueue
;

2557 
	`p‹tDISABLE_INTERRUPTS
();

2559 if–
pxQueue
->
uxMesßgesWaôög
 =–
UBa£Ty≥_t
 ) 0 )

2563 if–
xTicksToWaô
 > ( 
TickTy≥_t
 ) 0 )

2567 
	`vCoRoutöeAddToDñayedLi°
–
xTicksToWaô
, &–
pxQueue
->
xTasksWaôögToRe˚ive
 ) );

2568 
	`p‹tENABLE_INTERRUPTS
();

2569  
îrQUEUE_BLOCKED
;

2573 
	`p‹tENABLE_INTERRUPTS
();

2574  
îrQUEUE_FULL
;

2579 
	`mtCOVERAGE_TEST_MARKER
();

2582 
	`p‹tENABLE_INTERRUPTS
();

2584 
	`p‹tDISABLE_INTERRUPTS
();

2586 if–
pxQueue
->
uxMesßgesWaôög
 > ( 
UBa£Ty≥_t
 ) 0 )

2589 
pxQueue
->
u
.
xQueue
.
pcRódFrom
 +pxQueue->
uxIãmSize
;

2591 if–
pxQueue
->
u
.
xQueue
.
pcRódFrom
 >pxQueue->u.xQueue.
pcTaû
 )

2593 
pxQueue
->
u
.
xQueue
.
pcRódFrom
 =ÖxQueue->
pcHód
;

2597 
	`mtCOVERAGE_TEST_MARKER
();

2600 --–
pxQueue
->
uxMesßgesWaôög
 );

2601 –Ë
	`mem˝y
––* ) 
pvBuf„r
, ( * ) 
pxQueue
->
u
.
xQueue
.
pcRódFrom
, ( ËpxQueue->
uxIãmSize
 );

2603 
xRëu∫
 = 
pdPASS
;

2606 if–
	`li°LIST_IS_EMPTY
–&–
pxQueue
->
xTasksWaôögToSíd
 ) ) =
pdFALSE
 )

2612 if–
	`xCoRoutöeRemoveFromEvítLi°
–&–
pxQueue
->
xTasksWaôögToSíd
 ) ) !
pdFALSE
 )

2614 
xRëu∫
 = 
îrQUEUE_YIELD
;

2618 
	`mtCOVERAGE_TEST_MARKER
();

2623 
	`mtCOVERAGE_TEST_MARKER
();

2628 
xRëu∫
 = 
pdFAIL
;

2631 
	`p‹tENABLE_INTERRUPTS
();

2633  
xRëu∫
;

2634 
	}
}

2639 #i‡–
c⁄figUSE_CO_ROUTINES
 == 1 )

2641 
Ba£Ty≥_t
 
	$xQueueCRSídFromISR
–
QueueH™dÀ_t
 
xQueue
,

2642 c⁄° * 
pvIãmToQueue
,

2643 
Ba£Ty≥_t
 
xCoRoutöePªviou¶yWokí
 )

2645 
Queue_t
 * c⁄° 
pxQueue
 = 
xQueue
;

2649 if–
pxQueue
->
uxMesßgesWaôög
 <ÖxQueue->
uxLígth
 )

2651 
	`¥vC›yD©aToQueue
–
pxQueue
, 
pvIãmToQueue
, 
queueSEND_TO_BACK
 );

2655 if–
xCoRoutöePªviou¶yWokí
 =
pdFALSE
 )

2657 if–
	`li°LIST_IS_EMPTY
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) ) =
pdFALSE
 )

2659 if–
	`xCoRoutöeRemoveFromEvítLi°
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ) ) !
pdFALSE
 )

2661  
pdTRUE
;

2665 
	`mtCOVERAGE_TEST_MARKER
();

2670 
	`mtCOVERAGE_TEST_MARKER
();

2675 
	`mtCOVERAGE_TEST_MARKER
();

2680 
	`mtCOVERAGE_TEST_MARKER
();

2683  
xCoRoutöePªviou¶yWokí
;

2684 
	}
}

2689 #i‡–
c⁄figUSE_CO_ROUTINES
 == 1 )

2691 
Ba£Ty≥_t
 
	$xQueueCRRe˚iveFromISR
–
QueueH™dÀ_t
 
xQueue
,

2692 * 
pvBuf„r
,

2693 
Ba£Ty≥_t
 * 
pxCoRoutöeWokí
 )

2695 
Ba£Ty≥_t
 
xRëu∫
;

2696 
Queue_t
 * c⁄° 
pxQueue
 = 
xQueue
;

2700 if–
pxQueue
->
uxMesßgesWaôög
 > ( 
UBa£Ty≥_t
 ) 0 )

2703 
pxQueue
->
u
.
xQueue
.
pcRódFrom
 +pxQueue->
uxIãmSize
;

2705 if–
pxQueue
->
u
.
xQueue
.
pcRódFrom
 >pxQueue->u.xQueue.
pcTaû
 )

2707 
pxQueue
->
u
.
xQueue
.
pcRódFrom
 =ÖxQueue->
pcHód
;

2711 
	`mtCOVERAGE_TEST_MARKER
();

2714 --–
pxQueue
->
uxMesßgesWaôög
 );

2715 –Ë
	`mem˝y
––* ) 
pvBuf„r
, ( * ) 
pxQueue
->
u
.
xQueue
.
pcRódFrom
, ( ËpxQueue->
uxIãmSize
 );

2717 if––*
pxCoRoutöeWokí
 ) =
pdFALSE
 )

2719 if–
	`li°LIST_IS_EMPTY
–&–
pxQueue
->
xTasksWaôögToSíd
 ) ) =
pdFALSE
 )

2721 if–
	`xCoRoutöeRemoveFromEvítLi°
–&–
pxQueue
->
xTasksWaôögToSíd
 ) ) !
pdFALSE
 )

2723 *
pxCoRoutöeWokí
 = 
pdTRUE
;

2727 
	`mtCOVERAGE_TEST_MARKER
();

2732 
	`mtCOVERAGE_TEST_MARKER
();

2737 
	`mtCOVERAGE_TEST_MARKER
();

2740 
xRëu∫
 = 
pdPASS
;

2744 
xRëu∫
 = 
pdFAIL
;

2747  
xRëu∫
;

2748 
	}
}

2753 #i‡–
c⁄figQUEUE_REGISTRY_SIZE
 > 0 )

2755 
	$vQueueAddToRegi°ry
–
QueueH™dÀ_t
 
xQueue
,

2756 c⁄° * 
pcQueueName
 )

2758 
UBa£Ty≥_t
 
ux
;

2760 
	`c⁄figASSERT
–
xQueue
 );

2762 
QueueRegi°ryIãm_t
 * 
pxE¡ryToWrôe
 = 
NULL
;

2764 if–
pcQueueName
 !
NULL
 )

2768  
ux
 = ( 
UBa£Ty≥_t
 ) 0U; ux < ( UBa£Ty≥_àË
c⁄figQUEUE_REGISTRY_SIZE
; ux++ )

2771 if–
xQueue
 =
xQueueRegi°ry
[ 
ux
 ].
xH™dÀ
 )

2773 
pxE¡ryToWrôe
 = &–
xQueueRegi°ry
[ 
ux
 ] );

2777 if––
pxE¡ryToWrôe
 =
NULL
 ) && ( 
xQueueRegi°ry
[ 
ux
 ].
pcQueueName
 == NULL ) )

2779 
pxE¡ryToWrôe
 = &–
xQueueRegi°ry
[ 
ux
 ] );

2783 
	`mtCOVERAGE_TEST_MARKER
();

2788 if–
pxE¡ryToWrôe
 !
NULL
 )

2791 
pxE¡ryToWrôe
->
pcQueueName
 =ÖcQueueName;

2792 
pxE¡ryToWrôe
->
xH™dÀ
 = 
xQueue
;

2794 
	`åa˚QUEUE_REGISTRY_ADD
–
xQueue
, 
pcQueueName
 );

2796 
	}
}

2801 #i‡–
c⁄figQUEUE_REGISTRY_SIZE
 > 0 )

2803 c⁄° * 
	$pcQueueGëName
–
QueueH™dÀ_t
 
xQueue
 )

2805 
UBa£Ty≥_t
 
ux
;

2806 c⁄° * 
pcRëu∫
 = 
NULL
;

2808 
	`c⁄figASSERT
–
xQueue
 );

2813  
ux
 = ( 
UBa£Ty≥_t
 ) 0U; ux < ( UBa£Ty≥_àË
c⁄figQUEUE_REGISTRY_SIZE
; ux++ )

2815 if–
xQueueRegi°ry
[ 
ux
 ].
xH™dÀ
 =
xQueue
 )

2817 
pcRëu∫
 = 
xQueueRegi°ry
[ 
ux
 ].
pcQueueName
;

2822 
	`mtCOVERAGE_TEST_MARKER
();

2826  
pcRëu∫
;

2827 
	}
}

2832 #i‡–
c⁄figQUEUE_REGISTRY_SIZE
 > 0 )

2834 
	$vQueueUƒegi°îQueue
–
QueueH™dÀ_t
 
xQueue
 )

2836 
UBa£Ty≥_t
 
ux
;

2838 
	`c⁄figASSERT
–
xQueue
 );

2842  
ux
 = ( 
UBa£Ty≥_t
 ) 0U; ux < ( UBa£Ty≥_àË
c⁄figQUEUE_REGISTRY_SIZE
; ux++ )

2844 if–
xQueueRegi°ry
[ 
ux
 ].
xH™dÀ
 =
xQueue
 )

2847 
xQueueRegi°ry
[ 
ux
 ].
pcQueueName
 = 
NULL
;

2852 
xQueueRegi°ry
[ 
ux
 ].
xH™dÀ
 = ( 
QueueH™dÀ_t
 ) 0;

2857 
	`mtCOVERAGE_TEST_MARKER
();

2860 
	}
}

2865 #i‡–
c⁄figUSE_TIMERS
 == 1 )

2867 
	$vQueueWaôF‹MesßgeRe°ri˘ed
–
QueueH™dÀ_t
 
xQueue
,

2868 
TickTy≥_t
 
xTicksToWaô
,

2869 c⁄° 
Ba£Ty≥_t
 
xWaôIndeföôñy
 )

2871 
Queue_t
 * c⁄° 
pxQueue
 = 
xQueue
;

2887 
	`¥vLockQueue
–
pxQueue
 );

2889 if–
pxQueue
->
uxMesßgesWaôög
 =–
UBa£Ty≥_t
 ) 0U )

2892 
	`vTaskPœ˚OnEvítLi°Re°ri˘ed
–&–
pxQueue
->
xTasksWaôögToRe˚ive
 ), 
xTicksToWaô
, 
xWaôIndeföôñy
 );

2896 
	`mtCOVERAGE_TEST_MARKER
();

2899 
	`¥vU∆ockQueue
–
pxQueue
 );

2900 
	}
}

2905 #i‡––
c⁄figUSE_QUEUE_SETS
 =1 ) && ( 
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 ) )

2907 
QueueSëH™dÀ_t
 
	$xQueueCª©eSë
–c⁄° 
UBa£Ty≥_t
 
uxEvítQueueLígth
 )

2909 
QueueSëH™dÀ_t
 
pxQueue
;

2911 
pxQueue
 = 
	`xQueueGíîicCª©e
–
uxEvítQueueLígth
, ( 
UBa£Ty≥_t
 ) –
Queue_t
 * ), 
queueQUEUE_TYPE_SET
 );

2913  
pxQueue
;

2914 
	}
}

2919 #i‡–
c⁄figUSE_QUEUE_SETS
 == 1 )

2921 
Ba£Ty≥_t
 
	$xQueueAddToSë
–
QueueSëMembîH™dÀ_t
 
xQueueOrSem≠h‹e
,

2922 
QueueSëH™dÀ_t
 
xQueueSë
 )

2924 
Ba£Ty≥_t
 
xRëu∫
;

2926 
	`èskENTER_CRITICAL
();

2928 if–––
Queue_t
 * ) 
xQueueOrSem≠h‹e
 )->
pxQueueSëC⁄èöî
 !
NULL
 )

2931 
xRëu∫
 = 
pdFAIL
;

2933 if–––
Queue_t
 * ) 
xQueueOrSem≠h‹e
 )->
uxMesßgesWaôög
 !–
UBa£Ty≥_t
 ) 0 )

2937 
xRëu∫
 = 
pdFAIL
;

2941 ––
Queue_t
 * ) 
xQueueOrSem≠h‹e
 )->
pxQueueSëC⁄èöî
 = 
xQueueSë
;

2942 
xRëu∫
 = 
pdPASS
;

2945 
	`èskEXIT_CRITICAL
();

2947  
xRëu∫
;

2948 
	}
}

2953 #i‡–
c⁄figUSE_QUEUE_SETS
 == 1 )

2955 
Ba£Ty≥_t
 
	$xQueueRemoveFromSë
–
QueueSëMembîH™dÀ_t
 
xQueueOrSem≠h‹e
,

2956 
QueueSëH™dÀ_t
 
xQueueSë
 )

2958 
Ba£Ty≥_t
 
xRëu∫
;

2959 
Queue_t
 * c⁄° 
pxQueueOrSem≠h‹e
 = ( Queue_à* ) 
xQueueOrSem≠h‹e
;

2961 if–
pxQueueOrSem≠h‹e
->
pxQueueSëC⁄èöî
 !
xQueueSë
 )

2964 
xRëu∫
 = 
pdFAIL
;

2966 if–
pxQueueOrSem≠h‹e
->
uxMesßgesWaôög
 !–
UBa£Ty≥_t
 ) 0 )

2971 
xRëu∫
 = 
pdFAIL
;

2975 
	`èskENTER_CRITICAL
();

2978 
pxQueueOrSem≠h‹e
->
pxQueueSëC⁄èöî
 = 
NULL
;

2980 
	`èskEXIT_CRITICAL
();

2981 
xRëu∫
 = 
pdPASS
;

2984  
xRëu∫
;

2985 
	}
}

2990 #i‡–
c⁄figUSE_QUEUE_SETS
 == 1 )

2992 
QueueSëMembîH™dÀ_t
 
	$xQueueSñe˘FromSë
–
QueueSëH™dÀ_t
 
xQueueSë
,

2993 
TickTy≥_t
 c⁄° 
xTicksToWaô
 )

2995 
QueueSëMembîH™dÀ_t
 
xRëu∫
 = 
NULL
;

2997 –Ë
	`xQueueRe˚ive
––
QueueH™dÀ_t
 ) 
xQueueSë
, &
xRëu∫
, 
xTicksToWaô
 );

2998  
xRëu∫
;

2999 
	}
}

3004 #i‡–
c⁄figUSE_QUEUE_SETS
 == 1 )

3006 
QueueSëMembîH™dÀ_t
 
	$xQueueSñe˘FromSëFromISR
–
QueueSëH™dÀ_t
 
xQueueSë
 )

3008 
QueueSëMembîH™dÀ_t
 
xRëu∫
 = 
NULL
;

3010 –Ë
	`xQueueRe˚iveFromISR
––
QueueH™dÀ_t
 ) 
xQueueSë
, &
xRëu∫
, 
NULL
 );

3011  
xRëu∫
;

3012 
	}
}

3017 #i‡–
c⁄figUSE_QUEUE_SETS
 == 1 )

3019 
Ba£Ty≥_t
 
	$¥vNŸifyQueueSëC⁄èöî
–c⁄° 
Queue_t
 * c⁄° 
pxQueue
 )

3021 
Queue_t
 * 
pxQueueSëC⁄èöî
 = 
pxQueue
->pxQueueSetContainer;

3022 
Ba£Ty≥_t
 
xRëu∫
 = 
pdFALSE
;

3029 
	`c⁄figASSERT
–
pxQueueSëC⁄èöî
 );

3030 
	`c⁄figASSERT
–
pxQueueSëC⁄èöî
->
uxMesßgesWaôög
 <ÖxQueueSëC⁄èöî->
uxLígth
 );

3032 if–
pxQueueSëC⁄èöî
->
uxMesßgesWaôög
 <ÖxQueueSëC⁄èöî->
uxLígth
 )

3034 c⁄° 
öt8_t
 
cTxLock
 = 
pxQueueSëC⁄èöî
->cTxLock;

3036 
	`åa˚QUEUE_SET_SEND
–
pxQueueSëC⁄èöî
 );

3039 
xRëu∫
 = 
	`¥vC›yD©aToQueue
–
pxQueueSëC⁄èöî
, &
pxQueue
, 
queueSEND_TO_BACK
 );

3041 if–
cTxLock
 =
queueUNLOCKED
 )

3043 if–
	`li°LIST_IS_EMPTY
–&–
pxQueueSëC⁄èöî
->
xTasksWaôögToRe˚ive
 ) ) =
pdFALSE
 )

3045 if–
	`xTaskRemoveFromEvítLi°
–&–
pxQueueSëC⁄èöî
->
xTasksWaôögToRe˚ive
 ) ) !
pdFALSE
 )

3048 
xRëu∫
 = 
pdTRUE
;

3052 
	`mtCOVERAGE_TEST_MARKER
();

3057 
	`mtCOVERAGE_TEST_MARKER
();

3062 
	`c⁄figASSERT
–
cTxLock
 !
queueINT8_MAX
 );

3064 
pxQueueSëC⁄èöî
->
cTxLock
 = ( 
öt8_t
 ) ( cTxLock + 1 );

3069 
	`mtCOVERAGE_TEST_MARKER
();

3072  
xRëu∫
;

3073 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\stream_buffer.c

30 
	~<°döt.h
>

31 
	~<°rög.h
>

36 
	#MPU_WRAPPERS_INCLUDED_FROM_API_FILE


	)

39 
	~"FªeRTOS.h
"

40 
	~"èsk.h
"

41 
	~"°ªam_buf„r.h
"

43 #i‡–
c⁄figUSE_TASK_NOTIFICATIONS
 != 1 )

44 #îr‹ 
c⁄figUSE_TASK_NOTIFICATIONS
 
mu°
 
be
 
£t
 
to
 1Åÿ
buûd
 
°ªam_buf„r
.
c


51 #unde‡
MPU_WRAPPERS_INCLUDED_FROM_API_FILE


57 #i‚de‡
sbRECEIVE_COMPLETED


58 
	#sbRECEIVE_COMPLETED
–
pxSåómBuf„r
 ) \

59 
	`vTaskSu•ídAŒ
(); \

61 if––
pxSåómBuf„r
 )->
xTaskWaôögToSíd
 !
NULL
 ) \

63 –Ë
	`xTaskNŸify
––
pxSåómBuf„r
 )->
xTaskWaôögToSíd
, \

64 –
uöt32_t
 ) 0, \

65 
eNoA˘i⁄
 ); \

66 –
pxSåómBuf„r
 )->
xTaskWaôögToSíd
 = 
NULL
; \

69 –Ë
	`xTaskResumeAŒ
();

	)

72 #i‚de‡
sbRECEIVE_COMPLETED_FROM_ISR


73 
	#sbRECEIVE_COMPLETED_FROM_ISR
–
pxSåómBuf„r
, \

74 
pxHighîPri‹ôyTaskWokí
 ) \

76 
UBa£Ty≥_t
 
uxSavedI¡îru±Sètus
; \

78 
uxSavedI¡îru±Sètus
 = ( 
UBa£Ty≥_t
 ) 
	`p‹tSET_INTERRUPT_MASK_FROM_ISR
(); \

80 if––
pxSåómBuf„r
 )->
xTaskWaôögToSíd
 !
NULL
 ) \

82 –Ë
	`xTaskNŸifyFromISR
––
pxSåómBuf„r
 )->
xTaskWaôögToSíd
, \

83 –
uöt32_t
 ) 0, \

84 
eNoA˘i⁄
, \

85 
pxHighîPri‹ôyTaskWokí
 ); \

86 –
pxSåómBuf„r
 )->
xTaskWaôögToSíd
 = 
NULL
; \

89 
	`p‹tCLEAR_INTERRUPT_MASK_FROM_ISR
–
uxSavedI¡îru±Sètus
 ); \

90 }

	)

96 #i‚de‡
sbSEND_COMPLETED


97 
	#sbSEND_COMPLETED
–
pxSåómBuf„r
 ) \

98 
	`vTaskSu•ídAŒ
(); \

100 if––
pxSåómBuf„r
 )->
xTaskWaôögToRe˚ive
 !
NULL
 ) \

102 –Ë
	`xTaskNŸify
––
pxSåómBuf„r
 )->
xTaskWaôögToRe˚ive
, \

103 –
uöt32_t
 ) 0, \

104 
eNoA˘i⁄
 ); \

105 –
pxSåómBuf„r
 )->
xTaskWaôögToRe˚ive
 = 
NULL
; \

108 –Ë
	`xTaskResumeAŒ
();

	)

111 #i‚de‡
sbSEND_COMPLETE_FROM_ISR


112 
	#sbSEND_COMPLETE_FROM_ISR
–
pxSåómBuf„r
, 
pxHighîPri‹ôyTaskWokí
 ) \

114 
UBa£Ty≥_t
 
uxSavedI¡îru±Sètus
; \

116 
uxSavedI¡îru±Sètus
 = ( 
UBa£Ty≥_t
 ) 
	`p‹tSET_INTERRUPT_MASK_FROM_ISR
(); \

118 if––
pxSåómBuf„r
 )->
xTaskWaôögToRe˚ive
 !
NULL
 ) \

120 –Ë
	`xTaskNŸifyFromISR
––
pxSåómBuf„r
 )->
xTaskWaôögToRe˚ive
, \

121 –
uöt32_t
 ) 0, \

122 
eNoA˘i⁄
, \

123 
pxHighîPri‹ôyTaskWokí
 ); \

124 –
pxSåómBuf„r
 )->
xTaskWaôögToRe˚ive
 = 
NULL
; \

127 
	`p‹tCLEAR_INTERRUPT_MASK_FROM_ISR
–
uxSavedI¡îru±Sètus
 ); \

128 }

	)

133 
	#sbBYTES_TO_STORE_MESSAGE_LENGTH
 ( –
c⁄figMESSAGE_BUFFER_LENGTH_TYPE
 ) )

	)

136 
	#sbFLAGS_IS_MESSAGE_BUFFER
 ( ( 
uöt8_t
 ) 1 )

	)

137 
	#sbFLAGS_IS_STATICALLY_ALLOCATED
 ( ( 
uöt8_t
 ) 2 )

	)

142 
	sSåómBuf„rDef_t


144 vﬁ©ûê
size_t
 
	mxTaû
;

145 vﬁ©ûê
size_t
 
	mxHód
;

146 
size_t
 
	mxLígth
;

147 
size_t
 
	mxTriggîLevñByãs
;

148 vﬁ©ûê
TaskH™dÀ_t
 
	mxTaskWaôögToRe˚ive
;

149 vﬁ©ûê
TaskH™dÀ_t
 
	mxTaskWaôögToSíd
;

150 
uöt8_t
 * 
	mpucBuf„r
;

151 
uöt8_t
 
	mucFœgs
;

153 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

154 
UBa£Ty≥_t
 
	muxSåómBuf„rNumbî
;

156 } 
	tSåómBuf„r_t
;

161 
size_t
 
	$¥vByãsInBuf„r
–c⁄° 
SåómBuf„r_t
 * c⁄° 
pxSåómBuf„r
 ) 
PRIVILEGED_FUNCTION
;

174 
size_t
 
	$¥vWrôeByãsToBuf„r
–
SåómBuf„r_t
 * c⁄° 
pxSåómBuf„r
,

175 c⁄° 
uöt8_t
 * 
pucD©a
,

176 
size_t
 
xCou¡
,

177 
size_t
 
xHód
 ) 
PRIVILEGED_FUNCTION
;

186 
size_t
 
	$¥vRódMesßgeFromBuf„r
–
SåómBuf„r_t
 * 
pxSåómBuf„r
,

187 * 
pvRxD©a
,

188 
size_t
 
xBuf„rLígthByãs
,

189 
size_t
 
xByãsAvaûabÀ
 ) 
PRIVILEGED_FUNCTION
;

198 
size_t
 
	$¥vWrôeMesßgeToBuf„r
–
SåómBuf„r_t
 * c⁄° 
pxSåómBuf„r
,

199 c⁄° * 
pvTxD©a
,

200 
size_t
 
xD©aLígthByãs
,

201 
size_t
 
xS∑˚
,

202 
size_t
 
xRequúedS∑˚
 ) 
PRIVILEGED_FUNCTION
;

216 
size_t
 
	$¥vRódByãsFromBuf„r
–
SåómBuf„r_t
 * 
pxSåómBuf„r
,

217 
uöt8_t
 * 
pucD©a
,

218 
size_t
 
xCou¡
,

219 
size_t
 
xTaû
 ) 
PRIVILEGED_FUNCTION
;

225 
	$¥vInôüli£NewSåómBuf„r
–
SåómBuf„r_t
 * c⁄° 
pxSåómBuf„r
,

226 
uöt8_t
 * c⁄° 
pucBuf„r
,

227 
size_t
 
xBuf„rSizeByãs
,

228 
size_t
 
xTriggîLevñByãs
,

229 
uöt8_t
 
ucFœgs
 ) 
PRIVILEGED_FUNCTION
;

233 #i‡–
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 )

235 
SåómBuf„rH™dÀ_t
 
	$xSåómBuf„rGíîicCª©e
–
size_t
 
xBuf„rSizeByãs
,

236 
size_t
 
xTriggîLevñByãs
,

237 
Ba£Ty≥_t
 
xIsMesßgeBuf„r
 )

239 
uöt8_t
 * 
pucAŒoˇãdMem‹y
;

240 
uöt8_t
 
ucFœgs
;

246 if–
xIsMesßgeBuf„r
 =
pdTRUE
 )

249 
ucFœgs
 = 
sbFLAGS_IS_MESSAGE_BUFFER
;

250 
	`c⁄figASSERT
–
xBuf„rSizeByãs
 > 
sbBYTES_TO_STORE_MESSAGE_LENGTH
 );

255 
ucFœgs
 = 0;

256 
	`c⁄figASSERT
–
xBuf„rSizeByãs
 > 0 );

259 
	`c⁄figASSERT
–
xTriggîLevñByãs
 <
xBuf„rSizeByãs
 );

263 if–
xTriggîLevñByãs
 =–
size_t
 ) 0 )

265 
xTriggîLevñByãs
 = ( 
size_t
 ) 1;

276 if–
xBuf„rSizeByãs
 < ( xBuf„rSizeByã†+ 1 + –
SåómBuf„r_t
 ) ) )

278 
xBuf„rSizeByãs
++;

279 
pucAŒoˇãdMem‹y
 = ( 
uöt8_t
 * ) 
	`pvP‹tMÆloc
–
xBuf„rSizeByãs
 + –
SåómBuf„r_t
 ) );

283 
pucAŒoˇãdMem‹y
 = 
NULL
;

286 if–
pucAŒoˇãdMem‹y
 !
NULL
 )

288 
	`¥vInôüli£NewSåómBuf„r
––
SåómBuf„r_t
 * ) 
pucAŒoˇãdMem‹y
,

289 
pucAŒoˇãdMem‹y
 + –
SåómBuf„r_t
 ),

290 
xBuf„rSizeByãs
,

291 
xTriggîLevñByãs
,

292 
ucFœgs
 );

294 
	`åa˚STREAM_BUFFER_CREATE
–––
SåómBuf„r_t
 * ) 
pucAŒoˇãdMem‹y
 ), 
xIsMesßgeBuf„r
 );

298 
	`åa˚STREAM_BUFFER_CREATE_FAILED
–
xIsMesßgeBuf„r
 );

301  ( 
SåómBuf„rH™dÀ_t
 ) 
pucAŒoˇãdMem‹y
;

302 
	}
}

307 #i‡–
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 )

309 
SåómBuf„rH™dÀ_t
 
	$xSåómBuf„rGíîicCª©eSètic
–
size_t
 
xBuf„rSizeByãs
,

310 
size_t
 
xTriggîLevñByãs
,

311 
Ba£Ty≥_t
 
xIsMesßgeBuf„r
,

312 
uöt8_t
 * c⁄° 
pucSåómBuf„rSt‹ageAªa
,

313 
SèticSåómBuf„r_t
 * c⁄° 
pxSèticSåómBuf„r
 )

315 
SåómBuf„r_t
 * c⁄° 
pxSåómBuf„r
 = ( SåómBuf„r_à* ) 
pxSèticSåómBuf„r
;

316 
SåómBuf„rH™dÀ_t
 
xRëu∫
;

317 
uöt8_t
 
ucFœgs
;

319 
	`c⁄figASSERT
–
pucSåómBuf„rSt‹ageAªa
 );

320 
	`c⁄figASSERT
–
pxSèticSåómBuf„r
 );

321 
	`c⁄figASSERT
–
xTriggîLevñByãs
 <
xBuf„rSizeByãs
 );

325 if–
xTriggîLevñByãs
 =–
size_t
 ) 0 )

327 
xTriggîLevñByãs
 = ( 
size_t
 ) 1;

330 if–
xIsMesßgeBuf„r
 !
pdFALSE
 )

333 
ucFœgs
 = 
sbFLAGS_IS_MESSAGE_BUFFER
 | 
sbFLAGS_IS_STATICALLY_ALLOCATED
;

338 
ucFœgs
 = 
sbFLAGS_IS_STATICALLY_ALLOCATED
;

345 
	`c⁄figASSERT
–
xBuf„rSizeByãs
 > 
sbBYTES_TO_STORE_MESSAGE_LENGTH
 );

347 #i‡–
c⁄figASSERT_DEFINED
 == 1 )

352 vﬁ©ûê
size_t
 
xSize
 = –
SèticSåómBuf„r_t
 );

353 
	`c⁄figASSERT
–
xSize
 =–
SåómBuf„r_t
 ) );

357 if––
pucSåómBuf„rSt‹ageAªa
 !
NULL
 ) && ( 
pxSèticSåómBuf„r
 != NULL ) )

359 
	`¥vInôüli£NewSåómBuf„r
–
pxSåómBuf„r
,

360 
pucSåómBuf„rSt‹ageAªa
,

361 
xBuf„rSizeByãs
,

362 
xTriggîLevñByãs
,

363 
ucFœgs
 );

367 
pxSåómBuf„r
->
ucFœgs
 |
sbFLAGS_IS_STATICALLY_ALLOCATED
;

369 
	`åa˚STREAM_BUFFER_CREATE
–
pxSåómBuf„r
, 
xIsMesßgeBuf„r
 );

371 
xRëu∫
 = ( 
SåómBuf„rH™dÀ_t
 ) 
pxSèticSåómBuf„r
;

375 
xRëu∫
 = 
NULL
;

376 
	`åa˚STREAM_BUFFER_CREATE_STATIC_FAILED
–
xRëu∫
, 
xIsMesßgeBuf„r
 );

379  
xRëu∫
;

380 
	}
}

385 
	$vSåómBuf„rDñëe
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 )

387 
SåómBuf„r_t
 * 
pxSåómBuf„r
 = 
xSåómBuf„r
;

389 
	`c⁄figASSERT
–
pxSåómBuf„r
 );

391 
	`åa˚STREAM_BUFFER_DELETE
–
xSåómBuf„r
 );

393 if––
pxSåómBuf„r
->
ucFœgs
 & 
sbFLAGS_IS_STATICALLY_ALLOCATED
 ) =–
uöt8_t
 ) 
pdFALSE
 )

395 #i‡–
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 )

399 
	`vP‹tFªe
––* ) 
pxSåómBuf„r
 );

405 
	`c⁄figASSERT
–
xSåómBuf„r
 =–
SåómBuf„rH™dÀ_t
 ) ~0 );

413 –Ë
	`mem£t
–
pxSåómBuf„r
, 0x00, –
SåómBuf„r_t
 ) );

415 
	}
}

418 
Ba£Ty≥_t
 
	$xSåómBuf„rRe£t
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 )

420 
SåómBuf„r_t
 * c⁄° 
pxSåómBuf„r
 = 
xSåómBuf„r
;

421 
Ba£Ty≥_t
 
xRëu∫
 = 
pdFAIL
;

423 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

424 
UBa£Ty≥_t
 
uxSåómBuf„rNumbî
;

427 
	`c⁄figASSERT
–
pxSåómBuf„r
 );

429 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

433 
uxSåómBuf„rNumbî
 = 
pxSåómBuf„r
->uxStreamBufferNumber;

438 
	`èskENTER_CRITICAL
();

440 if–
pxSåómBuf„r
->
xTaskWaôögToRe˚ive
 =
NULL
 )

442 if–
pxSåómBuf„r
->
xTaskWaôögToSíd
 =
NULL
 )

444 
	`¥vInôüli£NewSåómBuf„r
–
pxSåómBuf„r
,

445 
pxSåómBuf„r
->
pucBuf„r
,

446 
pxSåómBuf„r
->
xLígth
,

447 
pxSåómBuf„r
->
xTriggîLevñByãs
,

448 
pxSåómBuf„r
->
ucFœgs
 );

449 
xRëu∫
 = 
pdPASS
;

451 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

453 
pxSåómBuf„r
->
uxSåómBuf„rNumbî
 = uxStreamBufferNumber;

457 
	`åa˚STREAM_BUFFER_RESET
–
xSåómBuf„r
 );

461 
	`èskEXIT_CRITICAL
();

463  
xRëu∫
;

464 
	}
}

467 
Ba£Ty≥_t
 
	$xSåómBuf„rSëTriggîLevñ
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
,

468 
size_t
 
xTriggîLevñ
 )

470 
SåómBuf„r_t
 * c⁄° 
pxSåómBuf„r
 = 
xSåómBuf„r
;

471 
Ba£Ty≥_t
 
xRëu∫
;

473 
	`c⁄figASSERT
–
pxSåómBuf„r
 );

476 if–
xTriggîLevñ
 =–
size_t
 ) 0 )

478 
xTriggîLevñ
 = ( 
size_t
 ) 1;

483 if–
xTriggîLevñ
 < 
pxSåómBuf„r
->
xLígth
 )

485 
pxSåómBuf„r
->
xTriggîLevñByãs
 = 
xTriggîLevñ
;

486 
xRëu∫
 = 
pdPASS
;

490 
xRëu∫
 = 
pdFALSE
;

493  
xRëu∫
;

494 
	}
}

497 
size_t
 
	$xSåómBuf„rS∑˚sAvaûabÀ
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 )

499 c⁄° 
SåómBuf„r_t
 * c⁄° 
pxSåómBuf„r
 = 
xSåómBuf„r
;

500 
size_t
 
xS∑˚
;

501 
size_t
 
xOrigöÆTaû
;

503 
	`c⁄figASSERT
–
pxSåómBuf„r
 );

510 
xOrigöÆTaû
 = 
pxSåómBuf„r
->
xTaû
;

511 
xS∑˚
 = 
pxSåómBuf„r
->
xLígth
 +ÖxSåómBuf„r->
xTaû
;

512 
xS∑˚
 -
pxSåómBuf„r
->
xHód
;

513 }  
xOrigöÆTaû
 !
pxSåómBuf„r
->
xTaû
 );

515 
xS∑˚
 -–
size_t
 ) 1;

517 if–
xS∑˚
 >
pxSåómBuf„r
->
xLígth
 )

519 
xS∑˚
 -
pxSåómBuf„r
->
xLígth
;

523 
	`mtCOVERAGE_TEST_MARKER
();

526  
xS∑˚
;

527 
	}
}

530 
size_t
 
	$xSåómBuf„rByãsAvaûabÀ
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 )

532 c⁄° 
SåómBuf„r_t
 * c⁄° 
pxSåómBuf„r
 = 
xSåómBuf„r
;

533 
size_t
 
xRëu∫
;

535 
	`c⁄figASSERT
–
pxSåómBuf„r
 );

537 
xRëu∫
 = 
	`¥vByãsInBuf„r
–
pxSåómBuf„r
 );

538  
xRëu∫
;

539 
	}
}

542 
size_t
 
	$xSåómBuf„rSíd
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
,

543 c⁄° * 
pvTxD©a
,

544 
size_t
 
xD©aLígthByãs
,

545 
TickTy≥_t
 
xTicksToWaô
 )

547 
SåómBuf„r_t
 * c⁄° 
pxSåómBuf„r
 = 
xSåómBuf„r
;

548 
size_t
 
xRëu∫
, 
xS∑˚
 = 0;

549 
size_t
 
xRequúedS∑˚
 = 
xD©aLígthByãs
;

550 
TimeOut_t
 
xTimeOut
;

551 
size_t
 
xMaxRï‹ãdS∑˚
 = 0;

553 
	`c⁄figASSERT
–
pvTxD©a
 );

554 
	`c⁄figASSERT
–
pxSåómBuf„r
 );

558 
xMaxRï‹ãdS∑˚
 = 
pxSåómBuf„r
->
xLígth
 - ( 
size_t
 ) 1;

564 if––
pxSåómBuf„r
->
ucFœgs
 & 
sbFLAGS_IS_MESSAGE_BUFFER
 ) !–
uöt8_t
 ) 0 )

566 
xRequúedS∑˚
 +
sbBYTES_TO_STORE_MESSAGE_LENGTH
;

569 
	`c⁄figASSERT
–
xRequúedS∑˚
 > 
xD©aLígthByãs
 );

573 if–
xRequúedS∑˚
 > 
xMaxRï‹ãdS∑˚
 )

577 
xTicksToWaô
 = ( 
TickTy≥_t
 ) 0;

581 
	`mtCOVERAGE_TEST_MARKER
();

589 if–
xRequúedS∑˚
 > 
xMaxRï‹ãdS∑˚
 )

591 
xRequúedS∑˚
 = 
xMaxRï‹ãdS∑˚
;

595 
	`mtCOVERAGE_TEST_MARKER
();

599 if–
xTicksToWaô
 !–
TickTy≥_t
 ) 0 )

601 
	`vTaskSëTimeOutSèã
–&
xTimeOut
 );

607 
	`èskENTER_CRITICAL
();

609 
xS∑˚
 = 
	`xSåómBuf„rS∑˚sAvaûabÀ
–
pxSåómBuf„r
 );

611 if–
xS∑˚
 < 
xRequúedS∑˚
 )

614 –Ë
	`xTaskNŸifySèãCÀ¨
–
NULL
 );

617 
	`c⁄figASSERT
–
pxSåómBuf„r
->
xTaskWaôögToSíd
 =
NULL
 );

618 
pxSåómBuf„r
->
xTaskWaôögToSíd
 = 
	`xTaskGëCuºítTaskH™dÀ
();

622 
	`èskEXIT_CRITICAL
();

626 
	`èskEXIT_CRITICAL
();

628 
	`åa˚BLOCKING_ON_STREAM_BUFFER_SEND
–
xSåómBuf„r
 );

629 –Ë
	`xTaskNŸifyWaô
––
uöt32_t
 ) 0, ( uöt32_àË0, 
NULL
, 
xTicksToWaô
 );

630 
pxSåómBuf„r
->
xTaskWaôögToSíd
 = 
NULL
;

631 }  
	`xTaskCheckF‹TimeOut
–&
xTimeOut
, &
xTicksToWaô
 ) =
pdFALSE
 );

635 
	`mtCOVERAGE_TEST_MARKER
();

638 if–
xS∑˚
 =–
size_t
 ) 0 )

640 
xS∑˚
 = 
	`xSåómBuf„rS∑˚sAvaûabÀ
–
pxSåómBuf„r
 );

644 
	`mtCOVERAGE_TEST_MARKER
();

647 
xRëu∫
 = 
	`¥vWrôeMesßgeToBuf„r
–
pxSåómBuf„r
, 
pvTxD©a
, 
xD©aLígthByãs
, 
xS∑˚
, 
xRequúedS∑˚
 );

649 if–
xRëu∫
 > ( 
size_t
 ) 0 )

651 
	`åa˚STREAM_BUFFER_SEND
–
xSåómBuf„r
, 
xRëu∫
 );

654 if–
	`¥vByãsInBuf„r
–
pxSåómBuf„r
 ) >pxSåómBuf„r->
xTriggîLevñByãs
 )

656 
	`sbSEND_COMPLETED
–
pxSåómBuf„r
 );

660 
	`mtCOVERAGE_TEST_MARKER
();

665 
	`mtCOVERAGE_TEST_MARKER
();

666 
	`åa˚STREAM_BUFFER_SEND_FAILED
–
xSåómBuf„r
 );

669  
xRëu∫
;

670 
	}
}

673 
size_t
 
	$xSåómBuf„rSídFromISR
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
,

674 c⁄° * 
pvTxD©a
,

675 
size_t
 
xD©aLígthByãs
,

676 
Ba£Ty≥_t
 * c⁄° 
pxHighîPri‹ôyTaskWokí
 )

678 
SåómBuf„r_t
 * c⁄° 
pxSåómBuf„r
 = 
xSåómBuf„r
;

679 
size_t
 
xRëu∫
, 
xS∑˚
;

680 
size_t
 
xRequúedS∑˚
 = 
xD©aLígthByãs
;

682 
	`c⁄figASSERT
–
pvTxD©a
 );

683 
	`c⁄figASSERT
–
pxSåómBuf„r
 );

689 if––
pxSåómBuf„r
->
ucFœgs
 & 
sbFLAGS_IS_MESSAGE_BUFFER
 ) !–
uöt8_t
 ) 0 )

691 
xRequúedS∑˚
 +
sbBYTES_TO_STORE_MESSAGE_LENGTH
;

695 
	`mtCOVERAGE_TEST_MARKER
();

698 
xS∑˚
 = 
	`xSåómBuf„rS∑˚sAvaûabÀ
–
pxSåómBuf„r
 );

699 
xRëu∫
 = 
	`¥vWrôeMesßgeToBuf„r
–
pxSåómBuf„r
, 
pvTxD©a
, 
xD©aLígthByãs
, 
xS∑˚
, 
xRequúedS∑˚
 );

701 if–
xRëu∫
 > ( 
size_t
 ) 0 )

704 if–
	`¥vByãsInBuf„r
–
pxSåómBuf„r
 ) >pxSåómBuf„r->
xTriggîLevñByãs
 )

706 
	`sbSEND_COMPLETE_FROM_ISR
–
pxSåómBuf„r
, 
pxHighîPri‹ôyTaskWokí
 );

710 
	`mtCOVERAGE_TEST_MARKER
();

715 
	`mtCOVERAGE_TEST_MARKER
();

718 
	`åa˚STREAM_BUFFER_SEND_FROM_ISR
–
xSåómBuf„r
, 
xRëu∫
 );

720  
xRëu∫
;

721 
	}
}

724 
size_t
 
	$¥vWrôeMesßgeToBuf„r
–
SåómBuf„r_t
 * c⁄° 
pxSåómBuf„r
,

725 c⁄° * 
pvTxD©a
,

726 
size_t
 
xD©aLígthByãs
,

727 
size_t
 
xS∑˚
,

728 
size_t
 
xRequúedS∑˚
 )

730 
size_t
 
xNextHód
 = 
pxSåómBuf„r
->
xHód
;

732 if––
pxSåómBuf„r
->
ucFœgs
 & 
sbFLAGS_IS_MESSAGE_BUFFER
 ) !–
uöt8_t
 ) 0 )

736 if–
xS∑˚
 >
xRequúedS∑˚
 )

741 
xNextHód
 = 
	`¥vWrôeByãsToBuf„r
–
pxSåómBuf„r
, ( c⁄° 
uöt8_t
 * ) &–
xD©aLígthByãs
 ), 
sbBYTES_TO_STORE_MESSAGE_LENGTH
, xNextHead );

746 
xD©aLígthByãs
 = 0;

754 
xD©aLígthByãs
 = 
	`c⁄figMIN
–xD©aLígthByãs, 
xS∑˚
 );

757 if–
xD©aLígthByãs
 !–
size_t
 ) 0 )

760 
pxSåómBuf„r
->
xHód
 = 
	`¥vWrôeByãsToBuf„r
–pxSåómBuf„r, ( c⁄° 
uöt8_t
 * ) 
pvTxD©a
, 
xD©aLígthByãs
, 
xNextHód
 );

763  
xD©aLígthByãs
;

764 
	}
}

767 
size_t
 
	$xSåómBuf„rRe˚ive
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
,

768 * 
pvRxD©a
,

769 
size_t
 
xBuf„rLígthByãs
,

770 
TickTy≥_t
 
xTicksToWaô
 )

772 
SåómBuf„r_t
 * c⁄° 
pxSåómBuf„r
 = 
xSåómBuf„r
;

773 
size_t
 
xRe˚ivedLígth
 = 0, 
xByãsAvaûabÀ
, 
xByãsToSt‹eMesßgeLígth
;

775 
	`c⁄figASSERT
–
pvRxD©a
 );

776 
	`c⁄figASSERT
–
pxSåómBuf„r
 );

783 if––
pxSåómBuf„r
->
ucFœgs
 & 
sbFLAGS_IS_MESSAGE_BUFFER
 ) !–
uöt8_t
 ) 0 )

785 
xByãsToSt‹eMesßgeLígth
 = 
sbBYTES_TO_STORE_MESSAGE_LENGTH
;

789 
xByãsToSt‹eMesßgeLígth
 = 0;

792 if–
xTicksToWaô
 !–
TickTy≥_t
 ) 0 )

796 
	`èskENTER_CRITICAL
();

798 
xByãsAvaûabÀ
 = 
	`¥vByãsInBuf„r
–
pxSåómBuf„r
 );

805 if–
xByãsAvaûabÀ
 <
xByãsToSt‹eMesßgeLígth
 )

808 –Ë
	`xTaskNŸifySèãCÀ¨
–
NULL
 );

811 
	`c⁄figASSERT
–
pxSåómBuf„r
->
xTaskWaôögToRe˚ive
 =
NULL
 );

812 
pxSåómBuf„r
->
xTaskWaôögToRe˚ive
 = 
	`xTaskGëCuºítTaskH™dÀ
();

816 
	`mtCOVERAGE_TEST_MARKER
();

819 
	`èskEXIT_CRITICAL
();

821 if–
xByãsAvaûabÀ
 <
xByãsToSt‹eMesßgeLígth
 )

824 
	`åa˚BLOCKING_ON_STREAM_BUFFER_RECEIVE
–
xSåómBuf„r
 );

825 –Ë
	`xTaskNŸifyWaô
––
uöt32_t
 ) 0, ( uöt32_àË0, 
NULL
, 
xTicksToWaô
 );

826 
pxSåómBuf„r
->
xTaskWaôögToRe˚ive
 = 
NULL
;

829 
xByãsAvaûabÀ
 = 
	`¥vByãsInBuf„r
–
pxSåómBuf„r
 );

833 
	`mtCOVERAGE_TEST_MARKER
();

838 
xByãsAvaûabÀ
 = 
	`¥vByãsInBuf„r
–
pxSåómBuf„r
 );

846 if–
xByãsAvaûabÀ
 > 
xByãsToSt‹eMesßgeLígth
 )

848 
xRe˚ivedLígth
 = 
	`¥vRódMesßgeFromBuf„r
–
pxSåómBuf„r
, 
pvRxD©a
, 
xBuf„rLígthByãs
, 
xByãsAvaûabÀ
 );

851 if–
xRe˚ivedLígth
 !–
size_t
 ) 0 )

853 
	`åa˚STREAM_BUFFER_RECEIVE
–
xSåómBuf„r
, 
xRe˚ivedLígth
 );

854 
	`sbRECEIVE_COMPLETED
–
pxSåómBuf„r
 );

858 
	`mtCOVERAGE_TEST_MARKER
();

863 
	`åa˚STREAM_BUFFER_RECEIVE_FAILED
–
xSåómBuf„r
 );

864 
	`mtCOVERAGE_TEST_MARKER
();

867  
xRe˚ivedLígth
;

868 
	}
}

871 
size_t
 
	$xSåómBuf„rNextMesßgeLígthByãs
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 )

873 
SåómBuf„r_t
 * c⁄° 
pxSåómBuf„r
 = 
xSåómBuf„r
;

874 
size_t
 
xRëu∫
, 
xByãsAvaûabÀ
;

875 
c⁄figMESSAGE_BUFFER_LENGTH_TYPE
 
xTempRëu∫
;

877 
	`c⁄figASSERT
–
pxSåómBuf„r
 );

880 if––
pxSåómBuf„r
->
ucFœgs
 & 
sbFLAGS_IS_MESSAGE_BUFFER
 ) !–
uöt8_t
 ) 0 )

882 
xByãsAvaûabÀ
 = 
	`¥vByãsInBuf„r
–
pxSåómBuf„r
 );

884 if–
xByãsAvaûabÀ
 > 
sbBYTES_TO_STORE_MESSAGE_LENGTH
 )

889 –Ë
	`¥vRódByãsFromBuf„r
–
pxSåómBuf„r
, ( 
uöt8_t
 * ) &
xTempRëu∫
, 
sbBYTES_TO_STORE_MESSAGE_LENGTH
,ÖxSåómBuf„r->
xTaû
 );

890 
xRëu∫
 = ( 
size_t
 ) 
xTempRëu∫
;

898 
	`c⁄figASSERT
–
xByãsAvaûabÀ
 == 0 );

899 
xRëu∫
 = 0;

904 
xRëu∫
 = 0;

907  
xRëu∫
;

908 
	}
}

911 
size_t
 
	$xSåómBuf„rRe˚iveFromISR
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
,

912 * 
pvRxD©a
,

913 
size_t
 
xBuf„rLígthByãs
,

914 
Ba£Ty≥_t
 * c⁄° 
pxHighîPri‹ôyTaskWokí
 )

916 
SåómBuf„r_t
 * c⁄° 
pxSåómBuf„r
 = 
xSåómBuf„r
;

917 
size_t
 
xRe˚ivedLígth
 = 0, 
xByãsAvaûabÀ
, 
xByãsToSt‹eMesßgeLígth
;

919 
	`c⁄figASSERT
–
pvRxD©a
 );

920 
	`c⁄figASSERT
–
pxSåómBuf„r
 );

927 if––
pxSåómBuf„r
->
ucFœgs
 & 
sbFLAGS_IS_MESSAGE_BUFFER
 ) !–
uöt8_t
 ) 0 )

929 
xByãsToSt‹eMesßgeLígth
 = 
sbBYTES_TO_STORE_MESSAGE_LENGTH
;

933 
xByãsToSt‹eMesßgeLígth
 = 0;

936 
xByãsAvaûabÀ
 = 
	`¥vByãsInBuf„r
–
pxSåómBuf„r
 );

943 if–
xByãsAvaûabÀ
 > 
xByãsToSt‹eMesßgeLígth
 )

945 
xRe˚ivedLígth
 = 
	`¥vRódMesßgeFromBuf„r
–
pxSåómBuf„r
, 
pvRxD©a
, 
xBuf„rLígthByãs
, 
xByãsAvaûabÀ
 );

948 if–
xRe˚ivedLígth
 !–
size_t
 ) 0 )

950 
	`sbRECEIVE_COMPLETED_FROM_ISR
–
pxSåómBuf„r
, 
pxHighîPri‹ôyTaskWokí
 );

954 
	`mtCOVERAGE_TEST_MARKER
();

959 
	`mtCOVERAGE_TEST_MARKER
();

962 
	`åa˚STREAM_BUFFER_RECEIVE_FROM_ISR
–
xSåómBuf„r
, 
xRe˚ivedLígth
 );

964  
xRe˚ivedLígth
;

965 
	}
}

968 
size_t
 
	$¥vRódMesßgeFromBuf„r
–
SåómBuf„r_t
 * 
pxSåómBuf„r
,

969 * 
pvRxD©a
,

970 
size_t
 
xBuf„rLígthByãs
,

971 
size_t
 
xByãsAvaûabÀ
 )

973 
size_t
 
xCou¡
, 
xNextMesßgeLígth
;

974 
c⁄figMESSAGE_BUFFER_LENGTH_TYPE
 
xTempNextMesßgeLígth
;

975 
size_t
 
xNextTaû
 = 
pxSåómBuf„r
->
xTaû
;

977 if––
pxSåómBuf„r
->
ucFœgs
 & 
sbFLAGS_IS_MESSAGE_BUFFER
 ) !–
uöt8_t
 ) 0 )

981 
xNextTaû
 = 
	`¥vRódByãsFromBuf„r
–
pxSåómBuf„r
, ( 
uöt8_t
 * ) &
xTempNextMesßgeLígth
, 
sbBYTES_TO_STORE_MESSAGE_LENGTH
, xNextTail );

982 
xNextMesßgeLígth
 = ( 
size_t
 ) 
xTempNextMesßgeLígth
;

986 
xByãsAvaûabÀ
 -
sbBYTES_TO_STORE_MESSAGE_LENGTH
;

990 if–
xNextMesßgeLígth
 > 
xBuf„rLígthByãs
 )

993 
xNextMesßgeLígth
 = 0;

997 
	`mtCOVERAGE_TEST_MARKER
();

1004 
xNextMesßgeLígth
 = 
xBuf„rLígthByãs
;

1008 
xCou¡
 = 
	`c⁄figMIN
–
xNextMesßgeLígth
, 
xByãsAvaûabÀ
 );

1010 if–
xCou¡
 !–
size_t
 ) 0 )

1013 
pxSåómBuf„r
->
xTaû
 = 
	`¥vRódByãsFromBuf„r
–pxSåómBuf„r, ( 
uöt8_t
 * ) 
pvRxD©a
, 
xCou¡
, 
xNextTaû
 );

1016  
xCou¡
;

1017 
	}
}

1020 
Ba£Ty≥_t
 
	$xSåómBuf„rIsEm±y
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 )

1022 c⁄° 
SåómBuf„r_t
 * c⁄° 
pxSåómBuf„r
 = 
xSåómBuf„r
;

1023 
Ba£Ty≥_t
 
xRëu∫
;

1024 
size_t
 
xTaû
;

1026 
	`c⁄figASSERT
–
pxSåómBuf„r
 );

1029 
xTaû
 = 
pxSåómBuf„r
->xTail;

1031 if–
pxSåómBuf„r
->
xHód
 =
xTaû
 )

1033 
xRëu∫
 = 
pdTRUE
;

1037 
xRëu∫
 = 
pdFALSE
;

1040  
xRëu∫
;

1041 
	}
}

1044 
Ba£Ty≥_t
 
	$xSåómBuf„rIsFuŒ
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 )

1046 
Ba£Ty≥_t
 
xRëu∫
;

1047 
size_t
 
xByãsToSt‹eMesßgeLígth
;

1048 c⁄° 
SåómBuf„r_t
 * c⁄° 
pxSåómBuf„r
 = 
xSåómBuf„r
;

1050 
	`c⁄figASSERT
–
pxSåómBuf„r
 );

1056 if––
pxSåómBuf„r
->
ucFœgs
 & 
sbFLAGS_IS_MESSAGE_BUFFER
 ) !–
uöt8_t
 ) 0 )

1058 
xByãsToSt‹eMesßgeLígth
 = 
sbBYTES_TO_STORE_MESSAGE_LENGTH
;

1062 
xByãsToSt‹eMesßgeLígth
 = 0;

1066 if–
	`xSåómBuf„rS∑˚sAvaûabÀ
–
xSåómBuf„r
 ) <
xByãsToSt‹eMesßgeLígth
 )

1068 
xRëu∫
 = 
pdTRUE
;

1072 
xRëu∫
 = 
pdFALSE
;

1075  
xRëu∫
;

1076 
	}
}

1079 
Ba£Ty≥_t
 
	$xSåómBuf„rSídCom∂ëedFromISR
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
,

1080 
Ba£Ty≥_t
 * 
pxHighîPri‹ôyTaskWokí
 )

1082 
SåómBuf„r_t
 * c⁄° 
pxSåómBuf„r
 = 
xSåómBuf„r
;

1083 
Ba£Ty≥_t
 
xRëu∫
;

1084 
UBa£Ty≥_t
 
uxSavedI¡îru±Sètus
;

1086 
	`c⁄figASSERT
–
pxSåómBuf„r
 );

1088 
uxSavedI¡îru±Sètus
 = ( 
UBa£Ty≥_t
 ) 
	`p‹tSET_INTERRUPT_MASK_FROM_ISR
();

1090 if––
pxSåómBuf„r
 )->
xTaskWaôögToRe˚ive
 !
NULL
 )

1092 –Ë
	`xTaskNŸifyFromISR
––
pxSåómBuf„r
 )->
xTaskWaôögToRe˚ive
,

1093 –
uöt32_t
 ) 0,

1094 
eNoA˘i⁄
,

1095 
pxHighîPri‹ôyTaskWokí
 );

1096 –
pxSåómBuf„r
 )->
xTaskWaôögToRe˚ive
 = 
NULL
;

1097 
xRëu∫
 = 
pdTRUE
;

1101 
xRëu∫
 = 
pdFALSE
;

1104 
	`p‹tCLEAR_INTERRUPT_MASK_FROM_ISR
–
uxSavedI¡îru±Sètus
 );

1106  
xRëu∫
;

1107 
	}
}

1110 
Ba£Ty≥_t
 
	$xSåómBuf„rRe˚iveCom∂ëedFromISR
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
,

1111 
Ba£Ty≥_t
 * 
pxHighîPri‹ôyTaskWokí
 )

1113 
SåómBuf„r_t
 * c⁄° 
pxSåómBuf„r
 = 
xSåómBuf„r
;

1114 
Ba£Ty≥_t
 
xRëu∫
;

1115 
UBa£Ty≥_t
 
uxSavedI¡îru±Sètus
;

1117 
	`c⁄figASSERT
–
pxSåómBuf„r
 );

1119 
uxSavedI¡îru±Sètus
 = ( 
UBa£Ty≥_t
 ) 
	`p‹tSET_INTERRUPT_MASK_FROM_ISR
();

1121 if––
pxSåómBuf„r
 )->
xTaskWaôögToSíd
 !
NULL
 )

1123 –Ë
	`xTaskNŸifyFromISR
––
pxSåómBuf„r
 )->
xTaskWaôögToSíd
,

1124 –
uöt32_t
 ) 0,

1125 
eNoA˘i⁄
,

1126 
pxHighîPri‹ôyTaskWokí
 );

1127 –
pxSåómBuf„r
 )->
xTaskWaôögToSíd
 = 
NULL
;

1128 
xRëu∫
 = 
pdTRUE
;

1132 
xRëu∫
 = 
pdFALSE
;

1135 
	`p‹tCLEAR_INTERRUPT_MASK_FROM_ISR
–
uxSavedI¡îru±Sètus
 );

1137  
xRëu∫
;

1138 
	}
}

1141 
size_t
 
	$¥vWrôeByãsToBuf„r
–
SåómBuf„r_t
 * c⁄° 
pxSåómBuf„r
,

1142 c⁄° 
uöt8_t
 * 
pucD©a
,

1143 
size_t
 
xCou¡
,

1144 
size_t
 
xHód
 )

1146 
size_t
 
xFú°Lígth
;

1148 
	`c⁄figASSERT
–
xCou¡
 > ( 
size_t
 ) 0 );

1153 
xFú°Lígth
 = 
	`c⁄figMIN
–
pxSåómBuf„r
->
xLígth
 - 
xHód
, 
xCou¡
 );

1156 
	`c⁄figASSERT
––
xHód
 + 
xFú°Lígth
 ) <
pxSåómBuf„r
->
xLígth
 );

1157 –Ë
	`mem˝y
––* ) ( &–
pxSåómBuf„r
->
pucBuf„r
[ 
xHód
 ] ) ), ( c⁄° * ) 
pucD©a
, 
xFú°Lígth
 );

1161 if–
xCou¡
 > 
xFú°Lígth
 )

1164 
	`c⁄figASSERT
––
xCou¡
 - 
xFú°Lígth
 ) <
pxSåómBuf„r
->
xLígth
 );

1165 –Ë
	`mem˝y
––* ) 
pxSåómBuf„r
->
pucBuf„r
, ( c⁄° * ) &–
pucD©a
[ 
xFú°Lígth
 ] ), 
xCou¡
 - xFirstLength );

1169 
	`mtCOVERAGE_TEST_MARKER
();

1172 
xHód
 +
xCou¡
;

1174 if–
xHód
 >
pxSåómBuf„r
->
xLígth
 )

1176 
xHód
 -
pxSåómBuf„r
->
xLígth
;

1180 
	`mtCOVERAGE_TEST_MARKER
();

1183  
xHód
;

1184 
	}
}

1187 
size_t
 
	$¥vRódByãsFromBuf„r
–
SåómBuf„r_t
 * 
pxSåómBuf„r
,

1188 
uöt8_t
 * 
pucD©a
,

1189 
size_t
 
xCou¡
,

1190 
size_t
 
xTaû
 )

1192 
size_t
 
xFú°Lígth
;

1194 
	`c⁄figASSERT
–
xCou¡
 !–
size_t
 ) 0 );

1199 
xFú°Lígth
 = 
	`c⁄figMIN
–
pxSåómBuf„r
->
xLígth
 - 
xTaû
, 
xCou¡
 );

1203 
	`c⁄figASSERT
–
xFú°Lígth
 <
xCou¡
 );

1204 
	`c⁄figASSERT
––
xTaû
 + 
xFú°Lígth
 ) <
pxSåómBuf„r
->
xLígth
 );

1205 –Ë
	`mem˝y
––* ) 
pucD©a
, ( c⁄° * ) &–
pxSåómBuf„r
->
pucBuf„r
[ 
xTaû
 ] ), 
xFú°Lígth
 );

1209 if–
xCou¡
 > 
xFú°Lígth
 )

1212 –Ë
	`mem˝y
––* ) &–
pucD©a
[ 
xFú°Lígth
 ] ), ( * ) ( 
pxSåómBuf„r
->
pucBuf„r
 ), 
xCou¡
 - xFirstLength );

1216 
	`mtCOVERAGE_TEST_MARKER
();

1220 
xTaû
 +
xCou¡
;

1222 if–
xTaû
 >
pxSåómBuf„r
->
xLígth
 )

1224 
xTaû
 -
pxSåómBuf„r
->
xLígth
;

1227  
xTaû
;

1228 
	}
}

1231 
size_t
 
	$¥vByãsInBuf„r
–c⁄° 
SåómBuf„r_t
 * c⁄° 
pxSåómBuf„r
 )

1234 
size_t
 
xCou¡
;

1236 
xCou¡
 = 
pxSåómBuf„r
->
xLígth
 +ÖxSåómBuf„r->
xHód
;

1237 
xCou¡
 -
pxSåómBuf„r
->
xTaû
;

1239 if–
xCou¡
 >
pxSåómBuf„r
->
xLígth
 )

1241 
xCou¡
 -
pxSåómBuf„r
->
xLígth
;

1245 
	`mtCOVERAGE_TEST_MARKER
();

1248  
xCou¡
;

1249 
	}
}

1252 
	$¥vInôüli£NewSåómBuf„r
–
SåómBuf„r_t
 * c⁄° 
pxSåómBuf„r
,

1253 
uöt8_t
 * c⁄° 
pucBuf„r
,

1254 
size_t
 
xBuf„rSizeByãs
,

1255 
size_t
 
xTriggîLevñByãs
,

1256 
uöt8_t
 
ucFœgs
 )

1261 #i‡–
c⁄figASSERT_DEFINED
 == 1 )

1266 c⁄° 
Ba£Ty≥_t
 
xWrôeVÆue
 = 0x55;

1267 
	`c⁄figASSERT
–
	`mem£t
–
pucBuf„r
, ( Ë
xWrôeVÆue
, 
xBuf„rSizeByãs
 ) ==ÖucBuffer );

1271 –Ë
	`mem£t
––* ) 
pxSåómBuf„r
, 0x00, –
SåómBuf„r_t
 ) );

1272 
pxSåómBuf„r
->
pucBuf„r
 =ÖucBuffer;

1273 
pxSåómBuf„r
->
xLígth
 = 
xBuf„rSizeByãs
;

1274 
pxSåómBuf„r
->
xTriggîLevñByãs
 = xTriggerLevelBytes;

1275 
pxSåómBuf„r
->
ucFœgs
 = ucFlags;

1276 
	}
}

1278 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

1280 
UBa£Ty≥_t
 
	$uxSåómBuf„rGëSåómBuf„rNumbî
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 )

1282  
xSåómBuf„r
->
uxSåómBuf„rNumbî
;

1283 
	}
}

1288 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

1290 
	$vSåómBuf„rSëSåómBuf„rNumbî
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
,

1291 
UBa£Ty≥_t
 
uxSåómBuf„rNumbî
 )

1293 
xSåómBuf„r
->
uxSåómBuf„rNumbî
 = uxStreamBufferNumber;

1294 
	}
}

1299 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

1301 
uöt8_t
 
	$ucSåómBuf„rGëSåómBuf„rTy≥
–
SåómBuf„rH™dÀ_t
 
xSåómBuf„r
 )

1303 –
xSåómBuf„r
->
ucFœgs
 & 
sbFLAGS_IS_MESSAGE_BUFFER
 );

1304 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\tasks.c

30 
	~<°dlib.h
>

31 
	~<°rög.h
>

36 
	#MPU_WRAPPERS_INCLUDED_FROM_API_FILE


	)

39 
	~"FªeRTOS.h
"

40 
	~"èsk.h
"

41 
	~"timîs.h
"

42 
	~"°ack_ma¸os.h
"

48 #unde‡
MPU_WRAPPERS_INCLUDED_FROM_API_FILE


52 #i‡–
c⁄figUSE_STATS_FORMATTING_FUNCTIONS
 == 1 )

58 
	~<°dio.h
>

61 #i‡–
c⁄figUSE_PREEMPTION
 == 0 )

65 
	#èskYIELD_IF_USING_PREEMPTION
()

	)

67 
	#èskYIELD_IF_USING_PREEMPTION
(Ë
	`p‹tYIELD_WITHIN_API
()

	)

71 
	#èskNOT_WAITING_NOTIFICATION
 ( ( 
uöt8_t
 ) 0 )

	)

72 
	#èskWAITING_NOTIFICATION
 ( ( 
uöt8_t
 ) 1 )

	)

73 
	#èskNOTIFICATION_RECEIVED
 ( ( 
uöt8_t
 ) 2 )

	)

79 
	#tskSTACK_FILL_BYTE
 ( 0xa5U )

	)

82 
	#tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB
 ( ( 
uöt8_t
 ) 0 )

	)

83 
	#tskSTATICALLY_ALLOCATED_STACK_ONLY
 ( ( 
uöt8_t
 ) 1 )

	)

84 
	#tskSTATICALLY_ALLOCATED_STACK_AND_TCB
 ( ( 
uöt8_t
 ) 2 )

	)

89 #i‡––
c⁄figCHECK_FOR_STACK_OVERFLOW
 > 1 ) || ( 
c⁄figUSE_TRACE_FACILITY
 =1 ) || ( 
INCLUDE_uxTaskGëSèckHighW©îM¨k
 =1 ) || ( 
INCLUDE_uxTaskGëSèckHighW©îM¨k2
 == 1 ) )

90 
	#tskSET_NEW_STACKS_TO_KNOWN_VALUE
 1

	)

92 
	#tskSET_NEW_STACKS_TO_KNOWN_VALUE
 0

	)

98 
	#tskRUNNING_CHAR
 ( 'X' )

	)

99 
	#tskBLOCKED_CHAR
 ( 'B' )

	)

100 
	#tskREADY_CHAR
 ( 'R' )

	)

101 
	#tskDELETED_CHAR
 ( 'D' )

	)

102 
	#tskSUSPENDED_CHAR
 ( 'S' )

	)

108 #ifde‡
p‹tREMOVE_STATIC_QUALIFIER


109 

	)

114 #i‚de‡
c⁄figIDLE_TASK_NAME


115 
	#c⁄figIDLE_TASK_NAME
 "IDLE"

	)

118 #i‡–
c⁄figUSE_PORT_OPTIMISED_TASK_SELECTION
 == 0 )

126 
	#èskRECORD_READY_PRIORITY
–
uxPri‹ôy
 ) \

128 if––
uxPri‹ôy
 ) > 
uxT›RódyPri‹ôy
 ) \

130 
uxT›RódyPri‹ôy
 = ( 
uxPri‹ôy
 ); \

132 }

	)

136 
	#èskSELECT_HIGHEST_PRIORITY_TASK
() \

138 
UBa£Ty≥_t
 
uxT›Pri‹ôy
 = 
uxT›RódyPri‹ôy
; \

141  
	`li°LIST_IS_EMPTY
–&–
pxRódyTasksLi°s
[ 
uxT›Pri‹ôy
 ] ) ) ) \

143 
	`c⁄figASSERT
–
uxT›Pri‹ôy
 ); \

144 --
uxT›Pri‹ôy
; \

149 
	`li°GET_OWNER_OF_NEXT_ENTRY
–
pxCuºítTCB
, &–
pxRódyTasksLi°s
[ 
uxT›Pri‹ôy
 ] ) ); \

150 
uxT›RódyPri‹ôy
 = 
uxT›Pri‹ôy
; \

151 }

	)

158 
	#èskRESET_READY_PRIORITY
–
uxPri‹ôy
 )

	)

159 
	#p‹tRESET_READY_PRIORITY
–
uxPri‹ôy
, 
uxT›RódyPri‹ôy
 )

	)

168 
	#èskRECORD_READY_PRIORITY
–
uxPri‹ôy
 ) 
	`p‹tRECORD_READY_PRIORITY
–uxPri‹ôy, 
uxT›RódyPri‹ôy
 )

	)

172 
	#èskSELECT_HIGHEST_PRIORITY_TASK
() \

174 
UBa£Ty≥_t
 
uxT›Pri‹ôy
; \

177 
	`p‹tGET_HIGHEST_PRIORITY
–
uxT›Pri‹ôy
, 
uxT›RódyPri‹ôy
 ); \

178 
	`c⁄figASSERT
–
	`li°CURRENT_LIST_LENGTH
–&–
pxRódyTasksLi°s
[ 
uxT›Pri‹ôy
 ] ) ) > 0 ); \

179 
	`li°GET_OWNER_OF_NEXT_ENTRY
–
pxCuºítTCB
, &–
pxRódyTasksLi°s
[ 
uxT›Pri‹ôy
 ] ) ); \

180 }

	)

187 
	#èskRESET_READY_PRIORITY
–
uxPri‹ôy
 ) \

189 if–
	`li°CURRENT_LIST_LENGTH
–&–
pxRódyTasksLi°s
[ ( 
uxPri‹ôy
 ) ] ) ) =–
UBa£Ty≥_t
 ) 0 ) \

191 
	`p‹tRESET_READY_PRIORITY
––
uxPri‹ôy
 ), ( 
uxT›RódyPri‹ôy
 ) ); \

193 }

	)

201 
	#èskSWITCH_DELAYED_LISTS
() \

203 
Li°_t
 * 
pxTemp
; \

206 
	`c⁄figASSERT
––
	`li°LIST_IS_EMPTY
–
pxDñayedTaskLi°
 ) ) ); \

208 
pxTemp
 = 
pxDñayedTaskLi°
; \

209 
pxDñayedTaskLi°
 = 
pxOvîÊowDñayedTaskLi°
; \

210 
pxOvîÊowDñayedTaskLi°
 = 
pxTemp
; \

211 
xNumOfOvîÊows
++; \

212 
	`¥vRe£tNextTaskUnblockTime
(); \

213 }

	)

221 
	#¥vAddTaskToRódyLi°
–
pxTCB
 ) \

222 
	`åa˚MOVED_TASK_TO_READY_STATE
–
pxTCB
 ); \

223 
	`èskRECORD_READY_PRIORITY
––
pxTCB
 )->
uxPri‹ôy
 ); \

224 
	`li°INSERT_END
–&–
pxRódyTasksLi°s
[ ( 
pxTCB
 )->
uxPri‹ôy
 ] ), &––pxTCB )->
xSèãLi°Iãm
 ) ); \

225 
	`åa˚POST_MOVED_TASK_TO_READY_STATE
–
pxTCB
 )

	)

234 
	#¥vGëTCBFromH™dÀ
–
pxH™dÀ
 ) ( ( (ÖxH™dÀ ) =
NULL
 ) ? 
pxCuºítTCB
 : (ÖxH™dÀ ) )

	)

244 #i‡–
c⁄figUSE_16_BIT_TICKS
 == 1 )

245 
	#èskEVENT_LIST_ITEM_VALUE_IN_USE
 0x8000U

	)

247 
	#èskEVENT_LIST_ITEM_VALUE_IN_USE
 0x80000000UL

	)

255 
	stskTaskC⁄åﬁBlock


257 vﬁ©ûê
SèckTy≥_t
 * 
	mpxT›OfSèck
;

259 #i‡–
p‹tUSING_MPU_WRAPPERS
 == 1 )

260 
xMPU_SETTINGS
 
	mxMPUSëtögs
;

263 
Li°Iãm_t
 
	mxSèãLi°Iãm
;

264 
Li°Iãm_t
 
	mxEvítLi°Iãm
;

265 
UBa£Ty≥_t
 
	muxPri‹ôy
;

266 
SèckTy≥_t
 * 
	mpxSèck
;

267 
	mpcTaskName
[ 
c⁄figMAX_TASK_NAME_LEN
 ];

269 #i‡––
p‹tSTACK_GROWTH
 > 0 ) || ( 
c⁄figRECORD_STACK_HIGH_ADDRESS
 == 1 ) )

270 
SèckTy≥_t
 * 
	mpxEndOfSèck
;

273 #i‡–
p‹tCRITICAL_NESTING_IN_TCB
 == 1 )

274 
UBa£Ty≥_t
 
	muxCrôiˇlNe°ög
;

277 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

278 
UBa£Ty≥_t
 
	muxTCBNumbî
;

279 
UBa£Ty≥_t
 
	muxTaskNumbî
;

282 #i‡–
c⁄figUSE_MUTEXES
 == 1 )

283 
UBa£Ty≥_t
 
	muxBa£Pri‹ôy
;

284 
UBa£Ty≥_t
 
	muxMuãxesHñd
;

287 #i‡–
c⁄figUSE_APPLICATION_TASK_TAG
 == 1 )

288 
TaskHookFun˘i⁄_t
 
	mpxTaskTag
;

291 #i‡–
c⁄figNUM_THREAD_LOCAL_STORAGE_POINTERS
 > 0 )

292 * 
	mpvThªadLoˇlSt‹agePoöãrs
[ 
c⁄figNUM_THREAD_LOCAL_STORAGE_POINTERS
 ];

295 #i‡–
c⁄figGENERATE_RUN_TIME_STATS
 == 1 )

296 
c⁄figRUN_TIME_COUNTER_TYPE
 
	mulRunTimeCou¡î
;

299 #i‡–
c⁄figUSE_NEWLIB_REENTRANT
 == 1 )

311 
_ªít
 
	mxNewLib_ªít
;

314 #i‡–
c⁄figUSE_TASK_NOTIFICATIONS
 == 1 )

315 vﬁ©ûê
uöt32_t
 
	mulNŸifõdVÆue
[ 
c⁄figTASK_NOTIFICATION_ARRAY_ENTRIES
 ];

316 vﬁ©ûê
uöt8_t
 
	mucNŸifySèã
[ 
c⁄figTASK_NOTIFICATION_ARRAY_ENTRIES
 ];

321 #i‡–
tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE
 != 0 )

322 
uöt8_t
 
	mucSètiˇŒyAŒoˇãd
;

325 #i‡–
INCLUDE_xTaskAb‹tDñay
 == 1 )

326 
uöt8_t
 
	mucDñayAb‹ãd
;

329 #i‡–
c⁄figUSE_POSIX_ERRNO
 == 1 )

330 
	miTaskEºno
;

332 } 
	ttskTCB
;

336 
tskTCB
 
	tTCB_t
;

340 
PRIVILEGED_DATA
 
TCB_t
 * vﬁ©ûê
	gpxCuºítTCB
 = 
NULL
;

346 
PRIVILEGED_DATA
 
Li°_t
 
	gpxRódyTasksLi°s
[ 
c⁄figMAX_PRIORITIES
 ];

347 
PRIVILEGED_DATA
 
Li°_t
 
	gxDñayedTaskLi°1
;

348 
PRIVILEGED_DATA
 
Li°_t
 
	gxDñayedTaskLi°2
;

349 
PRIVILEGED_DATA
 
Li°_t
 * vﬁ©ûê
	gpxDñayedTaskLi°
;

350 
PRIVILEGED_DATA
 
Li°_t
 * vﬁ©ûê
	gpxOvîÊowDñayedTaskLi°
;

351 
PRIVILEGED_DATA
 
Li°_t
 
	gxPídögRódyLi°
;

353 #i‡–
INCLUDE_vTaskDñëe
 == 1 )

355 
PRIVILEGED_DATA
 
Li°_t
 
	gxTasksWaôögTîmö©i⁄
;

356 
PRIVILEGED_DATA
 vﬁ©ûê
UBa£Ty≥_t
 
	guxDñëedTasksWaôögCÀ™Up
 = ( UBaseType_t ) 0U;

360 #i‡–
INCLUDE_vTaskSu•íd
 == 1 )

362 
PRIVILEGED_DATA
 
Li°_t
 
	gxSu•ídedTaskLi°
;

368 #i‡–
c⁄figUSE_POSIX_ERRNO
 == 1 )

369 
	gFªeRTOS_î∫o
 = 0;

373 
PRIVILEGED_DATA
 vﬁ©ûê
UBa£Ty≥_t
 
	guxCuºítNumbîOfTasks
 = ( UBaseType_t ) 0U;

374 
PRIVILEGED_DATA
 vﬁ©ûê
TickTy≥_t
 
	gxTickCou¡
 = ( TickTy≥_àË
c⁄figINITIAL_TICK_COUNT
;

375 
PRIVILEGED_DATA
 vﬁ©ûê
UBa£Ty≥_t
 
	guxT›RódyPri‹ôy
 = 
tskIDLE_PRIORITY
;

376 
PRIVILEGED_DATA
 vﬁ©ûê
Ba£Ty≥_t
 
	gxScheduÀrRu¬ög
 = 
pdFALSE
;

377 
PRIVILEGED_DATA
 vﬁ©ûê
TickTy≥_t
 
	gxPídedTicks
 = ( TickType_t ) 0U;

378 
PRIVILEGED_DATA
 vﬁ©ûê
Ba£Ty≥_t
 
	gxYõldPídög
 = 
pdFALSE
;

379 
PRIVILEGED_DATA
 vﬁ©ûê
Ba£Ty≥_t
 
	gxNumOfOvîÊows
 = ( BaseType_t ) 0;

380 
PRIVILEGED_DATA
 
UBa£Ty≥_t
 
	guxTaskNumbî
 = ( UBaseType_t ) 0U;

381 
PRIVILEGED_DATA
 vﬁ©ûê
TickTy≥_t
 
	gxNextTaskUnblockTime
 = ( TickType_t ) 0U;

382 
PRIVILEGED_DATA
 
TaskH™dÀ_t
 
	gxIdÀTaskH™dÀ
 = 
NULL
;

387 c⁄° vﬁ©ûê
UBa£Ty≥_t
 
	guxT›U£dPri‹ôy
 = 
c⁄figMAX_PRIORITIES
 - 1U;

397 
PRIVILEGED_DATA
 vﬁ©ûê
UBa£Ty≥_t
 
	guxScheduÀrSu•íded
 = ( UBa£Ty≥_àË
pdFALSE
;

399 #i‡–
c⁄figGENERATE_RUN_TIME_STATS
 == 1 )

403 
PRIVILEGED_DATA
 
c⁄figRUN_TIME_COUNTER_TYPE
 
	gulTaskSwôchedInTime
 = 0UL;

404 
PRIVILEGED_DATA
 vﬁ©ûê
c⁄figRUN_TIME_COUNTER_TYPE
 
	gulTŸÆRunTime
 = 0UL;

419 #i‡–
INCLUDE_vTaskSu•íd
 == 1 )

421 
Ba£Ty≥_t
 
	$¥vTaskIsTaskSu•íded
–c⁄° 
TaskH™dÀ_t
 
xTask
 ) 
PRIVILEGED_FUNCTION
;

429 
	$¥vInôüli£TaskLi°s
–Ë
PRIVILEGED_FUNCTION
;

442 
	$p‹tTASK_FUNCTION_PROTO
–
¥vIdÀTask
, 
pvP¨amëîs
 ) 
PRIVILEGED_FUNCTION
;

451 #i‡–
INCLUDE_vTaskDñëe
 == 1 )

453 
	$¥vDñëeTCB
–
TCB_t
 * 
pxTCB
 ) 
PRIVILEGED_FUNCTION
;

462 
	$¥vCheckTasksWaôögTîmö©i⁄
–Ë
PRIVILEGED_FUNCTION
;

468 
	$¥vAddCuºítTaskToDñayedLi°
–
TickTy≥_t
 
xTicksToWaô
,

469 c⁄° 
Ba£Ty≥_t
 
xC™BlockIndeföôñy
 ) 
PRIVILEGED_FUNCTION
;

479 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

481 
UBa£Ty≥_t
 
	$¥vLi°TasksWôhöSögÀLi°
–
TaskSètus_t
 * 
pxTaskSètusAºay
,

482 
Li°_t
 * 
pxLi°
,

483 
eTaskSèã
 
eSèã
 ) 
PRIVILEGED_FUNCTION
;

491 #i‡–
INCLUDE_xTaskGëH™dÀ
 == 1 )

493 
TCB_t
 * 
	$¥vSórchF‹NameWôhöSögÀLi°
–
Li°_t
 * 
pxLi°
,

494 c⁄° 
pcNameToQuîy
[] ) 
PRIVILEGED_FUNCTION
;

503 #i‡––
c⁄figUSE_TRACE_FACILITY
 =1 ) || ( 
INCLUDE_uxTaskGëSèckHighW©îM¨k
 =1 ) || ( 
INCLUDE_uxTaskGëSèckHighW©îM¨k2
 == 1 ) )

505 
c⁄figSTACK_DEPTH_TYPE
 
	$¥vTaskCheckFªeSèckS∑˚
–c⁄° 
uöt8_t
 * 
pucSèckByã
 ) 
PRIVILEGED_FUNCTION
;

518 #i‡–
c⁄figUSE_TICKLESS_IDLE
 != 0 )

520 
TickTy≥_t
 
	$¥vGëEx≥˘edIdÀTime
–Ë
PRIVILEGED_FUNCTION
;

528 
	$¥vRe£tNextTaskUnblockTime
–Ë
PRIVILEGED_FUNCTION
;

530 #i‡––
c⁄figUSE_TRACE_FACILITY
 =1 ) && ( 
c⁄figUSE_STATS_FORMATTING_FUNCTIONS
 > 0 ) )

536 * 
	$¥vWrôeNameToBuf„r
–* 
pcBuf„r
,

537 c⁄° * 
pcTaskName
 ) 
PRIVILEGED_FUNCTION
;

545 
	$¥vInôüli£NewTask
–
TaskFun˘i⁄_t
 
pxTaskCode
,

546 c⁄° * c⁄° 
pcName
,

547 c⁄° 
uöt32_t
 
ulSèckDïth
,

548 * c⁄° 
pvP¨amëîs
,

549 
UBa£Ty≥_t
 
uxPri‹ôy
,

550 
TaskH™dÀ_t
 * c⁄° 
pxCª©edTask
,

551 
TCB_t
 * 
pxNewTCB
,

552 c⁄° 
Mem‹yRegi⁄_t
 * c⁄° 
xRegi⁄s
 ) 
PRIVILEGED_FUNCTION
;

558 
	$¥vAddNewTaskToRódyLi°
–
TCB_t
 * 
pxNewTCB
 ) 
PRIVILEGED_FUNCTION
;

565 #ifde‡
FREERTOS_TASKS_C_ADDITIONS_INIT


567 
	$‰ìπos_èsks_c_addôi⁄s_öô
–Ë
PRIVILEGED_FUNCTION
;

573 #i‡–
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 )

575 
TaskH™dÀ_t
 
	$xTaskCª©eSètic
–
TaskFun˘i⁄_t
 
pxTaskCode
,

576 c⁄° * c⁄° 
pcName
,

577 c⁄° 
uöt32_t
 
ulSèckDïth
,

578 * c⁄° 
pvP¨amëîs
,

579 
UBa£Ty≥_t
 
uxPri‹ôy
,

580 
SèckTy≥_t
 * c⁄° 
puxSèckBuf„r
,

581 
SèticTask_t
 * c⁄° 
pxTaskBuf„r
 )

583 
TCB_t
 * 
pxNewTCB
;

584 
TaskH™dÀ_t
 
xRëu∫
;

586 
	`c⁄figASSERT
–
puxSèckBuf„r
 !
NULL
 );

587 
	`c⁄figASSERT
–
pxTaskBuf„r
 !
NULL
 );

589 #i‡–
c⁄figASSERT_DEFINED
 == 1 )

594 vﬁ©ûê
size_t
 
xSize
 = –
SèticTask_t
 );

595 
	`c⁄figASSERT
–
xSize
 =–
TCB_t
 ) );

596 –Ë
xSize
;

600 if––
pxTaskBuf„r
 !
NULL
 ) && ( 
puxSèckBuf„r
 != NULL ) )

604 
pxNewTCB
 = ( 
TCB_t
 * ) 
pxTaskBuf„r
;

605 
pxNewTCB
->
pxSèck
 = ( 
SèckTy≥_t
 * ) 
puxSèckBuf„r
;

607 #i‡–
tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE
 != 0 )

611 
pxNewTCB
->
ucSètiˇŒyAŒoˇãd
 = 
tskSTATICALLY_ALLOCATED_STACK_AND_TCB
;

615 
	`¥vInôüli£NewTask
–
pxTaskCode
, 
pcName
, 
ulSèckDïth
, 
pvP¨amëîs
, 
uxPri‹ôy
, &
xRëu∫
, 
pxNewTCB
, 
NULL
 );

616 
	`¥vAddNewTaskToRódyLi°
–
pxNewTCB
 );

620 
xRëu∫
 = 
NULL
;

623  
xRëu∫
;

624 
	}
}

629 #i‡––
p‹tUSING_MPU_WRAPPERS
 =1 ) && ( 
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 ) )

631 
Ba£Ty≥_t
 
	$xTaskCª©eRe°ri˘edSètic
–c⁄° 
TaskP¨amëîs_t
 * c⁄° 
pxTaskDeföôi⁄
,

632 
TaskH™dÀ_t
 * 
pxCª©edTask
 )

634 
TCB_t
 * 
pxNewTCB
;

635 
Ba£Ty≥_t
 
xRëu∫
 = 
îrCOULD_NOT_ALLOCATE_REQUIRED_MEMORY
;

637 
	`c⁄figASSERT
–
pxTaskDeföôi⁄
->
puxSèckBuf„r
 !
NULL
 );

638 
	`c⁄figASSERT
–
pxTaskDeföôi⁄
->
pxTaskBuf„r
 !
NULL
 );

640 if––
pxTaskDeföôi⁄
->
puxSèckBuf„r
 !
NULL
 ) && (ÖxTaskDeföôi⁄->
pxTaskBuf„r
 != NULL ) )

645 
pxNewTCB
 = ( 
TCB_t
 * ) 
pxTaskDeföôi⁄
->
pxTaskBuf„r
;

648 
pxNewTCB
->
pxSèck
 = 
pxTaskDeföôi⁄
->
puxSèckBuf„r
;

650 #i‡–
tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE
 != 0 )

654 
pxNewTCB
->
ucSètiˇŒyAŒoˇãd
 = 
tskSTATICALLY_ALLOCATED_STACK_AND_TCB
;

658 
	`¥vInôüli£NewTask
–
pxTaskDeföôi⁄
->
pvTaskCode
,

659 
pxTaskDeföôi⁄
->
pcName
,

660 –
uöt32_t
 ) 
pxTaskDeföôi⁄
->
usSèckDïth
,

661 
pxTaskDeföôi⁄
->
pvP¨amëîs
,

662 
pxTaskDeföôi⁄
->
uxPri‹ôy
,

663 
pxCª©edTask
, 
pxNewTCB
,

664 
pxTaskDeföôi⁄
->
xRegi⁄s
 );

666 
	`¥vAddNewTaskToRódyLi°
–
pxNewTCB
 );

667 
xRëu∫
 = 
pdPASS
;

670  
xRëu∫
;

671 
	}
}

676 #i‡––
p‹tUSING_MPU_WRAPPERS
 =1 ) && ( 
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 ) )

678 
Ba£Ty≥_t
 
	$xTaskCª©eRe°ri˘ed
–c⁄° 
TaskP¨amëîs_t
 * c⁄° 
pxTaskDeföôi⁄
,

679 
TaskH™dÀ_t
 * 
pxCª©edTask
 )

681 
TCB_t
 * 
pxNewTCB
;

682 
Ba£Ty≥_t
 
xRëu∫
 = 
îrCOULD_NOT_ALLOCATE_REQUIRED_MEMORY
;

684 
	`c⁄figASSERT
–
pxTaskDeföôi⁄
->
puxSèckBuf„r
 );

686 if–
pxTaskDeföôi⁄
->
puxSèckBuf„r
 !
NULL
 )

691 
pxNewTCB
 = ( 
TCB_t
 * ) 
	`pvP‹tMÆloc
( ( TCB_t ) );

693 if–
pxNewTCB
 !
NULL
 )

696 
pxNewTCB
->
pxSèck
 = 
pxTaskDeföôi⁄
->
puxSèckBuf„r
;

698 #i‡–
tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE
 != 0 )

703 
pxNewTCB
->
ucSètiˇŒyAŒoˇãd
 = 
tskSTATICALLY_ALLOCATED_STACK_ONLY
;

707 
	`¥vInôüli£NewTask
–
pxTaskDeföôi⁄
->
pvTaskCode
,

708 
pxTaskDeföôi⁄
->
pcName
,

709 –
uöt32_t
 ) 
pxTaskDeföôi⁄
->
usSèckDïth
,

710 
pxTaskDeföôi⁄
->
pvP¨amëîs
,

711 
pxTaskDeföôi⁄
->
uxPri‹ôy
,

712 
pxCª©edTask
, 
pxNewTCB
,

713 
pxTaskDeföôi⁄
->
xRegi⁄s
 );

715 
	`¥vAddNewTaskToRódyLi°
–
pxNewTCB
 );

716 
xRëu∫
 = 
pdPASS
;

720  
xRëu∫
;

721 
	}
}

726 #i‡–
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 )

728 
Ba£Ty≥_t
 
	$xTaskCª©e
–
TaskFun˘i⁄_t
 
pxTaskCode
,

729 c⁄° * c⁄° 
pcName
,

730 c⁄° 
c⁄figSTACK_DEPTH_TYPE
 
usSèckDïth
,

731 * c⁄° 
pvP¨amëîs
,

732 
UBa£Ty≥_t
 
uxPri‹ôy
,

733 
TaskH™dÀ_t
 * c⁄° 
pxCª©edTask
 )

735 
TCB_t
 * 
pxNewTCB
;

736 
Ba£Ty≥_t
 
xRëu∫
;

741 #i‡–
p‹tSTACK_GROWTH
 > 0 )

746 
pxNewTCB
 = ( 
TCB_t
 * ) 
	`pvP‹tMÆloc
( ( TCB_t ) );

748 if–
pxNewTCB
 !
NULL
 )

753 
pxNewTCB
->
pxSèck
 = ( 
SèckTy≥_t
 * ) 
	`pvP‹tMÆlocSèck
––––
size_t
 ) 
usSèckDïth
 ) * ( StackType_t ) ) );

755 if–
pxNewTCB
->
pxSèck
 =
NULL
 )

758 
	`vP‹tFªe
–
pxNewTCB
 );

759 
pxNewTCB
 = 
NULL
;

765 
SèckTy≥_t
 * 
pxSèck
;

768 
pxSèck
 = 
	`pvP‹tMÆlocSèck
––––
size_t
 ) 
usSèckDïth
 ) * –
SèckTy≥_t
 ) ) );

770 if–
pxSèck
 !
NULL
 )

773 
pxNewTCB
 = ( 
TCB_t
 * ) 
	`pvP‹tMÆloc
( ( TCB_t ) );

775 if–
pxNewTCB
 !
NULL
 )

778 
pxNewTCB
->
pxSèck
 =ÖxStack;

784 
	`vP‹tFªeSèck
–
pxSèck
 );

789 
pxNewTCB
 = 
NULL
;

794 if–
pxNewTCB
 !
NULL
 )

796 #i‡–
tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE
 != 0 )

800 
pxNewTCB
->
ucSètiˇŒyAŒoˇãd
 = 
tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB
;

804 
	`¥vInôüli£NewTask
–
pxTaskCode
, 
pcName
, ( 
uöt32_t
 ) 
usSèckDïth
, 
pvP¨amëîs
, 
uxPri‹ôy
, 
pxCª©edTask
, 
pxNewTCB
, 
NULL
 );

805 
	`¥vAddNewTaskToRódyLi°
–
pxNewTCB
 );

806 
xRëu∫
 = 
pdPASS
;

810 
xRëu∫
 = 
îrCOULD_NOT_ALLOCATE_REQUIRED_MEMORY
;

813  
xRëu∫
;

814 
	}
}

819 
	$¥vInôüli£NewTask
–
TaskFun˘i⁄_t
 
pxTaskCode
,

820 c⁄° * c⁄° 
pcName
,

821 c⁄° 
uöt32_t
 
ulSèckDïth
,

822 * c⁄° 
pvP¨amëîs
,

823 
UBa£Ty≥_t
 
uxPri‹ôy
,

824 
TaskH™dÀ_t
 * c⁄° 
pxCª©edTask
,

825 
TCB_t
 * 
pxNewTCB
,

826 c⁄° 
Mem‹yRegi⁄_t
 * c⁄° 
xRegi⁄s
 )

828 
SèckTy≥_t
 * 
pxT›OfSèck
;

829 
UBa£Ty≥_t
 
x
;

831 #i‡–
p‹tUSING_MPU_WRAPPERS
 == 1 )

833 
Ba£Ty≥_t
 
xRunPrivûeged
;

835 if––
uxPri‹ôy
 & 
p‹tPRIVILEGE_BIT
 ) != 0U )

837 
xRunPrivûeged
 = 
pdTRUE
;

841 
xRunPrivûeged
 = 
pdFALSE
;

843 
uxPri‹ôy
 &~
p‹tPRIVILEGE_BIT
;

847 #i‡–
tskSET_NEW_STACKS_TO_KNOWN_VALUE
 == 1 )

850 –Ë
	`mem£t
–
pxNewTCB
->
pxSèck
, ( Ë
tskSTACK_FILL_BYTE
, ( 
size_t
 ) 
ulSèckDïth
 * –
SèckTy≥_t
 ) );

858 #i‡–
p‹tSTACK_GROWTH
 < 0 )

860 
pxT›OfSèck
 = &–
pxNewTCB
->
pxSèck
[ 
ulSèckDïth
 - ( 
uöt32_t
 ) 1 ] );

861 
pxT›OfSèck
 = ( 
SèckTy≥_t
 * ) ( ( ( 
p‹tPOINTER_SIZE_TYPE
 )ÖxT›OfSèck ) & ( ~––p‹tPOINTER_SIZE_TYPE ) 
p‹tBYTE_ALIGNMENT_MASK
 ) ) );

864 
	`c⁄figASSERT
––––
p‹tPOINTER_SIZE_TYPE
 ) 
pxT›OfSèck
 & (Ö‹tPOINTER_SIZE_TYPE ) 
p‹tBYTE_ALIGNMENT_MASK
 ) == 0UL ) );

866 #i‡–
c⁄figRECORD_STACK_HIGH_ADDRESS
 == 1 )

870 
pxNewTCB
->
pxEndOfSèck
 = 
pxT›OfSèck
;

876 
pxT›OfSèck
 = 
pxNewTCB
->
pxSèck
;

879 
	`c⁄figASSERT
––––
p‹tPOINTER_SIZE_TYPE
 ) 
pxNewTCB
->
pxSèck
 & (Ö‹tPOINTER_SIZE_TYPE ) 
p‹tBYTE_ALIGNMENT_MASK
 ) == 0UL ) );

883 
pxNewTCB
->
pxEndOfSèck
 =ÖxNewTCB->
pxSèck
 + ( 
ulSèckDïth
 - ( 
uöt32_t
 ) 1 );

888 if–
pcName
 !
NULL
 )

890  
x
 = ( 
UBa£Ty≥_t
 ) 0; x < ( UBa£Ty≥_àË
c⁄figMAX_TASK_NAME_LEN
; x++ )

892 
pxNewTCB
->
pcTaskName
[ 
x
 ] = 
pcName
[ x ];

897 if–
pcName
[ 
x
 ] == ( ) 0x00 )

903 
	`mtCOVERAGE_TEST_MARKER
();

909 
pxNewTCB
->
pcTaskName
[ 
c⁄figMAX_TASK_NAME_LEN
 - 1 ] = '\0';

915 
pxNewTCB
->
pcTaskName
[ 0 ] = 0x00;

919 
	`c⁄figASSERT
–
uxPri‹ôy
 < 
c⁄figMAX_PRIORITIES
 );

921 if–
uxPri‹ôy
 >–
UBa£Ty≥_t
 ) 
c⁄figMAX_PRIORITIES
 )

923 
uxPri‹ôy
 = ( 
UBa£Ty≥_t
 ) 
c⁄figMAX_PRIORITIES
 - ( UBaseType_t ) 1U;

927 
	`mtCOVERAGE_TEST_MARKER
();

930 
pxNewTCB
->
uxPri‹ôy
 = uxPriority;

931 #i‡–
c⁄figUSE_MUTEXES
 == 1 )

933 
pxNewTCB
->
uxBa£Pri‹ôy
 = 
uxPri‹ôy
;

934 
pxNewTCB
->
uxMuãxesHñd
 = 0;

938 
	`vLi°Inôüli£Iãm
–&–
pxNewTCB
->
xSèãLi°Iãm
 ) );

939 
	`vLi°Inôüli£Iãm
–&–
pxNewTCB
->
xEvítLi°Iãm
 ) );

943 
	`li°SET_LIST_ITEM_OWNER
–&–
pxNewTCB
->
xSèãLi°Iãm
 ),ÖxNewTCB );

946 
	`li°SET_LIST_ITEM_VALUE
–&–
pxNewTCB
->
xEvítLi°Iãm
 ), ( 
TickTy≥_t
 ) 
c⁄figMAX_PRIORITIES
 - ( TickTy≥_àË
uxPri‹ôy
 );

947 
	`li°SET_LIST_ITEM_OWNER
–&–
pxNewTCB
->
xEvítLi°Iãm
 ),ÖxNewTCB );

949 #i‡–
p‹tCRITICAL_NESTING_IN_TCB
 == 1 )

951 
pxNewTCB
->
uxCrôiˇlNe°ög
 = ( 
UBa£Ty≥_t
 ) 0U;

955 #i‡–
c⁄figUSE_APPLICATION_TASK_TAG
 == 1 )

957 
pxNewTCB
->
pxTaskTag
 = 
NULL
;

961 #i‡–
c⁄figGENERATE_RUN_TIME_STATS
 == 1 )

963 
pxNewTCB
->
ulRunTimeCou¡î
 = ( 
c⁄figRUN_TIME_COUNTER_TYPE
 ) 0;

967 #i‡–
p‹tUSING_MPU_WRAPPERS
 == 1 )

969 
	`vP‹tSt‹eTaskMPUSëtögs
–&–
pxNewTCB
->
xMPUSëtögs
 ), 
xRegi⁄s
,ÖxNewTCB->
pxSèck
, 
ulSèckDïth
 );

974 –Ë
xRegi⁄s
;

978 #i‡–
c⁄figNUM_THREAD_LOCAL_STORAGE_POINTERS
 != 0 )

980 
	`mem£t
––* ) &–
pxNewTCB
->
pvThªadLoˇlSt‹agePoöãrs
[ 0 ] ), 0x00, (ÖxNewTCB->pvThreadLocalStoragePointers ) );

984 #i‡–
c⁄figUSE_TASK_NOTIFICATIONS
 == 1 )

986 
	`mem£t
––* ) &–
pxNewTCB
->
ulNŸifõdVÆue
[ 0 ] ), 0x00, (ÖxNewTCB->ulNotifiedValue ) );

987 
	`mem£t
––* ) &–
pxNewTCB
->
ucNŸifySèã
[ 0 ] ), 0x00, (ÖxNewTCB->ucNotifyState ) );

991 #i‡–
c⁄figUSE_NEWLIB_REENTRANT
 == 1 )

996 
	`_REENT_INIT_PTR
––&–
pxNewTCB
->
xNewLib_ªít
 ) ) );

1000 #i‡–
INCLUDE_xTaskAb‹tDñay
 == 1 )

1002 
pxNewTCB
->
ucDñayAb‹ãd
 = 
pdFALSE
;

1010 #i‡–
p‹tUSING_MPU_WRAPPERS
 == 1 )

1015 #i‡–
p‹tHAS_STACK_OVERFLOW_CHECKING
 == 1 )

1017 #i‡–
p‹tSTACK_GROWTH
 < 0 )

1019 
pxNewTCB
->
pxT›OfSèck
 = 
	`pxP‹tInôüli£Sèck
–pxT›OfSèck,ÖxNewTCB->
pxSèck
, 
pxTaskCode
, 
pvP¨amëîs
, 
xRunPrivûeged
 );

1023 
pxNewTCB
->
pxT›OfSèck
 = 
	`pxP‹tInôüli£Sèck
–pxT›OfSèck,ÖxNewTCB->
pxEndOfSèck
, 
pxTaskCode
, 
pvP¨amëîs
, 
xRunPrivûeged
 );

1029 
pxNewTCB
->
pxT›OfSèck
 = 
	`pxP‹tInôüli£Sèck
–pxT›OfSèck, 
pxTaskCode
, 
pvP¨amëîs
, 
xRunPrivûeged
 );

1038 #i‡–
p‹tHAS_STACK_OVERFLOW_CHECKING
 == 1 )

1040 #i‡–
p‹tSTACK_GROWTH
 < 0 )

1042 
pxNewTCB
->
pxT›OfSèck
 = 
	`pxP‹tInôüli£Sèck
–pxT›OfSèck,ÖxNewTCB->
pxSèck
, 
pxTaskCode
, 
pvP¨amëîs
 );

1046 
pxNewTCB
->
pxT›OfSèck
 = 
	`pxP‹tInôüli£Sèck
–pxT›OfSèck,ÖxNewTCB->
pxEndOfSèck
, 
pxTaskCode
, 
pvP¨amëîs
 );

1052 
pxNewTCB
->
pxT›OfSèck
 = 
	`pxP‹tInôüli£Sèck
–pxT›OfSèck, 
pxTaskCode
, 
pvP¨amëîs
 );

1058 if–
pxCª©edTask
 !
NULL
 )

1062 *
pxCª©edTask
 = ( 
TaskH™dÀ_t
 ) 
pxNewTCB
;

1066 
	`mtCOVERAGE_TEST_MARKER
();

1068 
	}
}

1071 
	$¥vAddNewTaskToRódyLi°
–
TCB_t
 * 
pxNewTCB
 )

1075 
	`èskENTER_CRITICAL
();

1077 
uxCuºítNumbîOfTasks
++;

1079 if–
pxCuºítTCB
 =
NULL
 )

1083 
pxCuºítTCB
 = 
pxNewTCB
;

1085 if–
uxCuºítNumbîOfTasks
 =–
UBa£Ty≥_t
 ) 1 )

1090 
	`¥vInôüli£TaskLi°s
();

1094 
	`mtCOVERAGE_TEST_MARKER
();

1102 if–
xScheduÀrRu¬ög
 =
pdFALSE
 )

1104 if–
pxCuºítTCB
->
uxPri‹ôy
 <
pxNewTCB
->uxPriority )

1106 
pxCuºítTCB
 = 
pxNewTCB
;

1110 
	`mtCOVERAGE_TEST_MARKER
();

1115 
	`mtCOVERAGE_TEST_MARKER
();

1119 
uxTaskNumbî
++;

1121 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

1124 
pxNewTCB
->
uxTCBNumbî
 = 
uxTaskNumbî
;

1127 
	`åa˚TASK_CREATE
–
pxNewTCB
 );

1129 
	`¥vAddTaskToRódyLi°
–
pxNewTCB
 );

1131 
	`p‹tSETUP_TCB
–
pxNewTCB
 );

1133 
	`èskEXIT_CRITICAL
();

1135 if–
xScheduÀrRu¬ög
 !
pdFALSE
 )

1139 if–
pxCuºítTCB
->
uxPri‹ôy
 < 
pxNewTCB
->uxPriority )

1141 
	`èskYIELD_IF_USING_PREEMPTION
();

1145 
	`mtCOVERAGE_TEST_MARKER
();

1150 
	`mtCOVERAGE_TEST_MARKER
();

1152 
	}
}

1155 #i‡–
INCLUDE_vTaskDñëe
 == 1 )

1157 
	$vTaskDñëe
–
TaskH™dÀ_t
 
xTaskToDñëe
 )

1159 
TCB_t
 * 
pxTCB
;

1161 
	`èskENTER_CRITICAL
();

1165 
pxTCB
 = 
	`¥vGëTCBFromH™dÀ
–
xTaskToDñëe
 );

1168 if–
	`uxLi°Remove
–&–
pxTCB
->
xSèãLi°Iãm
 ) ) =–
UBa£Ty≥_t
 ) 0 )

1170 
	`èskRESET_READY_PRIORITY
–
pxTCB
->
uxPri‹ôy
 );

1174 
	`mtCOVERAGE_TEST_MARKER
();

1178 if–
	`li°LIST_ITEM_CONTAINER
–&–
pxTCB
->
xEvítLi°Iãm
 ) ) !
NULL
 )

1180 –Ë
	`uxLi°Remove
–&–
pxTCB
->
xEvítLi°Iãm
 ) );

1184 
	`mtCOVERAGE_TEST_MARKER
();

1191 
uxTaskNumbî
++;

1193 if–
pxTCB
 =
pxCuºítTCB
 )

1200 
	`vLi°In£πEnd
–&
xTasksWaôögTîmö©i⁄
, &–
pxTCB
->
xSèãLi°Iãm
 ) );

1205 ++
uxDñëedTasksWaôögCÀ™Up
;

1209 
	`åa˚TASK_DELETE
–
pxTCB
 );

1216 
	`p‹tPRE_TASK_DELETE_HOOK
–
pxTCB
, &
xYõldPídög
 );

1220 --
uxCuºítNumbîOfTasks
;

1221 
	`åa˚TASK_DELETE
–
pxTCB
 );

1225 
	`¥vRe£tNextTaskUnblockTime
();

1228 
	`èskEXIT_CRITICAL
();

1233 if–
pxTCB
 !
pxCuºítTCB
 )

1235 
	`¥vDñëeTCB
–
pxTCB
 );

1240 if–
xScheduÀrRu¬ög
 !
pdFALSE
 )

1242 if–
pxTCB
 =
pxCuºítTCB
 )

1244 
	`c⁄figASSERT
–
uxScheduÀrSu•íded
 == 0 );

1245 
	`p‹tYIELD_WITHIN_API
();

1249 
	`mtCOVERAGE_TEST_MARKER
();

1252 
	}
}

1257 #i‡–
INCLUDE_xTaskDñayU¡û
 == 1 )

1259 
Ba£Ty≥_t
 
	$xTaskDñayU¡û
–
TickTy≥_t
 * c⁄° 
pxPªviousWakeTime
,

1260 c⁄° 
TickTy≥_t
 
xTimeIn¸emít
 )

1262 
TickTy≥_t
 
xTimeToWake
;

1263 
Ba£Ty≥_t
 
xAÃódyYõlded
, 
xShouldDñay
 = 
pdFALSE
;

1265 
	`c⁄figASSERT
–
pxPªviousWakeTime
 );

1266 
	`c⁄figASSERT
––
xTimeIn¸emít
 > 0U ) );

1267 
	`c⁄figASSERT
–
uxScheduÀrSu•íded
 == 0 );

1269 
	`vTaskSu•ídAŒ
();

1273 c⁄° 
TickTy≥_t
 
xC⁄°TickCou¡
 = 
xTickCou¡
;

1276 
xTimeToWake
 = *
pxPªviousWakeTime
 + 
xTimeIn¸emít
;

1278 if–
xC⁄°TickCou¡
 < *
pxPªviousWakeTime
 )

1285 if––
xTimeToWake
 < *
pxPªviousWakeTime
 ) && ( xTimeToWakê> 
xC⁄°TickCou¡
 ) )

1287 
xShouldDñay
 = 
pdTRUE
;

1291 
	`mtCOVERAGE_TEST_MARKER
();

1299 if––
xTimeToWake
 < *
pxPªviousWakeTime
 ) || ( xTimeToWakê> 
xC⁄°TickCou¡
 ) )

1301 
xShouldDñay
 = 
pdTRUE
;

1305 
	`mtCOVERAGE_TEST_MARKER
();

1310 *
pxPªviousWakeTime
 = 
xTimeToWake
;

1312 if–
xShouldDñay
 !
pdFALSE
 )

1314 
	`åa˚TASK_DELAY_UNTIL
–
xTimeToWake
 );

1318 
	`¥vAddCuºítTaskToDñayedLi°
–
xTimeToWake
 - 
xC⁄°TickCou¡
, 
pdFALSE
 );

1322 
	`mtCOVERAGE_TEST_MARKER
();

1325 
xAÃódyYõlded
 = 
	`xTaskResumeAŒ
();

1329 if–
xAÃódyYõlded
 =
pdFALSE
 )

1331 
	`p‹tYIELD_WITHIN_API
();

1335 
	`mtCOVERAGE_TEST_MARKER
();

1338  
xShouldDñay
;

1339 
	}
}

1344 #i‡–
INCLUDE_vTaskDñay
 == 1 )

1346 
	$vTaskDñay
–c⁄° 
TickTy≥_t
 
xTicksToDñay
 )

1348 
Ba£Ty≥_t
 
xAÃódyYõlded
 = 
pdFALSE
;

1351 if–
xTicksToDñay
 > ( 
TickTy≥_t
 ) 0U )

1353 
	`c⁄figASSERT
–
uxScheduÀrSu•íded
 == 0 );

1354 
	`vTaskSu•ídAŒ
();

1356 
	`åa˚TASK_DELAY
();

1365 
	`¥vAddCuºítTaskToDñayedLi°
–
xTicksToDñay
, 
pdFALSE
 );

1367 
xAÃódyYõlded
 = 
	`xTaskResumeAŒ
();

1371 
	`mtCOVERAGE_TEST_MARKER
();

1376 if–
xAÃódyYõlded
 =
pdFALSE
 )

1378 
	`p‹tYIELD_WITHIN_API
();

1382 
	`mtCOVERAGE_TEST_MARKER
();

1384 
	}
}

1389 #i‡––
INCLUDE_eTaskGëSèã
 =1 ) || ( 
c⁄figUSE_TRACE_FACILITY
 =1 ) || ( 
INCLUDE_xTaskAb‹tDñay
 == 1 ) )

1391 
eTaskSèã
 
	$eTaskGëSèã
–
TaskH™dÀ_t
 
xTask
 )

1393 
eTaskSèã
 
eRëu∫
;

1394 
Li°_t
 c⁄° * 
pxSèãLi°
, * 
pxDñayedLi°
, * 
pxOvîÊowedDñayedLi°
;

1395 c⁄° 
TCB_t
 * c⁄° 
pxTCB
 = 
xTask
;

1397 
	`c⁄figASSERT
–
pxTCB
 );

1399 if–
pxTCB
 =
pxCuºítTCB
 )

1402 
eRëu∫
 = 
eRu¬ög
;

1406 
	`èskENTER_CRITICAL
();

1408 
pxSèãLi°
 = 
	`li°LIST_ITEM_CONTAINER
–&–
pxTCB
->
xSèãLi°Iãm
 ) );

1409 
pxDñayedLi°
 = 
pxDñayedTaskLi°
;

1410 
pxOvîÊowedDñayedLi°
 = 
pxOvîÊowDñayedTaskLi°
;

1412 
	`èskEXIT_CRITICAL
();

1414 if––
pxSèãLi°
 =
pxDñayedLi°
 ) || (ÖxSèãLi° =
pxOvîÊowedDñayedLi°
 ) )

1418 
eRëu∫
 = 
eBlocked
;

1421 #i‡–
INCLUDE_vTaskSu•íd
 == 1 )

1422 if–
pxSèãLi°
 =&
xSu•ídedTaskLi°
 )

1427 if–
	`li°LIST_ITEM_CONTAINER
–&–
pxTCB
->
xEvítLi°Iãm
 ) ) =
NULL
 )

1429 #i‡–
c⁄figUSE_TASK_NOTIFICATIONS
 == 1 )

1431 
Ba£Ty≥_t
 
x
;

1438 
eRëu∫
 = 
eSu•íded
;

1440  
x
 = 0; x < 
c⁄figTASK_NOTIFICATION_ARRAY_ENTRIES
; x++ )

1442 if–
pxTCB
->
ucNŸifySèã
[ 
x
 ] =
èskWAITING_NOTIFICATION
 )

1444 
eRëu∫
 = 
eBlocked
;

1451 
eRëu∫
 = 
eSu•íded
;

1457 
eRëu∫
 = 
eBlocked
;

1462 #i‡–
INCLUDE_vTaskDñëe
 == 1 )

1463 if––
pxSèãLi°
 =&
xTasksWaôögTîmö©i⁄
 ) || (ÖxSèãLi° =
NULL
 ) )

1468 
eRëu∫
 = 
eDñëed
;

1476 
eRëu∫
 = 
eRódy
;

1480  
eRëu∫
;

1481 
	}
}

1486 #i‡–
INCLUDE_uxTaskPri‹ôyGë
 == 1 )

1488 
UBa£Ty≥_t
 
	$uxTaskPri‹ôyGë
–c⁄° 
TaskH™dÀ_t
 
xTask
 )

1490 
TCB_t
 c⁄° * 
pxTCB
;

1491 
UBa£Ty≥_t
 
uxRëu∫
;

1493 
	`èskENTER_CRITICAL
();

1497 
pxTCB
 = 
	`¥vGëTCBFromH™dÀ
–
xTask
 );

1498 
uxRëu∫
 = 
pxTCB
->
uxPri‹ôy
;

1500 
	`èskEXIT_CRITICAL
();

1502  
uxRëu∫
;

1503 
	}
}

1508 #i‡–
INCLUDE_uxTaskPri‹ôyGë
 == 1 )

1510 
UBa£Ty≥_t
 
	$uxTaskPri‹ôyGëFromISR
–c⁄° 
TaskH™dÀ_t
 
xTask
 )

1512 
TCB_t
 c⁄° * 
pxTCB
;

1513 
UBa£Ty≥_t
 
uxRëu∫
, 
uxSavedI¡îru±Sèã
;

1531 
	`p‹tASSERT_IF_INTERRUPT_PRIORITY_INVALID
();

1533 
uxSavedI¡îru±Sèã
 = 
	`p‹tSET_INTERRUPT_MASK_FROM_ISR
();

1537 
pxTCB
 = 
	`¥vGëTCBFromH™dÀ
–
xTask
 );

1538 
uxRëu∫
 = 
pxTCB
->
uxPri‹ôy
;

1540 
	`p‹tCLEAR_INTERRUPT_MASK_FROM_ISR
–
uxSavedI¡îru±Sèã
 );

1542  
uxRëu∫
;

1543 
	}
}

1548 #i‡–
INCLUDE_vTaskPri‹ôySë
 == 1 )

1550 
	$vTaskPri‹ôySë
–
TaskH™dÀ_t
 
xTask
,

1551 
UBa£Ty≥_t
 
uxNewPri‹ôy
 )

1553 
TCB_t
 * 
pxTCB
;

1554 
UBa£Ty≥_t
 
uxCuºítBa£Pri‹ôy
, 
uxPri‹ôyU£dOnE¡ry
;

1555 
Ba£Ty≥_t
 
xYõldRequúed
 = 
pdFALSE
;

1557 
	`c⁄figASSERT
–
uxNewPri‹ôy
 < 
c⁄figMAX_PRIORITIES
 );

1560 if–
uxNewPri‹ôy
 >–
UBa£Ty≥_t
 ) 
c⁄figMAX_PRIORITIES
 )

1562 
uxNewPri‹ôy
 = ( 
UBa£Ty≥_t
 ) 
c⁄figMAX_PRIORITIES
 - ( UBaseType_t ) 1U;

1566 
	`mtCOVERAGE_TEST_MARKER
();

1569 
	`èskENTER_CRITICAL
();

1573 
pxTCB
 = 
	`¥vGëTCBFromH™dÀ
–
xTask
 );

1575 
	`åa˚TASK_PRIORITY_SET
–
pxTCB
, 
uxNewPri‹ôy
 );

1577 #i‡–
c⁄figUSE_MUTEXES
 == 1 )

1579 
uxCuºítBa£Pri‹ôy
 = 
pxTCB
->
uxBa£Pri‹ôy
;

1583 
uxCuºítBa£Pri‹ôy
 = 
pxTCB
->
uxPri‹ôy
;

1587 if–
uxCuºítBa£Pri‹ôy
 !
uxNewPri‹ôy
 )

1591 if–
uxNewPri‹ôy
 > 
uxCuºítBa£Pri‹ôy
 )

1593 if–
pxTCB
 !
pxCuºítTCB
 )

1598 if–
uxNewPri‹ôy
 >
pxCuºítTCB
->
uxPri‹ôy
 )

1600 
xYõldRequúed
 = 
pdTRUE
;

1604 
	`mtCOVERAGE_TEST_MARKER
();

1614 if–
pxTCB
 =
pxCuºítTCB
 )

1619 
xYõldRequúed
 = 
pdTRUE
;

1631 
uxPri‹ôyU£dOnE¡ry
 = 
pxTCB
->
uxPri‹ôy
;

1633 #i‡–
c⁄figUSE_MUTEXES
 == 1 )

1637 if–
pxTCB
->
uxBa£Pri‹ôy
 =pxTCB->
uxPri‹ôy
 )

1639 
pxTCB
->
uxPri‹ôy
 = 
uxNewPri‹ôy
;

1643 
	`mtCOVERAGE_TEST_MARKER
();

1647 
pxTCB
->
uxBa£Pri‹ôy
 = 
uxNewPri‹ôy
;

1651 
pxTCB
->
uxPri‹ôy
 = 
uxNewPri‹ôy
;

1657 if––
	`li°GET_LIST_ITEM_VALUE
–&–
pxTCB
->
xEvítLi°Iãm
 ) ) & 
èskEVENT_LIST_ITEM_VALUE_IN_USE
 ) == 0UL )

1659 
	`li°SET_LIST_ITEM_VALUE
–&–
pxTCB
->
xEvítLi°Iãm
 ), ( ( 
TickTy≥_t
 ) 
c⁄figMAX_PRIORITIES
 - ( TickTy≥_àË
uxNewPri‹ôy
 ) );

1663 
	`mtCOVERAGE_TEST_MARKER
();

1670 if–
	`li°IS_CONTAINED_WITHIN
–&–
pxRódyTasksLi°s
[ 
uxPri‹ôyU£dOnE¡ry
 ] ), &–
pxTCB
->
xSèãLi°Iãm
 ) ) !
pdFALSE
 )

1675 if–
	`uxLi°Remove
–&–
pxTCB
->
xSèãLi°Iãm
 ) ) =–
UBa£Ty≥_t
 ) 0 )

1680 
	`p‹tRESET_READY_PRIORITY
–
uxPri‹ôyU£dOnE¡ry
, 
uxT›RódyPri‹ôy
 );

1684 
	`mtCOVERAGE_TEST_MARKER
();

1687 
	`¥vAddTaskToRódyLi°
–
pxTCB
 );

1691 
	`mtCOVERAGE_TEST_MARKER
();

1694 if–
xYõldRequúed
 !
pdFALSE
 )

1696 
	`èskYIELD_IF_USING_PREEMPTION
();

1700 
	`mtCOVERAGE_TEST_MARKER
();

1705 –Ë
uxPri‹ôyU£dOnE¡ry
;

1708 
	`èskEXIT_CRITICAL
();

1709 
	}
}

1714 #i‡–
INCLUDE_vTaskSu•íd
 == 1 )

1716 
	$vTaskSu•íd
–
TaskH™dÀ_t
 
xTaskToSu•íd
 )

1718 
TCB_t
 * 
pxTCB
;

1720 
	`èskENTER_CRITICAL
();

1724 
pxTCB
 = 
	`¥vGëTCBFromH™dÀ
–
xTaskToSu•íd
 );

1726 
	`åa˚TASK_SUSPEND
–
pxTCB
 );

1730 if–
	`uxLi°Remove
–&–
pxTCB
->
xSèãLi°Iãm
 ) ) =–
UBa£Ty≥_t
 ) 0 )

1732 
	`èskRESET_READY_PRIORITY
–
pxTCB
->
uxPri‹ôy
 );

1736 
	`mtCOVERAGE_TEST_MARKER
();

1740 if–
	`li°LIST_ITEM_CONTAINER
–&–
pxTCB
->
xEvítLi°Iãm
 ) ) !
NULL
 )

1742 –Ë
	`uxLi°Remove
–&–
pxTCB
->
xEvítLi°Iãm
 ) );

1746 
	`mtCOVERAGE_TEST_MARKER
();

1749 
	`vLi°In£πEnd
–&
xSu•ídedTaskLi°
, &–
pxTCB
->
xSèãLi°Iãm
 ) );

1751 #i‡–
c⁄figUSE_TASK_NOTIFICATIONS
 == 1 )

1753 
Ba£Ty≥_t
 
x
;

1755  
x
 = 0; x < 
c⁄figTASK_NOTIFICATION_ARRAY_ENTRIES
; x++ )

1757 if–
pxTCB
->
ucNŸifySèã
[ 
x
 ] =
èskWAITING_NOTIFICATION
 )

1761 
pxTCB
->
ucNŸifySèã
[ 
x
 ] = 
èskNOT_WAITING_NOTIFICATION
;

1767 
	`èskEXIT_CRITICAL
();

1769 if–
xScheduÀrRu¬ög
 !
pdFALSE
 )

1773 
	`èskENTER_CRITICAL
();

1775 
	`¥vRe£tNextTaskUnblockTime
();

1777 
	`èskEXIT_CRITICAL
();

1781 
	`mtCOVERAGE_TEST_MARKER
();

1784 if–
pxTCB
 =
pxCuºítTCB
 )

1786 if–
xScheduÀrRu¬ög
 !
pdFALSE
 )

1789 
	`c⁄figASSERT
–
uxScheduÀrSu•íded
 == 0 );

1790 
	`p‹tYIELD_WITHIN_API
();

1797 if–
	`li°CURRENT_LIST_LENGTH
–&
xSu•ídedTaskLi°
 ) =
uxCuºítNumbîOfTasks
 )

1803 
pxCuºítTCB
 = 
NULL
;

1807 
	`vTaskSwôchC⁄ãxt
();

1813 
	`mtCOVERAGE_TEST_MARKER
();

1815 
	}
}

1820 #i‡–
INCLUDE_vTaskSu•íd
 == 1 )

1822 
Ba£Ty≥_t
 
	$¥vTaskIsTaskSu•íded
–c⁄° 
TaskH™dÀ_t
 
xTask
 )

1824 
Ba£Ty≥_t
 
xRëu∫
 = 
pdFALSE
;

1825 c⁄° 
TCB_t
 * c⁄° 
pxTCB
 = 
xTask
;

1831 
	`c⁄figASSERT
–
xTask
 );

1834 if–
	`li°IS_CONTAINED_WITHIN
–&
xSu•ídedTaskLi°
, &–
pxTCB
->
xSèãLi°Iãm
 ) ) !
pdFALSE
 )

1837 if–
	`li°IS_CONTAINED_WITHIN
–&
xPídögRódyLi°
, &–
pxTCB
->
xEvítLi°Iãm
 ) ) =
pdFALSE
 )

1841 if–
	`li°IS_CONTAINED_WITHIN
–
NULL
, &–
pxTCB
->
xEvítLi°Iãm
 ) ) !
pdFALSE
 )

1843 
xRëu∫
 = 
pdTRUE
;

1847 
	`mtCOVERAGE_TEST_MARKER
();

1852 
	`mtCOVERAGE_TEST_MARKER
();

1857 
	`mtCOVERAGE_TEST_MARKER
();

1860  
xRëu∫
;

1861 
	}
}

1866 #i‡–
INCLUDE_vTaskSu•íd
 == 1 )

1868 
	$vTaskResume
–
TaskH™dÀ_t
 
xTaskToResume
 )

1870 
TCB_t
 * c⁄° 
pxTCB
 = 
xTaskToResume
;

1873 
	`c⁄figASSERT
–
xTaskToResume
 );

1877 if––
pxTCB
 !
pxCuºítTCB
 ) && (ÖxTCB !
NULL
 ) )

1879 
	`èskENTER_CRITICAL
();

1881 if–
	`¥vTaskIsTaskSu•íded
–
pxTCB
 ) !
pdFALSE
 )

1883 
	`åa˚TASK_RESUME
–
pxTCB
 );

1887 –Ë
	`uxLi°Remove
–&–
pxTCB
->
xSèãLi°Iãm
 ) );

1888 
	`¥vAddTaskToRódyLi°
–
pxTCB
 );

1891 if–
pxTCB
->
uxPri‹ôy
 >
pxCuºítTCB
->uxPriority )

1896 
	`èskYIELD_IF_USING_PREEMPTION
();

1900 
	`mtCOVERAGE_TEST_MARKER
();

1905 
	`mtCOVERAGE_TEST_MARKER
();

1908 
	`èskEXIT_CRITICAL
();

1912 
	`mtCOVERAGE_TEST_MARKER
();

1914 
	}
}

1920 #i‡––
INCLUDE_xTaskResumeFromISR
 =1 ) && ( 
INCLUDE_vTaskSu•íd
 == 1 ) )

1922 
Ba£Ty≥_t
 
	$xTaskResumeFromISR
–
TaskH™dÀ_t
 
xTaskToResume
 )

1924 
Ba£Ty≥_t
 
xYõldRequúed
 = 
pdFALSE
;

1925 
TCB_t
 * c⁄° 
pxTCB
 = 
xTaskToResume
;

1926 
UBa£Ty≥_t
 
uxSavedI¡îru±Sètus
;

1928 
	`c⁄figASSERT
–
xTaskToResume
 );

1946 
	`p‹tASSERT_IF_INTERRUPT_PRIORITY_INVALID
();

1948 
uxSavedI¡îru±Sètus
 = 
	`p‹tSET_INTERRUPT_MASK_FROM_ISR
();

1950 if–
	`¥vTaskIsTaskSu•íded
–
pxTCB
 ) !
pdFALSE
 )

1952 
	`åa˚TASK_RESUME_FROM_ISR
–
pxTCB
 );

1955 if–
uxScheduÀrSu•íded
 =–
UBa£Ty≥_t
 ) 
pdFALSE
 )

1959 if–
pxTCB
->
uxPri‹ôy
 >
pxCuºítTCB
->uxPriority )

1961 
xYõldRequúed
 = 
pdTRUE
;

1966 
xYõldPídög
 = 
pdTRUE
;

1970 
	`mtCOVERAGE_TEST_MARKER
();

1973 –Ë
	`uxLi°Remove
–&–
pxTCB
->
xSèãLi°Iãm
 ) );

1974 
	`¥vAddTaskToRódyLi°
–
pxTCB
 );

1981 
	`vLi°In£πEnd
–&–
xPídögRódyLi°
 ), &–
pxTCB
->
xEvítLi°Iãm
 ) );

1986 
	`mtCOVERAGE_TEST_MARKER
();

1989 
	`p‹tCLEAR_INTERRUPT_MASK_FROM_ISR
–
uxSavedI¡îru±Sètus
 );

1991  
xYõldRequúed
;

1992 
	}
}

1997 
	$vTaskSèπScheduÀr
( )

1999 
Ba£Ty≥_t
 
xRëu∫
;

2002 #i‡–
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 )

2004 
SèticTask_t
 * 
pxIdÀTaskTCBBuf„r
 = 
NULL
;

2005 
SèckTy≥_t
 * 
pxIdÀTaskSèckBuf„r
 = 
NULL
;

2006 
uöt32_t
 
ulIdÀTaskSèckSize
;

2010 
	`vAµliˇti⁄GëIdÀTaskMem‹y
–&
pxIdÀTaskTCBBuf„r
, &
pxIdÀTaskSèckBuf„r
, &
ulIdÀTaskSèckSize
 );

2011 
xIdÀTaskH™dÀ
 = 
	`xTaskCª©eSètic
–
¥vIdÀTask
,

2012 
c⁄figIDLE_TASK_NAME
,

2013 
ulIdÀTaskSèckSize
,

2014 –* ) 
NULL
,

2015 
p‹tPRIVILEGE_BIT
,

2016 
pxIdÀTaskSèckBuf„r
,

2017 
pxIdÀTaskTCBBuf„r
 );

2019 if–
xIdÀTaskH™dÀ
 !
NULL
 )

2021 
xRëu∫
 = 
pdPASS
;

2025 
xRëu∫
 = 
pdFAIL
;

2031 
xRëu∫
 = 
	`xTaskCª©e
–
¥vIdÀTask
,

2032 
c⁄figIDLE_TASK_NAME
,

2033 
c⁄figMINIMAL_STACK_SIZE
,

2034 –* ) 
NULL
,

2035 
p‹tPRIVILEGE_BIT
,

2036 &
xIdÀTaskH™dÀ
 );

2040 #i‡–
c⁄figUSE_TIMERS
 == 1 )

2042 if–
xRëu∫
 =
pdPASS
 )

2044 
xRëu∫
 = 
	`xTimîCª©eTimîTask
();

2048 
	`mtCOVERAGE_TEST_MARKER
();

2053 if–
xRëu∫
 =
pdPASS
 )

2058 #ifde‡
FREERTOS_TASKS_C_ADDITIONS_INIT


2060 
	`‰ìπos_èsks_c_addôi⁄s_öô
();

2069 
	`p‹tDISABLE_INTERRUPTS
();

2071 #i‡–
c⁄figUSE_NEWLIB_REENTRANT
 == 1 )

2077 
_impuª_±r
 = &–
pxCuºítTCB
->
xNewLib_ªít
 );

2081 
xNextTaskUnblockTime
 = 
p‹tMAX_DELAY
;

2082 
xScheduÀrRu¬ög
 = 
pdTRUE
;

2083 
xTickCou¡
 = ( 
TickTy≥_t
 ) 
c⁄figINITIAL_TICK_COUNT
;

2091 
	`p‹tCONFIGURE_TIMER_FOR_RUN_TIME_STATS
();

2093 
	`åa˚TASK_SWITCHED_IN
();

2097 if–
	`xP‹tSèπScheduÀr
(Ë!
pdFALSE
 )

2112 
	`c⁄figASSERT
–
xRëu∫
 !
îrCOULD_NOT_ALLOCATE_REQUIRED_MEMORY
 );

2117 –Ë
xIdÀTaskH™dÀ
;

2121 –Ë
uxT›U£dPri‹ôy
;

2122 
	}
}

2125 
	$vTaskEndScheduÀr
( )

2130 
	`p‹tDISABLE_INTERRUPTS
();

2131 
xScheduÀrRu¬ög
 = 
pdFALSE
;

2132 
	`vP‹tEndScheduÀr
();

2133 
	}
}

2136 
	$vTaskSu•ídAŒ
( )

2145 
	`p‹tSOFTWARE_BARRIER
();

2149 ++
uxScheduÀrSu•íded
;

2153 
	`p‹tMEMORY_BARRIER
();

2154 
	}
}

2157 #i‡–
c⁄figUSE_TICKLESS_IDLE
 != 0 )

2159 
TickTy≥_t
 
	$¥vGëEx≥˘edIdÀTime
( )

2161 
TickTy≥_t
 
xRëu∫
;

2162 
UBa£Ty≥_t
 
uxHighîPri‹ôyRódyTasks
 = 
pdFALSE
;

2168 #i‡–
c⁄figUSE_PORT_OPTIMISED_TASK_SELECTION
 == 0 )

2170 if–
uxT›RódyPri‹ôy
 > 
tskIDLE_PRIORITY
 )

2172 
uxHighîPri‹ôyRódyTasks
 = 
pdTRUE
;

2177 c⁄° 
UBa£Ty≥_t
 
uxLó°Signifiˇ¡Bô
 = ( UBaseType_t ) 0x01;

2184 if–
uxT›RódyPri‹ôy
 > 
uxLó°Signifiˇ¡Bô
 )

2186 
uxHighîPri‹ôyRódyTasks
 = 
pdTRUE
;

2191 if–
pxCuºítTCB
->
uxPri‹ôy
 > 
tskIDLE_PRIORITY
 )

2193 
xRëu∫
 = 0;

2195 if–
	`li°CURRENT_LIST_LENGTH
–&–
pxRódyTasksLi°s
[ 
tskIDLE_PRIORITY
 ] ) ) > 1 )

2200 
xRëu∫
 = 0;

2202 if–
uxHighîPri‹ôyRódyTasks
 !
pdFALSE
 )

2207 
xRëu∫
 = 0;

2211 
xRëu∫
 = 
xNextTaskUnblockTime
 - 
xTickCou¡
;

2214  
xRëu∫
;

2215 
	}
}

2220 
Ba£Ty≥_t
 
	$xTaskResumeAŒ
( )

2222 
TCB_t
 * 
pxTCB
 = 
NULL
;

2223 
Ba£Ty≥_t
 
xAÃódyYõlded
 = 
pdFALSE
;

2227 
	`c⁄figASSERT
–
uxScheduÀrSu•íded
 );

2234 
	`èskENTER_CRITICAL
();

2236 --
uxScheduÀrSu•íded
;

2238 if–
uxScheduÀrSu•íded
 =–
UBa£Ty≥_t
 ) 
pdFALSE
 )

2240 if–
uxCuºítNumbîOfTasks
 > ( 
UBa£Ty≥_t
 ) 0U )

2244  
	`li°LIST_IS_EMPTY
–&
xPídögRódyLi°
 ) =
pdFALSE
 )

2246 
pxTCB
 = 
	`li°GET_OWNER_OF_HEAD_ENTRY
––&
xPídögRódyLi°
 ) );

2247 
	`li°REMOVE_ITEM
–&–
pxTCB
->
xEvítLi°Iãm
 ) );

2248 
	`p‹tMEMORY_BARRIER
();

2249 
	`li°REMOVE_ITEM
–&–
pxTCB
->
xSèãLi°Iãm
 ) );

2250 
	`¥vAddTaskToRódyLi°
–
pxTCB
 );

2254 if–
pxTCB
->
uxPri‹ôy
 >
pxCuºítTCB
->uxPriority )

2256 
xYõldPídög
 = 
pdTRUE
;

2260 
	`mtCOVERAGE_TEST_MARKER
();

2264 if–
pxTCB
 !
NULL
 )

2272 
	`¥vRe£tNextTaskUnblockTime
();

2280 
TickTy≥_t
 
xPídedCou¡s
 = 
xPídedTicks
;

2282 if–
xPídedCou¡s
 > ( 
TickTy≥_t
 ) 0U )

2286 if–
	`xTaskIn¸emítTick
(Ë!
pdFALSE
 )

2288 
xYõldPídög
 = 
pdTRUE
;

2292 
	`mtCOVERAGE_TEST_MARKER
();

2295 --
xPídedCou¡s
;

2296 }  
xPídedCou¡s
 > ( 
TickTy≥_t
 ) 0U );

2298 
xPídedTicks
 = 0;

2302 
	`mtCOVERAGE_TEST_MARKER
();

2306 if–
xYõldPídög
 !
pdFALSE
 )

2308 #i‡–
c⁄figUSE_PREEMPTION
 != 0 )

2310 
xAÃódyYõlded
 = 
pdTRUE
;

2313 
	`èskYIELD_IF_USING_PREEMPTION
();

2317 
	`mtCOVERAGE_TEST_MARKER
();

2323 
	`mtCOVERAGE_TEST_MARKER
();

2326 
	`èskEXIT_CRITICAL
();

2328  
xAÃódyYõlded
;

2329 
	}
}

2332 
TickTy≥_t
 
	$xTaskGëTickCou¡
( )

2334 
TickTy≥_t
 
xTicks
;

2337 
	`p‹tTICK_TYPE_ENTER_CRITICAL
();

2339 
xTicks
 = 
xTickCou¡
;

2341 
	`p‹tTICK_TYPE_EXIT_CRITICAL
();

2343  
xTicks
;

2344 
	}
}

2347 
TickTy≥_t
 
	$xTaskGëTickCou¡FromISR
( )

2349 
TickTy≥_t
 
xRëu∫
;

2350 
UBa£Ty≥_t
 
uxSavedI¡îru±Sètus
;

2366 
	`p‹tASSERT_IF_INTERRUPT_PRIORITY_INVALID
();

2368 
uxSavedI¡îru±Sètus
 = 
	`p‹tTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR
();

2370 
xRëu∫
 = 
xTickCou¡
;

2372 
	`p‹tTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR
–
uxSavedI¡îru±Sètus
 );

2374  
xRëu∫
;

2375 
	}
}

2378 
UBa£Ty≥_t
 
	$uxTaskGëNumbîOfTasks
( )

2382  
uxCuºítNumbîOfTasks
;

2383 
	}
}

2386 * 
	$pcTaskGëName
–
TaskH™dÀ_t
 
xTaskToQuîy
 )

2388 
TCB_t
 * 
pxTCB
;

2392 
pxTCB
 = 
	`¥vGëTCBFromH™dÀ
–
xTaskToQuîy
 );

2393 
	`c⁄figASSERT
–
pxTCB
 );

2394  &–
pxTCB
->
pcTaskName
[ 0 ] );

2395 
	}
}

2398 #i‡–
INCLUDE_xTaskGëH™dÀ
 == 1 )

2400 
TCB_t
 * 
	$¥vSórchF‹NameWôhöSögÀLi°
–
Li°_t
 * 
pxLi°
,

2401 c⁄° 
pcNameToQuîy
[] )

2403 
TCB_t
 * 
pxNextTCB
, * 
pxFú°TCB
, * 
pxRëu∫
 = 
NULL
;

2404 
UBa£Ty≥_t
 
x
;

2405 
cNextCh¨
;

2406 
Ba£Ty≥_t
 
xBªakLo›
;

2410 if–
	`li°CURRENT_LIST_LENGTH
–
pxLi°
 ) > ( 
UBa£Ty≥_t
 ) 0 )

2412 
	`li°GET_OWNER_OF_NEXT_ENTRY
–
pxFú°TCB
, 
pxLi°
 );

2416 
	`li°GET_OWNER_OF_NEXT_ENTRY
–
pxNextTCB
, 
pxLi°
 );

2420 
xBªakLo›
 = 
pdFALSE
;

2422  
x
 = ( 
UBa£Ty≥_t
 ) 0; x < ( UBa£Ty≥_àË
c⁄figMAX_TASK_NAME_LEN
; x++ )

2424 
cNextCh¨
 = 
pxNextTCB
->
pcTaskName
[ 
x
 ];

2426 if–
cNextCh¨
 !
pcNameToQuîy
[ 
x
 ] )

2429 
xBªakLo›
 = 
pdTRUE
;

2431 if–
cNextCh¨
 == ( ) 0x00 )

2435 
pxRëu∫
 = 
pxNextTCB
;

2436 
xBªakLo›
 = 
pdTRUE
;

2440 
	`mtCOVERAGE_TEST_MARKER
();

2443 if–
xBªakLo›
 !
pdFALSE
 )

2449 if–
pxRëu∫
 !
NULL
 )

2454 }  
pxNextTCB
 !
pxFú°TCB
 );

2458 
	`mtCOVERAGE_TEST_MARKER
();

2461  
pxRëu∫
;

2462 
	}
}

2467 #i‡–
INCLUDE_xTaskGëH™dÀ
 == 1 )

2469 
TaskH™dÀ_t
 
	$xTaskGëH™dÀ
–c⁄° * 
pcNameToQuîy
 )

2471 
UBa£Ty≥_t
 
uxQueue
 = 
c⁄figMAX_PRIORITIES
;

2472 
TCB_t
 * 
pxTCB
;

2475 
	`c⁄figASSERT
–
	`°æí
–
pcNameToQuîy
 ) < 
c⁄figMAX_TASK_NAME_LEN
 );

2477 
	`vTaskSu•ídAŒ
();

2482 
uxQueue
--;

2483 
pxTCB
 = 
	`¥vSórchF‹NameWôhöSögÀLi°
––
Li°_t
 * ) &–
pxRódyTasksLi°s
[ 
uxQueue
 ] ), 
pcNameToQuîy
 );

2485 if–
pxTCB
 !
NULL
 )

2490 }  
uxQueue
 > ( 
UBa£Ty≥_t
 ) 
tskIDLE_PRIORITY
 );

2493 if–
pxTCB
 =
NULL
 )

2495 
pxTCB
 = 
	`¥vSórchF‹NameWôhöSögÀLi°
––
Li°_t
 * ) 
pxDñayedTaskLi°
, 
pcNameToQuîy
 );

2498 if–
pxTCB
 =
NULL
 )

2500 
pxTCB
 = 
	`¥vSórchF‹NameWôhöSögÀLi°
––
Li°_t
 * ) 
pxOvîÊowDñayedTaskLi°
, 
pcNameToQuîy
 );

2503 #i‡–
INCLUDE_vTaskSu•íd
 == 1 )

2505 if–
pxTCB
 =
NULL
 )

2508 
pxTCB
 = 
	`¥vSórchF‹NameWôhöSögÀLi°
–&
xSu•ídedTaskLi°
, 
pcNameToQuîy
 );

2513 #i‡–
INCLUDE_vTaskDñëe
 == 1 )

2515 if–
pxTCB
 =
NULL
 )

2518 
pxTCB
 = 
	`¥vSórchF‹NameWôhöSögÀLi°
–&
xTasksWaôögTîmö©i⁄
, 
pcNameToQuîy
 );

2523 –Ë
	`xTaskResumeAŒ
();

2525  
pxTCB
;

2526 
	}
}

2531 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

2533 
UBa£Ty≥_t
 
	$uxTaskGëSy°emSèã
–
TaskSètus_t
 * c⁄° 
pxTaskSètusAºay
,

2534 c⁄° 
UBa£Ty≥_t
 
uxAºaySize
,

2535 
c⁄figRUN_TIME_COUNTER_TYPE
 * c⁄° 
pulTŸÆRunTime
 )

2537 
UBa£Ty≥_t
 
uxTask
 = 0, 
uxQueue
 = 
c⁄figMAX_PRIORITIES
;

2539 
	`vTaskSu•ídAŒ
();

2542 if–
uxAºaySize
 >
uxCuºítNumbîOfTasks
 )

2548 
uxQueue
--;

2549 
uxTask
 +
	`¥vLi°TasksWôhöSögÀLi°
–&–
pxTaskSètusAºay
[ uxTask ] ), &–
pxRódyTasksLi°s
[ 
uxQueue
 ] ), 
eRódy
 );

2550 }  
uxQueue
 > ( 
UBa£Ty≥_t
 ) 
tskIDLE_PRIORITY
 );

2554 
uxTask
 +
	`¥vLi°TasksWôhöSögÀLi°
–&–
pxTaskSètusAºay
[ uxTask ] ), ( 
Li°_t
 * ) 
pxDñayedTaskLi°
, 
eBlocked
 );

2555 
uxTask
 +
	`¥vLi°TasksWôhöSögÀLi°
–&–
pxTaskSètusAºay
[ uxTask ] ), ( 
Li°_t
 * ) 
pxOvîÊowDñayedTaskLi°
, 
eBlocked
 );

2557 #i‡–
INCLUDE_vTaskDñëe
 == 1 )

2561 
uxTask
 +
	`¥vLi°TasksWôhöSögÀLi°
–&–
pxTaskSètusAºay
[ uxTask ] ), &
xTasksWaôögTîmö©i⁄
, 
eDñëed
 );

2565 #i‡–
INCLUDE_vTaskSu•íd
 == 1 )

2569 
uxTask
 +
	`¥vLi°TasksWôhöSögÀLi°
–&–
pxTaskSètusAºay
[ uxTask ] ), &
xSu•ídedTaskLi°
, 
eSu•íded
 );

2573 #i‡–
c⁄figGENERATE_RUN_TIME_STATS
 == 1 )

2575 if–
pulTŸÆRunTime
 !
NULL
 )

2577 #ifde‡
p‹tALT_GET_RUN_TIME_COUNTER_VALUE


2578 
	`p‹tALT_GET_RUN_TIME_COUNTER_VALUE
––*
pulTŸÆRunTime
 ) );

2580 *
pulTŸÆRunTime
 = 
	`p‹tGET_RUN_TIME_COUNTER_VALUE
();

2586 if–
pulTŸÆRunTime
 !
NULL
 )

2588 *
pulTŸÆRunTime
 = 0;

2595 
	`mtCOVERAGE_TEST_MARKER
();

2598 –Ë
	`xTaskResumeAŒ
();

2600  
uxTask
;

2601 
	}
}

2606 #i‡–
INCLUDE_xTaskGëIdÀTaskH™dÀ
 == 1 )

2608 
TaskH™dÀ_t
 
	$xTaskGëIdÀTaskH™dÀ
( )

2612 
	`c⁄figASSERT
––
xIdÀTaskH™dÀ
 !
NULL
 ) );

2613  
xIdÀTaskH™dÀ
;

2614 
	}
}

2623 #i‡–
c⁄figUSE_TICKLESS_IDLE
 != 0 )

2625 
	$vTaskSãpTick
–c⁄° 
TickTy≥_t
 
xTicksToJump
 )

2630 
	`c⁄figASSERT
––
xTickCou¡
 + 
xTicksToJump
 ) <
xNextTaskUnblockTime
 );

2631 
xTickCou¡
 +
xTicksToJump
;

2632 
	`åa˚INCREASE_TICK_COUNT
–
xTicksToJump
 );

2633 
	}
}

2638 
Ba£Ty≥_t
 
	$xTaskC©chUpTicks
–
TickTy≥_t
 
xTicksToC©chUp
 )

2640 
Ba£Ty≥_t
 
xYõldOccuºed
;

2644 
	`c⁄figASSERT
–
uxScheduÀrSu•íded
 == 0 );

2648 
	`vTaskSu•ídAŒ
();

2649 
xPídedTicks
 +
xTicksToC©chUp
;

2650 
xYõldOccuºed
 = 
	`xTaskResumeAŒ
();

2652  
xYõldOccuºed
;

2653 
	}
}

2656 #i‡–
INCLUDE_xTaskAb‹tDñay
 == 1 )

2658 
Ba£Ty≥_t
 
	$xTaskAb‹tDñay
–
TaskH™dÀ_t
 
xTask
 )

2660 
TCB_t
 * 
pxTCB
 = 
xTask
;

2661 
Ba£Ty≥_t
 
xRëu∫
;

2663 
	`c⁄figASSERT
–
pxTCB
 );

2665 
	`vTaskSu•ídAŒ
();

2669 if–
	`eTaskGëSèã
–
xTask
 ) =
eBlocked
 )

2671 
xRëu∫
 = 
pdPASS
;

2676 –Ë
	`uxLi°Remove
–&–
pxTCB
->
xSèãLi°Iãm
 ) );

2682 
	`èskENTER_CRITICAL
();

2684 if–
	`li°LIST_ITEM_CONTAINER
–&–
pxTCB
->
xEvítLi°Iãm
 ) ) !
NULL
 )

2686 –Ë
	`uxLi°Remove
–&–
pxTCB
->
xEvítLi°Iãm
 ) );

2691 
pxTCB
->
ucDñayAb‹ãd
 = 
pdTRUE
;

2695 
	`mtCOVERAGE_TEST_MARKER
();

2698 
	`èskEXIT_CRITICAL
();

2701 
	`¥vAddTaskToRódyLi°
–
pxTCB
 );

2705 #i‡–
c⁄figUSE_PREEMPTION
 == 1 )

2710 if–
pxTCB
->
uxPri‹ôy
 > 
pxCuºítTCB
->uxPriority )

2714 
xYõldPídög
 = 
pdTRUE
;

2718 
	`mtCOVERAGE_TEST_MARKER
();

2725 
xRëu∫
 = 
pdFAIL
;

2728 –Ë
	`xTaskResumeAŒ
();

2730  
xRëu∫
;

2731 
	}
}

2736 
Ba£Ty≥_t
 
	$xTaskIn¸emítTick
( )

2738 
TCB_t
 * 
pxTCB
;

2739 
TickTy≥_t
 
xIãmVÆue
;

2740 
Ba£Ty≥_t
 
xSwôchRequúed
 = 
pdFALSE
;

2745 
	`åa˚TASK_INCREMENT_TICK
–
xTickCou¡
 );

2747 if–
uxScheduÀrSu•íded
 =–
UBa£Ty≥_t
 ) 
pdFALSE
 )

2751 c⁄° 
TickTy≥_t
 
xC⁄°TickCou¡
 = 
xTickCou¡
 + ( TickType_t ) 1;

2755 
xTickCou¡
 = 
xC⁄°TickCou¡
;

2757 if–
xC⁄°TickCou¡
 =–
TickTy≥_t
 ) 0U )

2759 
	`èskSWITCH_DELAYED_LISTS
();

2763 
	`mtCOVERAGE_TEST_MARKER
();

2770 if–
xC⁄°TickCou¡
 >
xNextTaskUnblockTime
 )

2774 if–
	`li°LIST_IS_EMPTY
–
pxDñayedTaskLi°
 ) !
pdFALSE
 )

2781 
xNextTaskUnblockTime
 = 
p‹tMAX_DELAY
;

2790 
pxTCB
 = 
	`li°GET_OWNER_OF_HEAD_ENTRY
–
pxDñayedTaskLi°
 );

2791 
xIãmVÆue
 = 
	`li°GET_LIST_ITEM_VALUE
–&–
pxTCB
->
xSèãLi°Iãm
 ) );

2793 if–
xC⁄°TickCou¡
 < 
xIãmVÆue
 )

2800 
xNextTaskUnblockTime
 = 
xIãmVÆue
;

2805 
	`mtCOVERAGE_TEST_MARKER
();

2809 
	`li°REMOVE_ITEM
–&–
pxTCB
->
xSèãLi°Iãm
 ) );

2813 if–
	`li°LIST_ITEM_CONTAINER
–&–
pxTCB
->
xEvítLi°Iãm
 ) ) !
NULL
 )

2815 
	`li°REMOVE_ITEM
–&–
pxTCB
->
xEvítLi°Iãm
 ) );

2819 
	`mtCOVERAGE_TEST_MARKER
();

2824 
	`¥vAddTaskToRódyLi°
–
pxTCB
 );

2828 #i‡–
c⁄figUSE_PREEMPTION
 == 1 )

2834 if–
pxTCB
->
uxPri‹ôy
 >
pxCuºítTCB
->uxPriority )

2836 
xSwôchRequúed
 = 
pdTRUE
;

2840 
	`mtCOVERAGE_TEST_MARKER
();

2851 #i‡––
c⁄figUSE_PREEMPTION
 =1 ) && ( 
c⁄figUSE_TIME_SLICING
 == 1 ) )

2853 if–
	`li°CURRENT_LIST_LENGTH
–&–
pxRódyTasksLi°s
[ 
pxCuºítTCB
->
uxPri‹ôy
 ] ) ) > ( 
UBa£Ty≥_t
 ) 1 )

2855 
xSwôchRequúed
 = 
pdTRUE
;

2859 
	`mtCOVERAGE_TEST_MARKER
();

2864 #i‡–
c⁄figUSE_TICK_HOOK
 == 1 )

2868 if–
xPídedTicks
 =–
TickTy≥_t
 ) 0 )

2870 
	`vAµliˇti⁄TickHook
();

2874 
	`mtCOVERAGE_TEST_MARKER
();

2879 #i‡–
c⁄figUSE_PREEMPTION
 == 1 )

2881 if–
xYõldPídög
 !
pdFALSE
 )

2883 
xSwôchRequúed
 = 
pdTRUE
;

2887 
	`mtCOVERAGE_TEST_MARKER
();

2894 ++
xPídedTicks
;

2898 #i‡–
c⁄figUSE_TICK_HOOK
 == 1 )

2900 
	`vAµliˇti⁄TickHook
();

2905  
xSwôchRequúed
;

2906 
	}
}

2909 #i‡–
c⁄figUSE_APPLICATION_TASK_TAG
 == 1 )

2911 
	$vTaskSëAµliˇti⁄TaskTag
–
TaskH™dÀ_t
 
xTask
,

2912 
TaskHookFun˘i⁄_t
 
pxHookFun˘i⁄
 )

2914 
TCB_t
 * 
xTCB
;

2918 if–
xTask
 =
NULL
 )

2920 
xTCB
 = ( 
TCB_t
 * ) 
pxCuºítTCB
;

2924 
xTCB
 = 
xTask
;

2929 
	`èskENTER_CRITICAL
();

2931 
xTCB
->
pxTaskTag
 = 
pxHookFun˘i⁄
;

2933 
	`èskEXIT_CRITICAL
();

2934 
	}
}

2939 #i‡–
c⁄figUSE_APPLICATION_TASK_TAG
 == 1 )

2941 
TaskHookFun˘i⁄_t
 
	$xTaskGëAµliˇti⁄TaskTag
–
TaskH™dÀ_t
 
xTask
 )

2943 
TCB_t
 * 
pxTCB
;

2944 
TaskHookFun˘i⁄_t
 
xRëu∫
;

2947 
pxTCB
 = 
	`¥vGëTCBFromH™dÀ
–
xTask
 );

2951 
	`èskENTER_CRITICAL
();

2953 
xRëu∫
 = 
pxTCB
->
pxTaskTag
;

2955 
	`èskEXIT_CRITICAL
();

2957  
xRëu∫
;

2958 
	}
}

2963 #i‡–
c⁄figUSE_APPLICATION_TASK_TAG
 == 1 )

2965 
TaskHookFun˘i⁄_t
 
	$xTaskGëAµliˇti⁄TaskTagFromISR
–
TaskH™dÀ_t
 
xTask
 )

2967 
TCB_t
 * 
pxTCB
;

2968 
TaskHookFun˘i⁄_t
 
xRëu∫
;

2969 
UBa£Ty≥_t
 
uxSavedI¡îru±Sètus
;

2972 
pxTCB
 = 
	`¥vGëTCBFromH™dÀ
–
xTask
 );

2976 
uxSavedI¡îru±Sètus
 = 
	`p‹tSET_INTERRUPT_MASK_FROM_ISR
();

2978 
xRëu∫
 = 
pxTCB
->
pxTaskTag
;

2980 
	`p‹tCLEAR_INTERRUPT_MASK_FROM_ISR
–
uxSavedI¡îru±Sètus
 );

2982  
xRëu∫
;

2983 
	}
}

2988 #i‡–
c⁄figUSE_APPLICATION_TASK_TAG
 == 1 )

2990 
Ba£Ty≥_t
 
	$xTaskCÆlAµliˇti⁄TaskHook
–
TaskH™dÀ_t
 
xTask
,

2991 * 
pvP¨amëî
 )

2993 
TCB_t
 * 
xTCB
;

2994 
Ba£Ty≥_t
 
xRëu∫
;

2997 if–
xTask
 =
NULL
 )

2999 
xTCB
 = 
pxCuºítTCB
;

3003 
xTCB
 = 
xTask
;

3006 if–
xTCB
->
pxTaskTag
 !
NULL
 )

3008 
xRëu∫
 = 
xTCB
->
	`pxTaskTag
–
pvP¨amëî
 );

3012 
xRëu∫
 = 
pdFAIL
;

3015  
xRëu∫
;

3016 
	}
}

3021 
	$vTaskSwôchC⁄ãxt
( )

3023 if–
uxScheduÀrSu•íded
 !–
UBa£Ty≥_t
 ) 
pdFALSE
 )

3027 
xYõldPídög
 = 
pdTRUE
;

3031 
xYõldPídög
 = 
pdFALSE
;

3032 
	`åa˚TASK_SWITCHED_OUT
();

3034 #i‡–
c⁄figGENERATE_RUN_TIME_STATS
 == 1 )

3036 #ifde‡
p‹tALT_GET_RUN_TIME_COUNTER_VALUE


3037 
	`p‹tALT_GET_RUN_TIME_COUNTER_VALUE
–
ulTŸÆRunTime
 );

3039 
ulTŸÆRunTime
 = 
	`p‹tGET_RUN_TIME_COUNTER_VALUE
();

3049 if–
ulTŸÆRunTime
 > 
ulTaskSwôchedInTime
 )

3051 
pxCuºítTCB
->
ulRunTimeCou¡î
 +–
ulTŸÆRunTime
 - 
ulTaskSwôchedInTime
 );

3055 
	`mtCOVERAGE_TEST_MARKER
();

3058 
ulTaskSwôchedInTime
 = 
ulTŸÆRunTime
;

3063 
	`èskCHECK_FOR_STACK_OVERFLOW
();

3066 #i‡–
c⁄figUSE_POSIX_ERRNO
 == 1 )

3068 
pxCuºítTCB
->
iTaskEºno
 = 
FªeRTOS_î∫o
;

3074 
	`èskSELECT_HIGHEST_PRIORITY_TASK
();

3075 
	`åa˚TASK_SWITCHED_IN
();

3078 #i‡–
c⁄figUSE_POSIX_ERRNO
 == 1 )

3080 
FªeRTOS_î∫o
 = 
pxCuºítTCB
->
iTaskEºno
;

3084 #i‡–
c⁄figUSE_NEWLIB_REENTRANT
 == 1 )

3090 
_impuª_±r
 = &–
pxCuºítTCB
->
xNewLib_ªít
 );

3094 
	}
}

3097 
	$vTaskPœ˚OnEvítLi°
–
Li°_t
 * c⁄° 
pxEvítLi°
,

3098 c⁄° 
TickTy≥_t
 
xTicksToWaô
 )

3100 
	`c⁄figASSERT
–
pxEvítLi°
 );

3116 
	`vLi°In£π
–
pxEvítLi°
, &–
pxCuºítTCB
->
xEvítLi°Iãm
 ) );

3118 
	`¥vAddCuºítTaskToDñayedLi°
–
xTicksToWaô
, 
pdTRUE
 );

3119 
	}
}

3122 
	$vTaskPœ˚OnUn‹dîedEvítLi°
–
Li°_t
 * 
pxEvítLi°
,

3123 c⁄° 
TickTy≥_t
 
xIãmVÆue
,

3124 c⁄° 
TickTy≥_t
 
xTicksToWaô
 )

3126 
	`c⁄figASSERT
–
pxEvítLi°
 );

3130 
	`c⁄figASSERT
–
uxScheduÀrSu•íded
 != 0 );

3135 
	`li°SET_LIST_ITEM_VALUE
–&–
pxCuºítTCB
->
xEvítLi°Iãm
 ), 
xIãmVÆue
 | 
èskEVENT_LIST_ITEM_VALUE_IN_USE
 );

3142 
	`li°INSERT_END
–
pxEvítLi°
, &–
pxCuºítTCB
->
xEvítLi°Iãm
 ) );

3144 
	`¥vAddCuºítTaskToDñayedLi°
–
xTicksToWaô
, 
pdTRUE
 );

3145 
	}
}

3148 #i‡–
c⁄figUSE_TIMERS
 == 1 )

3150 
	$vTaskPœ˚OnEvítLi°Re°ri˘ed
–
Li°_t
 * c⁄° 
pxEvítLi°
,

3151 
TickTy≥_t
 
xTicksToWaô
,

3152 c⁄° 
Ba£Ty≥_t
 
xWaôIndeföôñy
 )

3154 
	`c⁄figASSERT
–
pxEvítLi°
 );

3166 
	`li°INSERT_END
–
pxEvítLi°
, &–
pxCuºítTCB
->
xEvítLi°Iãm
 ) );

3171 if–
xWaôIndeföôñy
 !
pdFALSE
 )

3173 
xTicksToWaô
 = 
p‹tMAX_DELAY
;

3176 
	`åa˚TASK_DELAY_UNTIL
––
xTickCou¡
 + 
xTicksToWaô
 ) );

3177 
	`¥vAddCuºítTaskToDñayedLi°
–
xTicksToWaô
, 
xWaôIndeföôñy
 );

3178 
	}
}

3183 
Ba£Ty≥_t
 
	$xTaskRemoveFromEvítLi°
–c⁄° 
Li°_t
 * c⁄° 
pxEvítLi°
 )

3185 
TCB_t
 * 
pxUnblockedTCB
;

3186 
Ba£Ty≥_t
 
xRëu∫
;

3201 
pxUnblockedTCB
 = 
	`li°GET_OWNER_OF_HEAD_ENTRY
–
pxEvítLi°
 );

3202 
	`c⁄figASSERT
–
pxUnblockedTCB
 );

3203 
	`li°REMOVE_ITEM
–&–
pxUnblockedTCB
->
xEvítLi°Iãm
 ) );

3205 if–
uxScheduÀrSu•íded
 =–
UBa£Ty≥_t
 ) 
pdFALSE
 )

3207 
	`li°REMOVE_ITEM
–&–
pxUnblockedTCB
->
xSèãLi°Iãm
 ) );

3208 
	`¥vAddTaskToRódyLi°
–
pxUnblockedTCB
 );

3210 #i‡–
c⁄figUSE_TICKLESS_IDLE
 != 0 )

3220 
	`¥vRe£tNextTaskUnblockTime
();

3228 
	`li°INSERT_END
–&–
xPídögRódyLi°
 ), &–
pxUnblockedTCB
->
xEvítLi°Iãm
 ) );

3231 if–
pxUnblockedTCB
->
uxPri‹ôy
 > 
pxCuºítTCB
->uxPriority )

3236 
xRëu∫
 = 
pdTRUE
;

3240 
xYõldPídög
 = 
pdTRUE
;

3244 
xRëu∫
 = 
pdFALSE
;

3247  
xRëu∫
;

3248 
	}
}

3251 
	$vTaskRemoveFromUn‹dîedEvítLi°
–
Li°Iãm_t
 * 
pxEvítLi°Iãm
,

3252 c⁄° 
TickTy≥_t
 
xIãmVÆue
 )

3254 
TCB_t
 * 
pxUnblockedTCB
;

3258 
	`c⁄figASSERT
–
uxScheduÀrSu•íded
 !
pdFALSE
 );

3261 
	`li°SET_LIST_ITEM_VALUE
–
pxEvítLi°Iãm
, 
xIãmVÆue
 | 
èskEVENT_LIST_ITEM_VALUE_IN_USE
 );

3265 
pxUnblockedTCB
 = 
	`li°GET_LIST_ITEM_OWNER
–
pxEvítLi°Iãm
 );

3266 
	`c⁄figASSERT
–
pxUnblockedTCB
 );

3267 
	`li°REMOVE_ITEM
–
pxEvítLi°Iãm
 );

3269 #i‡–
c⁄figUSE_TICKLESS_IDLE
 != 0 )

3279 
	`¥vRe£tNextTaskUnblockTime
();

3286 
	`li°REMOVE_ITEM
–&–
pxUnblockedTCB
->
xSèãLi°Iãm
 ) );

3287 
	`¥vAddTaskToRódyLi°
–
pxUnblockedTCB
 );

3289 if–
pxUnblockedTCB
->
uxPri‹ôy
 > 
pxCuºítTCB
->uxPriority )

3295 
xYõldPídög
 = 
pdTRUE
;

3297 
	}
}

3300 
	$vTaskSëTimeOutSèã
–
TimeOut_t
 * c⁄° 
pxTimeOut
 )

3302 
	`c⁄figASSERT
–
pxTimeOut
 );

3303 
	`èskENTER_CRITICAL
();

3305 
pxTimeOut
->
xOvîÊowCou¡
 = 
xNumOfOvîÊows
;

3306 
pxTimeOut
->
xTimeOnE¡îög
 = 
xTickCou¡
;

3308 
	`èskEXIT_CRITICAL
();

3309 
	}
}

3312 
	$vTaskI¡î«lSëTimeOutSèã
–
TimeOut_t
 * c⁄° 
pxTimeOut
 )

3315 
pxTimeOut
->
xOvîÊowCou¡
 = 
xNumOfOvîÊows
;

3316 
pxTimeOut
->
xTimeOnE¡îög
 = 
xTickCou¡
;

3317 
	}
}

3320 
Ba£Ty≥_t
 
	$xTaskCheckF‹TimeOut
–
TimeOut_t
 * c⁄° 
pxTimeOut
,

3321 
TickTy≥_t
 * c⁄° 
pxTicksToWaô
 )

3323 
Ba£Ty≥_t
 
xRëu∫
;

3325 
	`c⁄figASSERT
–
pxTimeOut
 );

3326 
	`c⁄figASSERT
–
pxTicksToWaô
 );

3328 
	`èskENTER_CRITICAL
();

3331 c⁄° 
TickTy≥_t
 
xC⁄°TickCou¡
 = 
xTickCou¡
;

3332 c⁄° 
TickTy≥_t
 
xEœp£dTime
 = 
xC⁄°TickCou¡
 - 
pxTimeOut
->
xTimeOnE¡îög
;

3334 #i‡–
INCLUDE_xTaskAb‹tDñay
 == 1 )

3335 if–
pxCuºítTCB
->
ucDñayAb‹ãd
 !–
uöt8_t
 ) 
pdFALSE
 )

3339 
pxCuºítTCB
->
ucDñayAb‹ãd
 = 
pdFALSE
;

3340 
xRëu∫
 = 
pdTRUE
;

3345 #i‡–
INCLUDE_vTaskSu•íd
 == 1 )

3346 if–*
pxTicksToWaô
 =
p‹tMAX_DELAY
 )

3351 
xRëu∫
 = 
pdFALSE
;

3356 if––
xNumOfOvîÊows
 !
pxTimeOut
->
xOvîÊowCou¡
 ) && ( 
xC⁄°TickCou¡
 >pxTimeOut->
xTimeOnE¡îög
 ) )

3363 
xRëu∫
 = 
pdTRUE
;

3364 *
pxTicksToWaô
 = ( 
TickTy≥_t
 ) 0;

3366 if–
xEœp£dTime
 < *
pxTicksToWaô
 )

3369 *
pxTicksToWaô
 -
xEœp£dTime
;

3370 
	`vTaskI¡î«lSëTimeOutSèã
–
pxTimeOut
 );

3371 
xRëu∫
 = 
pdFALSE
;

3375 *
pxTicksToWaô
 = ( 
TickTy≥_t
 ) 0;

3376 
xRëu∫
 = 
pdTRUE
;

3379 
	`èskEXIT_CRITICAL
();

3381  
xRëu∫
;

3382 
	}
}

3385 
	$vTaskMis£dYõld
( )

3387 
xYõldPídög
 = 
pdTRUE
;

3388 
	}
}

3391 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

3393 
UBa£Ty≥_t
 
	$uxTaskGëTaskNumbî
–
TaskH™dÀ_t
 
xTask
 )

3395 
UBa£Ty≥_t
 
uxRëu∫
;

3396 
TCB_t
 c⁄° * 
pxTCB
;

3398 if–
xTask
 !
NULL
 )

3400 
pxTCB
 = 
xTask
;

3401 
uxRëu∫
 = 
pxTCB
->
uxTaskNumbî
;

3405 
uxRëu∫
 = 0U;

3408  
uxRëu∫
;

3409 
	}
}

3414 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

3416 
	$vTaskSëTaskNumbî
–
TaskH™dÀ_t
 
xTask
,

3417 c⁄° 
UBa£Ty≥_t
 
uxH™dÀ
 )

3419 
TCB_t
 * 
pxTCB
;

3421 if–
xTask
 !
NULL
 )

3423 
pxTCB
 = 
xTask
;

3424 
pxTCB
->
uxTaskNumbî
 = 
uxH™dÀ
;

3426 
	}
}

3441 
	$p‹tTASK_FUNCTION
–
¥vIdÀTask
, 
pvP¨amëîs
 )

3444 –Ë
pvP¨amëîs
;

3452 
	`p‹tALLOCATE_SECURE_CONTEXT
–
c⁄figMINIMAL_SECURE_STACK_SIZE
 );

3458 
	`¥vCheckTasksWaôögTîmö©i⁄
();

3460 #i‡–
c⁄figUSE_PREEMPTION
 == 0 )

3466 
	`èskYIELD
();

3470 #i‡––
c⁄figUSE_PREEMPTION
 =1 ) && ( 
c⁄figIDLE_SHOULD_YIELD
 == 1 ) )

3481 if–
	`li°CURRENT_LIST_LENGTH
–&–
pxRódyTasksLi°s
[ 
tskIDLE_PRIORITY
 ] ) ) > ( 
UBa£Ty≥_t
 ) 1 )

3483 
	`èskYIELD
();

3487 
	`mtCOVERAGE_TEST_MARKER
();

3492 #i‡–
c⁄figUSE_IDLE_HOOK
 == 1 )

3494 
	`vAµliˇti⁄IdÀHook
( );

3501 
	`vAµliˇti⁄IdÀHook
();

3509 #i‡–
c⁄figUSE_TICKLESS_IDLE
 != 0 )

3511 
TickTy≥_t
 
xEx≥˘edIdÀTime
;

3518 
xEx≥˘edIdÀTime
 = 
	`¥vGëEx≥˘edIdÀTime
();

3520 if–
xEx≥˘edIdÀTime
 >
c⁄figEXPECTED_IDLE_TIME_BEFORE_SLEEP
 )

3522 
	`vTaskSu•ídAŒ
();

3527 
	`c⁄figASSERT
–
xNextTaskUnblockTime
 >
xTickCou¡
 );

3528 
xEx≥˘edIdÀTime
 = 
	`¥vGëEx≥˘edIdÀTime
();

3533 
	`c⁄figPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING
–
xEx≥˘edIdÀTime
 );

3535 if–
xEx≥˘edIdÀTime
 >
c⁄figEXPECTED_IDLE_TIME_BEFORE_SLEEP
 )

3537 
	`åa˚LOW_POWER_IDLE_BEGIN
();

3538 
	`p‹tSUPPRESS_TICKS_AND_SLEEP
–
xEx≥˘edIdÀTime
 );

3539 
	`åa˚LOW_POWER_IDLE_END
();

3543 
	`mtCOVERAGE_TEST_MARKER
();

3546 –Ë
	`xTaskResumeAŒ
();

3550 
	`mtCOVERAGE_TEST_MARKER
();

3555 
	}
}

3558 #i‡–
c⁄figUSE_TICKLESS_IDLE
 != 0 )

3560 
eSÀïModeSètus
 
	$eTaskC⁄fúmSÀïModeSètus
( )

3563 c⁄° 
UBa£Ty≥_t
 
uxN⁄Aµliˇti⁄Tasks
 = 1;

3564 
eSÀïModeSètus
 
eRëu∫
 = 
eSènd¨dSÀï
;

3568 if–
	`li°CURRENT_LIST_LENGTH
–&
xPídögRódyLi°
 ) != 0 )

3571 
eRëu∫
 = 
eAb‹tSÀï
;

3573 if–
xYõldPídög
 !
pdFALSE
 )

3576 
eRëu∫
 = 
eAb‹tSÀï
;

3578 if–
xPídedTicks
 != 0 )

3582 
eRëu∫
 = 
eAb‹tSÀï
;

3590 if–
	`li°CURRENT_LIST_LENGTH
–&
xSu•ídedTaskLi°
 ) =–
uxCuºítNumbîOfTasks
 - 
uxN⁄Aµliˇti⁄Tasks
 ) )

3592 
eRëu∫
 = 
eNoTasksWaôögTimeout
;

3596 
	`mtCOVERAGE_TEST_MARKER
();

3600  
eRëu∫
;

3601 
	}
}

3606 #i‡–
c⁄figNUM_THREAD_LOCAL_STORAGE_POINTERS
 != 0 )

3608 
	$vTaskSëThªadLoˇlSt‹agePoöãr
–
TaskH™dÀ_t
 
xTaskToSë
,

3609 
Ba£Ty≥_t
 
xIndex
,

3610 * 
pvVÆue
 )

3612 
TCB_t
 * 
pxTCB
;

3614 if–
xIndex
 < 
c⁄figNUM_THREAD_LOCAL_STORAGE_POINTERS
 )

3616 
pxTCB
 = 
	`¥vGëTCBFromH™dÀ
–
xTaskToSë
 );

3617 
	`c⁄figASSERT
–
pxTCB
 !
NULL
 );

3618 
pxTCB
->
pvThªadLoˇlSt‹agePoöãrs
[ 
xIndex
 ] = 
pvVÆue
;

3620 
	}
}

3625 #i‡–
c⁄figNUM_THREAD_LOCAL_STORAGE_POINTERS
 != 0 )

3627 * 
	$pvTaskGëThªadLoˇlSt‹agePoöãr
–
TaskH™dÀ_t
 
xTaskToQuîy
,

3628 
Ba£Ty≥_t
 
xIndex
 )

3630 * 
pvRëu∫
 = 
NULL
;

3631 
TCB_t
 * 
pxTCB
;

3633 if–
xIndex
 < 
c⁄figNUM_THREAD_LOCAL_STORAGE_POINTERS
 )

3635 
pxTCB
 = 
	`¥vGëTCBFromH™dÀ
–
xTaskToQuîy
 );

3636 
pvRëu∫
 = 
pxTCB
->
pvThªadLoˇlSt‹agePoöãrs
[ 
xIndex
 ];

3640 
pvRëu∫
 = 
NULL
;

3643  
pvRëu∫
;

3644 
	}
}

3649 #i‡–
p‹tUSING_MPU_WRAPPERS
 == 1 )

3651 
	$vTaskAŒoˇãMPURegi⁄s
–
TaskH™dÀ_t
 
xTaskToModify
,

3652 c⁄° 
Mem‹yRegi⁄_t
 * c⁄° 
xRegi⁄s
 )

3654 
TCB_t
 * 
pxTCB
;

3658 
pxTCB
 = 
	`¥vGëTCBFromH™dÀ
–
xTaskToModify
 );

3660 
	`vP‹tSt‹eTaskMPUSëtögs
–&–
pxTCB
->
xMPUSëtögs
 ), 
xRegi⁄s
, 
NULL
, 0 );

3661 
	}
}

3666 
	$¥vInôüli£TaskLi°s
( )

3668 
UBa£Ty≥_t
 
uxPri‹ôy
;

3670  
uxPri‹ôy
 = ( 
UBa£Ty≥_t
 ) 0U; uxPri‹ôy < ( UBa£Ty≥_àË
c⁄figMAX_PRIORITIES
; uxPriority++ )

3672 
	`vLi°Inôüli£
–&–
pxRódyTasksLi°s
[ 
uxPri‹ôy
 ] ) );

3675 
	`vLi°Inôüli£
–&
xDñayedTaskLi°1
 );

3676 
	`vLi°Inôüli£
–&
xDñayedTaskLi°2
 );

3677 
	`vLi°Inôüli£
–&
xPídögRódyLi°
 );

3679 #i‡–
INCLUDE_vTaskDñëe
 == 1 )

3681 
	`vLi°Inôüli£
–&
xTasksWaôögTîmö©i⁄
 );

3685 #i‡–
INCLUDE_vTaskSu•íd
 == 1 )

3687 
	`vLi°Inôüli£
–&
xSu•ídedTaskLi°
 );

3693 
pxDñayedTaskLi°
 = &
xDñayedTaskLi°1
;

3694 
pxOvîÊowDñayedTaskLi°
 = &
xDñayedTaskLi°2
;

3695 
	}
}

3698 
	$¥vCheckTasksWaôögTîmö©i⁄
( )

3702 #i‡–
INCLUDE_vTaskDñëe
 == 1 )

3704 
TCB_t
 * 
pxTCB
;

3708  
uxDñëedTasksWaôögCÀ™Up
 > ( 
UBa£Ty≥_t
 ) 0U )

3710 
	`èskENTER_CRITICAL
();

3712 
pxTCB
 = 
	`li°GET_OWNER_OF_HEAD_ENTRY
––&
xTasksWaôögTîmö©i⁄
 ) );

3713 –Ë
	`uxLi°Remove
–&–
pxTCB
->
xSèãLi°Iãm
 ) );

3714 --
uxCuºítNumbîOfTasks
;

3715 --
uxDñëedTasksWaôögCÀ™Up
;

3717 
	`èskEXIT_CRITICAL
();

3719 
	`¥vDñëeTCB
–
pxTCB
 );

3723 
	}
}

3726 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

3728 
	$vTaskGëInfo
–
TaskH™dÀ_t
 
xTask
,

3729 
TaskSètus_t
 * 
pxTaskSètus
,

3730 
Ba£Ty≥_t
 
xGëFªeSèckS∑˚
,

3731 
eTaskSèã
 
eSèã
 )

3733 
TCB_t
 * 
pxTCB
;

3736 
pxTCB
 = 
	`¥vGëTCBFromH™dÀ
–
xTask
 );

3738 
pxTaskSètus
->
xH™dÀ
 = ( 
TaskH™dÀ_t
 ) 
pxTCB
;

3739 
pxTaskSètus
->
pcTaskName
 = ( c⁄° * ) &–
pxTCB
->pcTaskName[ 0 ] );

3740 
pxTaskSètus
->
uxCuºítPri‹ôy
 = 
pxTCB
->
uxPri‹ôy
;

3741 
pxTaskSètus
->
pxSèckBa£
 = 
pxTCB
->
pxSèck
;

3742 
pxTaskSètus
->
xTaskNumbî
 = 
pxTCB
->
uxTCBNumbî
;

3744 #i‡–
c⁄figUSE_MUTEXES
 == 1 )

3746 
pxTaskSètus
->
uxBa£Pri‹ôy
 = 
pxTCB
->uxBasePriority;

3750 
pxTaskSètus
->
uxBa£Pri‹ôy
 = 0;

3754 #i‡–
c⁄figGENERATE_RUN_TIME_STATS
 == 1 )

3756 
pxTaskSètus
->
ulRunTimeCou¡î
 = 
pxTCB
->ulRunTimeCounter;

3760 
pxTaskSètus
->
ulRunTimeCou¡î
 = ( 
c⁄figRUN_TIME_COUNTER_TYPE
 ) 0;

3767 if–
eSèã
 !
eInvÆid
 )

3769 if–
pxTCB
 =
pxCuºítTCB
 )

3771 
pxTaskSètus
->
eCuºítSèã
 = 
eRu¬ög
;

3775 
pxTaskSètus
->
eCuºítSèã
 = 
eSèã
;

3777 #i‡–
INCLUDE_vTaskSu•íd
 == 1 )

3782 if–
eSèã
 =
eSu•íded
 )

3784 
	`vTaskSu•ídAŒ
();

3786 if–
	`li°LIST_ITEM_CONTAINER
–&–
pxTCB
->
xEvítLi°Iãm
 ) ) !
NULL
 )

3788 
pxTaskSètus
->
eCuºítSèã
 = 
eBlocked
;

3791 –Ë
	`xTaskResumeAŒ
();

3799 
pxTaskSètus
->
eCuºítSèã
 = 
	`eTaskGëSèã
–
pxTCB
 );

3804 if–
xGëFªeSèckS∑˚
 !
pdFALSE
 )

3806 #i‡–
p‹tSTACK_GROWTH
 > 0 )

3808 
pxTaskSètus
->
usSèckHighW©îM¨k
 = 
	`¥vTaskCheckFªeSèckS∑˚
––
uöt8_t
 * ) 
pxTCB
->
pxEndOfSèck
 );

3812 
pxTaskSètus
->
usSèckHighW©îM¨k
 = 
	`¥vTaskCheckFªeSèckS∑˚
––
uöt8_t
 * ) 
pxTCB
->
pxSèck
 );

3818 
pxTaskSètus
->
usSèckHighW©îM¨k
 = 0;

3820 
	}
}

3825 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

3827 
UBa£Ty≥_t
 
	$¥vLi°TasksWôhöSögÀLi°
–
TaskSètus_t
 * 
pxTaskSètusAºay
,

3828 
Li°_t
 * 
pxLi°
,

3829 
eTaskSèã
 
eSèã
 )

3831 
c⁄figLIST_VOLATILE
 
TCB_t
 * 
pxNextTCB
, * 
pxFú°TCB
;

3832 
UBa£Ty≥_t
 
uxTask
 = 0;

3834 if–
	`li°CURRENT_LIST_LENGTH
–
pxLi°
 ) > ( 
UBa£Ty≥_t
 ) 0 )

3836 
	`li°GET_OWNER_OF_NEXT_ENTRY
–
pxFú°TCB
, 
pxLi°
 );

3844 
	`li°GET_OWNER_OF_NEXT_ENTRY
–
pxNextTCB
, 
pxLi°
 );

3845 
	`vTaskGëInfo
––
TaskH™dÀ_t
 ) 
pxNextTCB
, &–
pxTaskSètusAºay
[ 
uxTask
 ] ), 
pdTRUE
, 
eSèã
 );

3846 
uxTask
++;

3847 }  
pxNextTCB
 !
pxFú°TCB
 );

3851 
	`mtCOVERAGE_TEST_MARKER
();

3854  
uxTask
;

3855 
	}
}

3860 #i‡––
c⁄figUSE_TRACE_FACILITY
 =1 ) || ( 
INCLUDE_uxTaskGëSèckHighW©îM¨k
 =1 ) || ( 
INCLUDE_uxTaskGëSèckHighW©îM¨k2
 == 1 ) )

3862 
c⁄figSTACK_DEPTH_TYPE
 
	$¥vTaskCheckFªeSèckS∑˚
–c⁄° 
uöt8_t
 * 
pucSèckByã
 )

3864 
uöt32_t
 
ulCou¡
 = 0U;

3866  *
pucSèckByã
 =–
uöt8_t
 ) 
tskSTACK_FILL_BYTE
 )

3868 
pucSèckByã
 -
p‹tSTACK_GROWTH
;

3869 
ulCou¡
++;

3872 
ulCou¡
 /–
uöt32_t
 ) –
SèckTy≥_t
 );

3874  ( 
c⁄figSTACK_DEPTH_TYPE
 ) 
ulCou¡
;

3875 
	}
}

3880 #i‡–
INCLUDE_uxTaskGëSèckHighW©îM¨k2
 == 1 )

3887 
c⁄figSTACK_DEPTH_TYPE
 
	$uxTaskGëSèckHighW©îM¨k2
–
TaskH™dÀ_t
 
xTask
 )

3889 
TCB_t
 * 
pxTCB
;

3890 
uöt8_t
 * 
pucEndOfSèck
;

3891 
c⁄figSTACK_DEPTH_TYPE
 
uxRëu∫
;

3900 
pxTCB
 = 
	`¥vGëTCBFromH™dÀ
–
xTask
 );

3902 #i‡
p‹tSTACK_GROWTH
 < 0

3904 
pucEndOfSèck
 = ( 
uöt8_t
 * ) 
pxTCB
->
pxSèck
;

3908 
pucEndOfSèck
 = ( 
uöt8_t
 * ) 
pxTCB
->
pxEndOfSèck
;

3912 
uxRëu∫
 = 
	`¥vTaskCheckFªeSèckS∑˚
–
pucEndOfSèck
 );

3914  
uxRëu∫
;

3915 
	}
}

3920 #i‡–
INCLUDE_uxTaskGëSèckHighW©îM¨k
 == 1 )

3922 
UBa£Ty≥_t
 
	$uxTaskGëSèckHighW©îM¨k
–
TaskH™dÀ_t
 
xTask
 )

3924 
TCB_t
 * 
pxTCB
;

3925 
uöt8_t
 * 
pucEndOfSèck
;

3926 
UBa£Ty≥_t
 
uxRëu∫
;

3928 
pxTCB
 = 
	`¥vGëTCBFromH™dÀ
–
xTask
 );

3930 #i‡
p‹tSTACK_GROWTH
 < 0

3932 
pucEndOfSèck
 = ( 
uöt8_t
 * ) 
pxTCB
->
pxSèck
;

3936 
pucEndOfSèck
 = ( 
uöt8_t
 * ) 
pxTCB
->
pxEndOfSèck
;

3940 
uxRëu∫
 = ( 
UBa£Ty≥_t
 ) 
	`¥vTaskCheckFªeSèckS∑˚
–
pucEndOfSèck
 );

3942  
uxRëu∫
;

3943 
	}
}

3948 #i‡–
INCLUDE_vTaskDñëe
 == 1 )

3950 
	$¥vDñëeTCB
–
TCB_t
 * 
pxTCB
 )

3955 
	`p‹tCLEAN_UP_TCB
–
pxTCB
 );

3961 #i‡–
c⁄figUSE_NEWLIB_REENTRANT
 == 1 )

3963 
	`_ª˛aim_ªít
–&–
pxTCB
->
xNewLib_ªít
 ) );

3967 #i‡––
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 =1 ) && ( 
c⁄figSUPPORT_STATIC_ALLOCATION
 =0 ) && ( 
p‹tUSING_MPU_WRAPPERS
 == 0 ) )

3971 
	`vP‹tFªeSèck
–
pxTCB
->
pxSèck
 );

3972 
	`vP‹tFªe
–
pxTCB
 );

3974 #ñi‡–
tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE
 != 0 )

3979 if–
pxTCB
->
ucSètiˇŒyAŒoˇãd
 =
tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB
 )

3983 
	`vP‹tFªeSèck
–
pxTCB
->
pxSèck
 );

3984 
	`vP‹tFªe
–
pxTCB
 );

3986 if–
pxTCB
->
ucSètiˇŒyAŒoˇãd
 =
tskSTATICALLY_ALLOCATED_STACK_ONLY
 )

3990 
	`vP‹tFªe
–
pxTCB
 );

3996 
	`c⁄figASSERT
–
pxTCB
->
ucSètiˇŒyAŒoˇãd
 =
tskSTATICALLY_ALLOCATED_STACK_AND_TCB
 );

3997 
	`mtCOVERAGE_TEST_MARKER
();

4001 
	}
}

4006 
	$¥vRe£tNextTaskUnblockTime
( )

4008 if–
	`li°LIST_IS_EMPTY
–
pxDñayedTaskLi°
 ) !
pdFALSE
 )

4014 
xNextTaskUnblockTime
 = 
p‹tMAX_DELAY
;

4022 
xNextTaskUnblockTime
 = 
	`li°GET_ITEM_VALUE_OF_HEAD_ENTRY
–
pxDñayedTaskLi°
 );

4024 
	}
}

4027 #i‡––
INCLUDE_xTaskGëCuºítTaskH™dÀ
 =1 ) || ( 
c⁄figUSE_MUTEXES
 == 1 ) )

4029 
TaskH™dÀ_t
 
	$xTaskGëCuºítTaskH™dÀ
( )

4031 
TaskH™dÀ_t
 
xRëu∫
;

4036 
xRëu∫
 = 
pxCuºítTCB
;

4038  
xRëu∫
;

4039 
	}
}

4044 #i‡––
INCLUDE_xTaskGëScheduÀrSèã
 =1 ) || ( 
c⁄figUSE_TIMERS
 == 1 ) )

4046 
Ba£Ty≥_t
 
	$xTaskGëScheduÀrSèã
( )

4048 
Ba£Ty≥_t
 
xRëu∫
;

4050 if–
xScheduÀrRu¬ög
 =
pdFALSE
 )

4052 
xRëu∫
 = 
èskSCHEDULER_NOT_STARTED
;

4056 if–
uxScheduÀrSu•íded
 =–
UBa£Ty≥_t
 ) 
pdFALSE
 )

4058 
xRëu∫
 = 
èskSCHEDULER_RUNNING
;

4062 
xRëu∫
 = 
èskSCHEDULER_SUSPENDED
;

4066  
xRëu∫
;

4067 
	}
}

4072 #i‡–
c⁄figUSE_MUTEXES
 == 1 )

4074 
Ba£Ty≥_t
 
	$xTaskPri‹ôyInhîô
–
TaskH™dÀ_t
 c⁄° 
pxMuãxHﬁdî
 )

4076 
TCB_t
 * c⁄° 
pxMuãxHﬁdîTCB
 = 
pxMuãxHﬁdî
;

4077 
Ba£Ty≥_t
 
xRëu∫
 = 
pdFALSE
;

4082 if–
pxMuãxHﬁdî
 !
NULL
 )

4087 if–
pxMuãxHﬁdîTCB
->
uxPri‹ôy
 < 
pxCuºítTCB
->uxPriority )

4092 if––
	`li°GET_LIST_ITEM_VALUE
–&–
pxMuãxHﬁdîTCB
->
xEvítLi°Iãm
 ) ) & 
èskEVENT_LIST_ITEM_VALUE_IN_USE
 ) == 0UL )

4094 
	`li°SET_LIST_ITEM_VALUE
–&–
pxMuãxHﬁdîTCB
->
xEvítLi°Iãm
 ), ( 
TickTy≥_t
 ) 
c⁄figMAX_PRIORITIES
 - ( TickTy≥_àË
pxCuºítTCB
->
uxPri‹ôy
 );

4098 
	`mtCOVERAGE_TEST_MARKER
();

4103 if–
	`li°IS_CONTAINED_WITHIN
–&–
pxRódyTasksLi°s
[ 
pxMuãxHﬁdîTCB
->
uxPri‹ôy
 ] ), &–pxMuãxHﬁdîTCB->
xSèãLi°Iãm
 ) ) !
pdFALSE
 )

4105 if–
	`uxLi°Remove
–&–
pxMuãxHﬁdîTCB
->
xSèãLi°Iãm
 ) ) =–
UBa£Ty≥_t
 ) 0 )

4110 
	`p‹tRESET_READY_PRIORITY
–
pxMuãxHﬁdîTCB
->
uxPri‹ôy
, 
uxT›RódyPri‹ôy
 );

4114 
	`mtCOVERAGE_TEST_MARKER
();

4118 
pxMuãxHﬁdîTCB
->
uxPri‹ôy
 = 
pxCuºítTCB
->uxPriority;

4119 
	`¥vAddTaskToRódyLi°
–
pxMuãxHﬁdîTCB
 );

4124 
pxMuãxHﬁdîTCB
->
uxPri‹ôy
 = 
pxCuºítTCB
->uxPriority;

4127 
	`åa˚TASK_PRIORITY_INHERIT
–
pxMuãxHﬁdîTCB
, 
pxCuºítTCB
->
uxPri‹ôy
 );

4130 
xRëu∫
 = 
pdTRUE
;

4134 if–
pxMuãxHﬁdîTCB
->
uxBa£Pri‹ôy
 < 
pxCuºítTCB
->
uxPri‹ôy
 )

4143 
xRëu∫
 = 
pdTRUE
;

4147 
	`mtCOVERAGE_TEST_MARKER
();

4153 
	`mtCOVERAGE_TEST_MARKER
();

4156  
xRëu∫
;

4157 
	}
}

4162 #i‡–
c⁄figUSE_MUTEXES
 == 1 )

4164 
Ba£Ty≥_t
 
	$xTaskPri‹ôyDisöhîô
–
TaskH™dÀ_t
 c⁄° 
pxMuãxHﬁdî
 )

4166 
TCB_t
 * c⁄° 
pxTCB
 = 
pxMuãxHﬁdî
;

4167 
Ba£Ty≥_t
 
xRëu∫
 = 
pdFALSE
;

4169 if–
pxMuãxHﬁdî
 !
NULL
 )

4175 
	`c⁄figASSERT
–
pxTCB
 =
pxCuºítTCB
 );

4176 
	`c⁄figASSERT
–
pxTCB
->
uxMuãxesHñd
 );

4177 –
pxTCB
->
uxMuãxesHñd
 )--;

4181 if–
pxTCB
->
uxPri‹ôy
 !pxTCB->
uxBa£Pri‹ôy
 )

4184 if–
pxTCB
->
uxMuãxesHñd
 =–
UBa£Ty≥_t
 ) 0 )

4191 if–
	`uxLi°Remove
–&–
pxTCB
->
xSèãLi°Iãm
 ) ) =–
UBa£Ty≥_t
 ) 0 )

4193 
	`p‹tRESET_READY_PRIORITY
–
pxTCB
->
uxPri‹ôy
, 
uxT›RódyPri‹ôy
 );

4197 
	`mtCOVERAGE_TEST_MARKER
();

4202 
	`åa˚TASK_PRIORITY_DISINHERIT
–
pxTCB
,ÖxTCB->
uxBa£Pri‹ôy
 );

4203 
pxTCB
->
uxPri‹ôy
 =ÖxTCB->
uxBa£Pri‹ôy
;

4208 
	`li°SET_LIST_ITEM_VALUE
–&–
pxTCB
->
xEvítLi°Iãm
 ), ( 
TickTy≥_t
 ) 
c⁄figMAX_PRIORITIES
 - ( TickTy≥_àËpxTCB->
uxPri‹ôy
 );

4209 
	`¥vAddTaskToRódyLi°
–
pxTCB
 );

4219 
xRëu∫
 = 
pdTRUE
;

4223 
	`mtCOVERAGE_TEST_MARKER
();

4228 
	`mtCOVERAGE_TEST_MARKER
();

4233 
	`mtCOVERAGE_TEST_MARKER
();

4236  
xRëu∫
;

4237 
	}
}

4242 #i‡–
c⁄figUSE_MUTEXES
 == 1 )

4244 
	$vTaskPri‹ôyDisöhîôA·îTimeout
–
TaskH™dÀ_t
 c⁄° 
pxMuãxHﬁdî
,

4245 
UBa£Ty≥_t
 
uxHighe°Pri‹ôyWaôögTask
 )

4247 
TCB_t
 * c⁄° 
pxTCB
 = 
pxMuãxHﬁdî
;

4248 
UBa£Ty≥_t
 
uxPri‹ôyU£dOnE¡ry
, 
uxPri‹ôyToU£
;

4249 c⁄° 
UBa£Ty≥_t
 
uxO∆yO√MuãxHñd
 = ( UBaseType_t ) 1;

4251 if–
pxMuãxHﬁdî
 !
NULL
 )

4255 
	`c⁄figASSERT
–
pxTCB
->
uxMuãxesHñd
 );

4261 if–
pxTCB
->
uxBa£Pri‹ôy
 < 
uxHighe°Pri‹ôyWaôögTask
 )

4263 
uxPri‹ôyToU£
 = 
uxHighe°Pri‹ôyWaôögTask
;

4267 
uxPri‹ôyToU£
 = 
pxTCB
->
uxBa£Pri‹ôy
;

4271 if–
pxTCB
->
uxPri‹ôy
 !
uxPri‹ôyToU£
 )

4277 if–
pxTCB
->
uxMuãxesHñd
 =
uxO∆yO√MuãxHñd
 )

4282 
	`c⁄figASSERT
–
pxTCB
 !
pxCuºítTCB
 );

4287 
	`åa˚TASK_PRIORITY_DISINHERIT
–
pxTCB
, 
uxPri‹ôyToU£
 );

4288 
uxPri‹ôyU£dOnE¡ry
 = 
pxTCB
->
uxPri‹ôy
;

4289 
pxTCB
->
uxPri‹ôy
 = 
uxPri‹ôyToU£
;

4293 if––
	`li°GET_LIST_ITEM_VALUE
–&–
pxTCB
->
xEvítLi°Iãm
 ) ) & 
èskEVENT_LIST_ITEM_VALUE_IN_USE
 ) == 0UL )

4295 
	`li°SET_LIST_ITEM_VALUE
–&–
pxTCB
->
xEvítLi°Iãm
 ), ( 
TickTy≥_t
 ) 
c⁄figMAX_PRIORITIES
 - ( TickTy≥_àË
uxPri‹ôyToU£
 );

4299 
	`mtCOVERAGE_TEST_MARKER
();

4308 if–
	`li°IS_CONTAINED_WITHIN
–&–
pxRódyTasksLi°s
[ 
uxPri‹ôyU£dOnE¡ry
 ] ), &–
pxTCB
->
xSèãLi°Iãm
 ) ) !
pdFALSE
 )

4310 if–
	`uxLi°Remove
–&–
pxTCB
->
xSèãLi°Iãm
 ) ) =–
UBa£Ty≥_t
 ) 0 )

4315 
	`p‹tRESET_READY_PRIORITY
–
pxTCB
->
uxPri‹ôy
, 
uxT›RódyPri‹ôy
 );

4319 
	`mtCOVERAGE_TEST_MARKER
();

4322 
	`¥vAddTaskToRódyLi°
–
pxTCB
 );

4326 
	`mtCOVERAGE_TEST_MARKER
();

4331 
	`mtCOVERAGE_TEST_MARKER
();

4336 
	`mtCOVERAGE_TEST_MARKER
();

4341 
	`mtCOVERAGE_TEST_MARKER
();

4343 
	}
}

4348 #i‡–
p‹tCRITICAL_NESTING_IN_TCB
 == 1 )

4350 
	$vTaskE¡îCrôiˇl
( )

4352 
	`p‹tDISABLE_INTERRUPTS
();

4354 if–
xScheduÀrRu¬ög
 !
pdFALSE
 )

4356 –
pxCuºítTCB
->
uxCrôiˇlNe°ög
 )++;

4364 if–
pxCuºítTCB
->
uxCrôiˇlNe°ög
 == 1 )

4366 
	`p‹tASSERT_IF_IN_ISR
();

4371 
	`mtCOVERAGE_TEST_MARKER
();

4373 
	}
}

4378 #i‡–
p‹tCRITICAL_NESTING_IN_TCB
 == 1 )

4380 
	$vTaskExôCrôiˇl
( )

4382 if–
xScheduÀrRu¬ög
 !
pdFALSE
 )

4384 if–
pxCuºítTCB
->
uxCrôiˇlNe°ög
 > 0U )

4386 –
pxCuºítTCB
->
uxCrôiˇlNe°ög
 )--;

4388 if–
pxCuºítTCB
->
uxCrôiˇlNe°ög
 == 0U )

4390 
	`p‹tENABLE_INTERRUPTS
();

4394 
	`mtCOVERAGE_TEST_MARKER
();

4399 
	`mtCOVERAGE_TEST_MARKER
();

4404 
	`mtCOVERAGE_TEST_MARKER
();

4406 
	}
}

4411 #i‡––
c⁄figUSE_TRACE_FACILITY
 =1 ) && ( 
c⁄figUSE_STATS_FORMATTING_FUNCTIONS
 > 0 ) )

4413 * 
	$¥vWrôeNameToBuf„r
–* 
pcBuf„r
,

4414 c⁄° * 
pcTaskName
 )

4416 
size_t
 
x
;

4419 
	`°r˝y
–
pcBuf„r
, 
pcTaskName
 );

4423  
x
 = 
	`°æí
–
pcBuf„r
 ); x < ( 
size_t
 ) ( 
c⁄figMAX_TASK_NAME_LEN
 - 1 ); x++ )

4425 
pcBuf„r
[ 
x
 ] = ' ';

4429 
pcBuf„r
[ 
x
 ] = ( ) 0x00;

4432  &–
pcBuf„r
[ 
x
 ] );

4433 
	}
}

4438 #i‡––
c⁄figUSE_TRACE_FACILITY
 =1 ) && ( 
c⁄figUSE_STATS_FORMATTING_FUNCTIONS
 > 0 ) && ( 
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 ) )

4440 
	$vTaskLi°
–* 
pcWrôeBuf„r
 )

4442 
TaskSètus_t
 * 
pxTaskSètusAºay
;

4443 
UBa£Ty≥_t
 
uxAºaySize
, 
x
;

4444 
cSètus
;

4474 *
pcWrôeBuf„r
 = ( ) 0x00;

4478 
uxAºaySize
 = 
uxCuºítNumbîOfTasks
;

4483 
pxTaskSètusAºay
 = 
	`pvP‹tMÆloc
–
uxCuºítNumbîOfTasks
 * –
TaskSètus_t
 ) );

4485 if–
pxTaskSètusAºay
 !
NULL
 )

4488 
uxAºaySize
 = 
	`uxTaskGëSy°emSèã
–
pxTaskSètusAºay
, uxAºaySize, 
NULL
 );

4491  
x
 = 0; x < 
uxAºaySize
; x++ )

4493  
pxTaskSètusAºay
[ 
x
 ].
eCuºítSèã
 )

4495 
eRu¬ög
:

4496 
cSètus
 = 
tskRUNNING_CHAR
;

4499 
eRódy
:

4500 
cSètus
 = 
tskREADY_CHAR
;

4503 
eBlocked
:

4504 
cSètus
 = 
tskBLOCKED_CHAR
;

4507 
eSu•íded
:

4508 
cSètus
 = 
tskSUSPENDED_CHAR
;

4511 
eDñëed
:

4512 
cSètus
 = 
tskDELETED_CHAR
;

4515 
eInvÆid
:

4518 
cSètus
 = ( ) 0x00;

4524 
pcWrôeBuf„r
 = 
	`¥vWrôeNameToBuf„r
–pcWrôeBuf„r, 
pxTaskSètusAºay
[ 
x
 ].
pcTaskName
 );

4527 
	`•rötf
–
pcWrôeBuf„r
, "\t%c\t%u\t%u\t%u\r\n", 
cSètus
, ( Ë
pxTaskSètusAºay
[ 
x
 ].
uxCuºítPri‹ôy
, ( ËpxTaskSètusAºay[ x ].
usSèckHighW©îM¨k
, ( ËpxTaskSètusAºay[ x ].
xTaskNumbî
 );

4528 
pcWrôeBuf„r
 +
	`°æí
(ÖcWriteBuffer );

4533 
	`vP‹tFªe
–
pxTaskSètusAºay
 );

4537 
	`mtCOVERAGE_TEST_MARKER
();

4539 
	}
}

4544 #i‡––
c⁄figGENERATE_RUN_TIME_STATS
 =1 ) && ( 
c⁄figUSE_STATS_FORMATTING_FUNCTIONS
 > 0 ) && ( 
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 ) )

4546 
	$vTaskGëRunTimeSèts
–* 
pcWrôeBuf„r
 )

4548 
TaskSètus_t
 * 
pxTaskSètusAºay
;

4549 
UBa£Ty≥_t
 
uxAºaySize
, 
x
;

4550 
c⁄figRUN_TIME_COUNTER_TYPE
 
ulTŸÆTime
, 
ulSètsAsPî˚¡age
;

4552 #i‡–
c⁄figUSE_TRACE_FACILITY
 != 1 )

4554 #îr‹ 
c⁄figUSE_TRACE_FACILITY
 
mu°
 
Æso
 
be
 
£t
 
to
 1 
ö
 
FªeRTOSC⁄fig
.
h
Åÿ
u£
 
	`vTaskGëRunTimeSèts
().

4584 *
pcWrôeBuf„r
 = ( ) 0x00;

4588 
uxAºaySize
 = 
uxCuºítNumbîOfTasks
;

4593 
pxTaskSètusAºay
 = 
	`pvP‹tMÆloc
–
uxCuºítNumbîOfTasks
 * –
TaskSètus_t
 ) );

4595 if–
pxTaskSètusAºay
 !
NULL
 )

4598 
uxAºaySize
 = 
	`uxTaskGëSy°emSèã
–
pxTaskSètusAºay
, uxAºaySize, &
ulTŸÆTime
 );

4601 
ulTŸÆTime
 /= 100UL;

4604 if–
ulTŸÆTime
 > 0UL )

4607  
x
 = 0; x < 
uxAºaySize
; x++ )

4612 
ulSètsAsPî˚¡age
 = 
pxTaskSètusAºay
[ 
x
 ].
ulRunTimeCou¡î
 / 
ulTŸÆTime
;

4617 
pcWrôeBuf„r
 = 
	`¥vWrôeNameToBuf„r
–pcWrôeBuf„r, 
pxTaskSètusAºay
[ 
x
 ].
pcTaskName
 );

4619 if–
ulSètsAsPî˚¡age
 > 0UL )

4621 #ifde‡
p‹tLU_PRINTF_SPECIFIER_REQUIRED


4623 
	`•rötf
–
pcWrôeBuf„r
, "\t%lu\t\t%lu%%\r\n", 
pxTaskSètusAºay
[ 
x
 ].
ulRunTimeCou¡î
, 
ulSètsAsPî˚¡age
 );

4629 
	`•rötf
–
pcWrôeBuf„r
, "\t%u\t\t%u%%\r\n", ( Ë
pxTaskSètusAºay
[ 
x
 ].
ulRunTimeCou¡î
, ( Ë
ulSètsAsPî˚¡age
 );

4637 #ifde‡
p‹tLU_PRINTF_SPECIFIER_REQUIRED


4639 
	`•rötf
–
pcWrôeBuf„r
, "\t%lu\t\t<1%%\r\n", 
pxTaskSètusAºay
[ 
x
 ].
ulRunTimeCou¡î
 );

4645 
	`•rötf
–
pcWrôeBuf„r
, "\t%u\t\t<1%%\r\n", ( Ë
pxTaskSètusAºay
[ 
x
 ].
ulRunTimeCou¡î
 );

4650 
pcWrôeBuf„r
 +
	`°æí
(ÖcWriteBuffer );

4655 
	`mtCOVERAGE_TEST_MARKER
();

4660 
	`vP‹tFªe
–
pxTaskSètusAºay
 );

4664 
	`mtCOVERAGE_TEST_MARKER
();

4666 
	}
}

4671 
TickTy≥_t
 
	$uxTaskRe£tEvítIãmVÆue
( )

4673 
TickTy≥_t
 
uxRëu∫
;

4675 
uxRëu∫
 = 
	`li°GET_LIST_ITEM_VALUE
–&–
pxCuºítTCB
->
xEvítLi°Iãm
 ) );

4679 
	`li°SET_LIST_ITEM_VALUE
–&–
pxCuºítTCB
->
xEvítLi°Iãm
 ), ( ( 
TickTy≥_t
 ) 
c⁄figMAX_PRIORITIES
 - ( TickTy≥_àËpxCuºítTCB->
uxPri‹ôy
 ) );

4681  
uxRëu∫
;

4682 
	}
}

4685 #i‡–
c⁄figUSE_MUTEXES
 == 1 )

4687 
TaskH™dÀ_t
 
	$pvTaskIn¸emítMuãxHñdCou¡
( )

4691 if–
pxCuºítTCB
 !
NULL
 )

4693 –
pxCuºítTCB
->
uxMuãxesHñd
 )++;

4696  
pxCuºítTCB
;

4697 
	}
}

4702 #i‡–
c⁄figUSE_TASK_NOTIFICATIONS
 == 1 )

4704 
uöt32_t
 
	$ulTaskGíîicNŸifyTake
–
UBa£Ty≥_t
 
uxIndexToWaô
,

4705 
Ba£Ty≥_t
 
xCÀ¨Cou¡OnExô
,

4706 
TickTy≥_t
 
xTicksToWaô
 )

4708 
uöt32_t
 
ulRëu∫
;

4710 
	`c⁄figASSERT
–
uxIndexToWaô
 < 
c⁄figTASK_NOTIFICATION_ARRAY_ENTRIES
 );

4712 
	`èskENTER_CRITICAL
();

4715 if–
pxCuºítTCB
->
ulNŸifõdVÆue
[ 
uxIndexToWaô
 ] == 0UL )

4718 
pxCuºítTCB
->
ucNŸifySèã
[ 
uxIndexToWaô
 ] = 
èskWAITING_NOTIFICATION
;

4720 if–
xTicksToWaô
 > ( 
TickTy≥_t
 ) 0 )

4722 
	`¥vAddCuºítTaskToDñayedLi°
–
xTicksToWaô
, 
pdTRUE
 );

4723 
	`åa˚TASK_NOTIFY_TAKE_BLOCK
–
uxIndexToWaô
 );

4729 
	`p‹tYIELD_WITHIN_API
();

4733 
	`mtCOVERAGE_TEST_MARKER
();

4738 
	`mtCOVERAGE_TEST_MARKER
();

4741 
	`èskEXIT_CRITICAL
();

4743 
	`èskENTER_CRITICAL
();

4745 
	`åa˚TASK_NOTIFY_TAKE
–
uxIndexToWaô
 );

4746 
ulRëu∫
 = 
pxCuºítTCB
->
ulNŸifõdVÆue
[ 
uxIndexToWaô
 ];

4748 if–
ulRëu∫
 != 0UL )

4750 if–
xCÀ¨Cou¡OnExô
 !
pdFALSE
 )

4752 
pxCuºítTCB
->
ulNŸifõdVÆue
[ 
uxIndexToWaô
 ] = 0UL;

4756 
pxCuºítTCB
->
ulNŸifõdVÆue
[ 
uxIndexToWaô
 ] = 
ulRëu∫
 - ( 
uöt32_t
 ) 1;

4761 
	`mtCOVERAGE_TEST_MARKER
();

4764 
pxCuºítTCB
->
ucNŸifySèã
[ 
uxIndexToWaô
 ] = 
èskNOT_WAITING_NOTIFICATION
;

4766 
	`èskEXIT_CRITICAL
();

4768  
ulRëu∫
;

4769 
	}
}

4774 #i‡–
c⁄figUSE_TASK_NOTIFICATIONS
 == 1 )

4776 
Ba£Ty≥_t
 
	$xTaskGíîicNŸifyWaô
–
UBa£Ty≥_t
 
uxIndexToWaô
,

4777 
uöt32_t
 
ulBôsToCÀ¨OnE¡ry
,

4778 
uöt32_t
 
ulBôsToCÀ¨OnExô
,

4779 
uöt32_t
 * 
pulNŸifiˇti⁄VÆue
,

4780 
TickTy≥_t
 
xTicksToWaô
 )

4782 
Ba£Ty≥_t
 
xRëu∫
;

4784 
	`c⁄figASSERT
–
uxIndexToWaô
 < 
c⁄figTASK_NOTIFICATION_ARRAY_ENTRIES
 );

4786 
	`èskENTER_CRITICAL
();

4789 if–
pxCuºítTCB
->
ucNŸifySèã
[ 
uxIndexToWaô
 ] !
èskNOTIFICATION_RECEIVED
 )

4794 
pxCuºítTCB
->
ulNŸifõdVÆue
[ 
uxIndexToWaô
 ] &~
ulBôsToCÀ¨OnE¡ry
;

4797 
pxCuºítTCB
->
ucNŸifySèã
[ 
uxIndexToWaô
 ] = 
èskWAITING_NOTIFICATION
;

4799 if–
xTicksToWaô
 > ( 
TickTy≥_t
 ) 0 )

4801 
	`¥vAddCuºítTaskToDñayedLi°
–
xTicksToWaô
, 
pdTRUE
 );

4802 
	`åa˚TASK_NOTIFY_WAIT_BLOCK
–
uxIndexToWaô
 );

4808 
	`p‹tYIELD_WITHIN_API
();

4812 
	`mtCOVERAGE_TEST_MARKER
();

4817 
	`mtCOVERAGE_TEST_MARKER
();

4820 
	`èskEXIT_CRITICAL
();

4822 
	`èskENTER_CRITICAL
();

4824 
	`åa˚TASK_NOTIFY_WAIT
–
uxIndexToWaô
 );

4826 if–
pulNŸifiˇti⁄VÆue
 !
NULL
 )

4830 *
pulNŸifiˇti⁄VÆue
 = 
pxCuºítTCB
->
ulNŸifõdVÆue
[ 
uxIndexToWaô
 ];

4837 if–
pxCuºítTCB
->
ucNŸifySèã
[ 
uxIndexToWaô
 ] !
èskNOTIFICATION_RECEIVED
 )

4840 
xRëu∫
 = 
pdFALSE
;

4846 
pxCuºítTCB
->
ulNŸifõdVÆue
[ 
uxIndexToWaô
 ] &~
ulBôsToCÀ¨OnExô
;

4847 
xRëu∫
 = 
pdTRUE
;

4850 
pxCuºítTCB
->
ucNŸifySèã
[ 
uxIndexToWaô
 ] = 
èskNOT_WAITING_NOTIFICATION
;

4852 
	`èskEXIT_CRITICAL
();

4854  
xRëu∫
;

4855 
	}
}

4860 #i‡–
c⁄figUSE_TASK_NOTIFICATIONS
 == 1 )

4862 
Ba£Ty≥_t
 
	$xTaskGíîicNŸify
–
TaskH™dÀ_t
 
xTaskToNŸify
,

4863 
UBa£Ty≥_t
 
uxIndexToNŸify
,

4864 
uöt32_t
 
ulVÆue
,

4865 
eNŸifyA˘i⁄
 
eA˘i⁄
,

4866 
uöt32_t
 * 
pulPªviousNŸifiˇti⁄VÆue
 )

4868 
TCB_t
 * 
pxTCB
;

4869 
Ba£Ty≥_t
 
xRëu∫
 = 
pdPASS
;

4870 
uöt8_t
 
ucOrigöÆNŸifySèã
;

4872 
	`c⁄figASSERT
–
uxIndexToNŸify
 < 
c⁄figTASK_NOTIFICATION_ARRAY_ENTRIES
 );

4873 
	`c⁄figASSERT
–
xTaskToNŸify
 );

4874 
pxTCB
 = 
xTaskToNŸify
;

4876 
	`èskENTER_CRITICAL
();

4878 if–
pulPªviousNŸifiˇti⁄VÆue
 !
NULL
 )

4880 *
pulPªviousNŸifiˇti⁄VÆue
 = 
pxTCB
->
ulNŸifõdVÆue
[ 
uxIndexToNŸify
 ];

4883 
ucOrigöÆNŸifySèã
 = 
pxTCB
->
ucNŸifySèã
[ 
uxIndexToNŸify
 ];

4885 
pxTCB
->
ucNŸifySèã
[ 
uxIndexToNŸify
 ] = 
èskNOTIFICATION_RECEIVED
;

4887  
eA˘i⁄
 )

4889 
eSëBôs
:

4890 
pxTCB
->
ulNŸifõdVÆue
[ 
uxIndexToNŸify
 ] |
ulVÆue
;

4893 
eIn¸emít
:

4894 –
pxTCB
->
ulNŸifõdVÆue
[ 
uxIndexToNŸify
 ] )++;

4897 
eSëVÆueWôhOvîwrôe
:

4898 
pxTCB
->
ulNŸifõdVÆue
[ 
uxIndexToNŸify
 ] = 
ulVÆue
;

4901 
eSëVÆueWôhoutOvîwrôe
:

4903 if–
ucOrigöÆNŸifySèã
 !
èskNOTIFICATION_RECEIVED
 )

4905 
pxTCB
->
ulNŸifõdVÆue
[ 
uxIndexToNŸify
 ] = 
ulVÆue
;

4910 
xRëu∫
 = 
pdFAIL
;

4915 
eNoA˘i⁄
:

4926 
	`c⁄figASSERT
–
xTickCou¡
 =–
TickTy≥_t
 ) 0 );

4931 
	`åa˚TASK_NOTIFY
–
uxIndexToNŸify
 );

4935 if–
ucOrigöÆNŸifySèã
 =
èskWAITING_NOTIFICATION
 )

4937 
	`li°REMOVE_ITEM
–&–
pxTCB
->
xSèãLi°Iãm
 ) );

4938 
	`¥vAddTaskToRódyLi°
–
pxTCB
 );

4941 
	`c⁄figASSERT
–
	`li°LIST_ITEM_CONTAINER
–&–
pxTCB
->
xEvítLi°Iãm
 ) ) =
NULL
 );

4943 #i‡–
c⁄figUSE_TICKLESS_IDLE
 != 0 )

4955 
	`¥vRe£tNextTaskUnblockTime
();

4959 if–
pxTCB
->
uxPri‹ôy
 > 
pxCuºítTCB
->uxPriority )

4963 
	`èskYIELD_IF_USING_PREEMPTION
();

4967 
	`mtCOVERAGE_TEST_MARKER
();

4972 
	`mtCOVERAGE_TEST_MARKER
();

4975 
	`èskEXIT_CRITICAL
();

4977  
xRëu∫
;

4978 
	}
}

4983 #i‡–
c⁄figUSE_TASK_NOTIFICATIONS
 == 1 )

4985 
Ba£Ty≥_t
 
	$xTaskGíîicNŸifyFromISR
–
TaskH™dÀ_t
 
xTaskToNŸify
,

4986 
UBa£Ty≥_t
 
uxIndexToNŸify
,

4987 
uöt32_t
 
ulVÆue
,

4988 
eNŸifyA˘i⁄
 
eA˘i⁄
,

4989 
uöt32_t
 * 
pulPªviousNŸifiˇti⁄VÆue
,

4990 
Ba£Ty≥_t
 * 
pxHighîPri‹ôyTaskWokí
 )

4992 
TCB_t
 * 
pxTCB
;

4993 
uöt8_t
 
ucOrigöÆNŸifySèã
;

4994 
Ba£Ty≥_t
 
xRëu∫
 = 
pdPASS
;

4995 
UBa£Ty≥_t
 
uxSavedI¡îru±Sètus
;

4997 
	`c⁄figASSERT
–
xTaskToNŸify
 );

4998 
	`c⁄figASSERT
–
uxIndexToNŸify
 < 
c⁄figTASK_NOTIFICATION_ARRAY_ENTRIES
 );

5016 
	`p‹tASSERT_IF_INTERRUPT_PRIORITY_INVALID
();

5018 
pxTCB
 = 
xTaskToNŸify
;

5020 
uxSavedI¡îru±Sètus
 = 
	`p‹tSET_INTERRUPT_MASK_FROM_ISR
();

5022 if–
pulPªviousNŸifiˇti⁄VÆue
 !
NULL
 )

5024 *
pulPªviousNŸifiˇti⁄VÆue
 = 
pxTCB
->
ulNŸifõdVÆue
[ 
uxIndexToNŸify
 ];

5027 
ucOrigöÆNŸifySèã
 = 
pxTCB
->
ucNŸifySèã
[ 
uxIndexToNŸify
 ];

5028 
pxTCB
->
ucNŸifySèã
[ 
uxIndexToNŸify
 ] = 
èskNOTIFICATION_RECEIVED
;

5030  
eA˘i⁄
 )

5032 
eSëBôs
:

5033 
pxTCB
->
ulNŸifõdVÆue
[ 
uxIndexToNŸify
 ] |
ulVÆue
;

5036 
eIn¸emít
:

5037 –
pxTCB
->
ulNŸifõdVÆue
[ 
uxIndexToNŸify
 ] )++;

5040 
eSëVÆueWôhOvîwrôe
:

5041 
pxTCB
->
ulNŸifõdVÆue
[ 
uxIndexToNŸify
 ] = 
ulVÆue
;

5044 
eSëVÆueWôhoutOvîwrôe
:

5046 if–
ucOrigöÆNŸifySèã
 !
èskNOTIFICATION_RECEIVED
 )

5048 
pxTCB
->
ulNŸifõdVÆue
[ 
uxIndexToNŸify
 ] = 
ulVÆue
;

5053 
xRëu∫
 = 
pdFAIL
;

5058 
eNoA˘i⁄
:

5069 
	`c⁄figASSERT
–
xTickCou¡
 =–
TickTy≥_t
 ) 0 );

5073 
	`åa˚TASK_NOTIFY_FROM_ISR
–
uxIndexToNŸify
 );

5077 if–
ucOrigöÆNŸifySèã
 =
èskWAITING_NOTIFICATION
 )

5080 
	`c⁄figASSERT
–
	`li°LIST_ITEM_CONTAINER
–&–
pxTCB
->
xEvítLi°Iãm
 ) ) =
NULL
 );

5082 if–
uxScheduÀrSu•íded
 =–
UBa£Ty≥_t
 ) 
pdFALSE
 )

5084 
	`li°REMOVE_ITEM
–&–
pxTCB
->
xSèãLi°Iãm
 ) );

5085 
	`¥vAddTaskToRódyLi°
–
pxTCB
 );

5091 
	`li°INSERT_END
–&–
xPídögRódyLi°
 ), &–
pxTCB
->
xEvítLi°Iãm
 ) );

5094 if–
pxTCB
->
uxPri‹ôy
 > 
pxCuºítTCB
->uxPriority )

5098 if–
pxHighîPri‹ôyTaskWokí
 !
NULL
 )

5100 *
pxHighîPri‹ôyTaskWokí
 = 
pdTRUE
;

5106 
xYõldPídög
 = 
pdTRUE
;

5110 
	`mtCOVERAGE_TEST_MARKER
();

5114 
	`p‹tCLEAR_INTERRUPT_MASK_FROM_ISR
–
uxSavedI¡îru±Sètus
 );

5116  
xRëu∫
;

5117 
	}
}

5122 #i‡–
c⁄figUSE_TASK_NOTIFICATIONS
 == 1 )

5124 
	$vTaskGíîicNŸifyGiveFromISR
–
TaskH™dÀ_t
 
xTaskToNŸify
,

5125 
UBa£Ty≥_t
 
uxIndexToNŸify
,

5126 
Ba£Ty≥_t
 * 
pxHighîPri‹ôyTaskWokí
 )

5128 
TCB_t
 * 
pxTCB
;

5129 
uöt8_t
 
ucOrigöÆNŸifySèã
;

5130 
UBa£Ty≥_t
 
uxSavedI¡îru±Sètus
;

5132 
	`c⁄figASSERT
–
xTaskToNŸify
 );

5133 
	`c⁄figASSERT
–
uxIndexToNŸify
 < 
c⁄figTASK_NOTIFICATION_ARRAY_ENTRIES
 );

5151 
	`p‹tASSERT_IF_INTERRUPT_PRIORITY_INVALID
();

5153 
pxTCB
 = 
xTaskToNŸify
;

5155 
uxSavedI¡îru±Sètus
 = 
	`p‹tSET_INTERRUPT_MASK_FROM_ISR
();

5157 
ucOrigöÆNŸifySèã
 = 
pxTCB
->
ucNŸifySèã
[ 
uxIndexToNŸify
 ];

5158 
pxTCB
->
ucNŸifySèã
[ 
uxIndexToNŸify
 ] = 
èskNOTIFICATION_RECEIVED
;

5162 –
pxTCB
->
ulNŸifõdVÆue
[ 
uxIndexToNŸify
 ] )++;

5164 
	`åa˚TASK_NOTIFY_GIVE_FROM_ISR
–
uxIndexToNŸify
 );

5168 if–
ucOrigöÆNŸifySèã
 =
èskWAITING_NOTIFICATION
 )

5171 
	`c⁄figASSERT
–
	`li°LIST_ITEM_CONTAINER
–&–
pxTCB
->
xEvítLi°Iãm
 ) ) =
NULL
 );

5173 if–
uxScheduÀrSu•íded
 =–
UBa£Ty≥_t
 ) 
pdFALSE
 )

5175 
	`li°REMOVE_ITEM
–&–
pxTCB
->
xSèãLi°Iãm
 ) );

5176 
	`¥vAddTaskToRódyLi°
–
pxTCB
 );

5182 
	`li°INSERT_END
–&–
xPídögRódyLi°
 ), &–
pxTCB
->
xEvítLi°Iãm
 ) );

5185 if–
pxTCB
->
uxPri‹ôy
 > 
pxCuºítTCB
->uxPriority )

5189 if–
pxHighîPri‹ôyTaskWokí
 !
NULL
 )

5191 *
pxHighîPri‹ôyTaskWokí
 = 
pdTRUE
;

5197 
xYõldPídög
 = 
pdTRUE
;

5201 
	`mtCOVERAGE_TEST_MARKER
();

5205 
	`p‹tCLEAR_INTERRUPT_MASK_FROM_ISR
–
uxSavedI¡îru±Sètus
 );

5206 
	}
}

5211 #i‡–
c⁄figUSE_TASK_NOTIFICATIONS
 == 1 )

5213 
Ba£Ty≥_t
 
	$xTaskGíîicNŸifySèãCÀ¨
–
TaskH™dÀ_t
 
xTask
,

5214 
UBa£Ty≥_t
 
uxIndexToCÀ¨
 )

5216 
TCB_t
 * 
pxTCB
;

5217 
Ba£Ty≥_t
 
xRëu∫
;

5219 
	`c⁄figASSERT
–
uxIndexToCÀ¨
 < 
c⁄figTASK_NOTIFICATION_ARRAY_ENTRIES
 );

5223 
pxTCB
 = 
	`¥vGëTCBFromH™dÀ
–
xTask
 );

5225 
	`èskENTER_CRITICAL
();

5227 if–
pxTCB
->
ucNŸifySèã
[ 
uxIndexToCÀ¨
 ] =
èskNOTIFICATION_RECEIVED
 )

5229 
pxTCB
->
ucNŸifySèã
[ 
uxIndexToCÀ¨
 ] = 
èskNOT_WAITING_NOTIFICATION
;

5230 
xRëu∫
 = 
pdPASS
;

5234 
xRëu∫
 = 
pdFAIL
;

5237 
	`èskEXIT_CRITICAL
();

5239  
xRëu∫
;

5240 
	}
}

5245 #i‡–
c⁄figUSE_TASK_NOTIFICATIONS
 == 1 )

5247 
uöt32_t
 
	$ulTaskGíîicNŸifyVÆueCÀ¨
–
TaskH™dÀ_t
 
xTask
,

5248 
UBa£Ty≥_t
 
uxIndexToCÀ¨
,

5249 
uöt32_t
 
ulBôsToCÀ¨
 )

5251 
TCB_t
 * 
pxTCB
;

5252 
uöt32_t
 
ulRëu∫
;

5256 
pxTCB
 = 
	`¥vGëTCBFromH™dÀ
–
xTask
 );

5258 
	`èskENTER_CRITICAL
();

5262 
ulRëu∫
 = 
pxTCB
->
ulNŸifõdVÆue
[ 
uxIndexToCÀ¨
 ];

5263 
pxTCB
->
ulNŸifõdVÆue
[ 
uxIndexToCÀ¨
 ] &~
ulBôsToCÀ¨
;

5265 
	`èskEXIT_CRITICAL
();

5267  
ulRëu∫
;

5268 
	}
}

5273 #i‡––
c⁄figGENERATE_RUN_TIME_STATS
 =1 ) && ( 
INCLUDE_xTaskGëIdÀTaskH™dÀ
 == 1 ) )

5275 
c⁄figRUN_TIME_COUNTER_TYPE
 
	$ulTaskGëIdÀRunTimeCou¡î
( )

5277  
xIdÀTaskH™dÀ
->
ulRunTimeCou¡î
;

5278 
	}
}

5283 #i‡––
c⁄figGENERATE_RUN_TIME_STATS
 =1 ) && ( 
INCLUDE_xTaskGëIdÀTaskH™dÀ
 == 1 ) )

5285 
c⁄figRUN_TIME_COUNTER_TYPE
 
	$ulTaskGëIdÀRunTimePî˚¡
( )

5287 
c⁄figRUN_TIME_COUNTER_TYPE
 
ulTŸÆTime
, 
ulRëu∫
;

5289 
ulTŸÆTime
 = 
	`p‹tGET_RUN_TIME_COUNTER_VALUE
();

5292 
ulTŸÆTime
 /–
c⁄figRUN_TIME_COUNTER_TYPE
 ) 100;

5295 if–
ulTŸÆTime
 > ( 
c⁄figRUN_TIME_COUNTER_TYPE
 ) 0 )

5297 
ulRëu∫
 = 
xIdÀTaskH™dÀ
->
ulRunTimeCou¡î
 / 
ulTŸÆTime
;

5301 
ulRëu∫
 = 0;

5304  
ulRëu∫
;

5305 
	}
}

5310 
	$¥vAddCuºítTaskToDñayedLi°
–
TickTy≥_t
 
xTicksToWaô
,

5311 c⁄° 
Ba£Ty≥_t
 
xC™BlockIndeföôñy
 )

5313 
TickTy≥_t
 
xTimeToWake
;

5314 c⁄° 
TickTy≥_t
 
xC⁄°TickCou¡
 = 
xTickCou¡
;

5316 #i‡–
INCLUDE_xTaskAb‹tDñay
 == 1 )

5321 
pxCuºítTCB
->
ucDñayAb‹ãd
 = 
pdFALSE
;

5327 if–
	`uxLi°Remove
–&–
pxCuºítTCB
->
xSèãLi°Iãm
 ) ) =–
UBa£Ty≥_t
 ) 0 )

5331 
	`p‹tRESET_READY_PRIORITY
–
pxCuºítTCB
->
uxPri‹ôy
, 
uxT›RódyPri‹ôy
 );

5335 
	`mtCOVERAGE_TEST_MARKER
();

5338 #i‡–
INCLUDE_vTaskSu•íd
 == 1 )

5340 if––
xTicksToWaô
 =
p‹tMAX_DELAY
 ) && ( 
xC™BlockIndeföôñy
 !
pdFALSE
 ) )

5345 
	`li°INSERT_END
–&
xSu•ídedTaskLi°
, &–
pxCuºítTCB
->
xSèãLi°Iãm
 ) );

5352 
xTimeToWake
 = 
xC⁄°TickCou¡
 + 
xTicksToWaô
;

5355 
	`li°SET_LIST_ITEM_VALUE
–&–
pxCuºítTCB
->
xSèãLi°Iãm
 ), 
xTimeToWake
 );

5357 if–
xTimeToWake
 < 
xC⁄°TickCou¡
 )

5361 
	`vLi°In£π
–
pxOvîÊowDñayedTaskLi°
, &–
pxCuºítTCB
->
xSèãLi°Iãm
 ) );

5367 
	`vLi°In£π
–
pxDñayedTaskLi°
, &–
pxCuºítTCB
->
xSèãLi°Iãm
 ) );

5372 if–
xTimeToWake
 < 
xNextTaskUnblockTime
 )

5374 
xNextTaskUnblockTime
 = 
xTimeToWake
;

5378 
	`mtCOVERAGE_TEST_MARKER
();

5388 
xTimeToWake
 = 
xC⁄°TickCou¡
 + 
xTicksToWaô
;

5391 
	`li°SET_LIST_ITEM_VALUE
–&–
pxCuºítTCB
->
xSèãLi°Iãm
 ), 
xTimeToWake
 );

5393 if–
xTimeToWake
 < 
xC⁄°TickCou¡
 )

5396 
	`vLi°In£π
–
pxOvîÊowDñayedTaskLi°
, &–
pxCuºítTCB
->
xSèãLi°Iãm
 ) );

5401 
	`vLi°In£π
–
pxDñayedTaskLi°
, &–
pxCuºítTCB
->
xSèãLi°Iãm
 ) );

5406 if–
xTimeToWake
 < 
xNextTaskUnblockTime
 )

5408 
xNextTaskUnblockTime
 = 
xTimeToWake
;

5412 
	`mtCOVERAGE_TEST_MARKER
();

5417 –Ë
xC™BlockIndeföôñy
;

5420 
	}
}

5426 #ifde‡
FREERTOS_MODULE_TEST


5427 
	~"èsks_ã°_ac˚ss_fun˘i⁄s.h
"

5431 #i‡–
c⁄figINCLUDE_FREERTOS_TASK_C_ADDITIONS_H
 == 1 )

5433 
	~"‰ìπos_èsks_c_addôi⁄s.h
"

5435 #ifde‡
FREERTOS_TASKS_C_ADDITIONS_INIT


5436 
	$‰ìπos_èsks_c_addôi⁄s_öô
( )

5438 
	`FREERTOS_TASKS_C_ADDITIONS_INIT
();

5439 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\timers.c

30 
	~<°dlib.h
>

35 
	#MPU_WRAPPERS_INCLUDED_FROM_API_FILE


	)

37 
	~"FªeRTOS.h
"

38 
	~"èsk.h
"

39 
	~"queue.h
"

40 
	~"timîs.h
"

42 #i‡–
INCLUDE_xTimîPídFun˘i⁄CÆl
 =1 ) && ( 
c⁄figUSE_TIMERS
 == 0 )

43 #îr‹ 
c⁄figUSE_TIMERS
 
mu°
 
be
 
£t
 
to
 1Åÿ
make
 
the
 
xTimîPídFun˘i⁄CÆl
(Ë
fun˘i⁄
 
avaûabÀ
.

50 #unde‡
MPU_WRAPPERS_INCLUDED_FROM_API_FILE


57 #i‡–
c⁄figUSE_TIMERS
 == 1 )

60 
	#tmrNO_DELAY
 ( ( 
TickTy≥_t
 ) 0U )

	)

61 
	#tmrMAX_TIME_BEFORE_OVERFLOW
 ( ( 
TickTy≥_t
 ) -1 )

	)

65 #i‚de‡
c⁄figTIMER_SERVICE_TASK_NAME


66 
	#c⁄figTIMER_SERVICE_TASK_NAME
 "Tm∏Svc"

	)

70 
	#tmrSTATUS_IS_ACTIVE
 ( ( 
uöt8_t
 ) 0x01 )

	)

71 
	#tmrSTATUS_IS_STATICALLY_ALLOCATED
 ( ( 
uöt8_t
 ) 0x02 )

	)

72 
	#tmrSTATUS_IS_AUTORELOAD
 ( ( 
uöt8_t
 ) 0x04 )

	)

75 
	stmrTimîC⁄åﬁ


77 c⁄° * 
	mpcTimîName
;

78 
Li°Iãm_t
 
	mxTimîLi°Iãm
;

79 
TickTy≥_t
 
	mxTimîPîiodInTicks
;

80 * 
	mpvTimîID
;

81 
TimîCÆlbackFun˘i⁄_t
 
	mpxCÆlbackFun˘i⁄
;

82 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

83 
UBa£Ty≥_t
 
	muxTimîNumbî
;

85 
uöt8_t
 
	mucSètus
;

86 } 
	txTIMER
;

90 
xTIMER
 
	tTimî_t
;

97 
	stmrTimîP¨amëîs


99 
TickTy≥_t
 
	mxMesßgeVÆue
;

100 
Timî_t
 * 
	mpxTimî
;

101 } 
	tTimîP¨amëî_t
;

104 
	stmrCÆlbackP¨amëîs


106 
PídedFun˘i⁄_t
 
	mpxCÆlbackFun˘i⁄
;

107 * 
	mpvP¨amëî1
;

108 
uöt32_t
 
	mulP¨amëî2
;

109 } 
	tCÆlbackP¨amëîs_t
;

113 
	stmrTimîQueueMesßge


115 
Ba£Ty≥_t
 
	mxMesßgeID
;

118 
TimîP¨amëî_t
 
	mxTimîP¨amëîs
;

122 #i‡–
INCLUDE_xTimîPídFun˘i⁄CÆl
 == 1 )

123 
CÆlbackP¨amëîs_t
 
	mxCÆlbackP¨amëîs
;

125 } 
	mu
;

126 } 
	tD´m⁄TaskMesßge_t
;

137 
PRIVILEGED_DATA
 
Li°_t
 
	gxA˘iveTimîLi°1
;

138 
PRIVILEGED_DATA
 
Li°_t
 
	gxA˘iveTimîLi°2
;

139 
PRIVILEGED_DATA
 
Li°_t
 * 
	gpxCuºítTimîLi°
;

140 
PRIVILEGED_DATA
 
Li°_t
 * 
	gpxOvîÊowTimîLi°
;

143 
PRIVILEGED_DATA
 
QueueH™dÀ_t
 
	gxTimîQueue
 = 
NULL
;

144 
PRIVILEGED_DATA
 
TaskH™dÀ_t
 
	gxTimîTaskH™dÀ
 = 
NULL
;

154 
	$¥vCheckF‹VÆidLi°AndQueue
–Ë
PRIVILEGED_FUNCTION
;

161 
	$p‹tTASK_FUNCTION_PROTO
–
¥vTimîTask
, 
pvP¨amëîs
 ) 
PRIVILEGED_FUNCTION
;

167 
	$¥vPro˚ssRe˚ivedComm™ds
–Ë
PRIVILEGED_FUNCTION
;

173 
Ba£Ty≥_t
 
	$¥vIn£πTimîInA˘iveLi°
–
Timî_t
 * c⁄° 
pxTimî
,

174 c⁄° 
TickTy≥_t
 
xNextExpúyTime
,

175 c⁄° 
TickTy≥_t
 
xTimeNow
,

176 c⁄° 
TickTy≥_t
 
xComm™dTime
 ) 
PRIVILEGED_FUNCTION
;

183 
	$¥vRñﬂdTimî
–
Timî_t
 * c⁄° 
pxTimî
,

184 
TickTy≥_t
 
xExpúedTime
,

185 c⁄° 
TickTy≥_t
 
xTimeNow
 ) 
PRIVILEGED_FUNCTION
;

191 
	$¥vPro˚ssExpúedTimî
–c⁄° 
TickTy≥_t
 
xNextExpúeTime
,

192 c⁄° 
TickTy≥_t
 
xTimeNow
 ) 
PRIVILEGED_FUNCTION
;

198 
	$¥vSwôchTimîLi°s
–Ë
PRIVILEGED_FUNCTION
;

204 
TickTy≥_t
 
	$¥vSam∂eTimeNow
–
Ba£Ty≥_t
 * c⁄° 
pxTimîLi°sWîeSwôched
 ) 
PRIVILEGED_FUNCTION
;

212 
TickTy≥_t
 
	$¥vGëNextExpúeTime
–
Ba£Ty≥_t
 * c⁄° 
pxLi°WasEm±y
 ) 
PRIVILEGED_FUNCTION
;

218 
	$¥vPro˚ssTimîOrBlockTask
–c⁄° 
TickTy≥_t
 
xNextExpúeTime
,

219 
Ba£Ty≥_t
 
xLi°WasEm±y
 ) 
PRIVILEGED_FUNCTION
;

225 
	$¥vInôüli£NewTimî
–c⁄° * c⁄° 
pcTimîName
,

226 c⁄° 
TickTy≥_t
 
xTimîPîiodInTicks
,

227 c⁄° 
UBa£Ty≥_t
 
uxAutoRñﬂd
,

228 * c⁄° 
pvTimîID
,

229 
TimîCÆlbackFun˘i⁄_t
 
pxCÆlbackFun˘i⁄
,

230 
Timî_t
 * 
pxNewTimî
 ) 
PRIVILEGED_FUNCTION
;

233 
Ba£Ty≥_t
 
	$xTimîCª©eTimîTask
( )

235 
Ba£Ty≥_t
 
xRëu∫
 = 
pdFAIL
;

241 
	`¥vCheckF‹VÆidLi°AndQueue
();

243 if–
xTimîQueue
 !
NULL
 )

245 #i‡–
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 )

247 
SèticTask_t
 * 
pxTimîTaskTCBBuf„r
 = 
NULL
;

248 
SèckTy≥_t
 * 
pxTimîTaskSèckBuf„r
 = 
NULL
;

249 
uöt32_t
 
ulTimîTaskSèckSize
;

251 
	`vAµliˇti⁄GëTimîTaskMem‹y
–&
pxTimîTaskTCBBuf„r
, &
pxTimîTaskSèckBuf„r
, &
ulTimîTaskSèckSize
 );

252 
xTimîTaskH™dÀ
 = 
	`xTaskCª©eSètic
–
¥vTimîTask
,

253 
c⁄figTIMER_SERVICE_TASK_NAME
,

254 
ulTimîTaskSèckSize
,

255 
NULL
,

256 ––
UBa£Ty≥_t
 ) 
c⁄figTIMER_TASK_PRIORITY
 ) | 
p‹tPRIVILEGE_BIT
,

257 
pxTimîTaskSèckBuf„r
,

258 
pxTimîTaskTCBBuf„r
 );

260 if–
xTimîTaskH™dÀ
 !
NULL
 )

262 
xRëu∫
 = 
pdPASS
;

267 
xRëu∫
 = 
	`xTaskCª©e
–
¥vTimîTask
,

268 
c⁄figTIMER_SERVICE_TASK_NAME
,

269 
c⁄figTIMER_TASK_STACK_DEPTH
,

270 
NULL
,

271 ––
UBa£Ty≥_t
 ) 
c⁄figTIMER_TASK_PRIORITY
 ) | 
p‹tPRIVILEGE_BIT
,

272 &
xTimîTaskH™dÀ
 );

278 
	`mtCOVERAGE_TEST_MARKER
();

281 
	`c⁄figASSERT
–
xRëu∫
 );

282  
xRëu∫
;

283 
	}
}

286 #i‡–
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 )

288 
TimîH™dÀ_t
 
	$xTimîCª©e
–c⁄° * c⁄° 
pcTimîName
,

289 c⁄° 
TickTy≥_t
 
xTimîPîiodInTicks
,

290 c⁄° 
UBa£Ty≥_t
 
uxAutoRñﬂd
,

291 * c⁄° 
pvTimîID
,

292 
TimîCÆlbackFun˘i⁄_t
 
pxCÆlbackFun˘i⁄
 )

294 
Timî_t
 * 
pxNewTimî
;

296 
pxNewTimî
 = ( 
Timî_t
 * ) 
	`pvP‹tMÆloc
( ( Timer_t ) );

298 if–
pxNewTimî
 !
NULL
 )

303 
pxNewTimî
->
ucSètus
 = 0x00;

304 
	`¥vInôüli£NewTimî
–
pcTimîName
, 
xTimîPîiodInTicks
, 
uxAutoRñﬂd
, 
pvTimîID
, 
pxCÆlbackFun˘i⁄
, 
pxNewTimî
 );

307  
pxNewTimî
;

308 
	}
}

313 #i‡–
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 )

315 
TimîH™dÀ_t
 
	$xTimîCª©eSètic
–c⁄° * c⁄° 
pcTimîName
,

316 c⁄° 
TickTy≥_t
 
xTimîPîiodInTicks
,

317 c⁄° 
UBa£Ty≥_t
 
uxAutoRñﬂd
,

318 * c⁄° 
pvTimîID
,

319 
TimîCÆlbackFun˘i⁄_t
 
pxCÆlbackFun˘i⁄
,

320 
SèticTimî_t
 * 
pxTimîBuf„r
 )

322 
Timî_t
 * 
pxNewTimî
;

324 #i‡–
c⁄figASSERT_DEFINED
 == 1 )

329 vﬁ©ûê
size_t
 
xSize
 = –
SèticTimî_t
 );

330 
	`c⁄figASSERT
–
xSize
 =–
Timî_t
 ) );

331 –Ë
xSize
;

336 
	`c⁄figASSERT
–
pxTimîBuf„r
 );

337 
pxNewTimî
 = ( 
Timî_t
 * ) 
pxTimîBuf„r
;

339 if–
pxNewTimî
 !
NULL
 )

344 
pxNewTimî
->
ucSètus
 = 
tmrSTATUS_IS_STATICALLY_ALLOCATED
;

346 
	`¥vInôüli£NewTimî
–
pcTimîName
, 
xTimîPîiodInTicks
, 
uxAutoRñﬂd
, 
pvTimîID
, 
pxCÆlbackFun˘i⁄
, 
pxNewTimî
 );

349  
pxNewTimî
;

350 
	}
}

355 
	$¥vInôüli£NewTimî
–c⁄° * c⁄° 
pcTimîName
,

356 c⁄° 
TickTy≥_t
 
xTimîPîiodInTicks
,

357 c⁄° 
UBa£Ty≥_t
 
uxAutoRñﬂd
,

358 * c⁄° 
pvTimîID
,

359 
TimîCÆlbackFun˘i⁄_t
 
pxCÆlbackFun˘i⁄
,

360 
Timî_t
 * 
pxNewTimî
 )

363 
	`c⁄figASSERT
––
xTimîPîiodInTicks
 > 0 ) );

367 
	`¥vCheckF‹VÆidLi°AndQueue
();

371 
pxNewTimî
->
pcTimîName
 =ÖcTimerName;

372 
pxNewTimî
->
xTimîPîiodInTicks
 = xTimerPeriodInTicks;

373 
pxNewTimî
->
pvTimîID
 =ÖvTimerID;

374 
pxNewTimî
->
pxCÆlbackFun˘i⁄
 =ÖxCallbackFunction;

375 
	`vLi°Inôüli£Iãm
–&–
pxNewTimî
->
xTimîLi°Iãm
 ) );

377 if–
uxAutoRñﬂd
 !
pdFALSE
 )

379 
pxNewTimî
->
ucSètus
 |
tmrSTATUS_IS_AUTORELOAD
;

382 
	`åa˚TIMER_CREATE
–
pxNewTimî
 );

383 
	}
}

386 
Ba£Ty≥_t
 
	$xTimîGíîicComm™d
–
TimîH™dÀ_t
 
xTimî
,

387 c⁄° 
Ba£Ty≥_t
 
xComm™dID
,

388 c⁄° 
TickTy≥_t
 
xO±i⁄ÆVÆue
,

389 
Ba£Ty≥_t
 * c⁄° 
pxHighîPri‹ôyTaskWokí
,

390 c⁄° 
TickTy≥_t
 
xTicksToWaô
 )

392 
Ba£Ty≥_t
 
xRëu∫
 = 
pdFAIL
;

393 
D´m⁄TaskMesßge_t
 
xMesßge
;

395 
	`c⁄figASSERT
–
xTimî
 );

399 if–
xTimîQueue
 !
NULL
 )

402 
xMesßge
.
xMesßgeID
 = 
xComm™dID
;

403 
xMesßge
.
u
.
xTimîP¨amëîs
.
xMesßgeVÆue
 = 
xO±i⁄ÆVÆue
;

404 
xMesßge
.
u
.
xTimîP¨amëîs
.
pxTimî
 = 
xTimî
;

406 if–
xComm™dID
 < 
tmrFIRST_FROM_ISR_COMMAND
 )

408 if–
	`xTaskGëScheduÀrSèã
(Ë=
èskSCHEDULER_RUNNING
 )

410 
xRëu∫
 = 
	`xQueueSídToBack
–
xTimîQueue
, &
xMesßge
, 
xTicksToWaô
 );

414 
xRëu∫
 = 
	`xQueueSídToBack
–
xTimîQueue
, &
xMesßge
, 
tmrNO_DELAY
 );

419 
xRëu∫
 = 
	`xQueueSídToBackFromISR
–
xTimîQueue
, &
xMesßge
, 
pxHighîPri‹ôyTaskWokí
 );

422 
	`åa˚TIMER_COMMAND_SEND
–
xTimî
, 
xComm™dID
, 
xO±i⁄ÆVÆue
, 
xRëu∫
 );

426 
	`mtCOVERAGE_TEST_MARKER
();

429  
xRëu∫
;

430 
	}
}

433 
TaskH™dÀ_t
 
	$xTimîGëTimîD´m⁄TaskH™dÀ
( )

437 
	`c⁄figASSERT
––
xTimîTaskH™dÀ
 !
NULL
 ) );

438  
xTimîTaskH™dÀ
;

439 
	}
}

442 
TickTy≥_t
 
	$xTimîGëPîiod
–
TimîH™dÀ_t
 
xTimî
 )

444 
Timî_t
 * 
pxTimî
 = 
xTimî
;

446 
	`c⁄figASSERT
–
xTimî
 );

447  
pxTimî
->
xTimîPîiodInTicks
;

448 
	}
}

451 
	$vTimîSëRñﬂdMode
–
TimîH™dÀ_t
 
xTimî
,

452 c⁄° 
UBa£Ty≥_t
 
uxAutoRñﬂd
 )

454 
Timî_t
 * 
pxTimî
 = 
xTimî
;

456 
	`c⁄figASSERT
–
xTimî
 );

457 
	`èskENTER_CRITICAL
();

459 if–
uxAutoRñﬂd
 !
pdFALSE
 )

461 
pxTimî
->
ucSètus
 |
tmrSTATUS_IS_AUTORELOAD
;

465 
pxTimî
->
ucSètus
 &––
uöt8_t
 ) ~
tmrSTATUS_IS_AUTORELOAD
 );

468 
	`èskEXIT_CRITICAL
();

469 
	}
}

472 
UBa£Ty≥_t
 
	$uxTimîGëRñﬂdMode
–
TimîH™dÀ_t
 
xTimî
 )

474 
Timî_t
 * 
pxTimî
 = 
xTimî
;

475 
UBa£Ty≥_t
 
uxRëu∫
;

477 
	`c⁄figASSERT
–
xTimî
 );

478 
	`èskENTER_CRITICAL
();

480 if––
pxTimî
->
ucSètus
 & 
tmrSTATUS_IS_AUTORELOAD
 ) == 0 )

483 
uxRëu∫
 = ( 
UBa£Ty≥_t
 ) 
pdFALSE
;

488 
uxRëu∫
 = ( 
UBa£Ty≥_t
 ) 
pdTRUE
;

491 
	`èskEXIT_CRITICAL
();

493  
uxRëu∫
;

494 
	}
}

497 
TickTy≥_t
 
	$xTimîGëExpúyTime
–
TimîH™dÀ_t
 
xTimî
 )

499 
Timî_t
 * 
pxTimî
 = 
xTimî
;

500 
TickTy≥_t
 
xRëu∫
;

502 
	`c⁄figASSERT
–
xTimî
 );

503 
xRëu∫
 = 
	`li°GET_LIST_ITEM_VALUE
–&–
pxTimî
->
xTimîLi°Iãm
 ) );

504  
xRëu∫
;

505 
	}
}

508 c⁄° * 
	$pcTimîGëName
–
TimîH™dÀ_t
 
xTimî
 )

510 
Timî_t
 * 
pxTimî
 = 
xTimî
;

512 
	`c⁄figASSERT
–
xTimî
 );

513  
pxTimî
->
pcTimîName
;

514 
	}
}

517 
	$¥vRñﬂdTimî
–
Timî_t
 * c⁄° 
pxTimî
,

518 
TickTy≥_t
 
xExpúedTime
,

519 c⁄° 
TickTy≥_t
 
xTimeNow
 )

524  
	`¥vIn£πTimîInA˘iveLi°
–
pxTimî
, ( 
xExpúedTime
 +ÖxTimî->
xTimîPîiodInTicks
 ), 
xTimeNow
, xExpúedTimêË!
pdFALSE
 )

527 
xExpúedTime
 +
pxTimî
->
xTimîPîiodInTicks
;

530 
	`åa˚TIMER_EXPIRED
–
pxTimî
 );

531 
pxTimî
->
	`pxCÆlbackFun˘i⁄
––
TimîH™dÀ_t
 )ÖxTimer );

533 
	}
}

536 
	$¥vPro˚ssExpúedTimî
–c⁄° 
TickTy≥_t
 
xNextExpúeTime
,

537 c⁄° 
TickTy≥_t
 
xTimeNow
 )

539 
Timî_t
 * c⁄° 
pxTimî
 = ( Timî_à* ) 
	`li°GET_OWNER_OF_HEAD_ENTRY
–
pxCuºítTimîLi°
 );

544 –Ë
	`uxLi°Remove
–&–
pxTimî
->
xTimîLi°Iãm
 ) );

548 if––
pxTimî
->
ucSètus
 & 
tmrSTATUS_IS_AUTORELOAD
 ) != 0 )

550 
	`¥vRñﬂdTimî
–
pxTimî
, 
xNextExpúeTime
, 
xTimeNow
 );

554 
pxTimî
->
ucSètus
 &––
uöt8_t
 ) ~
tmrSTATUS_IS_ACTIVE
 );

558 
	`åa˚TIMER_EXPIRED
–
pxTimî
 );

559 
pxTimî
->
	`pxCÆlbackFun˘i⁄
––
TimîH™dÀ_t
 )ÖxTimer );

560 
	}
}

563 
	$p‹tTASK_FUNCTION
–
¥vTimîTask
, 
pvP¨amëîs
 )

565 
TickTy≥_t
 
xNextExpúeTime
;

566 
Ba£Ty≥_t
 
xLi°WasEm±y
;

569 –Ë
pvP¨amëîs
;

571 #i‡–
c⁄figUSE_DAEMON_TASK_STARTUP_HOOK
 == 1 )

573 
	`vAµliˇti⁄D´m⁄TaskSèπupHook
( );

579 
	`vAµliˇti⁄D´m⁄TaskSèπupHook
();

587 
xNextExpúeTime
 = 
	`¥vGëNextExpúeTime
–&
xLi°WasEm±y
 );

591 
	`¥vPro˚ssTimîOrBlockTask
–
xNextExpúeTime
, 
xLi°WasEm±y
 );

594 
	`¥vPro˚ssRe˚ivedComm™ds
();

596 
	}
}

599 
	$¥vPro˚ssTimîOrBlockTask
–c⁄° 
TickTy≥_t
 
xNextExpúeTime
,

600 
Ba£Ty≥_t
 
xLi°WasEm±y
 )

602 
TickTy≥_t
 
xTimeNow
;

603 
Ba£Ty≥_t
 
xTimîLi°sWîeSwôched
;

605 
	`vTaskSu•ídAŒ
();

612 
xTimeNow
 = 
	`¥vSam∂eTimeNow
–&
xTimîLi°sWîeSwôched
 );

614 if–
xTimîLi°sWîeSwôched
 =
pdFALSE
 )

617 if––
xLi°WasEm±y
 =
pdFALSE
 ) && ( 
xNextExpúeTime
 <
xTimeNow
 ) )

619 –Ë
	`xTaskResumeAŒ
();

620 
	`¥vPro˚ssExpúedTimî
–
xNextExpúeTime
, 
xTimeNow
 );

630 if–
xLi°WasEm±y
 !
pdFALSE
 )

634 
xLi°WasEm±y
 = 
	`li°LIST_IS_EMPTY
–
pxOvîÊowTimîLi°
 );

637 
	`vQueueWaôF‹MesßgeRe°ri˘ed
–
xTimîQueue
, ( 
xNextExpúeTime
 - 
xTimeNow
 ), 
xLi°WasEm±y
 );

639 if–
	`xTaskResumeAŒ
(Ë=
pdFALSE
 )

645 
	`p‹tYIELD_WITHIN_API
();

649 
	`mtCOVERAGE_TEST_MARKER
();

655 –Ë
	`xTaskResumeAŒ
();

658 
	}
}

661 
TickTy≥_t
 
	$¥vGëNextExpúeTime
–
Ba£Ty≥_t
 * c⁄° 
pxLi°WasEm±y
 )

663 
TickTy≥_t
 
xNextExpúeTime
;

672 *
pxLi°WasEm±y
 = 
	`li°LIST_IS_EMPTY
–
pxCuºítTimîLi°
 );

674 if–*
pxLi°WasEm±y
 =
pdFALSE
 )

676 
xNextExpúeTime
 = 
	`li°GET_ITEM_VALUE_OF_HEAD_ENTRY
–
pxCuºítTimîLi°
 );

681 
xNextExpúeTime
 = ( 
TickTy≥_t
 ) 0U;

684  
xNextExpúeTime
;

685 
	}
}

688 
TickTy≥_t
 
	$¥vSam∂eTimeNow
–
Ba£Ty≥_t
 * c⁄° 
pxTimîLi°sWîeSwôched
 )

690 
TickTy≥_t
 
xTimeNow
;

691 
PRIVILEGED_DATA
 
TickTy≥_t
 
xLa°Time
 = ( TickType_t ) 0U;

693 
xTimeNow
 = 
	`xTaskGëTickCou¡
();

695 if–
xTimeNow
 < 
xLa°Time
 )

697 
	`¥vSwôchTimîLi°s
();

698 *
pxTimîLi°sWîeSwôched
 = 
pdTRUE
;

702 *
pxTimîLi°sWîeSwôched
 = 
pdFALSE
;

705 
xLa°Time
 = 
xTimeNow
;

707  
xTimeNow
;

708 
	}
}

711 
Ba£Ty≥_t
 
	$¥vIn£πTimîInA˘iveLi°
–
Timî_t
 * c⁄° 
pxTimî
,

712 c⁄° 
TickTy≥_t
 
xNextExpúyTime
,

713 c⁄° 
TickTy≥_t
 
xTimeNow
,

714 c⁄° 
TickTy≥_t
 
xComm™dTime
 )

716 
Ba£Ty≥_t
 
xPro˚ssTimîNow
 = 
pdFALSE
;

718 
	`li°SET_LIST_ITEM_VALUE
–&–
pxTimî
->
xTimîLi°Iãm
 ), 
xNextExpúyTime
 );

719 
	`li°SET_LIST_ITEM_OWNER
–&–
pxTimî
->
xTimîLi°Iãm
 ),ÖxTimer );

721 if–
xNextExpúyTime
 <
xTimeNow
 )

725 if–––
TickTy≥_t
 ) ( 
xTimeNow
 - 
xComm™dTime
 ) ) >
pxTimî
->
xTimîPîiodInTicks
 )

729 
xPro˚ssTimîNow
 = 
pdTRUE
;

733 
	`vLi°In£π
–
pxOvîÊowTimîLi°
, &–
pxTimî
->
xTimîLi°Iãm
 ) );

738 if––
xTimeNow
 < 
xComm™dTime
 ) && ( 
xNextExpúyTime
 >= xCommandTime ) )

743 
xPro˚ssTimîNow
 = 
pdTRUE
;

747 
	`vLi°In£π
–
pxCuºítTimîLi°
, &–
pxTimî
->
xTimîLi°Iãm
 ) );

751  
xPro˚ssTimîNow
;

752 
	}
}

755 
	$¥vPro˚ssRe˚ivedComm™ds
( )

757 
D´m⁄TaskMesßge_t
 
xMesßge
;

758 
Timî_t
 * 
pxTimî
;

759 
Ba£Ty≥_t
 
xTimîLi°sWîeSwôched
;

760 
TickTy≥_t
 
xTimeNow
;

762  
	`xQueueRe˚ive
–
xTimîQueue
, &
xMesßge
, 
tmrNO_DELAY
 ) !
pdFAIL
 )

764 #i‡–
INCLUDE_xTimîPídFun˘i⁄CÆl
 == 1 )

768 if–
xMesßge
.
xMesßgeID
 < ( 
Ba£Ty≥_t
 ) 0 )

770 c⁄° 
CÆlbackP¨amëîs_t
 * c⁄° 
pxCÆlback
 = &–
xMesßge
.
u
.
xCÆlbackP¨amëîs
 );

774 
	`c⁄figASSERT
–
pxCÆlback
 );

777 
pxCÆlback
->
	`pxCÆlbackFun˘i⁄
–pxCÆlback->
pvP¨amëî1
,ÖxCÆlback->
ulP¨amëî2
 );

781 
	`mtCOVERAGE_TEST_MARKER
();

788 if–
xMesßge
.
xMesßgeID
 >–
Ba£Ty≥_t
 ) 0 )

792 
pxTimî
 = 
xMesßge
.
u
.
xTimîP¨amëîs
.pxTimer;

794 if–
	`li°IS_CONTAINED_WITHIN
–
NULL
, &–
pxTimî
->
xTimîLi°Iãm
 ) ) =
pdFALSE
 )

797 –Ë
	`uxLi°Remove
–&–
pxTimî
->
xTimîLi°Iãm
 ) );

801 
	`mtCOVERAGE_TEST_MARKER
();

804 
	`åa˚TIMER_COMMAND_RECEIVED
–
pxTimî
, 
xMesßge
.
xMesßgeID
, xMesßge.
u
.
xTimîP¨amëîs
.
xMesßgeVÆue
 );

812 
xTimeNow
 = 
	`¥vSam∂eTimeNow
–&
xTimîLi°sWîeSwôched
 );

814  
xMesßge
.
xMesßgeID
 )

816 
tmrCOMMAND_START
:

817 
tmrCOMMAND_START_FROM_ISR
:

818 
tmrCOMMAND_RESET
:

819 
tmrCOMMAND_RESET_FROM_ISR
:

821 
pxTimî
->
ucSètus
 |
tmrSTATUS_IS_ACTIVE
;

823 if–
	`¥vIn£πTimîInA˘iveLi°
–
pxTimî
, 
xMesßge
.
u
.
xTimîP¨amëîs
.
xMesßgeVÆue
 +ÖxTimî->
xTimîPîiodInTicks
, 
xTimeNow
, xMesßge.u.xTimîP¨amëîs.xMesßgeVÆuêË!
pdFALSE
 )

827 if––
pxTimî
->
ucSètus
 & 
tmrSTATUS_IS_AUTORELOAD
 ) != 0 )

829 
	`¥vRñﬂdTimî
–
pxTimî
, 
xMesßge
.
u
.
xTimîP¨amëîs
.
xMesßgeVÆue
 +ÖxTimî->
xTimîPîiodInTicks
, 
xTimeNow
 );

833 
pxTimî
->
ucSètus
 &––
uöt8_t
 ) ~
tmrSTATUS_IS_ACTIVE
 );

837 
	`åa˚TIMER_EXPIRED
–
pxTimî
 );

838 
pxTimî
->
	`pxCÆlbackFun˘i⁄
––
TimîH™dÀ_t
 )ÖxTimer );

842 
	`mtCOVERAGE_TEST_MARKER
();

847 
tmrCOMMAND_STOP
:

848 
tmrCOMMAND_STOP_FROM_ISR
:

850 
pxTimî
->
ucSètus
 &––
uöt8_t
 ) ~
tmrSTATUS_IS_ACTIVE
 );

853 
tmrCOMMAND_CHANGE_PERIOD
:

854 
tmrCOMMAND_CHANGE_PERIOD_FROM_ISR
:

855 
pxTimî
->
ucSètus
 |
tmrSTATUS_IS_ACTIVE
;

856 
pxTimî
->
xTimîPîiodInTicks
 = 
xMesßge
.
u
.
xTimîP¨amëîs
.
xMesßgeVÆue
;

857 
	`c⁄figASSERT
––
pxTimî
->
xTimîPîiodInTicks
 > 0 ) );

865 –Ë
	`¥vIn£πTimîInA˘iveLi°
–
pxTimî
, ( 
xTimeNow
 +ÖxTimî->
xTimîPîiodInTicks
 ), xTimeNow, xTimeNow );

868 
tmrCOMMAND_DELETE
:

869 #i‡–
c⁄figSUPPORT_DYNAMIC_ALLOCATION
 == 1 )

874 if––
pxTimî
->
ucSètus
 & 
tmrSTATUS_IS_STATICALLY_ALLOCATED
 ) =–
uöt8_t
 ) 0 )

876 
	`vP‹tFªe
–
pxTimî
 );

880 
pxTimî
->
ucSètus
 &––
uöt8_t
 ) ~
tmrSTATUS_IS_ACTIVE
 );

889 
pxTimî
->
ucSètus
 &––
uöt8_t
 ) ~
tmrSTATUS_IS_ACTIVE
 );

900 
	}
}

903 
	$¥vSwôchTimîLi°s
( )

905 
TickTy≥_t
 
xNextExpúeTime
;

906 
Li°_t
 * 
pxTemp
;

912  
	`li°LIST_IS_EMPTY
–
pxCuºítTimîLi°
 ) =
pdFALSE
 )

914 
xNextExpúeTime
 = 
	`li°GET_ITEM_VALUE_OF_HEAD_ENTRY
–
pxCuºítTimîLi°
 );

919 
	`¥vPro˚ssExpúedTimî
–
xNextExpúeTime
, 
tmrMAX_TIME_BEFORE_OVERFLOW
 );

922 
pxTemp
 = 
pxCuºítTimîLi°
;

923 
pxCuºítTimîLi°
 = 
pxOvîÊowTimîLi°
;

924 
pxOvîÊowTimîLi°
 = 
pxTemp
;

925 
	}
}

928 
	$¥vCheckF‹VÆidLi°AndQueue
( )

933 
	`èskENTER_CRITICAL
();

935 if–
xTimîQueue
 =
NULL
 )

937 
	`vLi°Inôüli£
–&
xA˘iveTimîLi°1
 );

938 
	`vLi°Inôüli£
–&
xA˘iveTimîLi°2
 );

939 
pxCuºítTimîLi°
 = &
xA˘iveTimîLi°1
;

940 
pxOvîÊowTimîLi°
 = &
xA˘iveTimîLi°2
;

942 #i‡–
c⁄figSUPPORT_STATIC_ALLOCATION
 == 1 )

946 
PRIVILEGED_DATA
 
SèticQueue_t
 
xSèticTimîQueue
;

947 
PRIVILEGED_DATA
 
uöt8_t
 
ucSèticTimîQueueSt‹age
[ ( 
size_t
 ) 
c⁄figTIMER_QUEUE_LENGTH
 * –
D´m⁄TaskMesßge_t
 ) ];

949 
xTimîQueue
 = 
	`xQueueCª©eSètic
––
UBa£Ty≥_t
 ) 
c⁄figTIMER_QUEUE_LENGTH
, ( UBa£Ty≥_àË–
D´m⁄TaskMesßge_t
 ), &–
ucSèticTimîQueueSt‹age
[ 0 ] ), &
xSèticTimîQueue
 );

953 
xTimîQueue
 = 
	`xQueueCª©e
––
UBa£Ty≥_t
 ) 
c⁄figTIMER_QUEUE_LENGTH
, –
D´m⁄TaskMesßge_t
 ) );

957 #i‡–
c⁄figQUEUE_REGISTRY_SIZE
 > 0 )

959 if–
xTimîQueue
 !
NULL
 )

961 
	`vQueueAddToRegi°ry
–
xTimîQueue
, "TmrQ" );

965 
	`mtCOVERAGE_TEST_MARKER
();

972 
	`mtCOVERAGE_TEST_MARKER
();

975 
	`èskEXIT_CRITICAL
();

976 
	}
}

979 
Ba£Ty≥_t
 
	$xTimîIsTimîA˘ive
–
TimîH™dÀ_t
 
xTimî
 )

981 
Ba£Ty≥_t
 
xRëu∫
;

982 
Timî_t
 * 
pxTimî
 = 
xTimî
;

984 
	`c⁄figASSERT
–
xTimî
 );

987 
	`èskENTER_CRITICAL
();

989 if––
pxTimî
->
ucSètus
 & 
tmrSTATUS_IS_ACTIVE
 ) == 0 )

991 
xRëu∫
 = 
pdFALSE
;

995 
xRëu∫
 = 
pdTRUE
;

998 
	`èskEXIT_CRITICAL
();

1000  
xRëu∫
;

1001 
	}
}

1004 * 
	$pvTimîGëTimîID
–c⁄° 
TimîH™dÀ_t
 
xTimî
 )

1006 
Timî_t
 * c⁄° 
pxTimî
 = 
xTimî
;

1007 * 
pvRëu∫
;

1009 
	`c⁄figASSERT
–
xTimî
 );

1011 
	`èskENTER_CRITICAL
();

1013 
pvRëu∫
 = 
pxTimî
->
pvTimîID
;

1015 
	`èskEXIT_CRITICAL
();

1017  
pvRëu∫
;

1018 
	}
}

1021 
	$vTimîSëTimîID
–
TimîH™dÀ_t
 
xTimî
,

1022 * 
pvNewID
 )

1024 
Timî_t
 * c⁄° 
pxTimî
 = 
xTimî
;

1026 
	`c⁄figASSERT
–
xTimî
 );

1028 
	`èskENTER_CRITICAL
();

1030 
pxTimî
->
pvTimîID
 = 
pvNewID
;

1032 
	`èskEXIT_CRITICAL
();

1033 
	}
}

1036 #i‡–
INCLUDE_xTimîPídFun˘i⁄CÆl
 == 1 )

1038 
Ba£Ty≥_t
 
	$xTimîPídFun˘i⁄CÆlFromISR
–
PídedFun˘i⁄_t
 
xFun˘i⁄ToPíd
,

1039 * 
pvP¨amëî1
,

1040 
uöt32_t
 
ulP¨amëî2
,

1041 
Ba£Ty≥_t
 * 
pxHighîPri‹ôyTaskWokí
 )

1043 
D´m⁄TaskMesßge_t
 
xMesßge
;

1044 
Ba£Ty≥_t
 
xRëu∫
;

1048 
xMesßge
.
xMesßgeID
 = 
tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR
;

1049 
xMesßge
.
u
.
xCÆlbackP¨amëîs
.
pxCÆlbackFun˘i⁄
 = 
xFun˘i⁄ToPíd
;

1050 
xMesßge
.
u
.
xCÆlbackP¨amëîs
.
pvP¨amëî1
 =ÖvParameter1;

1051 
xMesßge
.
u
.
xCÆlbackP¨amëîs
.
ulP¨amëî2
 = ulParameter2;

1053 
xRëu∫
 = 
	`xQueueSídFromISR
–
xTimîQueue
, &
xMesßge
, 
pxHighîPri‹ôyTaskWokí
 );

1055 
	`åa˚PEND_FUNC_CALL_FROM_ISR
–
xFun˘i⁄ToPíd
, 
pvP¨amëî1
, 
ulP¨amëî2
, 
xRëu∫
 );

1057  
xRëu∫
;

1058 
	}
}

1063 #i‡–
INCLUDE_xTimîPídFun˘i⁄CÆl
 == 1 )

1065 
Ba£Ty≥_t
 
	$xTimîPídFun˘i⁄CÆl
–
PídedFun˘i⁄_t
 
xFun˘i⁄ToPíd
,

1066 * 
pvP¨amëî1
,

1067 
uöt32_t
 
ulP¨amëî2
,

1068 
TickTy≥_t
 
xTicksToWaô
 )

1070 
D´m⁄TaskMesßge_t
 
xMesßge
;

1071 
Ba£Ty≥_t
 
xRëu∫
;

1076 
	`c⁄figASSERT
–
xTimîQueue
 );

1080 
xMesßge
.
xMesßgeID
 = 
tmrCOMMAND_EXECUTE_CALLBACK
;

1081 
xMesßge
.
u
.
xCÆlbackP¨amëîs
.
pxCÆlbackFun˘i⁄
 = 
xFun˘i⁄ToPíd
;

1082 
xMesßge
.
u
.
xCÆlbackP¨amëîs
.
pvP¨amëî1
 =ÖvParameter1;

1083 
xMesßge
.
u
.
xCÆlbackP¨amëîs
.
ulP¨amëî2
 = ulParameter2;

1085 
xRëu∫
 = 
	`xQueueSídToBack
–
xTimîQueue
, &
xMesßge
, 
xTicksToWaô
 );

1087 
	`åa˚PEND_FUNC_CALL
–
xFun˘i⁄ToPíd
, 
pvP¨amëî1
, 
ulP¨amëî2
, 
xRëu∫
 );

1089  
xRëu∫
;

1090 
	}
}

1095 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

1097 
UBa£Ty≥_t
 
	$uxTimîGëTimîNumbî
–
TimîH™dÀ_t
 
xTimî
 )

1099  ( ( 
Timî_t
 * ) 
xTimî
 )->
uxTimîNumbî
;

1100 
	}
}

1105 #i‡–
c⁄figUSE_TRACE_FACILITY
 == 1 )

1107 
	$vTimîSëTimîNumbî
–
TimîH™dÀ_t
 
xTimî
,

1108 
UBa£Ty≥_t
 
uxTimîNumbî
 )

1110 ––
Timî_t
 * ) 
xTimî
 )->
uxTimîNumbî
 = uxTimerNumber;

1111 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\LL\stm32f1xx_ll_bus.h

38 #i‚de‡
__STM32F1xx_LL_BUS_H


39 
	#__STM32F1xx_LL_BUS_H


	)

41 #ifde‡
__˝lu•lus


46 
	~"°m32f1xx.h
"

52 #i‡
deföed
(
RCC
)

62 #i‡
deföed
(
RCC_AHBRSTR_OTGFSRST
Ë|| deföed(
RCC_AHBRSTR_ETHMACRST
)

63 
	#RCC_AHBRSTR_SUPPORT


	)

77 
	#LL_AHB1_GRP1_PERIPH_ALL
 (
uöt32_t
)0xFFFFFFFFU

	)

78 
	#LL_AHB1_GRP1_PERIPH_CRC
 
RCC_AHBENR_CRCEN


	)

79 
	#LL_AHB1_GRP1_PERIPH_DMA1
 
RCC_AHBENR_DMA1EN


	)

80 #i‡
deföed
(
DMA2
)

81 
	#LL_AHB1_GRP1_PERIPH_DMA2
 
RCC_AHBENR_DMA2EN


	)

83 #i‡
deföed
(
ETH
)

84 
	#LL_AHB1_GRP1_PERIPH_ETHMAC
 
RCC_AHBENR_ETHMACEN


	)

85 
	#LL_AHB1_GRP1_PERIPH_ETHMACRX
 
RCC_AHBENR_ETHMACRXEN


	)

86 
	#LL_AHB1_GRP1_PERIPH_ETHMACTX
 
RCC_AHBENR_ETHMACTXEN


	)

88 
	#LL_AHB1_GRP1_PERIPH_FLASH
 
RCC_AHBENR_FLITFEN


	)

89 #i‡
deföed
(
FSMC_B™k1
)

90 
	#LL_AHB1_GRP1_PERIPH_FSMC
 
RCC_AHBENR_FSMCEN


	)

92 #i‡
deföed
(
USB_OTG_FS
)

93 
	#LL_AHB1_GRP1_PERIPH_OTGFS
 
RCC_AHBENR_OTGFSEN


	)

95 #i‡
deföed
(
SDIO
)

96 
	#LL_AHB1_GRP1_PERIPH_SDIO
 
RCC_AHBENR_SDIOEN


	)

98 
	#LL_AHB1_GRP1_PERIPH_SRAM
 
RCC_AHBENR_SRAMEN


	)

106 
	#LL_APB1_GRP1_PERIPH_ALL
 (
uöt32_t
)0xFFFFFFFFU

	)

107 
	#LL_APB1_GRP1_PERIPH_BKP
 
RCC_APB1ENR_BKPEN


	)

108 #i‡
deföed
(
CAN1
)

109 
	#LL_APB1_GRP1_PERIPH_CAN1
 
RCC_APB1ENR_CAN1EN


	)

111 #i‡
deföed
(
CAN2
)

112 
	#LL_APB1_GRP1_PERIPH_CAN2
 
RCC_APB1ENR_CAN2EN


	)

114 #i‡
deföed
(
CEC
)

115 
	#LL_APB1_GRP1_PERIPH_CEC
 
RCC_APB1ENR_CECEN


	)

117 #i‡
deföed
(
DAC
)

118 
	#LL_APB1_GRP1_PERIPH_DAC1
 
RCC_APB1ENR_DACEN


	)

120 
	#LL_APB1_GRP1_PERIPH_I2C1
 
RCC_APB1ENR_I2C1EN


	)

121 #i‡
deföed
(
I2C2
)

122 
	#LL_APB1_GRP1_PERIPH_I2C2
 
RCC_APB1ENR_I2C2EN


	)

124 
	#LL_APB1_GRP1_PERIPH_PWR
 
RCC_APB1ENR_PWREN


	)

125 #i‡
deföed
(
SPI2
)

126 
	#LL_APB1_GRP1_PERIPH_SPI2
 
RCC_APB1ENR_SPI2EN


	)

128 #i‡
deföed
(
SPI3
)

129 
	#LL_APB1_GRP1_PERIPH_SPI3
 
RCC_APB1ENR_SPI3EN


	)

131 #i‡
deföed
(
TIM12
)

132 
	#LL_APB1_GRP1_PERIPH_TIM12
 
RCC_APB1ENR_TIM12EN


	)

134 #i‡
deföed
(
TIM13
)

135 
	#LL_APB1_GRP1_PERIPH_TIM13
 
RCC_APB1ENR_TIM13EN


	)

137 #i‡
deföed
(
TIM14
)

138 
	#LL_APB1_GRP1_PERIPH_TIM14
 
RCC_APB1ENR_TIM14EN


	)

140 
	#LL_APB1_GRP1_PERIPH_TIM2
 
RCC_APB1ENR_TIM2EN


	)

141 
	#LL_APB1_GRP1_PERIPH_TIM3
 
RCC_APB1ENR_TIM3EN


	)

142 #i‡
deföed
(
TIM4
)

143 
	#LL_APB1_GRP1_PERIPH_TIM4
 
RCC_APB1ENR_TIM4EN


	)

145 #i‡
deföed
(
TIM5
)

146 
	#LL_APB1_GRP1_PERIPH_TIM5
 
RCC_APB1ENR_TIM5EN


	)

148 #i‡
deföed
(
TIM6
)

149 
	#LL_APB1_GRP1_PERIPH_TIM6
 
RCC_APB1ENR_TIM6EN


	)

151 #i‡
deföed
(
TIM7
)

152 
	#LL_APB1_GRP1_PERIPH_TIM7
 
RCC_APB1ENR_TIM7EN


	)

154 #i‡
deföed
(
UART4
)

155 
	#LL_APB1_GRP1_PERIPH_UART4
 
RCC_APB1ENR_UART4EN


	)

157 #i‡
deföed
(
UART5
)

158 
	#LL_APB1_GRP1_PERIPH_UART5
 
RCC_APB1ENR_UART5EN


	)

160 
	#LL_APB1_GRP1_PERIPH_USART2
 
RCC_APB1ENR_USART2EN


	)

161 #i‡
deföed
(
USART3
)

162 
	#LL_APB1_GRP1_PERIPH_USART3
 
RCC_APB1ENR_USART3EN


	)

164 #i‡
deföed
(
USB
)

165 
	#LL_APB1_GRP1_PERIPH_USB
 
RCC_APB1ENR_USBEN


	)

167 
	#LL_APB1_GRP1_PERIPH_WWDG
 
RCC_APB1ENR_WWDGEN


	)

175 
	#LL_APB2_GRP1_PERIPH_ALL
 (
uöt32_t
)0xFFFFFFFFU

	)

176 
	#LL_APB2_GRP1_PERIPH_ADC1
 
RCC_APB2ENR_ADC1EN


	)

177 #i‡
deföed
(
ADC2
)

178 
	#LL_APB2_GRP1_PERIPH_ADC2
 
RCC_APB2ENR_ADC2EN


	)

180 #i‡
deföed
(
ADC3
)

181 
	#LL_APB2_GRP1_PERIPH_ADC3
 
RCC_APB2ENR_ADC3EN


	)

183 
	#LL_APB2_GRP1_PERIPH_AFIO
 
RCC_APB2ENR_AFIOEN


	)

184 
	#LL_APB2_GRP1_PERIPH_GPIOA
 
RCC_APB2ENR_IOPAEN


	)

185 
	#LL_APB2_GRP1_PERIPH_GPIOB
 
RCC_APB2ENR_IOPBEN


	)

186 
	#LL_APB2_GRP1_PERIPH_GPIOC
 
RCC_APB2ENR_IOPCEN


	)

187 
	#LL_APB2_GRP1_PERIPH_GPIOD
 
RCC_APB2ENR_IOPDEN


	)

188 #i‡
deföed
(
GPIOE
)

189 
	#LL_APB2_GRP1_PERIPH_GPIOE
 
RCC_APB2ENR_IOPEEN


	)

191 #i‡
deföed
(
GPIOF
)

192 
	#LL_APB2_GRP1_PERIPH_GPIOF
 
RCC_APB2ENR_IOPFEN


	)

194 #i‡
deföed
(
GPIOG
)

195 
	#LL_APB2_GRP1_PERIPH_GPIOG
 
RCC_APB2ENR_IOPGEN


	)

197 
	#LL_APB2_GRP1_PERIPH_SPI1
 
RCC_APB2ENR_SPI1EN


	)

198 #i‡
deföed
(
TIM10
)

199 
	#LL_APB2_GRP1_PERIPH_TIM10
 
RCC_APB2ENR_TIM10EN


	)

201 #i‡
deföed
(
TIM11
)

202 
	#LL_APB2_GRP1_PERIPH_TIM11
 
RCC_APB2ENR_TIM11EN


	)

204 #i‡
deföed
(
TIM15
)

205 
	#LL_APB2_GRP1_PERIPH_TIM15
 
RCC_APB2ENR_TIM15EN


	)

207 #i‡
deföed
(
TIM16
)

208 
	#LL_APB2_GRP1_PERIPH_TIM16
 
RCC_APB2ENR_TIM16EN


	)

210 #i‡
deföed
(
TIM17
)

211 
	#LL_APB2_GRP1_PERIPH_TIM17
 
RCC_APB2ENR_TIM17EN


	)

213 
	#LL_APB2_GRP1_PERIPH_TIM1
 
RCC_APB2ENR_TIM1EN


	)

214 #i‡
deföed
(
TIM8
)

215 
	#LL_APB2_GRP1_PERIPH_TIM8
 
RCC_APB2ENR_TIM8EN


	)

217 #i‡
deföed
(
TIM9
)

218 
	#LL_APB2_GRP1_PERIPH_TIM9
 
RCC_APB2ENR_TIM9EN


	)

220 
	#LL_APB2_GRP1_PERIPH_USART1
 
RCC_APB2ENR_USART1EN


	)

269 
__STATIC_INLINE
 
LL_AHB1_GRP1_E«bÀClock
(
uöt32_t
 
Pîùhs
)

271 
__IO
 
uöt32_t
 
tm¥eg
;

272 
SET_BIT
(
RCC
->
AHBENR
, 
Pîùhs
);

274 
tm¥eg
 = 
READ_BIT
(
RCC
->
AHBENR
, 
Pîùhs
);

275 ()
tm¥eg
;

307 
__STATIC_INLINE
 
uöt32_t
 
LL_AHB1_GRP1_IsE«bÀdClock
(uöt32_à
Pîùhs
)

309  (
READ_BIT
(
RCC
->
AHBENR
, 
Pîùhs
) == Periphs);

341 
__STATIC_INLINE
 
LL_AHB1_GRP1_DißbÀClock
(
uöt32_t
 
Pîùhs
)

343 
CLEAR_BIT
(
RCC
->
AHBENR
, 
Pîùhs
);

346 #i‡
deföed
(
RCC_AHBRSTR_SUPPORT
)

359 
__STATIC_INLINE
 
LL_AHB1_GRP1_F‹˚Re£t
(
uöt32_t
 
Pîùhs
)

361 
SET_BIT
(
RCC
->
AHBRSTR
, 
Pîùhs
);

376 
__STATIC_INLINE
 
LL_AHB1_GRP1_Rñó£Re£t
(
uöt32_t
 
Pîùhs
)

378 
CLEAR_BIT
(
RCC
->
AHBRSTR
, 
Pîùhs
);

447 
__STATIC_INLINE
 
LL_APB1_GRP1_E«bÀClock
(
uöt32_t
 
Pîùhs
)

449 
__IO
 
uöt32_t
 
tm¥eg
;

450 
SET_BIT
(
RCC
->
APB1ENR
, 
Pîùhs
);

452 
tm¥eg
 = 
READ_BIT
(
RCC
->
APB1ENR
, 
Pîùhs
);

453 ()
tm¥eg
;

513 
__STATIC_INLINE
 
uöt32_t
 
LL_APB1_GRP1_IsE«bÀdClock
(uöt32_à
Pîùhs
)

515  (
READ_BIT
(
RCC
->
APB1ENR
, 
Pîùhs
) == Periphs);

575 
__STATIC_INLINE
 
LL_APB1_GRP1_DißbÀClock
(
uöt32_t
 
Pîùhs
)

577 
CLEAR_BIT
(
RCC
->
APB1ENR
, 
Pîùhs
);

638 
__STATIC_INLINE
 
LL_APB1_GRP1_F‹˚Re£t
(
uöt32_t
 
Pîùhs
)

640 
SET_BIT
(
RCC
->
APB1RSTR
, 
Pîùhs
);

701 
__STATIC_INLINE
 
LL_APB1_GRP1_Rñó£Re£t
(
uöt32_t
 
Pîùhs
)

703 
CLEAR_BIT
(
RCC
->
APB1RSTR
, 
Pîùhs
);

763 
__STATIC_INLINE
 
LL_APB2_GRP1_E«bÀClock
(
uöt32_t
 
Pîùhs
)

765 
__IO
 
uöt32_t
 
tm¥eg
;

766 
SET_BIT
(
RCC
->
APB2ENR
, 
Pîùhs
);

768 
tm¥eg
 = 
READ_BIT
(
RCC
->
APB2ENR
, 
Pîùhs
);

769 ()
tm¥eg
;

821 
__STATIC_INLINE
 
uöt32_t
 
LL_APB2_GRP1_IsE«bÀdClock
(uöt32_à
Pîùhs
)

823  (
READ_BIT
(
RCC
->
APB2ENR
, 
Pîùhs
) == Periphs);

875 
__STATIC_INLINE
 
LL_APB2_GRP1_DißbÀClock
(
uöt32_t
 
Pîùhs
)

877 
CLEAR_BIT
(
RCC
->
APB2ENR
, 
Pîùhs
);

930 
__STATIC_INLINE
 
LL_APB2_GRP1_F‹˚Re£t
(
uöt32_t
 
Pîùhs
)

932 
SET_BIT
(
RCC
->
APB2RSTR
, 
Pîùhs
);

985 
__STATIC_INLINE
 
LL_APB2_GRP1_Rñó£Re£t
(
uöt32_t
 
Pîùhs
)

987 
CLEAR_BIT
(
RCC
->
APB2RSTR
, 
Pîùhs
);

1009 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\LL\stm32f1xx_ll_rcc.c

20 #i‡
deföed
(
USE_FULL_LL_DRIVER
)

23 
	~"°m32f1xx_Œ_rcc.h
"

24 #ifde‡ 
USE_FULL_ASSERT


25 
	~"°m32_as£π.h
"

27 
	#as£π_∑øm
(
ex¥
Ë(()0U)

	)

33 #i‡
deföed
(
RCC
)

46 #i‡
deföed
(
RCC_PLLI2S_SUPPORT
)

47 
	#IS_LL_RCC_I2S_CLKSOURCE
(
__VALUE__
Ë(((__VALUE__Ë=
LL_RCC_I2S2_CLKSOURCE
) \

48 || ((
__VALUE__
Ë=
LL_RCC_I2S3_CLKSOURCE
))

	)

51 #i‡
deföed
(
USB
Ë|| deföed(
USB_OTG_FS
)

52 
	#IS_LL_RCC_USB_CLKSOURCE
(
__VALUE__
Ë(((__VALUE__Ë=
LL_RCC_USB_CLKSOURCE
))

	)

55 
	#IS_LL_RCC_ADC_CLKSOURCE
(
__VALUE__
Ë(((__VALUE__Ë=
LL_RCC_ADC_CLKSOURCE
))

	)

64 
uöt32_t
 
RCC_GëSy°emClockFªq
();

65 
uöt32_t
 
RCC_GëHCLKClockFªq
(uöt32_à
SYSCLK_Fªquícy
);

66 
uöt32_t
 
RCC_GëPCLK1ClockFªq
(uöt32_à
HCLK_Fªquícy
);

67 
uöt32_t
 
RCC_GëPCLK2ClockFªq
(uöt32_à
HCLK_Fªquícy
);

68 
uöt32_t
 
RCC_PLL_GëFªqDomaö_SYS
();

69 #i‡
deföed
(
RCC_PLLI2S_SUPPORT
)

70 
uöt32_t
 
RCC_PLLI2S_GëFªqDomaö_I2S
();

72 #i‡
deföed
(
RCC_PLL2_SUPPORT
)

73 
uöt32_t
 
RCC_PLL2_GëFªqClockFªq
();

103 
Eº‹Sètus
 
	$LL_RCC_DeInô
()

106 
	`LL_RCC_HSI_E«bÀ
();

109 
	`LL_RCC_HSI_IsRódy
() != 1U)

113 
	`LL_RCC_SëSysClkSour˚
(
LL_RCC_SYS_CLKSOURCE_HSI
);

116 
	`LL_RCC_GëSysClkSour˚
(Ë!
LL_RCC_SYS_CLKSOURCE_STATUS_HSI
)

120 
	`CLEAR_BIT
(
RCC
->
CR
, 
RCC_CR_PLLON
);

123 
	`LL_RCC_PLL_IsRódy
() != 0U)

127 
	`LL_RCC_WrôeReg
(
CFGR
, 0x00000000U);

130 
	`CLEAR_BIT
(
RCC
->
CR
, (
RCC_CR_CSSON
 | 
RCC_CR_HSEON
 | 
RCC_CR_HSEBYP
));

132 #i‡
	`deföed
(
RCC_CR_PLL2ON
)

134 
	`CLEAR_BIT
(
RCC
->
CR
, 
RCC_CR_PLL2ON
);

137 #i‡
	`deföed
(
RCC_CR_PLL3ON
)

139 
	`CLEAR_BIT
(
RCC
->
CR
, 
RCC_CR_PLL3ON
);

143 
	`LL_RCC_HSI_SëCÆibTrimmög
(0x10U);

145 #i‡
	`deföed
(
RCC_CFGR2_PREDIV1
)

147 
	`LL_RCC_WrôeReg
(
CFGR2
, 0x00000000U);

151 
	`LL_RCC_WrôeReg
(
CIR
, 0x00000000U);

154 
	`LL_RCC_CÀ¨Re£tFœgs
();

156  
SUCCESS
;

157 
	}
}

190 
	$LL_RCC_GëSy°emClocksFªq
(
LL_RCC_ClocksTy≥Def
 *
RCC_Clocks
)

193 
RCC_Clocks
->
SYSCLK_Fªquícy
 = 
	`RCC_GëSy°emClockFªq
();

196 
RCC_Clocks
->
HCLK_Fªquícy
 = 
	`RCC_GëHCLKClockFªq
(RCC_Clocks->
SYSCLK_Fªquícy
);

199 
RCC_Clocks
->
PCLK1_Fªquícy
 = 
	`RCC_GëPCLK1ClockFªq
(RCC_Clocks->
HCLK_Fªquícy
);

202 
RCC_Clocks
->
PCLK2_Fªquícy
 = 
	`RCC_GëPCLK2ClockFªq
(RCC_Clocks->
HCLK_Fªquícy
);

203 
	}
}

205 #i‡
deföed
(
RCC_CFGR2_I2S2SRC
)

213 
uöt32_t
 
	$LL_RCC_GëI2SClockFªq
(
uöt32_t
 
I2SxSour˚
)

215 
uöt32_t
 
i2s_‰equícy
 = 
LL_RCC_PERIPH_FREQUENCY_NO
;

218 
	`as£π_∑øm
(
	`IS_LL_RCC_I2S_CLKSOURCE
(
I2SxSour˚
));

221 
	`LL_RCC_GëI2SClockSour˚
(
I2SxSour˚
))

223 
LL_RCC_I2S2_CLKSOURCE_SYSCLK
:

224 
LL_RCC_I2S3_CLKSOURCE_SYSCLK
:

225 
i2s_‰equícy
 = 
	`RCC_GëSy°emClockFªq
();

228 
LL_RCC_I2S2_CLKSOURCE_PLLI2S_VCO
:

229 
LL_RCC_I2S3_CLKSOURCE_PLLI2S_VCO
:

231 
i2s_‰equícy
 = 
	`RCC_PLLI2S_GëFªqDomaö_I2S
() * 2U;

235  
i2s_‰equícy
;

236 
	}
}

239 #i‡
deföed
(
USB
Ë|| deföed(
USB_OTG_FS
)

247 
uöt32_t
 
	$LL_RCC_GëUSBClockFªq
(
uöt32_t
 
USBxSour˚
)

249 
uöt32_t
 
usb_‰equícy
 = 
LL_RCC_PERIPH_FREQUENCY_NO
;

252 
	`as£π_∑øm
(
	`IS_LL_RCC_USB_CLKSOURCE
(
USBxSour˚
));

255 
	`LL_RCC_GëUSBClockSour˚
(
USBxSour˚
))

257 #i‡
	`deföed
(
RCC_CFGR_USBPRE
)

258 
LL_RCC_USB_CLKSOURCE_PLL
:

259 i‡(
	`LL_RCC_PLL_IsRódy
())

261 
usb_‰equícy
 = 
	`RCC_PLL_GëFªqDomaö_SYS
();

265 
LL_RCC_USB_CLKSOURCE_PLL_DIV_1_5
:

267 i‡(
	`LL_RCC_PLL_IsRódy
())

269 
usb_‰equícy
 = (
	`RCC_PLL_GëFªqDomaö_SYS
() * 3U) / 2U;

273 #i‡
	`deföed
(
RCC_CFGR_OTGFSPRE
)

277 
LL_RCC_USB_CLKSOURCE_PLL_DIV_2
:

278 i‡(
	`LL_RCC_PLL_IsRódy
())

280 
usb_‰equícy
 = 
	`RCC_PLL_GëFªqDomaö_SYS
();

286 
LL_RCC_USB_CLKSOURCE_PLL_DIV_3
:

288 i‡(
	`LL_RCC_PLL_IsRódy
())

290 
usb_‰equícy
 = (
	`RCC_PLL_GëFªqDomaö_SYS
() * 2U) / 3U;

296  
usb_‰equícy
;

297 
	}
}

306 
uöt32_t
 
	$LL_RCC_GëADCClockFªq
(
uöt32_t
 
ADCxSour˚
)

308 
uöt32_t
 
adc_¥esˇÀr
 = 0U;

309 
uöt32_t
 
adc_‰equícy
 = 0U;

312 
	`as£π_∑øm
(
	`IS_LL_RCC_ADC_CLKSOURCE
(
ADCxSour˚
));

315 
adc_¥esˇÀr
 = 
	`LL_RCC_GëADCClockSour˚
(
ADCxSour˚
);

318 
adc_‰equícy
 = 
	`RCC_GëPCLK2ClockFªq
(
	`RCC_GëHCLKClockFªq
(
	`RCC_GëSy°emClockFªq
()))

319 / (((
adc_¥esˇÀr
 >> 
	`POSITION_VAL
(
ADCxSour˚
)) + 1U) * 2U);

321  
adc_‰equícy
;

322 
	}
}

340 
uöt32_t
 
	$RCC_GëSy°emClockFªq
()

342 
uöt32_t
 
‰equícy
 = 0U;

345 
	`LL_RCC_GëSysClkSour˚
())

347 
LL_RCC_SYS_CLKSOURCE_STATUS_HSI
:

348 
‰equícy
 = 
HSI_VALUE
;

351 
LL_RCC_SYS_CLKSOURCE_STATUS_HSE
:

352 
‰equícy
 = 
HSE_VALUE
;

355 
LL_RCC_SYS_CLKSOURCE_STATUS_PLL
:

356 
‰equícy
 = 
	`RCC_PLL_GëFªqDomaö_SYS
();

360 
‰equícy
 = 
HSI_VALUE
;

364  
‰equícy
;

365 
	}
}

372 
uöt32_t
 
	$RCC_GëHCLKClockFªq
(
uöt32_t
 
SYSCLK_Fªquícy
)

375  
	`__LL_RCC_CALC_HCLK_FREQ
(
SYSCLK_Fªquícy
, 
	`LL_RCC_GëAHBPªsˇÀr
());

376 
	}
}

383 
uöt32_t
 
	$RCC_GëPCLK1ClockFªq
(
uöt32_t
 
HCLK_Fªquícy
)

386  
	`__LL_RCC_CALC_PCLK1_FREQ
(
HCLK_Fªquícy
, 
	`LL_RCC_GëAPB1PªsˇÀr
());

387 
	}
}

394 
uöt32_t
 
	$RCC_GëPCLK2ClockFªq
(
uöt32_t
 
HCLK_Fªquícy
)

397  
	`__LL_RCC_CALC_PCLK2_FREQ
(
HCLK_Fªquícy
, 
	`LL_RCC_GëAPB2PªsˇÀr
());

398 
	}
}

404 
uöt32_t
 
	$RCC_PLL_GëFªqDomaö_SYS
()

406 
uöt32_t
 
∂löput‰eq
 = 0U, 
∂lsour˚
 = 0U;

411 
∂lsour˚
 = 
	`LL_RCC_PLL_GëMaöSour˚
();

413 
∂lsour˚
)

415 
LL_RCC_PLLSOURCE_HSI_DIV_2
:

416 
∂löput‰eq
 = 
HSI_VALUE
 / 2U;

419 
LL_RCC_PLLSOURCE_HSE
:

420 
∂löput‰eq
 = 
HSE_VALUE
 / (
	`LL_RCC_PLL_GëPªdiv
() + 1U);

423 #i‡
	`deföed
(
RCC_PLL2_SUPPORT
)

424 
LL_RCC_PLLSOURCE_PLL2
:

425 
∂löput‰eq
 = 
	`RCC_PLL2_GëFªqClockFªq
(Ë/ (
	`LL_RCC_PLL_GëPªdiv
() + 1U);

430 
∂löput‰eq
 = 
HSI_VALUE
 / 2U;

433  
	`__LL_RCC_CALC_PLLCLK_FREQ
(
∂löput‰eq
, 
	`LL_RCC_PLL_GëMu…ùliˇt‹
());

434 
	}
}

436 #i‡
deföed
(
RCC_PLL2_SUPPORT
)

441 
uöt32_t
 
	$RCC_PLL2_GëFªqClockFªq
()

443  
	`__LL_RCC_CALC_PLL2CLK_FREQ
(
HSE_VALUE
, 
	`LL_RCC_PLL2_GëMu…ùliˇt‹
(), 
	`LL_RCC_HSE_GëPªdiv2
());

444 
	}
}

447 #i‡
deföed
(
RCC_PLLI2S_SUPPORT
)

452 
uöt32_t
 
	$RCC_PLLI2S_GëFªqDomaö_I2S
()

454  
	`__LL_RCC_CALC_PLLI2SCLK_FREQ
(
HSE_VALUE
, 
	`LL_RCC_PLLI2S_GëMu…ùliˇt‹
(), 
	`LL_RCC_HSE_GëPªdiv2
());

455 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\LL\stm32f1xx_ll_rcc.h

21 #i‚de‡
__STM32F1xx_LL_RCC_H


22 
	#__STM32F1xx_LL_RCC_H


	)

24 #ifde‡
__˝lu•lus


29 
	~"°m32f1xx.h
"

35 #i‡
deföed
(
RCC
)

45 #i‡
deföed
(
USE_FULL_LL_DRIVER
)

54 #i‡
deföed
(
USE_FULL_LL_DRIVER
)

68 
uöt32_t
 
SYSCLK_Fªquícy
;

69 
uöt32_t
 
HCLK_Fªquícy
;

70 
uöt32_t
 
PCLK1_Fªquícy
;

71 
uöt32_t
 
PCLK2_Fªquícy
;

72 } 
	tLL_RCC_ClocksTy≥Def
;

94 #i‡!
deföed
 (
HSE_VALUE
)

95 
	#HSE_VALUE
 8000000U

	)

98 #i‡!
deföed
 (
HSI_VALUE
)

99 
	#HSI_VALUE
 8000000U

	)

102 #i‡!
deföed
 (
LSE_VALUE
)

103 
	#LSE_VALUE
 32768U

	)

106 #i‡!
deföed
 (
LSI_VALUE
)

107 
	#LSI_VALUE
 40000U

	)

117 
	#LL_RCC_CIR_LSIRDYC
 
RCC_CIR_LSIRDYC


	)

118 
	#LL_RCC_CIR_LSERDYC
 
RCC_CIR_LSERDYC


	)

119 
	#LL_RCC_CIR_HSIRDYC
 
RCC_CIR_HSIRDYC


	)

120 
	#LL_RCC_CIR_HSERDYC
 
RCC_CIR_HSERDYC


	)

121 
	#LL_RCC_CIR_PLLRDYC
 
RCC_CIR_PLLRDYC


	)

122 
	#LL_RCC_CIR_PLL3RDYC
 
RCC_CIR_PLL3RDYC


	)

123 
	#LL_RCC_CIR_PLL2RDYC
 
RCC_CIR_PLL2RDYC


	)

124 
	#LL_RCC_CIR_CSSC
 
RCC_CIR_CSSC


	)

133 
	#LL_RCC_CIR_LSIRDYF
 
RCC_CIR_LSIRDYF


	)

134 
	#LL_RCC_CIR_LSERDYF
 
RCC_CIR_LSERDYF


	)

135 
	#LL_RCC_CIR_HSIRDYF
 
RCC_CIR_HSIRDYF


	)

136 
	#LL_RCC_CIR_HSERDYF
 
RCC_CIR_HSERDYF


	)

137 
	#LL_RCC_CIR_PLLRDYF
 
RCC_CIR_PLLRDYF


	)

138 
	#LL_RCC_CIR_PLL3RDYF
 
RCC_CIR_PLL3RDYF


	)

139 
	#LL_RCC_CIR_PLL2RDYF
 
RCC_CIR_PLL2RDYF


	)

140 
	#LL_RCC_CIR_CSSF
 
RCC_CIR_CSSF


	)

141 
	#LL_RCC_CSR_PINRSTF
 
RCC_CSR_PINRSTF


	)

142 
	#LL_RCC_CSR_PORRSTF
 
RCC_CSR_PORRSTF


	)

143 
	#LL_RCC_CSR_SFTRSTF
 
RCC_CSR_SFTRSTF


	)

144 
	#LL_RCC_CSR_IWDGRSTF
 
RCC_CSR_IWDGRSTF


	)

145 
	#LL_RCC_CSR_WWDGRSTF
 
RCC_CSR_WWDGRSTF


	)

146 
	#LL_RCC_CSR_LPWRRSTF
 
RCC_CSR_LPWRRSTF


	)

155 
	#LL_RCC_CIR_LSIRDYIE
 
RCC_CIR_LSIRDYIE


	)

156 
	#LL_RCC_CIR_LSERDYIE
 
RCC_CIR_LSERDYIE


	)

157 
	#LL_RCC_CIR_HSIRDYIE
 
RCC_CIR_HSIRDYIE


	)

158 
	#LL_RCC_CIR_HSERDYIE
 
RCC_CIR_HSERDYIE


	)

159 
	#LL_RCC_CIR_PLLRDYIE
 
RCC_CIR_PLLRDYIE


	)

160 
	#LL_RCC_CIR_PLL3RDYIE
 
RCC_CIR_PLL3RDYIE


	)

161 
	#LL_RCC_CIR_PLL2RDYIE
 
RCC_CIR_PLL2RDYIE


	)

166 #i‡
deföed
(
RCC_CFGR2_PREDIV2
)

170 
	#LL_RCC_HSE_PREDIV2_DIV_1
 
RCC_CFGR2_PREDIV2_DIV1


	)

171 
	#LL_RCC_HSE_PREDIV2_DIV_2
 
RCC_CFGR2_PREDIV2_DIV2


	)

172 
	#LL_RCC_HSE_PREDIV2_DIV_3
 
RCC_CFGR2_PREDIV2_DIV3


	)

173 
	#LL_RCC_HSE_PREDIV2_DIV_4
 
RCC_CFGR2_PREDIV2_DIV4


	)

174 
	#LL_RCC_HSE_PREDIV2_DIV_5
 
RCC_CFGR2_PREDIV2_DIV5


	)

175 
	#LL_RCC_HSE_PREDIV2_DIV_6
 
RCC_CFGR2_PREDIV2_DIV6


	)

176 
	#LL_RCC_HSE_PREDIV2_DIV_7
 
RCC_CFGR2_PREDIV2_DIV7


	)

177 
	#LL_RCC_HSE_PREDIV2_DIV_8
 
RCC_CFGR2_PREDIV2_DIV8


	)

178 
	#LL_RCC_HSE_PREDIV2_DIV_9
 
RCC_CFGR2_PREDIV2_DIV9


	)

179 
	#LL_RCC_HSE_PREDIV2_DIV_10
 
RCC_CFGR2_PREDIV2_DIV10


	)

180 
	#LL_RCC_HSE_PREDIV2_DIV_11
 
RCC_CFGR2_PREDIV2_DIV11


	)

181 
	#LL_RCC_HSE_PREDIV2_DIV_12
 
RCC_CFGR2_PREDIV2_DIV12


	)

182 
	#LL_RCC_HSE_PREDIV2_DIV_13
 
RCC_CFGR2_PREDIV2_DIV13


	)

183 
	#LL_RCC_HSE_PREDIV2_DIV_14
 
RCC_CFGR2_PREDIV2_DIV14


	)

184 
	#LL_RCC_HSE_PREDIV2_DIV_15
 
RCC_CFGR2_PREDIV2_DIV15


	)

185 
	#LL_RCC_HSE_PREDIV2_DIV_16
 
RCC_CFGR2_PREDIV2_DIV16


	)

195 
	#LL_RCC_SYS_CLKSOURCE_HSI
 
RCC_CFGR_SW_HSI


	)

196 
	#LL_RCC_SYS_CLKSOURCE_HSE
 
RCC_CFGR_SW_HSE


	)

197 
	#LL_RCC_SYS_CLKSOURCE_PLL
 
RCC_CFGR_SW_PLL


	)

205 
	#LL_RCC_SYS_CLKSOURCE_STATUS_HSI
 
RCC_CFGR_SWS_HSI


	)

206 
	#LL_RCC_SYS_CLKSOURCE_STATUS_HSE
 
RCC_CFGR_SWS_HSE


	)

207 
	#LL_RCC_SYS_CLKSOURCE_STATUS_PLL
 
RCC_CFGR_SWS_PLL


	)

215 
	#LL_RCC_SYSCLK_DIV_1
 
RCC_CFGR_HPRE_DIV1


	)

216 
	#LL_RCC_SYSCLK_DIV_2
 
RCC_CFGR_HPRE_DIV2


	)

217 
	#LL_RCC_SYSCLK_DIV_4
 
RCC_CFGR_HPRE_DIV4


	)

218 
	#LL_RCC_SYSCLK_DIV_8
 
RCC_CFGR_HPRE_DIV8


	)

219 
	#LL_RCC_SYSCLK_DIV_16
 
RCC_CFGR_HPRE_DIV16


	)

220 
	#LL_RCC_SYSCLK_DIV_64
 
RCC_CFGR_HPRE_DIV64


	)

221 
	#LL_RCC_SYSCLK_DIV_128
 
RCC_CFGR_HPRE_DIV128


	)

222 
	#LL_RCC_SYSCLK_DIV_256
 
RCC_CFGR_HPRE_DIV256


	)

223 
	#LL_RCC_SYSCLK_DIV_512
 
RCC_CFGR_HPRE_DIV512


	)

231 
	#LL_RCC_APB1_DIV_1
 
RCC_CFGR_PPRE1_DIV1


	)

232 
	#LL_RCC_APB1_DIV_2
 
RCC_CFGR_PPRE1_DIV2


	)

233 
	#LL_RCC_APB1_DIV_4
 
RCC_CFGR_PPRE1_DIV4


	)

234 
	#LL_RCC_APB1_DIV_8
 
RCC_CFGR_PPRE1_DIV8


	)

235 
	#LL_RCC_APB1_DIV_16
 
RCC_CFGR_PPRE1_DIV16


	)

243 
	#LL_RCC_APB2_DIV_1
 
RCC_CFGR_PPRE2_DIV1


	)

244 
	#LL_RCC_APB2_DIV_2
 
RCC_CFGR_PPRE2_DIV2


	)

245 
	#LL_RCC_APB2_DIV_4
 
RCC_CFGR_PPRE2_DIV4


	)

246 
	#LL_RCC_APB2_DIV_8
 
RCC_CFGR_PPRE2_DIV8


	)

247 
	#LL_RCC_APB2_DIV_16
 
RCC_CFGR_PPRE2_DIV16


	)

255 
	#LL_RCC_MCO1SOURCE_NOCLOCK
 
RCC_CFGR_MCO_NOCLOCK


	)

256 
	#LL_RCC_MCO1SOURCE_SYSCLK
 
RCC_CFGR_MCO_SYSCLK


	)

257 
	#LL_RCC_MCO1SOURCE_HSI
 
RCC_CFGR_MCO_HSI


	)

258 
	#LL_RCC_MCO1SOURCE_HSE
 
RCC_CFGR_MCO_HSE


	)

259 
	#LL_RCC_MCO1SOURCE_PLLCLK_DIV_2
 
RCC_CFGR_MCO_PLLCLK_DIV2


	)

260 #i‡
deföed
(
RCC_CFGR_MCO_PLL2CLK
)

261 
	#LL_RCC_MCO1SOURCE_PLL2CLK
 
RCC_CFGR_MCO_PLL2CLK


	)

263 #i‡
deföed
(
RCC_CFGR_MCO_PLL3CLK_DIV2
)

264 
	#LL_RCC_MCO1SOURCE_PLLI2SCLK_DIV2
 
RCC_CFGR_MCO_PLL3CLK_DIV2


	)

266 #i‡
deföed
(
RCC_CFGR_MCO_EXT_HSE
)

267 
	#LL_RCC_MCO1SOURCE_EXT_HSE
 
RCC_CFGR_MCO_EXT_HSE


	)

269 #i‡
deföed
(
RCC_CFGR_MCO_PLL3CLK
)

270 
	#LL_RCC_MCO1SOURCE_PLLI2SCLK
 
RCC_CFGR_MCO_PLL3CLK


	)

276 #i‡
deföed
(
USE_FULL_LL_DRIVER
)

280 
	#LL_RCC_PERIPH_FREQUENCY_NO
 0x00000000U

	)

281 
	#LL_RCC_PERIPH_FREQUENCY_NA
 0xFFFFFFFFU

	)

287 #i‡
deföed
(
RCC_CFGR2_I2S2SRC
)

291 
	#LL_RCC_I2S2_CLKSOURCE_SYSCLK
 
RCC_CFGR2_I2S2SRC


	)

292 
	#LL_RCC_I2S2_CLKSOURCE_PLLI2S_VCO
 (
uöt32_t
)(
RCC_CFGR2_I2S2SRC
 | (RCC_CFGR2_I2S2SRC >> 16U)Ë

	)

293 
	#LL_RCC_I2S3_CLKSOURCE_SYSCLK
 
RCC_CFGR2_I2S3SRC


	)

294 
	#LL_RCC_I2S3_CLKSOURCE_PLLI2S_VCO
 (
uöt32_t
)(
RCC_CFGR2_I2S3SRC
 | (RCC_CFGR2_I2S3SRC >> 16U)Ë

	)

300 #i‡
deföed
(
USB_OTG_FS
Ë|| deföed(
USB
)

304 #i‡
deföed
(
RCC_CFGR_USBPRE
)

305 
	#LL_RCC_USB_CLKSOURCE_PLL
 
RCC_CFGR_USBPRE


	)

306 
	#LL_RCC_USB_CLKSOURCE_PLL_DIV_1_5
 0x00000000U

	)

308 #i‡
deföed
(
RCC_CFGR_OTGFSPRE
)

309 
	#LL_RCC_USB_CLKSOURCE_PLL_DIV_2
 
RCC_CFGR_OTGFSPRE


	)

310 
	#LL_RCC_USB_CLKSOURCE_PLL_DIV_3
 0x00000000U

	)

320 
	#LL_RCC_ADC_CLKSRC_PCLK2_DIV_2
 
RCC_CFGR_ADCPRE_DIV2


	)

321 
	#LL_RCC_ADC_CLKSRC_PCLK2_DIV_4
 
RCC_CFGR_ADCPRE_DIV4


	)

322 
	#LL_RCC_ADC_CLKSRC_PCLK2_DIV_6
 
RCC_CFGR_ADCPRE_DIV6


	)

323 
	#LL_RCC_ADC_CLKSRC_PCLK2_DIV_8
 
RCC_CFGR_ADCPRE_DIV8


	)

328 #i‡
deföed
(
RCC_CFGR2_I2S2SRC
)

332 
	#LL_RCC_I2S2_CLKSOURCE
 
RCC_CFGR2_I2S2SRC


	)

333 
	#LL_RCC_I2S3_CLKSOURCE
 
RCC_CFGR2_I2S3SRC


	)

340 #i‡
deföed
(
USB_OTG_FS
Ë|| deföed(
USB
)

344 
	#LL_RCC_USB_CLKSOURCE
 0x00400000U

	)

354 
	#LL_RCC_ADC_CLKSOURCE
 
RCC_CFGR_ADCPRE


	)

362 
	#LL_RCC_RTC_CLKSOURCE_NONE
 0x00000000U

	)

363 
	#LL_RCC_RTC_CLKSOURCE_LSE
 
RCC_BDCR_RTCSEL_0


	)

364 
	#LL_RCC_RTC_CLKSOURCE_LSI
 
RCC_BDCR_RTCSEL_1


	)

365 
	#LL_RCC_RTC_CLKSOURCE_HSE_DIV128
 
RCC_BDCR_RTCSEL


	)

373 #i‡
deföed
(
RCC_CFGR_PLLMULL2
)

374 
	#LL_RCC_PLL_MUL_2
 
RCC_CFGR_PLLMULL2


	)

376 #i‡
deföed
(
RCC_CFGR_PLLMULL3
)

377 
	#LL_RCC_PLL_MUL_3
 
RCC_CFGR_PLLMULL3


	)

379 
	#LL_RCC_PLL_MUL_4
 
RCC_CFGR_PLLMULL4


	)

380 
	#LL_RCC_PLL_MUL_5
 
RCC_CFGR_PLLMULL5


	)

381 
	#LL_RCC_PLL_MUL_6
 
RCC_CFGR_PLLMULL6


	)

382 
	#LL_RCC_PLL_MUL_7
 
RCC_CFGR_PLLMULL7


	)

383 
	#LL_RCC_PLL_MUL_8
 
RCC_CFGR_PLLMULL8


	)

384 
	#LL_RCC_PLL_MUL_9
 
RCC_CFGR_PLLMULL9


	)

385 #i‡
deföed
(
RCC_CFGR_PLLMULL6_5
)

386 
	#LL_RCC_PLL_MUL_6_5
 
RCC_CFGR_PLLMULL6_5


	)

388 
	#LL_RCC_PLL_MUL_10
 
RCC_CFGR_PLLMULL10


	)

389 
	#LL_RCC_PLL_MUL_11
 
RCC_CFGR_PLLMULL11


	)

390 
	#LL_RCC_PLL_MUL_12
 
RCC_CFGR_PLLMULL12


	)

391 
	#LL_RCC_PLL_MUL_13
 
RCC_CFGR_PLLMULL13


	)

392 
	#LL_RCC_PLL_MUL_14
 
RCC_CFGR_PLLMULL14


	)

393 
	#LL_RCC_PLL_MUL_15
 
RCC_CFGR_PLLMULL15


	)

394 
	#LL_RCC_PLL_MUL_16
 
RCC_CFGR_PLLMULL16


	)

403 
	#LL_RCC_PLLSOURCE_HSI_DIV_2
 0x00000000U

	)

404 
	#LL_RCC_PLLSOURCE_HSE
 
RCC_CFGR_PLLSRC


	)

405 #i‡
deföed
(
RCC_CFGR2_PREDIV1SRC
)

406 
	#LL_RCC_PLLSOURCE_PLL2
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1SRC
 << 4UË

	)

409 #i‡
deföed
(
RCC_CFGR2_PREDIV1
)

410 
	#LL_RCC_PLLSOURCE_HSE_DIV_1
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV1
Ë

	)

411 
	#LL_RCC_PLLSOURCE_HSE_DIV_2
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV2
Ë

	)

412 
	#LL_RCC_PLLSOURCE_HSE_DIV_3
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV3
Ë

	)

413 
	#LL_RCC_PLLSOURCE_HSE_DIV_4
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV4
Ë

	)

414 
	#LL_RCC_PLLSOURCE_HSE_DIV_5
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV5
Ë

	)

415 
	#LL_RCC_PLLSOURCE_HSE_DIV_6
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV6
Ë

	)

416 
	#LL_RCC_PLLSOURCE_HSE_DIV_7
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV7
Ë

	)

417 
	#LL_RCC_PLLSOURCE_HSE_DIV_8
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV8
Ë

	)

418 
	#LL_RCC_PLLSOURCE_HSE_DIV_9
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV9
Ë

	)

419 
	#LL_RCC_PLLSOURCE_HSE_DIV_10
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV10
Ë

	)

420 
	#LL_RCC_PLLSOURCE_HSE_DIV_11
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV11
Ë

	)

421 
	#LL_RCC_PLLSOURCE_HSE_DIV_12
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV12
Ë

	)

422 
	#LL_RCC_PLLSOURCE_HSE_DIV_13
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV13
Ë

	)

423 
	#LL_RCC_PLLSOURCE_HSE_DIV_14
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV14
Ë

	)

424 
	#LL_RCC_PLLSOURCE_HSE_DIV_15
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV15
Ë

	)

425 
	#LL_RCC_PLLSOURCE_HSE_DIV_16
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV16
Ë

	)

426 #i‡
deföed
(
RCC_CFGR2_PREDIV1SRC
)

427 
	#LL_RCC_PLLSOURCE_PLL2_DIV_1
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV1
 | 
RCC_CFGR2_PREDIV1SRC
 << 4UË

	)

428 
	#LL_RCC_PLLSOURCE_PLL2_DIV_2
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV2
 | 
RCC_CFGR2_PREDIV1SRC
 << 4UË

	)

429 
	#LL_RCC_PLLSOURCE_PLL2_DIV_3
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV3
 | 
RCC_CFGR2_PREDIV1SRC
 << 4UË

	)

430 
	#LL_RCC_PLLSOURCE_PLL2_DIV_4
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV4
 | 
RCC_CFGR2_PREDIV1SRC
 << 4UË

	)

431 
	#LL_RCC_PLLSOURCE_PLL2_DIV_5
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV5
 | 
RCC_CFGR2_PREDIV1SRC
 << 4UË

	)

432 
	#LL_RCC_PLLSOURCE_PLL2_DIV_6
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV6
 | 
RCC_CFGR2_PREDIV1SRC
 << 4UË

	)

433 
	#LL_RCC_PLLSOURCE_PLL2_DIV_7
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV7
 | 
RCC_CFGR2_PREDIV1SRC
 << 4UË

	)

434 
	#LL_RCC_PLLSOURCE_PLL2_DIV_8
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV8
 | 
RCC_CFGR2_PREDIV1SRC
 << 4UË

	)

435 
	#LL_RCC_PLLSOURCE_PLL2_DIV_9
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV9
 | 
RCC_CFGR2_PREDIV1SRC
 << 4UË

	)

436 
	#LL_RCC_PLLSOURCE_PLL2_DIV_10
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV10
 | 
RCC_CFGR2_PREDIV1SRC
 << 4UË

	)

437 
	#LL_RCC_PLLSOURCE_PLL2_DIV_11
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV11
 | 
RCC_CFGR2_PREDIV1SRC
 << 4UË

	)

438 
	#LL_RCC_PLLSOURCE_PLL2_DIV_12
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV12
 | 
RCC_CFGR2_PREDIV1SRC
 << 4UË

	)

439 
	#LL_RCC_PLLSOURCE_PLL2_DIV_13
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV13
 | 
RCC_CFGR2_PREDIV1SRC
 << 4UË

	)

440 
	#LL_RCC_PLLSOURCE_PLL2_DIV_14
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV14
 | 
RCC_CFGR2_PREDIV1SRC
 << 4UË

	)

441 
	#LL_RCC_PLLSOURCE_PLL2_DIV_15
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV15
 | 
RCC_CFGR2_PREDIV1SRC
 << 4UË

	)

442 
	#LL_RCC_PLLSOURCE_PLL2_DIV_16
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR2_PREDIV1_DIV16
 | 
RCC_CFGR2_PREDIV1SRC
 << 4UË

	)

445 
	#LL_RCC_PLLSOURCE_HSE_DIV_1
 (
RCC_CFGR_PLLSRC
 | 0x00000000UË

	)

446 
	#LL_RCC_PLLSOURCE_HSE_DIV_2
 (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLXTPRE
Ë

	)

455 #i‡
deföed
(
RCC_CFGR2_PREDIV1
)

456 
	#LL_RCC_PREDIV_DIV_1
 
RCC_CFGR2_PREDIV1_DIV1


	)

457 
	#LL_RCC_PREDIV_DIV_2
 
RCC_CFGR2_PREDIV1_DIV2


	)

458 
	#LL_RCC_PREDIV_DIV_3
 
RCC_CFGR2_PREDIV1_DIV3


	)

459 
	#LL_RCC_PREDIV_DIV_4
 
RCC_CFGR2_PREDIV1_DIV4


	)

460 
	#LL_RCC_PREDIV_DIV_5
 
RCC_CFGR2_PREDIV1_DIV5


	)

461 
	#LL_RCC_PREDIV_DIV_6
 
RCC_CFGR2_PREDIV1_DIV6


	)

462 
	#LL_RCC_PREDIV_DIV_7
 
RCC_CFGR2_PREDIV1_DIV7


	)

463 
	#LL_RCC_PREDIV_DIV_8
 
RCC_CFGR2_PREDIV1_DIV8


	)

464 
	#LL_RCC_PREDIV_DIV_9
 
RCC_CFGR2_PREDIV1_DIV9


	)

465 
	#LL_RCC_PREDIV_DIV_10
 
RCC_CFGR2_PREDIV1_DIV10


	)

466 
	#LL_RCC_PREDIV_DIV_11
 
RCC_CFGR2_PREDIV1_DIV11


	)

467 
	#LL_RCC_PREDIV_DIV_12
 
RCC_CFGR2_PREDIV1_DIV12


	)

468 
	#LL_RCC_PREDIV_DIV_13
 
RCC_CFGR2_PREDIV1_DIV13


	)

469 
	#LL_RCC_PREDIV_DIV_14
 
RCC_CFGR2_PREDIV1_DIV14


	)

470 
	#LL_RCC_PREDIV_DIV_15
 
RCC_CFGR2_PREDIV1_DIV15


	)

471 
	#LL_RCC_PREDIV_DIV_16
 
RCC_CFGR2_PREDIV1_DIV16


	)

473 
	#LL_RCC_PREDIV_DIV_1
 0x00000000U

	)

474 
	#LL_RCC_PREDIV_DIV_2
 
RCC_CFGR_PLLXTPRE


	)

480 #i‡
deföed
(
RCC_PLLI2S_SUPPORT
)

484 
	#LL_RCC_PLLI2S_MUL_8
 
RCC_CFGR2_PLL3MUL8


	)

485 
	#LL_RCC_PLLI2S_MUL_9
 
RCC_CFGR2_PLL3MUL9


	)

486 
	#LL_RCC_PLLI2S_MUL_10
 
RCC_CFGR2_PLL3MUL10


	)

487 
	#LL_RCC_PLLI2S_MUL_11
 
RCC_CFGR2_PLL3MUL11


	)

488 
	#LL_RCC_PLLI2S_MUL_12
 
RCC_CFGR2_PLL3MUL12


	)

489 
	#LL_RCC_PLLI2S_MUL_13
 
RCC_CFGR2_PLL3MUL13


	)

490 
	#LL_RCC_PLLI2S_MUL_14
 
RCC_CFGR2_PLL3MUL14


	)

491 
	#LL_RCC_PLLI2S_MUL_16
 
RCC_CFGR2_PLL3MUL16


	)

492 
	#LL_RCC_PLLI2S_MUL_20
 
RCC_CFGR2_PLL3MUL20


	)

499 #i‡
deföed
(
RCC_PLL2_SUPPORT
)

503 
	#LL_RCC_PLL2_MUL_8
 
RCC_CFGR2_PLL2MUL8


	)

504 
	#LL_RCC_PLL2_MUL_9
 
RCC_CFGR2_PLL2MUL9


	)

505 
	#LL_RCC_PLL2_MUL_10
 
RCC_CFGR2_PLL2MUL10


	)

506 
	#LL_RCC_PLL2_MUL_11
 
RCC_CFGR2_PLL2MUL11


	)

507 
	#LL_RCC_PLL2_MUL_12
 
RCC_CFGR2_PLL2MUL12


	)

508 
	#LL_RCC_PLL2_MUL_13
 
RCC_CFGR2_PLL2MUL13


	)

509 
	#LL_RCC_PLL2_MUL_14
 
RCC_CFGR2_PLL2MUL14


	)

510 
	#LL_RCC_PLL2_MUL_16
 
RCC_CFGR2_PLL2MUL16


	)

511 
	#LL_RCC_PLL2_MUL_20
 
RCC_CFGR2_PLL2MUL20


	)

537 
	#LL_RCC_WrôeReg
(
__REG__
, 
__VALUE__
Ë
	`WRITE_REG
(
RCC
->__REG__, (__VALUE__))

	)

544 
	#LL_RCC_RódReg
(
__REG__
Ë
	`READ_REG
(
RCC
->__REG__)

	)

553 #i‡
deföed
(
RCC_CFGR_PLLMULL6_5
)

568 
	#__LL_RCC_CALC_PLLCLK_FREQ
(
__INPUTFREQ__
, 
__PLLMUL__
) \

569 (((
__PLLMUL__
Ë!
RCC_CFGR_PLLMULL6_5
) ? \

570 ((
__INPUTFREQ__
Ë* ((((
__PLLMUL__
Ë& 
RCC_CFGR_PLLMULL
Ë>> 
RCC_CFGR_PLLMULL_Pos
) + 2U)) :\

571 (((
__INPUTFREQ__
Ë* 13UË/ 2U))

	)

596 
	#__LL_RCC_CALC_PLLCLK_FREQ
(
__INPUTFREQ__
, 
__PLLMUL__
Ë((__INPUTFREQ__Ë* (((__PLLMUL__Ë>> 
RCC_CFGR_PLLMULL_Pos
Ë+ 2U))

	)

599 #i‡
deföed
(
RCC_PLLI2S_SUPPORT
)

633 
	#__LL_RCC_CALC_PLLI2SCLK_FREQ
(
__INPUTFREQ__
, 
__PLLI2SMUL__
, 
__PLLI2SDIV__
Ë(((__INPUTFREQ__Ë* (((__PLLI2SMUL__Ë>> 
RCC_CFGR2_PLL3MUL_Pos
Ë+ 2U)Ë/ (((__PLLI2SDIV__Ë>> 
RCC_CFGR2_PREDIV2_Pos
Ë+ 1U))

	)

636 #i‡
deföed
(
RCC_PLL2_SUPPORT
)

670 
	#__LL_RCC_CALC_PLL2CLK_FREQ
(
__INPUTFREQ__
, 
__PLL2MUL__
, 
__PLL2DIV__
Ë(((__INPUTFREQ__Ë* (((__PLL2MUL__Ë>> 
RCC_CFGR2_PLL2MUL_Pos
Ë+ 2U)Ë/ (((__PLL2DIV__Ë>> 
RCC_CFGR2_PREDIV2_Pos
Ë+ 1U))

	)

690 
	#__LL_RCC_CALC_HCLK_FREQ
(
__SYSCLKFREQ__
, 
__AHBPRESCALER__
Ë((__SYSCLKFREQ__Ë>> 
AHBPªscTabÀ
[((__AHBPRESCALER__Ë& 
RCC_CFGR_HPRE
Ë>> 
RCC_CFGR_HPRE_Pos
])

	)

705 
	#__LL_RCC_CALC_PCLK1_FREQ
(
__HCLKFREQ__
, 
__APB1PRESCALER__
Ë((__HCLKFREQ__Ë>> 
APBPªscTabÀ
[(__APB1PRESCALER__Ë>> 
RCC_CFGR_PPRE1_Pos
])

	)

720 
	#__LL_RCC_CALC_PCLK2_FREQ
(
__HCLKFREQ__
, 
__APB2PRESCALER__
Ë((__HCLKFREQ__Ë>> 
APBPªscTabÀ
[(__APB2PRESCALER__Ë>> 
RCC_CFGR_PPRE2_Pos
])

	)

744 
__STATIC_INLINE
 
LL_RCC_HSE_E«bÀCSS
()

746 
SET_BIT
(
RCC
->
CR
, 
RCC_CR_CSSON
);

754 
__STATIC_INLINE
 
LL_RCC_HSE_E«bÀBy∑ss
()

756 
SET_BIT
(
RCC
->
CR
, 
RCC_CR_HSEBYP
);

764 
__STATIC_INLINE
 
LL_RCC_HSE_DißbÀBy∑ss
()

766 
CLEAR_BIT
(
RCC
->
CR
, 
RCC_CR_HSEBYP
);

774 
__STATIC_INLINE
 
LL_RCC_HSE_E«bÀ
()

776 
SET_BIT
(
RCC
->
CR
, 
RCC_CR_HSEON
);

784 
__STATIC_INLINE
 
LL_RCC_HSE_DißbÀ
()

786 
CLEAR_BIT
(
RCC
->
CR
, 
RCC_CR_HSEON
);

794 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_HSE_IsRódy
()

796  (
READ_BIT
(
RCC
->
CR
, 
RCC_CR_HSERDY
) == (RCC_CR_HSERDY));

799 #i‡
deföed
(
RCC_CFGR2_PREDIV2
)

821 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_HSE_GëPªdiv2
()

823  (
uöt32_t
)(
READ_BIT
(
RCC
->
CFGR2
, 
RCC_CFGR2_PREDIV2
));

840 
__STATIC_INLINE
 
LL_RCC_HSI_E«bÀ
()

842 
SET_BIT
(
RCC
->
CR
, 
RCC_CR_HSION
);

850 
__STATIC_INLINE
 
LL_RCC_HSI_DißbÀ
()

852 
CLEAR_BIT
(
RCC
->
CR
, 
RCC_CR_HSION
);

860 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_HSI_IsRódy
()

862  (
READ_BIT
(
RCC
->
CR
, 
RCC_CR_HSIRDY
) == (RCC_CR_HSIRDY));

872 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_HSI_GëCÆibøti⁄
()

874  (
uöt32_t
)(
READ_BIT
(
RCC
->
CR
, 
RCC_CR_HSICAL
Ë>> 
RCC_CR_HSICAL_Pos
);

886 
__STATIC_INLINE
 
LL_RCC_HSI_SëCÆibTrimmög
(
uöt32_t
 
VÆue
)

888 
MODIFY_REG
(
RCC
->
CR
, 
RCC_CR_HSITRIM
, 
VÆue
 << 
RCC_CR_HSITRIM_Pos
);

896 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_HSI_GëCÆibTrimmög
()

898  (
uöt32_t
)(
READ_BIT
(
RCC
->
CR
, 
RCC_CR_HSITRIM
Ë>> 
RCC_CR_HSITRIM_Pos
);

914 
__STATIC_INLINE
 
LL_RCC_LSE_E«bÀ
()

916 
SET_BIT
(
RCC
->
BDCR
, 
RCC_BDCR_LSEON
);

924 
__STATIC_INLINE
 
LL_RCC_LSE_DißbÀ
()

926 
CLEAR_BIT
(
RCC
->
BDCR
, 
RCC_BDCR_LSEON
);

934 
__STATIC_INLINE
 
LL_RCC_LSE_E«bÀBy∑ss
()

936 
SET_BIT
(
RCC
->
BDCR
, 
RCC_BDCR_LSEBYP
);

944 
__STATIC_INLINE
 
LL_RCC_LSE_DißbÀBy∑ss
()

946 
CLEAR_BIT
(
RCC
->
BDCR
, 
RCC_BDCR_LSEBYP
);

954 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_LSE_IsRódy
()

956  (
READ_BIT
(
RCC
->
BDCR
, 
RCC_BDCR_LSERDY
) == (RCC_BDCR_LSERDY));

972 
__STATIC_INLINE
 
LL_RCC_LSI_E«bÀ
()

974 
SET_BIT
(
RCC
->
CSR
, 
RCC_CSR_LSION
);

982 
__STATIC_INLINE
 
LL_RCC_LSI_DißbÀ
()

984 
CLEAR_BIT
(
RCC
->
CSR
, 
RCC_CSR_LSION
);

992 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_LSI_IsRódy
()

994  (
READ_BIT
(
RCC
->
CSR
, 
RCC_CSR_LSIRDY
) == (RCC_CSR_LSIRDY));

1014 
__STATIC_INLINE
 
LL_RCC_SëSysClkSour˚
(
uöt32_t
 
Sour˚
)

1016 
MODIFY_REG
(
RCC
->
CFGR
, 
RCC_CFGR_SW
, 
Sour˚
);

1027 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_GëSysClkSour˚
()

1029  (
uöt32_t
)(
READ_BIT
(
RCC
->
CFGR
, 
RCC_CFGR_SWS
));

1047 
__STATIC_INLINE
 
LL_RCC_SëAHBPªsˇÀr
(
uöt32_t
 
PªsˇÀr
)

1049 
MODIFY_REG
(
RCC
->
CFGR
, 
RCC_CFGR_HPRE
, 
PªsˇÀr
);

1063 
__STATIC_INLINE
 
LL_RCC_SëAPB1PªsˇÀr
(
uöt32_t
 
PªsˇÀr
)

1065 
MODIFY_REG
(
RCC
->
CFGR
, 
RCC_CFGR_PPRE1
, 
PªsˇÀr
);

1079 
__STATIC_INLINE
 
LL_RCC_SëAPB2PªsˇÀr
(
uöt32_t
 
PªsˇÀr
)

1081 
MODIFY_REG
(
RCC
->
CFGR
, 
RCC_CFGR_PPRE2
, 
PªsˇÀr
);

1098 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_GëAHBPªsˇÀr
()

1100  (
uöt32_t
)(
READ_BIT
(
RCC
->
CFGR
, 
RCC_CFGR_HPRE
));

1113 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_GëAPB1PªsˇÀr
()

1115  (
uöt32_t
)(
READ_BIT
(
RCC
->
CFGR
, 
RCC_CFGR_PPRE1
));

1128 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_GëAPB2PªsˇÀr
()

1130  (
uöt32_t
)(
READ_BIT
(
RCC
->
CFGR
, 
RCC_CFGR_PPRE2
));

1158 
__STATIC_INLINE
 
LL_RCC_C⁄figMCO
(
uöt32_t
 
MCOxSour˚
)

1160 
MODIFY_REG
(
RCC
->
CFGR
, 
RCC_CFGR_MCOSEL
, 
MCOxSour˚
);

1171 #i‡
deföed
(
RCC_CFGR2_I2S2SRC
)

1183 
__STATIC_INLINE
 
LL_RCC_SëI2SClockSour˚
(
uöt32_t
 
I2SxSour˚
)

1185 
MODIFY_REG
(
RCC
->
CFGR2
, (
I2SxSour˚
 & 0xFFFF0000U), (I2SxSource << 16U));

1189 #i‡
deföed
(
USB_OTG_FS
Ë|| deföed(
USB
)

1203 
__STATIC_INLINE
 
LL_RCC_SëUSBClockSour˚
(
uöt32_t
 
USBxSour˚
)

1205 #i‡
deföed
(
RCC_CFGR_USBPRE
)

1206 
MODIFY_REG
(
RCC
->
CFGR
, 
RCC_CFGR_USBPRE
, 
USBxSour˚
);

1208 
MODIFY_REG
(
RCC
->
CFGR
, 
RCC_CFGR_OTGFSPRE
, 
USBxSour˚
);

1223 
__STATIC_INLINE
 
LL_RCC_SëADCClockSour˚
(
uöt32_t
 
ADCxSour˚
)

1225 
MODIFY_REG
(
RCC
->
CFGR
, 
RCC_CFGR_ADCPRE
, 
ADCxSour˚
);

1228 #i‡
deföed
(
RCC_CFGR2_I2S2SRC
)

1242 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_GëI2SClockSour˚
(uöt32_à
I2Sx
)

1244  (
uöt32_t
)(
READ_BIT
(
RCC
->
CFGR2
, 
I2Sx
) >> 16U | I2Sx);

1248 #i‡
deföed
(
USB_OTG_FS
Ë|| deföed(
USB
)

1263 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_GëUSBClockSour˚
(uöt32_à
USBx
)

1265  (
uöt32_t
)(
READ_BIT
(
RCC
->
CFGR
, 
USBx
));

1280 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_GëADCClockSour˚
(uöt32_à
ADCx
)

1282  (
uöt32_t
)(
READ_BIT
(
RCC
->
CFGR
, 
ADCx
));

1305 
__STATIC_INLINE
 
LL_RCC_SëRTCClockSour˚
(
uöt32_t
 
Sour˚
)

1307 
MODIFY_REG
(
RCC
->
BDCR
, 
RCC_BDCR_RTCSEL
, 
Sour˚
);

1319 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_GëRTCClockSour˚
()

1321  (
uöt32_t
)(
READ_BIT
(
RCC
->
BDCR
, 
RCC_BDCR_RTCSEL
));

1329 
__STATIC_INLINE
 
LL_RCC_E«bÀRTC
()

1331 
SET_BIT
(
RCC
->
BDCR
, 
RCC_BDCR_RTCEN
);

1339 
__STATIC_INLINE
 
LL_RCC_DißbÀRTC
()

1341 
CLEAR_BIT
(
RCC
->
BDCR
, 
RCC_BDCR_RTCEN
);

1349 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_IsE«bÀdRTC
()

1351  (
READ_BIT
(
RCC
->
BDCR
, 
RCC_BDCR_RTCEN
) == (RCC_BDCR_RTCEN));

1359 
__STATIC_INLINE
 
LL_RCC_F‹˚BackupDomaöRe£t
()

1361 
SET_BIT
(
RCC
->
BDCR
, 
RCC_BDCR_BDRST
);

1369 
__STATIC_INLINE
 
LL_RCC_Rñó£BackupDomaöRe£t
()

1371 
CLEAR_BIT
(
RCC
->
BDCR
, 
RCC_BDCR_BDRST
);

1387 
__STATIC_INLINE
 
LL_RCC_PLL_E«bÀ
()

1389 
SET_BIT
(
RCC
->
CR
, 
RCC_CR_PLLON
);

1398 
__STATIC_INLINE
 
LL_RCC_PLL_DißbÀ
()

1400 
CLEAR_BIT
(
RCC
->
CR
, 
RCC_CR_PLLON
);

1408 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_PLL_IsRódy
()

1410  (
READ_BIT
(
RCC
->
CR
, 
RCC_CR_PLLRDY
) == (RCC_CR_PLLRDY));

1477 
__STATIC_INLINE
 
LL_RCC_PLL_C⁄figDomaö_SYS
(
uöt32_t
 
Sour˚
, uöt32_à
PLLMul
)

1479 
MODIFY_REG
(
RCC
->
CFGR
, 
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLXTPRE
 | 
RCC_CFGR_PLLMULL
,

1480 (
Sour˚
 & (
RCC_CFGR_PLLSRC
 | 
RCC_CFGR_PLLXTPRE
)Ë| 
PLLMul
);

1481 #i‡
deföed
(
RCC_CFGR2_PREDIV1
)

1482 #i‡
deföed
(
RCC_CFGR2_PREDIV1SRC
)

1483 
MODIFY_REG
(
RCC
->
CFGR2
, (
RCC_CFGR2_PREDIV1
 | 
RCC_CFGR2_PREDIV1SRC
),

1484 (
Sour˚
 & 
RCC_CFGR2_PREDIV1
Ë| ((Sour˚ & (
RCC_CFGR2_PREDIV1SRC
 << 4U)) >> 4U));

1486 
MODIFY_REG
(
RCC
->
CFGR2
, 
RCC_CFGR2_PREDIV1
, (
Sour˚
 & RCC_CFGR2_PREDIV1));

1501 
__STATIC_INLINE
 
LL_RCC_PLL_SëMaöSour˚
(
uöt32_t
 
PLLSour˚
)

1503 #i‡
deföed
(
RCC_CFGR2_PREDIV1SRC
)

1504 
MODIFY_REG
(
RCC
->
CFGR2
, 
RCC_CFGR2_PREDIV1SRC
, ((
PLLSour˚
 & (RCC_CFGR2_PREDIV1SRC << 4U)) >> 4U));

1506 
MODIFY_REG
(
RCC
->
CFGR
, 
RCC_CFGR_PLLSRC
, 
PLLSour˚
);

1520 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_PLL_GëMaöSour˚
()

1522 #i‡
deföed
(
RCC_CFGR2_PREDIV1SRC
)

1523 
uöt32_t
 
∂l§c
 = 
READ_BIT
(
RCC
->
CFGR
, 
RCC_CFGR_PLLSRC
);

1524 
uöt32_t
 
¥ediv§c
 = (uöt32_t)(
READ_BIT
(
RCC
->
CFGR2
, 
RCC_CFGR2_PREDIV1SRC
) << 4U);

1525  (
uöt32_t
)(
∂l§c
 | 
¥ediv§c
);

1527  (
uöt32_t
)(
READ_BIT
(
RCC
->
CFGR
, 
RCC_CFGR_PLLSRC
));

1554 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_PLL_GëMu…ùliˇt‹
()

1556  (
uöt32_t
)(
READ_BIT
(
RCC
->
CFGR
, 
RCC_CFGR_PLLMULL
));

1584 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_PLL_GëPªdiv
()

1586 #i‡
deföed
(
RCC_CFGR2_PREDIV1
)

1587  (
uöt32_t
)(
READ_BIT
(
RCC
->
CFGR2
, 
RCC_CFGR2_PREDIV1
));

1589  (
uöt32_t
)(
READ_BIT
(
RCC
->
CFGR
, 
RCC_CFGR_PLLXTPRE
Ë>> 
RCC_CFGR_PLLXTPRE_Pos
);

1597 #i‡
deföed
(
RCC_PLLI2S_SUPPORT
)

1607 
__STATIC_INLINE
 
LL_RCC_PLLI2S_E«bÀ
()

1609 
SET_BIT
(
RCC
->
CR
, 
RCC_CR_PLL3ON
);

1617 
__STATIC_INLINE
 
LL_RCC_PLLI2S_DißbÀ
()

1619 
CLEAR_BIT
(
RCC
->
CR
, 
RCC_CR_PLL3ON
);

1627 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_PLLI2S_IsRódy
()

1629  (
READ_BIT
(
RCC
->
CR
, 
RCC_CR_PLL3RDY
) == (RCC_CR_PLL3RDY));

1665 
__STATIC_INLINE
 
LL_RCC_PLL_C⁄figDomaö_PLLI2S
(
uöt32_t
 
Dividî
, uöt32_à
Mu…ùliˇt‹
)

1667 
MODIFY_REG
(
RCC
->
CFGR2
, 
RCC_CFGR2_PREDIV2
 | 
RCC_CFGR2_PLL3MUL
, 
Dividî
 | 
Mu…ùliˇt‹
);

1684 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_PLLI2S_GëMu…ùliˇt‹
()

1686  (
uöt32_t
)(
READ_BIT
(
RCC
->
CFGR2
, 
RCC_CFGR2_PLL3MUL
));

1694 #i‡
deföed
(
RCC_PLL2_SUPPORT
)

1704 
__STATIC_INLINE
 
LL_RCC_PLL2_E«bÀ
()

1706 
SET_BIT
(
RCC
->
CR
, 
RCC_CR_PLL2ON
);

1714 
__STATIC_INLINE
 
LL_RCC_PLL2_DißbÀ
()

1716 
CLEAR_BIT
(
RCC
->
CR
, 
RCC_CR_PLL2ON
);

1724 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_PLL2_IsRódy
()

1726  (
READ_BIT
(
RCC
->
CR
, 
RCC_CR_PLL2RDY
) == (RCC_CR_PLL2RDY));

1762 
__STATIC_INLINE
 
LL_RCC_PLL_C⁄figDomaö_PLL2
(
uöt32_t
 
Dividî
, uöt32_à
Mu…ùliˇt‹
)

1764 
MODIFY_REG
(
RCC
->
CFGR2
, 
RCC_CFGR2_PREDIV2
 | 
RCC_CFGR2_PLL2MUL
, 
Dividî
 | 
Mu…ùliˇt‹
);

1781 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_PLL2_GëMu…ùliˇt‹
()

1783  (
uöt32_t
)(
READ_BIT
(
RCC
->
CFGR2
, 
RCC_CFGR2_PLL2MUL
));

1800 
__STATIC_INLINE
 
LL_RCC_CÀ¨Fœg_LSIRDY
()

1802 
SET_BIT
(
RCC
->
CIR
, 
RCC_CIR_LSIRDYC
);

1810 
__STATIC_INLINE
 
LL_RCC_CÀ¨Fœg_LSERDY
()

1812 
SET_BIT
(
RCC
->
CIR
, 
RCC_CIR_LSERDYC
);

1820 
__STATIC_INLINE
 
LL_RCC_CÀ¨Fœg_HSIRDY
()

1822 
SET_BIT
(
RCC
->
CIR
, 
RCC_CIR_HSIRDYC
);

1830 
__STATIC_INLINE
 
LL_RCC_CÀ¨Fœg_HSERDY
()

1832 
SET_BIT
(
RCC
->
CIR
, 
RCC_CIR_HSERDYC
);

1840 
__STATIC_INLINE
 
LL_RCC_CÀ¨Fœg_PLLRDY
()

1842 
SET_BIT
(
RCC
->
CIR
, 
RCC_CIR_PLLRDYC
);

1845 #i‡
deföed
(
RCC_PLLI2S_SUPPORT
)

1851 
__STATIC_INLINE
 
LL_RCC_CÀ¨Fœg_PLLI2SRDY
()

1853 
SET_BIT
(
RCC
->
CIR
, 
RCC_CIR_PLL3RDYC
);

1857 #i‡
deföed
(
RCC_PLL2_SUPPORT
)

1863 
__STATIC_INLINE
 
LL_RCC_CÀ¨Fœg_PLL2RDY
()

1865 
SET_BIT
(
RCC
->
CIR
, 
RCC_CIR_PLL2RDYC
);

1874 
__STATIC_INLINE
 
LL_RCC_CÀ¨Fœg_HSECSS
()

1876 
SET_BIT
(
RCC
->
CIR
, 
RCC_CIR_CSSC
);

1884 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_IsA˘iveFœg_LSIRDY
()

1886  (
READ_BIT
(
RCC
->
CIR
, 
RCC_CIR_LSIRDYF
) == (RCC_CIR_LSIRDYF));

1894 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_IsA˘iveFœg_LSERDY
()

1896  (
READ_BIT
(
RCC
->
CIR
, 
RCC_CIR_LSERDYF
) == (RCC_CIR_LSERDYF));

1904 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_IsA˘iveFœg_HSIRDY
()

1906  (
READ_BIT
(
RCC
->
CIR
, 
RCC_CIR_HSIRDYF
) == (RCC_CIR_HSIRDYF));

1914 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_IsA˘iveFœg_HSERDY
()

1916  (
READ_BIT
(
RCC
->
CIR
, 
RCC_CIR_HSERDYF
) == (RCC_CIR_HSERDYF));

1924 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_IsA˘iveFœg_PLLRDY
()

1926  (
READ_BIT
(
RCC
->
CIR
, 
RCC_CIR_PLLRDYF
) == (RCC_CIR_PLLRDYF));

1929 #i‡
deföed
(
RCC_PLLI2S_SUPPORT
)

1935 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_IsA˘iveFœg_PLLI2SRDY
()

1937  (
READ_BIT
(
RCC
->
CIR
, 
RCC_CIR_PLL3RDYF
) == (RCC_CIR_PLL3RDYF));

1941 #i‡
deföed
(
RCC_PLL2_SUPPORT
)

1947 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_IsA˘iveFœg_PLL2RDY
()

1949  (
READ_BIT
(
RCC
->
CIR
, 
RCC_CIR_PLL2RDYF
) == (RCC_CIR_PLL2RDYF));

1958 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_IsA˘iveFœg_HSECSS
()

1960  (
READ_BIT
(
RCC
->
CIR
, 
RCC_CIR_CSSF
) == (RCC_CIR_CSSF));

1968 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_IsA˘iveFœg_IWDGRST
()

1970  (
READ_BIT
(
RCC
->
CSR
, 
RCC_CSR_IWDGRSTF
) == (RCC_CSR_IWDGRSTF));

1978 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_IsA˘iveFœg_LPWRRST
()

1980  (
READ_BIT
(
RCC
->
CSR
, 
RCC_CSR_LPWRRSTF
) == (RCC_CSR_LPWRRSTF));

1988 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_IsA˘iveFœg_PINRST
()

1990  (
READ_BIT
(
RCC
->
CSR
, 
RCC_CSR_PINRSTF
) == (RCC_CSR_PINRSTF));

1998 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_IsA˘iveFœg_PORRST
()

2000  (
READ_BIT
(
RCC
->
CSR
, 
RCC_CSR_PORRSTF
) == (RCC_CSR_PORRSTF));

2008 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_IsA˘iveFœg_SFTRST
()

2010  (
READ_BIT
(
RCC
->
CSR
, 
RCC_CSR_SFTRSTF
) == (RCC_CSR_SFTRSTF));

2018 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_IsA˘iveFœg_WWDGRST
()

2020  (
READ_BIT
(
RCC
->
CSR
, 
RCC_CSR_WWDGRSTF
) == (RCC_CSR_WWDGRSTF));

2028 
__STATIC_INLINE
 
LL_RCC_CÀ¨Re£tFœgs
()

2030 
SET_BIT
(
RCC
->
CSR
, 
RCC_CSR_RMVF
);

2046 
__STATIC_INLINE
 
LL_RCC_E«bÀIT_LSIRDY
()

2048 
SET_BIT
(
RCC
->
CIR
, 
RCC_CIR_LSIRDYIE
);

2056 
__STATIC_INLINE
 
LL_RCC_E«bÀIT_LSERDY
()

2058 
SET_BIT
(
RCC
->
CIR
, 
RCC_CIR_LSERDYIE
);

2066 
__STATIC_INLINE
 
LL_RCC_E«bÀIT_HSIRDY
()

2068 
SET_BIT
(
RCC
->
CIR
, 
RCC_CIR_HSIRDYIE
);

2076 
__STATIC_INLINE
 
LL_RCC_E«bÀIT_HSERDY
()

2078 
SET_BIT
(
RCC
->
CIR
, 
RCC_CIR_HSERDYIE
);

2086 
__STATIC_INLINE
 
LL_RCC_E«bÀIT_PLLRDY
()

2088 
SET_BIT
(
RCC
->
CIR
, 
RCC_CIR_PLLRDYIE
);

2091 #i‡
deföed
(
RCC_PLLI2S_SUPPORT
)

2097 
__STATIC_INLINE
 
LL_RCC_E«bÀIT_PLLI2SRDY
()

2099 
SET_BIT
(
RCC
->
CIR
, 
RCC_CIR_PLL3RDYIE
);

2103 #i‡
deföed
(
RCC_PLL2_SUPPORT
)

2109 
__STATIC_INLINE
 
LL_RCC_E«bÀIT_PLL2RDY
()

2111 
SET_BIT
(
RCC
->
CIR
, 
RCC_CIR_PLL2RDYIE
);

2120 
__STATIC_INLINE
 
LL_RCC_DißbÀIT_LSIRDY
()

2122 
CLEAR_BIT
(
RCC
->
CIR
, 
RCC_CIR_LSIRDYIE
);

2130 
__STATIC_INLINE
 
LL_RCC_DißbÀIT_LSERDY
()

2132 
CLEAR_BIT
(
RCC
->
CIR
, 
RCC_CIR_LSERDYIE
);

2140 
__STATIC_INLINE
 
LL_RCC_DißbÀIT_HSIRDY
()

2142 
CLEAR_BIT
(
RCC
->
CIR
, 
RCC_CIR_HSIRDYIE
);

2150 
__STATIC_INLINE
 
LL_RCC_DißbÀIT_HSERDY
()

2152 
CLEAR_BIT
(
RCC
->
CIR
, 
RCC_CIR_HSERDYIE
);

2160 
__STATIC_INLINE
 
LL_RCC_DißbÀIT_PLLRDY
()

2162 
CLEAR_BIT
(
RCC
->
CIR
, 
RCC_CIR_PLLRDYIE
);

2165 #i‡
deföed
(
RCC_PLLI2S_SUPPORT
)

2171 
__STATIC_INLINE
 
LL_RCC_DißbÀIT_PLLI2SRDY
()

2173 
CLEAR_BIT
(
RCC
->
CIR
, 
RCC_CIR_PLL3RDYIE
);

2177 #i‡
deföed
(
RCC_PLL2_SUPPORT
)

2183 
__STATIC_INLINE
 
LL_RCC_DißbÀIT_PLL2RDY
()

2185 
CLEAR_BIT
(
RCC
->
CIR
, 
RCC_CIR_PLL2RDYIE
);

2194 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_IsE«bÀdIT_LSIRDY
()

2196  (
READ_BIT
(
RCC
->
CIR
, 
RCC_CIR_LSIRDYIE
) == (RCC_CIR_LSIRDYIE));

2204 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_IsE«bÀdIT_LSERDY
()

2206  (
READ_BIT
(
RCC
->
CIR
, 
RCC_CIR_LSERDYIE
) == (RCC_CIR_LSERDYIE));

2214 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_IsE«bÀdIT_HSIRDY
()

2216  (
READ_BIT
(
RCC
->
CIR
, 
RCC_CIR_HSIRDYIE
) == (RCC_CIR_HSIRDYIE));

2224 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_IsE«bÀdIT_HSERDY
()

2226  (
READ_BIT
(
RCC
->
CIR
, 
RCC_CIR_HSERDYIE
) == (RCC_CIR_HSERDYIE));

2234 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_IsE«bÀdIT_PLLRDY
()

2236  (
READ_BIT
(
RCC
->
CIR
, 
RCC_CIR_PLLRDYIE
) == (RCC_CIR_PLLRDYIE));

2239 #i‡
deföed
(
RCC_PLLI2S_SUPPORT
)

2245 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_IsE«bÀdIT_PLLI2SRDY
()

2247  (
READ_BIT
(
RCC
->
CIR
, 
RCC_CIR_PLL3RDYIE
) == (RCC_CIR_PLL3RDYIE));

2251 #i‡
deföed
(
RCC_PLL2_SUPPORT
)

2257 
__STATIC_INLINE
 
uöt32_t
 
LL_RCC_IsE«bÀdIT_PLL2RDY
()

2259  (
READ_BIT
(
RCC
->
CIR
, 
RCC_CIR_PLL2RDYIE
) == (RCC_CIR_PLL2RDYIE));

2267 #i‡
deföed
(
USE_FULL_LL_DRIVER
)

2271 
Eº‹Sètus
 
LL_RCC_DeInô
();

2279 
LL_RCC_GëSy°emClocksFªq
(
LL_RCC_ClocksTy≥Def
 *
RCC_Clocks
);

2280 #i‡
deföed
(
RCC_CFGR2_I2S2SRC
)

2281 
uöt32_t
 
LL_RCC_GëI2SClockFªq
(uöt32_à
I2SxSour˚
);

2283 #i‡
deföed
(
USB_OTG_FS
Ë|| deföed(
USB
)

2284 
uöt32_t
 
LL_RCC_GëUSBClockFªq
(uöt32_à
USBxSour˚
);

2286 
uöt32_t
 
LL_RCC_GëADCClockFªq
(uöt32_à
ADCxSour˚
);

2306 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\LL\stm32f1xx_ll_usart.c

20 #i‡
deföed
(
USE_FULL_LL_DRIVER
)

23 
	~"°m32f1xx_Œ_ußπ.h
"

24 
	~"°m32f1xx_Œ_rcc.h
"

25 
	~"°m32f1xx_Œ_bus.h
"

26 #ifde‡ 
USE_FULL_ASSERT


27 
	~"°m32_as£π.h
"

29 
	#as£π_∑øm
(
ex¥
Ë(()0U)

	)

36 #i‡
deföed
 (
USART1
Ë|| deföed (
USART2
Ë|| deföed (
USART3
Ë|| deföed (
UART4
Ë|| deföed (
UART5
)

61 
	#IS_LL_USART_BAUDRATE
(
__BAUDRATE__
Ë((__BAUDRATE__Ë<4500000U)

	)

64 
	#IS_LL_USART_BRR_MIN
(
__VALUE__
Ë((__VALUE__Ë>16U)

	)

67 
	#IS_LL_USART_BRR_MAX
(
__VALUE__
Ë((__VALUE__Ë<0x0000FFFFU)

	)

69 
	#IS_LL_USART_DIRECTION
(
__VALUE__
Ë(((__VALUE__Ë=
LL_USART_DIRECTION_NONE
) \

70 || ((
__VALUE__
Ë=
LL_USART_DIRECTION_RX
) \

71 || ((
__VALUE__
Ë=
LL_USART_DIRECTION_TX
) \

72 || ((
__VALUE__
Ë=
LL_USART_DIRECTION_TX_RX
))

	)

74 
	#IS_LL_USART_PARITY
(
__VALUE__
Ë(((__VALUE__Ë=
LL_USART_PARITY_NONE
) \

75 || ((
__VALUE__
Ë=
LL_USART_PARITY_EVEN
) \

76 || ((
__VALUE__
Ë=
LL_USART_PARITY_ODD
))

	)

78 
	#IS_LL_USART_DATAWIDTH
(
__VALUE__
Ë(((__VALUE__Ë=
LL_USART_DATAWIDTH_8B
) \

79 || ((
__VALUE__
Ë=
LL_USART_DATAWIDTH_9B
))

	)

81 
	#IS_LL_USART_OVERSAMPLING
(
__VALUE__
Ë(((__VALUE__Ë=
LL_USART_OVERSAMPLING_16
) \

82 || ((
__VALUE__
Ë=
LL_USART_OVERSAMPLING_8
))

	)

84 
	#IS_LL_USART_LASTBITCLKOUTPUT
(
__VALUE__
Ë(((__VALUE__Ë=
LL_USART_LASTCLKPULSE_NO_OUTPUT
) \

85 || ((
__VALUE__
Ë=
LL_USART_LASTCLKPULSE_OUTPUT
))

	)

87 
	#IS_LL_USART_CLOCKPHASE
(
__VALUE__
Ë(((__VALUE__Ë=
LL_USART_PHASE_1EDGE
) \

88 || ((
__VALUE__
Ë=
LL_USART_PHASE_2EDGE
))

	)

90 
	#IS_LL_USART_CLOCKPOLARITY
(
__VALUE__
Ë(((__VALUE__Ë=
LL_USART_POLARITY_LOW
) \

91 || ((
__VALUE__
Ë=
LL_USART_POLARITY_HIGH
))

	)

93 
	#IS_LL_USART_CLOCKOUTPUT
(
__VALUE__
Ë(((__VALUE__Ë=
LL_USART_CLOCK_DISABLE
) \

94 || ((
__VALUE__
Ë=
LL_USART_CLOCK_ENABLE
))

	)

96 
	#IS_LL_USART_STOPBITS
(
__VALUE__
Ë(((__VALUE__Ë=
LL_USART_STOPBITS_0_5
) \

97 || ((
__VALUE__
Ë=
LL_USART_STOPBITS_1
) \

98 || ((
__VALUE__
Ë=
LL_USART_STOPBITS_1_5
) \

99 || ((
__VALUE__
Ë=
LL_USART_STOPBITS_2
))

	)

101 
	#IS_LL_USART_HWCONTROL
(
__VALUE__
Ë(((__VALUE__Ë=
LL_USART_HWCONTROL_NONE
) \

102 || ((
__VALUE__
Ë=
LL_USART_HWCONTROL_RTS
) \

103 || ((
__VALUE__
Ë=
LL_USART_HWCONTROL_CTS
) \

104 || ((
__VALUE__
Ë=
LL_USART_HWCONTROL_RTS_CTS
))

	)

128 
Eº‹Sètus
 
	$LL_USART_DeInô
(
USART_Ty≥Def
 *
USARTx
)

130 
Eº‹Sètus
 
°©us
 = 
SUCCESS
;

133 
	`as£π_∑øm
(
	`IS_UART_INSTANCE
(
USARTx
));

135 i‡(
USARTx
 =
USART1
)

138 
	`LL_APB2_GRP1_F‹˚Re£t
(
LL_APB2_GRP1_PERIPH_USART1
);

141 
	`LL_APB2_GRP1_Rñó£Re£t
(
LL_APB2_GRP1_PERIPH_USART1
);

143 i‡(
USARTx
 =
USART2
)

146 
	`LL_APB1_GRP1_F‹˚Re£t
(
LL_APB1_GRP1_PERIPH_USART2
);

149 
	`LL_APB1_GRP1_Rñó£Re£t
(
LL_APB1_GRP1_PERIPH_USART2
);

151 #i‡
	`deföed
(
USART3
)

152 i‡(
USARTx
 =
USART3
)

155 
	`LL_APB1_GRP1_F‹˚Re£t
(
LL_APB1_GRP1_PERIPH_USART3
);

158 
	`LL_APB1_GRP1_Rñó£Re£t
(
LL_APB1_GRP1_PERIPH_USART3
);

161 #i‡
	`deföed
(
UART4
)

162 i‡(
USARTx
 =
UART4
)

165 
	`LL_APB1_GRP1_F‹˚Re£t
(
LL_APB1_GRP1_PERIPH_UART4
);

168 
	`LL_APB1_GRP1_Rñó£Re£t
(
LL_APB1_GRP1_PERIPH_UART4
);

171 #i‡
	`deföed
(
UART5
)

172 i‡(
USARTx
 =
UART5
)

175 
	`LL_APB1_GRP1_F‹˚Re£t
(
LL_APB1_GRP1_PERIPH_UART5
);

178 
	`LL_APB1_GRP1_Rñó£Re£t
(
LL_APB1_GRP1_PERIPH_UART5
);

183 
°©us
 = 
ERROR
;

186  (
°©us
);

187 
	}
}

202 
Eº‹Sètus
 
	$LL_USART_Inô
(
USART_Ty≥Def
 *
USARTx
, 
LL_USART_InôTy≥Def
 *
USART_InôSåu˘
)

204 
Eº‹Sètus
 
°©us
 = 
ERROR
;

205 
uöt32_t
 
≥rùh˛k
 = 
LL_RCC_PERIPH_FREQUENCY_NO
;

206 
LL_RCC_ClocksTy≥Def
 
rcc_˛ocks
;

209 
	`as£π_∑øm
(
	`IS_UART_INSTANCE
(
USARTx
));

210 
	`as£π_∑øm
(
	`IS_LL_USART_BAUDRATE
(
USART_InôSåu˘
->
BaudR©e
));

211 
	`as£π_∑øm
(
	`IS_LL_USART_DATAWIDTH
(
USART_InôSåu˘
->
D©aWidth
));

212 
	`as£π_∑øm
(
	`IS_LL_USART_STOPBITS
(
USART_InôSåu˘
->
St›Bôs
));

213 
	`as£π_∑øm
(
	`IS_LL_USART_PARITY
(
USART_InôSåu˘
->
P¨ôy
));

214 
	`as£π_∑øm
(
	`IS_LL_USART_DIRECTION
(
USART_InôSåu˘
->
Tøns„rDúe˘i⁄
));

215 
	`as£π_∑øm
(
	`IS_LL_USART_HWCONTROL
(
USART_InôSåu˘
->
H¨dw¨eFlowC⁄åﬁ
));

216 #i‡
	`deföed
(
USART_CR1_OVER8
)

217 
	`as£π_∑øm
(
	`IS_LL_USART_OVERSAMPLING
(
USART_InôSåu˘
->
OvîSam∂ög
));

222 i‡(
	`LL_USART_IsE«bÀd
(
USARTx
) == 0U)

231 #i‡
	`deföed
(
USART_CR1_OVER8
)

232 
	`MODIFY_REG
(
USARTx
->
CR1
,

233 (
USART_CR1_M
 | 
USART_CR1_PCE
 | 
USART_CR1_PS
 |

234 
USART_CR1_TE
 | 
USART_CR1_RE
 | 
USART_CR1_OVER8
),

235 (
USART_InôSåu˘
->
D©aWidth
 | USART_InôSåu˘->
P¨ôy
 |

236 
USART_InôSåu˘
->
Tøns„rDúe˘i⁄
 | USART_InôSåu˘->
OvîSam∂ög
));

238 
	`MODIFY_REG
(
USARTx
->
CR1
,

239 (
USART_CR1_M
 | 
USART_CR1_PCE
 | 
USART_CR1_PS
 |

240 
USART_CR1_TE
 | 
USART_CR1_RE
),

241 (
USART_InôSåu˘
->
D©aWidth
 | USART_InôSåu˘->
P¨ôy
 |

242 
USART_InôSåu˘
->
Tøns„rDúe˘i⁄
));

250 
	`LL_USART_SëSt›BôsLígth
(
USARTx
, 
USART_InôSåu˘
->
St›Bôs
);

256 
	`LL_USART_SëHWFlowCål
(
USARTx
, 
USART_InôSåu˘
->
H¨dw¨eFlowC⁄åﬁ
);

261 
	`LL_RCC_GëSy°emClocksFªq
(&
rcc_˛ocks
);

262 i‡(
USARTx
 =
USART1
)

264 
≥rùh˛k
 = 
rcc_˛ocks
.
PCLK2_Fªquícy
;

266 i‡(
USARTx
 =
USART2
)

268 
≥rùh˛k
 = 
rcc_˛ocks
.
PCLK1_Fªquícy
;

270 #i‡
	`deföed
(
USART3
)

271 i‡(
USARTx
 =
USART3
)

273 
≥rùh˛k
 = 
rcc_˛ocks
.
PCLK1_Fªquícy
;

276 #i‡
	`deföed
(
UART4
)

277 i‡(
USARTx
 =
UART4
)

279 
≥rùh˛k
 = 
rcc_˛ocks
.
PCLK1_Fªquícy
;

282 #i‡
	`deföed
(
UART5
)

283 i‡(
USARTx
 =
UART5
)

285 
≥rùh˛k
 = 
rcc_˛ocks
.
PCLK1_Fªquícy
;

297 i‡((
≥rùh˛k
 !
LL_RCC_PERIPH_FREQUENCY_NO
)

298 && (
USART_InôSåu˘
->
BaudR©e
 != 0U))

300 
°©us
 = 
SUCCESS
;

301 #i‡
	`deföed
(
USART_CR1_OVER8
)

302 
	`LL_USART_SëBaudR©e
(
USARTx
,

303 
≥rùh˛k
,

304 
USART_InôSåu˘
->
OvîSam∂ög
,

305 
USART_InôSåu˘
->
BaudR©e
);

307 
	`LL_USART_SëBaudR©e
(
USARTx
,

308 
≥rùh˛k
,

309 
USART_InôSåu˘
->
BaudR©e
);

313 
	`as£π_∑øm
(
	`IS_LL_USART_BRR_MIN
(
USARTx
->
BRR
));

316 
	`as£π_∑øm
(
	`IS_LL_USART_BRR_MAX
(
USARTx
->
BRR
));

321  (
°©us
);

322 
	}
}

331 
	$LL_USART_Såu˘Inô
(
LL_USART_InôTy≥Def
 *
USART_InôSåu˘
)

334 
USART_InôSåu˘
->
BaudR©e
 = 9600U;

335 
USART_InôSåu˘
->
D©aWidth
 = 
LL_USART_DATAWIDTH_8B
;

336 
USART_InôSåu˘
->
St›Bôs
 = 
LL_USART_STOPBITS_1
;

337 
USART_InôSåu˘
->
P¨ôy
 = 
LL_USART_PARITY_NONE
 ;

338 
USART_InôSåu˘
->
Tøns„rDúe˘i⁄
 = 
LL_USART_DIRECTION_TX_RX
;

339 
USART_InôSåu˘
->
H¨dw¨eFlowC⁄åﬁ
 = 
LL_USART_HWCONTROL_NONE
;

340 #i‡
	`deföed
(
USART_CR1_OVER8
)

341 
USART_InôSåu˘
->
OvîSam∂ög
 = 
LL_USART_OVERSAMPLING_16
;

343 
	}
}

357 
Eº‹Sètus
 
	$LL_USART_ClockInô
(
USART_Ty≥Def
 *
USARTx
, 
LL_USART_ClockInôTy≥Def
 *
USART_ClockInôSåu˘
)

359 
Eº‹Sètus
 
°©us
 = 
SUCCESS
;

362 
	`as£π_∑øm
(
	`IS_UART_INSTANCE
(
USARTx
));

363 
	`as£π_∑øm
(
	`IS_LL_USART_CLOCKOUTPUT
(
USART_ClockInôSåu˘
->
ClockOuçut
));

367 i‡(
	`LL_USART_IsE«bÀd
(
USARTx
) == 0U)

371 i‡(
USART_ClockInôSåu˘
->
ClockOuçut
 =
LL_USART_CLOCK_DISABLE
)

376 
	`LL_USART_DißbÀSCLKOuçut
(
USARTx
);

381 
	`as£π_∑øm
(
	`IS_USART_INSTANCE
(
USARTx
));

384 
	`as£π_∑øm
(
	`IS_LL_USART_CLOCKPOLARITY
(
USART_ClockInôSåu˘
->
ClockPﬁ¨ôy
));

385 
	`as£π_∑øm
(
	`IS_LL_USART_CLOCKPHASE
(
USART_ClockInôSåu˘
->
ClockPha£
));

386 
	`as£π_∑øm
(
	`IS_LL_USART_LASTBITCLKOUTPUT
(
USART_ClockInôSåu˘
->
La°BôClockPul£
));

395 
	`MODIFY_REG
(
USARTx
->
CR2
,

396 
USART_CR2_CLKEN
 | 
USART_CR2_CPHA
 | 
USART_CR2_CPOL
 | 
USART_CR2_LBCL
,

397 
USART_CR2_CLKEN
 | 
USART_ClockInôSåu˘
->
ClockPﬁ¨ôy
 |

398 
USART_ClockInôSåu˘
->
ClockPha£
 | USART_ClockInôSåu˘->
La°BôClockPul£
);

404 
°©us
 = 
ERROR
;

407  (
°©us
);

408 
	}
}

416 
	$LL_USART_ClockSåu˘Inô
(
LL_USART_ClockInôTy≥Def
 *
USART_ClockInôSåu˘
)

419 
USART_ClockInôSåu˘
->
ClockOuçut
 = 
LL_USART_CLOCK_DISABLE
;

420 
USART_ClockInôSåu˘
->
ClockPﬁ¨ôy
 = 
LL_USART_POLARITY_LOW
;

421 
USART_ClockInôSåu˘
->
ClockPha£
 = 
LL_USART_PHASE_1EDGE
;

422 
USART_ClockInôSåu˘
->
La°BôClockPul£
 = 
LL_USART_LASTCLKPULSE_NO_OUTPUT
;

423 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\LL\stm32f1xx_ll_usart.h

21 #i‚de‡
__STM32F1xx_LL_USART_H


22 
	#__STM32F1xx_LL_USART_H


	)

24 #ifde‡
__˝lu•lus


29 
	~"°m32f1xx.h
"

35 #i‡
deföed
 (
USART1
Ë|| deföed (
USART2
Ë|| deföed (
USART3
Ë|| deföed (
UART4
Ë|| deföed (
UART5
)

50 
	#USART_POSITION_GTPR_GT
 
USART_GTPR_GT_Pos


	)

56 #i‡
deföed
(
USE_FULL_LL_DRIVER
)

66 #i‡
deföed
(
USE_FULL_LL_DRIVER
)

76 
uöt32_t
 
BaudR©e
;

80 
uöt32_t
 
D©aWidth
;

85 
uöt32_t
 
St›Bôs
;

90 
uöt32_t
 
P¨ôy
;

95 
uöt32_t
 
Tøns„rDúe˘i⁄
;

100 
uöt32_t
 
H¨dw¨eFlowC⁄åﬁ
;

105 
uöt32_t
 
OvîSam∂ög
;

110 } 
	tLL_USART_InôTy≥Def
;

117 
uöt32_t
 
ClockOuçut
;

124 
uöt32_t
 
ClockPﬁ¨ôy
;

130 
uöt32_t
 
ClockPha£
;

136 
uöt32_t
 
La°BôClockPul£
;

143 } 
	tLL_USART_ClockInôTy≥Def
;

159 
	#LL_USART_SR_PE
 
USART_SR_PE


	)

160 
	#LL_USART_SR_FE
 
USART_SR_FE


	)

161 
	#LL_USART_SR_NE
 
USART_SR_NE


	)

162 
	#LL_USART_SR_ORE
 
USART_SR_ORE


	)

163 
	#LL_USART_SR_IDLE
 
USART_SR_IDLE


	)

164 
	#LL_USART_SR_RXNE
 
USART_SR_RXNE


	)

165 
	#LL_USART_SR_TC
 
USART_SR_TC


	)

166 
	#LL_USART_SR_TXE
 
USART_SR_TXE


	)

167 
	#LL_USART_SR_LBD
 
USART_SR_LBD


	)

168 
	#LL_USART_SR_CTS
 
USART_SR_CTS


	)

177 
	#LL_USART_CR1_IDLEIE
 
USART_CR1_IDLEIE


	)

178 
	#LL_USART_CR1_RXNEIE
 
USART_CR1_RXNEIE


	)

179 
	#LL_USART_CR1_TCIE
 
USART_CR1_TCIE


	)

180 
	#LL_USART_CR1_TXEIE
 
USART_CR1_TXEIE


	)

181 
	#LL_USART_CR1_PEIE
 
USART_CR1_PEIE


	)

182 
	#LL_USART_CR2_LBDIE
 
USART_CR2_LBDIE


	)

183 
	#LL_USART_CR3_EIE
 
USART_CR3_EIE


	)

184 
	#LL_USART_CR3_CTSIE
 
USART_CR3_CTSIE


	)

192 
	#LL_USART_DIRECTION_NONE
 0x00000000U

	)

193 
	#LL_USART_DIRECTION_RX
 
USART_CR1_RE


	)

194 
	#LL_USART_DIRECTION_TX
 
USART_CR1_TE


	)

195 
	#LL_USART_DIRECTION_TX_RX
 (
USART_CR1_TE
 |
USART_CR1_RE
Ë

	)

203 
	#LL_USART_PARITY_NONE
 0x00000000U

	)

204 
	#LL_USART_PARITY_EVEN
 
USART_CR1_PCE


	)

205 
	#LL_USART_PARITY_ODD
 (
USART_CR1_PCE
 | 
USART_CR1_PS
Ë

	)

213 
	#LL_USART_WAKEUP_IDLELINE
 0x00000000U

	)

214 
	#LL_USART_WAKEUP_ADDRESSMARK
 
USART_CR1_WAKE


	)

222 
	#LL_USART_DATAWIDTH_8B
 0x00000000U

	)

223 
	#LL_USART_DATAWIDTH_9B
 
USART_CR1_M


	)

231 
	#LL_USART_OVERSAMPLING_16
 0x00000000U

	)

232 #i‡ 
deföed
(
USART_CR1_OVER8
)

233 
	#LL_USART_OVERSAMPLING_8
 
USART_CR1_OVER8


	)

239 #i‡
deföed
(
USE_FULL_LL_DRIVER
)

244 
	#LL_USART_CLOCK_DISABLE
 0x00000000U

	)

245 
	#LL_USART_CLOCK_ENABLE
 
USART_CR2_CLKEN


	)

254 
	#LL_USART_LASTCLKPULSE_NO_OUTPUT
 0x00000000U

	)

255 
	#LL_USART_LASTCLKPULSE_OUTPUT
 
USART_CR2_LBCL


	)

263 
	#LL_USART_PHASE_1EDGE
 0x00000000U

	)

264 
	#LL_USART_PHASE_2EDGE
 
USART_CR2_CPHA


	)

272 
	#LL_USART_POLARITY_LOW
 0x00000000U

	)

273 
	#LL_USART_POLARITY_HIGH
 
USART_CR2_CPOL


	)

281 
	#LL_USART_STOPBITS_0_5
 
USART_CR2_STOP_0


	)

282 
	#LL_USART_STOPBITS_1
 0x00000000U

	)

283 
	#LL_USART_STOPBITS_1_5
 (
USART_CR2_STOP_0
 | 
USART_CR2_STOP_1
Ë

	)

284 
	#LL_USART_STOPBITS_2
 
USART_CR2_STOP_1


	)

292 
	#LL_USART_HWCONTROL_NONE
 0x00000000U

	)

293 
	#LL_USART_HWCONTROL_RTS
 
USART_CR3_RTSE


	)

294 
	#LL_USART_HWCONTROL_CTS
 
USART_CR3_CTSE


	)

295 
	#LL_USART_HWCONTROL_RTS_CTS
 (
USART_CR3_RTSE
 | 
USART_CR3_CTSE
Ë

	)

303 
	#LL_USART_IRDA_POWER_NORMAL
 0x00000000U

	)

304 
	#LL_USART_IRDA_POWER_LOW
 
USART_CR3_IRLP


	)

312 
	#LL_USART_LINBREAK_DETECT_10B
 0x00000000U

	)

313 
	#LL_USART_LINBREAK_DETECT_11B
 
USART_CR2_LBDL


	)

338 
	#LL_USART_WrôeReg
(
__INSTANCE__
, 
__REG__
, 
__VALUE__
Ë
	`WRITE_REG
(__INSTANCE__->__REG__, (__VALUE__))

	)

346 
	#LL_USART_RódReg
(
__INSTANCE__
, 
__REG__
Ë
	`READ_REG
(__INSTANCE__->__REG__)

	)

362 
	#__LL_USART_DIV_SAMPLING8_100
(
__PERIPHCLK__
, 
__BAUDRATE__
Ë(((__PERIPHCLK__)*25)/(2*(__BAUDRATE__)))

	)

363 
	#__LL_USART_DIVMANT_SAMPLING8
(
__PERIPHCLK__
, 
__BAUDRATE__
Ë(
	`__LL_USART_DIV_SAMPLING8_100
((__PERIPHCLK__), (__BAUDRATE__))/100)

	)

364 
	#__LL_USART_DIVFRAQ_SAMPLING8
(
__PERIPHCLK__
, 
__BAUDRATE__
Ë(((
	`__LL_USART_DIV_SAMPLING8_100
((__PERIPHCLK__), (__BAUDRATE__)Ë- (
	`__LL_USART_DIVMANT_SAMPLING8
((__PERIPHCLK__), (__BAUDRATE__)Ë* 100)Ë* 8 + 50Ë/ 100)

	)

367 
	#__LL_USART_DIV_SAMPLING8
(
__PERIPHCLK__
, 
__BAUDRATE__
Ë(((
	`__LL_USART_DIVMANT_SAMPLING8
((__PERIPHCLK__), (__BAUDRATE__)) << 4) + \

368 ((
	`__LL_USART_DIVFRAQ_SAMPLING8
((
__PERIPHCLK__
), (
__BAUDRATE__
)) & 0xF8) << 1)) + \

369 (
	`__LL_USART_DIVFRAQ_SAMPLING8
((
__PERIPHCLK__
), (
__BAUDRATE__
)Ë& 0x07))

	)

378 
	#__LL_USART_DIV_SAMPLING16_100
(
__PERIPHCLK__
, 
__BAUDRATE__
Ë(((__PERIPHCLK__)*25)/(4*(__BAUDRATE__)))

	)

379 
	#__LL_USART_DIVMANT_SAMPLING16
(
__PERIPHCLK__
, 
__BAUDRATE__
Ë(
	`__LL_USART_DIV_SAMPLING16_100
((__PERIPHCLK__), (__BAUDRATE__))/100)

	)

380 
	#__LL_USART_DIVFRAQ_SAMPLING16
(
__PERIPHCLK__
, 
__BAUDRATE__
Ë(((
	`__LL_USART_DIV_SAMPLING16_100
((__PERIPHCLK__), (__BAUDRATE__)Ë- (
	`__LL_USART_DIVMANT_SAMPLING16
((__PERIPHCLK__), (__BAUDRATE__)Ë* 100)Ë* 16 + 50Ë/ 100)

	)

383 
	#__LL_USART_DIV_SAMPLING16
(
__PERIPHCLK__
, 
__BAUDRATE__
Ë(((
	`__LL_USART_DIVMANT_SAMPLING16
((__PERIPHCLK__), (__BAUDRATE__)) << 4) + \

384 (
	`__LL_USART_DIVFRAQ_SAMPLING16
((
__PERIPHCLK__
), (
__BAUDRATE__
)) & 0xF0)) + \

385 (
	`__LL_USART_DIVFRAQ_SAMPLING16
((
__PERIPHCLK__
), (
__BAUDRATE__
)Ë& 0x0F))

	)

411 
__STATIC_INLINE
 
LL_USART_E«bÀ
(
USART_Ty≥Def
 *
USARTx
)

413 
SET_BIT
(
USARTx
->
CR1
, 
USART_CR1_UE
);

425 
__STATIC_INLINE
 
LL_USART_DißbÀ
(
USART_Ty≥Def
 *
USARTx
)

427 
CLEAR_BIT
(
USARTx
->
CR1
, 
USART_CR1_UE
);

436 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsE«bÀd
(
USART_Ty≥Def
 *
USARTx
)

438  (
READ_BIT
(
USARTx
->
CR1
, 
USART_CR1_UE
) == (USART_CR1_UE));

447 
__STATIC_INLINE
 
LL_USART_E«bÀDúe˘i⁄Rx
(
USART_Ty≥Def
 *
USARTx
)

449 
SET_BIT
(
USARTx
->
CR1
, 
USART_CR1_RE
);

458 
__STATIC_INLINE
 
LL_USART_DißbÀDúe˘i⁄Rx
(
USART_Ty≥Def
 *
USARTx
)

460 
CLEAR_BIT
(
USARTx
->
CR1
, 
USART_CR1_RE
);

469 
__STATIC_INLINE
 
LL_USART_E«bÀDúe˘i⁄Tx
(
USART_Ty≥Def
 *
USARTx
)

471 
SET_BIT
(
USARTx
->
CR1
, 
USART_CR1_TE
);

480 
__STATIC_INLINE
 
LL_USART_DißbÀDúe˘i⁄Tx
(
USART_Ty≥Def
 *
USARTx
)

482 
CLEAR_BIT
(
USARTx
->
CR1
, 
USART_CR1_TE
);

498 
__STATIC_INLINE
 
LL_USART_SëTøns„rDúe˘i⁄
(
USART_Ty≥Def
 *
USARTx
, 
uöt32_t
 
Tøns„rDúe˘i⁄
)

500 
MODIFY_REG
(
USARTx
->
CR1
, 
USART_CR1_RE
 | 
USART_CR1_TE
, 
Tøns„rDúe˘i⁄
);

514 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_GëTøns„rDúe˘i⁄
(
USART_Ty≥Def
 *
USARTx
)

516  (
uöt32_t
)(
READ_BIT
(
USARTx
->
CR1
, 
USART_CR1_RE
 | 
USART_CR1_TE
));

533 
__STATIC_INLINE
 
LL_USART_SëP¨ôy
(
USART_Ty≥Def
 *
USARTx
, 
uöt32_t
 
P¨ôy
)

535 
MODIFY_REG
(
USARTx
->
CR1
, 
USART_CR1_PS
 | 
USART_CR1_PCE
, 
P¨ôy
);

548 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_GëP¨ôy
(
USART_Ty≥Def
 *
USARTx
)

550  (
uöt32_t
)(
READ_BIT
(
USARTx
->
CR1
, 
USART_CR1_PS
 | 
USART_CR1_PCE
));

562 
__STATIC_INLINE
 
LL_USART_SëWakeUpMëhod
(
USART_Ty≥Def
 *
USARTx
, 
uöt32_t
 
Mëhod
)

564 
MODIFY_REG
(
USARTx
->
CR1
, 
USART_CR1_WAKE
, 
Mëhod
);

575 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_GëWakeUpMëhod
(
USART_Ty≥Def
 *
USARTx
)

577  (
uöt32_t
)(
READ_BIT
(
USARTx
->
CR1
, 
USART_CR1_WAKE
));

589 
__STATIC_INLINE
 
LL_USART_SëD©aWidth
(
USART_Ty≥Def
 *
USARTx
, 
uöt32_t
 
D©aWidth
)

591 
MODIFY_REG
(
USARTx
->
CR1
, 
USART_CR1_M
, 
D©aWidth
);

602 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_GëD©aWidth
(
USART_Ty≥Def
 *
USARTx
)

604  (
uöt32_t
)(
READ_BIT
(
USARTx
->
CR1
, 
USART_CR1_M
));

607 #i‡
deföed
(
USART_CR1_OVER8
)

617 
__STATIC_INLINE
 
LL_USART_SëOvîSam∂ög
(
USART_Ty≥Def
 *
USARTx
, 
uöt32_t
 
OvîSam∂ög
)

619 
MODIFY_REG
(
USARTx
->
CR1
, 
USART_CR1_OVER8
, 
OvîSam∂ög
);

630 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_GëOvîSam∂ög
(
USART_Ty≥Def
 *
USARTx
)

632  (
uöt32_t
)(
READ_BIT
(
USARTx
->
CR1
, 
USART_CR1_OVER8
));

647 
__STATIC_INLINE
 
LL_USART_SëLa°ClkPul£Ouçut
(
USART_Ty≥Def
 *
USARTx
, 
uöt32_t
 
La°BôClockPul£
)

649 
MODIFY_REG
(
USARTx
->
CR2
, 
USART_CR2_LBCL
, 
La°BôClockPul£
);

663 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_GëLa°ClkPul£Ouçut
(
USART_Ty≥Def
 *
USARTx
)

665  (
uöt32_t
)(
READ_BIT
(
USARTx
->
CR2
, 
USART_CR2_LBCL
));

679 
__STATIC_INLINE
 
LL_USART_SëClockPha£
(
USART_Ty≥Def
 *
USARTx
, 
uöt32_t
 
ClockPha£
)

681 
MODIFY_REG
(
USARTx
->
CR2
, 
USART_CR2_CPHA
, 
ClockPha£
);

694 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_GëClockPha£
(
USART_Ty≥Def
 *
USARTx
)

696  (
uöt32_t
)(
READ_BIT
(
USARTx
->
CR2
, 
USART_CR2_CPHA
));

710 
__STATIC_INLINE
 
LL_USART_SëClockPﬁ¨ôy
(
USART_Ty≥Def
 *
USARTx
, 
uöt32_t
 
ClockPﬁ¨ôy
)

712 
MODIFY_REG
(
USARTx
->
CR2
, 
USART_CR2_CPOL
, 
ClockPﬁ¨ôy
);

725 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_GëClockPﬁ¨ôy
(
USART_Ty≥Def
 *
USARTx
)

727  (
uöt32_t
)(
READ_BIT
(
USARTx
->
CR2
, 
USART_CR2_CPOL
));

753 
__STATIC_INLINE
 
LL_USART_C⁄figClock
(
USART_Ty≥Def
 *
USARTx
, 
uöt32_t
 
Pha£
, uöt32_à
Pﬁ¨ôy
, uöt32_à
LBCPOuçut
)

755 
MODIFY_REG
(
USARTx
->
CR2
, 
USART_CR2_CPHA
 | 
USART_CR2_CPOL
 | 
USART_CR2_LBCL
, 
Pha£
 | 
Pﬁ¨ôy
 | 
LBCPOuçut
);

766 
__STATIC_INLINE
 
LL_USART_E«bÀSCLKOuçut
(
USART_Ty≥Def
 *
USARTx
)

768 
SET_BIT
(
USARTx
->
CR2
, 
USART_CR2_CLKEN
);

779 
__STATIC_INLINE
 
LL_USART_DißbÀSCLKOuçut
(
USART_Ty≥Def
 *
USARTx
)

781 
CLEAR_BIT
(
USARTx
->
CR2
, 
USART_CR2_CLKEN
);

792 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsE«bÀdSCLKOuçut
(
USART_Ty≥Def
 *
USARTx
)

794  (
READ_BIT
(
USARTx
->
CR2
, 
USART_CR2_CLKEN
) == (USART_CR2_CLKEN));

808 
__STATIC_INLINE
 
LL_USART_SëSt›BôsLígth
(
USART_Ty≥Def
 *
USARTx
, 
uöt32_t
 
St›Bôs
)

810 
MODIFY_REG
(
USARTx
->
CR2
, 
USART_CR2_STOP
, 
St›Bôs
);

823 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_GëSt›BôsLígth
(
USART_Ty≥Def
 *
USARTx
)

825  (
uöt32_t
)(
READ_BIT
(
USARTx
->
CR2
, 
USART_CR2_STOP
));

853 
__STATIC_INLINE
 
LL_USART_C⁄figCh¨a˘î
(
USART_Ty≥Def
 *
USARTx
, 
uöt32_t
 
D©aWidth
, uöt32_à
P¨ôy
,

854 
uöt32_t
 
St›Bôs
)

856 
MODIFY_REG
(
USARTx
->
CR1
, 
USART_CR1_PS
 | 
USART_CR1_PCE
 | 
USART_CR1_M
, 
P¨ôy
 | 
D©aWidth
);

857 
MODIFY_REG
(
USARTx
->
CR2
, 
USART_CR2_STOP
, 
St›Bôs
);

869 
__STATIC_INLINE
 
LL_USART_SëNodeAddªss
(
USART_Ty≥Def
 *
USARTx
, 
uöt32_t
 
NodeAddªss
)

871 
MODIFY_REG
(
USARTx
->
CR2
, 
USART_CR2_ADD
, (
NodeAddªss
 & USART_CR2_ADD));

881 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_GëNodeAddªss
(
USART_Ty≥Def
 *
USARTx
)

883  (
uöt32_t
)(
READ_BIT
(
USARTx
->
CR2
, 
USART_CR2_ADD
));

894 
__STATIC_INLINE
 
LL_USART_E«bÀRTSHWFlowCål
(
USART_Ty≥Def
 *
USARTx
)

896 
SET_BIT
(
USARTx
->
CR3
, 
USART_CR3_RTSE
);

907 
__STATIC_INLINE
 
LL_USART_DißbÀRTSHWFlowCål
(
USART_Ty≥Def
 *
USARTx
)

909 
CLEAR_BIT
(
USARTx
->
CR3
, 
USART_CR3_RTSE
);

920 
__STATIC_INLINE
 
LL_USART_E«bÀCTSHWFlowCål
(
USART_Ty≥Def
 *
USARTx
)

922 
SET_BIT
(
USARTx
->
CR3
, 
USART_CR3_CTSE
);

933 
__STATIC_INLINE
 
LL_USART_DißbÀCTSHWFlowCål
(
USART_Ty≥Def
 *
USARTx
)

935 
CLEAR_BIT
(
USARTx
->
CR3
, 
USART_CR3_CTSE
);

952 
__STATIC_INLINE
 
LL_USART_SëHWFlowCål
(
USART_Ty≥Def
 *
USARTx
, 
uöt32_t
 
H¨dw¨eFlowC⁄åﬁ
)

954 
MODIFY_REG
(
USARTx
->
CR3
, 
USART_CR3_RTSE
 | 
USART_CR3_CTSE
, 
H¨dw¨eFlowC⁄åﬁ
);

970 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_GëHWFlowCål
(
USART_Ty≥Def
 *
USARTx
)

972  (
uöt32_t
)(
READ_BIT
(
USARTx
->
CR3
, 
USART_CR3_RTSE
 | 
USART_CR3_CTSE
));

975 #i‡
deföed
(
USART_CR3_ONEBIT
)

982 
__STATIC_INLINE
 
LL_USART_E«bÀO√BôSamp
(
USART_Ty≥Def
 *
USARTx
)

984 
SET_BIT
(
USARTx
->
CR3
, 
USART_CR3_ONEBIT
);

993 
__STATIC_INLINE
 
LL_USART_DißbÀO√BôSamp
(
USART_Ty≥Def
 *
USARTx
)

995 
CLEAR_BIT
(
USARTx
->
CR3
, 
USART_CR3_ONEBIT
);

1004 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsE«bÀdO√BôSamp
(
USART_Ty≥Def
 *
USARTx
)

1006  (
READ_BIT
(
USARTx
->
CR3
, 
USART_CR3_ONEBIT
) == (USART_CR3_ONEBIT));

1010 #i‡
deföed
(
USART_CR1_OVER8
)

1026 
__STATIC_INLINE
 
LL_USART_SëBaudR©e
(
USART_Ty≥Def
 *
USARTx
, 
uöt32_t
 
PîùhClk
, uöt32_à
OvîSam∂ög
,

1027 
uöt32_t
 
BaudR©e
)

1029 i‡(
OvîSam∂ög
 =
LL_USART_OVERSAMPLING_8
)

1031 
USARTx
->
BRR
 = (
uöt16_t
)(
__LL_USART_DIV_SAMPLING8
(
PîùhClk
, 
BaudR©e
));

1035 
USARTx
->
BRR
 = (
uöt16_t
)(
__LL_USART_DIV_SAMPLING16
(
PîùhClk
, 
BaudR©e
));

1051 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_GëBaudR©e
(
USART_Ty≥Def
 *
USARTx
, uöt32_à
PîùhClk
, uöt32_à
OvîSam∂ög
)

1053 
uöt32_t
 
ußπdiv
 = 0x0U;

1054 
uöt32_t
 
bºªsu…
 = 0x0U;

1056 
ußπdiv
 = 
USARTx
->
BRR
;

1058 i‡(
OvîSam∂ög
 =
LL_USART_OVERSAMPLING_8
)

1060 i‡((
ußπdiv
 & 0xFFF7U) != 0U)

1062 
ußπdiv
 = (
uöt16_t
)((usartdiv & 0xFFF0U) | ((usartdiv & 0x0007U) << 1U)) ;

1063 
bºªsu…
 = (
PîùhClk
 * 2UË/ 
ußπdiv
;

1068 i‡((
ußπdiv
 & 0xFFFFU) != 0U)

1070 
bºªsu…
 = 
PîùhClk
 / 
ußπdiv
;

1073  (
bºªsu…
);

1088 
__STATIC_INLINE
 
LL_USART_SëBaudR©e
(
USART_Ty≥Def
 *
USARTx
, 
uöt32_t
 
PîùhClk
, uöt32_à
BaudR©e
)

1090 
USARTx
->
BRR
 = (
uöt16_t
)(
__LL_USART_DIV_SAMPLING16
(
PîùhClk
, 
BaudR©e
));

1102 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_GëBaudR©e
(
USART_Ty≥Def
 *
USARTx
, uöt32_à
PîùhClk
)

1104 
uöt32_t
 
ußπdiv
 = 0x0U;

1105 
uöt32_t
 
bºªsu…
 = 0x0U;

1107 
ußπdiv
 = 
USARTx
->
BRR
;

1109 i‡((
ußπdiv
 & 0xFFFFU) != 0U)

1111 
bºªsu…
 = 
PîùhClk
 / 
ußπdiv
;

1113  (
bºªsu…
);

1133 
__STATIC_INLINE
 
LL_USART_E«bÀIrda
(
USART_Ty≥Def
 *
USARTx
)

1135 
SET_BIT
(
USARTx
->
CR3
, 
USART_CR3_IREN
);

1146 
__STATIC_INLINE
 
LL_USART_DißbÀIrda
(
USART_Ty≥Def
 *
USARTx
)

1148 
CLEAR_BIT
(
USARTx
->
CR3
, 
USART_CR3_IREN
);

1159 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsE«bÀdIrda
(
USART_Ty≥Def
 *
USARTx
)

1161  (
READ_BIT
(
USARTx
->
CR3
, 
USART_CR3_IREN
) == (USART_CR3_IREN));

1175 
__STATIC_INLINE
 
LL_USART_SëIrdaPowîMode
(
USART_Ty≥Def
 *
USARTx
, 
uöt32_t
 
PowîMode
)

1177 
MODIFY_REG
(
USARTx
->
CR3
, 
USART_CR3_IRLP
, 
PowîMode
);

1190 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_GëIrdaPowîMode
(
USART_Ty≥Def
 *
USARTx
)

1192  (
uöt32_t
)(
READ_BIT
(
USARTx
->
CR3
, 
USART_CR3_IRLP
));

1205 
__STATIC_INLINE
 
LL_USART_SëIrdaPªsˇÀr
(
USART_Ty≥Def
 *
USARTx
, 
uöt32_t
 
PªsˇÀrVÆue
)

1207 
MODIFY_REG
(
USARTx
->
GTPR
, 
USART_GTPR_PSC
, 
PªsˇÀrVÆue
);

1219 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_GëIrdaPªsˇÀr
(
USART_Ty≥Def
 *
USARTx
)

1221  (
uöt32_t
)(
READ_BIT
(
USARTx
->
GTPR
, 
USART_GTPR_PSC
));

1240 
__STATIC_INLINE
 
LL_USART_E«bÀSm¨tˇrdNACK
(
USART_Ty≥Def
 *
USARTx
)

1242 
SET_BIT
(
USARTx
->
CR3
, 
USART_CR3_NACK
);

1253 
__STATIC_INLINE
 
LL_USART_DißbÀSm¨tˇrdNACK
(
USART_Ty≥Def
 *
USARTx
)

1255 
CLEAR_BIT
(
USARTx
->
CR3
, 
USART_CR3_NACK
);

1266 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsE«bÀdSm¨tˇrdNACK
(
USART_Ty≥Def
 *
USARTx
)

1268  (
READ_BIT
(
USARTx
->
CR3
, 
USART_CR3_NACK
) == (USART_CR3_NACK));

1279 
__STATIC_INLINE
 
LL_USART_E«bÀSm¨tˇrd
(
USART_Ty≥Def
 *
USARTx
)

1281 
SET_BIT
(
USARTx
->
CR3
, 
USART_CR3_SCEN
);

1292 
__STATIC_INLINE
 
LL_USART_DißbÀSm¨tˇrd
(
USART_Ty≥Def
 *
USARTx
)

1294 
CLEAR_BIT
(
USARTx
->
CR3
, 
USART_CR3_SCEN
);

1305 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsE«bÀdSm¨tˇrd
(
USART_Ty≥Def
 *
USARTx
)

1307  (
READ_BIT
(
USARTx
->
CR3
, 
USART_CR3_SCEN
) == (USART_CR3_SCEN));

1320 
__STATIC_INLINE
 
LL_USART_SëSm¨tˇrdPªsˇÀr
(
USART_Ty≥Def
 *
USARTx
, 
uöt32_t
 
PªsˇÀrVÆue
)

1322 
MODIFY_REG
(
USARTx
->
GTPR
, 
USART_GTPR_PSC
, 
PªsˇÀrVÆue
);

1334 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_GëSm¨tˇrdPªsˇÀr
(
USART_Ty≥Def
 *
USARTx
)

1336  (
uöt32_t
)(
READ_BIT
(
USARTx
->
GTPR
, 
USART_GTPR_PSC
));

1349 
__STATIC_INLINE
 
LL_USART_SëSm¨tˇrdGu¨dTime
(
USART_Ty≥Def
 *
USARTx
, 
uöt32_t
 
Gu¨dTime
)

1351 
MODIFY_REG
(
USARTx
->
GTPR
, 
USART_GTPR_GT
, 
Gu¨dTime
 << 
USART_POSITION_GTPR_GT
);

1363 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_GëSm¨tˇrdGu¨dTime
(
USART_Ty≥Def
 *
USARTx
)

1365  (
uöt32_t
)(
READ_BIT
(
USARTx
->
GTPR
, 
USART_GTPR_GT
Ë>> 
USART_POSITION_GTPR_GT
);

1384 
__STATIC_INLINE
 
LL_USART_E«bÀHÆfDu∂ex
(
USART_Ty≥Def
 *
USARTx
)

1386 
SET_BIT
(
USARTx
->
CR3
, 
USART_CR3_HDSEL
);

1397 
__STATIC_INLINE
 
LL_USART_DißbÀHÆfDu∂ex
(
USART_Ty≥Def
 *
USARTx
)

1399 
CLEAR_BIT
(
USARTx
->
CR3
, 
USART_CR3_HDSEL
);

1410 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsE«bÀdHÆfDu∂ex
(
USART_Ty≥Def
 *
USARTx
)

1412  (
READ_BIT
(
USARTx
->
CR3
, 
USART_CR3_HDSEL
) == (USART_CR3_HDSEL));

1434 
__STATIC_INLINE
 
LL_USART_SëLINBrkDëe˘i⁄Lí
(
USART_Ty≥Def
 *
USARTx
, 
uöt32_t
 
LINBDLígth
)

1436 
MODIFY_REG
(
USARTx
->
CR2
, 
USART_CR2_LBDL
, 
LINBDLígth
);

1449 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_GëLINBrkDëe˘i⁄Lí
(
USART_Ty≥Def
 *
USARTx
)

1451  (
uöt32_t
)(
READ_BIT
(
USARTx
->
CR2
, 
USART_CR2_LBDL
));

1462 
__STATIC_INLINE
 
LL_USART_E«bÀLIN
(
USART_Ty≥Def
 *
USARTx
)

1464 
SET_BIT
(
USARTx
->
CR2
, 
USART_CR2_LINEN
);

1475 
__STATIC_INLINE
 
LL_USART_DißbÀLIN
(
USART_Ty≥Def
 *
USARTx
)

1477 
CLEAR_BIT
(
USARTx
->
CR2
, 
USART_CR2_LINEN
);

1488 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsE«bÀdLIN
(
USART_Ty≥Def
 *
USARTx
)

1490  (
READ_BIT
(
USARTx
->
CR2
, 
USART_CR2_LINEN
) == (USART_CR2_LINEN));

1526 
__STATIC_INLINE
 
LL_USART_C⁄figAsyncMode
(
USART_Ty≥Def
 *
USARTx
)

1531 
CLEAR_BIT
(
USARTx
->
CR2
, (
USART_CR2_LINEN
 | 
USART_CR2_CLKEN
));

1532 
CLEAR_BIT
(
USARTx
->
CR3
, (
USART_CR3_SCEN
 | 
USART_CR3_IREN
 | 
USART_CR3_HDSEL
));

1562 
__STATIC_INLINE
 
LL_USART_C⁄figSyncMode
(
USART_Ty≥Def
 *
USARTx
)

1567 
CLEAR_BIT
(
USARTx
->
CR2
, (
USART_CR2_LINEN
));

1568 
CLEAR_BIT
(
USARTx
->
CR3
, (
USART_CR3_SCEN
 | 
USART_CR3_IREN
 | 
USART_CR3_HDSEL
));

1570 
SET_BIT
(
USARTx
->
CR2
, 
USART_CR2_CLKEN
);

1602 
__STATIC_INLINE
 
LL_USART_C⁄figLINMode
(
USART_Ty≥Def
 *
USARTx
)

1607 
CLEAR_BIT
(
USARTx
->
CR2
, (
USART_CR2_CLKEN
 | 
USART_CR2_STOP
));

1608 
CLEAR_BIT
(
USARTx
->
CR3
, (
USART_CR3_IREN
 | 
USART_CR3_SCEN
 | 
USART_CR3_HDSEL
));

1610 
SET_BIT
(
USARTx
->
CR2
, 
USART_CR2_LINEN
);

1640 
__STATIC_INLINE
 
LL_USART_C⁄figHÆfDu∂exMode
(
USART_Ty≥Def
 *
USARTx
)

1645 
CLEAR_BIT
(
USARTx
->
CR2
, (
USART_CR2_LINEN
 | 
USART_CR2_CLKEN
));

1646 
CLEAR_BIT
(
USARTx
->
CR3
, (
USART_CR3_SCEN
 | 
USART_CR3_IREN
));

1648 
SET_BIT
(
USARTx
->
CR3
, 
USART_CR3_HDSEL
);

1680 
__STATIC_INLINE
 
LL_USART_C⁄figSm¨tˇrdMode
(
USART_Ty≥Def
 *
USARTx
)

1685 
CLEAR_BIT
(
USARTx
->
CR2
, (
USART_CR2_LINEN
));

1686 
CLEAR_BIT
(
USARTx
->
CR3
, (
USART_CR3_IREN
 | 
USART_CR3_HDSEL
));

1689 
SET_BIT
(
USARTx
->
CR2
, (
USART_CR2_STOP_0
 | 
USART_CR2_STOP_1
 | 
USART_CR2_CLKEN
));

1691 
SET_BIT
(
USARTx
->
CR3
, 
USART_CR3_SCEN
);

1723 
__STATIC_INLINE
 
LL_USART_C⁄figIrdaMode
(
USART_Ty≥Def
 *
USARTx
)

1728 
CLEAR_BIT
(
USARTx
->
CR2
, (
USART_CR2_LINEN
 | 
USART_CR2_CLKEN
 | 
USART_CR2_STOP
));

1729 
CLEAR_BIT
(
USARTx
->
CR3
, (
USART_CR3_SCEN
 | 
USART_CR3_HDSEL
));

1731 
SET_BIT
(
USARTx
->
CR3
, 
USART_CR3_IREN
);

1761 
__STATIC_INLINE
 
LL_USART_C⁄figMu…iPro˚ssMode
(
USART_Ty≥Def
 *
USARTx
)

1766 
CLEAR_BIT
(
USARTx
->
CR2
, (
USART_CR2_LINEN
 | 
USART_CR2_CLKEN
));

1767 
CLEAR_BIT
(
USARTx
->
CR3
, (
USART_CR3_SCEN
 | 
USART_CR3_HDSEL
 | 
USART_CR3_IREN
));

1784 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsA˘iveFœg_PE
(
USART_Ty≥Def
 *
USARTx
)

1786  (
READ_BIT
(
USARTx
->
SR
, 
USART_SR_PE
) == (USART_SR_PE));

1795 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsA˘iveFœg_FE
(
USART_Ty≥Def
 *
USARTx
)

1797  (
READ_BIT
(
USARTx
->
SR
, 
USART_SR_FE
) == (USART_SR_FE));

1806 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsA˘iveFœg_NE
(
USART_Ty≥Def
 *
USARTx
)

1808  (
READ_BIT
(
USARTx
->
SR
, 
USART_SR_NE
) == (USART_SR_NE));

1817 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsA˘iveFœg_ORE
(
USART_Ty≥Def
 *
USARTx
)

1819  (
READ_BIT
(
USARTx
->
SR
, 
USART_SR_ORE
) == (USART_SR_ORE));

1828 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsA˘iveFœg_IDLE
(
USART_Ty≥Def
 *
USARTx
)

1830  (
READ_BIT
(
USARTx
->
SR
, 
USART_SR_IDLE
) == (USART_SR_IDLE));

1839 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsA˘iveFœg_RXNE
(
USART_Ty≥Def
 *
USARTx
)

1841  (
READ_BIT
(
USARTx
->
SR
, 
USART_SR_RXNE
) == (USART_SR_RXNE));

1850 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsA˘iveFœg_TC
(
USART_Ty≥Def
 *
USARTx
)

1852  (
READ_BIT
(
USARTx
->
SR
, 
USART_SR_TC
) == (USART_SR_TC));

1861 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsA˘iveFœg_TXE
(
USART_Ty≥Def
 *
USARTx
)

1863  (
READ_BIT
(
USARTx
->
SR
, 
USART_SR_TXE
) == (USART_SR_TXE));

1874 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsA˘iveFœg_LBD
(
USART_Ty≥Def
 *
USARTx
)

1876  (
READ_BIT
(
USARTx
->
SR
, 
USART_SR_LBD
) == (USART_SR_LBD));

1887 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsA˘iveFœg_nCTS
(
USART_Ty≥Def
 *
USARTx
)

1889  (
READ_BIT
(
USARTx
->
SR
, 
USART_SR_CTS
) == (USART_SR_CTS));

1898 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsA˘iveFœg_SBK
(
USART_Ty≥Def
 *
USARTx
)

1900  (
READ_BIT
(
USARTx
->
CR1
, 
USART_CR1_SBK
) == (USART_CR1_SBK));

1909 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsA˘iveFœg_RWU
(
USART_Ty≥Def
 *
USARTx
)

1911  (
READ_BIT
(
USARTx
->
CR1
, 
USART_CR1_RWU
) == (USART_CR1_RWU));

1924 
__STATIC_INLINE
 
LL_USART_CÀ¨Fœg_PE
(
USART_Ty≥Def
 *
USARTx
)

1926 
__IO
 
uöt32_t
 
tm¥eg
;

1927 
tm¥eg
 = 
USARTx
->
SR
;

1928 (Ë
tm¥eg
;

1929 
tm¥eg
 = 
USARTx
->
DR
;

1930 (Ë
tm¥eg
;

1943 
__STATIC_INLINE
 
LL_USART_CÀ¨Fœg_FE
(
USART_Ty≥Def
 *
USARTx
)

1945 
__IO
 
uöt32_t
 
tm¥eg
;

1946 
tm¥eg
 = 
USARTx
->
SR
;

1947 (Ë
tm¥eg
;

1948 
tm¥eg
 = 
USARTx
->
DR
;

1949 (Ë
tm¥eg
;

1962 
__STATIC_INLINE
 
LL_USART_CÀ¨Fœg_NE
(
USART_Ty≥Def
 *
USARTx
)

1964 
__IO
 
uöt32_t
 
tm¥eg
;

1965 
tm¥eg
 = 
USARTx
->
SR
;

1966 (Ë
tm¥eg
;

1967 
tm¥eg
 = 
USARTx
->
DR
;

1968 (Ë
tm¥eg
;

1981 
__STATIC_INLINE
 
LL_USART_CÀ¨Fœg_ORE
(
USART_Ty≥Def
 *
USARTx
)

1983 
__IO
 
uöt32_t
 
tm¥eg
;

1984 
tm¥eg
 = 
USARTx
->
SR
;

1985 (Ë
tm¥eg
;

1986 
tm¥eg
 = 
USARTx
->
DR
;

1987 (Ë
tm¥eg
;

2000 
__STATIC_INLINE
 
LL_USART_CÀ¨Fœg_IDLE
(
USART_Ty≥Def
 *
USARTx
)

2002 
__IO
 
uöt32_t
 
tm¥eg
;

2003 
tm¥eg
 = 
USARTx
->
SR
;

2004 (Ë
tm¥eg
;

2005 
tm¥eg
 = 
USARTx
->
DR
;

2006 (Ë
tm¥eg
;

2015 
__STATIC_INLINE
 
LL_USART_CÀ¨Fœg_TC
(
USART_Ty≥Def
 *
USARTx
)

2017 
WRITE_REG
(
USARTx
->
SR
, ~(
USART_SR_TC
));

2026 
__STATIC_INLINE
 
LL_USART_CÀ¨Fœg_RXNE
(
USART_Ty≥Def
 *
USARTx
)

2028 
WRITE_REG
(
USARTx
->
SR
, ~(
USART_SR_RXNE
));

2039 
__STATIC_INLINE
 
LL_USART_CÀ¨Fœg_LBD
(
USART_Ty≥Def
 *
USARTx
)

2041 
WRITE_REG
(
USARTx
->
SR
, ~(
USART_SR_LBD
));

2052 
__STATIC_INLINE
 
LL_USART_CÀ¨Fœg_nCTS
(
USART_Ty≥Def
 *
USARTx
)

2054 
WRITE_REG
(
USARTx
->
SR
, ~(
USART_SR_CTS
));

2071 
__STATIC_INLINE
 
LL_USART_E«bÀIT_IDLE
(
USART_Ty≥Def
 *
USARTx
)

2073 
SET_BIT
(
USARTx
->
CR1
, 
USART_CR1_IDLEIE
);

2082 
__STATIC_INLINE
 
LL_USART_E«bÀIT_RXNE
(
USART_Ty≥Def
 *
USARTx
)

2084 
SET_BIT
(
USARTx
->
CR1
, 
USART_CR1_RXNEIE
);

2093 
__STATIC_INLINE
 
LL_USART_E«bÀIT_TC
(
USART_Ty≥Def
 *
USARTx
)

2095 
SET_BIT
(
USARTx
->
CR1
, 
USART_CR1_TCIE
);

2104 
__STATIC_INLINE
 
LL_USART_E«bÀIT_TXE
(
USART_Ty≥Def
 *
USARTx
)

2106 
SET_BIT
(
USARTx
->
CR1
, 
USART_CR1_TXEIE
);

2115 
__STATIC_INLINE
 
LL_USART_E«bÀIT_PE
(
USART_Ty≥Def
 *
USARTx
)

2117 
SET_BIT
(
USARTx
->
CR1
, 
USART_CR1_PEIE
);

2128 
__STATIC_INLINE
 
LL_USART_E«bÀIT_LBD
(
USART_Ty≥Def
 *
USARTx
)

2130 
SET_BIT
(
USARTx
->
CR2
, 
USART_CR2_LBDIE
);

2143 
__STATIC_INLINE
 
LL_USART_E«bÀIT_ERROR
(
USART_Ty≥Def
 *
USARTx
)

2145 
SET_BIT
(
USARTx
->
CR3
, 
USART_CR3_EIE
);

2156 
__STATIC_INLINE
 
LL_USART_E«bÀIT_CTS
(
USART_Ty≥Def
 *
USARTx
)

2158 
SET_BIT
(
USARTx
->
CR3
, 
USART_CR3_CTSIE
);

2167 
__STATIC_INLINE
 
LL_USART_DißbÀIT_IDLE
(
USART_Ty≥Def
 *
USARTx
)

2169 
CLEAR_BIT
(
USARTx
->
CR1
, 
USART_CR1_IDLEIE
);

2178 
__STATIC_INLINE
 
LL_USART_DißbÀIT_RXNE
(
USART_Ty≥Def
 *
USARTx
)

2180 
CLEAR_BIT
(
USARTx
->
CR1
, 
USART_CR1_RXNEIE
);

2189 
__STATIC_INLINE
 
LL_USART_DißbÀIT_TC
(
USART_Ty≥Def
 *
USARTx
)

2191 
CLEAR_BIT
(
USARTx
->
CR1
, 
USART_CR1_TCIE
);

2200 
__STATIC_INLINE
 
LL_USART_DißbÀIT_TXE
(
USART_Ty≥Def
 *
USARTx
)

2202 
CLEAR_BIT
(
USARTx
->
CR1
, 
USART_CR1_TXEIE
);

2211 
__STATIC_INLINE
 
LL_USART_DißbÀIT_PE
(
USART_Ty≥Def
 *
USARTx
)

2213 
CLEAR_BIT
(
USARTx
->
CR1
, 
USART_CR1_PEIE
);

2224 
__STATIC_INLINE
 
LL_USART_DißbÀIT_LBD
(
USART_Ty≥Def
 *
USARTx
)

2226 
CLEAR_BIT
(
USARTx
->
CR2
, 
USART_CR2_LBDIE
);

2239 
__STATIC_INLINE
 
LL_USART_DißbÀIT_ERROR
(
USART_Ty≥Def
 *
USARTx
)

2241 
CLEAR_BIT
(
USARTx
->
CR3
, 
USART_CR3_EIE
);

2252 
__STATIC_INLINE
 
LL_USART_DißbÀIT_CTS
(
USART_Ty≥Def
 *
USARTx
)

2254 
CLEAR_BIT
(
USARTx
->
CR3
, 
USART_CR3_CTSIE
);

2263 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsE«bÀdIT_IDLE
(
USART_Ty≥Def
 *
USARTx
)

2265  (
READ_BIT
(
USARTx
->
CR1
, 
USART_CR1_IDLEIE
) == (USART_CR1_IDLEIE));

2274 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsE«bÀdIT_RXNE
(
USART_Ty≥Def
 *
USARTx
)

2276  (
READ_BIT
(
USARTx
->
CR1
, 
USART_CR1_RXNEIE
) == (USART_CR1_RXNEIE));

2285 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsE«bÀdIT_TC
(
USART_Ty≥Def
 *
USARTx
)

2287  (
READ_BIT
(
USARTx
->
CR1
, 
USART_CR1_TCIE
) == (USART_CR1_TCIE));

2296 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsE«bÀdIT_TXE
(
USART_Ty≥Def
 *
USARTx
)

2298  (
READ_BIT
(
USARTx
->
CR1
, 
USART_CR1_TXEIE
) == (USART_CR1_TXEIE));

2307 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsE«bÀdIT_PE
(
USART_Ty≥Def
 *
USARTx
)

2309  (
READ_BIT
(
USARTx
->
CR1
, 
USART_CR1_PEIE
) == (USART_CR1_PEIE));

2320 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsE«bÀdIT_LBD
(
USART_Ty≥Def
 *
USARTx
)

2322  (
READ_BIT
(
USARTx
->
CR2
, 
USART_CR2_LBDIE
) == (USART_CR2_LBDIE));

2331 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsE«bÀdIT_ERROR
(
USART_Ty≥Def
 *
USARTx
)

2333  (
READ_BIT
(
USARTx
->
CR3
, 
USART_CR3_EIE
) == (USART_CR3_EIE));

2344 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsE«bÀdIT_CTS
(
USART_Ty≥Def
 *
USARTx
)

2346  (
READ_BIT
(
USARTx
->
CR3
, 
USART_CR3_CTSIE
) == (USART_CR3_CTSIE));

2363 
__STATIC_INLINE
 
LL_USART_E«bÀDMAReq_RX
(
USART_Ty≥Def
 *
USARTx
)

2365 
SET_BIT
(
USARTx
->
CR3
, 
USART_CR3_DMAR
);

2374 
__STATIC_INLINE
 
LL_USART_DißbÀDMAReq_RX
(
USART_Ty≥Def
 *
USARTx
)

2376 
CLEAR_BIT
(
USARTx
->
CR3
, 
USART_CR3_DMAR
);

2385 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsE«bÀdDMAReq_RX
(
USART_Ty≥Def
 *
USARTx
)

2387  (
READ_BIT
(
USARTx
->
CR3
, 
USART_CR3_DMAR
) == (USART_CR3_DMAR));

2396 
__STATIC_INLINE
 
LL_USART_E«bÀDMAReq_TX
(
USART_Ty≥Def
 *
USARTx
)

2398 
SET_BIT
(
USARTx
->
CR3
, 
USART_CR3_DMAT
);

2407 
__STATIC_INLINE
 
LL_USART_DißbÀDMAReq_TX
(
USART_Ty≥Def
 *
USARTx
)

2409 
CLEAR_BIT
(
USARTx
->
CR3
, 
USART_CR3_DMAT
);

2418 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_IsE«bÀdDMAReq_TX
(
USART_Ty≥Def
 *
USARTx
)

2420  (
READ_BIT
(
USARTx
->
CR3
, 
USART_CR3_DMAT
) == (USART_CR3_DMAT));

2430 
__STATIC_INLINE
 
uöt32_t
 
LL_USART_DMA_GëRegAddr
(
USART_Ty≥Def
 *
USARTx
)

2433  ((
uöt32_t
Ë& (
USARTx
->
DR
));

2450 
__STATIC_INLINE
 
uöt8_t
 
LL_USART_Re˚iveD©a8
(
USART_Ty≥Def
 *
USARTx
)

2452  (
uöt8_t
)(
READ_BIT
(
USARTx
->
DR
, 
USART_DR_DR
));

2461 
__STATIC_INLINE
 
uöt16_t
 
LL_USART_Re˚iveD©a9
(
USART_Ty≥Def
 *
USARTx
)

2463  (
uöt16_t
)(
READ_BIT
(
USARTx
->
DR
, 
USART_DR_DR
));

2473 
__STATIC_INLINE
 
LL_USART_TønsmôD©a8
(
USART_Ty≥Def
 *
USARTx
, 
uöt8_t
 
VÆue
)

2475 
USARTx
->
DR
 = 
VÆue
;

2485 
__STATIC_INLINE
 
LL_USART_TønsmôD©a9
(
USART_Ty≥Def
 *
USARTx
, 
uöt16_t
 
VÆue
)

2487 
USARTx
->
DR
 = 
VÆue
 & 0x1FFU;

2504 
__STATIC_INLINE
 
LL_USART_Reque°BªakSídög
(
USART_Ty≥Def
 *
USARTx
)

2506 
SET_BIT
(
USARTx
->
CR1
, 
USART_CR1_SBK
);

2515 
__STATIC_INLINE
 
LL_USART_Reque°E¡îMuãMode
(
USART_Ty≥Def
 *
USARTx
)

2517 
SET_BIT
(
USARTx
->
CR1
, 
USART_CR1_RWU
);

2526 
__STATIC_INLINE
 
LL_USART_Reque°ExôMuãMode
(
USART_Ty≥Def
 *
USARTx
)

2528 
CLEAR_BIT
(
USARTx
->
CR1
, 
USART_CR1_RWU
);

2535 #i‡
deföed
(
USE_FULL_LL_DRIVER
)

2539 
Eº‹Sètus
 
LL_USART_DeInô
(
USART_Ty≥Def
 *
USARTx
);

2540 
Eº‹Sètus
 
LL_USART_Inô
(
USART_Ty≥Def
 *
USARTx
, 
LL_USART_InôTy≥Def
 *
USART_InôSåu˘
);

2541 
LL_USART_Såu˘Inô
(
LL_USART_InôTy≥Def
 *
USART_InôSåu˘
);

2542 
Eº‹Sètus
 
LL_USART_ClockInô
(
USART_Ty≥Def
 *
USARTx
, 
LL_USART_ClockInôTy≥Def
 *
USART_ClockInôSåu˘
);

2543 
LL_USART_ClockSåu˘Inô
(
LL_USART_ClockInôTy≥Def
 *
USART_ClockInôSåu˘
);

2563 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32F1xx_HAL_Driver\Inc\Legacy\stm32_hal_legacy.h

22 #i‚de‡
STM32_HAL_LEGACY


23 
	#STM32_HAL_LEGACY


	)

25 #ifde‡
__˝lu•lus


36 
	#AES_FLAG_RDERR
 
CRYP_FLAG_RDERR


	)

37 
	#AES_FLAG_WRERR
 
CRYP_FLAG_WRERR


	)

38 
	#AES_CLEARFLAG_CCF
 
CRYP_CLEARFLAG_CCF


	)

39 
	#AES_CLEARFLAG_RDERR
 
CRYP_CLEARFLAG_RDERR


	)

40 
	#AES_CLEARFLAG_WRERR
 
CRYP_CLEARFLAG_WRERR


	)

48 
	#ADC_RESOLUTION12b
 
ADC_RESOLUTION_12B


	)

49 
	#ADC_RESOLUTION10b
 
ADC_RESOLUTION_10B


	)

50 
	#ADC_RESOLUTION8b
 
ADC_RESOLUTION_8B


	)

51 
	#ADC_RESOLUTION6b
 
ADC_RESOLUTION_6B


	)

52 
	#OVR_DATA_OVERWRITTEN
 
ADC_OVR_DATA_OVERWRITTEN


	)

53 
	#OVR_DATA_PRESERVED
 
ADC_OVR_DATA_PRESERVED


	)

54 
	#EOC_SINGLE_CONV
 
ADC_EOC_SINGLE_CONV


	)

55 
	#EOC_SEQ_CONV
 
ADC_EOC_SEQ_CONV


	)

56 
	#EOC_SINGLE_SEQ_CONV
 
ADC_EOC_SINGLE_SEQ_CONV


	)

57 
	#REGULAR_GROUP
 
ADC_REGULAR_GROUP


	)

58 
	#INJECTED_GROUP
 
ADC_INJECTED_GROUP


	)

59 
	#REGULAR_INJECTED_GROUP
 
ADC_REGULAR_INJECTED_GROUP


	)

60 
	#AWD_EVENT
 
ADC_AWD_EVENT


	)

61 
	#AWD1_EVENT
 
ADC_AWD1_EVENT


	)

62 
	#AWD2_EVENT
 
ADC_AWD2_EVENT


	)

63 
	#AWD3_EVENT
 
ADC_AWD3_EVENT


	)

64 
	#OVR_EVENT
 
ADC_OVR_EVENT


	)

65 
	#JQOVF_EVENT
 
ADC_JQOVF_EVENT


	)

66 
	#ALL_CHANNELS
 
ADC_ALL_CHANNELS


	)

67 
	#REGULAR_CHANNELS
 
ADC_REGULAR_CHANNELS


	)

68 
	#INJECTED_CHANNELS
 
ADC_INJECTED_CHANNELS


	)

69 
	#SYSCFG_FLAG_SENSOR_ADC
 
ADC_FLAG_SENSOR


	)

70 
	#SYSCFG_FLAG_VREF_ADC
 
ADC_FLAG_VREFINT


	)

71 
	#ADC_CLOCKPRESCALER_PCLK_DIV1
 
ADC_CLOCK_SYNC_PCLK_DIV1


	)

72 
	#ADC_CLOCKPRESCALER_PCLK_DIV2
 
ADC_CLOCK_SYNC_PCLK_DIV2


	)

73 
	#ADC_CLOCKPRESCALER_PCLK_DIV4
 
ADC_CLOCK_SYNC_PCLK_DIV4


	)

74 
	#ADC_CLOCKPRESCALER_PCLK_DIV6
 
ADC_CLOCK_SYNC_PCLK_DIV6


	)

75 
	#ADC_CLOCKPRESCALER_PCLK_DIV8
 
ADC_CLOCK_SYNC_PCLK_DIV8


	)

76 
	#ADC_EXTERNALTRIG0_T6_TRGO
 
ADC_EXTERNALTRIGCONV_T6_TRGO


	)

77 
	#ADC_EXTERNALTRIG1_T21_CC2
 
ADC_EXTERNALTRIGCONV_T21_CC2


	)

78 
	#ADC_EXTERNALTRIG2_T2_TRGO
 
ADC_EXTERNALTRIGCONV_T2_TRGO


	)

79 
	#ADC_EXTERNALTRIG3_T2_CC4
 
ADC_EXTERNALTRIGCONV_T2_CC4


	)

80 
	#ADC_EXTERNALTRIG4_T22_TRGO
 
ADC_EXTERNALTRIGCONV_T22_TRGO


	)

81 
	#ADC_EXTERNALTRIG7_EXT_IT11
 
ADC_EXTERNALTRIGCONV_EXT_IT11


	)

82 
	#ADC_CLOCK_ASYNC
 
ADC_CLOCK_ASYNC_DIV1


	)

83 
	#ADC_EXTERNALTRIG_EDGE_NONE
 
ADC_EXTERNALTRIGCONVEDGE_NONE


	)

84 
	#ADC_EXTERNALTRIG_EDGE_RISING
 
ADC_EXTERNALTRIGCONVEDGE_RISING


	)

85 
	#ADC_EXTERNALTRIG_EDGE_FALLING
 
ADC_EXTERNALTRIGCONVEDGE_FALLING


	)

86 
	#ADC_EXTERNALTRIG_EDGE_RISINGFALLING
 
ADC_EXTERNALTRIGCONVEDGE_RISINGFALLING


	)

87 
	#ADC_SAMPLETIME_2CYCLE_5
 
ADC_SAMPLETIME_2CYCLES_5


	)

89 
	#HAL_ADC_STATE_BUSY_REG
 
HAL_ADC_STATE_REG_BUSY


	)

90 
	#HAL_ADC_STATE_BUSY_INJ
 
HAL_ADC_STATE_INJ_BUSY


	)

91 
	#HAL_ADC_STATE_EOC_REG
 
HAL_ADC_STATE_REG_EOC


	)

92 
	#HAL_ADC_STATE_EOC_INJ
 
HAL_ADC_STATE_INJ_EOC


	)

93 
	#HAL_ADC_STATE_ERROR
 
HAL_ADC_STATE_ERROR_INTERNAL


	)

94 
	#HAL_ADC_STATE_BUSY
 
HAL_ADC_STATE_BUSY_INTERNAL


	)

95 
	#HAL_ADC_STATE_AWD
 
HAL_ADC_STATE_AWD1


	)

97 #i‡
deföed
(
STM32H7
)

98 
	#ADC_CHANNEL_VBAT_DIV4
 
ADC_CHANNEL_VBAT


	)

108 
	#__HAL_CEC_GET_IT
 
__HAL_CEC_GET_FLAG


	)

117 
	#COMP_WINDOWMODE_DISABLED
 
COMP_WINDOWMODE_DISABLE


	)

118 
	#COMP_WINDOWMODE_ENABLED
 
COMP_WINDOWMODE_ENABLE


	)

119 
	#COMP_EXTI_LINE_COMP1_EVENT
 
COMP_EXTI_LINE_COMP1


	)

120 
	#COMP_EXTI_LINE_COMP2_EVENT
 
COMP_EXTI_LINE_COMP2


	)

121 
	#COMP_EXTI_LINE_COMP3_EVENT
 
COMP_EXTI_LINE_COMP3


	)

122 
	#COMP_EXTI_LINE_COMP4_EVENT
 
COMP_EXTI_LINE_COMP4


	)

123 
	#COMP_EXTI_LINE_COMP5_EVENT
 
COMP_EXTI_LINE_COMP5


	)

124 
	#COMP_EXTI_LINE_COMP6_EVENT
 
COMP_EXTI_LINE_COMP6


	)

125 
	#COMP_EXTI_LINE_COMP7_EVENT
 
COMP_EXTI_LINE_COMP7


	)

126 #i‡
deföed
(
STM32L0
)

127 
	#COMP_LPTIMCONNECTION_ENABLED
 ((
uöt32_t
)0x00000003UË

	)

129 
	#COMP_OUTPUT_COMP6TIM2OCREFCLR
 
COMP_OUTPUT_COMP6_TIM2OCREFCLR


	)

130 #i‡
deföed
(
STM32F373xC
Ë|| deföed(
STM32F378xx
)

131 
	#COMP_OUTPUT_TIM3IC1
 
COMP_OUTPUT_COMP1_TIM3IC1


	)

132 
	#COMP_OUTPUT_TIM3OCREFCLR
 
COMP_OUTPUT_COMP1_TIM3OCREFCLR


	)

135 #i‡
deföed
(
STM32L0
Ë|| deföed(
STM32L4
)

136 
	#COMP_WINDOWMODE_ENABLE
 
COMP_WINDOWMODE_COMP1_INPUT_PLUS_COMMON


	)

138 
	#COMP_NONINVERTINGINPUT_IO1
 
COMP_INPUT_PLUS_IO1


	)

139 
	#COMP_NONINVERTINGINPUT_IO2
 
COMP_INPUT_PLUS_IO2


	)

140 
	#COMP_NONINVERTINGINPUT_IO3
 
COMP_INPUT_PLUS_IO3


	)

141 
	#COMP_NONINVERTINGINPUT_IO4
 
COMP_INPUT_PLUS_IO4


	)

142 
	#COMP_NONINVERTINGINPUT_IO5
 
COMP_INPUT_PLUS_IO5


	)

143 
	#COMP_NONINVERTINGINPUT_IO6
 
COMP_INPUT_PLUS_IO6


	)

145 
	#COMP_INVERTINGINPUT_1_4VREFINT
 
COMP_INPUT_MINUS_1_4VREFINT


	)

146 
	#COMP_INVERTINGINPUT_1_2VREFINT
 
COMP_INPUT_MINUS_1_2VREFINT


	)

147 
	#COMP_INVERTINGINPUT_3_4VREFINT
 
COMP_INPUT_MINUS_3_4VREFINT


	)

148 
	#COMP_INVERTINGINPUT_VREFINT
 
COMP_INPUT_MINUS_VREFINT


	)

149 
	#COMP_INVERTINGINPUT_DAC1_CH1
 
COMP_INPUT_MINUS_DAC1_CH1


	)

150 
	#COMP_INVERTINGINPUT_DAC1_CH2
 
COMP_INPUT_MINUS_DAC1_CH2


	)

151 
	#COMP_INVERTINGINPUT_DAC1
 
COMP_INPUT_MINUS_DAC1_CH1


	)

152 
	#COMP_INVERTINGINPUT_DAC2
 
COMP_INPUT_MINUS_DAC1_CH2


	)

153 
	#COMP_INVERTINGINPUT_IO1
 
COMP_INPUT_MINUS_IO1


	)

154 #i‡
deföed
(
STM32L0
)

158 
	#COMP_INVERTINGINPUT_IO2
 
COMP_INPUT_MINUS_DAC1_CH2


	)

159 
	#COMP_INVERTINGINPUT_IO3
 
COMP_INPUT_MINUS_IO2


	)

161 
	#COMP_INVERTINGINPUT_IO2
 
COMP_INPUT_MINUS_IO2


	)

162 
	#COMP_INVERTINGINPUT_IO3
 
COMP_INPUT_MINUS_IO3


	)

164 
	#COMP_INVERTINGINPUT_IO4
 
COMP_INPUT_MINUS_IO4


	)

165 
	#COMP_INVERTINGINPUT_IO5
 
COMP_INPUT_MINUS_IO5


	)

167 
	#COMP_OUTPUTLEVEL_LOW
 
COMP_OUTPUT_LEVEL_LOW


	)

168 
	#COMP_OUTPUTLEVEL_HIGH
 
COMP_OUTPUT_LEVEL_HIGH


	)

172 #i‡
deföed
(
COMP_CSR_LOCK
)

173 
	#COMP_FLAG_LOCK
 
COMP_CSR_LOCK


	)

174 #ñi‡
deföed
(
COMP_CSR_COMP1LOCK
)

175 
	#COMP_FLAG_LOCK
 
COMP_CSR_COMP1LOCK


	)

176 #ñi‡
deföed
(
COMP_CSR_COMPxLOCK
)

177 
	#COMP_FLAG_LOCK
 
COMP_CSR_COMPxLOCK


	)

180 #i‡
deföed
(
STM32L4
)

181 
	#COMP_BLANKINGSRCE_TIM1OC5
 
COMP_BLANKINGSRC_TIM1_OC5_COMP1


	)

182 
	#COMP_BLANKINGSRCE_TIM2OC3
 
COMP_BLANKINGSRC_TIM2_OC3_COMP1


	)

183 
	#COMP_BLANKINGSRCE_TIM3OC3
 
COMP_BLANKINGSRC_TIM3_OC3_COMP1


	)

184 
	#COMP_BLANKINGSRCE_TIM3OC4
 
COMP_BLANKINGSRC_TIM3_OC4_COMP2


	)

185 
	#COMP_BLANKINGSRCE_TIM8OC5
 
COMP_BLANKINGSRC_TIM8_OC5_COMP2


	)

186 
	#COMP_BLANKINGSRCE_TIM15OC1
 
COMP_BLANKINGSRC_TIM15_OC1_COMP2


	)

187 
	#COMP_BLANKINGSRCE_NONE
 
COMP_BLANKINGSRC_NONE


	)

190 #i‡
deföed
(
STM32L0
)

191 
	#COMP_MODE_HIGHSPEED
 
COMP_POWERMODE_MEDIUMSPEED


	)

192 
	#COMP_MODE_LOWSPEED
 
COMP_POWERMODE_ULTRALOWPOWER


	)

194 
	#COMP_MODE_HIGHSPEED
 
COMP_POWERMODE_HIGHSPEED


	)

195 
	#COMP_MODE_MEDIUMSPEED
 
COMP_POWERMODE_MEDIUMSPEED


	)

196 
	#COMP_MODE_LOWPOWER
 
COMP_POWERMODE_LOWPOWER


	)

197 
	#COMP_MODE_ULTRALOWPOWER
 
COMP_POWERMODE_ULTRALOWPOWER


	)

208 
	#__HAL_CORTEX_SYSTICKCLK_CONFIG
 
HAL_SYSTICK_CLKSour˚C⁄fig


	)

217 
	#CRC_OUTPUTDATA_INVERSION_DISABLED
 
CRC_OUTPUTDATA_INVERSION_DISABLE


	)

218 
	#CRC_OUTPUTDATA_INVERSION_ENABLED
 
CRC_OUTPUTDATA_INVERSION_ENABLE


	)

228 
	#DAC1_CHANNEL_1
 
DAC_CHANNEL_1


	)

229 
	#DAC1_CHANNEL_2
 
DAC_CHANNEL_2


	)

230 
	#DAC2_CHANNEL_1
 
DAC_CHANNEL_1


	)

231 
	#DAC_WAVE_NONE
 0x00000000U

	)

232 
	#DAC_WAVE_NOISE
 
DAC_CR_WAVE1_0


	)

233 
	#DAC_WAVE_TRIANGLE
 
DAC_CR_WAVE1_1


	)

234 
	#DAC_WAVEGENERATION_NONE
 
DAC_WAVE_NONE


	)

235 
	#DAC_WAVEGENERATION_NOISE
 
DAC_WAVE_NOISE


	)

236 
	#DAC_WAVEGENERATION_TRIANGLE
 
DAC_WAVE_TRIANGLE


	)

238 #i‡
deföed
(
STM32G4
Ë|| deföed(
STM32H7
)

239 
	#DAC_CHIPCONNECT_DISABLE
 
DAC_CHIPCONNECT_EXTERNAL


	)

240 
	#DAC_CHIPCONNECT_ENABLE
 
DAC_CHIPCONNECT_INTERNAL


	)

243 #i‡
deföed
(
STM32L1
Ë|| deföed(
STM32L4
Ë|| deföed(
STM32G0
Ë|| deföed(
STM32L5
Ë|| deföed(
STM32H7
Ë|| deföed(
STM32F4
Ë|| deföed(
STM32G4
)

244 
	#HAL_DAC_MSP_INIT_CB_ID
 
HAL_DAC_MSPINIT_CB_ID


	)

245 
	#HAL_DAC_MSP_DEINIT_CB_ID
 
HAL_DAC_MSPDEINIT_CB_ID


	)

255 
	#HAL_REMAPDMA_ADC_DMA_CH2
 
DMA_REMAP_ADC_DMA_CH2


	)

256 
	#HAL_REMAPDMA_USART1_TX_DMA_CH4
 
DMA_REMAP_USART1_TX_DMA_CH4


	)

257 
	#HAL_REMAPDMA_USART1_RX_DMA_CH5
 
DMA_REMAP_USART1_RX_DMA_CH5


	)

258 
	#HAL_REMAPDMA_TIM16_DMA_CH4
 
DMA_REMAP_TIM16_DMA_CH4


	)

259 
	#HAL_REMAPDMA_TIM17_DMA_CH2
 
DMA_REMAP_TIM17_DMA_CH2


	)

260 
	#HAL_REMAPDMA_USART3_DMA_CH32
 
DMA_REMAP_USART3_DMA_CH32


	)

261 
	#HAL_REMAPDMA_TIM16_DMA_CH6
 
DMA_REMAP_TIM16_DMA_CH6


	)

262 
	#HAL_REMAPDMA_TIM17_DMA_CH7
 
DMA_REMAP_TIM17_DMA_CH7


	)

263 
	#HAL_REMAPDMA_SPI2_DMA_CH67
 
DMA_REMAP_SPI2_DMA_CH67


	)

264 
	#HAL_REMAPDMA_USART2_DMA_CH67
 
DMA_REMAP_USART2_DMA_CH67


	)

265 
	#HAL_REMAPDMA_I2C1_DMA_CH76
 
DMA_REMAP_I2C1_DMA_CH76


	)

266 
	#HAL_REMAPDMA_TIM1_DMA_CH6
 
DMA_REMAP_TIM1_DMA_CH6


	)

267 
	#HAL_REMAPDMA_TIM2_DMA_CH7
 
DMA_REMAP_TIM2_DMA_CH7


	)

268 
	#HAL_REMAPDMA_TIM3_DMA_CH6
 
DMA_REMAP_TIM3_DMA_CH6


	)

270 
	#IS_HAL_REMAPDMA
 
IS_DMA_REMAP


	)

271 
	#__HAL_REMAPDMA_CHANNEL_ENABLE
 
__HAL_DMA_REMAP_CHANNEL_ENABLE


	)

272 
	#__HAL_REMAPDMA_CHANNEL_DISABLE
 
__HAL_DMA_REMAP_CHANNEL_DISABLE


	)

274 #i‡
deföed
(
STM32L4
)

276 
	#HAL_DMAMUX1_REQUEST_GEN_EXTI0
 
HAL_DMAMUX1_REQ_GEN_EXTI0


	)

277 
	#HAL_DMAMUX1_REQUEST_GEN_EXTI1
 
HAL_DMAMUX1_REQ_GEN_EXTI1


	)

278 
	#HAL_DMAMUX1_REQUEST_GEN_EXTI2
 
HAL_DMAMUX1_REQ_GEN_EXTI2


	)

279 
	#HAL_DMAMUX1_REQUEST_GEN_EXTI3
 
HAL_DMAMUX1_REQ_GEN_EXTI3


	)

280 
	#HAL_DMAMUX1_REQUEST_GEN_EXTI4
 
HAL_DMAMUX1_REQ_GEN_EXTI4


	)

281 
	#HAL_DMAMUX1_REQUEST_GEN_EXTI5
 
HAL_DMAMUX1_REQ_GEN_EXTI5


	)

282 
	#HAL_DMAMUX1_REQUEST_GEN_EXTI6
 
HAL_DMAMUX1_REQ_GEN_EXTI6


	)

283 
	#HAL_DMAMUX1_REQUEST_GEN_EXTI7
 
HAL_DMAMUX1_REQ_GEN_EXTI7


	)

284 
	#HAL_DMAMUX1_REQUEST_GEN_EXTI8
 
HAL_DMAMUX1_REQ_GEN_EXTI8


	)

285 
	#HAL_DMAMUX1_REQUEST_GEN_EXTI9
 
HAL_DMAMUX1_REQ_GEN_EXTI9


	)

286 
	#HAL_DMAMUX1_REQUEST_GEN_EXTI10
 
HAL_DMAMUX1_REQ_GEN_EXTI10


	)

287 
	#HAL_DMAMUX1_REQUEST_GEN_EXTI11
 
HAL_DMAMUX1_REQ_GEN_EXTI11


	)

288 
	#HAL_DMAMUX1_REQUEST_GEN_EXTI12
 
HAL_DMAMUX1_REQ_GEN_EXTI12


	)

289 
	#HAL_DMAMUX1_REQUEST_GEN_EXTI13
 
HAL_DMAMUX1_REQ_GEN_EXTI13


	)

290 
	#HAL_DMAMUX1_REQUEST_GEN_EXTI14
 
HAL_DMAMUX1_REQ_GEN_EXTI14


	)

291 
	#HAL_DMAMUX1_REQUEST_GEN_EXTI15
 
HAL_DMAMUX1_REQ_GEN_EXTI15


	)

292 
	#HAL_DMAMUX1_REQUEST_GEN_DMAMUX1_CH0_EVT
 
HAL_DMAMUX1_REQ_GEN_DMAMUX1_CH0_EVT


	)

293 
	#HAL_DMAMUX1_REQUEST_GEN_DMAMUX1_CH1_EVT
 
HAL_DMAMUX1_REQ_GEN_DMAMUX1_CH1_EVT


	)

294 
	#HAL_DMAMUX1_REQUEST_GEN_DMAMUX1_CH2_EVT
 
HAL_DMAMUX1_REQ_GEN_DMAMUX1_CH2_EVT


	)

295 
	#HAL_DMAMUX1_REQUEST_GEN_DMAMUX1_CH3_EVT
 
HAL_DMAMUX1_REQ_GEN_DMAMUX1_CH3_EVT


	)

296 
	#HAL_DMAMUX1_REQUEST_GEN_LPTIM1_OUT
 
HAL_DMAMUX1_REQ_GEN_LPTIM1_OUT


	)

297 
	#HAL_DMAMUX1_REQUEST_GEN_LPTIM2_OUT
 
HAL_DMAMUX1_REQ_GEN_LPTIM2_OUT


	)

298 
	#HAL_DMAMUX1_REQUEST_GEN_DSI_TE
 
HAL_DMAMUX1_REQ_GEN_DSI_TE


	)

299 
	#HAL_DMAMUX1_REQUEST_GEN_DSI_EOT
 
HAL_DMAMUX1_REQ_GEN_DSI_EOT


	)

300 
	#HAL_DMAMUX1_REQUEST_GEN_DMA2D_EOT
 
HAL_DMAMUX1_REQ_GEN_DMA2D_EOT


	)

301 
	#HAL_DMAMUX1_REQUEST_GEN_LTDC_IT
 
HAL_DMAMUX1_REQ_GEN_LTDC_IT


	)

303 
	#HAL_DMAMUX_REQUEST_GEN_NO_EVENT
 
HAL_DMAMUX_REQ_GEN_NO_EVENT


	)

304 
	#HAL_DMAMUX_REQUEST_GEN_RISING
 
HAL_DMAMUX_REQ_GEN_RISING


	)

305 
	#HAL_DMAMUX_REQUEST_GEN_FALLING
 
HAL_DMAMUX_REQ_GEN_FALLING


	)

306 
	#HAL_DMAMUX_REQUEST_GEN_RISING_FALLING
 
HAL_DMAMUX_REQ_GEN_RISING_FALLING


	)

308 #i‡
deföed
(
STM32L4R5xx
Ë|| deföed(
STM32L4R9xx
Ë|| deföed(STM32L4R9xxË|| deföed(
STM32L4S5xx
Ë|| deföed(
STM32L4S7xx
Ë|| deföed(
STM32L4S9xx
)

309 
	#DMA_REQUEST_DCMI_PSSI
 
DMA_REQUEST_DCMI


	)

314 #i‡
deföed
(
STM32G0
)

315 
	#DMA_REQUEST_DAC1_CHANNEL1
 
DMA_REQUEST_DAC1_CH1


	)

316 
	#DMA_REQUEST_DAC1_CHANNEL2
 
DMA_REQUEST_DAC1_CH2


	)

317 
	#DMA_REQUEST_TIM16_TRIG_COM
 
DMA_REQUEST_TIM16_COM


	)

318 
	#DMA_REQUEST_TIM17_TRIG_COM
 
DMA_REQUEST_TIM17_COM


	)

320 
	#LL_DMAMUX_REQ_TIM16_TRIG_COM
 
LL_DMAMUX_REQ_TIM16_COM


	)

321 
	#LL_DMAMUX_REQ_TIM17_TRIG_COM
 
LL_DMAMUX_REQ_TIM17_COM


	)

324 #i‡
deföed
(
STM32H7
)

326 
	#DMA_REQUEST_DAC1
 
DMA_REQUEST_DAC1_CH1


	)

327 
	#DMA_REQUEST_DAC2
 
DMA_REQUEST_DAC1_CH2


	)

329 
	#BDMA_REQUEST_LP_UART1_RX
 
BDMA_REQUEST_LPUART1_RX


	)

330 
	#BDMA_REQUEST_LP_UART1_TX
 
BDMA_REQUEST_LPUART1_TX


	)

332 
	#HAL_DMAMUX1_REQUEST_GEN_DMAMUX1_CH0_EVT
 
HAL_DMAMUX1_REQ_GEN_DMAMUX1_CH0_EVT


	)

333 
	#HAL_DMAMUX1_REQUEST_GEN_DMAMUX1_CH1_EVT
 
HAL_DMAMUX1_REQ_GEN_DMAMUX1_CH1_EVT


	)

334 
	#HAL_DMAMUX1_REQUEST_GEN_DMAMUX1_CH2_EVT
 
HAL_DMAMUX1_REQ_GEN_DMAMUX1_CH2_EVT


	)

335 
	#HAL_DMAMUX1_REQUEST_GEN_LPTIM1_OUT
 
HAL_DMAMUX1_REQ_GEN_LPTIM1_OUT


	)

336 
	#HAL_DMAMUX1_REQUEST_GEN_LPTIM2_OUT
 
HAL_DMAMUX1_REQ_GEN_LPTIM2_OUT


	)

337 
	#HAL_DMAMUX1_REQUEST_GEN_LPTIM3_OUT
 
HAL_DMAMUX1_REQ_GEN_LPTIM3_OUT


	)

338 
	#HAL_DMAMUX1_REQUEST_GEN_EXTI0
 
HAL_DMAMUX1_REQ_GEN_EXTI0


	)

339 
	#HAL_DMAMUX1_REQUEST_GEN_TIM12_TRGO
 
HAL_DMAMUX1_REQ_GEN_TIM12_TRGO


	)

341 
	#HAL_DMAMUX2_REQUEST_GEN_DMAMUX2_CH0_EVT
 
HAL_DMAMUX2_REQ_GEN_DMAMUX2_CH0_EVT


	)

342 
	#HAL_DMAMUX2_REQUEST_GEN_DMAMUX2_CH1_EVT
 
HAL_DMAMUX2_REQ_GEN_DMAMUX2_CH1_EVT


	)

343 
	#HAL_DMAMUX2_REQUEST_GEN_DMAMUX2_CH2_EVT
 
HAL_DMAMUX2_REQ_GEN_DMAMUX2_CH2_EVT


	)

344 
	#HAL_DMAMUX2_REQUEST_GEN_DMAMUX2_CH3_EVT
 
HAL_DMAMUX2_REQ_GEN_DMAMUX2_CH3_EVT


	)

345 
	#HAL_DMAMUX2_REQUEST_GEN_DMAMUX2_CH4_EVT
 
HAL_DMAMUX2_REQ_GEN_DMAMUX2_CH4_EVT


	)

346 
	#HAL_DMAMUX2_REQUEST_GEN_DMAMUX2_CH5_EVT
 
HAL_DMAMUX2_REQ_GEN_DMAMUX2_CH5_EVT


	)

347 
	#HAL_DMAMUX2_REQUEST_GEN_DMAMUX2_CH6_EVT
 
HAL_DMAMUX2_REQ_GEN_DMAMUX2_CH6_EVT


	)

348 
	#HAL_DMAMUX2_REQUEST_GEN_LPUART1_RX_WKUP
 
HAL_DMAMUX2_REQ_GEN_LPUART1_RX_WKUP


	)

349 
	#HAL_DMAMUX2_REQUEST_GEN_LPUART1_TX_WKUP
 
HAL_DMAMUX2_REQ_GEN_LPUART1_TX_WKUP


	)

350 
	#HAL_DMAMUX2_REQUEST_GEN_LPTIM2_WKUP
 
HAL_DMAMUX2_REQ_GEN_LPTIM2_WKUP


	)

351 
	#HAL_DMAMUX2_REQUEST_GEN_LPTIM2_OUT
 
HAL_DMAMUX2_REQ_GEN_LPTIM2_OUT


	)

352 
	#HAL_DMAMUX2_REQUEST_GEN_LPTIM3_WKUP
 
HAL_DMAMUX2_REQ_GEN_LPTIM3_WKUP


	)

353 
	#HAL_DMAMUX2_REQUEST_GEN_LPTIM3_OUT
 
HAL_DMAMUX2_REQ_GEN_LPTIM3_OUT


	)

354 
	#HAL_DMAMUX2_REQUEST_GEN_LPTIM4_WKUP
 
HAL_DMAMUX2_REQ_GEN_LPTIM4_WKUP


	)

355 
	#HAL_DMAMUX2_REQUEST_GEN_LPTIM5_WKUP
 
HAL_DMAMUX2_REQ_GEN_LPTIM5_WKUP


	)

356 
	#HAL_DMAMUX2_REQUEST_GEN_I2C4_WKUP
 
HAL_DMAMUX2_REQ_GEN_I2C4_WKUP


	)

357 
	#HAL_DMAMUX2_REQUEST_GEN_SPI6_WKUP
 
HAL_DMAMUX2_REQ_GEN_SPI6_WKUP


	)

358 
	#HAL_DMAMUX2_REQUEST_GEN_COMP1_OUT
 
HAL_DMAMUX2_REQ_GEN_COMP1_OUT


	)

359 
	#HAL_DMAMUX2_REQUEST_GEN_COMP2_OUT
 
HAL_DMAMUX2_REQ_GEN_COMP2_OUT


	)

360 
	#HAL_DMAMUX2_REQUEST_GEN_RTC_WKUP
 
HAL_DMAMUX2_REQ_GEN_RTC_WKUP


	)

361 
	#HAL_DMAMUX2_REQUEST_GEN_EXTI0
 
HAL_DMAMUX2_REQ_GEN_EXTI0


	)

362 
	#HAL_DMAMUX2_REQUEST_GEN_EXTI2
 
HAL_DMAMUX2_REQ_GEN_EXTI2


	)

363 
	#HAL_DMAMUX2_REQUEST_GEN_I2C4_IT_EVT
 
HAL_DMAMUX2_REQ_GEN_I2C4_IT_EVT


	)

364 
	#HAL_DMAMUX2_REQUEST_GEN_SPI6_IT
 
HAL_DMAMUX2_REQ_GEN_SPI6_IT


	)

365 
	#HAL_DMAMUX2_REQUEST_GEN_LPUART1_TX_IT
 
HAL_DMAMUX2_REQ_GEN_LPUART1_TX_IT


	)

366 
	#HAL_DMAMUX2_REQUEST_GEN_LPUART1_RX_IT
 
HAL_DMAMUX2_REQ_GEN_LPUART1_RX_IT


	)

367 
	#HAL_DMAMUX2_REQUEST_GEN_ADC3_IT
 
HAL_DMAMUX2_REQ_GEN_ADC3_IT


	)

368 
	#HAL_DMAMUX2_REQUEST_GEN_ADC3_AWD1_OUT
 
HAL_DMAMUX2_REQ_GEN_ADC3_AWD1_OUT


	)

369 
	#HAL_DMAMUX2_REQUEST_GEN_BDMA_CH0_IT
 
HAL_DMAMUX2_REQ_GEN_BDMA_CH0_IT


	)

370 
	#HAL_DMAMUX2_REQUEST_GEN_BDMA_CH1_IT
 
HAL_DMAMUX2_REQ_GEN_BDMA_CH1_IT


	)

372 
	#HAL_DMAMUX_REQUEST_GEN_NO_EVENT
 
HAL_DMAMUX_REQ_GEN_NO_EVENT


	)

373 
	#HAL_DMAMUX_REQUEST_GEN_RISING
 
HAL_DMAMUX_REQ_GEN_RISING


	)

374 
	#HAL_DMAMUX_REQUEST_GEN_FALLING
 
HAL_DMAMUX_REQ_GEN_FALLING


	)

375 
	#HAL_DMAMUX_REQUEST_GEN_RISING_FALLING
 
HAL_DMAMUX_REQ_GEN_RISING_FALLING


	)

377 
	#DFSDM_FILTER_EXT_TRIG_LPTIM1
 
DFSDM_FILTER_EXT_TRIG_LPTIM1_OUT


	)

378 
	#DFSDM_FILTER_EXT_TRIG_LPTIM2
 
DFSDM_FILTER_EXT_TRIG_LPTIM2_OUT


	)

379 
	#DFSDM_FILTER_EXT_TRIG_LPTIM3
 
DFSDM_FILTER_EXT_TRIG_LPTIM3_OUT


	)

381 
	#DAC_TRIGGER_LP1_OUT
 
DAC_TRIGGER_LPTIM1_OUT


	)

382 
	#DAC_TRIGGER_LP2_OUT
 
DAC_TRIGGER_LPTIM2_OUT


	)

394 
	#TYPEPROGRAM_BYTE
 
FLASH_TYPEPROGRAM_BYTE


	)

395 
	#TYPEPROGRAM_HALFWORD
 
FLASH_TYPEPROGRAM_HALFWORD


	)

396 
	#TYPEPROGRAM_WORD
 
FLASH_TYPEPROGRAM_WORD


	)

397 
	#TYPEPROGRAM_DOUBLEWORD
 
FLASH_TYPEPROGRAM_DOUBLEWORD


	)

398 
	#TYPEERASE_SECTORS
 
FLASH_TYPEERASE_SECTORS


	)

399 
	#TYPEERASE_PAGES
 
FLASH_TYPEERASE_PAGES


	)

400 
	#TYPEERASE_PAGEERASE
 
FLASH_TYPEERASE_PAGES


	)

401 
	#TYPEERASE_MASSERASE
 
FLASH_TYPEERASE_MASSERASE


	)

402 
	#WRPSTATE_DISABLE
 
OB_WRPSTATE_DISABLE


	)

403 
	#WRPSTATE_ENABLE
 
OB_WRPSTATE_ENABLE


	)

404 
	#HAL_FLASH_TIMEOUT_VALUE
 
FLASH_TIMEOUT_VALUE


	)

405 
	#OBEX_PCROP
 
OPTIONBYTE_PCROP


	)

406 
	#OBEX_BOOTCONFIG
 
OPTIONBYTE_BOOTCONFIG


	)

407 
	#PCROPSTATE_DISABLE
 
OB_PCROP_STATE_DISABLE


	)

408 
	#PCROPSTATE_ENABLE
 
OB_PCROP_STATE_ENABLE


	)

409 
	#TYPEERASEDATA_BYTE
 
FLASH_TYPEERASEDATA_BYTE


	)

410 
	#TYPEERASEDATA_HALFWORD
 
FLASH_TYPEERASEDATA_HALFWORD


	)

411 
	#TYPEERASEDATA_WORD
 
FLASH_TYPEERASEDATA_WORD


	)

412 
	#TYPEPROGRAMDATA_BYTE
 
FLASH_TYPEPROGRAMDATA_BYTE


	)

413 
	#TYPEPROGRAMDATA_HALFWORD
 
FLASH_TYPEPROGRAMDATA_HALFWORD


	)

414 
	#TYPEPROGRAMDATA_WORD
 
FLASH_TYPEPROGRAMDATA_WORD


	)

415 
	#TYPEPROGRAMDATA_FASTBYTE
 
FLASH_TYPEPROGRAMDATA_FASTBYTE


	)

416 
	#TYPEPROGRAMDATA_FASTHALFWORD
 
FLASH_TYPEPROGRAMDATA_FASTHALFWORD


	)

417 
	#TYPEPROGRAMDATA_FASTWORD
 
FLASH_TYPEPROGRAMDATA_FASTWORD


	)

418 
	#PAGESIZE
 
FLASH_PAGE_SIZE


	)

419 
	#TYPEPROGRAM_FASTBYTE
 
FLASH_TYPEPROGRAM_BYTE


	)

420 
	#TYPEPROGRAM_FASTHALFWORD
 
FLASH_TYPEPROGRAM_HALFWORD


	)

421 
	#TYPEPROGRAM_FASTWORD
 
FLASH_TYPEPROGRAM_WORD


	)

422 
	#VOLTAGE_RANGE_1
 
FLASH_VOLTAGE_RANGE_1


	)

423 
	#VOLTAGE_RANGE_2
 
FLASH_VOLTAGE_RANGE_2


	)

424 
	#VOLTAGE_RANGE_3
 
FLASH_VOLTAGE_RANGE_3


	)

425 
	#VOLTAGE_RANGE_4
 
FLASH_VOLTAGE_RANGE_4


	)

426 
	#TYPEPROGRAM_FAST
 
FLASH_TYPEPROGRAM_FAST


	)

427 
	#TYPEPROGRAM_FAST_AND_LAST
 
FLASH_TYPEPROGRAM_FAST_AND_LAST


	)

428 
	#WRPAREA_BANK1_AREAA
 
OB_WRPAREA_BANK1_AREAA


	)

429 
	#WRPAREA_BANK1_AREAB
 
OB_WRPAREA_BANK1_AREAB


	)

430 
	#WRPAREA_BANK2_AREAA
 
OB_WRPAREA_BANK2_AREAA


	)

431 
	#WRPAREA_BANK2_AREAB
 
OB_WRPAREA_BANK2_AREAB


	)

432 
	#IWDG_STDBY_FREEZE
 
OB_IWDG_STDBY_FREEZE


	)

433 
	#IWDG_STDBY_ACTIVE
 
OB_IWDG_STDBY_RUN


	)

434 
	#IWDG_STOP_FREEZE
 
OB_IWDG_STOP_FREEZE


	)

435 
	#IWDG_STOP_ACTIVE
 
OB_IWDG_STOP_RUN


	)

436 
	#FLASH_ERROR_NONE
 
HAL_FLASH_ERROR_NONE


	)

437 
	#FLASH_ERROR_RD
 
HAL_FLASH_ERROR_RD


	)

438 
	#FLASH_ERROR_PG
 
HAL_FLASH_ERROR_PROG


	)

439 
	#FLASH_ERROR_PGP
 
HAL_FLASH_ERROR_PGS


	)

440 
	#FLASH_ERROR_WRP
 
HAL_FLASH_ERROR_WRP


	)

441 
	#FLASH_ERROR_OPTV
 
HAL_FLASH_ERROR_OPTV


	)

442 
	#FLASH_ERROR_OPTVUSR
 
HAL_FLASH_ERROR_OPTVUSR


	)

443 
	#FLASH_ERROR_PROG
 
HAL_FLASH_ERROR_PROG


	)

444 
	#FLASH_ERROR_OP
 
HAL_FLASH_ERROR_OPERATION


	)

445 
	#FLASH_ERROR_PGA
 
HAL_FLASH_ERROR_PGA


	)

446 
	#FLASH_ERROR_SIZE
 
HAL_FLASH_ERROR_SIZE


	)

447 
	#FLASH_ERROR_SIZ
 
HAL_FLASH_ERROR_SIZE


	)

448 
	#FLASH_ERROR_PGS
 
HAL_FLASH_ERROR_PGS


	)

449 
	#FLASH_ERROR_MIS
 
HAL_FLASH_ERROR_MIS


	)

450 
	#FLASH_ERROR_FAST
 
HAL_FLASH_ERROR_FAST


	)

451 
	#FLASH_ERROR_FWWERR
 
HAL_FLASH_ERROR_FWWERR


	)

452 
	#FLASH_ERROR_NOTZERO
 
HAL_FLASH_ERROR_NOTZERO


	)

453 
	#FLASH_ERROR_OPERATION
 
HAL_FLASH_ERROR_OPERATION


	)

454 
	#FLASH_ERROR_ERS
 
HAL_FLASH_ERROR_ERS


	)

455 
	#OB_WDG_SW
 
OB_IWDG_SW


	)

456 
	#OB_WDG_HW
 
OB_IWDG_HW


	)

457 
	#OB_SDADC12_VDD_MONITOR_SET
 
OB_SDACD_VDD_MONITOR_SET


	)

458 
	#OB_SDADC12_VDD_MONITOR_RESET
 
OB_SDACD_VDD_MONITOR_RESET


	)

459 
	#OB_RAM_PARITY_CHECK_SET
 
OB_SRAM_PARITY_SET


	)

460 
	#OB_RAM_PARITY_CHECK_RESET
 
OB_SRAM_PARITY_RESET


	)

461 
	#IS_OB_SDADC12_VDD_MONITOR
 
IS_OB_SDACD_VDD_MONITOR


	)

462 
	#OB_RDP_LEVEL0
 
OB_RDP_LEVEL_0


	)

463 
	#OB_RDP_LEVEL1
 
OB_RDP_LEVEL_1


	)

464 
	#OB_RDP_LEVEL2
 
OB_RDP_LEVEL_2


	)

465 #i‡
deföed
(
STM32G0
)

466 
	#OB_BOOT_LOCK_DISABLE
 
OB_BOOT_ENTRY_FORCED_NONE


	)

467 
	#OB_BOOT_LOCK_ENABLE
 
OB_BOOT_ENTRY_FORCED_FLASH


	)

469 
	#OB_BOOT_ENTRY_FORCED_NONE
 
OB_BOOT_LOCK_DISABLE


	)

470 
	#OB_BOOT_ENTRY_FORCED_FLASH
 
OB_BOOT_LOCK_ENABLE


	)

472 #i‡
deföed
(
STM32H7
)

473 
	#FLASH_FLAG_SNECCE_BANK1RR
 
FLASH_FLAG_SNECCERR_BANK1


	)

474 
	#FLASH_FLAG_DBECCE_BANK1RR
 
FLASH_FLAG_DBECCERR_BANK1


	)

475 
	#FLASH_FLAG_STRBER_BANK1R
 
FLASH_FLAG_STRBERR_BANK1


	)

476 
	#FLASH_FLAG_SNECCE_BANK2RR
 
FLASH_FLAG_SNECCERR_BANK2


	)

477 
	#FLASH_FLAG_DBECCE_BANK2RR
 
FLASH_FLAG_DBECCERR_BANK2


	)

478 
	#FLASH_FLAG_STRBER_BANK2R
 
FLASH_FLAG_STRBERR_BANK2


	)

479 
	#FLASH_FLAG_WDW
 
FLASH_FLAG_WBNE


	)

480 
	#OB_WRP_SECTOR_AŒ
 
OB_WRP_SECTOR_ALL


	)

491 #i‡
deföed
(
STM32H7
)

492 
	#__HAL_RCC_JPEG_CLK_ENABLE
 
__HAL_RCC_JPGDECEN_CLK_ENABLE


	)

493 
	#__HAL_RCC_JPEG_CLK_DISABLE
 
__HAL_RCC_JPGDECEN_CLK_DISABLE


	)

494 
	#__HAL_RCC_JPEG_FORCE_RESET
 
__HAL_RCC_JPGDECRST_FORCE_RESET


	)

495 
	#__HAL_RCC_JPEG_RELEASE_RESET
 
__HAL_RCC_JPGDECRST_RELEASE_RESET


	)

496 
	#__HAL_RCC_JPEG_CLK_SLEEP_ENABLE
 
__HAL_RCC_JPGDEC_CLK_SLEEP_ENABLE


	)

497 
	#__HAL_RCC_JPEG_CLK_SLEEP_DISABLE
 
__HAL_RCC_JPGDEC_CLK_SLEEP_DISABLE


	)

508 
	#HAL_SYSCFG_FASTMODEPLUS_I2C_PA9
 
I2C_FASTMODEPLUS_PA9


	)

509 
	#HAL_SYSCFG_FASTMODEPLUS_I2C_PA10
 
I2C_FASTMODEPLUS_PA10


	)

510 
	#HAL_SYSCFG_FASTMODEPLUS_I2C_PB6
 
I2C_FASTMODEPLUS_PB6


	)

511 
	#HAL_SYSCFG_FASTMODEPLUS_I2C_PB7
 
I2C_FASTMODEPLUS_PB7


	)

512 
	#HAL_SYSCFG_FASTMODEPLUS_I2C_PB8
 
I2C_FASTMODEPLUS_PB8


	)

513 
	#HAL_SYSCFG_FASTMODEPLUS_I2C_PB9
 
I2C_FASTMODEPLUS_PB9


	)

514 
	#HAL_SYSCFG_FASTMODEPLUS_I2C1
 
I2C_FASTMODEPLUS_I2C1


	)

515 
	#HAL_SYSCFG_FASTMODEPLUS_I2C2
 
I2C_FASTMODEPLUS_I2C2


	)

516 
	#HAL_SYSCFG_FASTMODEPLUS_I2C3
 
I2C_FASTMODEPLUS_I2C3


	)

517 #i‡
deföed
(
STM32G4
)

519 
	#HAL_SYSCFG_E«bÀIOA«logSwôchBoo°î
 
HAL_SYSCFG_E«bÀIOSwôchBoo°î


	)

520 
	#HAL_SYSCFG_DißbÀIOA«logSwôchBoo°î
 
HAL_SYSCFG_DißbÀIOSwôchBoo°î


	)

521 
	#HAL_SYSCFG_E«bÀIOA«logSwôchVDD
 
HAL_SYSCFG_E«bÀIOSwôchVDD


	)

522 
	#HAL_SYSCFG_DißbÀIOA«logSwôchVDD
 
HAL_SYSCFG_DißbÀIOSwôchVDD


	)

532 #i‡
deföed
(
STM32L4
Ë|| deföed(
STM32F7
Ë|| deföed(
STM32H7
Ë|| deföed(
STM32G4
)

533 
	#FMC_NAND_PCC_WAIT_FEATURE_DISABLE
 
FMC_NAND_WAIT_FEATURE_DISABLE


	)

534 
	#FMC_NAND_PCC_WAIT_FEATURE_ENABLE
 
FMC_NAND_WAIT_FEATURE_ENABLE


	)

535 
	#FMC_NAND_PCC_MEM_BUS_WIDTH_8
 
FMC_NAND_MEM_BUS_WIDTH_8


	)

536 
	#FMC_NAND_PCC_MEM_BUS_WIDTH_16
 
FMC_NAND_MEM_BUS_WIDTH_16


	)

537 #ñi‡
deföed
(
STM32F1
Ë|| deföed(
STM32F2
Ë|| deföed(
STM32F3
Ë|| deföed(
STM32F4
)

538 
	#FMC_NAND_WAIT_FEATURE_DISABLE
 
FMC_NAND_PCC_WAIT_FEATURE_DISABLE


	)

539 
	#FMC_NAND_WAIT_FEATURE_ENABLE
 
FMC_NAND_PCC_WAIT_FEATURE_ENABLE


	)

540 
	#FMC_NAND_MEM_BUS_WIDTH_8
 
FMC_NAND_PCC_MEM_BUS_WIDTH_8


	)

541 
	#FMC_NAND_MEM_BUS_WIDTH_16
 
FMC_NAND_PCC_MEM_BUS_WIDTH_16


	)

551 
	#FSMC_NORSRAM_TYPEDEF
 
FSMC_NORSRAM_Ty≥Def


	)

552 
	#FSMC_NORSRAM_EXTENDED_TYPEDEF
 
FSMC_NORSRAM_EXTENDED_Ty≥Def


	)

560 
	#GET_GPIO_SOURCE
 
GPIO_GET_INDEX


	)

561 
	#GET_GPIO_INDEX
 
GPIO_GET_INDEX


	)

563 #i‡
deföed
(
STM32F4
)

564 
	#GPIO_AF12_SDMMC
 
GPIO_AF12_SDIO


	)

565 
	#GPIO_AF12_SDMMC1
 
GPIO_AF12_SDIO


	)

568 #i‡
deföed
(
STM32F7
)

569 
	#GPIO_AF12_SDIO
 
GPIO_AF12_SDMMC1


	)

570 
	#GPIO_AF12_SDMMC
 
GPIO_AF12_SDMMC1


	)

573 #i‡
deföed
(
STM32L4
)

574 
	#GPIO_AF12_SDIO
 
GPIO_AF12_SDMMC1


	)

575 
	#GPIO_AF12_SDMMC
 
GPIO_AF12_SDMMC1


	)

578 #i‡
deföed
(
STM32H7
)

579 
	#GPIO_AF7_SDIO1
 
GPIO_AF7_SDMMC1


	)

580 
	#GPIO_AF8_SDIO1
 
GPIO_AF8_SDMMC1


	)

581 
	#GPIO_AF12_SDIO1
 
GPIO_AF12_SDMMC1


	)

582 
	#GPIO_AF9_SDIO2
 
GPIO_AF9_SDMMC2


	)

583 
	#GPIO_AF10_SDIO2
 
GPIO_AF10_SDMMC2


	)

584 
	#GPIO_AF11_SDIO2
 
GPIO_AF11_SDMMC2


	)

586 #i‡
deföed
 (
STM32H743xx
Ë|| deföed (
STM32H753xx
Ë|| deföed (
STM32H750xx
Ë|| deföed (
STM32H742xx
) || \

587 
deföed
 (
STM32H745xx
Ë|| deföed (
STM32H755xx
Ë|| deföed (
STM32H747xx
Ë|| deföed (
STM32H757xx
)

588 
	#GPIO_AF10_OTG2_HS
 
GPIO_AF10_OTG2_FS


	)

589 
	#GPIO_AF10_OTG1_FS
 
GPIO_AF10_OTG1_HS


	)

590 
	#GPIO_AF12_OTG2_FS
 
GPIO_AF12_OTG1_FS


	)

594 
	#GPIO_AF0_LPTIM
 
GPIO_AF0_LPTIM1


	)

595 
	#GPIO_AF1_LPTIM
 
GPIO_AF1_LPTIM1


	)

596 
	#GPIO_AF2_LPTIM
 
GPIO_AF2_LPTIM1


	)

598 #i‡
deföed
(
STM32L0
Ë|| deföed(
STM32L4
Ë|| deföed(
STM32F4
Ë|| deföed(
STM32F2
Ë|| deföed(
STM32F7
Ë|| deföed(
STM32G4
Ë|| deföed(
STM32H7
)

599 
	#GPIO_SPEED_LOW
 
GPIO_SPEED_FREQ_LOW


	)

600 
	#GPIO_SPEED_MEDIUM
 
GPIO_SPEED_FREQ_MEDIUM


	)

601 
	#GPIO_SPEED_FAST
 
GPIO_SPEED_FREQ_HIGH


	)

602 
	#GPIO_SPEED_HIGH
 
GPIO_SPEED_FREQ_VERY_HIGH


	)

605 #i‡
deföed
(
STM32L1
)

606 
	#GPIO_SPEED_VERY_LOW
 
GPIO_SPEED_FREQ_LOW


	)

607 
	#GPIO_SPEED_LOW
 
GPIO_SPEED_FREQ_MEDIUM


	)

608 
	#GPIO_SPEED_MEDIUM
 
GPIO_SPEED_FREQ_HIGH


	)

609 
	#GPIO_SPEED_HIGH
 
GPIO_SPEED_FREQ_VERY_HIGH


	)

612 #i‡
deföed
(
STM32F0
Ë|| deföed(
STM32F3
Ë|| deföed(
STM32F1
)

613 
	#GPIO_SPEED_LOW
 
GPIO_SPEED_FREQ_LOW


	)

614 
	#GPIO_SPEED_MEDIUM
 
GPIO_SPEED_FREQ_MEDIUM


	)

615 
	#GPIO_SPEED_HIGH
 
GPIO_SPEED_FREQ_HIGH


	)

618 
	#GPIO_AF6_DFSDM
 
GPIO_AF6_DFSDM1


	)

626 
	#HRTIM_TIMDELAYEDPROTECTION_DISABLED
 
HRTIM_TIMER_A_B_C_DELAYEDPROTECTION_DISABLED


	)

627 
	#HRTIM_TIMDELAYEDPROTECTION_DELAYEDOUT1_EEV68
 
HRTIM_TIMER_A_B_C_DELAYEDPROTECTION_DELAYEDOUT1_EEV6


	)

628 
	#HRTIM_TIMDELAYEDPROTECTION_DELAYEDOUT2_EEV68
 
HRTIM_TIMER_A_B_C_DELAYEDPROTECTION_DELAYEDOUT2_EEV6


	)

629 
	#HRTIM_TIMDELAYEDPROTECTION_DELAYEDBOTH_EEV68
 
HRTIM_TIMER_A_B_C_DELAYEDPROTECTION_DELAYEDBOTH_EEV6


	)

630 
	#HRTIM_TIMDELAYEDPROTECTION_BALANCED_EEV68
 
HRTIM_TIMER_A_B_C_DELAYEDPROTECTION_BALANCED_EEV6


	)

631 
	#HRTIM_TIMDELAYEDPROTECTION_DELAYEDOUT1_DEEV79
 
HRTIM_TIMER_A_B_C_DELAYEDPROTECTION_DELAYEDOUT1_DEEV7


	)

632 
	#HRTIM_TIMDELAYEDPROTECTION_DELAYEDOUT2_DEEV79
 
HRTIM_TIMER_A_B_C_DELAYEDPROTECTION_DELAYEDOUT2_DEEV7


	)

633 
	#HRTIM_TIMDELAYEDPROTECTION_DELAYEDBOTH_EEV79
 
HRTIM_TIMER_A_B_C_DELAYEDPROTECTION_DELAYEDBOTH_EEV7


	)

634 
	#HRTIM_TIMDELAYEDPROTECTION_BALANCED_EEV79
 
HRTIM_TIMER_A_B_C_DELAYEDPROTECTION_BALANCED_EEV7


	)

636 
	#__HAL_HRTIM_SëCou¡î
 
__HAL_HRTIM_SETCOUNTER


	)

637 
	#__HAL_HRTIM_GëCou¡î
 
__HAL_HRTIM_GETCOUNTER


	)

638 
	#__HAL_HRTIM_SëPîiod
 
__HAL_HRTIM_SETPERIOD


	)

639 
	#__HAL_HRTIM_GëPîiod
 
__HAL_HRTIM_GETPERIOD


	)

640 
	#__HAL_HRTIM_SëClockPªsˇÀr
 
__HAL_HRTIM_SETCLOCKPRESCALER


	)

641 
	#__HAL_HRTIM_GëClockPªsˇÀr
 
__HAL_HRTIM_GETCLOCKPRESCALER


	)

642 
	#__HAL_HRTIM_SëCom∑ª
 
__HAL_HRTIM_SETCOMPARE


	)

643 
	#__HAL_HRTIM_GëCom∑ª
 
__HAL_HRTIM_GETCOMPARE


	)

645 #i‡
deföed
(
STM32G4
)

646 
	#HAL_HRTIM_Exã∫ÆEvítCou¡îC⁄fig
 
HAL_HRTIM_ExtEvítCou¡îC⁄fig


	)

647 
	#HAL_HRTIM_Exã∫ÆEvítCou¡îE«bÀ
 
HAL_HRTIM_ExtEvítCou¡îE«bÀ


	)

648 
	#HAL_HRTIM_Exã∫ÆEvítCou¡îDißbÀ
 
HAL_HRTIM_ExtEvítCou¡îDißbÀ


	)

649 
	#HAL_HRTIM_Exã∫ÆEvítCou¡îRe£t
 
HAL_HRTIM_ExtEvítCou¡îRe£t


	)

650 
	#HRTIM_TIMEEVENT_A
 
HRTIM_EVENTCOUNTER_A


	)

651 
	#HRTIM_TIMEEVENT_B
 
HRTIM_EVENTCOUNTER_B


	)

652 
	#HRTIM_TIMEEVENTRESETMODE_UNCONDITIONAL
 
HRTIM_EVENTCOUNTER_RSTMODE_UNCONDITIONAL


	)

653 
	#HRTIM_TIMEEVENTRESETMODE_CONDITIONAL
 
HRTIM_EVENTCOUNTER_RSTMODE_CONDITIONAL


	)

656 #i‡
deföed
(
STM32H7
)

657 
	#HRTIM_OUTPUTSET_TIMAEV1_TIMBCMP1
 
HRTIM_OUTPUTSET_TIMEV_1


	)

658 
	#HRTIM_OUTPUTSET_TIMAEV2_TIMBCMP2
 
HRTIM_OUTPUTSET_TIMEV_2


	)

659 
	#HRTIM_OUTPUTSET_TIMAEV3_TIMCCMP2
 
HRTIM_OUTPUTSET_TIMEV_3


	)

660 
	#HRTIM_OUTPUTSET_TIMAEV4_TIMCCMP3
 
HRTIM_OUTPUTSET_TIMEV_4


	)

661 
	#HRTIM_OUTPUTSET_TIMAEV5_TIMDCMP1
 
HRTIM_OUTPUTSET_TIMEV_5


	)

662 
	#HRTIM_OUTPUTSET_TIMAEV6_TIMDCMP2
 
HRTIM_OUTPUTSET_TIMEV_6


	)

663 
	#HRTIM_OUTPUTSET_TIMAEV7_TIMECMP3
 
HRTIM_OUTPUTSET_TIMEV_7


	)

664 
	#HRTIM_OUTPUTSET_TIMAEV8_TIMECMP4
 
HRTIM_OUTPUTSET_TIMEV_8


	)

665 
	#HRTIM_OUTPUTSET_TIMAEV9_TIMFCMP4
 
HRTIM_OUTPUTSET_TIMEV_9


	)

666 
	#HRTIM_OUTPUTSET_TIMBEV1_TIMACMP1
 
HRTIM_OUTPUTSET_TIMEV_1


	)

667 
	#HRTIM_OUTPUTSET_TIMBEV2_TIMACMP2
 
HRTIM_OUTPUTSET_TIMEV_2


	)

668 
	#HRTIM_OUTPUTSET_TIMBEV3_TIMCCMP3
 
HRTIM_OUTPUTSET_TIMEV_3


	)

669 
	#HRTIM_OUTPUTSET_TIMBEV4_TIMCCMP4
 
HRTIM_OUTPUTSET_TIMEV_4


	)

670 
	#HRTIM_OUTPUTSET_TIMBEV5_TIMDCMP3
 
HRTIM_OUTPUTSET_TIMEV_5


	)

671 
	#HRTIM_OUTPUTSET_TIMBEV6_TIMDCMP4
 
HRTIM_OUTPUTSET_TIMEV_6


	)

672 
	#HRTIM_OUTPUTSET_TIMBEV7_TIMECMP1
 
HRTIM_OUTPUTSET_TIMEV_7


	)

673 
	#HRTIM_OUTPUTSET_TIMBEV8_TIMECMP2
 
HRTIM_OUTPUTSET_TIMEV_8


	)

674 
	#HRTIM_OUTPUTSET_TIMBEV9_TIMFCMP3
 
HRTIM_OUTPUTSET_TIMEV_9


	)

675 
	#HRTIM_OUTPUTSET_TIMCEV1_TIMACMP1
 
HRTIM_OUTPUTSET_TIMEV_1


	)

676 
	#HRTIM_OUTPUTSET_TIMCEV2_TIMACMP2
 
HRTIM_OUTPUTSET_TIMEV_2


	)

677 
	#HRTIM_OUTPUTSET_TIMCEV3_TIMBCMP2
 
HRTIM_OUTPUTSET_TIMEV_3


	)

678 
	#HRTIM_OUTPUTSET_TIMCEV4_TIMBCMP3
 
HRTIM_OUTPUTSET_TIMEV_4


	)

679 
	#HRTIM_OUTPUTSET_TIMCEV5_TIMDCMP2
 
HRTIM_OUTPUTSET_TIMEV_5


	)

680 
	#HRTIM_OUTPUTSET_TIMCEV6_TIMDCMP4
 
HRTIM_OUTPUTSET_TIMEV_6


	)

681 
	#HRTIM_OUTPUTSET_TIMCEV7_TIMECMP3
 
HRTIM_OUTPUTSET_TIMEV_7


	)

682 
	#HRTIM_OUTPUTSET_TIMCEV8_TIMECMP4
 
HRTIM_OUTPUTSET_TIMEV_8


	)

683 
	#HRTIM_OUTPUTSET_TIMCEV9_TIMFCMP2
 
HRTIM_OUTPUTSET_TIMEV_9


	)

684 
	#HRTIM_OUTPUTSET_TIMDEV1_TIMACMP1
 
HRTIM_OUTPUTSET_TIMEV_1


	)

685 
	#HRTIM_OUTPUTSET_TIMDEV2_TIMACMP4
 
HRTIM_OUTPUTSET_TIMEV_2


	)

686 
	#HRTIM_OUTPUTSET_TIMDEV3_TIMBCMP2
 
HRTIM_OUTPUTSET_TIMEV_3


	)

687 
	#HRTIM_OUTPUTSET_TIMDEV4_TIMBCMP4
 
HRTIM_OUTPUTSET_TIMEV_4


	)

688 
	#HRTIM_OUTPUTSET_TIMDEV5_TIMCCMP4
 
HRTIM_OUTPUTSET_TIMEV_5


	)

689 
	#HRTIM_OUTPUTSET_TIMDEV6_TIMECMP1
 
HRTIM_OUTPUTSET_TIMEV_6


	)

690 
	#HRTIM_OUTPUTSET_TIMDEV7_TIMECMP4
 
HRTIM_OUTPUTSET_TIMEV_7


	)

691 
	#HRTIM_OUTPUTSET_TIMDEV8_TIMFCMP1
 
HRTIM_OUTPUTSET_TIMEV_8


	)

692 
	#HRTIM_OUTPUTSET_TIMDEV9_TIMFCMP3
 
HRTIM_OUTPUTSET_TIMEV_9


	)

693 
	#HRTIM_OUTPUTSET_TIMEEV1_TIMACMP4
 
HRTIM_OUTPUTSET_TIMEV_1


	)

694 
	#HRTIM_OUTPUTSET_TIMEEV2_TIMBCMP3
 
HRTIM_OUTPUTSET_TIMEV_2


	)

695 
	#HRTIM_OUTPUTSET_TIMEEV3_TIMBCMP4
 
HRTIM_OUTPUTSET_TIMEV_3


	)

696 
	#HRTIM_OUTPUTSET_TIMEEV4_TIMCCMP1
 
HRTIM_OUTPUTSET_TIMEV_4


	)

697 
	#HRTIM_OUTPUTSET_TIMEEV5_TIMDCMP2
 
HRTIM_OUTPUTSET_TIMEV_5


	)

698 
	#HRTIM_OUTPUTSET_TIMEEV6_TIMDCMP1
 
HRTIM_OUTPUTSET_TIMEV_6


	)

699 
	#HRTIM_OUTPUTSET_TIMEEV7_TIMDCMP2
 
HRTIM_OUTPUTSET_TIMEV_7


	)

700 
	#HRTIM_OUTPUTSET_TIMEEV8_TIMFCMP3
 
HRTIM_OUTPUTSET_TIMEV_8


	)

701 
	#HRTIM_OUTPUTSET_TIMEEV9_TIMFCMP4
 
HRTIM_OUTPUTSET_TIMEV_9


	)

702 
	#HRTIM_OUTPUTSET_TIMFEV1_TIMACMP3
 
HRTIM_OUTPUTSET_TIMEV_1


	)

703 
	#HRTIM_OUTPUTSET_TIMFEV2_TIMBCMP1
 
HRTIM_OUTPUTSET_TIMEV_2


	)

704 
	#HRTIM_OUTPUTSET_TIMFEV3_TIMBCMP4
 
HRTIM_OUTPUTSET_TIMEV_3


	)

705 
	#HRTIM_OUTPUTSET_TIMFEV4_TIMCCMP1
 
HRTIM_OUTPUTSET_TIMEV_4


	)

706 
	#HRTIM_OUTPUTSET_TIMFEV5_TIMCCMP4
 
HRTIM_OUTPUTSET_TIMEV_5


	)

707 
	#HRTIM_OUTPUTSET_TIMFEV6_TIMDCMP3
 
HRTIM_OUTPUTSET_TIMEV_6


	)

708 
	#HRTIM_OUTPUTSET_TIMFEV7_TIMDCMP4
 
HRTIM_OUTPUTSET_TIMEV_7


	)

709 
	#HRTIM_OUTPUTSET_TIMFEV8_TIMECMP2
 
HRTIM_OUTPUTSET_TIMEV_8


	)

710 
	#HRTIM_OUTPUTSET_TIMFEV9_TIMECMP3
 
HRTIM_OUTPUTSET_TIMEV_9


	)

712 
	#HRTIM_OUTPUTRESET_TIMAEV1_TIMBCMP1
 
HRTIM_OUTPUTSET_TIMEV_1


	)

713 
	#HRTIM_OUTPUTRESET_TIMAEV2_TIMBCMP2
 
HRTIM_OUTPUTSET_TIMEV_2


	)

714 
	#HRTIM_OUTPUTRESET_TIMAEV3_TIMCCMP2
 
HRTIM_OUTPUTSET_TIMEV_3


	)

715 
	#HRTIM_OUTPUTRESET_TIMAEV4_TIMCCMP3
 
HRTIM_OUTPUTSET_TIMEV_4


	)

716 
	#HRTIM_OUTPUTRESET_TIMAEV5_TIMDCMP1
 
HRTIM_OUTPUTSET_TIMEV_5


	)

717 
	#HRTIM_OUTPUTRESET_TIMAEV6_TIMDCMP2
 
HRTIM_OUTPUTSET_TIMEV_6


	)

718 
	#HRTIM_OUTPUTRESET_TIMAEV7_TIMECMP3
 
HRTIM_OUTPUTSET_TIMEV_7


	)

719 
	#HRTIM_OUTPUTRESET_TIMAEV8_TIMECMP4
 
HRTIM_OUTPUTSET_TIMEV_8


	)

720 
	#HRTIM_OUTPUTRESET_TIMAEV9_TIMFCMP4
 
HRTIM_OUTPUTSET_TIMEV_9


	)

721 
	#HRTIM_OUTPUTRESET_TIMBEV1_TIMACMP1
 
HRTIM_OUTPUTSET_TIMEV_1


	)

722 
	#HRTIM_OUTPUTRESET_TIMBEV2_TIMACMP2
 
HRTIM_OUTPUTSET_TIMEV_2


	)

723 
	#HRTIM_OUTPUTRESET_TIMBEV3_TIMCCMP3
 
HRTIM_OUTPUTSET_TIMEV_3


	)

724 
	#HRTIM_OUTPUTRESET_TIMBEV4_TIMCCMP4
 
HRTIM_OUTPUTSET_TIMEV_4


	)

725 
	#HRTIM_OUTPUTRESET_TIMBEV5_TIMDCMP3
 
HRTIM_OUTPUTSET_TIMEV_5


	)

726 
	#HRTIM_OUTPUTRESET_TIMBEV6_TIMDCMP4
 
HRTIM_OUTPUTSET_TIMEV_6


	)

727 
	#HRTIM_OUTPUTRESET_TIMBEV7_TIMECMP1
 
HRTIM_OUTPUTSET_TIMEV_7


	)

728 
	#HRTIM_OUTPUTRESET_TIMBEV8_TIMECMP2
 
HRTIM_OUTPUTSET_TIMEV_8


	)

729 
	#HRTIM_OUTPUTRESET_TIMBEV9_TIMFCMP3
 
HRTIM_OUTPUTSET_TIMEV_9


	)

730 
	#HRTIM_OUTPUTRESET_TIMCEV1_TIMACMP1
 
HRTIM_OUTPUTSET_TIMEV_1


	)

731 
	#HRTIM_OUTPUTRESET_TIMCEV2_TIMACMP2
 
HRTIM_OUTPUTSET_TIMEV_2


	)

732 
	#HRTIM_OUTPUTRESET_TIMCEV3_TIMBCMP2
 
HRTIM_OUTPUTSET_TIMEV_3


	)

733 
	#HRTIM_OUTPUTRESET_TIMCEV4_TIMBCMP3
 
HRTIM_OUTPUTSET_TIMEV_4


	)

734 
	#HRTIM_OUTPUTRESET_TIMCEV5_TIMDCMP2
 
HRTIM_OUTPUTSET_TIMEV_5


	)

735 
	#HRTIM_OUTPUTRESET_TIMCEV6_TIMDCMP4
 
HRTIM_OUTPUTSET_TIMEV_6


	)

736 
	#HRTIM_OUTPUTRESET_TIMCEV7_TIMECMP3
 
HRTIM_OUTPUTSET_TIMEV_7


	)

737 
	#HRTIM_OUTPUTRESET_TIMCEV8_TIMECMP4
 
HRTIM_OUTPUTSET_TIMEV_8


	)

738 
	#HRTIM_OUTPUTRESET_TIMCEV9_TIMFCMP2
 
HRTIM_OUTPUTSET_TIMEV_9


	)

739 
	#HRTIM_OUTPUTRESET_TIMDEV1_TIMACMP1
 
HRTIM_OUTPUTSET_TIMEV_1


	)

740 
	#HRTIM_OUTPUTRESET_TIMDEV2_TIMACMP4
 
HRTIM_OUTPUTSET_TIMEV_2


	)

741 
	#HRTIM_OUTPUTRESET_TIMDEV3_TIMBCMP2
 
HRTIM_OUTPUTSET_TIMEV_3


	)

742 
	#HRTIM_OUTPUTRESET_TIMDEV4_TIMBCMP4
 
HRTIM_OUTPUTSET_TIMEV_4


	)

743 
	#HRTIM_OUTPUTRESET_TIMDEV5_TIMCCMP4
 
HRTIM_OUTPUTSET_TIMEV_5


	)

744 
	#HRTIM_OUTPUTRESET_TIMDEV6_TIMECMP1
 
HRTIM_OUTPUTSET_TIMEV_6


	)

745 
	#HRTIM_OUTPUTRESET_TIMDEV7_TIMECMP4
 
HRTIM_OUTPUTSET_TIMEV_7


	)

746 
	#HRTIM_OUTPUTRESET_TIMDEV8_TIMFCMP1
 
HRTIM_OUTPUTSET_TIMEV_8


	)

747 
	#HRTIM_OUTPUTRESET_TIMDEV9_TIMFCMP3
 
HRTIM_OUTPUTSET_TIMEV_9


	)

748 
	#HRTIM_OUTPUTRESET_TIMEEV1_TIMACMP4
 
HRTIM_OUTPUTSET_TIMEV_1


	)

749 
	#HRTIM_OUTPUTRESET_TIMEEV2_TIMBCMP3
 
HRTIM_OUTPUTSET_TIMEV_2


	)

750 
	#HRTIM_OUTPUTRESET_TIMEEV3_TIMBCMP4
 
HRTIM_OUTPUTSET_TIMEV_3


	)

751 
	#HRTIM_OUTPUTRESET_TIMEEV4_TIMCCMP1
 
HRTIM_OUTPUTSET_TIMEV_4


	)

752 
	#HRTIM_OUTPUTRESET_TIMEEV5_TIMDCMP2
 
HRTIM_OUTPUTSET_TIMEV_5


	)

753 
	#HRTIM_OUTPUTRESET_TIMEEV6_TIMDCMP1
 
HRTIM_OUTPUTSET_TIMEV_6


	)

754 
	#HRTIM_OUTPUTRESET_TIMEEV7_TIMDCMP2
 
HRTIM_OUTPUTSET_TIMEV_7


	)

755 
	#HRTIM_OUTPUTRESET_TIMEEV8_TIMFCMP3
 
HRTIM_OUTPUTSET_TIMEV_8


	)

756 
	#HRTIM_OUTPUTRESET_TIMEEV9_TIMFCMP4
 
HRTIM_OUTPUTSET_TIMEV_9


	)

757 
	#HRTIM_OUTPUTRESET_TIMFEV1_TIMACMP3
 
HRTIM_OUTPUTSET_TIMEV_1


	)

758 
	#HRTIM_OUTPUTRESET_TIMFEV2_TIMBCMP1
 
HRTIM_OUTPUTSET_TIMEV_2


	)

759 
	#HRTIM_OUTPUTRESET_TIMFEV3_TIMBCMP4
 
HRTIM_OUTPUTSET_TIMEV_3


	)

760 
	#HRTIM_OUTPUTRESET_TIMFEV4_TIMCCMP1
 
HRTIM_OUTPUTSET_TIMEV_4


	)

761 
	#HRTIM_OUTPUTRESET_TIMFEV5_TIMCCMP4
 
HRTIM_OUTPUTSET_TIMEV_5


	)

762 
	#HRTIM_OUTPUTRESET_TIMFEV6_TIMDCMP3
 
HRTIM_OUTPUTSET_TIMEV_6


	)

763 
	#HRTIM_OUTPUTRESET_TIMFEV7_TIMDCMP4
 
HRTIM_OUTPUTSET_TIMEV_7


	)

764 
	#HRTIM_OUTPUTRESET_TIMFEV8_TIMECMP2
 
HRTIM_OUTPUTSET_TIMEV_8


	)

765 
	#HRTIM_OUTPUTRESET_TIMFEV9_TIMECMP3
 
HRTIM_OUTPUTSET_TIMEV_9


	)

768 #i‡
deföed
(
STM32F3
)

771 
	#HRTIM_EVENTSRC_1
 (0x00000000U)

	)

772 
	#HRTIM_EVENTSRC_2
 (
HRTIM_EECR1_EE1SRC_0
)

	)

773 
	#HRTIM_EVENTSRC_3
 (
HRTIM_EECR1_EE1SRC_1
)

	)

774 
	#HRTIM_EVENTSRC_4
 (
HRTIM_EECR1_EE1SRC_1
 | 
HRTIM_EECR1_EE1SRC_0
)

	)

779 
	#HRTIM_OUTPUTSET_TIMEV_1
 (
HRTIM_SET1R_TIMEVNT1
)

	)

780 
	#HRTIM_OUTPUTSET_TIMEV_2
 (
HRTIM_SET1R_TIMEVNT2
)

	)

781 
	#HRTIM_OUTPUTSET_TIMEV_3
 (
HRTIM_SET1R_TIMEVNT3
)

	)

782 
	#HRTIM_OUTPUTSET_TIMEV_4
 (
HRTIM_SET1R_TIMEVNT4
)

	)

783 
	#HRTIM_OUTPUTSET_TIMEV_5
 (
HRTIM_SET1R_TIMEVNT5
)

	)

784 
	#HRTIM_OUTPUTSET_TIMEV_6
 (
HRTIM_SET1R_TIMEVNT6
)

	)

785 
	#HRTIM_OUTPUTSET_TIMEV_7
 (
HRTIM_SET1R_TIMEVNT7
)

	)

786 
	#HRTIM_OUTPUTSET_TIMEV_8
 (
HRTIM_SET1R_TIMEVNT8
)

	)

787 
	#HRTIM_OUTPUTSET_TIMEV_9
 (
HRTIM_SET1R_TIMEVNT9
)

	)

789 
	#HRTIM_OUTPUTRESET_TIMEV_1
 (
HRTIM_RST1R_TIMEVNT1
)

	)

790 
	#HRTIM_OUTPUTRESET_TIMEV_2
 (
HRTIM_RST1R_TIMEVNT2
)

	)

791 
	#HRTIM_OUTPUTRESET_TIMEV_3
 (
HRTIM_RST1R_TIMEVNT3
)

	)

792 
	#HRTIM_OUTPUTRESET_TIMEV_4
 (
HRTIM_RST1R_TIMEVNT4
)

	)

793 
	#HRTIM_OUTPUTRESET_TIMEV_5
 (
HRTIM_RST1R_TIMEVNT5
)

	)

794 
	#HRTIM_OUTPUTRESET_TIMEV_6
 (
HRTIM_RST1R_TIMEVNT6
)

	)

795 
	#HRTIM_OUTPUTRESET_TIMEV_7
 (
HRTIM_RST1R_TIMEVNT7
)

	)

796 
	#HRTIM_OUTPUTRESET_TIMEV_8
 (
HRTIM_RST1R_TIMEVNT8
)

	)

797 
	#HRTIM_OUTPUTRESET_TIMEV_9
 (
HRTIM_RST1R_TIMEVNT9
)

	)

802 
	#HRTIM_TIMEVENTFILTER_NONE
 (0x00000000U)

	)

803 
	#HRTIM_TIMEVENTFILTER_BLANKINGCMP1
 (
HRTIM_EEFR1_EE1FLTR_0
)

	)

804 
	#HRTIM_TIMEVENTFILTER_BLANKINGCMP2
 (
HRTIM_EEFR1_EE1FLTR_1
)

	)

805 
	#HRTIM_TIMEVENTFILTER_BLANKINGCMP3
 (
HRTIM_EEFR1_EE1FLTR_1
 | 
HRTIM_EEFR1_EE1FLTR_0
)

	)

806 
	#HRTIM_TIMEVENTFILTER_BLANKINGCMP4
 (
HRTIM_EEFR1_EE1FLTR_2
)

	)

807 
	#HRTIM_TIMEVENTFILTER_BLANKINGFLTR1
 (
HRTIM_EEFR1_EE1FLTR_2
 | 
HRTIM_EEFR1_EE1FLTR_0
)

	)

808 
	#HRTIM_TIMEVENTFILTER_BLANKINGFLTR2
 (
HRTIM_EEFR1_EE1FLTR_2
 | 
HRTIM_EEFR1_EE1FLTR_1
)

	)

809 
	#HRTIM_TIMEVENTFILTER_BLANKINGFLTR3
 (
HRTIM_EEFR1_EE1FLTR_2
 | 
HRTIM_EEFR1_EE1FLTR_1
 | 
HRTIM_EEFR1_EE1FLTR_0
)

	)

810 
	#HRTIM_TIMEVENTFILTER_BLANKINGFLTR4
 (
HRTIM_EEFR1_EE1FLTR_3
)

	)

811 
	#HRTIM_TIMEVENTFILTER_BLANKINGFLTR5
 (
HRTIM_EEFR1_EE1FLTR_3
 | 
HRTIM_EEFR1_EE1FLTR_0
)

	)

812 
	#HRTIM_TIMEVENTFILTER_BLANKINGFLTR6
 (
HRTIM_EEFR1_EE1FLTR_3
 | 
HRTIM_EEFR1_EE1FLTR_1
)

	)

813 
	#HRTIM_TIMEVENTFILTER_BLANKINGFLTR7
 (
HRTIM_EEFR1_EE1FLTR_3
 | 
HRTIM_EEFR1_EE1FLTR_1
 | 
HRTIM_EEFR1_EE1FLTR_0
)

	)

814 
	#HRTIM_TIMEVENTFILTER_BLANKINGFLTR8
 (
HRTIM_EEFR1_EE1FLTR_3
 | 
HRTIM_EEFR1_EE1FLTR_2
)

	)

815 
	#HRTIM_TIMEVENTFILTER_WINDOWINGCMP2
 (
HRTIM_EEFR1_EE1FLTR_3
 | 
HRTIM_EEFR1_EE1FLTR_2
 | 
HRTIM_EEFR1_EE1FLTR_0
)

	)

816 
	#HRTIM_TIMEVENTFILTER_WINDOWINGCMP3
 (
HRTIM_EEFR1_EE1FLTR_3
 | 
HRTIM_EEFR1_EE1FLTR_2
 | 
HRTIM_EEFR1_EE1FLTR_1
)

	)

817 
	#HRTIM_TIMEVENTFILTER_WINDOWINGTIM
 (
HRTIM_EEFR1_EE1FLTR_3
 | 
HRTIM_EEFR1_EE1FLTR_2
 | 
HRTIM_EEFR1_EE1FLTR_1
 | 
HRTIM_EEFR1_EE1FLTR_0
)

	)

821 
	#HRTIM_CALIBRATIONRATE_7300
 0x00000000U

	)

822 
	#HRTIM_CALIBRATIONRATE_910
 (
HRTIM_DLLCR_CALRTE_0
)

	)

823 
	#HRTIM_CALIBRATIONRATE_114
 (
HRTIM_DLLCR_CALRTE_1
)

	)

824 
	#HRTIM_CALIBRATIONRATE_14
 (
HRTIM_DLLCR_CALRTE_1
 | 
HRTIM_DLLCR_CALRTE_0
)

	)

834 
	#I2C_DUALADDRESS_DISABLED
 
I2C_DUALADDRESS_DISABLE


	)

835 
	#I2C_DUALADDRESS_ENABLED
 
I2C_DUALADDRESS_ENABLE


	)

836 
	#I2C_GENERALCALL_DISABLED
 
I2C_GENERALCALL_DISABLE


	)

837 
	#I2C_GENERALCALL_ENABLED
 
I2C_GENERALCALL_ENABLE


	)

838 
	#I2C_NOSTRETCH_DISABLED
 
I2C_NOSTRETCH_DISABLE


	)

839 
	#I2C_NOSTRETCH_ENABLED
 
I2C_NOSTRETCH_ENABLE


	)

840 
	#I2C_ANALOGFILTER_ENABLED
 
I2C_ANALOGFILTER_ENABLE


	)

841 
	#I2C_ANALOGFILTER_DISABLED
 
I2C_ANALOGFILTER_DISABLE


	)

842 #i‡
deföed
(
STM32F0
Ë|| deföed(
STM32F1
Ë|| deföed(
STM32F3
Ë|| deföed(
STM32G0
Ë|| deföed(
STM32L4
Ë|| deföed(
STM32L1
Ë|| deföed(
STM32F7
)

843 
	#HAL_I2C_STATE_MEM_BUSY_TX
 
HAL_I2C_STATE_BUSY_TX


	)

844 
	#HAL_I2C_STATE_MEM_BUSY_RX
 
HAL_I2C_STATE_BUSY_RX


	)

845 
	#HAL_I2C_STATE_MASTER_BUSY_TX
 
HAL_I2C_STATE_BUSY_TX


	)

846 
	#HAL_I2C_STATE_MASTER_BUSY_RX
 
HAL_I2C_STATE_BUSY_RX


	)

847 
	#HAL_I2C_STATE_SLAVE_BUSY_TX
 
HAL_I2C_STATE_BUSY_TX


	)

848 
	#HAL_I2C_STATE_SLAVE_BUSY_RX
 
HAL_I2C_STATE_BUSY_RX


	)

857 
	#IRDA_ONE_BIT_SAMPLE_DISABLED
 
IRDA_ONE_BIT_SAMPLE_DISABLE


	)

858 
	#IRDA_ONE_BIT_SAMPLE_ENABLED
 
IRDA_ONE_BIT_SAMPLE_ENABLE


	)

867 
	#KR_KEY_RELOAD
 
IWDG_KEY_RELOAD


	)

868 
	#KR_KEY_ENABLE
 
IWDG_KEY_ENABLE


	)

869 
	#KR_KEY_EWA
 
IWDG_KEY_WRITE_ACCESS_ENABLE


	)

870 
	#KR_KEY_DWA
 
IWDG_KEY_WRITE_ACCESS_DISABLE


	)

879 
	#LPTIM_CLOCKSAMPLETIME_DIRECTTRANSISTION
 
LPTIM_CLOCKSAMPLETIME_DIRECTTRANSITION


	)

880 
	#LPTIM_CLOCKSAMPLETIME_2TRANSISTIONS
 
LPTIM_CLOCKSAMPLETIME_2TRANSITIONS


	)

881 
	#LPTIM_CLOCKSAMPLETIME_4TRANSISTIONS
 
LPTIM_CLOCKSAMPLETIME_4TRANSITIONS


	)

882 
	#LPTIM_CLOCKSAMPLETIME_8TRANSISTIONS
 
LPTIM_CLOCKSAMPLETIME_8TRANSITIONS


	)

884 
	#LPTIM_CLOCKPOLARITY_RISINGEDGE
 
LPTIM_CLOCKPOLARITY_RISING


	)

885 
	#LPTIM_CLOCKPOLARITY_FALLINGEDGE
 
LPTIM_CLOCKPOLARITY_FALLING


	)

886 
	#LPTIM_CLOCKPOLARITY_BOTHEDGES
 
LPTIM_CLOCKPOLARITY_RISING_FALLING


	)

888 
	#LPTIM_TRIGSAMPLETIME_DIRECTTRANSISTION
 
LPTIM_TRIGSAMPLETIME_DIRECTTRANSITION


	)

889 
	#LPTIM_TRIGSAMPLETIME_2TRANSISTIONS
 
LPTIM_TRIGSAMPLETIME_2TRANSITIONS


	)

890 
	#LPTIM_TRIGSAMPLETIME_4TRANSISTIONS
 
LPTIM_TRIGSAMPLETIME_4TRANSITIONS


	)

891 
	#LPTIM_TRIGSAMPLETIME_8TRANSISTIONS
 
LPTIM_TRIGSAMPLETIME_8TRANSITIONS


	)

895 
	#LPTIM_TRIGSAMPLETIME_2TRANSITION
 
LPTIM_TRIGSAMPLETIME_2TRANSITIONS


	)

896 
	#LPTIM_TRIGSAMPLETIME_4TRANSITION
 
LPTIM_TRIGSAMPLETIME_4TRANSITIONS


	)

897 
	#LPTIM_TRIGSAMPLETIME_8TRANSITION
 
LPTIM_TRIGSAMPLETIME_8TRANSITIONS


	)

906 
	#HAL_NAND_Ród_Page
 
HAL_NAND_Ród_Page_8b


	)

907 
	#HAL_NAND_Wrôe_Page
 
HAL_NAND_Wrôe_Page_8b


	)

908 
	#HAL_NAND_Ród_S∑ªAªa
 
HAL_NAND_Ród_S∑ªAªa_8b


	)

909 
	#HAL_NAND_Wrôe_S∑ªAªa
 
HAL_NAND_Wrôe_S∑ªAªa_8b


	)

911 
	#NAND_AddªssTy≥def
 
NAND_AddªssTy≥Def


	)

913 
	#__ARRAY_ADDRESS
 
ARRAY_ADDRESS


	)

914 
	#__ADDR_1°_CYCLE
 
ADDR_1ST_CYCLE


	)

915 
	#__ADDR_2nd_CYCLE
 
ADDR_2ND_CYCLE


	)

916 
	#__ADDR_3rd_CYCLE
 
ADDR_3RD_CYCLE


	)

917 
	#__ADDR_4th_CYCLE
 
ADDR_4TH_CYCLE


	)

925 
	#NOR_SètusTy≥def
 
HAL_NOR_SètusTy≥Def


	)

926 
	#NOR_SUCCESS
 
HAL_NOR_STATUS_SUCCESS


	)

927 
	#NOR_ONGOING
 
HAL_NOR_STATUS_ONGOING


	)

928 
	#NOR_ERROR
 
HAL_NOR_STATUS_ERROR


	)

929 
	#NOR_TIMEOUT
 
HAL_NOR_STATUS_TIMEOUT


	)

931 
	#__NOR_WRITE
 
NOR_WRITE


	)

932 
	#__NOR_ADDR_SHIFT
 
NOR_ADDR_SHIFT


	)

941 
	#OPAMP_NONINVERTINGINPUT_VP0
 
OPAMP_NONINVERTINGINPUT_IO0


	)

942 
	#OPAMP_NONINVERTINGINPUT_VP1
 
OPAMP_NONINVERTINGINPUT_IO1


	)

943 
	#OPAMP_NONINVERTINGINPUT_VP2
 
OPAMP_NONINVERTINGINPUT_IO2


	)

944 
	#OPAMP_NONINVERTINGINPUT_VP3
 
OPAMP_NONINVERTINGINPUT_IO3


	)

946 
	#OPAMP_SEC_NONINVERTINGINPUT_VP0
 
OPAMP_SEC_NONINVERTINGINPUT_IO0


	)

947 
	#OPAMP_SEC_NONINVERTINGINPUT_VP1
 
OPAMP_SEC_NONINVERTINGINPUT_IO1


	)

948 
	#OPAMP_SEC_NONINVERTINGINPUT_VP2
 
OPAMP_SEC_NONINVERTINGINPUT_IO2


	)

949 
	#OPAMP_SEC_NONINVERTINGINPUT_VP3
 
OPAMP_SEC_NONINVERTINGINPUT_IO3


	)

951 
	#OPAMP_INVERTINGINPUT_VM0
 
OPAMP_INVERTINGINPUT_IO0


	)

952 
	#OPAMP_INVERTINGINPUT_VM1
 
OPAMP_INVERTINGINPUT_IO1


	)

954 
	#IOPAMP_INVERTINGINPUT_VM0
 
OPAMP_INVERTINGINPUT_IO0


	)

955 
	#IOPAMP_INVERTINGINPUT_VM1
 
OPAMP_INVERTINGINPUT_IO1


	)

957 
	#OPAMP_SEC_INVERTINGINPUT_VM0
 
OPAMP_SEC_INVERTINGINPUT_IO0


	)

958 
	#OPAMP_SEC_INVERTINGINPUT_VM1
 
OPAMP_SEC_INVERTINGINPUT_IO1


	)

960 
	#OPAMP_INVERTINGINPUT_VINM
 
OPAMP_SEC_INVERTINGINPUT_IO1


	)

962 
	#OPAMP_PGACONNECT_NO
 
OPAMP_PGA_CONNECT_INVERTINGINPUT_NO


	)

963 
	#OPAMP_PGACONNECT_VM0
 
OPAMP_PGA_CONNECT_INVERTINGINPUT_IO0


	)

964 
	#OPAMP_PGACONNECT_VM1
 
OPAMP_PGA_CONNECT_INVERTINGINPUT_IO1


	)

966 #i‡
deföed
(
STM32L1
Ë|| deföed(
STM32L4
Ë|| deföed(
STM32L5
Ë|| deföed(
STM32H7
Ë|| deföed(
STM32G4
)

967 
	#HAL_OPAMP_MSP_INIT_CB_ID
 
HAL_OPAMP_MSPINIT_CB_ID


	)

968 
	#HAL_OPAMP_MSP_DEINIT_CB_ID
 
HAL_OPAMP_MSPDEINIT_CB_ID


	)

979 
	#I2S_STANDARD_PHILLIPS
 
I2S_STANDARD_PHILIPS


	)

981 #i‡
deföed
(
STM32H7
)

982 
	#I2S_IT_TXE
 
I2S_IT_TXP


	)

983 
	#I2S_IT_RXNE
 
I2S_IT_RXP


	)

985 
	#I2S_FLAG_TXE
 
I2S_FLAG_TXP


	)

986 
	#I2S_FLAG_RXNE
 
I2S_FLAG_RXP


	)

989 #i‡
deföed
(
STM32F7
)

990 
	#I2S_CLOCK_SYSCLK
 
I2S_CLOCK_PLL


	)

1001 
	#CF_DATA
 
ATA_DATA


	)

1002 
	#CF_SECTOR_COUNT
 
ATA_SECTOR_COUNT


	)

1003 
	#CF_SECTOR_NUMBER
 
ATA_SECTOR_NUMBER


	)

1004 
	#CF_CYLINDER_LOW
 
ATA_CYLINDER_LOW


	)

1005 
	#CF_CYLINDER_HIGH
 
ATA_CYLINDER_HIGH


	)

1006 
	#CF_CARD_HEAD
 
ATA_CARD_HEAD


	)

1007 
	#CF_STATUS_CMD
 
ATA_STATUS_CMD


	)

1008 
	#CF_STATUS_CMD_ALTERNATE
 
ATA_STATUS_CMD_ALTERNATE


	)

1009 
	#CF_COMMON_DATA_AREA
 
ATA_COMMON_DATA_AREA


	)

1012 
	#CF_READ_SECTOR_CMD
 
ATA_READ_SECTOR_CMD


	)

1013 
	#CF_WRITE_SECTOR_CMD
 
ATA_WRITE_SECTOR_CMD


	)

1014 
	#CF_ERASE_SECTOR_CMD
 
ATA_ERASE_SECTOR_CMD


	)

1015 
	#CF_IDENTIFY_CMD
 
ATA_IDENTIFY_CMD


	)

1017 
	#PCCARD_SètusTy≥def
 
HAL_PCCARD_SètusTy≥Def


	)

1018 
	#PCCARD_SUCCESS
 
HAL_PCCARD_STATUS_SUCCESS


	)

1019 
	#PCCARD_ONGOING
 
HAL_PCCARD_STATUS_ONGOING


	)

1020 
	#PCCARD_ERROR
 
HAL_PCCARD_STATUS_ERROR


	)

1021 
	#PCCARD_TIMEOUT
 
HAL_PCCARD_STATUS_TIMEOUT


	)

1030 
	#FORMAT_BIN
 
RTC_FORMAT_BIN


	)

1031 
	#FORMAT_BCD
 
RTC_FORMAT_BCD


	)

1033 
	#RTC_ALARMSUBSECONDMASK_N⁄e
 
RTC_ALARMSUBSECONDMASK_NONE


	)

1034 
	#RTC_TAMPERERASEBACKUP_DISABLED
 
RTC_TAMPER_ERASE_BACKUP_DISABLE


	)

1035 
	#RTC_TAMPERMASK_FLAG_DISABLED
 
RTC_TAMPERMASK_FLAG_DISABLE


	)

1036 
	#RTC_TAMPERMASK_FLAG_ENABLED
 
RTC_TAMPERMASK_FLAG_ENABLE


	)

1038 
	#RTC_MASKTAMPERFLAG_DISABLED
 
RTC_TAMPERMASK_FLAG_DISABLE


	)

1039 
	#RTC_MASKTAMPERFLAG_ENABLED
 
RTC_TAMPERMASK_FLAG_ENABLE


	)

1040 
	#RTC_TAMPERERASEBACKUP_ENABLED
 
RTC_TAMPER_ERASE_BACKUP_ENABLE


	)

1041 
	#RTC_TAMPER1_2_INTERRUPT
 
RTC_ALL_TAMPER_INTERRUPT


	)

1042 
	#RTC_TAMPER1_2_3_INTERRUPT
 
RTC_ALL_TAMPER_INTERRUPT


	)

1044 
	#RTC_TIMESTAMPPIN_PC13
 
RTC_TIMESTAMPPIN_DEFAULT


	)

1045 
	#RTC_TIMESTAMPPIN_PA0
 
RTC_TIMESTAMPPIN_POS1


	)

1046 
	#RTC_TIMESTAMPPIN_PI8
 
RTC_TIMESTAMPPIN_POS1


	)

1047 
	#RTC_TIMESTAMPPIN_PC1
 
RTC_TIMESTAMPPIN_POS2


	)

1049 
	#RTC_OUTPUT_REMAP_PC13
 
RTC_OUTPUT_REMAP_NONE


	)

1050 
	#RTC_OUTPUT_REMAP_PB14
 
RTC_OUTPUT_REMAP_POS1


	)

1051 
	#RTC_OUTPUT_REMAP_PB2
 
RTC_OUTPUT_REMAP_POS1


	)

1053 
	#RTC_TAMPERPIN_PC13
 
RTC_TAMPERPIN_DEFAULT


	)

1054 
	#RTC_TAMPERPIN_PA0
 
RTC_TAMPERPIN_POS1


	)

1055 
	#RTC_TAMPERPIN_PI8
 
RTC_TAMPERPIN_POS1


	)

1057 #i‡
deföed
(
STM32H7
)

1058 
	#RTC_TAMPCR_TAMPXE
 
RTC_TAMPER_X


	)

1059 
	#RTC_TAMPCR_TAMPXIE
 
RTC_TAMPER_X_INTERRUPT


	)

1061 
	#RTC_TAMPER1_INTERRUPT
 
RTC_IT_TAMP1


	)

1062 
	#RTC_TAMPER2_INTERRUPT
 
RTC_IT_TAMP2


	)

1063 
	#RTC_TAMPER3_INTERRUPT
 
RTC_IT_TAMP3


	)

1064 
	#RTC_ALL_TAMPER_INTERRUPT
 
RTC_IT_TAMPALL


	)

1075 
	#SMARTCARD_NACK_ENABLED
 
SMARTCARD_NACK_ENABLE


	)

1076 
	#SMARTCARD_NACK_DISABLED
 
SMARTCARD_NACK_DISABLE


	)

1078 
	#SMARTCARD_ONEBIT_SAMPLING_DISABLED
 
SMARTCARD_ONE_BIT_SAMPLE_DISABLE


	)

1079 
	#SMARTCARD_ONEBIT_SAMPLING_ENABLED
 
SMARTCARD_ONE_BIT_SAMPLE_ENABLE


	)

1080 
	#SMARTCARD_ONEBIT_SAMPLING_DISABLE
 
SMARTCARD_ONE_BIT_SAMPLE_DISABLE


	)

1081 
	#SMARTCARD_ONEBIT_SAMPLING_ENABLE
 
SMARTCARD_ONE_BIT_SAMPLE_ENABLE


	)

1083 
	#SMARTCARD_TIMEOUT_DISABLED
 
SMARTCARD_TIMEOUT_DISABLE


	)

1084 
	#SMARTCARD_TIMEOUT_ENABLED
 
SMARTCARD_TIMEOUT_ENABLE


	)

1086 
	#SMARTCARD_LASTBIT_DISABLED
 
SMARTCARD_LASTBIT_DISABLE


	)

1087 
	#SMARTCARD_LASTBIT_ENABLED
 
SMARTCARD_LASTBIT_ENABLE


	)

1096 
	#SMBUS_DUALADDRESS_DISABLED
 
SMBUS_DUALADDRESS_DISABLE


	)

1097 
	#SMBUS_DUALADDRESS_ENABLED
 
SMBUS_DUALADDRESS_ENABLE


	)

1098 
	#SMBUS_GENERALCALL_DISABLED
 
SMBUS_GENERALCALL_DISABLE


	)

1099 
	#SMBUS_GENERALCALL_ENABLED
 
SMBUS_GENERALCALL_ENABLE


	)

1100 
	#SMBUS_NOSTRETCH_DISABLED
 
SMBUS_NOSTRETCH_DISABLE


	)

1101 
	#SMBUS_NOSTRETCH_ENABLED
 
SMBUS_NOSTRETCH_ENABLE


	)

1102 
	#SMBUS_ANALOGFILTER_ENABLED
 
SMBUS_ANALOGFILTER_ENABLE


	)

1103 
	#SMBUS_ANALOGFILTER_DISABLED
 
SMBUS_ANALOGFILTER_DISABLE


	)

1104 
	#SMBUS_PEC_DISABLED
 
SMBUS_PEC_DISABLE


	)

1105 
	#SMBUS_PEC_ENABLED
 
SMBUS_PEC_ENABLE


	)

1106 
	#HAL_SMBUS_STATE_SLAVE_LISTEN
 
HAL_SMBUS_STATE_LISTEN


	)

1114 
	#SPI_TIMODE_DISABLED
 
SPI_TIMODE_DISABLE


	)

1115 
	#SPI_TIMODE_ENABLED
 
SPI_TIMODE_ENABLE


	)

1117 
	#SPI_CRCCALCULATION_DISABLED
 
SPI_CRCCALCULATION_DISABLE


	)

1118 
	#SPI_CRCCALCULATION_ENABLED
 
SPI_CRCCALCULATION_ENABLE


	)

1120 
	#SPI_NSS_PULSE_DISABLED
 
SPI_NSS_PULSE_DISABLE


	)

1121 
	#SPI_NSS_PULSE_ENABLED
 
SPI_NSS_PULSE_ENABLE


	)

1123 #i‡
deföed
(
STM32H7
)

1125 
	#SPI_FLAG_TXE
 
SPI_FLAG_TXP


	)

1126 
	#SPI_FLAG_RXNE
 
SPI_FLAG_RXP


	)

1128 
	#SPI_IT_TXE
 
SPI_IT_TXP


	)

1129 
	#SPI_IT_RXNE
 
SPI_IT_RXP


	)

1131 
	#SPI_FRLVL_EMPTY
 
SPI_RX_FIFO_0PACKET


	)

1132 
	#SPI_FRLVL_QUARTER_FULL
 
SPI_RX_FIFO_1PACKET


	)

1133 
	#SPI_FRLVL_HALF_FULL
 
SPI_RX_FIFO_2PACKET


	)

1134 
	#SPI_FRLVL_FULL
 
SPI_RX_FIFO_3PACKET


	)

1145 
	#CCER_CCxE_MASK
 
TIM_CCER_CCxE_MASK


	)

1146 
	#CCER_CCxNE_MASK
 
TIM_CCER_CCxNE_MASK


	)

1148 
	#TIM_DMABa£_CR1
 
TIM_DMABASE_CR1


	)

1149 
	#TIM_DMABa£_CR2
 
TIM_DMABASE_CR2


	)

1150 
	#TIM_DMABa£_SMCR
 
TIM_DMABASE_SMCR


	)

1151 
	#TIM_DMABa£_DIER
 
TIM_DMABASE_DIER


	)

1152 
	#TIM_DMABa£_SR
 
TIM_DMABASE_SR


	)

1153 
	#TIM_DMABa£_EGR
 
TIM_DMABASE_EGR


	)

1154 
	#TIM_DMABa£_CCMR1
 
TIM_DMABASE_CCMR1


	)

1155 
	#TIM_DMABa£_CCMR2
 
TIM_DMABASE_CCMR2


	)

1156 
	#TIM_DMABa£_CCER
 
TIM_DMABASE_CCER


	)

1157 
	#TIM_DMABa£_CNT
 
TIM_DMABASE_CNT


	)

1158 
	#TIM_DMABa£_PSC
 
TIM_DMABASE_PSC


	)

1159 
	#TIM_DMABa£_ARR
 
TIM_DMABASE_ARR


	)

1160 
	#TIM_DMABa£_RCR
 
TIM_DMABASE_RCR


	)

1161 
	#TIM_DMABa£_CCR1
 
TIM_DMABASE_CCR1


	)

1162 
	#TIM_DMABa£_CCR2
 
TIM_DMABASE_CCR2


	)

1163 
	#TIM_DMABa£_CCR3
 
TIM_DMABASE_CCR3


	)

1164 
	#TIM_DMABa£_CCR4
 
TIM_DMABASE_CCR4


	)

1165 
	#TIM_DMABa£_BDTR
 
TIM_DMABASE_BDTR


	)

1166 
	#TIM_DMABa£_DCR
 
TIM_DMABASE_DCR


	)

1167 
	#TIM_DMABa£_DMAR
 
TIM_DMABASE_DMAR


	)

1168 
	#TIM_DMABa£_OR1
 
TIM_DMABASE_OR1


	)

1169 
	#TIM_DMABa£_CCMR3
 
TIM_DMABASE_CCMR3


	)

1170 
	#TIM_DMABa£_CCR5
 
TIM_DMABASE_CCR5


	)

1171 
	#TIM_DMABa£_CCR6
 
TIM_DMABASE_CCR6


	)

1172 
	#TIM_DMABa£_OR2
 
TIM_DMABASE_OR2


	)

1173 
	#TIM_DMABa£_OR3
 
TIM_DMABASE_OR3


	)

1174 
	#TIM_DMABa£_OR
 
TIM_DMABASE_OR


	)

1176 
	#TIM_EvítSour˚_Upd©e
 
TIM_EVENTSOURCE_UPDATE


	)

1177 
	#TIM_EvítSour˚_CC1
 
TIM_EVENTSOURCE_CC1


	)

1178 
	#TIM_EvítSour˚_CC2
 
TIM_EVENTSOURCE_CC2


	)

1179 
	#TIM_EvítSour˚_CC3
 
TIM_EVENTSOURCE_CC3


	)

1180 
	#TIM_EvítSour˚_CC4
 
TIM_EVENTSOURCE_CC4


	)

1181 
	#TIM_EvítSour˚_COM
 
TIM_EVENTSOURCE_COM


	)

1182 
	#TIM_EvítSour˚_Triggî
 
TIM_EVENTSOURCE_TRIGGER


	)

1183 
	#TIM_EvítSour˚_Bªak
 
TIM_EVENTSOURCE_BREAK


	)

1184 
	#TIM_EvítSour˚_Bªak2
 
TIM_EVENTSOURCE_BREAK2


	)

1186 
	#TIM_DMABur°Lígth_1Tøns„r
 
TIM_DMABURSTLENGTH_1TRANSFER


	)

1187 
	#TIM_DMABur°Lígth_2Tøns„rs
 
TIM_DMABURSTLENGTH_2TRANSFERS


	)

1188 
	#TIM_DMABur°Lígth_3Tøns„rs
 
TIM_DMABURSTLENGTH_3TRANSFERS


	)

1189 
	#TIM_DMABur°Lígth_4Tøns„rs
 
TIM_DMABURSTLENGTH_4TRANSFERS


	)

1190 
	#TIM_DMABur°Lígth_5Tøns„rs
 
TIM_DMABURSTLENGTH_5TRANSFERS


	)

1191 
	#TIM_DMABur°Lígth_6Tøns„rs
 
TIM_DMABURSTLENGTH_6TRANSFERS


	)

1192 
	#TIM_DMABur°Lígth_7Tøns„rs
 
TIM_DMABURSTLENGTH_7TRANSFERS


	)

1193 
	#TIM_DMABur°Lígth_8Tøns„rs
 
TIM_DMABURSTLENGTH_8TRANSFERS


	)

1194 
	#TIM_DMABur°Lígth_9Tøns„rs
 
TIM_DMABURSTLENGTH_9TRANSFERS


	)

1195 
	#TIM_DMABur°Lígth_10Tøns„rs
 
TIM_DMABURSTLENGTH_10TRANSFERS


	)

1196 
	#TIM_DMABur°Lígth_11Tøns„rs
 
TIM_DMABURSTLENGTH_11TRANSFERS


	)

1197 
	#TIM_DMABur°Lígth_12Tøns„rs
 
TIM_DMABURSTLENGTH_12TRANSFERS


	)

1198 
	#TIM_DMABur°Lígth_13Tøns„rs
 
TIM_DMABURSTLENGTH_13TRANSFERS


	)

1199 
	#TIM_DMABur°Lígth_14Tøns„rs
 
TIM_DMABURSTLENGTH_14TRANSFERS


	)

1200 
	#TIM_DMABur°Lígth_15Tøns„rs
 
TIM_DMABURSTLENGTH_15TRANSFERS


	)

1201 
	#TIM_DMABur°Lígth_16Tøns„rs
 
TIM_DMABURSTLENGTH_16TRANSFERS


	)

1202 
	#TIM_DMABur°Lígth_17Tøns„rs
 
TIM_DMABURSTLENGTH_17TRANSFERS


	)

1203 
	#TIM_DMABur°Lígth_18Tøns„rs
 
TIM_DMABURSTLENGTH_18TRANSFERS


	)

1205 #i‡
deföed
(
STM32L0
)

1206 
	#TIM22_TI1_GPIO1
 
TIM22_TI1_GPIO


	)

1207 
	#TIM22_TI1_GPIO2
 
TIM22_TI1_GPIO


	)

1210 #i‡
deföed
(
STM32F3
)

1211 
	#IS_TIM_HALL_INTERFACE_INSTANCE
 
IS_TIM_HALL_SENSOR_INTERFACE_INSTANCE


	)

1214 #i‡
deföed
(
STM32H7
)

1215 
	#TIM_TIM1_ETR_COMP1_OUT
 
TIM_TIM1_ETR_COMP1


	)

1216 
	#TIM_TIM1_ETR_COMP2_OUT
 
TIM_TIM1_ETR_COMP2


	)

1217 
	#TIM_TIM8_ETR_COMP1_OUT
 
TIM_TIM8_ETR_COMP1


	)

1218 
	#TIM_TIM8_ETR_COMP2_OUT
 
TIM_TIM8_ETR_COMP2


	)

1219 
	#TIM_TIM2_ETR_COMP1_OUT
 
TIM_TIM2_ETR_COMP1


	)

1220 
	#TIM_TIM2_ETR_COMP2_OUT
 
TIM_TIM2_ETR_COMP2


	)

1221 
	#TIM_TIM3_ETR_COMP1_OUT
 
TIM_TIM3_ETR_COMP1


	)

1222 
	#TIM_TIM1_TI1_COMP1_OUT
 
TIM_TIM1_TI1_COMP1


	)

1223 
	#TIM_TIM8_TI1_COMP2_OUT
 
TIM_TIM8_TI1_COMP2


	)

1224 
	#TIM_TIM2_TI4_COMP1_OUT
 
TIM_TIM2_TI4_COMP1


	)

1225 
	#TIM_TIM2_TI4_COMP2_OUT
 
TIM_TIM2_TI4_COMP2


	)

1226 
	#TIM_TIM2_TI4_COMP1COMP2_OUT
 
TIM_TIM2_TI4_COMP1_COMP2


	)

1227 
	#TIM_TIM3_TI1_COMP1_OUT
 
TIM_TIM3_TI1_COMP1


	)

1228 
	#TIM_TIM3_TI1_COMP2_OUT
 
TIM_TIM3_TI1_COMP2


	)

1229 
	#TIM_TIM3_TI1_COMP1COMP2_OUT
 
TIM_TIM3_TI1_COMP1_COMP2


	)

1239 
	#TSC_SYNC_POL_FALL
 
TSC_SYNC_POLARITY_FALLING


	)

1240 
	#TSC_SYNC_POL_RISE_HIGH
 
TSC_SYNC_POLARITY_RISING


	)

1248 
	#UART_ONEBIT_SAMPLING_DISABLED
 
UART_ONE_BIT_SAMPLE_DISABLE


	)

1249 
	#UART_ONEBIT_SAMPLING_ENABLED
 
UART_ONE_BIT_SAMPLE_ENABLE


	)

1250 
	#UART_ONE_BIT_SAMPLE_DISABLED
 
UART_ONE_BIT_SAMPLE_DISABLE


	)

1251 
	#UART_ONE_BIT_SAMPLE_ENABLED
 
UART_ONE_BIT_SAMPLE_ENABLE


	)

1253 
	#__HAL_UART_ONEBIT_ENABLE
 
__HAL_UART_ONE_BIT_SAMPLE_ENABLE


	)

1254 
	#__HAL_UART_ONEBIT_DISABLE
 
__HAL_UART_ONE_BIT_SAMPLE_DISABLE


	)

1256 
	#__DIV_SAMPLING16
 
UART_DIV_SAMPLING16


	)

1257 
	#__DIVMANT_SAMPLING16
 
UART_DIVMANT_SAMPLING16


	)

1258 
	#__DIVFRAQ_SAMPLING16
 
UART_DIVFRAQ_SAMPLING16


	)

1259 
	#__UART_BRR_SAMPLING16
 
UART_BRR_SAMPLING16


	)

1261 
	#__DIV_SAMPLING8
 
UART_DIV_SAMPLING8


	)

1262 
	#__DIVMANT_SAMPLING8
 
UART_DIVMANT_SAMPLING8


	)

1263 
	#__DIVFRAQ_SAMPLING8
 
UART_DIVFRAQ_SAMPLING8


	)

1264 
	#__UART_BRR_SAMPLING8
 
UART_BRR_SAMPLING8


	)

1266 
	#__DIV_LPUART
 
UART_DIV_LPUART


	)

1268 
	#UART_WAKEUPMETHODE_IDLELINE
 
UART_WAKEUPMETHOD_IDLELINE


	)

1269 
	#UART_WAKEUPMETHODE_ADDRESSMARK
 
UART_WAKEUPMETHOD_ADDRESSMARK


	)

1280 
	#USART_CLOCK_DISABLED
 
USART_CLOCK_DISABLE


	)

1281 
	#USART_CLOCK_ENABLED
 
USART_CLOCK_ENABLE


	)

1283 
	#USARTNACK_ENABLED
 
USART_NACK_ENABLE


	)

1284 
	#USARTNACK_DISABLED
 
USART_NACK_DISABLE


	)

1292 
	#CFR_BASE
 
WWDG_CFR_BASE


	)

1301 
	#CAN_FûãrFIFO0
 
CAN_FILTER_FIFO0


	)

1302 
	#CAN_FûãrFIFO1
 
CAN_FILTER_FIFO1


	)

1303 
	#CAN_IT_RQCP0
 
CAN_IT_TME


	)

1304 
	#CAN_IT_RQCP1
 
CAN_IT_TME


	)

1305 
	#CAN_IT_RQCP2
 
CAN_IT_TME


	)

1306 
	#INAK_TIMEOUT
 
CAN_TIMEOUT_VALUE


	)

1307 
	#SLAK_TIMEOUT
 
CAN_TIMEOUT_VALUE


	)

1308 
	#CAN_TXSTATUS_FAILED
 ((
uöt8_t
)0x00U)

	)

1309 
	#CAN_TXSTATUS_OK
 ((
uöt8_t
)0x01U)

	)

1310 
	#CAN_TXSTATUS_PENDING
 ((
uöt8_t
)0x02U)

	)

1320 
	#VLAN_TAG
 
ETH_VLAN_TAG


	)

1321 
	#MIN_ETH_PAYLOAD
 
ETH_MIN_ETH_PAYLOAD


	)

1322 
	#MAX_ETH_PAYLOAD
 
ETH_MAX_ETH_PAYLOAD


	)

1323 
	#JUMBO_FRAME_PAYLOAD
 
ETH_JUMBO_FRAME_PAYLOAD


	)

1324 
	#MACMIIAR_CR_MASK
 
ETH_MACMIIAR_CR_MASK


	)

1325 
	#MACCR_CLEAR_MASK
 
ETH_MACCR_CLEAR_MASK


	)

1326 
	#MACFCR_CLEAR_MASK
 
ETH_MACFCR_CLEAR_MASK


	)

1327 
	#DMAOMR_CLEAR_MASK
 
ETH_DMAOMR_CLEAR_MASK


	)

1329 
	#ETH_MMCCR
 0x00000100U

	)

1330 
	#ETH_MMCRIR
 0x00000104U

	)

1331 
	#ETH_MMCTIR
 0x00000108U

	)

1332 
	#ETH_MMCRIMR
 0x0000010CU

	)

1333 
	#ETH_MMCTIMR
 0x00000110U

	)

1334 
	#ETH_MMCTGFSCCR
 0x0000014CU

	)

1335 
	#ETH_MMCTGFMSCCR
 0x00000150U

	)

1336 
	#ETH_MMCTGFCR
 0x00000168U

	)

1337 
	#ETH_MMCRFCECR
 0x00000194U

	)

1338 
	#ETH_MMCRFAECR
 0x00000198U

	)

1339 
	#ETH_MMCRGUFCR
 0x000001C4U

	)

1341 
	#ETH_MAC_TXFIFO_FULL
 0x02000000U

	)

1342 
	#ETH_MAC_TXFIFONOT_EMPTY
 0x01000000U

	)

1343 
	#ETH_MAC_TXFIFO_WRITE_ACTIVE
 0x00400000U

	)

1344 
	#ETH_MAC_TXFIFO_IDLE
 0x00000000U

	)

1345 
	#ETH_MAC_TXFIFO_READ
 0x00100000U

	)

1346 
	#ETH_MAC_TXFIFO_WAITING
 0x00200000U

	)

1347 
	#ETH_MAC_TXFIFO_WRITING
 0x00300000U

	)

1348 
	#ETH_MAC_TRANSMISSION_PAUSE
 0x00080000U

	)

1349 
	#ETH_MAC_TRANSMITFRAMECONTROLLER_IDLE
 0x00000000U

	)

1350 
	#ETH_MAC_TRANSMITFRAMECONTROLLER_WAITING
 0x00020000U

	)

1351 
	#ETH_MAC_TRANSMITFRAMECONTROLLER_GENRATING_PCF
 0x00040000U

	)

1352 
	#ETH_MAC_TRANSMITFRAMECONTROLLER_TRANSFERRING
 0x00060000U

	)

1353 
	#ETH_MAC_MII_TRANSMIT_ACTIVE
 0x00010000U

	)

1354 
	#ETH_MAC_RXFIFO_EMPTY
 0x00000000U

	)

1355 
	#ETH_MAC_RXFIFO_BELOW_THRESHOLD
 0x00000100U

	)

1356 
	#ETH_MAC_RXFIFO_ABOVE_THRESHOLD
 0x00000200U

	)

1357 
	#ETH_MAC_RXFIFO_FULL
 0x00000300U

	)

1358 #i‡
deföed
(
STM32F1
)

1360 
	#ETH_MAC_READCONTROLLER_IDLE
 0x00000000U

	)

1361 
	#ETH_MAC_READCONTROLLER_READING_DATA
 0x00000020U

	)

1362 
	#ETH_MAC_READCONTROLLER_READING_STATUS
 0x00000040U

	)

1364 
	#ETH_MAC_READCONTROLLER_FLUSHING
 0x00000060U

	)

1365 
	#ETH_MAC_RXFIFO_WRITE_ACTIVE
 0x00000010U

	)

1366 
	#ETH_MAC_SMALL_FIFO_NOTACTIVE
 0x00000000U

	)

1367 
	#ETH_MAC_SMALL_FIFO_READ_ACTIVE
 0x00000002U

	)

1368 
	#ETH_MAC_SMALL_FIFO_WRITE_ACTIVE
 0x00000004U

	)

1369 
	#ETH_MAC_SMALL_FIFO_RW_ACTIVE
 0x00000006U

	)

1370 
	#ETH_MAC_MII_RECEIVE_PROTOCOL_ACTIVE
 0x00000001U

	)

1379 
	#HAL_DCMI_ERROR_OVF
 
HAL_DCMI_ERROR_OVR


	)

1380 
	#DCMI_IT_OVF
 
DCMI_IT_OVR


	)

1381 
	#DCMI_FLAG_OVFRI
 
DCMI_FLAG_OVRRI


	)

1382 
	#DCMI_FLAG_OVFMI
 
DCMI_FLAG_OVRMI


	)

1384 
	#HAL_DCMI_C⁄figCROP
 
HAL_DCMI_C⁄figCr›


	)

1385 
	#HAL_DCMI_E«bÀCROP
 
HAL_DCMI_E«bÀCr›


	)

1386 
	#HAL_DCMI_DißbÀCROP
 
HAL_DCMI_DißbÀCr›


	)

1392 #i‡
deföed
(
STM32L4
Ë|| deföed(
STM32F7
Ë|| deföed(
STM32F427xx
Ë|| deföed(
STM32F437xx
) \

1393 || 
deföed
(
STM32F429xx
Ë|| deföed(
STM32F439xx
Ë|| deföed(
STM32F469xx
Ë|| deföed(
STM32F479xx
) \

1394 || 
deföed
(
STM32H7
)

1398 
	#DMA2D_ARGB8888
 
DMA2D_OUTPUT_ARGB8888


	)

1399 
	#DMA2D_RGB888
 
DMA2D_OUTPUT_RGB888


	)

1400 
	#DMA2D_RGB565
 
DMA2D_OUTPUT_RGB565


	)

1401 
	#DMA2D_ARGB1555
 
DMA2D_OUTPUT_ARGB1555


	)

1402 
	#DMA2D_ARGB4444
 
DMA2D_OUTPUT_ARGB4444


	)

1404 
	#CM_ARGB8888
 
DMA2D_INPUT_ARGB8888


	)

1405 
	#CM_RGB888
 
DMA2D_INPUT_RGB888


	)

1406 
	#CM_RGB565
 
DMA2D_INPUT_RGB565


	)

1407 
	#CM_ARGB1555
 
DMA2D_INPUT_ARGB1555


	)

1408 
	#CM_ARGB4444
 
DMA2D_INPUT_ARGB4444


	)

1409 
	#CM_L8
 
DMA2D_INPUT_L8


	)

1410 
	#CM_AL44
 
DMA2D_INPUT_AL44


	)

1411 
	#CM_AL88
 
DMA2D_INPUT_AL88


	)

1412 
	#CM_L4
 
DMA2D_INPUT_L4


	)

1413 
	#CM_A8
 
DMA2D_INPUT_A8


	)

1414 
	#CM_A4
 
DMA2D_INPUT_A4


	)

1433 
	#HAL_CRYP_Compuèti⁄C∂tCÆlback
 
HAL_CRYPEx_Compuèti⁄C∂tCÆlback


	)

1441 
	#HAL_HASH_STATETy≥Def
 
HAL_HASH_SèãTy≥Def


	)

1442 
	#HAL_HASHPha£Ty≥Def
 
HAL_HASH_Pha£Ty≥Def


	)

1443 
	#HAL_HMAC_MD5_Föish
 
HAL_HASH_MD5_Föish


	)

1444 
	#HAL_HMAC_SHA1_Föish
 
HAL_HASH_SHA1_Föish


	)

1445 
	#HAL_HMAC_SHA224_Föish
 
HAL_HASH_SHA224_Föish


	)

1446 
	#HAL_HMAC_SHA256_Föish
 
HAL_HASH_SHA256_Föish


	)

1450 
	#HASH_AlgoSñe˘i⁄_SHA1
 
HASH_ALGOSELECTION_SHA1


	)

1451 
	#HASH_AlgoSñe˘i⁄_SHA224
 
HASH_ALGOSELECTION_SHA224


	)

1452 
	#HASH_AlgoSñe˘i⁄_SHA256
 
HASH_ALGOSELECTION_SHA256


	)

1453 
	#HASH_AlgoSñe˘i⁄_MD5
 
HASH_ALGOSELECTION_MD5


	)

1455 
	#HASH_AlgoMode_HASH
 
HASH_ALGOMODE_HASH


	)

1456 
	#HASH_AlgoMode_HMAC
 
HASH_ALGOMODE_HMAC


	)

1458 
	#HASH_HMACKeyTy≥_Sh‹tKey
 
HASH_HMAC_KEYTYPE_SHORTKEY


	)

1459 
	#HASH_HMACKeyTy≥_L⁄gKey
 
HASH_HMAC_KEYTYPE_LONGKEY


	)

1461 #i‡
deföed
(
STM32L4
Ë|| deföed(
STM32L5
Ë|| deföed(
STM32F2
Ë|| deföed(
STM32F4
Ë|| deföed(
STM32F7
Ë|| deföed(
STM32H7
)

1463 
	#HAL_HASH_MD5_Accumuœã
 
HAL_HASH_MD5_Accm…


	)

1464 
	#HAL_HASH_MD5_Accumuœã_End
 
HAL_HASH_MD5_Accm…_End


	)

1465 
	#HAL_HASH_MD5_Accumuœã_IT
 
HAL_HASH_MD5_Accm…_IT


	)

1466 
	#HAL_HASH_MD5_Accumuœã_End_IT
 
HAL_HASH_MD5_Accm…_End_IT


	)

1468 
	#HAL_HASH_SHA1_Accumuœã
 
HAL_HASH_SHA1_Accm…


	)

1469 
	#HAL_HASH_SHA1_Accumuœã_End
 
HAL_HASH_SHA1_Accm…_End


	)

1470 
	#HAL_HASH_SHA1_Accumuœã_IT
 
HAL_HASH_SHA1_Accm…_IT


	)

1471 
	#HAL_HASH_SHA1_Accumuœã_End_IT
 
HAL_HASH_SHA1_Accm…_End_IT


	)

1473 
	#HAL_HASHEx_SHA224_Accumuœã
 
HAL_HASHEx_SHA224_Accm…


	)

1474 
	#HAL_HASHEx_SHA224_Accumuœã_End
 
HAL_HASHEx_SHA224_Accm…_End


	)

1475 
	#HAL_HASHEx_SHA224_Accumuœã_IT
 
HAL_HASHEx_SHA224_Accm…_IT


	)

1476 
	#HAL_HASHEx_SHA224_Accumuœã_End_IT
 
HAL_HASHEx_SHA224_Accm…_End_IT


	)

1478 
	#HAL_HASHEx_SHA256_Accumuœã
 
HAL_HASHEx_SHA256_Accm…


	)

1479 
	#HAL_HASHEx_SHA256_Accumuœã_End
 
HAL_HASHEx_SHA256_Accm…_End


	)

1480 
	#HAL_HASHEx_SHA256_Accumuœã_IT
 
HAL_HASHEx_SHA256_Accm…_IT


	)

1481 
	#HAL_HASHEx_SHA256_Accumuœã_End_IT
 
HAL_HASHEx_SHA256_Accm…_End_IT


	)

1491 
	#HAL_E«bÀDBGSÀïMode
 
HAL_DBGMCU_E«bÀDBGSÀïMode


	)

1492 
	#HAL_DißbÀDBGSÀïMode
 
HAL_DBGMCU_DißbÀDBGSÀïMode


	)

1493 
	#HAL_E«bÀDBGSt›Mode
 
HAL_DBGMCU_E«bÀDBGSt›Mode


	)

1494 
	#HAL_DißbÀDBGSt›Mode
 
HAL_DBGMCU_DißbÀDBGSt›Mode


	)

1495 
	#HAL_E«bÀDBGSèndbyMode
 
HAL_DBGMCU_E«bÀDBGSèndbyMode


	)

1496 
	#HAL_DißbÀDBGSèndbyMode
 
HAL_DBGMCU_DißbÀDBGSèndbyMode


	)

1497 
	#HAL_DBG_LowPowîC⁄fig
(
Pîùh
, 
cmd
Ë(((cmd)==
ENABLE
)? 
	`HAL_DBGMCU_DBG_E«bÀLowPowîC⁄fig
(PîùhË: 
	`HAL_DBGMCU_DBG_DißbÀLowPowîC⁄fig
(Pîùh))

	)

1498 
	#HAL_VREFINT_OuçutSñe˘
 
HAL_SYSCFG_VREFINT_OuçutSñe˘


	)

1499 
	#HAL_Lock_Cmd
(
cmd
Ë(((cmd)==
ENABLE
Ë? 
	`HAL_SYSCFG_E«bÀ_Lock_VREFINT
(Ë: 
	`HAL_SYSCFG_DißbÀ_Lock_VREFINT
())

	)

1500 #i‡
deföed
(
STM32L0
)

1502 
	#HAL_VREFINT_Cmd
(
cmd
Ë(((cmd)==
ENABLE
)? 
	`HAL_SYSCFG_E«bÀVREFINT
(Ë: 
	`HAL_SYSCFG_DißbÀVREFINT
())

	)

1504 
	#HAL_ADC_E«bÀBuf„r_Cmd
(
cmd
Ë(((cmd)==
ENABLE
Ë? 
	`HAL_ADCEx_E«bÀVREFINT
(Ë: 
	`HAL_ADCEx_DißbÀVREFINT
())

	)

1505 
	#HAL_ADC_E«bÀBuf„rSís‹_Cmd
(
cmd
Ë(((cmd)==
ENABLE
Ë? 
	`HAL_ADCEx_E«bÀVREFINTTempSís‹
(Ë: 
	`HAL_ADCEx_DißbÀVREFINTTempSís‹
())

	)

1506 #i‡
deföed
(
STM32H7A3xx
Ë|| deföed(
STM32H7B3xx
Ë|| deföed(
STM32H7B0xx
Ë|| deföed(
STM32H7A3xxQ
Ë|| deföed(
STM32H7B3xxQ
Ë|| deföed(
STM32H7B0xxQ
)

1507 
	#HAL_E«bÀSRDomaöDBGSt›Mode
 
HAL_E«bÀDomaö3DBGSt›Mode


	)

1508 
	#HAL_DißbÀSRDomaöDBGSt›Mode
 
HAL_DißbÀDomaö3DBGSt›Mode


	)

1509 
	#HAL_E«bÀSRDomaöDBGSèndbyMode
 
HAL_E«bÀDomaö3DBGSèndbyMode


	)

1510 
	#HAL_DißbÀSRDomaöDBGSèndbyMode
 
HAL_DißbÀDomaö3DBGSèndbyMode


	)

1520 
	#FLASH_HÆfPageProgøm
 
HAL_FLASHEx_HÆfPageProgøm


	)

1521 
	#FLASH_E«bÀRunPowîDown
 
HAL_FLASHEx_E«bÀRunPowîDown


	)

1522 
	#FLASH_DißbÀRunPowîDown
 
HAL_FLASHEx_DißbÀRunPowîDown


	)

1523 
	#HAL_DATA_EEPROMEx_U∆ock
 
HAL_FLASHEx_DATAEEPROM_U∆ock


	)

1524 
	#HAL_DATA_EEPROMEx_Lock
 
HAL_FLASHEx_DATAEEPROM_Lock


	)

1525 
	#HAL_DATA_EEPROMEx_Eø£
 
HAL_FLASHEx_DATAEEPROM_Eø£


	)

1526 
	#HAL_DATA_EEPROMEx_Progøm
 
HAL_FLASHEx_DATAEEPROM_Progøm


	)

1535 
	#HAL_I2CEx_A«logFûãr_C⁄fig
 
HAL_I2CEx_C⁄figA«logFûãr


	)

1536 
	#HAL_I2CEx_DigôÆFûãr_C⁄fig
 
HAL_I2CEx_C⁄figDigôÆFûãr


	)

1537 
	#HAL_FMPI2CEx_A«logFûãr_C⁄fig
 
HAL_FMPI2CEx_C⁄figA«logFûãr


	)

1538 
	#HAL_FMPI2CEx_DigôÆFûãr_C⁄fig
 
HAL_FMPI2CEx_C⁄figDigôÆFûãr


	)

1540 
	#HAL_I2CFa°ModePlusC⁄fig
(
SYSCFG_I2CFa°ModePlus
, 
cmd
Ë(((cmd)==
ENABLE
)? 
	`HAL_I2CEx_E«bÀFa°ModePlus
(SYSCFG_I2CFa°ModePlus): 
	`HAL_I2CEx_DißbÀFa°ModePlus
(SYSCFG_I2CFa°ModePlus))

	)

1542 #i‡
deföed
(
STM32H7
Ë|| deföed(
STM32WB
Ë|| deföed(
STM32G0
Ë|| deföed(
STM32F0
Ë|| deföed(
STM32F1
Ë|| deföed(
STM32F2
Ë|| deföed(
STM32F3
Ë|| deföed(
STM32F4
Ë|| deföed(
STM32F7
Ë|| deföed(
STM32L0
Ë|| deföed(
STM32L4
Ë|| deföed(
STM32L5
Ë|| deföed(
STM32G4
Ë|| deföed(
STM32L1
)

1543 
	#HAL_I2C_Ma°î_Sequítül_Tønsmô_IT
 
HAL_I2C_Ma°î_Seq_Tønsmô_IT


	)

1544 
	#HAL_I2C_Ma°î_Sequítül_Re˚ive_IT
 
HAL_I2C_Ma°î_Seq_Re˚ive_IT


	)

1545 
	#HAL_I2C_Sœve_Sequítül_Tønsmô_IT
 
HAL_I2C_Sœve_Seq_Tønsmô_IT


	)

1546 
	#HAL_I2C_Sœve_Sequítül_Re˚ive_IT
 
HAL_I2C_Sœve_Seq_Re˚ive_IT


	)

1548 #i‡
deföed
(
STM32H7
Ë|| deföed(
STM32WB
Ë|| deföed(
STM32G0
Ë|| deföed(
STM32F4
Ë|| deföed(
STM32F7
Ë|| deföed(
STM32L0
Ë|| deföed(
STM32L4
Ë|| deföed(
STM32L5
Ë|| deföed(
STM32G4
)|| deföed(
STM32L1
)

1549 
	#HAL_I2C_Ma°î_Sequítül_Tønsmô_DMA
 
HAL_I2C_Ma°î_Seq_Tønsmô_DMA


	)

1550 
	#HAL_I2C_Ma°î_Sequítül_Re˚ive_DMA
 
HAL_I2C_Ma°î_Seq_Re˚ive_DMA


	)

1551 
	#HAL_I2C_Sœve_Sequítül_Tønsmô_DMA
 
HAL_I2C_Sœve_Seq_Tønsmô_DMA


	)

1552 
	#HAL_I2C_Sœve_Sequítül_Re˚ive_DMA
 
HAL_I2C_Sœve_Seq_Re˚ive_DMA


	)

1555 #i‡
deföed
(
STM32F4
)

1556 
	#HAL_FMPI2C_Ma°î_Sequítül_Tønsmô_IT
 
HAL_FMPI2C_Ma°î_Seq_Tønsmô_IT


	)

1557 
	#HAL_FMPI2C_Ma°î_Sequítül_Re˚ive_IT
 
HAL_FMPI2C_Ma°î_Seq_Re˚ive_IT


	)

1558 
	#HAL_FMPI2C_Sœve_Sequítül_Tønsmô_IT
 
HAL_FMPI2C_Sœve_Seq_Tønsmô_IT


	)

1559 
	#HAL_FMPI2C_Sœve_Sequítül_Re˚ive_IT
 
HAL_FMPI2C_Sœve_Seq_Re˚ive_IT


	)

1560 
	#HAL_FMPI2C_Ma°î_Sequítül_Tønsmô_DMA
 
HAL_FMPI2C_Ma°î_Seq_Tønsmô_DMA


	)

1561 
	#HAL_FMPI2C_Ma°î_Sequítül_Re˚ive_DMA
 
HAL_FMPI2C_Ma°î_Seq_Re˚ive_DMA


	)

1562 
	#HAL_FMPI2C_Sœve_Sequítül_Tønsmô_DMA
 
HAL_FMPI2C_Sœve_Seq_Tønsmô_DMA


	)

1563 
	#HAL_FMPI2C_Sœve_Sequítül_Re˚ive_DMA
 
HAL_FMPI2C_Sœve_Seq_Re˚ive_DMA


	)

1573 #i‡
deföed
(
STM32G0
)

1574 
	#HAL_PWR_C⁄figPVD
 
HAL_PWREx_C⁄figPVD


	)

1575 
	#HAL_PWR_E«bÀPVD
 
HAL_PWREx_E«bÀPVD


	)

1576 
	#HAL_PWR_DißbÀPVD
 
HAL_PWREx_DißbÀPVD


	)

1577 
	#HAL_PWR_PVD_IRQH™dÀr
 
HAL_PWREx_PVD_IRQH™dÀr


	)

1579 
	#HAL_PWR_PVDC⁄fig
 
HAL_PWR_C⁄figPVD


	)

1580 
	#HAL_PWR_DißbÀBkUpReg
 
HAL_PWREx_DißbÀBkUpReg


	)

1581 
	#HAL_PWR_DißbÀFœshPowîDown
 
HAL_PWREx_DißbÀFœshPowîDown


	)

1582 
	#HAL_PWR_DißbÀVddio2M⁄ô‹
 
HAL_PWREx_DißbÀVddio2M⁄ô‹


	)

1583 
	#HAL_PWR_E«bÀBkUpReg
 
HAL_PWREx_E«bÀBkUpReg


	)

1584 
	#HAL_PWR_E«bÀFœshPowîDown
 
HAL_PWREx_E«bÀFœshPowîDown


	)

1585 
	#HAL_PWR_E«bÀVddio2M⁄ô‹
 
HAL_PWREx_E«bÀVddio2M⁄ô‹


	)

1586 
	#HAL_PWR_PVD_PVM_IRQH™dÀr
 
HAL_PWREx_PVD_PVM_IRQH™dÀr


	)

1587 
	#HAL_PWR_PVDLevñC⁄fig
 
HAL_PWR_C⁄figPVD


	)

1588 
	#HAL_PWR_Vddio2M⁄ô‹_IRQH™dÀr
 
HAL_PWREx_Vddio2M⁄ô‹_IRQH™dÀr


	)

1589 
	#HAL_PWR_Vddio2M⁄ô‹CÆlback
 
HAL_PWREx_Vddio2M⁄ô‹CÆlback


	)

1590 
	#HAL_PWREx_A˘iv©eOvîDrive
 
HAL_PWREx_E«bÀOvîDrive


	)

1591 
	#HAL_PWREx_Dó˘iv©eOvîDrive
 
HAL_PWREx_DißbÀOvîDrive


	)

1592 
	#HAL_PWREx_DißbÀSDADCA«log
 
HAL_PWREx_DißbÀSDADC


	)

1593 
	#HAL_PWREx_E«bÀSDADCA«log
 
HAL_PWREx_E«bÀSDADC


	)

1594 
	#HAL_PWREx_PVMC⁄fig
 
HAL_PWREx_C⁄figPVM


	)

1596 
	#PWR_MODE_NORMAL
 
PWR_PVD_MODE_NORMAL


	)

1597 
	#PWR_MODE_IT_RISING
 
PWR_PVD_MODE_IT_RISING


	)

1598 
	#PWR_MODE_IT_FALLING
 
PWR_PVD_MODE_IT_FALLING


	)

1599 
	#PWR_MODE_IT_RISING_FALLING
 
PWR_PVD_MODE_IT_RISING_FALLING


	)

1600 
	#PWR_MODE_EVENT_RISING
 
PWR_PVD_MODE_EVENT_RISING


	)

1601 
	#PWR_MODE_EVENT_FALLING
 
PWR_PVD_MODE_EVENT_FALLING


	)

1602 
	#PWR_MODE_EVENT_RISING_FALLING
 
PWR_PVD_MODE_EVENT_RISING_FALLING


	)

1604 
	#CR_OFFSET_BB
 
PWR_CR_OFFSET_BB


	)

1605 
	#CSR_OFFSET_BB
 
PWR_CSR_OFFSET_BB


	)

1606 
	#PMODE_BIT_NUMBER
 
VOS_BIT_NUMBER


	)

1607 
	#CR_PMODE_BB
 
CR_VOS_BB


	)

1609 
	#DBP_BôNumbî
 
DBP_BIT_NUMBER


	)

1610 
	#PVDE_BôNumbî
 
PVDE_BIT_NUMBER


	)

1611 
	#PMODE_BôNumbî
 
PMODE_BIT_NUMBER


	)

1612 
	#EWUP_BôNumbî
 
EWUP_BIT_NUMBER


	)

1613 
	#FPDS_BôNumbî
 
FPDS_BIT_NUMBER


	)

1614 
	#ODEN_BôNumbî
 
ODEN_BIT_NUMBER


	)

1615 
	#ODSWEN_BôNumbî
 
ODSWEN_BIT_NUMBER


	)

1616 
	#MRLVDS_BôNumbî
 
MRLVDS_BIT_NUMBER


	)

1617 
	#LPLVDS_BôNumbî
 
LPLVDS_BIT_NUMBER


	)

1618 
	#BRE_BôNumbî
 
BRE_BIT_NUMBER


	)

1620 
	#PWR_MODE_EVT
 
PWR_PVD_MODE_NORMAL


	)

1629 
	#HAL_SMBUS_Sœve_Li°í_IT
 
HAL_SMBUS_E«bÀLi°í_IT


	)

1630 
	#HAL_SMBUS_SœveAddrCÆlback
 
HAL_SMBUS_AddrCÆlback


	)

1631 
	#HAL_SMBUS_SœveLi°íC∂tCÆlback
 
HAL_SMBUS_Li°íC∂tCÆlback


	)

1639 
	#HAL_SPI_FlushRxFifo
 
HAL_SPIEx_FlushRxFifo


	)

1647 
	#HAL_TIM_DMADñayPul£C∂t
 
TIM_DMADñayPul£C∂t


	)

1648 
	#HAL_TIM_DMAEº‹
 
TIM_DMAEº‹


	)

1649 
	#HAL_TIM_DMAC≠tuªC∂t
 
TIM_DMAC≠tuªC∂t


	)

1650 
	#HAL_TIMEx_DMACommuèti⁄C∂t
 
TIMEx_DMACommuèti⁄C∂t


	)

1651 #i‡
deföed
(
STM32H7
Ë|| deföed(
STM32G0
Ë|| deföed(
STM32F0
Ë|| deföed(
STM32F1
Ë|| deföed(
STM32F2
Ë|| deföed(
STM32F3
Ë|| deföed(
STM32F4
Ë|| deföed(
STM32F7
Ë|| deföed(
STM32L0
Ë|| deföed(
STM32L4
)

1652 
	#HAL_TIM_SœveC⁄figSynchr⁄iz©i⁄
 
HAL_TIM_SœveC⁄figSynchro


	)

1653 
	#HAL_TIM_SœveC⁄figSynchr⁄iz©i⁄_IT
 
HAL_TIM_SœveC⁄figSynchro_IT


	)

1654 
	#HAL_TIMEx_Commuèti⁄CÆlback
 
HAL_TIMEx_CommutCÆlback


	)

1655 
	#HAL_TIMEx_C⁄figCommuèti⁄Evít
 
HAL_TIMEx_C⁄figCommutEvít


	)

1656 
	#HAL_TIMEx_C⁄figCommuèti⁄Evít_IT
 
HAL_TIMEx_C⁄figCommutEvít_IT


	)

1657 
	#HAL_TIMEx_C⁄figCommuèti⁄Evít_DMA
 
HAL_TIMEx_C⁄figCommutEvít_DMA


	)

1666 
	#HAL_UART_WakeupCÆlback
 
HAL_UARTEx_WakeupCÆlback


	)

1674 
	#HAL_LTDC_LöeEvíCÆlback
 
HAL_LTDC_LöeEvítCÆlback


	)

1675 
	#HAL_LTDC_Rñaod
 
HAL_LTDC_Rñﬂd


	)

1676 
	#HAL_LTDC_Såu˘InôFromVideoC⁄fig
 
HAL_LTDCEx_Såu˘InôFromVideoC⁄fig


	)

1677 
	#HAL_LTDC_Såu˘InôFromAd≠ãdComm™dC⁄fig
 
HAL_LTDCEx_Såu˘InôFromAd≠ãdComm™dC⁄fig


	)

1696 
	#AES_IT_CC
 
CRYP_IT_CC


	)

1697 
	#AES_IT_ERR
 
CRYP_IT_ERR


	)

1698 
	#AES_FLAG_CCF
 
CRYP_FLAG_CCF


	)

1706 
	#__HAL_GET_BOOT_MODE
 
__HAL_SYSCFG_GET_BOOT_MODE


	)

1707 
	#__HAL_REMAPMEMORY_FLASH
 
__HAL_SYSCFG_REMAPMEMORY_FLASH


	)

1708 
	#__HAL_REMAPMEMORY_SYSTEMFLASH
 
__HAL_SYSCFG_REMAPMEMORY_SYSTEMFLASH


	)

1709 
	#__HAL_REMAPMEMORY_SRAM
 
__HAL_SYSCFG_REMAPMEMORY_SRAM


	)

1710 
	#__HAL_REMAPMEMORY_FMC
 
__HAL_SYSCFG_REMAPMEMORY_FMC


	)

1711 
	#__HAL_REMAPMEMORY_FMC_SDRAM
 
__HAL_SYSCFG_REMAPMEMORY_FMC_SDRAM


	)

1712 
	#__HAL_REMAPMEMORY_FSMC
 
__HAL_SYSCFG_REMAPMEMORY_FSMC


	)

1713 
	#__HAL_REMAPMEMORY_QUADSPI
 
__HAL_SYSCFG_REMAPMEMORY_QUADSPI


	)

1714 
	#__HAL_FMC_BANK
 
__HAL_SYSCFG_FMC_BANK


	)

1715 
	#__HAL_GET_FLAG
 
__HAL_SYSCFG_GET_FLAG


	)

1716 
	#__HAL_CLEAR_FLAG
 
__HAL_SYSCFG_CLEAR_FLAG


	)

1717 
	#__HAL_VREFINT_OUT_ENABLE
 
__HAL_SYSCFG_VREFINT_OUT_ENABLE


	)

1718 
	#__HAL_VREFINT_OUT_DISABLE
 
__HAL_SYSCFG_VREFINT_OUT_DISABLE


	)

1719 
	#__HAL_SYSCFG_SRAM2_WRP_ENABLE
 
__HAL_SYSCFG_SRAM2_WRP_0_31_ENABLE


	)

1721 
	#SYSCFG_FLAG_VREF_READY
 
SYSCFG_FLAG_VREFINT_READY


	)

1722 
	#SYSCFG_FLAG_RC48
 
RCC_FLAG_HSI48


	)

1723 
	#IS_SYSCFG_FASTMODEPLUS_CONFIG
 
IS_I2C_FASTMODEPLUS


	)

1724 
	#UFB_MODE_BôNumbî
 
UFB_MODE_BIT_NUMBER


	)

1725 
	#CMP_PD_BôNumbî
 
CMP_PD_BIT_NUMBER


	)

1735 
	#__ADC_ENABLE
 
__HAL_ADC_ENABLE


	)

1736 
	#__ADC_DISABLE
 
__HAL_ADC_DISABLE


	)

1737 
	#__HAL_ADC_ENABLING_CONDITIONS
 
ADC_ENABLING_CONDITIONS


	)

1738 
	#__HAL_ADC_DISABLING_CONDITIONS
 
ADC_DISABLING_CONDITIONS


	)

1739 
	#__HAL_ADC_IS_ENABLED
 
ADC_IS_ENABLE


	)

1740 
	#__ADC_IS_ENABLED
 
ADC_IS_ENABLE


	)

1741 
	#__HAL_ADC_IS_SOFTWARE_START_REGULAR
 
ADC_IS_SOFTWARE_START_REGULAR


	)

1742 
	#__HAL_ADC_IS_SOFTWARE_START_INJECTED
 
ADC_IS_SOFTWARE_START_INJECTED


	)

1743 
	#__HAL_ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED
 
ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED


	)

1744 
	#__HAL_ADC_IS_CONVERSION_ONGOING_REGULAR
 
ADC_IS_CONVERSION_ONGOING_REGULAR


	)

1745 
	#__HAL_ADC_IS_CONVERSION_ONGOING_INJECTED
 
ADC_IS_CONVERSION_ONGOING_INJECTED


	)

1746 
	#__HAL_ADC_IS_CONVERSION_ONGOING
 
ADC_IS_CONVERSION_ONGOING


	)

1747 
	#__HAL_ADC_CLEAR_ERRORCODE
 
ADC_CLEAR_ERRORCODE


	)

1749 
	#__HAL_ADC_GET_RESOLUTION
 
ADC_GET_RESOLUTION


	)

1750 
	#__HAL_ADC_JSQR_RK
 
ADC_JSQR_RK


	)

1751 
	#__HAL_ADC_CFGR_AWD1CH
 
ADC_CFGR_AWD1CH_SHIFT


	)

1752 
	#__HAL_ADC_CFGR_AWD23CR
 
ADC_CFGR_AWD23CR


	)

1753 
	#__HAL_ADC_CFGR_INJECT_AUTO_CONVERSION
 
ADC_CFGR_INJECT_AUTO_CONVERSION


	)

1754 
	#__HAL_ADC_CFGR_INJECT_CONTEXT_QUEUE
 
ADC_CFGR_INJECT_CONTEXT_QUEUE


	)

1755 
	#__HAL_ADC_CFGR_INJECT_DISCCONTINUOUS
 
ADC_CFGR_INJECT_DISCCONTINUOUS


	)

1756 
	#__HAL_ADC_CFGR_REG_DISCCONTINUOUS
 
ADC_CFGR_REG_DISCCONTINUOUS


	)

1757 
	#__HAL_ADC_CFGR_DISCONTINUOUS_NUM
 
ADC_CFGR_DISCONTINUOUS_NUM


	)

1758 
	#__HAL_ADC_CFGR_AUTOWAIT
 
ADC_CFGR_AUTOWAIT


	)

1759 
	#__HAL_ADC_CFGR_CONTINUOUS
 
ADC_CFGR_CONTINUOUS


	)

1760 
	#__HAL_ADC_CFGR_OVERRUN
 
ADC_CFGR_OVERRUN


	)

1761 
	#__HAL_ADC_CFGR_DMACONTREQ
 
ADC_CFGR_DMACONTREQ


	)

1762 
	#__HAL_ADC_CFGR_EXTSEL
 
ADC_CFGR_EXTSEL_SET


	)

1763 
	#__HAL_ADC_JSQR_JEXTSEL
 
ADC_JSQR_JEXTSEL_SET


	)

1764 
	#__HAL_ADC_OFR_CHANNEL
 
ADC_OFR_CHANNEL


	)

1765 
	#__HAL_ADC_DIFSEL_CHANNEL
 
ADC_DIFSEL_CHANNEL


	)

1766 
	#__HAL_ADC_CALFACT_DIFF_SET
 
ADC_CALFACT_DIFF_SET


	)

1767 
	#__HAL_ADC_CALFACT_DIFF_GET
 
ADC_CALFACT_DIFF_GET


	)

1768 
	#__HAL_ADC_TRX_HIGHTHRESHOLD
 
ADC_TRX_HIGHTHRESHOLD


	)

1770 
	#__HAL_ADC_OFFSET_SHIFT_RESOLUTION
 
ADC_OFFSET_SHIFT_RESOLUTION


	)

1771 
	#__HAL_ADC_AWD1THRESHOLD_SHIFT_RESOLUTION
 
ADC_AWD1THRESHOLD_SHIFT_RESOLUTION


	)

1772 
	#__HAL_ADC_AWD23THRESHOLD_SHIFT_RESOLUTION
 
ADC_AWD23THRESHOLD_SHIFT_RESOLUTION


	)

1773 
	#__HAL_ADC_COMMON_REGISTER
 
ADC_COMMON_REGISTER


	)

1774 
	#__HAL_ADC_COMMON_CCR_MULTI
 
ADC_COMMON_CCR_MULTI


	)

1775 
	#__HAL_ADC_MULTIMODE_IS_ENABLED
 
ADC_MULTIMODE_IS_ENABLE


	)

1776 
	#__ADC_MULTIMODE_IS_ENABLED
 
ADC_MULTIMODE_IS_ENABLE


	)

1777 
	#__HAL_ADC_NONMULTIMODE_OR_MULTIMODEMASTER
 
ADC_NONMULTIMODE_OR_MULTIMODEMASTER


	)

1778 
	#__HAL_ADC_COMMON_ADC_OTHER
 
ADC_COMMON_ADC_OTHER


	)

1779 
	#__HAL_ADC_MULTI_SLAVE
 
ADC_MULTI_SLAVE


	)

1781 
	#__HAL_ADC_SQR1_L
 
ADC_SQR1_L_SHIFT


	)

1782 
	#__HAL_ADC_JSQR_JL
 
ADC_JSQR_JL_SHIFT


	)

1783 
	#__HAL_ADC_JSQR_RK_JL
 
ADC_JSQR_RK_JL


	)

1784 
	#__HAL_ADC_CR1_DISCONTINUOUS_NUM
 
ADC_CR1_DISCONTINUOUS_NUM


	)

1785 
	#__HAL_ADC_CR1_SCAN
 
ADC_CR1_SCAN_SET


	)

1786 
	#__HAL_ADC_CONVCYCLES_MAX_RANGE
 
ADC_CONVCYCLES_MAX_RANGE


	)

1787 
	#__HAL_ADC_CLOCK_PRESCALER_RANGE
 
ADC_CLOCK_PRESCALER_RANGE


	)

1788 
	#__HAL_ADC_GET_CLOCK_PRESCALER
 
ADC_GET_CLOCK_PRESCALER


	)

1790 
	#__HAL_ADC_SQR1
 
ADC_SQR1


	)

1791 
	#__HAL_ADC_SMPR1
 
ADC_SMPR1


	)

1792 
	#__HAL_ADC_SMPR2
 
ADC_SMPR2


	)

1793 
	#__HAL_ADC_SQR3_RK
 
ADC_SQR3_RK


	)

1794 
	#__HAL_ADC_SQR2_RK
 
ADC_SQR2_RK


	)

1795 
	#__HAL_ADC_SQR1_RK
 
ADC_SQR1_RK


	)

1796 
	#__HAL_ADC_CR2_CONTINUOUS
 
ADC_CR2_CONTINUOUS


	)

1797 
	#__HAL_ADC_CR1_DISCONTINUOUS
 
ADC_CR1_DISCONTINUOUS


	)

1798 
	#__HAL_ADC_CR1_SCANCONV
 
ADC_CR1_SCANCONV


	)

1799 
	#__HAL_ADC_CR2_EOCSñe˘i⁄
 
ADC_CR2_EOCSñe˘i⁄


	)

1800 
	#__HAL_ADC_CR2_DMAC⁄tReq
 
ADC_CR2_DMAC⁄tReq


	)

1801 
	#__HAL_ADC_JSQR
 
ADC_JSQR


	)

1803 
	#__HAL_ADC_CHSELR_CHANNEL
 
ADC_CHSELR_CHANNEL


	)

1804 
	#__HAL_ADC_CFGR1_REG_DISCCONTINUOUS
 
ADC_CFGR1_REG_DISCCONTINUOUS


	)

1805 
	#__HAL_ADC_CFGR1_AUTOOFF
 
ADC_CFGR1_AUTOOFF


	)

1806 
	#__HAL_ADC_CFGR1_AUTOWAIT
 
ADC_CFGR1_AUTOWAIT


	)

1807 
	#__HAL_ADC_CFGR1_CONTINUOUS
 
ADC_CFGR1_CONTINUOUS


	)

1808 
	#__HAL_ADC_CFGR1_OVERRUN
 
ADC_CFGR1_OVERRUN


	)

1809 
	#__HAL_ADC_CFGR1_SCANDIR
 
ADC_CFGR1_SCANDIR


	)

1810 
	#__HAL_ADC_CFGR1_DMACONTREQ
 
ADC_CFGR1_DMACONTREQ


	)

1819 
	#__HAL_DHR12R1_ALIGNEMENT
 
DAC_DHR12R1_ALIGNMENT


	)

1820 
	#__HAL_DHR12R2_ALIGNEMENT
 
DAC_DHR12R2_ALIGNMENT


	)

1821 
	#__HAL_DHR12RD_ALIGNEMENT
 
DAC_DHR12RD_ALIGNMENT


	)

1822 
	#IS_DAC_GENERATE_WAVE
 
IS_DAC_WAVE


	)

1831 
	#__HAL_FREEZE_TIM1_DBGMCU
 
__HAL_DBGMCU_FREEZE_TIM1


	)

1832 
	#__HAL_UNFREEZE_TIM1_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_TIM1


	)

1833 
	#__HAL_FREEZE_TIM2_DBGMCU
 
__HAL_DBGMCU_FREEZE_TIM2


	)

1834 
	#__HAL_UNFREEZE_TIM2_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_TIM2


	)

1835 
	#__HAL_FREEZE_TIM3_DBGMCU
 
__HAL_DBGMCU_FREEZE_TIM3


	)

1836 
	#__HAL_UNFREEZE_TIM3_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_TIM3


	)

1837 
	#__HAL_FREEZE_TIM4_DBGMCU
 
__HAL_DBGMCU_FREEZE_TIM4


	)

1838 
	#__HAL_UNFREEZE_TIM4_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_TIM4


	)

1839 
	#__HAL_FREEZE_TIM5_DBGMCU
 
__HAL_DBGMCU_FREEZE_TIM5


	)

1840 
	#__HAL_UNFREEZE_TIM5_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_TIM5


	)

1841 
	#__HAL_FREEZE_TIM6_DBGMCU
 
__HAL_DBGMCU_FREEZE_TIM6


	)

1842 
	#__HAL_UNFREEZE_TIM6_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_TIM6


	)

1843 
	#__HAL_FREEZE_TIM7_DBGMCU
 
__HAL_DBGMCU_FREEZE_TIM7


	)

1844 
	#__HAL_UNFREEZE_TIM7_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_TIM7


	)

1845 
	#__HAL_FREEZE_TIM8_DBGMCU
 
__HAL_DBGMCU_FREEZE_TIM8


	)

1846 
	#__HAL_UNFREEZE_TIM8_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_TIM8


	)

1848 
	#__HAL_FREEZE_TIM9_DBGMCU
 
__HAL_DBGMCU_FREEZE_TIM9


	)

1849 
	#__HAL_UNFREEZE_TIM9_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_TIM9


	)

1850 
	#__HAL_FREEZE_TIM10_DBGMCU
 
__HAL_DBGMCU_FREEZE_TIM10


	)

1851 
	#__HAL_UNFREEZE_TIM10_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_TIM10


	)

1852 
	#__HAL_FREEZE_TIM11_DBGMCU
 
__HAL_DBGMCU_FREEZE_TIM11


	)

1853 
	#__HAL_UNFREEZE_TIM11_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_TIM11


	)

1854 
	#__HAL_FREEZE_TIM12_DBGMCU
 
__HAL_DBGMCU_FREEZE_TIM12


	)

1855 
	#__HAL_UNFREEZE_TIM12_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_TIM12


	)

1856 
	#__HAL_FREEZE_TIM13_DBGMCU
 
__HAL_DBGMCU_FREEZE_TIM13


	)

1857 
	#__HAL_UNFREEZE_TIM13_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_TIM13


	)

1858 
	#__HAL_FREEZE_TIM14_DBGMCU
 
__HAL_DBGMCU_FREEZE_TIM14


	)

1859 
	#__HAL_UNFREEZE_TIM14_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_TIM14


	)

1860 
	#__HAL_FREEZE_CAN2_DBGMCU
 
__HAL_DBGMCU_FREEZE_CAN2


	)

1861 
	#__HAL_UNFREEZE_CAN2_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_CAN2


	)

1864 
	#__HAL_FREEZE_TIM15_DBGMCU
 
__HAL_DBGMCU_FREEZE_TIM15


	)

1865 
	#__HAL_UNFREEZE_TIM15_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_TIM15


	)

1866 
	#__HAL_FREEZE_TIM16_DBGMCU
 
__HAL_DBGMCU_FREEZE_TIM16


	)

1867 
	#__HAL_UNFREEZE_TIM16_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_TIM16


	)

1868 
	#__HAL_FREEZE_TIM17_DBGMCU
 
__HAL_DBGMCU_FREEZE_TIM17


	)

1869 
	#__HAL_UNFREEZE_TIM17_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_TIM17


	)

1870 
	#__HAL_FREEZE_RTC_DBGMCU
 
__HAL_DBGMCU_FREEZE_RTC


	)

1871 
	#__HAL_UNFREEZE_RTC_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_RTC


	)

1872 #i‡
deföed
(
STM32H7
)

1873 
	#__HAL_FREEZE_WWDG_DBGMCU
 
__HAL_DBGMCU_FREEZE_WWDG1


	)

1874 
	#__HAL_UNFREEZE_WWDG_DBGMCU
 
__HAL_DBGMCU_UnFªeze_WWDG1


	)

1875 
	#__HAL_FREEZE_IWDG_DBGMCU
 
__HAL_DBGMCU_FREEZE_IWDG1


	)

1876 
	#__HAL_UNFREEZE_IWDG_DBGMCU
 
__HAL_DBGMCU_UnFªeze_IWDG1


	)

1878 
	#__HAL_FREEZE_WWDG_DBGMCU
 
__HAL_DBGMCU_FREEZE_WWDG


	)

1879 
	#__HAL_UNFREEZE_WWDG_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_WWDG


	)

1880 
	#__HAL_FREEZE_IWDG_DBGMCU
 
__HAL_DBGMCU_FREEZE_IWDG


	)

1881 
	#__HAL_UNFREEZE_IWDG_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_IWDG


	)

1883 
	#__HAL_FREEZE_I2C1_TIMEOUT_DBGMCU
 
__HAL_DBGMCU_FREEZE_I2C1_TIMEOUT


	)

1884 
	#__HAL_UNFREEZE_I2C1_TIMEOUT_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_I2C1_TIMEOUT


	)

1885 
	#__HAL_FREEZE_I2C2_TIMEOUT_DBGMCU
 
__HAL_DBGMCU_FREEZE_I2C2_TIMEOUT


	)

1886 
	#__HAL_UNFREEZE_I2C2_TIMEOUT_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_I2C2_TIMEOUT


	)

1887 
	#__HAL_FREEZE_I2C3_TIMEOUT_DBGMCU
 
__HAL_DBGMCU_FREEZE_I2C3_TIMEOUT


	)

1888 
	#__HAL_UNFREEZE_I2C3_TIMEOUT_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_I2C3_TIMEOUT


	)

1889 
	#__HAL_FREEZE_CAN1_DBGMCU
 
__HAL_DBGMCU_FREEZE_CAN1


	)

1890 
	#__HAL_UNFREEZE_CAN1_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_CAN1


	)

1891 
	#__HAL_FREEZE_LPTIM1_DBGMCU
 
__HAL_DBGMCU_FREEZE_LPTIM1


	)

1892 
	#__HAL_UNFREEZE_LPTIM1_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_LPTIM1


	)

1893 
	#__HAL_FREEZE_LPTIM2_DBGMCU
 
__HAL_DBGMCU_FREEZE_LPTIM2


	)

1894 
	#__HAL_UNFREEZE_LPTIM2_DBGMCU
 
__HAL_DBGMCU_UNFREEZE_LPTIM2


	)

1903 #i‡
deföed
(
STM32F3
)

1904 
	#COMP_START
 
__HAL_COMP_ENABLE


	)

1905 
	#COMP_STOP
 
__HAL_COMP_DISABLE


	)

1906 
	#COMP_LOCK
 
__HAL_COMP_LOCK


	)

1908 #i‡
deföed
(
STM32F301x8
Ë|| deföed(
STM32F302x8
Ë|| deföed(
STM32F318xx
Ë|| deföed(
STM32F303x8
Ë|| deföed(
STM32F334x8
Ë|| deföed(
STM32F328xx
)

1909 
	#__HAL_COMP_EXTI_RISING_IT_ENABLE
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP2
Ë? 
	`__HAL_COMP_COMP2_EXTI_ENABLE_RISING_EDGE
() : \

1910 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP4
Ë? 
	`__HAL_COMP_COMP4_EXTI_ENABLE_RISING_EDGE
() : \

1911 
	`__HAL_COMP_COMP6_EXTI_ENABLE_RISING_EDGE
())

	)

1912 
	#__HAL_COMP_EXTI_RISING_IT_DISABLE
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP2
Ë? 
	`__HAL_COMP_COMP2_EXTI_DISABLE_RISING_EDGE
() : \

1913 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP4
Ë? 
	`__HAL_COMP_COMP4_EXTI_DISABLE_RISING_EDGE
() : \

1914 
	`__HAL_COMP_COMP6_EXTI_DISABLE_RISING_EDGE
())

	)

1915 
	#__HAL_COMP_EXTI_FALLING_IT_ENABLE
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP2
Ë? 
	`__HAL_COMP_COMP2_EXTI_ENABLE_FALLING_EDGE
() : \

1916 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP4
Ë? 
	`__HAL_COMP_COMP4_EXTI_ENABLE_FALLING_EDGE
() : \

1917 
	`__HAL_COMP_COMP6_EXTI_ENABLE_FALLING_EDGE
())

	)

1918 
	#__HAL_COMP_EXTI_FALLING_IT_DISABLE
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP2
Ë? 
	`__HAL_COMP_COMP2_EXTI_DISABLE_FALLING_EDGE
() : \

1919 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP4
Ë? 
	`__HAL_COMP_COMP4_EXTI_DISABLE_FALLING_EDGE
() : \

1920 
	`__HAL_COMP_COMP6_EXTI_DISABLE_FALLING_EDGE
())

	)

1921 
	#__HAL_COMP_EXTI_ENABLE_IT
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP2
Ë? 
	`__HAL_COMP_COMP2_EXTI_ENABLE_IT
() : \

1922 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP4
Ë? 
	`__HAL_COMP_COMP4_EXTI_ENABLE_IT
() : \

1923 
	`__HAL_COMP_COMP6_EXTI_ENABLE_IT
())

	)

1924 
	#__HAL_COMP_EXTI_DISABLE_IT
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP2
Ë? 
	`__HAL_COMP_COMP2_EXTI_DISABLE_IT
() : \

1925 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP4
Ë? 
	`__HAL_COMP_COMP4_EXTI_DISABLE_IT
() : \

1926 
	`__HAL_COMP_COMP6_EXTI_DISABLE_IT
())

	)

1927 
	#__HAL_COMP_EXTI_GET_FLAG
(
__FLAG__
Ë(((__FLAG__Ë=
COMP_EXTI_LINE_COMP2
Ë? 
	`__HAL_COMP_COMP2_EXTI_GET_FLAG
() : \

1928 ((
__FLAG__
Ë=
COMP_EXTI_LINE_COMP4
Ë? 
	`__HAL_COMP_COMP4_EXTI_GET_FLAG
() : \

1929 
	`__HAL_COMP_COMP6_EXTI_GET_FLAG
())

	)

1930 
	#__HAL_COMP_EXTI_CLEAR_FLAG
(
__FLAG__
Ë(((__FLAG__Ë=
COMP_EXTI_LINE_COMP2
Ë? 
	`__HAL_COMP_COMP2_EXTI_CLEAR_FLAG
() : \

1931 ((
__FLAG__
Ë=
COMP_EXTI_LINE_COMP4
Ë? 
	`__HAL_COMP_COMP4_EXTI_CLEAR_FLAG
() : \

1932 
	`__HAL_COMP_COMP6_EXTI_CLEAR_FLAG
())

	)

1934 #i‡
deföed
(
STM32F302xE
Ë|| deföed(
STM32F302xC
)

1935 
	#__HAL_COMP_EXTI_RISING_IT_ENABLE
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_ENABLE_RISING_EDGE
() : \

1936 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP2
Ë? 
	`__HAL_COMP_COMP2_EXTI_ENABLE_RISING_EDGE
() : \

1937 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP4
Ë? 
	`__HAL_COMP_COMP4_EXTI_ENABLE_RISING_EDGE
() : \

1938 
	`__HAL_COMP_COMP6_EXTI_ENABLE_RISING_EDGE
())

	)

1939 
	#__HAL_COMP_EXTI_RISING_IT_DISABLE
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_DISABLE_RISING_EDGE
() : \

1940 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP2
Ë? 
	`__HAL_COMP_COMP2_EXTI_DISABLE_RISING_EDGE
() : \

1941 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP4
Ë? 
	`__HAL_COMP_COMP4_EXTI_DISABLE_RISING_EDGE
() : \

1942 
	`__HAL_COMP_COMP6_EXTI_DISABLE_RISING_EDGE
())

	)

1943 
	#__HAL_COMP_EXTI_FALLING_IT_ENABLE
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_ENABLE_FALLING_EDGE
() : \

1944 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP2
Ë? 
	`__HAL_COMP_COMP2_EXTI_ENABLE_FALLING_EDGE
() : \

1945 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP4
Ë? 
	`__HAL_COMP_COMP4_EXTI_ENABLE_FALLING_EDGE
() : \

1946 
	`__HAL_COMP_COMP6_EXTI_ENABLE_FALLING_EDGE
())

	)

1947 
	#__HAL_COMP_EXTI_FALLING_IT_DISABLE
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_DISABLE_FALLING_EDGE
() : \

1948 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP2
Ë? 
	`__HAL_COMP_COMP2_EXTI_DISABLE_FALLING_EDGE
() : \

1949 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP4
Ë? 
	`__HAL_COMP_COMP4_EXTI_DISABLE_FALLING_EDGE
() : \

1950 
	`__HAL_COMP_COMP6_EXTI_DISABLE_FALLING_EDGE
())

	)

1951 
	#__HAL_COMP_EXTI_ENABLE_IT
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_ENABLE_IT
() : \

1952 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP2
Ë? 
	`__HAL_COMP_COMP2_EXTI_ENABLE_IT
() : \

1953 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP4
Ë? 
	`__HAL_COMP_COMP4_EXTI_ENABLE_IT
() : \

1954 
	`__HAL_COMP_COMP6_EXTI_ENABLE_IT
())

	)

1955 
	#__HAL_COMP_EXTI_DISABLE_IT
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_DISABLE_IT
() : \

1956 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP2
Ë? 
	`__HAL_COMP_COMP2_EXTI_DISABLE_IT
() : \

1957 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP4
Ë? 
	`__HAL_COMP_COMP4_EXTI_DISABLE_IT
() : \

1958 
	`__HAL_COMP_COMP6_EXTI_DISABLE_IT
())

	)

1959 
	#__HAL_COMP_EXTI_GET_FLAG
(
__FLAG__
Ë(((__FLAG__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_GET_FLAG
() : \

1960 ((
__FLAG__
Ë=
COMP_EXTI_LINE_COMP2
Ë? 
	`__HAL_COMP_COMP2_EXTI_GET_FLAG
() : \

1961 ((
__FLAG__
Ë=
COMP_EXTI_LINE_COMP4
Ë? 
	`__HAL_COMP_COMP4_EXTI_GET_FLAG
() : \

1962 
	`__HAL_COMP_COMP6_EXTI_GET_FLAG
())

	)

1963 
	#__HAL_COMP_EXTI_CLEAR_FLAG
(
__FLAG__
Ë(((__FLAG__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_CLEAR_FLAG
() : \

1964 ((
__FLAG__
Ë=
COMP_EXTI_LINE_COMP2
Ë? 
	`__HAL_COMP_COMP2_EXTI_CLEAR_FLAG
() : \

1965 ((
__FLAG__
Ë=
COMP_EXTI_LINE_COMP4
Ë? 
	`__HAL_COMP_COMP4_EXTI_CLEAR_FLAG
() : \

1966 
	`__HAL_COMP_COMP6_EXTI_CLEAR_FLAG
())

	)

1968 #i‡
deföed
(
STM32F303xE
Ë|| deföed(
STM32F398xx
Ë|| deföed(
STM32F303xC
Ë|| deföed(
STM32F358xx
)

1969 
	#__HAL_COMP_EXTI_RISING_IT_ENABLE
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_ENABLE_RISING_EDGE
() : \

1970 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP2
Ë? 
	`__HAL_COMP_COMP2_EXTI_ENABLE_RISING_EDGE
() : \

1971 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP3
Ë? 
	`__HAL_COMP_COMP3_EXTI_ENABLE_RISING_EDGE
() : \

1972 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP4
Ë? 
	`__HAL_COMP_COMP4_EXTI_ENABLE_RISING_EDGE
() : \

1973 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP5
Ë? 
	`__HAL_COMP_COMP5_EXTI_ENABLE_RISING_EDGE
() : \

1974 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP6
Ë? 
	`__HAL_COMP_COMP6_EXTI_ENABLE_RISING_EDGE
() : \

1975 
	`__HAL_COMP_COMP7_EXTI_ENABLE_RISING_EDGE
())

	)

1976 
	#__HAL_COMP_EXTI_RISING_IT_DISABLE
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_DISABLE_RISING_EDGE
() : \

1977 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP2
Ë? 
	`__HAL_COMP_COMP2_EXTI_DISABLE_RISING_EDGE
() : \

1978 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP3
Ë? 
	`__HAL_COMP_COMP3_EXTI_DISABLE_RISING_EDGE
() : \

1979 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP4
Ë? 
	`__HAL_COMP_COMP4_EXTI_DISABLE_RISING_EDGE
() : \

1980 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP5
Ë? 
	`__HAL_COMP_COMP5_EXTI_DISABLE_RISING_EDGE
() : \

1981 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP6
Ë? 
	`__HAL_COMP_COMP6_EXTI_DISABLE_RISING_EDGE
() : \

1982 
	`__HAL_COMP_COMP7_EXTI_DISABLE_RISING_EDGE
())

	)

1983 
	#__HAL_COMP_EXTI_FALLING_IT_ENABLE
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_ENABLE_FALLING_EDGE
() : \

1984 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP2
Ë? 
	`__HAL_COMP_COMP2_EXTI_ENABLE_FALLING_EDGE
() : \

1985 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP3
Ë? 
	`__HAL_COMP_COMP3_EXTI_ENABLE_FALLING_EDGE
() : \

1986 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP4
Ë? 
	`__HAL_COMP_COMP4_EXTI_ENABLE_FALLING_EDGE
() : \

1987 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP5
Ë? 
	`__HAL_COMP_COMP5_EXTI_ENABLE_FALLING_EDGE
() : \

1988 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP6
Ë? 
	`__HAL_COMP_COMP6_EXTI_ENABLE_FALLING_EDGE
() : \

1989 
	`__HAL_COMP_COMP7_EXTI_ENABLE_FALLING_EDGE
())

	)

1990 
	#__HAL_COMP_EXTI_FALLING_IT_DISABLE
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_DISABLE_FALLING_EDGE
() : \

1991 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP2
Ë? 
	`__HAL_COMP_COMP2_EXTI_DISABLE_FALLING_EDGE
() : \

1992 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP3
Ë? 
	`__HAL_COMP_COMP3_EXTI_DISABLE_FALLING_EDGE
() : \

1993 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP4
Ë? 
	`__HAL_COMP_COMP4_EXTI_DISABLE_FALLING_EDGE
() : \

1994 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP5
Ë? 
	`__HAL_COMP_COMP5_EXTI_DISABLE_FALLING_EDGE
() : \

1995 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP6
Ë? 
	`__HAL_COMP_COMP6_EXTI_DISABLE_FALLING_EDGE
() : \

1996 
	`__HAL_COMP_COMP7_EXTI_DISABLE_FALLING_EDGE
())

	)

1997 
	#__HAL_COMP_EXTI_ENABLE_IT
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_ENABLE_IT
() : \

1998 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP2
Ë? 
	`__HAL_COMP_COMP2_EXTI_ENABLE_IT
() : \

1999 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP3
Ë? 
	`__HAL_COMP_COMP3_EXTI_ENABLE_IT
() : \

2000 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP4
Ë? 
	`__HAL_COMP_COMP4_EXTI_ENABLE_IT
() : \

2001 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP5
Ë? 
	`__HAL_COMP_COMP5_EXTI_ENABLE_IT
() : \

2002 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP6
Ë? 
	`__HAL_COMP_COMP6_EXTI_ENABLE_IT
() : \

2003 
	`__HAL_COMP_COMP7_EXTI_ENABLE_IT
())

	)

2004 
	#__HAL_COMP_EXTI_DISABLE_IT
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_DISABLE_IT
() : \

2005 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP2
Ë? 
	`__HAL_COMP_COMP2_EXTI_DISABLE_IT
() : \

2006 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP3
Ë? 
	`__HAL_COMP_COMP3_EXTI_DISABLE_IT
() : \

2007 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP4
Ë? 
	`__HAL_COMP_COMP4_EXTI_DISABLE_IT
() : \

2008 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP5
Ë? 
	`__HAL_COMP_COMP5_EXTI_DISABLE_IT
() : \

2009 ((
__EXTILINE__
Ë=
COMP_EXTI_LINE_COMP6
Ë? 
	`__HAL_COMP_COMP6_EXTI_DISABLE_IT
() : \

2010 
	`__HAL_COMP_COMP7_EXTI_DISABLE_IT
())

	)

2011 
	#__HAL_COMP_EXTI_GET_FLAG
(
__FLAG__
Ë(((__FLAG__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_GET_FLAG
() : \

2012 ((
__FLAG__
Ë=
COMP_EXTI_LINE_COMP2
Ë? 
	`__HAL_COMP_COMP2_EXTI_GET_FLAG
() : \

2013 ((
__FLAG__
Ë=
COMP_EXTI_LINE_COMP3
Ë? 
	`__HAL_COMP_COMP3_EXTI_GET_FLAG
() : \

2014 ((
__FLAG__
Ë=
COMP_EXTI_LINE_COMP4
Ë? 
	`__HAL_COMP_COMP4_EXTI_GET_FLAG
() : \

2015 ((
__FLAG__
Ë=
COMP_EXTI_LINE_COMP5
Ë? 
	`__HAL_COMP_COMP5_EXTI_GET_FLAG
() : \

2016 ((
__FLAG__
Ë=
COMP_EXTI_LINE_COMP6
Ë? 
	`__HAL_COMP_COMP6_EXTI_GET_FLAG
() : \

2017 
	`__HAL_COMP_COMP7_EXTI_GET_FLAG
())

	)

2018 
	#__HAL_COMP_EXTI_CLEAR_FLAG
(
__FLAG__
Ë(((__FLAG__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_CLEAR_FLAG
() : \

2019 ((
__FLAG__
Ë=
COMP_EXTI_LINE_COMP2
Ë? 
	`__HAL_COMP_COMP2_EXTI_CLEAR_FLAG
() : \

2020 ((
__FLAG__
Ë=
COMP_EXTI_LINE_COMP3
Ë? 
	`__HAL_COMP_COMP3_EXTI_CLEAR_FLAG
() : \

2021 ((
__FLAG__
Ë=
COMP_EXTI_LINE_COMP4
Ë? 
	`__HAL_COMP_COMP4_EXTI_CLEAR_FLAG
() : \

2022 ((
__FLAG__
Ë=
COMP_EXTI_LINE_COMP5
Ë? 
	`__HAL_COMP_COMP5_EXTI_CLEAR_FLAG
() : \

2023 ((
__FLAG__
Ë=
COMP_EXTI_LINE_COMP6
Ë? 
	`__HAL_COMP_COMP6_EXTI_CLEAR_FLAG
() : \

2024 
	`__HAL_COMP_COMP7_EXTI_CLEAR_FLAG
())

	)

2026 #i‡
deföed
(
STM32F373xC
Ë||deföed(
STM32F378xx
)

2027 
	#__HAL_COMP_EXTI_RISING_IT_ENABLE
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_ENABLE_RISING_EDGE
() : \

2028 
	`__HAL_COMP_COMP2_EXTI_ENABLE_RISING_EDGE
())

	)

2029 
	#__HAL_COMP_EXTI_RISING_IT_DISABLE
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_DISABLE_RISING_EDGE
() : \

2030 
	`__HAL_COMP_COMP2_EXTI_DISABLE_RISING_EDGE
())

	)

2031 
	#__HAL_COMP_EXTI_FALLING_IT_ENABLE
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_ENABLE_FALLING_EDGE
() : \

2032 
	`__HAL_COMP_COMP2_EXTI_ENABLE_FALLING_EDGE
())

	)

2033 
	#__HAL_COMP_EXTI_FALLING_IT_DISABLE
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_DISABLE_FALLING_EDGE
() : \

2034 
	`__HAL_COMP_COMP2_EXTI_DISABLE_FALLING_EDGE
())

	)

2035 
	#__HAL_COMP_EXTI_ENABLE_IT
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_ENABLE_IT
() : \

2036 
	`__HAL_COMP_COMP2_EXTI_ENABLE_IT
())

	)

2037 
	#__HAL_COMP_EXTI_DISABLE_IT
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_DISABLE_IT
() : \

2038 
	`__HAL_COMP_COMP2_EXTI_DISABLE_IT
())

	)

2039 
	#__HAL_COMP_EXTI_GET_FLAG
(
__FLAG__
Ë(((__FLAG__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_GET_FLAG
() : \

2040 
	`__HAL_COMP_COMP2_EXTI_GET_FLAG
())

	)

2041 
	#__HAL_COMP_EXTI_CLEAR_FLAG
(
__FLAG__
Ë(((__FLAG__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_CLEAR_FLAG
() : \

2042 
	`__HAL_COMP_COMP2_EXTI_CLEAR_FLAG
())

	)

2045 
	#__HAL_COMP_EXTI_RISING_IT_ENABLE
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_ENABLE_RISING_EDGE
() : \

2046 
	`__HAL_COMP_COMP2_EXTI_ENABLE_RISING_EDGE
())

	)

2047 
	#__HAL_COMP_EXTI_RISING_IT_DISABLE
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_DISABLE_RISING_EDGE
() : \

2048 
	`__HAL_COMP_COMP2_EXTI_DISABLE_RISING_EDGE
())

	)

2049 
	#__HAL_COMP_EXTI_FALLING_IT_ENABLE
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_ENABLE_FALLING_EDGE
() : \

2050 
	`__HAL_COMP_COMP2_EXTI_ENABLE_FALLING_EDGE
())

	)

2051 
	#__HAL_COMP_EXTI_FALLING_IT_DISABLE
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_DISABLE_FALLING_EDGE
() : \

2052 
	`__HAL_COMP_COMP2_EXTI_DISABLE_FALLING_EDGE
())

	)

2053 
	#__HAL_COMP_EXTI_ENABLE_IT
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_ENABLE_IT
() : \

2054 
	`__HAL_COMP_COMP2_EXTI_ENABLE_IT
())

	)

2055 
	#__HAL_COMP_EXTI_DISABLE_IT
(
__EXTILINE__
Ë(((__EXTILINE__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_DISABLE_IT
() : \

2056 
	`__HAL_COMP_COMP2_EXTI_DISABLE_IT
())

	)

2057 
	#__HAL_COMP_EXTI_GET_FLAG
(
__FLAG__
Ë(((__FLAG__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_GET_FLAG
() : \

2058 
	`__HAL_COMP_COMP2_EXTI_GET_FLAG
())

	)

2059 
	#__HAL_COMP_EXTI_CLEAR_FLAG
(
__FLAG__
Ë(((__FLAG__Ë=
COMP_EXTI_LINE_COMP1
Ë? 
	`__HAL_COMP_COMP1_EXTI_CLEAR_FLAG
() : \

2060 
	`__HAL_COMP_COMP2_EXTI_CLEAR_FLAG
())

	)

2063 
	#__HAL_COMP_GET_EXTI_LINE
 
COMP_GET_EXTI_LINE


	)

2065 #i‡
deföed
(
STM32L0
Ë|| deföed(
STM32L4
)

2070 
	#__HAL_COMP_GET_FLAG
(
__HANDLE__
, 
__FLAG__
Ë(
	`__HAL_COMP_IS_LOCKED
(__HANDLE__))

	)

2076 #i‡
deföed
(
STM32L0
Ë|| deföed(
STM32L4
)

2080 
	#HAL_COMP_Sèπ_IT
 
HAL_COMP_Sèπ


	)

2081 
	#HAL_COMP_St›_IT
 
HAL_COMP_St›


	)

2091 
	#IS_DAC_WAVE
(
WAVE
Ë(((WAVEË=
DAC_WAVE_NONE
) || \

2092 ((
WAVE
Ë=
DAC_WAVE_NOISE
)|| \

2093 ((
WAVE
Ë=
DAC_WAVE_TRIANGLE
))

	)

2103 
	#IS_WRPAREA
 
IS_OB_WRPAREA


	)

2104 
	#IS_TYPEPROGRAM
 
IS_FLASH_TYPEPROGRAM


	)

2105 
	#IS_TYPEPROGRAMFLASH
 
IS_FLASH_TYPEPROGRAM


	)

2106 
	#IS_TYPEERASE
 
IS_FLASH_TYPEERASE


	)

2107 
	#IS_NBSECTORS
 
IS_FLASH_NBSECTORS


	)

2108 
	#IS_OB_WDG_SOURCE
 
IS_OB_IWDG_SOURCE


	)

2118 
	#__HAL_I2C_RESET_CR2
 
I2C_RESET_CR2


	)

2119 
	#__HAL_I2C_GENERATE_START
 
I2C_GENERATE_START


	)

2120 #i‡
deföed
(
STM32F1
)

2121 
	#__HAL_I2C_FREQ_RANGE
 
I2C_FREQRANGE


	)

2123 
	#__HAL_I2C_FREQ_RANGE
 
I2C_FREQ_RANGE


	)

2125 
	#__HAL_I2C_RISE_TIME
 
I2C_RISE_TIME


	)

2126 
	#__HAL_I2C_SPEED_STANDARD
 
I2C_SPEED_STANDARD


	)

2127 
	#__HAL_I2C_SPEED_FAST
 
I2C_SPEED_FAST


	)

2128 
	#__HAL_I2C_SPEED
 
I2C_SPEED


	)

2129 
	#__HAL_I2C_7BIT_ADD_WRITE
 
I2C_7BIT_ADD_WRITE


	)

2130 
	#__HAL_I2C_7BIT_ADD_READ
 
I2C_7BIT_ADD_READ


	)

2131 
	#__HAL_I2C_10BIT_ADDRESS
 
I2C_10BIT_ADDRESS


	)

2132 
	#__HAL_I2C_10BIT_HEADER_WRITE
 
I2C_10BIT_HEADER_WRITE


	)

2133 
	#__HAL_I2C_10BIT_HEADER_READ
 
I2C_10BIT_HEADER_READ


	)

2134 
	#__HAL_I2C_MEM_ADD_MSB
 
I2C_MEM_ADD_MSB


	)

2135 
	#__HAL_I2C_MEM_ADD_LSB
 
I2C_MEM_ADD_LSB


	)

2136 
	#__HAL_I2C_FREQRANGE
 
I2C_FREQRANGE


	)

2145 
	#IS_I2S_INSTANCE
 
IS_I2S_ALL_INSTANCE


	)

2146 
	#IS_I2S_INSTANCE_EXT
 
IS_I2S_ALL_INSTANCE_EXT


	)

2148 #i‡
deföed
(
STM32H7
)

2149 
	#__HAL_I2S_CLEAR_FREFLAG
 
__HAL_I2S_CLEAR_TIFREFLAG


	)

2160 
	#__IRDA_DISABLE
 
__HAL_IRDA_DISABLE


	)

2161 
	#__IRDA_ENABLE
 
__HAL_IRDA_ENABLE


	)

2163 
	#__HAL_IRDA_GETCLOCKSOURCE
 
IRDA_GETCLOCKSOURCE


	)

2164 
	#__HAL_IRDA_MASK_COMPUTATION
 
IRDA_MASK_COMPUTATION


	)

2165 
	#__IRDA_GETCLOCKSOURCE
 
IRDA_GETCLOCKSOURCE


	)

2166 
	#__IRDA_MASK_COMPUTATION
 
IRDA_MASK_COMPUTATION


	)

2168 
	#IS_IRDA_ONEBIT_SAMPLE
 
IS_IRDA_ONE_BIT_SAMPLE


	)

2179 
	#__HAL_IWDG_ENABLE_WRITE_ACCESS
 
IWDG_ENABLE_WRITE_ACCESS


	)

2180 
	#__HAL_IWDG_DISABLE_WRITE_ACCESS
 
IWDG_DISABLE_WRITE_ACCESS


	)

2190 
	#__HAL_LPTIM_ENABLE_INTERRUPT
 
__HAL_LPTIM_ENABLE_IT


	)

2191 
	#__HAL_LPTIM_DISABLE_INTERRUPT
 
__HAL_LPTIM_DISABLE_IT


	)

2192 
	#__HAL_LPTIM_GET_ITSTATUS
 
__HAL_LPTIM_GET_IT_SOURCE


	)

2202 
	#__OPAMP_CSR_OPAXPD
 
OPAMP_CSR_OPAXPD


	)

2203 
	#__OPAMP_CSR_S3SELX
 
OPAMP_CSR_S3SELX


	)

2204 
	#__OPAMP_CSR_S4SELX
 
OPAMP_CSR_S4SELX


	)

2205 
	#__OPAMP_CSR_S5SELX
 
OPAMP_CSR_S5SELX


	)

2206 
	#__OPAMP_CSR_S6SELX
 
OPAMP_CSR_S6SELX


	)

2207 
	#__OPAMP_CSR_OPAXCAL_L
 
OPAMP_CSR_OPAXCAL_L


	)

2208 
	#__OPAMP_CSR_OPAXCAL_H
 
OPAMP_CSR_OPAXCAL_H


	)

2209 
	#__OPAMP_CSR_OPAXLPM
 
OPAMP_CSR_OPAXLPM


	)

2210 
	#__OPAMP_CSR_ALL_SWITCHES
 
OPAMP_CSR_ALL_SWITCHES


	)

2211 
	#__OPAMP_CSR_ANAWSELX
 
OPAMP_CSR_ANAWSELX


	)

2212 
	#__OPAMP_CSR_OPAXCALOUT
 
OPAMP_CSR_OPAXCALOUT


	)

2213 
	#__OPAMP_OFFSET_TRIM_BITSPOSITION
 
OPAMP_OFFSET_TRIM_BITSPOSITION


	)

2214 
	#__OPAMP_OFFSET_TRIM_SET
 
OPAMP_OFFSET_TRIM_SET


	)

2224 
	#__HAL_PVD_EVENT_DISABLE
 
__HAL_PWR_PVD_EXTI_DISABLE_EVENT


	)

2225 
	#__HAL_PVD_EVENT_ENABLE
 
__HAL_PWR_PVD_EXTI_ENABLE_EVENT


	)

2226 
	#__HAL_PVD_EXTI_FALLINGTRIGGER_DISABLE
 
__HAL_PWR_PVD_EXTI_DISABLE_FALLING_EDGE


	)

2227 
	#__HAL_PVD_EXTI_FALLINGTRIGGER_ENABLE
 
__HAL_PWR_PVD_EXTI_ENABLE_FALLING_EDGE


	)

2228 
	#__HAL_PVD_EXTI_RISINGTRIGGER_DISABLE
 
__HAL_PWR_PVD_EXTI_DISABLE_RISING_EDGE


	)

2229 
	#__HAL_PVD_EXTI_RISINGTRIGGER_ENABLE
 
__HAL_PWR_PVD_EXTI_ENABLE_RISING_EDGE


	)

2230 
	#__HAL_PVM_EVENT_DISABLE
 
__HAL_PWR_PVM_EVENT_DISABLE


	)

2231 
	#__HAL_PVM_EVENT_ENABLE
 
__HAL_PWR_PVM_EVENT_ENABLE


	)

2232 
	#__HAL_PVM_EXTI_FALLINGTRIGGER_DISABLE
 
__HAL_PWR_PVM_EXTI_FALLINGTRIGGER_DISABLE


	)

2233 
	#__HAL_PVM_EXTI_FALLINGTRIGGER_ENABLE
 
__HAL_PWR_PVM_EXTI_FALLINGTRIGGER_ENABLE


	)

2234 
	#__HAL_PVM_EXTI_RISINGTRIGGER_DISABLE
 
__HAL_PWR_PVM_EXTI_RISINGTRIGGER_DISABLE


	)

2235 
	#__HAL_PVM_EXTI_RISINGTRIGGER_ENABLE
 
__HAL_PWR_PVM_EXTI_RISINGTRIGGER_ENABLE


	)

2236 
	#__HAL_PWR_INTERNALWAKEUP_DISABLE
 
HAL_PWREx_DißbÀI¡î«lWakeUpLöe


	)

2237 
	#__HAL_PWR_INTERNALWAKEUP_ENABLE
 
HAL_PWREx_E«bÀI¡î«lWakeUpLöe


	)

2238 
	#__HAL_PWR_PULL_UP_DOWN_CONFIG_DISABLE
 
HAL_PWREx_DißbÀPuŒUpPuŒDownC⁄fig


	)

2239 
	#__HAL_PWR_PULL_UP_DOWN_CONFIG_ENABLE
 
HAL_PWREx_E«bÀPuŒUpPuŒDownC⁄fig


	)

2240 
	#__HAL_PWR_PVD_EXTI_CLEAR_EGDE_TRIGGER
(Ëdÿ{ 
	`__HAL_PWR_PVD_EXTI_DISABLE_RISING_EDGE
();
	`__HAL_PWR_PVD_EXTI_DISABLE_FALLING_EDGE
(); } 0)

	)

2241 
	#__HAL_PWR_PVD_EXTI_EVENT_DISABLE
 
__HAL_PWR_PVD_EXTI_DISABLE_EVENT


	)

2242 
	#__HAL_PWR_PVD_EXTI_EVENT_ENABLE
 
__HAL_PWR_PVD_EXTI_ENABLE_EVENT


	)

2243 
	#__HAL_PWR_PVD_EXTI_FALLINGTRIGGER_DISABLE
 
__HAL_PWR_PVD_EXTI_DISABLE_FALLING_EDGE


	)

2244 
	#__HAL_PWR_PVD_EXTI_FALLINGTRIGGER_ENABLE
 
__HAL_PWR_PVD_EXTI_ENABLE_FALLING_EDGE


	)

2245 
	#__HAL_PWR_PVD_EXTI_RISINGTRIGGER_DISABLE
 
__HAL_PWR_PVD_EXTI_DISABLE_RISING_EDGE


	)

2246 
	#__HAL_PWR_PVD_EXTI_RISINGTRIGGER_ENABLE
 
__HAL_PWR_PVD_EXTI_ENABLE_RISING_EDGE


	)

2247 
	#__HAL_PWR_PVD_EXTI_SET_FALLING_EGDE_TRIGGER
 
__HAL_PWR_PVD_EXTI_ENABLE_FALLING_EDGE


	)

2248 
	#__HAL_PWR_PVD_EXTI_SET_RISING_EDGE_TRIGGER
 
__HAL_PWR_PVD_EXTI_ENABLE_RISING_EDGE


	)

2249 
	#__HAL_PWR_PVM_DISABLE
(Ëdÿ{ 
	`HAL_PWREx_DißbÀPVM1
();
	`HAL_PWREx_DißbÀPVM2
();
	`HAL_PWREx_DißbÀPVM3
();
	`HAL_PWREx_DißbÀPVM4
(); } 0)

	)

2250 
	#__HAL_PWR_PVM_ENABLE
(Ëdÿ{ 
	`HAL_PWREx_E«bÀPVM1
();
	`HAL_PWREx_E«bÀPVM2
();
	`HAL_PWREx_E«bÀPVM3
();
	`HAL_PWREx_E«bÀPVM4
(); } 0)

	)

2251 
	#__HAL_PWR_SRAM2CONTENT_PRESERVE_DISABLE
 
HAL_PWREx_DißbÀSRAM2C⁄ã¡Rëíti⁄


	)

2252 
	#__HAL_PWR_SRAM2CONTENT_PRESERVE_ENABLE
 
HAL_PWREx_E«bÀSRAM2C⁄ã¡Rëíti⁄


	)

2253 
	#__HAL_PWR_VDDIO2_DISABLE
 
HAL_PWREx_DißbÀVddIO2


	)

2254 
	#__HAL_PWR_VDDIO2_ENABLE
 
HAL_PWREx_E«bÀVddIO2


	)

2255 
	#__HAL_PWR_VDDIO2_EXTI_CLEAR_EGDE_TRIGGER
 
__HAL_PWR_VDDIO2_EXTI_DISABLE_FALLING_EDGE


	)

2256 
	#__HAL_PWR_VDDIO2_EXTI_SET_FALLING_EGDE_TRIGGER
 
__HAL_PWR_VDDIO2_EXTI_ENABLE_FALLING_EDGE


	)

2257 
	#__HAL_PWR_VDDUSB_DISABLE
 
HAL_PWREx_DißbÀVddUSB


	)

2258 
	#__HAL_PWR_VDDUSB_ENABLE
 
HAL_PWREx_E«bÀVddUSB


	)

2260 #i‡
deföed
 (
STM32F4
)

2261 
	#__HAL_PVD_EXTI_ENABLE_IT
(
PWR_EXTI_LINE_PVD
Ë
	`__HAL_PWR_PVD_EXTI_ENABLE_IT
()

	)

2262 
	#__HAL_PVD_EXTI_DISABLE_IT
(
PWR_EXTI_LINE_PVD
Ë
	`__HAL_PWR_PVD_EXTI_DISABLE_IT
()

	)

2263 
	#__HAL_PVD_EXTI_GET_FLAG
(
PWR_EXTI_LINE_PVD
Ë
	`__HAL_PWR_PVD_EXTI_GET_FLAG
()

	)

2264 
	#__HAL_PVD_EXTI_CLEAR_FLAG
(
PWR_EXTI_LINE_PVD
Ë
	`__HAL_PWR_PVD_EXTI_CLEAR_FLAG
()

	)

2265 
	#__HAL_PVD_EXTI_GENERATE_SWIT
(
PWR_EXTI_LINE_PVD
Ë
	`__HAL_PWR_PVD_EXTI_GENERATE_SWIT
()

	)

2267 
	#__HAL_PVD_EXTI_CLEAR_FLAG
 
__HAL_PWR_PVD_EXTI_CLEAR_FLAG


	)

2268 
	#__HAL_PVD_EXTI_DISABLE_IT
 
__HAL_PWR_PVD_EXTI_DISABLE_IT


	)

2269 
	#__HAL_PVD_EXTI_ENABLE_IT
 
__HAL_PWR_PVD_EXTI_ENABLE_IT


	)

2270 
	#__HAL_PVD_EXTI_GENERATE_SWIT
 
__HAL_PWR_PVD_EXTI_GENERATE_SWIT


	)

2271 
	#__HAL_PVD_EXTI_GET_FLAG
 
__HAL_PWR_PVD_EXTI_GET_FLAG


	)

2282 
	#RCC_St›WakeUpClock_MSI
 
RCC_STOP_WAKEUPCLOCK_MSI


	)

2283 
	#RCC_St›WakeUpClock_HSI
 
RCC_STOP_WAKEUPCLOCK_HSI


	)

2285 
	#HAL_RCC_CCSCÆlback
 
HAL_RCC_CSSCÆlback


	)

2286 
	#HAL_RC48_E«bÀBuf„r_Cmd
(
cmd
Ë(((cmd)==
ENABLE
Ë? 
	`HAL_RCCEx_E«bÀHSI48_VREFINT
(Ë: 
	`HAL_RCCEx_DißbÀHSI48_VREFINT
())

	)

2288 
	#__ADC_CLK_DISABLE
 
__HAL_RCC_ADC_CLK_DISABLE


	)

2289 
	#__ADC_CLK_ENABLE
 
__HAL_RCC_ADC_CLK_ENABLE


	)

2290 
	#__ADC_CLK_SLEEP_DISABLE
 
__HAL_RCC_ADC_CLK_SLEEP_DISABLE


	)

2291 
	#__ADC_CLK_SLEEP_ENABLE
 
__HAL_RCC_ADC_CLK_SLEEP_ENABLE


	)

2292 
	#__ADC_FORCE_RESET
 
__HAL_RCC_ADC_FORCE_RESET


	)

2293 
	#__ADC_RELEASE_RESET
 
__HAL_RCC_ADC_RELEASE_RESET


	)

2294 
	#__ADC1_CLK_DISABLE
 
__HAL_RCC_ADC1_CLK_DISABLE


	)

2295 
	#__ADC1_CLK_ENABLE
 
__HAL_RCC_ADC1_CLK_ENABLE


	)

2296 
	#__ADC1_FORCE_RESET
 
__HAL_RCC_ADC1_FORCE_RESET


	)

2297 
	#__ADC1_RELEASE_RESET
 
__HAL_RCC_ADC1_RELEASE_RESET


	)

2298 
	#__ADC1_CLK_SLEEP_ENABLE
 
__HAL_RCC_ADC1_CLK_SLEEP_ENABLE


	)

2299 
	#__ADC1_CLK_SLEEP_DISABLE
 
__HAL_RCC_ADC1_CLK_SLEEP_DISABLE


	)

2300 
	#__ADC2_CLK_DISABLE
 
__HAL_RCC_ADC2_CLK_DISABLE


	)

2301 
	#__ADC2_CLK_ENABLE
 
__HAL_RCC_ADC2_CLK_ENABLE


	)

2302 
	#__ADC2_FORCE_RESET
 
__HAL_RCC_ADC2_FORCE_RESET


	)

2303 
	#__ADC2_RELEASE_RESET
 
__HAL_RCC_ADC2_RELEASE_RESET


	)

2304 
	#__ADC3_CLK_DISABLE
 
__HAL_RCC_ADC3_CLK_DISABLE


	)

2305 
	#__ADC3_CLK_ENABLE
 
__HAL_RCC_ADC3_CLK_ENABLE


	)

2306 
	#__ADC3_FORCE_RESET
 
__HAL_RCC_ADC3_FORCE_RESET


	)

2307 
	#__ADC3_RELEASE_RESET
 
__HAL_RCC_ADC3_RELEASE_RESET


	)

2308 
	#__AES_CLK_DISABLE
 
__HAL_RCC_AES_CLK_DISABLE


	)

2309 
	#__AES_CLK_ENABLE
 
__HAL_RCC_AES_CLK_ENABLE


	)

2310 
	#__AES_CLK_SLEEP_DISABLE
 
__HAL_RCC_AES_CLK_SLEEP_DISABLE


	)

2311 
	#__AES_CLK_SLEEP_ENABLE
 
__HAL_RCC_AES_CLK_SLEEP_ENABLE


	)

2312 
	#__AES_FORCE_RESET
 
__HAL_RCC_AES_FORCE_RESET


	)

2313 
	#__AES_RELEASE_RESET
 
__HAL_RCC_AES_RELEASE_RESET


	)

2314 
	#__CRYP_CLK_SLEEP_ENABLE
 
__HAL_RCC_CRYP_CLK_SLEEP_ENABLE


	)

2315 
	#__CRYP_CLK_SLEEP_DISABLE
 
__HAL_RCC_CRYP_CLK_SLEEP_DISABLE


	)

2316 
	#__CRYP_CLK_ENABLE
 
__HAL_RCC_CRYP_CLK_ENABLE


	)

2317 
	#__CRYP_CLK_DISABLE
 
__HAL_RCC_CRYP_CLK_DISABLE


	)

2318 
	#__CRYP_FORCE_RESET
 
__HAL_RCC_CRYP_FORCE_RESET


	)

2319 
	#__CRYP_RELEASE_RESET
 
__HAL_RCC_CRYP_RELEASE_RESET


	)

2320 
	#__AFIO_CLK_DISABLE
 
__HAL_RCC_AFIO_CLK_DISABLE


	)

2321 
	#__AFIO_CLK_ENABLE
 
__HAL_RCC_AFIO_CLK_ENABLE


	)

2322 
	#__AFIO_FORCE_RESET
 
__HAL_RCC_AFIO_FORCE_RESET


	)

2323 
	#__AFIO_RELEASE_RESET
 
__HAL_RCC_AFIO_RELEASE_RESET


	)

2324 
	#__AHB_FORCE_RESET
 
__HAL_RCC_AHB_FORCE_RESET


	)

2325 
	#__AHB_RELEASE_RESET
 
__HAL_RCC_AHB_RELEASE_RESET


	)

2326 
	#__AHB1_FORCE_RESET
 
__HAL_RCC_AHB1_FORCE_RESET


	)

2327 
	#__AHB1_RELEASE_RESET
 
__HAL_RCC_AHB1_RELEASE_RESET


	)

2328 
	#__AHB2_FORCE_RESET
 
__HAL_RCC_AHB2_FORCE_RESET


	)

2329 
	#__AHB2_RELEASE_RESET
 
__HAL_RCC_AHB2_RELEASE_RESET


	)

2330 
	#__AHB3_FORCE_RESET
 
__HAL_RCC_AHB3_FORCE_RESET


	)

2331 
	#__AHB3_RELEASE_RESET
 
__HAL_RCC_AHB3_RELEASE_RESET


	)

2332 
	#__APB1_FORCE_RESET
 
__HAL_RCC_APB1_FORCE_RESET


	)

2333 
	#__APB1_RELEASE_RESET
 
__HAL_RCC_APB1_RELEASE_RESET


	)

2334 
	#__APB2_FORCE_RESET
 
__HAL_RCC_APB2_FORCE_RESET


	)

2335 
	#__APB2_RELEASE_RESET
 
__HAL_RCC_APB2_RELEASE_RESET


	)

2336 
	#__BKP_CLK_DISABLE
 
__HAL_RCC_BKP_CLK_DISABLE


	)

2337 
	#__BKP_CLK_ENABLE
 
__HAL_RCC_BKP_CLK_ENABLE


	)

2338 
	#__BKP_FORCE_RESET
 
__HAL_RCC_BKP_FORCE_RESET


	)

2339 
	#__BKP_RELEASE_RESET
 
__HAL_RCC_BKP_RELEASE_RESET


	)

2340 
	#__CAN1_CLK_DISABLE
 
__HAL_RCC_CAN1_CLK_DISABLE


	)

2341 
	#__CAN1_CLK_ENABLE
 
__HAL_RCC_CAN1_CLK_ENABLE


	)

2342 
	#__CAN1_CLK_SLEEP_DISABLE
 
__HAL_RCC_CAN1_CLK_SLEEP_DISABLE


	)

2343 
	#__CAN1_CLK_SLEEP_ENABLE
 
__HAL_RCC_CAN1_CLK_SLEEP_ENABLE


	)

2344 
	#__CAN1_FORCE_RESET
 
__HAL_RCC_CAN1_FORCE_RESET


	)

2345 
	#__CAN1_RELEASE_RESET
 
__HAL_RCC_CAN1_RELEASE_RESET


	)

2346 
	#__CAN_CLK_DISABLE
 
__HAL_RCC_CAN1_CLK_DISABLE


	)

2347 
	#__CAN_CLK_ENABLE
 
__HAL_RCC_CAN1_CLK_ENABLE


	)

2348 
	#__CAN_FORCE_RESET
 
__HAL_RCC_CAN1_FORCE_RESET


	)

2349 
	#__CAN_RELEASE_RESET
 
__HAL_RCC_CAN1_RELEASE_RESET


	)

2350 
	#__CAN2_CLK_DISABLE
 
__HAL_RCC_CAN2_CLK_DISABLE


	)

2351 
	#__CAN2_CLK_ENABLE
 
__HAL_RCC_CAN2_CLK_ENABLE


	)

2352 
	#__CAN2_FORCE_RESET
 
__HAL_RCC_CAN2_FORCE_RESET


	)

2353 
	#__CAN2_RELEASE_RESET
 
__HAL_RCC_CAN2_RELEASE_RESET


	)

2354 
	#__CEC_CLK_DISABLE
 
__HAL_RCC_CEC_CLK_DISABLE


	)

2355 
	#__CEC_CLK_ENABLE
 
__HAL_RCC_CEC_CLK_ENABLE


	)

2356 
	#__COMP_CLK_DISABLE
 
__HAL_RCC_COMP_CLK_DISABLE


	)

2357 
	#__COMP_CLK_ENABLE
 
__HAL_RCC_COMP_CLK_ENABLE


	)

2358 
	#__COMP_FORCE_RESET
 
__HAL_RCC_COMP_FORCE_RESET


	)

2359 
	#__COMP_RELEASE_RESET
 
__HAL_RCC_COMP_RELEASE_RESET


	)

2360 
	#__COMP_CLK_SLEEP_ENABLE
 
__HAL_RCC_COMP_CLK_SLEEP_ENABLE


	)

2361 
	#__COMP_CLK_SLEEP_DISABLE
 
__HAL_RCC_COMP_CLK_SLEEP_DISABLE


	)

2362 
	#__CEC_FORCE_RESET
 
__HAL_RCC_CEC_FORCE_RESET


	)

2363 
	#__CEC_RELEASE_RESET
 
__HAL_RCC_CEC_RELEASE_RESET


	)

2364 
	#__CRC_CLK_DISABLE
 
__HAL_RCC_CRC_CLK_DISABLE


	)

2365 
	#__CRC_CLK_ENABLE
 
__HAL_RCC_CRC_CLK_ENABLE


	)

2366 
	#__CRC_CLK_SLEEP_DISABLE
 
__HAL_RCC_CRC_CLK_SLEEP_DISABLE


	)

2367 
	#__CRC_CLK_SLEEP_ENABLE
 
__HAL_RCC_CRC_CLK_SLEEP_ENABLE


	)

2368 
	#__CRC_FORCE_RESET
 
__HAL_RCC_CRC_FORCE_RESET


	)

2369 
	#__CRC_RELEASE_RESET
 
__HAL_RCC_CRC_RELEASE_RESET


	)

2370 
	#__DAC_CLK_DISABLE
 
__HAL_RCC_DAC_CLK_DISABLE


	)

2371 
	#__DAC_CLK_ENABLE
 
__HAL_RCC_DAC_CLK_ENABLE


	)

2372 
	#__DAC_FORCE_RESET
 
__HAL_RCC_DAC_FORCE_RESET


	)

2373 
	#__DAC_RELEASE_RESET
 
__HAL_RCC_DAC_RELEASE_RESET


	)

2374 
	#__DAC1_CLK_DISABLE
 
__HAL_RCC_DAC1_CLK_DISABLE


	)

2375 
	#__DAC1_CLK_ENABLE
 
__HAL_RCC_DAC1_CLK_ENABLE


	)

2376 
	#__DAC1_CLK_SLEEP_DISABLE
 
__HAL_RCC_DAC1_CLK_SLEEP_DISABLE


	)

2377 
	#__DAC1_CLK_SLEEP_ENABLE
 
__HAL_RCC_DAC1_CLK_SLEEP_ENABLE


	)

2378 
	#__DAC1_FORCE_RESET
 
__HAL_RCC_DAC1_FORCE_RESET


	)

2379 
	#__DAC1_RELEASE_RESET
 
__HAL_RCC_DAC1_RELEASE_RESET


	)

2380 
	#__DBGMCU_CLK_ENABLE
 
__HAL_RCC_DBGMCU_CLK_ENABLE


	)

2381 
	#__DBGMCU_CLK_DISABLE
 
__HAL_RCC_DBGMCU_CLK_DISABLE


	)

2382 
	#__DBGMCU_FORCE_RESET
 
__HAL_RCC_DBGMCU_FORCE_RESET


	)

2383 
	#__DBGMCU_RELEASE_RESET
 
__HAL_RCC_DBGMCU_RELEASE_RESET


	)

2384 
	#__DFSDM_CLK_DISABLE
 
__HAL_RCC_DFSDM_CLK_DISABLE


	)

2385 
	#__DFSDM_CLK_ENABLE
 
__HAL_RCC_DFSDM_CLK_ENABLE


	)

2386 
	#__DFSDM_CLK_SLEEP_DISABLE
 
__HAL_RCC_DFSDM_CLK_SLEEP_DISABLE


	)

2387 
	#__DFSDM_CLK_SLEEP_ENABLE
 
__HAL_RCC_DFSDM_CLK_SLEEP_ENABLE


	)

2388 
	#__DFSDM_FORCE_RESET
 
__HAL_RCC_DFSDM_FORCE_RESET


	)

2389 
	#__DFSDM_RELEASE_RESET
 
__HAL_RCC_DFSDM_RELEASE_RESET


	)

2390 
	#__DMA1_CLK_DISABLE
 
__HAL_RCC_DMA1_CLK_DISABLE


	)

2391 
	#__DMA1_CLK_ENABLE
 
__HAL_RCC_DMA1_CLK_ENABLE


	)

2392 
	#__DMA1_CLK_SLEEP_DISABLE
 
__HAL_RCC_DMA1_CLK_SLEEP_DISABLE


	)

2393 
	#__DMA1_CLK_SLEEP_ENABLE
 
__HAL_RCC_DMA1_CLK_SLEEP_ENABLE


	)

2394 
	#__DMA1_FORCE_RESET
 
__HAL_RCC_DMA1_FORCE_RESET


	)

2395 
	#__DMA1_RELEASE_RESET
 
__HAL_RCC_DMA1_RELEASE_RESET


	)

2396 
	#__DMA2_CLK_DISABLE
 
__HAL_RCC_DMA2_CLK_DISABLE


	)

2397 
	#__DMA2_CLK_ENABLE
 
__HAL_RCC_DMA2_CLK_ENABLE


	)

2398 
	#__DMA2_CLK_SLEEP_DISABLE
 
__HAL_RCC_DMA2_CLK_SLEEP_DISABLE


	)

2399 
	#__DMA2_CLK_SLEEP_ENABLE
 
__HAL_RCC_DMA2_CLK_SLEEP_ENABLE


	)

2400 
	#__DMA2_FORCE_RESET
 
__HAL_RCC_DMA2_FORCE_RESET


	)

2401 
	#__DMA2_RELEASE_RESET
 
__HAL_RCC_DMA2_RELEASE_RESET


	)

2402 
	#__ETHMAC_CLK_DISABLE
 
__HAL_RCC_ETHMAC_CLK_DISABLE


	)

2403 
	#__ETHMAC_CLK_ENABLE
 
__HAL_RCC_ETHMAC_CLK_ENABLE


	)

2404 
	#__ETHMAC_FORCE_RESET
 
__HAL_RCC_ETHMAC_FORCE_RESET


	)

2405 
	#__ETHMAC_RELEASE_RESET
 
__HAL_RCC_ETHMAC_RELEASE_RESET


	)

2406 
	#__ETHMACRX_CLK_DISABLE
 
__HAL_RCC_ETHMACRX_CLK_DISABLE


	)

2407 
	#__ETHMACRX_CLK_ENABLE
 
__HAL_RCC_ETHMACRX_CLK_ENABLE


	)

2408 
	#__ETHMACTX_CLK_DISABLE
 
__HAL_RCC_ETHMACTX_CLK_DISABLE


	)

2409 
	#__ETHMACTX_CLK_ENABLE
 
__HAL_RCC_ETHMACTX_CLK_ENABLE


	)

2410 
	#__FIREWALL_CLK_DISABLE
 
__HAL_RCC_FIREWALL_CLK_DISABLE


	)

2411 
	#__FIREWALL_CLK_ENABLE
 
__HAL_RCC_FIREWALL_CLK_ENABLE


	)

2412 
	#__FLASH_CLK_DISABLE
 
__HAL_RCC_FLASH_CLK_DISABLE


	)

2413 
	#__FLASH_CLK_ENABLE
 
__HAL_RCC_FLASH_CLK_ENABLE


	)

2414 
	#__FLASH_CLK_SLEEP_DISABLE
 
__HAL_RCC_FLASH_CLK_SLEEP_DISABLE


	)

2415 
	#__FLASH_CLK_SLEEP_ENABLE
 
__HAL_RCC_FLASH_CLK_SLEEP_ENABLE


	)

2416 
	#__FLASH_FORCE_RESET
 
__HAL_RCC_FLASH_FORCE_RESET


	)

2417 
	#__FLASH_RELEASE_RESET
 
__HAL_RCC_FLASH_RELEASE_RESET


	)

2418 
	#__FLITF_CLK_DISABLE
 
__HAL_RCC_FLITF_CLK_DISABLE


	)

2419 
	#__FLITF_CLK_ENABLE
 
__HAL_RCC_FLITF_CLK_ENABLE


	)

2420 
	#__FLITF_FORCE_RESET
 
__HAL_RCC_FLITF_FORCE_RESET


	)

2421 
	#__FLITF_RELEASE_RESET
 
__HAL_RCC_FLITF_RELEASE_RESET


	)

2422 
	#__FLITF_CLK_SLEEP_ENABLE
 
__HAL_RCC_FLITF_CLK_SLEEP_ENABLE


	)

2423 
	#__FLITF_CLK_SLEEP_DISABLE
 
__HAL_RCC_FLITF_CLK_SLEEP_DISABLE


	)

2424 
	#__FMC_CLK_DISABLE
 
__HAL_RCC_FMC_CLK_DISABLE


	)

2425 
	#__FMC_CLK_ENABLE
 
__HAL_RCC_FMC_CLK_ENABLE


	)

2426 
	#__FMC_CLK_SLEEP_DISABLE
 
__HAL_RCC_FMC_CLK_SLEEP_DISABLE


	)

2427 
	#__FMC_CLK_SLEEP_ENABLE
 
__HAL_RCC_FMC_CLK_SLEEP_ENABLE


	)

2428 
	#__FMC_FORCE_RESET
 
__HAL_RCC_FMC_FORCE_RESET


	)

2429 
	#__FMC_RELEASE_RESET
 
__HAL_RCC_FMC_RELEASE_RESET


	)

2430 
	#__FSMC_CLK_DISABLE
 
__HAL_RCC_FSMC_CLK_DISABLE


	)

2431 
	#__FSMC_CLK_ENABLE
 
__HAL_RCC_FSMC_CLK_ENABLE


	)

2432 
	#__GPIOA_CLK_DISABLE
 
__HAL_RCC_GPIOA_CLK_DISABLE


	)

2433 
	#__GPIOA_CLK_ENABLE
 
__HAL_RCC_GPIOA_CLK_ENABLE


	)

2434 
	#__GPIOA_CLK_SLEEP_DISABLE
 
__HAL_RCC_GPIOA_CLK_SLEEP_DISABLE


	)

2435 
	#__GPIOA_CLK_SLEEP_ENABLE
 
__HAL_RCC_GPIOA_CLK_SLEEP_ENABLE


	)

2436 
	#__GPIOA_FORCE_RESET
 
__HAL_RCC_GPIOA_FORCE_RESET


	)

2437 
	#__GPIOA_RELEASE_RESET
 
__HAL_RCC_GPIOA_RELEASE_RESET


	)

2438 
	#__GPIOB_CLK_DISABLE
 
__HAL_RCC_GPIOB_CLK_DISABLE


	)

2439 
	#__GPIOB_CLK_ENABLE
 
__HAL_RCC_GPIOB_CLK_ENABLE


	)

2440 
	#__GPIOB_CLK_SLEEP_DISABLE
 
__HAL_RCC_GPIOB_CLK_SLEEP_DISABLE


	)

2441 
	#__GPIOB_CLK_SLEEP_ENABLE
 
__HAL_RCC_GPIOB_CLK_SLEEP_ENABLE


	)

2442 
	#__GPIOB_FORCE_RESET
 
__HAL_RCC_GPIOB_FORCE_RESET


	)

2443 
	#__GPIOB_RELEASE_RESET
 
__HAL_RCC_GPIOB_RELEASE_RESET


	)

2444 
	#__GPIOC_CLK_DISABLE
 
__HAL_RCC_GPIOC_CLK_DISABLE


	)

2445 
	#__GPIOC_CLK_ENABLE
 
__HAL_RCC_GPIOC_CLK_ENABLE


	)

2446 
	#__GPIOC_CLK_SLEEP_DISABLE
 
__HAL_RCC_GPIOC_CLK_SLEEP_DISABLE


	)

2447 
	#__GPIOC_CLK_SLEEP_ENABLE
 
__HAL_RCC_GPIOC_CLK_SLEEP_ENABLE


	)

2448 
	#__GPIOC_FORCE_RESET
 
__HAL_RCC_GPIOC_FORCE_RESET


	)

2449 
	#__GPIOC_RELEASE_RESET
 
__HAL_RCC_GPIOC_RELEASE_RESET


	)

2450 
	#__GPIOD_CLK_DISABLE
 
__HAL_RCC_GPIOD_CLK_DISABLE


	)

2451 
	#__GPIOD_CLK_ENABLE
 
__HAL_RCC_GPIOD_CLK_ENABLE


	)

2452 
	#__GPIOD_CLK_SLEEP_DISABLE
 
__HAL_RCC_GPIOD_CLK_SLEEP_DISABLE


	)

2453 
	#__GPIOD_CLK_SLEEP_ENABLE
 
__HAL_RCC_GPIOD_CLK_SLEEP_ENABLE


	)

2454 
	#__GPIOD_FORCE_RESET
 
__HAL_RCC_GPIOD_FORCE_RESET


	)

2455 
	#__GPIOD_RELEASE_RESET
 
__HAL_RCC_GPIOD_RELEASE_RESET


	)

2456 
	#__GPIOE_CLK_DISABLE
 
__HAL_RCC_GPIOE_CLK_DISABLE


	)

2457 
	#__GPIOE_CLK_ENABLE
 
__HAL_RCC_GPIOE_CLK_ENABLE


	)

2458 
	#__GPIOE_CLK_SLEEP_DISABLE
 
__HAL_RCC_GPIOE_CLK_SLEEP_DISABLE


	)

2459 
	#__GPIOE_CLK_SLEEP_ENABLE
 
__HAL_RCC_GPIOE_CLK_SLEEP_ENABLE


	)

2460 
	#__GPIOE_FORCE_RESET
 
__HAL_RCC_GPIOE_FORCE_RESET


	)

2461 
	#__GPIOE_RELEASE_RESET
 
__HAL_RCC_GPIOE_RELEASE_RESET


	)

2462 
	#__GPIOF_CLK_DISABLE
 
__HAL_RCC_GPIOF_CLK_DISABLE


	)

2463 
	#__GPIOF_CLK_ENABLE
 
__HAL_RCC_GPIOF_CLK_ENABLE


	)

2464 
	#__GPIOF_CLK_SLEEP_DISABLE
 
__HAL_RCC_GPIOF_CLK_SLEEP_DISABLE


	)

2465 
	#__GPIOF_CLK_SLEEP_ENABLE
 
__HAL_RCC_GPIOF_CLK_SLEEP_ENABLE


	)

2466 
	#__GPIOF_FORCE_RESET
 
__HAL_RCC_GPIOF_FORCE_RESET


	)

2467 
	#__GPIOF_RELEASE_RESET
 
__HAL_RCC_GPIOF_RELEASE_RESET


	)

2468 
	#__GPIOG_CLK_DISABLE
 
__HAL_RCC_GPIOG_CLK_DISABLE


	)

2469 
	#__GPIOG_CLK_ENABLE
 
__HAL_RCC_GPIOG_CLK_ENABLE


	)

2470 
	#__GPIOG_CLK_SLEEP_DISABLE
 
__HAL_RCC_GPIOG_CLK_SLEEP_DISABLE


	)

2471 
	#__GPIOG_CLK_SLEEP_ENABLE
 
__HAL_RCC_GPIOG_CLK_SLEEP_ENABLE


	)

2472 
	#__GPIOG_FORCE_RESET
 
__HAL_RCC_GPIOG_FORCE_RESET


	)

2473 
	#__GPIOG_RELEASE_RESET
 
__HAL_RCC_GPIOG_RELEASE_RESET


	)

2474 
	#__GPIOH_CLK_DISABLE
 
__HAL_RCC_GPIOH_CLK_DISABLE


	)

2475 
	#__GPIOH_CLK_ENABLE
 
__HAL_RCC_GPIOH_CLK_ENABLE


	)

2476 
	#__GPIOH_CLK_SLEEP_DISABLE
 
__HAL_RCC_GPIOH_CLK_SLEEP_DISABLE


	)

2477 
	#__GPIOH_CLK_SLEEP_ENABLE
 
__HAL_RCC_GPIOH_CLK_SLEEP_ENABLE


	)

2478 
	#__GPIOH_FORCE_RESET
 
__HAL_RCC_GPIOH_FORCE_RESET


	)

2479 
	#__GPIOH_RELEASE_RESET
 
__HAL_RCC_GPIOH_RELEASE_RESET


	)

2480 
	#__I2C1_CLK_DISABLE
 
__HAL_RCC_I2C1_CLK_DISABLE


	)

2481 
	#__I2C1_CLK_ENABLE
 
__HAL_RCC_I2C1_CLK_ENABLE


	)

2482 
	#__I2C1_CLK_SLEEP_DISABLE
 
__HAL_RCC_I2C1_CLK_SLEEP_DISABLE


	)

2483 
	#__I2C1_CLK_SLEEP_ENABLE
 
__HAL_RCC_I2C1_CLK_SLEEP_ENABLE


	)

2484 
	#__I2C1_FORCE_RESET
 
__HAL_RCC_I2C1_FORCE_RESET


	)

2485 
	#__I2C1_RELEASE_RESET
 
__HAL_RCC_I2C1_RELEASE_RESET


	)

2486 
	#__I2C2_CLK_DISABLE
 
__HAL_RCC_I2C2_CLK_DISABLE


	)

2487 
	#__I2C2_CLK_ENABLE
 
__HAL_RCC_I2C2_CLK_ENABLE


	)

2488 
	#__I2C2_CLK_SLEEP_DISABLE
 
__HAL_RCC_I2C2_CLK_SLEEP_DISABLE


	)

2489 
	#__I2C2_CLK_SLEEP_ENABLE
 
__HAL_RCC_I2C2_CLK_SLEEP_ENABLE


	)

2490 
	#__I2C2_FORCE_RESET
 
__HAL_RCC_I2C2_FORCE_RESET


	)

2491 
	#__I2C2_RELEASE_RESET
 
__HAL_RCC_I2C2_RELEASE_RESET


	)

2492 
	#__I2C3_CLK_DISABLE
 
__HAL_RCC_I2C3_CLK_DISABLE


	)

2493 
	#__I2C3_CLK_ENABLE
 
__HAL_RCC_I2C3_CLK_ENABLE


	)

2494 
	#__I2C3_CLK_SLEEP_DISABLE
 
__HAL_RCC_I2C3_CLK_SLEEP_DISABLE


	)

2495 
	#__I2C3_CLK_SLEEP_ENABLE
 
__HAL_RCC_I2C3_CLK_SLEEP_ENABLE


	)

2496 
	#__I2C3_FORCE_RESET
 
__HAL_RCC_I2C3_FORCE_RESET


	)

2497 
	#__I2C3_RELEASE_RESET
 
__HAL_RCC_I2C3_RELEASE_RESET


	)

2498 
	#__LCD_CLK_DISABLE
 
__HAL_RCC_LCD_CLK_DISABLE


	)

2499 
	#__LCD_CLK_ENABLE
 
__HAL_RCC_LCD_CLK_ENABLE


	)

2500 
	#__LCD_CLK_SLEEP_DISABLE
 
__HAL_RCC_LCD_CLK_SLEEP_DISABLE


	)

2501 
	#__LCD_CLK_SLEEP_ENABLE
 
__HAL_RCC_LCD_CLK_SLEEP_ENABLE


	)

2502 
	#__LCD_FORCE_RESET
 
__HAL_RCC_LCD_FORCE_RESET


	)

2503 
	#__LCD_RELEASE_RESET
 
__HAL_RCC_LCD_RELEASE_RESET


	)

2504 
	#__LPTIM1_CLK_DISABLE
 
__HAL_RCC_LPTIM1_CLK_DISABLE


	)

2505 
	#__LPTIM1_CLK_ENABLE
 
__HAL_RCC_LPTIM1_CLK_ENABLE


	)

2506 
	#__LPTIM1_CLK_SLEEP_DISABLE
 
__HAL_RCC_LPTIM1_CLK_SLEEP_DISABLE


	)

2507 
	#__LPTIM1_CLK_SLEEP_ENABLE
 
__HAL_RCC_LPTIM1_CLK_SLEEP_ENABLE


	)

2508 
	#__LPTIM1_FORCE_RESET
 
__HAL_RCC_LPTIM1_FORCE_RESET


	)

2509 
	#__LPTIM1_RELEASE_RESET
 
__HAL_RCC_LPTIM1_RELEASE_RESET


	)

2510 
	#__LPTIM2_CLK_DISABLE
 
__HAL_RCC_LPTIM2_CLK_DISABLE


	)

2511 
	#__LPTIM2_CLK_ENABLE
 
__HAL_RCC_LPTIM2_CLK_ENABLE


	)

2512 
	#__LPTIM2_CLK_SLEEP_DISABLE
 
__HAL_RCC_LPTIM2_CLK_SLEEP_DISABLE


	)

2513 
	#__LPTIM2_CLK_SLEEP_ENABLE
 
__HAL_RCC_LPTIM2_CLK_SLEEP_ENABLE


	)

2514 
	#__LPTIM2_FORCE_RESET
 
__HAL_RCC_LPTIM2_FORCE_RESET


	)

2515 
	#__LPTIM2_RELEASE_RESET
 
__HAL_RCC_LPTIM2_RELEASE_RESET


	)

2516 
	#__LPUART1_CLK_DISABLE
 
__HAL_RCC_LPUART1_CLK_DISABLE


	)

2517 
	#__LPUART1_CLK_ENABLE
 
__HAL_RCC_LPUART1_CLK_ENABLE


	)

2518 
	#__LPUART1_CLK_SLEEP_DISABLE
 
__HAL_RCC_LPUART1_CLK_SLEEP_DISABLE


	)

2519 
	#__LPUART1_CLK_SLEEP_ENABLE
 
__HAL_RCC_LPUART1_CLK_SLEEP_ENABLE


	)

2520 
	#__LPUART1_FORCE_RESET
 
__HAL_RCC_LPUART1_FORCE_RESET


	)

2521 
	#__LPUART1_RELEASE_RESET
 
__HAL_RCC_LPUART1_RELEASE_RESET


	)

2522 
	#__OPAMP_CLK_DISABLE
 
__HAL_RCC_OPAMP_CLK_DISABLE


	)

2523 
	#__OPAMP_CLK_ENABLE
 
__HAL_RCC_OPAMP_CLK_ENABLE


	)

2524 
	#__OPAMP_CLK_SLEEP_DISABLE
 
__HAL_RCC_OPAMP_CLK_SLEEP_DISABLE


	)

2525 
	#__OPAMP_CLK_SLEEP_ENABLE
 
__HAL_RCC_OPAMP_CLK_SLEEP_ENABLE


	)

2526 
	#__OPAMP_FORCE_RESET
 
__HAL_RCC_OPAMP_FORCE_RESET


	)

2527 
	#__OPAMP_RELEASE_RESET
 
__HAL_RCC_OPAMP_RELEASE_RESET


	)

2528 
	#__OTGFS_CLK_DISABLE
 
__HAL_RCC_OTGFS_CLK_DISABLE


	)

2529 
	#__OTGFS_CLK_ENABLE
 
__HAL_RCC_OTGFS_CLK_ENABLE


	)

2530 
	#__OTGFS_CLK_SLEEP_DISABLE
 
__HAL_RCC_OTGFS_CLK_SLEEP_DISABLE


	)

2531 
	#__OTGFS_CLK_SLEEP_ENABLE
 
__HAL_RCC_OTGFS_CLK_SLEEP_ENABLE


	)

2532 
	#__OTGFS_FORCE_RESET
 
__HAL_RCC_OTGFS_FORCE_RESET


	)

2533 
	#__OTGFS_RELEASE_RESET
 
__HAL_RCC_OTGFS_RELEASE_RESET


	)

2534 
	#__PWR_CLK_DISABLE
 
__HAL_RCC_PWR_CLK_DISABLE


	)

2535 
	#__PWR_CLK_ENABLE
 
__HAL_RCC_PWR_CLK_ENABLE


	)

2536 
	#__PWR_CLK_SLEEP_DISABLE
 
__HAL_RCC_PWR_CLK_SLEEP_DISABLE


	)

2537 
	#__PWR_CLK_SLEEP_ENABLE
 
__HAL_RCC_PWR_CLK_SLEEP_ENABLE


	)

2538 
	#__PWR_FORCE_RESET
 
__HAL_RCC_PWR_FORCE_RESET


	)

2539 
	#__PWR_RELEASE_RESET
 
__HAL_RCC_PWR_RELEASE_RESET


	)

2540 
	#__QSPI_CLK_DISABLE
 
__HAL_RCC_QSPI_CLK_DISABLE


	)

2541 
	#__QSPI_CLK_ENABLE
 
__HAL_RCC_QSPI_CLK_ENABLE


	)

2542 
	#__QSPI_CLK_SLEEP_DISABLE
 
__HAL_RCC_QSPI_CLK_SLEEP_DISABLE


	)

2543 
	#__QSPI_CLK_SLEEP_ENABLE
 
__HAL_RCC_QSPI_CLK_SLEEP_ENABLE


	)

2544 
	#__QSPI_FORCE_RESET
 
__HAL_RCC_QSPI_FORCE_RESET


	)

2545 
	#__QSPI_RELEASE_RESET
 
__HAL_RCC_QSPI_RELEASE_RESET


	)

2547 #i‡
deföed
(
STM32WB
)

2548 
	#__HAL_RCC_QSPI_CLK_DISABLE
 
__HAL_RCC_QUADSPI_CLK_DISABLE


	)

2549 
	#__HAL_RCC_QSPI_CLK_ENABLE
 
__HAL_RCC_QUADSPI_CLK_ENABLE


	)

2550 
	#__HAL_RCC_QSPI_CLK_SLEEP_DISABLE
 
__HAL_RCC_QUADSPI_CLK_SLEEP_DISABLE


	)

2551 
	#__HAL_RCC_QSPI_CLK_SLEEP_ENABLE
 
__HAL_RCC_QUADSPI_CLK_SLEEP_ENABLE


	)

2552 
	#__HAL_RCC_QSPI_FORCE_RESET
 
__HAL_RCC_QUADSPI_FORCE_RESET


	)

2553 
	#__HAL_RCC_QSPI_RELEASE_RESET
 
__HAL_RCC_QUADSPI_RELEASE_RESET


	)

2554 
	#__HAL_RCC_QSPI_IS_CLK_ENABLED
 
__HAL_RCC_QUADSPI_IS_CLK_ENABLED


	)

2555 
	#__HAL_RCC_QSPI_IS_CLK_DISABLED
 
__HAL_RCC_QUADSPI_IS_CLK_DISABLED


	)

2556 
	#__HAL_RCC_QSPI_IS_CLK_SLEEP_ENABLED
 
__HAL_RCC_QUADSPI_IS_CLK_SLEEP_ENABLED


	)

2557 
	#__HAL_RCC_QSPI_IS_CLK_SLEEP_DISABLED
 
__HAL_RCC_QUADSPI_IS_CLK_SLEEP_DISABLED


	)

2558 
	#QSPI_IRQH™dÀr
 
QUADSPI_IRQH™dÀr


	)

2561 
	#__RNG_CLK_DISABLE
 
__HAL_RCC_RNG_CLK_DISABLE


	)

2562 
	#__RNG_CLK_ENABLE
 
__HAL_RCC_RNG_CLK_ENABLE


	)

2563 
	#__RNG_CLK_SLEEP_DISABLE
 
__HAL_RCC_RNG_CLK_SLEEP_DISABLE


	)

2564 
	#__RNG_CLK_SLEEP_ENABLE
 
__HAL_RCC_RNG_CLK_SLEEP_ENABLE


	)

2565 
	#__RNG_FORCE_RESET
 
__HAL_RCC_RNG_FORCE_RESET


	)

2566 
	#__RNG_RELEASE_RESET
 
__HAL_RCC_RNG_RELEASE_RESET


	)

2567 
	#__SAI1_CLK_DISABLE
 
__HAL_RCC_SAI1_CLK_DISABLE


	)

2568 
	#__SAI1_CLK_ENABLE
 
__HAL_RCC_SAI1_CLK_ENABLE


	)

2569 
	#__SAI1_CLK_SLEEP_DISABLE
 
__HAL_RCC_SAI1_CLK_SLEEP_DISABLE


	)

2570 
	#__SAI1_CLK_SLEEP_ENABLE
 
__HAL_RCC_SAI1_CLK_SLEEP_ENABLE


	)

2571 
	#__SAI1_FORCE_RESET
 
__HAL_RCC_SAI1_FORCE_RESET


	)

2572 
	#__SAI1_RELEASE_RESET
 
__HAL_RCC_SAI1_RELEASE_RESET


	)

2573 
	#__SAI2_CLK_DISABLE
 
__HAL_RCC_SAI2_CLK_DISABLE


	)

2574 
	#__SAI2_CLK_ENABLE
 
__HAL_RCC_SAI2_CLK_ENABLE


	)

2575 
	#__SAI2_CLK_SLEEP_DISABLE
 
__HAL_RCC_SAI2_CLK_SLEEP_DISABLE


	)

2576 
	#__SAI2_CLK_SLEEP_ENABLE
 
__HAL_RCC_SAI2_CLK_SLEEP_ENABLE


	)

2577 
	#__SAI2_FORCE_RESET
 
__HAL_RCC_SAI2_FORCE_RESET


	)

2578 
	#__SAI2_RELEASE_RESET
 
__HAL_RCC_SAI2_RELEASE_RESET


	)

2579 
	#__SDIO_CLK_DISABLE
 
__HAL_RCC_SDIO_CLK_DISABLE


	)

2580 
	#__SDIO_CLK_ENABLE
 
__HAL_RCC_SDIO_CLK_ENABLE


	)

2581 
	#__SDMMC_CLK_DISABLE
 
__HAL_RCC_SDMMC_CLK_DISABLE


	)

2582 
	#__SDMMC_CLK_ENABLE
 
__HAL_RCC_SDMMC_CLK_ENABLE


	)

2583 
	#__SDMMC_CLK_SLEEP_DISABLE
 
__HAL_RCC_SDMMC_CLK_SLEEP_DISABLE


	)

2584 
	#__SDMMC_CLK_SLEEP_ENABLE
 
__HAL_RCC_SDMMC_CLK_SLEEP_ENABLE


	)

2585 
	#__SDMMC_FORCE_RESET
 
__HAL_RCC_SDMMC_FORCE_RESET


	)

2586 
	#__SDMMC_RELEASE_RESET
 
__HAL_RCC_SDMMC_RELEASE_RESET


	)

2587 
	#__SPI1_CLK_DISABLE
 
__HAL_RCC_SPI1_CLK_DISABLE


	)

2588 
	#__SPI1_CLK_ENABLE
 
__HAL_RCC_SPI1_CLK_ENABLE


	)

2589 
	#__SPI1_CLK_SLEEP_DISABLE
 
__HAL_RCC_SPI1_CLK_SLEEP_DISABLE


	)

2590 
	#__SPI1_CLK_SLEEP_ENABLE
 
__HAL_RCC_SPI1_CLK_SLEEP_ENABLE


	)

2591 
	#__SPI1_FORCE_RESET
 
__HAL_RCC_SPI1_FORCE_RESET


	)

2592 
	#__SPI1_RELEASE_RESET
 
__HAL_RCC_SPI1_RELEASE_RESET


	)

2593 
	#__SPI2_CLK_DISABLE
 
__HAL_RCC_SPI2_CLK_DISABLE


	)

2594 
	#__SPI2_CLK_ENABLE
 
__HAL_RCC_SPI2_CLK_ENABLE


	)

2595 
	#__SPI2_CLK_SLEEP_DISABLE
 
__HAL_RCC_SPI2_CLK_SLEEP_DISABLE


	)

2596 
	#__SPI2_CLK_SLEEP_ENABLE
 
__HAL_RCC_SPI2_CLK_SLEEP_ENABLE


	)

2597 
	#__SPI2_FORCE_RESET
 
__HAL_RCC_SPI2_FORCE_RESET


	)

2598 
	#__SPI2_RELEASE_RESET
 
__HAL_RCC_SPI2_RELEASE_RESET


	)

2599 
	#__SPI3_CLK_DISABLE
 
__HAL_RCC_SPI3_CLK_DISABLE


	)

2600 
	#__SPI3_CLK_ENABLE
 
__HAL_RCC_SPI3_CLK_ENABLE


	)

2601 
	#__SPI3_CLK_SLEEP_DISABLE
 
__HAL_RCC_SPI3_CLK_SLEEP_DISABLE


	)

2602 
	#__SPI3_CLK_SLEEP_ENABLE
 
__HAL_RCC_SPI3_CLK_SLEEP_ENABLE


	)

2603 
	#__SPI3_FORCE_RESET
 
__HAL_RCC_SPI3_FORCE_RESET


	)

2604 
	#__SPI3_RELEASE_RESET
 
__HAL_RCC_SPI3_RELEASE_RESET


	)

2605 
	#__SRAM_CLK_DISABLE
 
__HAL_RCC_SRAM_CLK_DISABLE


	)

2606 
	#__SRAM_CLK_ENABLE
 
__HAL_RCC_SRAM_CLK_ENABLE


	)

2607 
	#__SRAM1_CLK_SLEEP_DISABLE
 
__HAL_RCC_SRAM1_CLK_SLEEP_DISABLE


	)

2608 
	#__SRAM1_CLK_SLEEP_ENABLE
 
__HAL_RCC_SRAM1_CLK_SLEEP_ENABLE


	)

2609 
	#__SRAM2_CLK_SLEEP_DISABLE
 
__HAL_RCC_SRAM2_CLK_SLEEP_DISABLE


	)

2610 
	#__SRAM2_CLK_SLEEP_ENABLE
 
__HAL_RCC_SRAM2_CLK_SLEEP_ENABLE


	)

2611 
	#__SWPMI1_CLK_DISABLE
 
__HAL_RCC_SWPMI1_CLK_DISABLE


	)

2612 
	#__SWPMI1_CLK_ENABLE
 
__HAL_RCC_SWPMI1_CLK_ENABLE


	)

2613 
	#__SWPMI1_CLK_SLEEP_DISABLE
 
__HAL_RCC_SWPMI1_CLK_SLEEP_DISABLE


	)

2614 
	#__SWPMI1_CLK_SLEEP_ENABLE
 
__HAL_RCC_SWPMI1_CLK_SLEEP_ENABLE


	)

2615 
	#__SWPMI1_FORCE_RESET
 
__HAL_RCC_SWPMI1_FORCE_RESET


	)

2616 
	#__SWPMI1_RELEASE_RESET
 
__HAL_RCC_SWPMI1_RELEASE_RESET


	)

2617 
	#__SYSCFG_CLK_DISABLE
 
__HAL_RCC_SYSCFG_CLK_DISABLE


	)

2618 
	#__SYSCFG_CLK_ENABLE
 
__HAL_RCC_SYSCFG_CLK_ENABLE


	)

2619 
	#__SYSCFG_CLK_SLEEP_DISABLE
 
__HAL_RCC_SYSCFG_CLK_SLEEP_DISABLE


	)

2620 
	#__SYSCFG_CLK_SLEEP_ENABLE
 
__HAL_RCC_SYSCFG_CLK_SLEEP_ENABLE


	)

2621 
	#__SYSCFG_FORCE_RESET
 
__HAL_RCC_SYSCFG_FORCE_RESET


	)

2622 
	#__SYSCFG_RELEASE_RESET
 
__HAL_RCC_SYSCFG_RELEASE_RESET


	)

2623 
	#__TIM1_CLK_DISABLE
 
__HAL_RCC_TIM1_CLK_DISABLE


	)

2624 
	#__TIM1_CLK_ENABLE
 
__HAL_RCC_TIM1_CLK_ENABLE


	)

2625 
	#__TIM1_CLK_SLEEP_DISABLE
 
__HAL_RCC_TIM1_CLK_SLEEP_DISABLE


	)

2626 
	#__TIM1_CLK_SLEEP_ENABLE
 
__HAL_RCC_TIM1_CLK_SLEEP_ENABLE


	)

2627 
	#__TIM1_FORCE_RESET
 
__HAL_RCC_TIM1_FORCE_RESET


	)

2628 
	#__TIM1_RELEASE_RESET
 
__HAL_RCC_TIM1_RELEASE_RESET


	)

2629 
	#__TIM10_CLK_DISABLE
 
__HAL_RCC_TIM10_CLK_DISABLE


	)

2630 
	#__TIM10_CLK_ENABLE
 
__HAL_RCC_TIM10_CLK_ENABLE


	)

2631 
	#__TIM10_FORCE_RESET
 
__HAL_RCC_TIM10_FORCE_RESET


	)

2632 
	#__TIM10_RELEASE_RESET
 
__HAL_RCC_TIM10_RELEASE_RESET


	)

2633 
	#__TIM11_CLK_DISABLE
 
__HAL_RCC_TIM11_CLK_DISABLE


	)

2634 
	#__TIM11_CLK_ENABLE
 
__HAL_RCC_TIM11_CLK_ENABLE


	)

2635 
	#__TIM11_FORCE_RESET
 
__HAL_RCC_TIM11_FORCE_RESET


	)

2636 
	#__TIM11_RELEASE_RESET
 
__HAL_RCC_TIM11_RELEASE_RESET


	)

2637 
	#__TIM12_CLK_DISABLE
 
__HAL_RCC_TIM12_CLK_DISABLE


	)

2638 
	#__TIM12_CLK_ENABLE
 
__HAL_RCC_TIM12_CLK_ENABLE


	)

2639 
	#__TIM12_FORCE_RESET
 
__HAL_RCC_TIM12_FORCE_RESET


	)

2640 
	#__TIM12_RELEASE_RESET
 
__HAL_RCC_TIM12_RELEASE_RESET


	)

2641 
	#__TIM13_CLK_DISABLE
 
__HAL_RCC_TIM13_CLK_DISABLE


	)

2642 
	#__TIM13_CLK_ENABLE
 
__HAL_RCC_TIM13_CLK_ENABLE


	)

2643 
	#__TIM13_FORCE_RESET
 
__HAL_RCC_TIM13_FORCE_RESET


	)

2644 
	#__TIM13_RELEASE_RESET
 
__HAL_RCC_TIM13_RELEASE_RESET


	)

2645 
	#__TIM14_CLK_DISABLE
 
__HAL_RCC_TIM14_CLK_DISABLE


	)

2646 
	#__TIM14_CLK_ENABLE
 
__HAL_RCC_TIM14_CLK_ENABLE


	)

2647 
	#__TIM14_FORCE_RESET
 
__HAL_RCC_TIM14_FORCE_RESET


	)

2648 
	#__TIM14_RELEASE_RESET
 
__HAL_RCC_TIM14_RELEASE_RESET


	)

2649 
	#__TIM15_CLK_DISABLE
 
__HAL_RCC_TIM15_CLK_DISABLE


	)

2650 
	#__TIM15_CLK_ENABLE
 
__HAL_RCC_TIM15_CLK_ENABLE


	)

2651 
	#__TIM15_CLK_SLEEP_DISABLE
 
__HAL_RCC_TIM15_CLK_SLEEP_DISABLE


	)

2652 
	#__TIM15_CLK_SLEEP_ENABLE
 
__HAL_RCC_TIM15_CLK_SLEEP_ENABLE


	)

2653 
	#__TIM15_FORCE_RESET
 
__HAL_RCC_TIM15_FORCE_RESET


	)

2654 
	#__TIM15_RELEASE_RESET
 
__HAL_RCC_TIM15_RELEASE_RESET


	)

2655 
	#__TIM16_CLK_DISABLE
 
__HAL_RCC_TIM16_CLK_DISABLE


	)

2656 
	#__TIM16_CLK_ENABLE
 
__HAL_RCC_TIM16_CLK_ENABLE


	)

2657 
	#__TIM16_CLK_SLEEP_DISABLE
 
__HAL_RCC_TIM16_CLK_SLEEP_DISABLE


	)

2658 
	#__TIM16_CLK_SLEEP_ENABLE
 
__HAL_RCC_TIM16_CLK_SLEEP_ENABLE


	)

2659 
	#__TIM16_FORCE_RESET
 
__HAL_RCC_TIM16_FORCE_RESET


	)

2660 
	#__TIM16_RELEASE_RESET
 
__HAL_RCC_TIM16_RELEASE_RESET


	)

2661 
	#__TIM17_CLK_DISABLE
 
__HAL_RCC_TIM17_CLK_DISABLE


	)

2662 
	#__TIM17_CLK_ENABLE
 
__HAL_RCC_TIM17_CLK_ENABLE


	)

2663 
	#__TIM17_CLK_SLEEP_DISABLE
 
__HAL_RCC_TIM17_CLK_SLEEP_DISABLE


	)

2664 
	#__TIM17_CLK_SLEEP_ENABLE
 
__HAL_RCC_TIM17_CLK_SLEEP_ENABLE


	)

2665 
	#__TIM17_FORCE_RESET
 
__HAL_RCC_TIM17_FORCE_RESET


	)

2666 
	#__TIM17_RELEASE_RESET
 
__HAL_RCC_TIM17_RELEASE_RESET


	)

2667 
	#__TIM2_CLK_DISABLE
 
__HAL_RCC_TIM2_CLK_DISABLE


	)

2668 
	#__TIM2_CLK_ENABLE
 
__HAL_RCC_TIM2_CLK_ENABLE


	)

2669 
	#__TIM2_CLK_SLEEP_DISABLE
 
__HAL_RCC_TIM2_CLK_SLEEP_DISABLE


	)

2670 
	#__TIM2_CLK_SLEEP_ENABLE
 
__HAL_RCC_TIM2_CLK_SLEEP_ENABLE


	)

2671 
	#__TIM2_FORCE_RESET
 
__HAL_RCC_TIM2_FORCE_RESET


	)

2672 
	#__TIM2_RELEASE_RESET
 
__HAL_RCC_TIM2_RELEASE_RESET


	)

2673 
	#__TIM3_CLK_DISABLE
 
__HAL_RCC_TIM3_CLK_DISABLE


	)

2674 
	#__TIM3_CLK_ENABLE
 
__HAL_RCC_TIM3_CLK_ENABLE


	)

2675 
	#__TIM3_CLK_SLEEP_DISABLE
 
__HAL_RCC_TIM3_CLK_SLEEP_DISABLE


	)

2676 
	#__TIM3_CLK_SLEEP_ENABLE
 
__HAL_RCC_TIM3_CLK_SLEEP_ENABLE


	)

2677 
	#__TIM3_FORCE_RESET
 
__HAL_RCC_TIM3_FORCE_RESET


	)

2678 
	#__TIM3_RELEASE_RESET
 
__HAL_RCC_TIM3_RELEASE_RESET


	)

2679 
	#__TIM4_CLK_DISABLE
 
__HAL_RCC_TIM4_CLK_DISABLE


	)

2680 
	#__TIM4_CLK_ENABLE
 
__HAL_RCC_TIM4_CLK_ENABLE


	)

2681 
	#__TIM4_CLK_SLEEP_DISABLE
 
__HAL_RCC_TIM4_CLK_SLEEP_DISABLE


	)

2682 
	#__TIM4_CLK_SLEEP_ENABLE
 
__HAL_RCC_TIM4_CLK_SLEEP_ENABLE


	)

2683 
	#__TIM4_FORCE_RESET
 
__HAL_RCC_TIM4_FORCE_RESET


	)

2684 
	#__TIM4_RELEASE_RESET
 
__HAL_RCC_TIM4_RELEASE_RESET


	)

2685 
	#__TIM5_CLK_DISABLE
 
__HAL_RCC_TIM5_CLK_DISABLE


	)

2686 
	#__TIM5_CLK_ENABLE
 
__HAL_RCC_TIM5_CLK_ENABLE


	)

2687 
	#__TIM5_CLK_SLEEP_DISABLE
 
__HAL_RCC_TIM5_CLK_SLEEP_DISABLE


	)

2688 
	#__TIM5_CLK_SLEEP_ENABLE
 
__HAL_RCC_TIM5_CLK_SLEEP_ENABLE


	)

2689 
	#__TIM5_FORCE_RESET
 
__HAL_RCC_TIM5_FORCE_RESET


	)

2690 
	#__TIM5_RELEASE_RESET
 
__HAL_RCC_TIM5_RELEASE_RESET


	)

2691 
	#__TIM6_CLK_DISABLE
 
__HAL_RCC_TIM6_CLK_DISABLE


	)

2692 
	#__TIM6_CLK_ENABLE
 
__HAL_RCC_TIM6_CLK_ENABLE


	)

2693 
	#__TIM6_CLK_SLEEP_DISABLE
 
__HAL_RCC_TIM6_CLK_SLEEP_DISABLE


	)

2694 
	#__TIM6_CLK_SLEEP_ENABLE
 
__HAL_RCC_TIM6_CLK_SLEEP_ENABLE


	)

2695 
	#__TIM6_FORCE_RESET
 
__HAL_RCC_TIM6_FORCE_RESET


	)

2696 
	#__TIM6_RELEASE_RESET
 
__HAL_RCC_TIM6_RELEASE_RESET


	)

2697 
	#__TIM7_CLK_DISABLE
 
__HAL_RCC_TIM7_CLK_DISABLE


	)

2698 
	#__TIM7_CLK_ENABLE
 
__HAL_RCC_TIM7_CLK_ENABLE


	)

2699 
	#__TIM7_CLK_SLEEP_DISABLE
 
__HAL_RCC_TIM7_CLK_SLEEP_DISABLE


	)

2700 
	#__TIM7_CLK_SLEEP_ENABLE
 
__HAL_RCC_TIM7_CLK_SLEEP_ENABLE


	)

2701 
	#__TIM7_FORCE_RESET
 
__HAL_RCC_TIM7_FORCE_RESET


	)

2702 
	#__TIM7_RELEASE_RESET
 
__HAL_RCC_TIM7_RELEASE_RESET


	)

2703 
	#__TIM8_CLK_DISABLE
 
__HAL_RCC_TIM8_CLK_DISABLE


	)

2704 
	#__TIM8_CLK_ENABLE
 
__HAL_RCC_TIM8_CLK_ENABLE


	)

2705 
	#__TIM8_CLK_SLEEP_DISABLE
 
__HAL_RCC_TIM8_CLK_SLEEP_DISABLE


	)

2706 
	#__TIM8_CLK_SLEEP_ENABLE
 
__HAL_RCC_TIM8_CLK_SLEEP_ENABLE


	)

2707 
	#__TIM8_FORCE_RESET
 
__HAL_RCC_TIM8_FORCE_RESET


	)

2708 
	#__TIM8_RELEASE_RESET
 
__HAL_RCC_TIM8_RELEASE_RESET


	)

2709 
	#__TIM9_CLK_DISABLE
 
__HAL_RCC_TIM9_CLK_DISABLE


	)

2710 
	#__TIM9_CLK_ENABLE
 
__HAL_RCC_TIM9_CLK_ENABLE


	)

2711 
	#__TIM9_FORCE_RESET
 
__HAL_RCC_TIM9_FORCE_RESET


	)

2712 
	#__TIM9_RELEASE_RESET
 
__HAL_RCC_TIM9_RELEASE_RESET


	)

2713 
	#__TSC_CLK_DISABLE
 
__HAL_RCC_TSC_CLK_DISABLE


	)

2714 
	#__TSC_CLK_ENABLE
 
__HAL_RCC_TSC_CLK_ENABLE


	)

2715 
	#__TSC_CLK_SLEEP_DISABLE
 
__HAL_RCC_TSC_CLK_SLEEP_DISABLE


	)

2716 
	#__TSC_CLK_SLEEP_ENABLE
 
__HAL_RCC_TSC_CLK_SLEEP_ENABLE


	)

2717 
	#__TSC_FORCE_RESET
 
__HAL_RCC_TSC_FORCE_RESET


	)

2718 
	#__TSC_RELEASE_RESET
 
__HAL_RCC_TSC_RELEASE_RESET


	)

2719 
	#__UART4_CLK_DISABLE
 
__HAL_RCC_UART4_CLK_DISABLE


	)

2720 
	#__UART4_CLK_ENABLE
 
__HAL_RCC_UART4_CLK_ENABLE


	)

2721 
	#__UART4_CLK_SLEEP_DISABLE
 
__HAL_RCC_UART4_CLK_SLEEP_DISABLE


	)

2722 
	#__UART4_CLK_SLEEP_ENABLE
 
__HAL_RCC_UART4_CLK_SLEEP_ENABLE


	)

2723 
	#__UART4_FORCE_RESET
 
__HAL_RCC_UART4_FORCE_RESET


	)

2724 
	#__UART4_RELEASE_RESET
 
__HAL_RCC_UART4_RELEASE_RESET


	)

2725 
	#__UART5_CLK_DISABLE
 
__HAL_RCC_UART5_CLK_DISABLE


	)

2726 
	#__UART5_CLK_ENABLE
 
__HAL_RCC_UART5_CLK_ENABLE


	)

2727 
	#__UART5_CLK_SLEEP_DISABLE
 
__HAL_RCC_UART5_CLK_SLEEP_DISABLE


	)

2728 
	#__UART5_CLK_SLEEP_ENABLE
 
__HAL_RCC_UART5_CLK_SLEEP_ENABLE


	)

2729 
	#__UART5_FORCE_RESET
 
__HAL_RCC_UART5_FORCE_RESET


	)

2730 
	#__UART5_RELEASE_RESET
 
__HAL_RCC_UART5_RELEASE_RESET


	)

2731 
	#__USART1_CLK_DISABLE
 
__HAL_RCC_USART1_CLK_DISABLE


	)

2732 
	#__USART1_CLK_ENABLE
 
__HAL_RCC_USART1_CLK_ENABLE


	)

2733 
	#__USART1_CLK_SLEEP_DISABLE
 
__HAL_RCC_USART1_CLK_SLEEP_DISABLE


	)

2734 
	#__USART1_CLK_SLEEP_ENABLE
 
__HAL_RCC_USART1_CLK_SLEEP_ENABLE


	)

2735 
	#__USART1_FORCE_RESET
 
__HAL_RCC_USART1_FORCE_RESET


	)

2736 
	#__USART1_RELEASE_RESET
 
__HAL_RCC_USART1_RELEASE_RESET


	)

2737 
	#__USART2_CLK_DISABLE
 
__HAL_RCC_USART2_CLK_DISABLE


	)

2738 
	#__USART2_CLK_ENABLE
 
__HAL_RCC_USART2_CLK_ENABLE


	)

2739 
	#__USART2_CLK_SLEEP_DISABLE
 
__HAL_RCC_USART2_CLK_SLEEP_DISABLE


	)

2740 
	#__USART2_CLK_SLEEP_ENABLE
 
__HAL_RCC_USART2_CLK_SLEEP_ENABLE


	)

2741 
	#__USART2_FORCE_RESET
 
__HAL_RCC_USART2_FORCE_RESET


	)

2742 
	#__USART2_RELEASE_RESET
 
__HAL_RCC_USART2_RELEASE_RESET


	)

2743 
	#__USART3_CLK_DISABLE
 
__HAL_RCC_USART3_CLK_DISABLE


	)

2744 
	#__USART3_CLK_ENABLE
 
__HAL_RCC_USART3_CLK_ENABLE


	)

2745 
	#__USART3_CLK_SLEEP_DISABLE
 
__HAL_RCC_USART3_CLK_SLEEP_DISABLE


	)

2746 
	#__USART3_CLK_SLEEP_ENABLE
 
__HAL_RCC_USART3_CLK_SLEEP_ENABLE


	)

2747 
	#__USART3_FORCE_RESET
 
__HAL_RCC_USART3_FORCE_RESET


	)

2748 
	#__USART3_RELEASE_RESET
 
__HAL_RCC_USART3_RELEASE_RESET


	)

2749 
	#__USART4_CLK_DISABLE
 
__HAL_RCC_UART4_CLK_DISABLE


	)

2750 
	#__USART4_CLK_ENABLE
 
__HAL_RCC_UART4_CLK_ENABLE


	)

2751 
	#__USART4_CLK_SLEEP_ENABLE
 
__HAL_RCC_UART4_CLK_SLEEP_ENABLE


	)

2752 
	#__USART4_CLK_SLEEP_DISABLE
 
__HAL_RCC_UART4_CLK_SLEEP_DISABLE


	)

2753 
	#__USART4_FORCE_RESET
 
__HAL_RCC_UART4_FORCE_RESET


	)

2754 
	#__USART4_RELEASE_RESET
 
__HAL_RCC_UART4_RELEASE_RESET


	)

2755 
	#__USART5_CLK_DISABLE
 
__HAL_RCC_UART5_CLK_DISABLE


	)

2756 
	#__USART5_CLK_ENABLE
 
__HAL_RCC_UART5_CLK_ENABLE


	)

2757 
	#__USART5_CLK_SLEEP_ENABLE
 
__HAL_RCC_UART5_CLK_SLEEP_ENABLE


	)

2758 
	#__USART5_CLK_SLEEP_DISABLE
 
__HAL_RCC_UART5_CLK_SLEEP_DISABLE


	)

2759 
	#__USART5_FORCE_RESET
 
__HAL_RCC_UART5_FORCE_RESET


	)

2760 
	#__USART5_RELEASE_RESET
 
__HAL_RCC_UART5_RELEASE_RESET


	)

2761 
	#__USART7_CLK_DISABLE
 
__HAL_RCC_UART7_CLK_DISABLE


	)

2762 
	#__USART7_CLK_ENABLE
 
__HAL_RCC_UART7_CLK_ENABLE


	)

2763 
	#__USART7_FORCE_RESET
 
__HAL_RCC_UART7_FORCE_RESET


	)

2764 
	#__USART7_RELEASE_RESET
 
__HAL_RCC_UART7_RELEASE_RESET


	)

2765 
	#__USART8_CLK_DISABLE
 
__HAL_RCC_UART8_CLK_DISABLE


	)

2766 
	#__USART8_CLK_ENABLE
 
__HAL_RCC_UART8_CLK_ENABLE


	)

2767 
	#__USART8_FORCE_RESET
 
__HAL_RCC_UART8_FORCE_RESET


	)

2768 
	#__USART8_RELEASE_RESET
 
__HAL_RCC_UART8_RELEASE_RESET


	)

2769 
	#__USB_CLK_DISABLE
 
__HAL_RCC_USB_CLK_DISABLE


	)

2770 
	#__USB_CLK_ENABLE
 
__HAL_RCC_USB_CLK_ENABLE


	)

2771 
	#__USB_FORCE_RESET
 
__HAL_RCC_USB_FORCE_RESET


	)

2772 
	#__USB_CLK_SLEEP_ENABLE
 
__HAL_RCC_USB_CLK_SLEEP_ENABLE


	)

2773 
	#__USB_CLK_SLEEP_DISABLE
 
__HAL_RCC_USB_CLK_SLEEP_DISABLE


	)

2774 
	#__USB_OTG_FS_CLK_DISABLE
 
__HAL_RCC_USB_OTG_FS_CLK_DISABLE


	)

2775 
	#__USB_OTG_FS_CLK_ENABLE
 
__HAL_RCC_USB_OTG_FS_CLK_ENABLE


	)

2776 
	#__USB_RELEASE_RESET
 
__HAL_RCC_USB_RELEASE_RESET


	)

2778 #i‡
deföed
(
STM32H7
)

2779 
	#__HAL_RCC_WWDG_CLK_DISABLE
 
__HAL_RCC_WWDG1_CLK_DISABLE


	)

2780 
	#__HAL_RCC_WWDG_CLK_ENABLE
 
__HAL_RCC_WWDG1_CLK_ENABLE


	)

2781 
	#__HAL_RCC_WWDG_CLK_SLEEP_DISABLE
 
__HAL_RCC_WWDG1_CLK_SLEEP_DISABLE


	)

2782 
	#__HAL_RCC_WWDG_CLK_SLEEP_ENABLE
 
__HAL_RCC_WWDG1_CLK_SLEEP_ENABLE


	)

2784 
	#__HAL_RCC_WWDG_FORCE_RESET
 (()0UË

	)

2785 
	#__HAL_RCC_WWDG_RELEASE_RESET
 (()0UË

	)

2788 
	#__HAL_RCC_WWDG_IS_CLK_ENABLED
 
__HAL_RCC_WWDG1_IS_CLK_ENABLED


	)

2789 
	#__HAL_RCC_WWDG_IS_CLK_DISABLED
 
__HAL_RCC_WWDG1_IS_CLK_DISABLED


	)

2792 
	#__WWDG_CLK_DISABLE
 
__HAL_RCC_WWDG_CLK_DISABLE


	)

2793 
	#__WWDG_CLK_ENABLE
 
__HAL_RCC_WWDG_CLK_ENABLE


	)

2794 
	#__WWDG_CLK_SLEEP_DISABLE
 
__HAL_RCC_WWDG_CLK_SLEEP_DISABLE


	)

2795 
	#__WWDG_CLK_SLEEP_ENABLE
 
__HAL_RCC_WWDG_CLK_SLEEP_ENABLE


	)

2796 
	#__WWDG_FORCE_RESET
 
__HAL_RCC_WWDG_FORCE_RESET


	)

2797 
	#__WWDG_RELEASE_RESET
 
__HAL_RCC_WWDG_RELEASE_RESET


	)

2799 
	#__TIM21_CLK_ENABLE
 
__HAL_RCC_TIM21_CLK_ENABLE


	)

2800 
	#__TIM21_CLK_DISABLE
 
__HAL_RCC_TIM21_CLK_DISABLE


	)

2801 
	#__TIM21_FORCE_RESET
 
__HAL_RCC_TIM21_FORCE_RESET


	)

2802 
	#__TIM21_RELEASE_RESET
 
__HAL_RCC_TIM21_RELEASE_RESET


	)

2803 
	#__TIM21_CLK_SLEEP_ENABLE
 
__HAL_RCC_TIM21_CLK_SLEEP_ENABLE


	)

2804 
	#__TIM21_CLK_SLEEP_DISABLE
 
__HAL_RCC_TIM21_CLK_SLEEP_DISABLE


	)

2805 
	#__TIM22_CLK_ENABLE
 
__HAL_RCC_TIM22_CLK_ENABLE


	)

2806 
	#__TIM22_CLK_DISABLE
 
__HAL_RCC_TIM22_CLK_DISABLE


	)

2807 
	#__TIM22_FORCE_RESET
 
__HAL_RCC_TIM22_FORCE_RESET


	)

2808 
	#__TIM22_RELEASE_RESET
 
__HAL_RCC_TIM22_RELEASE_RESET


	)

2809 
	#__TIM22_CLK_SLEEP_ENABLE
 
__HAL_RCC_TIM22_CLK_SLEEP_ENABLE


	)

2810 
	#__TIM22_CLK_SLEEP_DISABLE
 
__HAL_RCC_TIM22_CLK_SLEEP_DISABLE


	)

2811 
	#__CRS_CLK_DISABLE
 
__HAL_RCC_CRS_CLK_DISABLE


	)

2812 
	#__CRS_CLK_ENABLE
 
__HAL_RCC_CRS_CLK_ENABLE


	)

2813 
	#__CRS_CLK_SLEEP_DISABLE
 
__HAL_RCC_CRS_CLK_SLEEP_DISABLE


	)

2814 
	#__CRS_CLK_SLEEP_ENABLE
 
__HAL_RCC_CRS_CLK_SLEEP_ENABLE


	)

2815 
	#__CRS_FORCE_RESET
 
__HAL_RCC_CRS_FORCE_RESET


	)

2816 
	#__CRS_RELEASE_RESET
 
__HAL_RCC_CRS_RELEASE_RESET


	)

2817 
	#__RCC_BACKUPRESET_FORCE
 
__HAL_RCC_BACKUPRESET_FORCE


	)

2818 
	#__RCC_BACKUPRESET_RELEASE
 
__HAL_RCC_BACKUPRESET_RELEASE


	)

2820 
	#__USB_OTG_FS_FORCE_RESET
 
__HAL_RCC_USB_OTG_FS_FORCE_RESET


	)

2821 
	#__USB_OTG_FS_RELEASE_RESET
 
__HAL_RCC_USB_OTG_FS_RELEASE_RESET


	)

2822 
	#__USB_OTG_FS_CLK_SLEEP_ENABLE
 
__HAL_RCC_USB_OTG_FS_CLK_SLEEP_ENABLE


	)

2823 
	#__USB_OTG_FS_CLK_SLEEP_DISABLE
 
__HAL_RCC_USB_OTG_FS_CLK_SLEEP_DISABLE


	)

2824 
	#__USB_OTG_HS_CLK_DISABLE
 
__HAL_RCC_USB_OTG_HS_CLK_DISABLE


	)

2825 
	#__USB_OTG_HS_CLK_ENABLE
 
__HAL_RCC_USB_OTG_HS_CLK_ENABLE


	)

2826 
	#__USB_OTG_HS_ULPI_CLK_ENABLE
 
__HAL_RCC_USB_OTG_HS_ULPI_CLK_ENABLE


	)

2827 
	#__USB_OTG_HS_ULPI_CLK_DISABLE
 
__HAL_RCC_USB_OTG_HS_ULPI_CLK_DISABLE


	)

2828 
	#__TIM9_CLK_SLEEP_ENABLE
 
__HAL_RCC_TIM9_CLK_SLEEP_ENABLE


	)

2829 
	#__TIM9_CLK_SLEEP_DISABLE
 
__HAL_RCC_TIM9_CLK_SLEEP_DISABLE


	)

2830 
	#__TIM10_CLK_SLEEP_ENABLE
 
__HAL_RCC_TIM10_CLK_SLEEP_ENABLE


	)

2831 
	#__TIM10_CLK_SLEEP_DISABLE
 
__HAL_RCC_TIM10_CLK_SLEEP_DISABLE


	)

2832 
	#__TIM11_CLK_SLEEP_ENABLE
 
__HAL_RCC_TIM11_CLK_SLEEP_ENABLE


	)

2833 
	#__TIM11_CLK_SLEEP_DISABLE
 
__HAL_RCC_TIM11_CLK_SLEEP_DISABLE


	)

2834 
	#__ETHMACPTP_CLK_SLEEP_ENABLE
 
__HAL_RCC_ETHMACPTP_CLK_SLEEP_ENABLE


	)

2835 
	#__ETHMACPTP_CLK_SLEEP_DISABLE
 
__HAL_RCC_ETHMACPTP_CLK_SLEEP_DISABLE


	)

2836 
	#__ETHMACPTP_CLK_ENABLE
 
__HAL_RCC_ETHMACPTP_CLK_ENABLE


	)

2837 
	#__ETHMACPTP_CLK_DISABLE
 
__HAL_RCC_ETHMACPTP_CLK_DISABLE


	)

2838 
	#__HASH_CLK_ENABLE
 
__HAL_RCC_HASH_CLK_ENABLE


	)

2839 
	#__HASH_FORCE_RESET
 
__HAL_RCC_HASH_FORCE_RESET


	)

2840 
	#__HASH_RELEASE_RESET
 
__HAL_RCC_HASH_RELEASE_RESET


	)

2841 
	#__HASH_CLK_SLEEP_ENABLE
 
__HAL_RCC_HASH_CLK_SLEEP_ENABLE


	)

2842 
	#__HASH_CLK_SLEEP_DISABLE
 
__HAL_RCC_HASH_CLK_SLEEP_DISABLE


	)

2843 
	#__HASH_CLK_DISABLE
 
__HAL_RCC_HASH_CLK_DISABLE


	)

2844 
	#__SPI5_CLK_ENABLE
 
__HAL_RCC_SPI5_CLK_ENABLE


	)

2845 
	#__SPI5_CLK_DISABLE
 
__HAL_RCC_SPI5_CLK_DISABLE


	)

2846 
	#__SPI5_FORCE_RESET
 
__HAL_RCC_SPI5_FORCE_RESET


	)

2847 
	#__SPI5_RELEASE_RESET
 
__HAL_RCC_SPI5_RELEASE_RESET


	)

2848 
	#__SPI5_CLK_SLEEP_ENABLE
 
__HAL_RCC_SPI5_CLK_SLEEP_ENABLE


	)

2849 
	#__SPI5_CLK_SLEEP_DISABLE
 
__HAL_RCC_SPI5_CLK_SLEEP_DISABLE


	)

2850 
	#__SPI6_CLK_ENABLE
 
__HAL_RCC_SPI6_CLK_ENABLE


	)

2851 
	#__SPI6_CLK_DISABLE
 
__HAL_RCC_SPI6_CLK_DISABLE


	)

2852 
	#__SPI6_FORCE_RESET
 
__HAL_RCC_SPI6_FORCE_RESET


	)

2853 
	#__SPI6_RELEASE_RESET
 
__HAL_RCC_SPI6_RELEASE_RESET


	)

2854 
	#__SPI6_CLK_SLEEP_ENABLE
 
__HAL_RCC_SPI6_CLK_SLEEP_ENABLE


	)

2855 
	#__SPI6_CLK_SLEEP_DISABLE
 
__HAL_RCC_SPI6_CLK_SLEEP_DISABLE


	)

2856 
	#__LTDC_CLK_ENABLE
 
__HAL_RCC_LTDC_CLK_ENABLE


	)

2857 
	#__LTDC_CLK_DISABLE
 
__HAL_RCC_LTDC_CLK_DISABLE


	)

2858 
	#__LTDC_FORCE_RESET
 
__HAL_RCC_LTDC_FORCE_RESET


	)

2859 
	#__LTDC_RELEASE_RESET
 
__HAL_RCC_LTDC_RELEASE_RESET


	)

2860 
	#__LTDC_CLK_SLEEP_ENABLE
 
__HAL_RCC_LTDC_CLK_SLEEP_ENABLE


	)

2861 
	#__ETHMAC_CLK_SLEEP_ENABLE
 
__HAL_RCC_ETHMAC_CLK_SLEEP_ENABLE


	)

2862 
	#__ETHMAC_CLK_SLEEP_DISABLE
 
__HAL_RCC_ETHMAC_CLK_SLEEP_DISABLE


	)

2863 
	#__ETHMACTX_CLK_SLEEP_ENABLE
 
__HAL_RCC_ETHMACTX_CLK_SLEEP_ENABLE


	)

2864 
	#__ETHMACTX_CLK_SLEEP_DISABLE
 
__HAL_RCC_ETHMACTX_CLK_SLEEP_DISABLE


	)

2865 
	#__ETHMACRX_CLK_SLEEP_ENABLE
 
__HAL_RCC_ETHMACRX_CLK_SLEEP_ENABLE


	)

2866 
	#__ETHMACRX_CLK_SLEEP_DISABLE
 
__HAL_RCC_ETHMACRX_CLK_SLEEP_DISABLE


	)

2867 
	#__TIM12_CLK_SLEEP_ENABLE
 
__HAL_RCC_TIM12_CLK_SLEEP_ENABLE


	)

2868 
	#__TIM12_CLK_SLEEP_DISABLE
 
__HAL_RCC_TIM12_CLK_SLEEP_DISABLE


	)

2869 
	#__TIM13_CLK_SLEEP_ENABLE
 
__HAL_RCC_TIM13_CLK_SLEEP_ENABLE


	)

2870 
	#__TIM13_CLK_SLEEP_DISABLE
 
__HAL_RCC_TIM13_CLK_SLEEP_DISABLE


	)

2871 
	#__TIM14_CLK_SLEEP_ENABLE
 
__HAL_RCC_TIM14_CLK_SLEEP_ENABLE


	)

2872 
	#__TIM14_CLK_SLEEP_DISABLE
 
__HAL_RCC_TIM14_CLK_SLEEP_DISABLE


	)

2873 
	#__BKPSRAM_CLK_ENABLE
 
__HAL_RCC_BKPSRAM_CLK_ENABLE


	)

2874 
	#__BKPSRAM_CLK_DISABLE
 
__HAL_RCC_BKPSRAM_CLK_DISABLE


	)

2875 
	#__BKPSRAM_CLK_SLEEP_ENABLE
 
__HAL_RCC_BKPSRAM_CLK_SLEEP_ENABLE


	)

2876 
	#__BKPSRAM_CLK_SLEEP_DISABLE
 
__HAL_RCC_BKPSRAM_CLK_SLEEP_DISABLE


	)

2877 
	#__CCMDATARAMEN_CLK_ENABLE
 
__HAL_RCC_CCMDATARAMEN_CLK_ENABLE


	)

2878 
	#__CCMDATARAMEN_CLK_DISABLE
 
__HAL_RCC_CCMDATARAMEN_CLK_DISABLE


	)

2879 
	#__USART6_CLK_ENABLE
 
__HAL_RCC_USART6_CLK_ENABLE


	)

2880 
	#__USART6_CLK_DISABLE
 
__HAL_RCC_USART6_CLK_DISABLE


	)

2881 
	#__USART6_FORCE_RESET
 
__HAL_RCC_USART6_FORCE_RESET


	)

2882 
	#__USART6_RELEASE_RESET
 
__HAL_RCC_USART6_RELEASE_RESET


	)

2883 
	#__USART6_CLK_SLEEP_ENABLE
 
__HAL_RCC_USART6_CLK_SLEEP_ENABLE


	)

2884 
	#__USART6_CLK_SLEEP_DISABLE
 
__HAL_RCC_USART6_CLK_SLEEP_DISABLE


	)

2885 
	#__SPI4_CLK_ENABLE
 
__HAL_RCC_SPI4_CLK_ENABLE


	)

2886 
	#__SPI4_CLK_DISABLE
 
__HAL_RCC_SPI4_CLK_DISABLE


	)

2887 
	#__SPI4_FORCE_RESET
 
__HAL_RCC_SPI4_FORCE_RESET


	)

2888 
	#__SPI4_RELEASE_RESET
 
__HAL_RCC_SPI4_RELEASE_RESET


	)

2889 
	#__SPI4_CLK_SLEEP_ENABLE
 
__HAL_RCC_SPI4_CLK_SLEEP_ENABLE


	)

2890 
	#__SPI4_CLK_SLEEP_DISABLE
 
__HAL_RCC_SPI4_CLK_SLEEP_DISABLE


	)

2891 
	#__GPIOI_CLK_ENABLE
 
__HAL_RCC_GPIOI_CLK_ENABLE


	)

2892 
	#__GPIOI_CLK_DISABLE
 
__HAL_RCC_GPIOI_CLK_DISABLE


	)

2893 
	#__GPIOI_FORCE_RESET
 
__HAL_RCC_GPIOI_FORCE_RESET


	)

2894 
	#__GPIOI_RELEASE_RESET
 
__HAL_RCC_GPIOI_RELEASE_RESET


	)

2895 
	#__GPIOI_CLK_SLEEP_ENABLE
 
__HAL_RCC_GPIOI_CLK_SLEEP_ENABLE


	)

2896 
	#__GPIOI_CLK_SLEEP_DISABLE
 
__HAL_RCC_GPIOI_CLK_SLEEP_DISABLE


	)

2897 
	#__GPIOJ_CLK_ENABLE
 
__HAL_RCC_GPIOJ_CLK_ENABLE


	)

2898 
	#__GPIOJ_CLK_DISABLE
 
__HAL_RCC_GPIOJ_CLK_DISABLE


	)

2899 
	#__GPIOJ_FORCE_RESET
 
__HAL_RCC_GPIOJ_FORCE_RESET


	)

2900 
	#__GPIOJ_RELEASE_RESET
 
__HAL_RCC_GPIOJ_RELEASE_RESET


	)

2901 
	#__GPIOJ_CLK_SLEEP_ENABLE
 
__HAL_RCC_GPIOJ_CLK_SLEEP_ENABLE


	)

2902 
	#__GPIOJ_CLK_SLEEP_DISABLE
 
__HAL_RCC_GPIOJ_CLK_SLEEP_DISABLE


	)

2903 
	#__GPIOK_CLK_ENABLE
 
__HAL_RCC_GPIOK_CLK_ENABLE


	)

2904 
	#__GPIOK_CLK_DISABLE
 
__HAL_RCC_GPIOK_CLK_DISABLE


	)

2905 
	#__GPIOK_RELEASE_RESET
 
__HAL_RCC_GPIOK_RELEASE_RESET


	)

2906 
	#__GPIOK_CLK_SLEEP_ENABLE
 
__HAL_RCC_GPIOK_CLK_SLEEP_ENABLE


	)

2907 
	#__GPIOK_CLK_SLEEP_DISABLE
 
__HAL_RCC_GPIOK_CLK_SLEEP_DISABLE


	)

2908 
	#__ETH_CLK_ENABLE
 
__HAL_RCC_ETH_CLK_ENABLE


	)

2909 
	#__ETH_CLK_DISABLE
 
__HAL_RCC_ETH_CLK_DISABLE


	)

2910 
	#__DCMI_CLK_ENABLE
 
__HAL_RCC_DCMI_CLK_ENABLE


	)

2911 
	#__DCMI_CLK_DISABLE
 
__HAL_RCC_DCMI_CLK_DISABLE


	)

2912 
	#__DCMI_FORCE_RESET
 
__HAL_RCC_DCMI_FORCE_RESET


	)

2913 
	#__DCMI_RELEASE_RESET
 
__HAL_RCC_DCMI_RELEASE_RESET


	)

2914 
	#__DCMI_CLK_SLEEP_ENABLE
 
__HAL_RCC_DCMI_CLK_SLEEP_ENABLE


	)

2915 
	#__DCMI_CLK_SLEEP_DISABLE
 
__HAL_RCC_DCMI_CLK_SLEEP_DISABLE


	)

2916 
	#__UART7_CLK_ENABLE
 
__HAL_RCC_UART7_CLK_ENABLE


	)

2917 
	#__UART7_CLK_DISABLE
 
__HAL_RCC_UART7_CLK_DISABLE


	)

2918 
	#__UART7_RELEASE_RESET
 
__HAL_RCC_UART7_RELEASE_RESET


	)

2919 
	#__UART7_FORCE_RESET
 
__HAL_RCC_UART7_FORCE_RESET


	)

2920 
	#__UART7_CLK_SLEEP_ENABLE
 
__HAL_RCC_UART7_CLK_SLEEP_ENABLE


	)

2921 
	#__UART7_CLK_SLEEP_DISABLE
 
__HAL_RCC_UART7_CLK_SLEEP_DISABLE


	)

2922 
	#__UART8_CLK_ENABLE
 
__HAL_RCC_UART8_CLK_ENABLE


	)

2923 
	#__UART8_CLK_DISABLE
 
__HAL_RCC_UART8_CLK_DISABLE


	)

2924 
	#__UART8_FORCE_RESET
 
__HAL_RCC_UART8_FORCE_RESET


	)

2925 
	#__UART8_RELEASE_RESET
 
__HAL_RCC_UART8_RELEASE_RESET


	)

2926 
	#__UART8_CLK_SLEEP_ENABLE
 
__HAL_RCC_UART8_CLK_SLEEP_ENABLE


	)

2927 
	#__UART8_CLK_SLEEP_DISABLE
 
__HAL_RCC_UART8_CLK_SLEEP_DISABLE


	)

2928 
	#__OTGHS_CLK_SLEEP_ENABLE
 
__HAL_RCC_USB_OTG_HS_CLK_SLEEP_ENABLE


	)

2929 
	#__OTGHS_CLK_SLEEP_DISABLE
 
__HAL_RCC_USB_OTG_HS_CLK_SLEEP_DISABLE


	)

2930 
	#__OTGHS_FORCE_RESET
 
__HAL_RCC_USB_OTG_HS_FORCE_RESET


	)

2931 
	#__OTGHS_RELEASE_RESET
 
__HAL_RCC_USB_OTG_HS_RELEASE_RESET


	)

2932 
	#__OTGHSULPI_CLK_SLEEP_ENABLE
 
__HAL_RCC_USB_OTG_HS_ULPI_CLK_SLEEP_ENABLE


	)

2933 
	#__OTGHSULPI_CLK_SLEEP_DISABLE
 
__HAL_RCC_USB_OTG_HS_ULPI_CLK_SLEEP_DISABLE


	)

2934 
	#__HAL_RCC_OTGHS_CLK_SLEEP_ENABLE
 
__HAL_RCC_USB_OTG_HS_CLK_SLEEP_ENABLE


	)

2935 
	#__HAL_RCC_OTGHS_CLK_SLEEP_DISABLE
 
__HAL_RCC_USB_OTG_HS_CLK_SLEEP_DISABLE


	)

2936 
	#__HAL_RCC_OTGHS_IS_CLK_SLEEP_ENABLED
 
__HAL_RCC_USB_OTG_HS_IS_CLK_SLEEP_ENABLED


	)

2937 
	#__HAL_RCC_OTGHS_IS_CLK_SLEEP_DISABLED
 
__HAL_RCC_USB_OTG_HS_IS_CLK_SLEEP_DISABLED


	)

2938 
	#__HAL_RCC_OTGHS_FORCE_RESET
 
__HAL_RCC_USB_OTG_HS_FORCE_RESET


	)

2939 
	#__HAL_RCC_OTGHS_RELEASE_RESET
 
__HAL_RCC_USB_OTG_HS_RELEASE_RESET


	)

2940 
	#__HAL_RCC_OTGHSULPI_CLK_SLEEP_ENABLE
 
__HAL_RCC_USB_OTG_HS_ULPI_CLK_SLEEP_ENABLE


	)

2941 
	#__HAL_RCC_OTGHSULPI_CLK_SLEEP_DISABLE
 
__HAL_RCC_USB_OTG_HS_ULPI_CLK_SLEEP_DISABLE


	)

2942 
	#__HAL_RCC_OTGHSULPI_IS_CLK_SLEEP_ENABLED
 
__HAL_RCC_USB_OTG_HS_ULPI_IS_CLK_SLEEP_ENABLED


	)

2943 
	#__HAL_RCC_OTGHSULPI_IS_CLK_SLEEP_DISABLED
 
__HAL_RCC_USB_OTG_HS_ULPI_IS_CLK_SLEEP_DISABLED


	)

2944 
	#__SRAM3_CLK_SLEEP_ENABLE
 
__HAL_RCC_SRAM3_CLK_SLEEP_ENABLE


	)

2945 
	#__CAN2_CLK_SLEEP_ENABLE
 
__HAL_RCC_CAN2_CLK_SLEEP_ENABLE


	)

2946 
	#__CAN2_CLK_SLEEP_DISABLE
 
__HAL_RCC_CAN2_CLK_SLEEP_DISABLE


	)

2947 
	#__DAC_CLK_SLEEP_ENABLE
 
__HAL_RCC_DAC_CLK_SLEEP_ENABLE


	)

2948 
	#__DAC_CLK_SLEEP_DISABLE
 
__HAL_RCC_DAC_CLK_SLEEP_DISABLE


	)

2949 
	#__ADC2_CLK_SLEEP_ENABLE
 
__HAL_RCC_ADC2_CLK_SLEEP_ENABLE


	)

2950 
	#__ADC2_CLK_SLEEP_DISABLE
 
__HAL_RCC_ADC2_CLK_SLEEP_DISABLE


	)

2951 
	#__ADC3_CLK_SLEEP_ENABLE
 
__HAL_RCC_ADC3_CLK_SLEEP_ENABLE


	)

2952 
	#__ADC3_CLK_SLEEP_DISABLE
 
__HAL_RCC_ADC3_CLK_SLEEP_DISABLE


	)

2953 
	#__FSMC_FORCE_RESET
 
__HAL_RCC_FSMC_FORCE_RESET


	)

2954 
	#__FSMC_RELEASE_RESET
 
__HAL_RCC_FSMC_RELEASE_RESET


	)

2955 
	#__FSMC_CLK_SLEEP_ENABLE
 
__HAL_RCC_FSMC_CLK_SLEEP_ENABLE


	)

2956 
	#__FSMC_CLK_SLEEP_DISABLE
 
__HAL_RCC_FSMC_CLK_SLEEP_DISABLE


	)

2957 
	#__SDIO_FORCE_RESET
 
__HAL_RCC_SDIO_FORCE_RESET


	)

2958 
	#__SDIO_RELEASE_RESET
 
__HAL_RCC_SDIO_RELEASE_RESET


	)

2959 
	#__SDIO_CLK_SLEEP_DISABLE
 
__HAL_RCC_SDIO_CLK_SLEEP_DISABLE


	)

2960 
	#__SDIO_CLK_SLEEP_ENABLE
 
__HAL_RCC_SDIO_CLK_SLEEP_ENABLE


	)

2961 
	#__DMA2D_CLK_ENABLE
 
__HAL_RCC_DMA2D_CLK_ENABLE


	)

2962 
	#__DMA2D_CLK_DISABLE
 
__HAL_RCC_DMA2D_CLK_DISABLE


	)

2963 
	#__DMA2D_FORCE_RESET
 
__HAL_RCC_DMA2D_FORCE_RESET


	)

2964 
	#__DMA2D_RELEASE_RESET
 
__HAL_RCC_DMA2D_RELEASE_RESET


	)

2965 
	#__DMA2D_CLK_SLEEP_ENABLE
 
__HAL_RCC_DMA2D_CLK_SLEEP_ENABLE


	)

2966 
	#__DMA2D_CLK_SLEEP_DISABLE
 
__HAL_RCC_DMA2D_CLK_SLEEP_DISABLE


	)

2969 
	#__HAL_RCC_OTGFS_FORCE_RESET
 
__HAL_RCC_USB_OTG_FS_FORCE_RESET


	)

2970 
	#__HAL_RCC_OTGFS_RELEASE_RESET
 
__HAL_RCC_USB_OTG_FS_RELEASE_RESET


	)

2972 
	#__ADC12_CLK_ENABLE
 
__HAL_RCC_ADC12_CLK_ENABLE


	)

2973 
	#__ADC12_CLK_DISABLE
 
__HAL_RCC_ADC12_CLK_DISABLE


	)

2974 
	#__ADC34_CLK_ENABLE
 
__HAL_RCC_ADC34_CLK_ENABLE


	)

2975 
	#__ADC34_CLK_DISABLE
 
__HAL_RCC_ADC34_CLK_DISABLE


	)

2976 
	#__DAC2_CLK_ENABLE
 
__HAL_RCC_DAC2_CLK_ENABLE


	)

2977 
	#__DAC2_CLK_DISABLE
 
__HAL_RCC_DAC2_CLK_DISABLE


	)

2978 
	#__TIM18_CLK_ENABLE
 
__HAL_RCC_TIM18_CLK_ENABLE


	)

2979 
	#__TIM18_CLK_DISABLE
 
__HAL_RCC_TIM18_CLK_DISABLE


	)

2980 
	#__TIM19_CLK_ENABLE
 
__HAL_RCC_TIM19_CLK_ENABLE


	)

2981 
	#__TIM19_CLK_DISABLE
 
__HAL_RCC_TIM19_CLK_DISABLE


	)

2982 
	#__TIM20_CLK_ENABLE
 
__HAL_RCC_TIM20_CLK_ENABLE


	)

2983 
	#__TIM20_CLK_DISABLE
 
__HAL_RCC_TIM20_CLK_DISABLE


	)

2984 
	#__HRTIM1_CLK_ENABLE
 
__HAL_RCC_HRTIM1_CLK_ENABLE


	)

2985 
	#__HRTIM1_CLK_DISABLE
 
__HAL_RCC_HRTIM1_CLK_DISABLE


	)

2986 
	#__SDADC1_CLK_ENABLE
 
__HAL_RCC_SDADC1_CLK_ENABLE


	)

2987 
	#__SDADC2_CLK_ENABLE
 
__HAL_RCC_SDADC2_CLK_ENABLE


	)

2988 
	#__SDADC3_CLK_ENABLE
 
__HAL_RCC_SDADC3_CLK_ENABLE


	)

2989 
	#__SDADC1_CLK_DISABLE
 
__HAL_RCC_SDADC1_CLK_DISABLE


	)

2990 
	#__SDADC2_CLK_DISABLE
 
__HAL_RCC_SDADC2_CLK_DISABLE


	)

2991 
	#__SDADC3_CLK_DISABLE
 
__HAL_RCC_SDADC3_CLK_DISABLE


	)

2993 
	#__ADC12_FORCE_RESET
 
__HAL_RCC_ADC12_FORCE_RESET


	)

2994 
	#__ADC12_RELEASE_RESET
 
__HAL_RCC_ADC12_RELEASE_RESET


	)

2995 
	#__ADC34_FORCE_RESET
 
__HAL_RCC_ADC34_FORCE_RESET


	)

2996 
	#__ADC34_RELEASE_RESET
 
__HAL_RCC_ADC34_RELEASE_RESET


	)

2997 
	#__DAC2_FORCE_RESET
 
__HAL_RCC_DAC2_FORCE_RESET


	)

2998 
	#__DAC2_RELEASE_RESET
 
__HAL_RCC_DAC2_RELEASE_RESET


	)

2999 
	#__TIM18_FORCE_RESET
 
__HAL_RCC_TIM18_FORCE_RESET


	)

3000 
	#__TIM18_RELEASE_RESET
 
__HAL_RCC_TIM18_RELEASE_RESET


	)

3001 
	#__TIM19_FORCE_RESET
 
__HAL_RCC_TIM19_FORCE_RESET


	)

3002 
	#__TIM19_RELEASE_RESET
 
__HAL_RCC_TIM19_RELEASE_RESET


	)

3003 
	#__TIM20_FORCE_RESET
 
__HAL_RCC_TIM20_FORCE_RESET


	)

3004 
	#__TIM20_RELEASE_RESET
 
__HAL_RCC_TIM20_RELEASE_RESET


	)

3005 
	#__HRTIM1_FORCE_RESET
 
__HAL_RCC_HRTIM1_FORCE_RESET


	)

3006 
	#__HRTIM1_RELEASE_RESET
 
__HAL_RCC_HRTIM1_RELEASE_RESET


	)

3007 
	#__SDADC1_FORCE_RESET
 
__HAL_RCC_SDADC1_FORCE_RESET


	)

3008 
	#__SDADC2_FORCE_RESET
 
__HAL_RCC_SDADC2_FORCE_RESET


	)

3009 
	#__SDADC3_FORCE_RESET
 
__HAL_RCC_SDADC3_FORCE_RESET


	)

3010 
	#__SDADC1_RELEASE_RESET
 
__HAL_RCC_SDADC1_RELEASE_RESET


	)

3011 
	#__SDADC2_RELEASE_RESET
 
__HAL_RCC_SDADC2_RELEASE_RESET


	)

3012 
	#__SDADC3_RELEASE_RESET
 
__HAL_RCC_SDADC3_RELEASE_RESET


	)

3014 
	#__ADC1_IS_CLK_ENABLED
 
__HAL_RCC_ADC1_IS_CLK_ENABLED


	)

3015 
	#__ADC1_IS_CLK_DISABLED
 
__HAL_RCC_ADC1_IS_CLK_DISABLED


	)

3016 
	#__ADC12_IS_CLK_ENABLED
 
__HAL_RCC_ADC12_IS_CLK_ENABLED


	)

3017 
	#__ADC12_IS_CLK_DISABLED
 
__HAL_RCC_ADC12_IS_CLK_DISABLED


	)

3018 
	#__ADC34_IS_CLK_ENABLED
 
__HAL_RCC_ADC34_IS_CLK_ENABLED


	)

3019 
	#__ADC34_IS_CLK_DISABLED
 
__HAL_RCC_ADC34_IS_CLK_DISABLED


	)

3020 
	#__CEC_IS_CLK_ENABLED
 
__HAL_RCC_CEC_IS_CLK_ENABLED


	)

3021 
	#__CEC_IS_CLK_DISABLED
 
__HAL_RCC_CEC_IS_CLK_DISABLED


	)

3022 
	#__CRC_IS_CLK_ENABLED
 
__HAL_RCC_CRC_IS_CLK_ENABLED


	)

3023 
	#__CRC_IS_CLK_DISABLED
 
__HAL_RCC_CRC_IS_CLK_DISABLED


	)

3024 
	#__DAC1_IS_CLK_ENABLED
 
__HAL_RCC_DAC1_IS_CLK_ENABLED


	)

3025 
	#__DAC1_IS_CLK_DISABLED
 
__HAL_RCC_DAC1_IS_CLK_DISABLED


	)

3026 
	#__DAC2_IS_CLK_ENABLED
 
__HAL_RCC_DAC2_IS_CLK_ENABLED


	)

3027 
	#__DAC2_IS_CLK_DISABLED
 
__HAL_RCC_DAC2_IS_CLK_DISABLED


	)

3028 
	#__DMA1_IS_CLK_ENABLED
 
__HAL_RCC_DMA1_IS_CLK_ENABLED


	)

3029 
	#__DMA1_IS_CLK_DISABLED
 
__HAL_RCC_DMA1_IS_CLK_DISABLED


	)

3030 
	#__DMA2_IS_CLK_ENABLED
 
__HAL_RCC_DMA2_IS_CLK_ENABLED


	)

3031 
	#__DMA2_IS_CLK_DISABLED
 
__HAL_RCC_DMA2_IS_CLK_DISABLED


	)

3032 
	#__FLITF_IS_CLK_ENABLED
 
__HAL_RCC_FLITF_IS_CLK_ENABLED


	)

3033 
	#__FLITF_IS_CLK_DISABLED
 
__HAL_RCC_FLITF_IS_CLK_DISABLED


	)

3034 
	#__FMC_IS_CLK_ENABLED
 
__HAL_RCC_FMC_IS_CLK_ENABLED


	)

3035 
	#__FMC_IS_CLK_DISABLED
 
__HAL_RCC_FMC_IS_CLK_DISABLED


	)

3036 
	#__GPIOA_IS_CLK_ENABLED
 
__HAL_RCC_GPIOA_IS_CLK_ENABLED


	)

3037 
	#__GPIOA_IS_CLK_DISABLED
 
__HAL_RCC_GPIOA_IS_CLK_DISABLED


	)

3038 
	#__GPIOB_IS_CLK_ENABLED
 
__HAL_RCC_GPIOB_IS_CLK_ENABLED


	)

3039 
	#__GPIOB_IS_CLK_DISABLED
 
__HAL_RCC_GPIOB_IS_CLK_DISABLED


	)

3040 
	#__GPIOC_IS_CLK_ENABLED
 
__HAL_RCC_GPIOC_IS_CLK_ENABLED


	)

3041 
	#__GPIOC_IS_CLK_DISABLED
 
__HAL_RCC_GPIOC_IS_CLK_DISABLED


	)

3042 
	#__GPIOD_IS_CLK_ENABLED
 
__HAL_RCC_GPIOD_IS_CLK_ENABLED


	)

3043 
	#__GPIOD_IS_CLK_DISABLED
 
__HAL_RCC_GPIOD_IS_CLK_DISABLED


	)

3044 
	#__GPIOE_IS_CLK_ENABLED
 
__HAL_RCC_GPIOE_IS_CLK_ENABLED


	)

3045 
	#__GPIOE_IS_CLK_DISABLED
 
__HAL_RCC_GPIOE_IS_CLK_DISABLED


	)

3046 
	#__GPIOF_IS_CLK_ENABLED
 
__HAL_RCC_GPIOF_IS_CLK_ENABLED


	)

3047 
	#__GPIOF_IS_CLK_DISABLED
 
__HAL_RCC_GPIOF_IS_CLK_DISABLED


	)

3048 
	#__GPIOG_IS_CLK_ENABLED
 
__HAL_RCC_GPIOG_IS_CLK_ENABLED


	)

3049 
	#__GPIOG_IS_CLK_DISABLED
 
__HAL_RCC_GPIOG_IS_CLK_DISABLED


	)

3050 
	#__GPIOH_IS_CLK_ENABLED
 
__HAL_RCC_GPIOH_IS_CLK_ENABLED


	)

3051 
	#__GPIOH_IS_CLK_DISABLED
 
__HAL_RCC_GPIOH_IS_CLK_DISABLED


	)

3052 
	#__HRTIM1_IS_CLK_ENABLED
 
__HAL_RCC_HRTIM1_IS_CLK_ENABLED


	)

3053 
	#__HRTIM1_IS_CLK_DISABLED
 
__HAL_RCC_HRTIM1_IS_CLK_DISABLED


	)

3054 
	#__I2C1_IS_CLK_ENABLED
 
__HAL_RCC_I2C1_IS_CLK_ENABLED


	)

3055 
	#__I2C1_IS_CLK_DISABLED
 
__HAL_RCC_I2C1_IS_CLK_DISABLED


	)

3056 
	#__I2C2_IS_CLK_ENABLED
 
__HAL_RCC_I2C2_IS_CLK_ENABLED


	)

3057 
	#__I2C2_IS_CLK_DISABLED
 
__HAL_RCC_I2C2_IS_CLK_DISABLED


	)

3058 
	#__I2C3_IS_CLK_ENABLED
 
__HAL_RCC_I2C3_IS_CLK_ENABLED


	)

3059 
	#__I2C3_IS_CLK_DISABLED
 
__HAL_RCC_I2C3_IS_CLK_DISABLED


	)

3060 
	#__PWR_IS_CLK_ENABLED
 
__HAL_RCC_PWR_IS_CLK_ENABLED


	)

3061 
	#__PWR_IS_CLK_DISABLED
 
__HAL_RCC_PWR_IS_CLK_DISABLED


	)

3062 
	#__SYSCFG_IS_CLK_ENABLED
 
__HAL_RCC_SYSCFG_IS_CLK_ENABLED


	)

3063 
	#__SYSCFG_IS_CLK_DISABLED
 
__HAL_RCC_SYSCFG_IS_CLK_DISABLED


	)

3064 
	#__SPI1_IS_CLK_ENABLED
 
__HAL_RCC_SPI1_IS_CLK_ENABLED


	)

3065 
	#__SPI1_IS_CLK_DISABLED
 
__HAL_RCC_SPI1_IS_CLK_DISABLED


	)

3066 
	#__SPI2_IS_CLK_ENABLED
 
__HAL_RCC_SPI2_IS_CLK_ENABLED


	)

3067 
	#__SPI2_IS_CLK_DISABLED
 
__HAL_RCC_SPI2_IS_CLK_DISABLED


	)

3068 
	#__SPI3_IS_CLK_ENABLED
 
__HAL_RCC_SPI3_IS_CLK_ENABLED


	)

3069 
	#__SPI3_IS_CLK_DISABLED
 
__HAL_RCC_SPI3_IS_CLK_DISABLED


	)

3070 
	#__SPI4_IS_CLK_ENABLED
 
__HAL_RCC_SPI4_IS_CLK_ENABLED


	)

3071 
	#__SPI4_IS_CLK_DISABLED
 
__HAL_RCC_SPI4_IS_CLK_DISABLED


	)

3072 
	#__SDADC1_IS_CLK_ENABLED
 
__HAL_RCC_SDADC1_IS_CLK_ENABLED


	)

3073 
	#__SDADC1_IS_CLK_DISABLED
 
__HAL_RCC_SDADC1_IS_CLK_DISABLED


	)

3074 
	#__SDADC2_IS_CLK_ENABLED
 
__HAL_RCC_SDADC2_IS_CLK_ENABLED


	)

3075 
	#__SDADC2_IS_CLK_DISABLED
 
__HAL_RCC_SDADC2_IS_CLK_DISABLED


	)

3076 
	#__SDADC3_IS_CLK_ENABLED
 
__HAL_RCC_SDADC3_IS_CLK_ENABLED


	)

3077 
	#__SDADC3_IS_CLK_DISABLED
 
__HAL_RCC_SDADC3_IS_CLK_DISABLED


	)

3078 
	#__SRAM_IS_CLK_ENABLED
 
__HAL_RCC_SRAM_IS_CLK_ENABLED


	)

3079 
	#__SRAM_IS_CLK_DISABLED
 
__HAL_RCC_SRAM_IS_CLK_DISABLED


	)

3080 
	#__TIM1_IS_CLK_ENABLED
 
__HAL_RCC_TIM1_IS_CLK_ENABLED


	)

3081 
	#__TIM1_IS_CLK_DISABLED
 
__HAL_RCC_TIM1_IS_CLK_DISABLED


	)

3082 
	#__TIM2_IS_CLK_ENABLED
 
__HAL_RCC_TIM2_IS_CLK_ENABLED


	)

3083 
	#__TIM2_IS_CLK_DISABLED
 
__HAL_RCC_TIM2_IS_CLK_DISABLED


	)

3084 
	#__TIM3_IS_CLK_ENABLED
 
__HAL_RCC_TIM3_IS_CLK_ENABLED


	)

3085 
	#__TIM3_IS_CLK_DISABLED
 
__HAL_RCC_TIM3_IS_CLK_DISABLED


	)

3086 
	#__TIM4_IS_CLK_ENABLED
 
__HAL_RCC_TIM4_IS_CLK_ENABLED


	)

3087 
	#__TIM4_IS_CLK_DISABLED
 
__HAL_RCC_TIM4_IS_CLK_DISABLED


	)

3088 
	#__TIM5_IS_CLK_ENABLED
 
__HAL_RCC_TIM5_IS_CLK_ENABLED


	)

3089 
	#__TIM5_IS_CLK_DISABLED
 
__HAL_RCC_TIM5_IS_CLK_DISABLED


	)

3090 
	#__TIM6_IS_CLK_ENABLED
 
__HAL_RCC_TIM6_IS_CLK_ENABLED


	)

3091 
	#__TIM6_IS_CLK_DISABLED
 
__HAL_RCC_TIM6_IS_CLK_DISABLED


	)

3092 
	#__TIM7_IS_CLK_ENABLED
 
__HAL_RCC_TIM7_IS_CLK_ENABLED


	)

3093 
	#__TIM7_IS_CLK_DISABLED
 
__HAL_RCC_TIM7_IS_CLK_DISABLED


	)

3094 
	#__TIM8_IS_CLK_ENABLED
 
__HAL_RCC_TIM8_IS_CLK_ENABLED


	)

3095 
	#__TIM8_IS_CLK_DISABLED
 
__HAL_RCC_TIM8_IS_CLK_DISABLED


	)

3096 
	#__TIM12_IS_CLK_ENABLED
 
__HAL_RCC_TIM12_IS_CLK_ENABLED


	)

3097 
	#__TIM12_IS_CLK_DISABLED
 
__HAL_RCC_TIM12_IS_CLK_DISABLED


	)

3098 
	#__TIM13_IS_CLK_ENABLED
 
__HAL_RCC_TIM13_IS_CLK_ENABLED


	)

3099 
	#__TIM13_IS_CLK_DISABLED
 
__HAL_RCC_TIM13_IS_CLK_DISABLED


	)

3100 
	#__TIM14_IS_CLK_ENABLED
 
__HAL_RCC_TIM14_IS_CLK_ENABLED


	)

3101 
	#__TIM14_IS_CLK_DISABLED
 
__HAL_RCC_TIM14_IS_CLK_DISABLED


	)

3102 
	#__TIM15_IS_CLK_ENABLED
 
__HAL_RCC_TIM15_IS_CLK_ENABLED


	)

3103 
	#__TIM15_IS_CLK_DISABLED
 
__HAL_RCC_TIM15_IS_CLK_DISABLED


	)

3104 
	#__TIM16_IS_CLK_ENABLED
 
__HAL_RCC_TIM16_IS_CLK_ENABLED


	)

3105 
	#__TIM16_IS_CLK_DISABLED
 
__HAL_RCC_TIM16_IS_CLK_DISABLED


	)

3106 
	#__TIM17_IS_CLK_ENABLED
 
__HAL_RCC_TIM17_IS_CLK_ENABLED


	)

3107 
	#__TIM17_IS_CLK_DISABLED
 
__HAL_RCC_TIM17_IS_CLK_DISABLED


	)

3108 
	#__TIM18_IS_CLK_ENABLED
 
__HAL_RCC_TIM18_IS_CLK_ENABLED


	)

3109 
	#__TIM18_IS_CLK_DISABLED
 
__HAL_RCC_TIM18_IS_CLK_DISABLED


	)

3110 
	#__TIM19_IS_CLK_ENABLED
 
__HAL_RCC_TIM19_IS_CLK_ENABLED


	)

3111 
	#__TIM19_IS_CLK_DISABLED
 
__HAL_RCC_TIM19_IS_CLK_DISABLED


	)

3112 
	#__TIM20_IS_CLK_ENABLED
 
__HAL_RCC_TIM20_IS_CLK_ENABLED


	)

3113 
	#__TIM20_IS_CLK_DISABLED
 
__HAL_RCC_TIM20_IS_CLK_DISABLED


	)

3114 
	#__TSC_IS_CLK_ENABLED
 
__HAL_RCC_TSC_IS_CLK_ENABLED


	)

3115 
	#__TSC_IS_CLK_DISABLED
 
__HAL_RCC_TSC_IS_CLK_DISABLED


	)

3116 
	#__UART4_IS_CLK_ENABLED
 
__HAL_RCC_UART4_IS_CLK_ENABLED


	)

3117 
	#__UART4_IS_CLK_DISABLED
 
__HAL_RCC_UART4_IS_CLK_DISABLED


	)

3118 
	#__UART5_IS_CLK_ENABLED
 
__HAL_RCC_UART5_IS_CLK_ENABLED


	)

3119 
	#__UART5_IS_CLK_DISABLED
 
__HAL_RCC_UART5_IS_CLK_DISABLED


	)

3120 
	#__USART1_IS_CLK_ENABLED
 
__HAL_RCC_USART1_IS_CLK_ENABLED


	)

3121 
	#__USART1_IS_CLK_DISABLED
 
__HAL_RCC_USART1_IS_CLK_DISABLED


	)

3122 
	#__USART2_IS_CLK_ENABLED
 
__HAL_RCC_USART2_IS_CLK_ENABLED


	)

3123 
	#__USART2_IS_CLK_DISABLED
 
__HAL_RCC_USART2_IS_CLK_DISABLED


	)

3124 
	#__USART3_IS_CLK_ENABLED
 
__HAL_RCC_USART3_IS_CLK_ENABLED


	)

3125 
	#__USART3_IS_CLK_DISABLED
 
__HAL_RCC_USART3_IS_CLK_DISABLED


	)

3126 
	#__USB_IS_CLK_ENABLED
 
__HAL_RCC_USB_IS_CLK_ENABLED


	)

3127 
	#__USB_IS_CLK_DISABLED
 
__HAL_RCC_USB_IS_CLK_DISABLED


	)

3128 
	#__WWDG_IS_CLK_ENABLED
 
__HAL_RCC_WWDG_IS_CLK_ENABLED


	)

3129 
	#__WWDG_IS_CLK_DISABLED
 
__HAL_RCC_WWDG_IS_CLK_DISABLED


	)

3131 #i‡
deföed
(
STM32L1
)

3132 
	#__HAL_RCC_CRYP_CLK_DISABLE
 
__HAL_RCC_AES_CLK_DISABLE


	)

3133 
	#__HAL_RCC_CRYP_CLK_ENABLE
 
__HAL_RCC_AES_CLK_ENABLE


	)

3134 
	#__HAL_RCC_CRYP_CLK_SLEEP_DISABLE
 
__HAL_RCC_AES_CLK_SLEEP_DISABLE


	)

3135 
	#__HAL_RCC_CRYP_CLK_SLEEP_ENABLE
 
__HAL_RCC_AES_CLK_SLEEP_ENABLE


	)

3136 
	#__HAL_RCC_CRYP_FORCE_RESET
 
__HAL_RCC_AES_FORCE_RESET


	)

3137 
	#__HAL_RCC_CRYP_RELEASE_RESET
 
__HAL_RCC_AES_RELEASE_RESET


	)

3140 #i‡
deföed
(
STM32F4
)

3141 
	#__HAL_RCC_SDMMC1_FORCE_RESET
 
__HAL_RCC_SDIO_FORCE_RESET


	)

3142 
	#__HAL_RCC_SDMMC1_RELEASE_RESET
 
__HAL_RCC_SDIO_RELEASE_RESET


	)

3143 
	#__HAL_RCC_SDMMC1_CLK_SLEEP_ENABLE
 
__HAL_RCC_SDIO_CLK_SLEEP_ENABLE


	)

3144 
	#__HAL_RCC_SDMMC1_CLK_SLEEP_DISABLE
 
__HAL_RCC_SDIO_CLK_SLEEP_DISABLE


	)

3145 
	#__HAL_RCC_SDMMC1_CLK_ENABLE
 
__HAL_RCC_SDIO_CLK_ENABLE


	)

3146 
	#__HAL_RCC_SDMMC1_CLK_DISABLE
 
__HAL_RCC_SDIO_CLK_DISABLE


	)

3147 
	#__HAL_RCC_SDMMC1_IS_CLK_ENABLED
 
__HAL_RCC_SDIO_IS_CLK_ENABLED


	)

3148 
	#__HAL_RCC_SDMMC1_IS_CLK_DISABLED
 
__HAL_RCC_SDIO_IS_CLK_DISABLED


	)

3149 
	#Sdmmc1ClockSñe˘i⁄
 
SdioClockSñe˘i⁄


	)

3150 
	#RCC_PERIPHCLK_SDMMC1
 
RCC_PERIPHCLK_SDIO


	)

3151 
	#RCC_SDMMC1CLKSOURCE_CLK48
 
RCC_SDIOCLKSOURCE_CK48


	)

3152 
	#RCC_SDMMC1CLKSOURCE_SYSCLK
 
RCC_SDIOCLKSOURCE_SYSCLK


	)

3153 
	#__HAL_RCC_SDMMC1_CONFIG
 
__HAL_RCC_SDIO_CONFIG


	)

3154 
	#__HAL_RCC_GET_SDMMC1_SOURCE
 
__HAL_RCC_GET_SDIO_SOURCE


	)

3157 #i‡
deföed
(
STM32F7
Ë|| deföed(
STM32L4
)

3158 
	#__HAL_RCC_SDIO_FORCE_RESET
 
__HAL_RCC_SDMMC1_FORCE_RESET


	)

3159 
	#__HAL_RCC_SDIO_RELEASE_RESET
 
__HAL_RCC_SDMMC1_RELEASE_RESET


	)

3160 
	#__HAL_RCC_SDIO_CLK_SLEEP_ENABLE
 
__HAL_RCC_SDMMC1_CLK_SLEEP_ENABLE


	)

3161 
	#__HAL_RCC_SDIO_CLK_SLEEP_DISABLE
 
__HAL_RCC_SDMMC1_CLK_SLEEP_DISABLE


	)

3162 
	#__HAL_RCC_SDIO_CLK_ENABLE
 
__HAL_RCC_SDMMC1_CLK_ENABLE


	)

3163 
	#__HAL_RCC_SDIO_CLK_DISABLE
 
__HAL_RCC_SDMMC1_CLK_DISABLE


	)

3164 
	#__HAL_RCC_SDIO_IS_CLK_ENABLED
 
__HAL_RCC_SDMMC1_IS_CLK_ENABLED


	)

3165 
	#__HAL_RCC_SDIO_IS_CLK_DISABLED
 
__HAL_RCC_SDMMC1_IS_CLK_DISABLED


	)

3166 
	#SdioClockSñe˘i⁄
 
Sdmmc1ClockSñe˘i⁄


	)

3167 
	#RCC_PERIPHCLK_SDIO
 
RCC_PERIPHCLK_SDMMC1


	)

3168 
	#__HAL_RCC_SDIO_CONFIG
 
__HAL_RCC_SDMMC1_CONFIG


	)

3169 
	#__HAL_RCC_GET_SDIO_SOURCE
 
__HAL_RCC_GET_SDMMC1_SOURCE


	)

3172 #i‡
deföed
(
STM32F7
)

3173 
	#RCC_SDIOCLKSOURCE_CLK48
 
RCC_SDMMC1CLKSOURCE_CLK48


	)

3174 
	#RCC_SDIOCLKSOURCE_SYSCLK
 
RCC_SDMMC1CLKSOURCE_SYSCLK


	)

3177 #i‡
deföed
(
STM32H7
)

3178 
	#__HAL_RCC_USB_OTG_HS_CLK_ENABLE
(Ë
	`__HAL_RCC_USB1_OTG_HS_CLK_ENABLE
()

	)

3179 
	#__HAL_RCC_USB_OTG_HS_ULPI_CLK_ENABLE
(Ë
	`__HAL_RCC_USB1_OTG_HS_ULPI_CLK_ENABLE
()

	)

3180 
	#__HAL_RCC_USB_OTG_HS_CLK_DISABLE
(Ë
	`__HAL_RCC_USB1_OTG_HS_CLK_DISABLE
()

	)

3181 
	#__HAL_RCC_USB_OTG_HS_ULPI_CLK_DISABLE
(Ë
	`__HAL_RCC_USB1_OTG_HS_ULPI_CLK_DISABLE
()

	)

3182 
	#__HAL_RCC_USB_OTG_HS_FORCE_RESET
(Ë
	`__HAL_RCC_USB1_OTG_HS_FORCE_RESET
()

	)

3183 
	#__HAL_RCC_USB_OTG_HS_RELEASE_RESET
(Ë
	`__HAL_RCC_USB1_OTG_HS_RELEASE_RESET
()

	)

3184 
	#__HAL_RCC_USB_OTG_HS_CLK_SLEEP_ENABLE
(Ë
	`__HAL_RCC_USB1_OTG_HS_CLK_SLEEP_ENABLE
()

	)

3185 
	#__HAL_RCC_USB_OTG_HS_ULPI_CLK_SLEEP_ENABLE
(Ë
	`__HAL_RCC_USB1_OTG_HS_ULPI_CLK_SLEEP_ENABLE
()

	)

3186 
	#__HAL_RCC_USB_OTG_HS_CLK_SLEEP_DISABLE
(Ë
	`__HAL_RCC_USB1_OTG_HS_CLK_SLEEP_DISABLE
()

	)

3187 
	#__HAL_RCC_USB_OTG_HS_ULPI_CLK_SLEEP_DISABLE
(Ë
	`__HAL_RCC_USB1_OTG_HS_ULPI_CLK_SLEEP_DISABLE
()

	)

3189 
	#__HAL_RCC_USB_OTG_FS_CLK_ENABLE
(Ë
	`__HAL_RCC_USB2_OTG_FS_CLK_ENABLE
()

	)

3190 
	#__HAL_RCC_USB_OTG_FS_ULPI_CLK_ENABLE
(Ë
	`__HAL_RCC_USB2_OTG_FS_ULPI_CLK_ENABLE
()

	)

3191 
	#__HAL_RCC_USB_OTG_FS_CLK_DISABLE
(Ë
	`__HAL_RCC_USB2_OTG_FS_CLK_DISABLE
()

	)

3192 
	#__HAL_RCC_USB_OTG_FS_ULPI_CLK_DISABLE
(Ë
	`__HAL_RCC_USB2_OTG_FS_ULPI_CLK_DISABLE
()

	)

3193 
	#__HAL_RCC_USB_OTG_FS_FORCE_RESET
(Ë
	`__HAL_RCC_USB2_OTG_FS_FORCE_RESET
()

	)

3194 
	#__HAL_RCC_USB_OTG_FS_RELEASE_RESET
(Ë
	`__HAL_RCC_USB2_OTG_FS_RELEASE_RESET
()

	)

3195 
	#__HAL_RCC_USB_OTG_FS_CLK_SLEEP_ENABLE
(Ë
	`__HAL_RCC_USB2_OTG_FS_CLK_SLEEP_ENABLE
()

	)

3196 
	#__HAL_RCC_USB_OTG_FS_ULPI_CLK_SLEEP_ENABLE
(Ë
	`__HAL_RCC_USB2_OTG_FS_ULPI_CLK_SLEEP_ENABLE
()

	)

3197 
	#__HAL_RCC_USB_OTG_FS_CLK_SLEEP_DISABLE
(Ë
	`__HAL_RCC_USB2_OTG_FS_CLK_SLEEP_DISABLE
()

	)

3198 
	#__HAL_RCC_USB_OTG_FS_ULPI_CLK_SLEEP_DISABLE
(Ë
	`__HAL_RCC_USB2_OTG_FS_ULPI_CLK_SLEEP_DISABLE
()

	)

3201 
	#__HAL_RCC_I2SCLK
 
__HAL_RCC_I2S_CONFIG


	)

3202 
	#__HAL_RCC_I2SCLK_CONFIG
 
__HAL_RCC_I2S_CONFIG


	)

3204 
	#__RCC_PLLSRC
 
RCC_GET_PLL_OSCSOURCE


	)

3206 
	#IS_RCC_MSIRANGE
 
IS_RCC_MSI_CLOCK_RANGE


	)

3207 
	#IS_RCC_RTCCLK_SOURCE
 
IS_RCC_RTCCLKSOURCE


	)

3208 
	#IS_RCC_SYSCLK_DIV
 
IS_RCC_HCLK


	)

3209 
	#IS_RCC_HCLK_DIV
 
IS_RCC_PCLK


	)

3210 
	#IS_RCC_PERIPHCLK
 
IS_RCC_PERIPHCLOCK


	)

3212 
	#RCC_IT_HSI14
 
RCC_IT_HSI14RDY


	)

3214 
	#RCC_IT_CSSLSE
 
RCC_IT_LSECSS


	)

3215 
	#RCC_IT_CSSHSE
 
RCC_IT_CSS


	)

3217 
	#RCC_PLLMUL_3
 
RCC_PLL_MUL3


	)

3218 
	#RCC_PLLMUL_4
 
RCC_PLL_MUL4


	)

3219 
	#RCC_PLLMUL_6
 
RCC_PLL_MUL6


	)

3220 
	#RCC_PLLMUL_8
 
RCC_PLL_MUL8


	)

3221 
	#RCC_PLLMUL_12
 
RCC_PLL_MUL12


	)

3222 
	#RCC_PLLMUL_16
 
RCC_PLL_MUL16


	)

3223 
	#RCC_PLLMUL_24
 
RCC_PLL_MUL24


	)

3224 
	#RCC_PLLMUL_32
 
RCC_PLL_MUL32


	)

3225 
	#RCC_PLLMUL_48
 
RCC_PLL_MUL48


	)

3227 
	#RCC_PLLDIV_2
 
RCC_PLL_DIV2


	)

3228 
	#RCC_PLLDIV_3
 
RCC_PLL_DIV3


	)

3229 
	#RCC_PLLDIV_4
 
RCC_PLL_DIV4


	)

3231 
	#IS_RCC_MCOSOURCE
 
IS_RCC_MCO1SOURCE


	)

3232 
	#__HAL_RCC_MCO_CONFIG
 
__HAL_RCC_MCO1_CONFIG


	)

3233 
	#RCC_MCO_NODIV
 
RCC_MCODIV_1


	)

3234 
	#RCC_MCO_DIV1
 
RCC_MCODIV_1


	)

3235 
	#RCC_MCO_DIV2
 
RCC_MCODIV_2


	)

3236 
	#RCC_MCO_DIV4
 
RCC_MCODIV_4


	)

3237 
	#RCC_MCO_DIV8
 
RCC_MCODIV_8


	)

3238 
	#RCC_MCO_DIV16
 
RCC_MCODIV_16


	)

3239 
	#RCC_MCO_DIV32
 
RCC_MCODIV_32


	)

3240 
	#RCC_MCO_DIV64
 
RCC_MCODIV_64


	)

3241 
	#RCC_MCO_DIV128
 
RCC_MCODIV_128


	)

3242 
	#RCC_MCOSOURCE_NONE
 
RCC_MCO1SOURCE_NOCLOCK


	)

3243 
	#RCC_MCOSOURCE_LSI
 
RCC_MCO1SOURCE_LSI


	)

3244 
	#RCC_MCOSOURCE_LSE
 
RCC_MCO1SOURCE_LSE


	)

3245 
	#RCC_MCOSOURCE_SYSCLK
 
RCC_MCO1SOURCE_SYSCLK


	)

3246 
	#RCC_MCOSOURCE_HSI
 
RCC_MCO1SOURCE_HSI


	)

3247 
	#RCC_MCOSOURCE_HSI14
 
RCC_MCO1SOURCE_HSI14


	)

3248 
	#RCC_MCOSOURCE_HSI48
 
RCC_MCO1SOURCE_HSI48


	)

3249 
	#RCC_MCOSOURCE_HSE
 
RCC_MCO1SOURCE_HSE


	)

3250 
	#RCC_MCOSOURCE_PLLCLK_DIV1
 
RCC_MCO1SOURCE_PLLCLK


	)

3251 
	#RCC_MCOSOURCE_PLLCLK_NODIV
 
RCC_MCO1SOURCE_PLLCLK


	)

3252 
	#RCC_MCOSOURCE_PLLCLK_DIV2
 
RCC_MCO1SOURCE_PLLCLK_DIV2


	)

3254 #i‡
deföed
(
STM32L4
Ë|| deföed(
STM32WB
Ë|| deföed(
STM32G0
Ë|| deföed(
STM32G4
Ë|| deföed(
STM32L5
Ë|| deföed(
STM32WL
)

3255 
	#RCC_RTCCLKSOURCE_NO_CLK
 
RCC_RTCCLKSOURCE_NONE


	)

3257 
	#RCC_RTCCLKSOURCE_NONE
 
RCC_RTCCLKSOURCE_NO_CLK


	)

3260 
	#RCC_USBCLK_PLLSAI1
 
RCC_USBCLKSOURCE_PLLSAI1


	)

3261 
	#RCC_USBCLK_PLL
 
RCC_USBCLKSOURCE_PLL


	)

3262 
	#RCC_USBCLK_MSI
 
RCC_USBCLKSOURCE_MSI


	)

3263 
	#RCC_USBCLKSOURCE_PLLCLK
 
RCC_USBCLKSOURCE_PLL


	)

3264 
	#RCC_USBPLLCLK_DIV1
 
RCC_USBCLKSOURCE_PLL


	)

3265 
	#RCC_USBPLLCLK_DIV1_5
 
RCC_USBCLKSOURCE_PLL_DIV1_5


	)

3266 
	#RCC_USBPLLCLK_DIV2
 
RCC_USBCLKSOURCE_PLL_DIV2


	)

3267 
	#RCC_USBPLLCLK_DIV3
 
RCC_USBCLKSOURCE_PLL_DIV3


	)

3269 
	#HSION_BôNumbî
 
RCC_HSION_BIT_NUMBER


	)

3270 
	#HSION_BITNUMBER
 
RCC_HSION_BIT_NUMBER


	)

3271 
	#HSEON_BôNumbî
 
RCC_HSEON_BIT_NUMBER


	)

3272 
	#HSEON_BITNUMBER
 
RCC_HSEON_BIT_NUMBER


	)

3273 
	#MSION_BITNUMBER
 
RCC_MSION_BIT_NUMBER


	)

3274 
	#CSSON_BôNumbî
 
RCC_CSSON_BIT_NUMBER


	)

3275 
	#CSSON_BITNUMBER
 
RCC_CSSON_BIT_NUMBER


	)

3276 
	#PLLON_BôNumbî
 
RCC_PLLON_BIT_NUMBER


	)

3277 
	#PLLON_BITNUMBER
 
RCC_PLLON_BIT_NUMBER


	)

3278 
	#PLLI2SON_BôNumbî
 
RCC_PLLI2SON_BIT_NUMBER


	)

3279 
	#I2SSRC_BôNumbî
 
RCC_I2SSRC_BIT_NUMBER


	)

3280 
	#RTCEN_BôNumbî
 
RCC_RTCEN_BIT_NUMBER


	)

3281 
	#RTCEN_BITNUMBER
 
RCC_RTCEN_BIT_NUMBER


	)

3282 
	#BDRST_BôNumbî
 
RCC_BDRST_BIT_NUMBER


	)

3283 
	#BDRST_BITNUMBER
 
RCC_BDRST_BIT_NUMBER


	)

3284 
	#RTCRST_BITNUMBER
 
RCC_RTCRST_BIT_NUMBER


	)

3285 
	#LSION_BôNumbî
 
RCC_LSION_BIT_NUMBER


	)

3286 
	#LSION_BITNUMBER
 
RCC_LSION_BIT_NUMBER


	)

3287 
	#LSEON_BôNumbî
 
RCC_LSEON_BIT_NUMBER


	)

3288 
	#LSEON_BITNUMBER
 
RCC_LSEON_BIT_NUMBER


	)

3289 
	#LSEBYP_BITNUMBER
 
RCC_LSEBYP_BIT_NUMBER


	)

3290 
	#PLLSAION_BôNumbî
 
RCC_PLLSAION_BIT_NUMBER


	)

3291 
	#TIMPRE_BôNumbî
 
RCC_TIMPRE_BIT_NUMBER


	)

3292 
	#RMVF_BôNumbî
 
RCC_RMVF_BIT_NUMBER


	)

3293 
	#RMVF_BITNUMBER
 
RCC_RMVF_BIT_NUMBER


	)

3294 
	#RCC_CR2_HSI14TRIM_BôNumbî
 
RCC_HSI14TRIM_BIT_NUMBER


	)

3295 
	#CR_BYTE2_ADDRESS
 
RCC_CR_BYTE2_ADDRESS


	)

3296 
	#CIR_BYTE1_ADDRESS
 
RCC_CIR_BYTE1_ADDRESS


	)

3297 
	#CIR_BYTE2_ADDRESS
 
RCC_CIR_BYTE2_ADDRESS


	)

3298 
	#BDCR_BYTE0_ADDRESS
 
RCC_BDCR_BYTE0_ADDRESS


	)

3299 
	#DBP_TIMEOUT_VALUE
 
RCC_DBP_TIMEOUT_VALUE


	)

3300 
	#LSE_TIMEOUT_VALUE
 
RCC_LSE_TIMEOUT_VALUE


	)

3302 
	#CR_HSION_BB
 
RCC_CR_HSION_BB


	)

3303 
	#CR_CSSON_BB
 
RCC_CR_CSSON_BB


	)

3304 
	#CR_PLLON_BB
 
RCC_CR_PLLON_BB


	)

3305 
	#CR_PLLI2SON_BB
 
RCC_CR_PLLI2SON_BB


	)

3306 
	#CR_MSION_BB
 
RCC_CR_MSION_BB


	)

3307 
	#CSR_LSION_BB
 
RCC_CSR_LSION_BB


	)

3308 
	#CSR_LSEON_BB
 
RCC_CSR_LSEON_BB


	)

3309 
	#CSR_LSEBYP_BB
 
RCC_CSR_LSEBYP_BB


	)

3310 
	#CSR_RTCEN_BB
 
RCC_CSR_RTCEN_BB


	)

3311 
	#CSR_RTCRST_BB
 
RCC_CSR_RTCRST_BB


	)

3312 
	#CFGR_I2SSRC_BB
 
RCC_CFGR_I2SSRC_BB


	)

3313 
	#BDCR_RTCEN_BB
 
RCC_BDCR_RTCEN_BB


	)

3314 
	#BDCR_BDRST_BB
 
RCC_BDCR_BDRST_BB


	)

3315 
	#CR_HSEON_BB
 
RCC_CR_HSEON_BB


	)

3316 
	#CSR_RMVF_BB
 
RCC_CSR_RMVF_BB


	)

3317 
	#CR_PLLSAION_BB
 
RCC_CR_PLLSAION_BB


	)

3318 
	#DCKCFGR_TIMPRE_BB
 
RCC_DCKCFGR_TIMPRE_BB


	)

3320 
	#__HAL_RCC_CRS_ENABLE_FREQ_ERROR_COUNTER
 
__HAL_RCC_CRS_FREQ_ERROR_COUNTER_ENABLE


	)

3321 
	#__HAL_RCC_CRS_DISABLE_FREQ_ERROR_COUNTER
 
__HAL_RCC_CRS_FREQ_ERROR_COUNTER_DISABLE


	)

3322 
	#__HAL_RCC_CRS_ENABLE_AUTOMATIC_CALIB
 
__HAL_RCC_CRS_AUTOMATIC_CALIB_ENABLE


	)

3323 
	#__HAL_RCC_CRS_DISABLE_AUTOMATIC_CALIB
 
__HAL_RCC_CRS_AUTOMATIC_CALIB_DISABLE


	)

3324 
	#__HAL_RCC_CRS_CALCULATE_RELOADVALUE
 
__HAL_RCC_CRS_RELOADVALUE_CALCULATE


	)

3326 
	#__HAL_RCC_GET_IT_SOURCE
 
__HAL_RCC_GET_IT


	)

3328 
	#RCC_CRS_SYNCWARM
 
RCC_CRS_SYNCWARN


	)

3329 
	#RCC_CRS_TRIMOV
 
RCC_CRS_TRIMOVF


	)

3331 
	#RCC_PERIPHCLK_CK48
 
RCC_PERIPHCLK_CLK48


	)

3332 
	#RCC_CK48CLKSOURCE_PLLQ
 
RCC_CLK48CLKSOURCE_PLLQ


	)

3333 
	#RCC_CK48CLKSOURCE_PLLSAIP
 
RCC_CLK48CLKSOURCE_PLLSAIP


	)

3334 
	#RCC_CK48CLKSOURCE_PLLI2SQ
 
RCC_CLK48CLKSOURCE_PLLI2SQ


	)

3335 
	#IS_RCC_CK48CLKSOURCE
 
IS_RCC_CLK48CLKSOURCE


	)

3336 
	#RCC_SDIOCLKSOURCE_CK48
 
RCC_SDIOCLKSOURCE_CLK48


	)

3338 
	#__HAL_RCC_DFSDM_CLK_ENABLE
 
__HAL_RCC_DFSDM1_CLK_ENABLE


	)

3339 
	#__HAL_RCC_DFSDM_CLK_DISABLE
 
__HAL_RCC_DFSDM1_CLK_DISABLE


	)

3340 
	#__HAL_RCC_DFSDM_IS_CLK_ENABLED
 
__HAL_RCC_DFSDM1_IS_CLK_ENABLED


	)

3341 
	#__HAL_RCC_DFSDM_IS_CLK_DISABLED
 
__HAL_RCC_DFSDM1_IS_CLK_DISABLED


	)

3342 
	#__HAL_RCC_DFSDM_FORCE_RESET
 
__HAL_RCC_DFSDM1_FORCE_RESET


	)

3343 
	#__HAL_RCC_DFSDM_RELEASE_RESET
 
__HAL_RCC_DFSDM1_RELEASE_RESET


	)

3344 
	#__HAL_RCC_DFSDM_CLK_SLEEP_ENABLE
 
__HAL_RCC_DFSDM1_CLK_SLEEP_ENABLE


	)

3345 
	#__HAL_RCC_DFSDM_CLK_SLEEP_DISABLE
 
__HAL_RCC_DFSDM1_CLK_SLEEP_DISABLE


	)

3346 
	#__HAL_RCC_DFSDM_IS_CLK_SLEEP_ENABLED
 
__HAL_RCC_DFSDM1_IS_CLK_SLEEP_ENABLED


	)

3347 
	#__HAL_RCC_DFSDM_IS_CLK_SLEEP_DISABLED
 
__HAL_RCC_DFSDM1_IS_CLK_SLEEP_DISABLED


	)

3348 
	#DfsdmClockSñe˘i⁄
 
Dfsdm1ClockSñe˘i⁄


	)

3349 
	#RCC_PERIPHCLK_DFSDM
 
RCC_PERIPHCLK_DFSDM1


	)

3350 
	#RCC_DFSDMCLKSOURCE_PCLK
 
RCC_DFSDM1CLKSOURCE_PCLK2


	)

3351 
	#RCC_DFSDMCLKSOURCE_SYSCLK
 
RCC_DFSDM1CLKSOURCE_SYSCLK


	)

3352 
	#__HAL_RCC_DFSDM_CONFIG
 
__HAL_RCC_DFSDM1_CONFIG


	)

3353 
	#__HAL_RCC_GET_DFSDM_SOURCE
 
__HAL_RCC_GET_DFSDM1_SOURCE


	)

3354 
	#RCC_DFSDM1CLKSOURCE_PCLK
 
RCC_DFSDM1CLKSOURCE_PCLK2


	)

3355 
	#RCC_SWPMI1CLKSOURCE_PCLK
 
RCC_SWPMI1CLKSOURCE_PCLK1


	)

3356 
	#RCC_LPTIM1CLKSOURCE_PCLK
 
RCC_LPTIM1CLKSOURCE_PCLK1


	)

3357 
	#RCC_LPTIM2CLKSOURCE_PCLK
 
RCC_LPTIM2CLKSOURCE_PCLK1


	)

3359 
	#RCC_DFSDM1AUDIOCLKSOURCE_I2SAPB1
 
RCC_DFSDM1AUDIOCLKSOURCE_I2S1


	)

3360 
	#RCC_DFSDM1AUDIOCLKSOURCE_I2SAPB2
 
RCC_DFSDM1AUDIOCLKSOURCE_I2S2


	)

3361 
	#RCC_DFSDM2AUDIOCLKSOURCE_I2SAPB1
 
RCC_DFSDM2AUDIOCLKSOURCE_I2S1


	)

3362 
	#RCC_DFSDM2AUDIOCLKSOURCE_I2SAPB2
 
RCC_DFSDM2AUDIOCLKSOURCE_I2S2


	)

3363 
	#RCC_DFSDM1CLKSOURCE_APB2
 
RCC_DFSDM1CLKSOURCE_PCLK2


	)

3364 
	#RCC_DFSDM2CLKSOURCE_APB2
 
RCC_DFSDM2CLKSOURCE_PCLK2


	)

3365 
	#RCC_FMPI2C1CLKSOURCE_APB
 
RCC_FMPI2C1CLKSOURCE_PCLK1


	)

3374 
	#HAL_RNG_RódyCÆlback
(
__HANDLE__
Ë
	`HAL_RNG_RódyD©aCÆlback
((__HANDLE__), 
uöt32_t
 
øndom32bô
)

	)

3383 #i‡
deföed
 (
STM32G0
Ë|| deföed (
STM32L5
Ë|| deföed (
STM32L412xx
Ë|| deföed (
STM32L422xx
Ë|| deföed (
STM32L4P5xx
Ë|| deföed (
STM32L4Q5xx
Ë|| deföed (
STM32G4
Ë|| deföed (
STM32WL
)

3385 
	#__HAL_RTC_CLEAR_FLAG
 
__HAL_RTC_EXTI_CLEAR_FLAG


	)

3387 
	#__HAL_RTC_DISABLE_IT
 
__HAL_RTC_EXTI_DISABLE_IT


	)

3388 
	#__HAL_RTC_ENABLE_IT
 
__HAL_RTC_EXTI_ENABLE_IT


	)

3390 #i‡
deföed
 (
STM32F1
)

3391 
	#__HAL_RTC_EXTI_CLEAR_FLAG
(
RTC_EXTI_LINE_ALARM_EVENT
Ë
	`__HAL_RTC_ALARM_EXTI_CLEAR_FLAG
()

	)

3393 
	#__HAL_RTC_EXTI_ENABLE_IT
(
RTC_EXTI_LINE_ALARM_EVENT
Ë
	`__HAL_RTC_ALARM_EXTI_ENABLE_IT
()

	)

3395 
	#__HAL_RTC_EXTI_DISABLE_IT
(
RTC_EXTI_LINE_ALARM_EVENT
Ë
	`__HAL_RTC_ALARM_EXTI_DISABLE_IT
()

	)

3397 
	#__HAL_RTC_EXTI_GET_FLAG
(
RTC_EXTI_LINE_ALARM_EVENT
Ë
	`__HAL_RTC_ALARM_EXTI_GET_FLAG
()

	)

3399 
	#__HAL_RTC_EXTI_GENERATE_SWIT
(
RTC_EXTI_LINE_ALARM_EVENT
Ë
	`__HAL_RTC_ALARM_EXTI_GENERATE_SWIT
()

	)

3401 
	#__HAL_RTC_EXTI_CLEAR_FLAG
(
__EXTI_LINE__
Ë(((__EXTI_LINE__Ë=
RTC_EXTI_LINE_ALARM_EVENT
Ë? 
	`__HAL_RTC_ALARM_EXTI_CLEAR_FLAG
() : \

3402 (((
__EXTI_LINE__
Ë=
RTC_EXTI_LINE_WAKEUPTIMER_EVENT
Ë? 
	`__HAL_RTC_WAKEUPTIMER_EXTI_CLEAR_FLAG
() : \

3403 
	`__HAL_RTC_TAMPER_TIMESTAMP_EXTI_CLEAR_FLAG
()))

	)

3404 
	#__HAL_RTC_EXTI_ENABLE_IT
(
__EXTI_LINE__
Ë(((__EXTI_LINE__Ë=
RTC_EXTI_LINE_ALARM_EVENT
Ë? 
	`__HAL_RTC_ALARM_EXTI_ENABLE_IT
() : \

3405 (((
__EXTI_LINE__
Ë=
RTC_EXTI_LINE_WAKEUPTIMER_EVENT
Ë? 
	`__HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_IT
() : \

3406 
	`__HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT
()))

	)

3407 
	#__HAL_RTC_EXTI_DISABLE_IT
(
__EXTI_LINE__
Ë(((__EXTI_LINE__Ë=
RTC_EXTI_LINE_ALARM_EVENT
Ë? 
	`__HAL_RTC_ALARM_EXTI_DISABLE_IT
() : \

3408 (((
__EXTI_LINE__
Ë=
RTC_EXTI_LINE_WAKEUPTIMER_EVENT
Ë? 
	`__HAL_RTC_WAKEUPTIMER_EXTI_DISABLE_IT
() : \

3409 
	`__HAL_RTC_TAMPER_TIMESTAMP_EXTI_DISABLE_IT
()))

	)

3410 
	#__HAL_RTC_EXTI_GET_FLAG
(
__EXTI_LINE__
Ë(((__EXTI_LINE__Ë=
RTC_EXTI_LINE_ALARM_EVENT
Ë? 
	`__HAL_RTC_ALARM_EXTI_GET_FLAG
() : \

3411 (((
__EXTI_LINE__
Ë=
RTC_EXTI_LINE_WAKEUPTIMER_EVENT
Ë? 
	`__HAL_RTC_WAKEUPTIMER_EXTI_GET_FLAG
() : \

3412 
	`__HAL_RTC_TAMPER_TIMESTAMP_EXTI_GET_FLAG
()))

	)

3413 
	#__HAL_RTC_EXTI_GENERATE_SWIT
(
__EXTI_LINE__
Ë(((__EXTI_LINE__Ë=
RTC_EXTI_LINE_ALARM_EVENT
Ë? 
	`__HAL_RTC_ALARM_EXTI_GENERATE_SWIT
() : \

3414 (((
__EXTI_LINE__
Ë=
RTC_EXTI_LINE_WAKEUPTIMER_EVENT
Ë? 
	`__HAL_RTC_WAKEUPTIMER_EXTI_GENERATE_SWIT
() : \

3415 
	`__HAL_RTC_TAMPER_TIMESTAMP_EXTI_GENERATE_SWIT
()))

	)

3418 
	#IS_ALARM
 
IS_RTC_ALARM


	)

3419 
	#IS_ALARM_MASK
 
IS_RTC_ALARM_MASK


	)

3420 
	#IS_TAMPER
 
IS_RTC_TAMPER


	)

3421 
	#IS_TAMPER_ERASE_MODE
 
IS_RTC_TAMPER_ERASE_MODE


	)

3422 
	#IS_TAMPER_FILTER
 
IS_RTC_TAMPER_FILTER


	)

3423 
	#IS_TAMPER_INTERRUPT
 
IS_RTC_TAMPER_INTERRUPT


	)

3424 
	#IS_TAMPER_MASKFLAG_STATE
 
IS_RTC_TAMPER_MASKFLAG_STATE


	)

3425 
	#IS_TAMPER_PRECHARGE_DURATION
 
IS_RTC_TAMPER_PRECHARGE_DURATION


	)

3426 
	#IS_TAMPER_PULLUP_STATE
 
IS_RTC_TAMPER_PULLUP_STATE


	)

3427 
	#IS_TAMPER_SAMPLING_FREQ
 
IS_RTC_TAMPER_SAMPLING_FREQ


	)

3428 
	#IS_TAMPER_TIMESTAMPONTAMPER_DETECTION
 
IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION


	)

3429 
	#IS_TAMPER_TRIGGER
 
IS_RTC_TAMPER_TRIGGER


	)

3430 
	#IS_WAKEUP_CLOCK
 
IS_RTC_WAKEUP_CLOCK


	)

3431 
	#IS_WAKEUP_COUNTER
 
IS_RTC_WAKEUP_COUNTER


	)

3433 
	#__RTC_WRITEPROTECTION_ENABLE
 
__HAL_RTC_WRITEPROTECTION_ENABLE


	)

3434 
	#__RTC_WRITEPROTECTION_DISABLE
 
__HAL_RTC_WRITEPROTECTION_DISABLE


	)

3444 
	#SD_OCR_CID_CSD_OVERWRIETE
 
SD_OCR_CID_CSD_OVERWRITE


	)

3445 
	#SD_CMD_SD_APP_STAUS
 
SD_CMD_SD_APP_STATUS


	)

3447 #i‡
deföed
(
STM32F4
Ë|| deföed(
STM32F2
)

3448 
	#SD_SDMMC_DISABLED
 
SD_SDIO_DISABLED


	)

3449 
	#SD_SDMMC_FUNCTION_BUSY
 
SD_SDIO_FUNCTION_BUSY


	)

3450 
	#SD_SDMMC_FUNCTION_FAILED
 
SD_SDIO_FUNCTION_FAILED


	)

3451 
	#SD_SDMMC_UNKNOWN_FUNCTION
 
SD_SDIO_UNKNOWN_FUNCTION


	)

3452 
	#SD_CMD_SDMMC_SEN_OP_COND
 
SD_CMD_SDIO_SEN_OP_COND


	)

3453 
	#SD_CMD_SDMMC_RW_DIRECT
 
SD_CMD_SDIO_RW_DIRECT


	)

3454 
	#SD_CMD_SDMMC_RW_EXTENDED
 
SD_CMD_SDIO_RW_EXTENDED


	)

3455 
	#__HAL_SD_SDMMC_ENABLE
 
__HAL_SD_SDIO_ENABLE


	)

3456 
	#__HAL_SD_SDMMC_DISABLE
 
__HAL_SD_SDIO_DISABLE


	)

3457 
	#__HAL_SD_SDMMC_DMA_ENABLE
 
__HAL_SD_SDIO_DMA_ENABLE


	)

3458 
	#__HAL_SD_SDMMC_DMA_DISABLE
 
__HAL_SD_SDIO_DMA_DISABL


	)

3459 
	#__HAL_SD_SDMMC_ENABLE_IT
 
__HAL_SD_SDIO_ENABLE_IT


	)

3460 
	#__HAL_SD_SDMMC_DISABLE_IT
 
__HAL_SD_SDIO_DISABLE_IT


	)

3461 
	#__HAL_SD_SDMMC_GET_FLAG
 
__HAL_SD_SDIO_GET_FLAG


	)

3462 
	#__HAL_SD_SDMMC_CLEAR_FLAG
 
__HAL_SD_SDIO_CLEAR_FLAG


	)

3463 
	#__HAL_SD_SDMMC_GET_IT
 
__HAL_SD_SDIO_GET_IT


	)

3464 
	#__HAL_SD_SDMMC_CLEAR_IT
 
__HAL_SD_SDIO_CLEAR_IT


	)

3465 
	#SDMMC_STATIC_FLAGS
 
SDIO_STATIC_FLAGS


	)

3466 
	#SDMMC_CMD0TIMEOUT
 
SDIO_CMD0TIMEOUT


	)

3467 
	#SD_SDMMC_SEND_IF_COND
 
SD_SDIO_SEND_IF_COND


	)

3469 
	#SDMMC1_IRQn
 
SDIO_IRQn


	)

3470 
	#SDMMC1_IRQH™dÀr
 
SDIO_IRQH™dÀr


	)

3473 #i‡
deföed
(
STM32F7
Ë|| deföed(
STM32L4
)

3474 
	#SD_SDIO_DISABLED
 
SD_SDMMC_DISABLED


	)

3475 
	#SD_SDIO_FUNCTION_BUSY
 
SD_SDMMC_FUNCTION_BUSY


	)

3476 
	#SD_SDIO_FUNCTION_FAILED
 
SD_SDMMC_FUNCTION_FAILED


	)

3477 
	#SD_SDIO_UNKNOWN_FUNCTION
 
SD_SDMMC_UNKNOWN_FUNCTION


	)

3478 
	#SD_CMD_SDIO_SEN_OP_COND
 
SD_CMD_SDMMC_SEN_OP_COND


	)

3479 
	#SD_CMD_SDIO_RW_DIRECT
 
SD_CMD_SDMMC_RW_DIRECT


	)

3480 
	#SD_CMD_SDIO_RW_EXTENDED
 
SD_CMD_SDMMC_RW_EXTENDED


	)

3481 
	#__HAL_SD_SDIO_ENABLE
 
__HAL_SD_SDMMC_ENABLE


	)

3482 
	#__HAL_SD_SDIO_DISABLE
 
__HAL_SD_SDMMC_DISABLE


	)

3483 
	#__HAL_SD_SDIO_DMA_ENABLE
 
__HAL_SD_SDMMC_DMA_ENABLE


	)

3484 
	#__HAL_SD_SDIO_DMA_DISABL
 
__HAL_SD_SDMMC_DMA_DISABLE


	)

3485 
	#__HAL_SD_SDIO_ENABLE_IT
 
__HAL_SD_SDMMC_ENABLE_IT


	)

3486 
	#__HAL_SD_SDIO_DISABLE_IT
 
__HAL_SD_SDMMC_DISABLE_IT


	)

3487 
	#__HAL_SD_SDIO_GET_FLAG
 
__HAL_SD_SDMMC_GET_FLAG


	)

3488 
	#__HAL_SD_SDIO_CLEAR_FLAG
 
__HAL_SD_SDMMC_CLEAR_FLAG


	)

3489 
	#__HAL_SD_SDIO_GET_IT
 
__HAL_SD_SDMMC_GET_IT


	)

3490 
	#__HAL_SD_SDIO_CLEAR_IT
 
__HAL_SD_SDMMC_CLEAR_IT


	)

3491 
	#SDIO_STATIC_FLAGS
 
SDMMC_STATIC_FLAGS


	)

3492 
	#SDIO_CMD0TIMEOUT
 
SDMMC_CMD0TIMEOUT


	)

3493 
	#SD_SDIO_SEND_IF_COND
 
SD_SDMMC_SEND_IF_COND


	)

3495 
	#SDIO_IRQn
 
SDMMC1_IRQn


	)

3496 
	#SDIO_IRQH™dÀr
 
SDMMC1_IRQH™dÀr


	)

3499 #i‡
deföed
(
STM32F7
Ë|| deföed(
STM32F4
Ë|| deföed(
STM32F2
Ë|| deföed(
STM32L4
Ë|| deföed(
STM32H7
)

3500 
	#HAL_SD_C¨dCIDTy≥def
 
HAL_SD_C¨dCIDTy≥Def


	)

3501 
	#HAL_SD_C¨dCSDTy≥def
 
HAL_SD_C¨dCSDTy≥Def


	)

3502 
	#HAL_SD_C¨dSètusTy≥def
 
HAL_SD_C¨dSètusTy≥Def


	)

3503 
	#HAL_SD_C¨dSèãTy≥def
 
HAL_SD_C¨dSèãTy≥Def


	)

3506 #i‡
deföed
(
STM32H7
Ë|| deföed(
STM32L5
)

3507 
	#HAL_MMCEx_Ród_DMADoubÀBuf„r0C∂tCÆlback
 
HAL_MMCEx_Ród_DMADoubÀBuf0C∂tCÆlback


	)

3508 
	#HAL_MMCEx_Ród_DMADoubÀBuf„r1C∂tCÆlback
 
HAL_MMCEx_Ród_DMADoubÀBuf1C∂tCÆlback


	)

3509 
	#HAL_MMCEx_Wrôe_DMADoubÀBuf„r0C∂tCÆlback
 
HAL_MMCEx_Wrôe_DMADoubÀBuf0C∂tCÆlback


	)

3510 
	#HAL_MMCEx_Wrôe_DMADoubÀBuf„r1C∂tCÆlback
 
HAL_MMCEx_Wrôe_DMADoubÀBuf1C∂tCÆlback


	)

3511 
	#HAL_SDEx_Ród_DMADoubÀBuf„r0C∂tCÆlback
 
HAL_SDEx_Ród_DMADoubÀBuf0C∂tCÆlback


	)

3512 
	#HAL_SDEx_Ród_DMADoubÀBuf„r1C∂tCÆlback
 
HAL_SDEx_Ród_DMADoubÀBuf1C∂tCÆlback


	)

3513 
	#HAL_SDEx_Wrôe_DMADoubÀBuf„r0C∂tCÆlback
 
HAL_SDEx_Wrôe_DMADoubÀBuf0C∂tCÆlback


	)

3514 
	#HAL_SDEx_Wrôe_DMADoubÀBuf„r1C∂tCÆlback
 
HAL_SDEx_Wrôe_DMADoubÀBuf1C∂tCÆlback


	)

3515 
	#HAL_SD_DriveTønscivî_1_8V_CÆlback
 
HAL_SD_DriveTøns˚ivî_1_8V_CÆlback


	)

3525 
	#__SMARTCARD_ENABLE_IT
 
__HAL_SMARTCARD_ENABLE_IT


	)

3526 
	#__SMARTCARD_DISABLE_IT
 
__HAL_SMARTCARD_DISABLE_IT


	)

3527 
	#__SMARTCARD_ENABLE
 
__HAL_SMARTCARD_ENABLE


	)

3528 
	#__SMARTCARD_DISABLE
 
__HAL_SMARTCARD_DISABLE


	)

3529 
	#__SMARTCARD_DMA_REQUEST_ENABLE
 
__HAL_SMARTCARD_DMA_REQUEST_ENABLE


	)

3530 
	#__SMARTCARD_DMA_REQUEST_DISABLE
 
__HAL_SMARTCARD_DMA_REQUEST_DISABLE


	)

3532 
	#__HAL_SMARTCARD_GETCLOCKSOURCE
 
SMARTCARD_GETCLOCKSOURCE


	)

3533 
	#__SMARTCARD_GETCLOCKSOURCE
 
SMARTCARD_GETCLOCKSOURCE


	)

3535 
	#IS_SMARTCARD_ONEBIT_SAMPLING
 
IS_SMARTCARD_ONE_BIT_SAMPLE


	)

3544 
	#__HAL_SMBUS_RESET_CR1
 
SMBUS_RESET_CR1


	)

3545 
	#__HAL_SMBUS_RESET_CR2
 
SMBUS_RESET_CR2


	)

3546 
	#__HAL_SMBUS_GENERATE_START
 
SMBUS_GENERATE_START


	)

3547 
	#__HAL_SMBUS_GET_ADDR_MATCH
 
SMBUS_GET_ADDR_MATCH


	)

3548 
	#__HAL_SMBUS_GET_DIR
 
SMBUS_GET_DIR


	)

3549 
	#__HAL_SMBUS_GET_STOP_MODE
 
SMBUS_GET_STOP_MODE


	)

3550 
	#__HAL_SMBUS_GET_PEC_MODE
 
SMBUS_GET_PEC_MODE


	)

3551 
	#__HAL_SMBUS_GET_ALERT_ENABLED
 
SMBUS_GET_ALERT_ENABLED


	)

3560 
	#__HAL_SPI_1LINE_TX
 
SPI_1LINE_TX


	)

3561 
	#__HAL_SPI_1LINE_RX
 
SPI_1LINE_RX


	)

3562 
	#__HAL_SPI_RESET_CRC
 
SPI_RESET_CRC


	)

3572 
	#__HAL_UART_GETCLOCKSOURCE
 
UART_GETCLOCKSOURCE


	)

3573 
	#__HAL_UART_MASK_COMPUTATION
 
UART_MASK_COMPUTATION


	)

3574 
	#__UART_GETCLOCKSOURCE
 
UART_GETCLOCKSOURCE


	)

3575 
	#__UART_MASK_COMPUTATION
 
UART_MASK_COMPUTATION


	)

3577 
	#IS_UART_WAKEUPMETHODE
 
IS_UART_WAKEUPMETHOD


	)

3579 
	#IS_UART_ONEBIT_SAMPLE
 
IS_UART_ONE_BIT_SAMPLE


	)

3580 
	#IS_UART_ONEBIT_SAMPLING
 
IS_UART_ONE_BIT_SAMPLE


	)

3591 
	#__USART_ENABLE_IT
 
__HAL_USART_ENABLE_IT


	)

3592 
	#__USART_DISABLE_IT
 
__HAL_USART_DISABLE_IT


	)

3593 
	#__USART_ENABLE
 
__HAL_USART_ENABLE


	)

3594 
	#__USART_DISABLE
 
__HAL_USART_DISABLE


	)

3596 
	#__HAL_USART_GETCLOCKSOURCE
 
USART_GETCLOCKSOURCE


	)

3597 
	#__USART_GETCLOCKSOURCE
 
USART_GETCLOCKSOURCE


	)

3606 
	#USB_EXTI_LINE_WAKEUP
 
USB_WAKEUP_EXTI_LINE


	)

3608 
	#USB_FS_EXTI_TRIGGER_RISING_EDGE
 
USB_OTG_FS_WAKEUP_EXTI_RISING_EDGE


	)

3609 
	#USB_FS_EXTI_TRIGGER_FALLING_EDGE
 
USB_OTG_FS_WAKEUP_EXTI_FALLING_EDGE


	)

3610 
	#USB_FS_EXTI_TRIGGER_BOTH_EDGE
 
USB_OTG_FS_WAKEUP_EXTI_RISING_FALLING_EDGE


	)

3611 
	#USB_FS_EXTI_LINE_WAKEUP
 
USB_OTG_FS_WAKEUP_EXTI_LINE


	)

3613 
	#USB_HS_EXTI_TRIGGER_RISING_EDGE
 
USB_OTG_HS_WAKEUP_EXTI_RISING_EDGE


	)

3614 
	#USB_HS_EXTI_TRIGGER_FALLING_EDGE
 
USB_OTG_HS_WAKEUP_EXTI_FALLING_EDGE


	)

3615 
	#USB_HS_EXTI_TRIGGER_BOTH_EDGE
 
USB_OTG_HS_WAKEUP_EXTI_RISING_FALLING_EDGE


	)

3616 
	#USB_HS_EXTI_LINE_WAKEUP
 
USB_OTG_HS_WAKEUP_EXTI_LINE


	)

3618 
	#__HAL_USB_EXTI_ENABLE_IT
 
__HAL_USB_WAKEUP_EXTI_ENABLE_IT


	)

3619 
	#__HAL_USB_EXTI_DISABLE_IT
 
__HAL_USB_WAKEUP_EXTI_DISABLE_IT


	)

3620 
	#__HAL_USB_EXTI_GET_FLAG
 
__HAL_USB_WAKEUP_EXTI_GET_FLAG


	)

3621 
	#__HAL_USB_EXTI_CLEAR_FLAG
 
__HAL_USB_WAKEUP_EXTI_CLEAR_FLAG


	)

3622 
	#__HAL_USB_EXTI_SET_RISING_EDGE_TRIGGER
 
__HAL_USB_WAKEUP_EXTI_ENABLE_RISING_EDGE


	)

3623 
	#__HAL_USB_EXTI_SET_FALLING_EDGE_TRIGGER
 
__HAL_USB_WAKEUP_EXTI_ENABLE_FALLING_EDGE


	)

3624 
	#__HAL_USB_EXTI_SET_FALLINGRISING_TRIGGER
 
__HAL_USB_WAKEUP_EXTI_ENABLE_RISING_FALLING_EDGE


	)

3626 
	#__HAL_USB_FS_EXTI_ENABLE_IT
 
__HAL_USB_OTG_FS_WAKEUP_EXTI_ENABLE_IT


	)

3627 
	#__HAL_USB_FS_EXTI_DISABLE_IT
 
__HAL_USB_OTG_FS_WAKEUP_EXTI_DISABLE_IT


	)

3628 
	#__HAL_USB_FS_EXTI_GET_FLAG
 
__HAL_USB_OTG_FS_WAKEUP_EXTI_GET_FLAG


	)

3629 
	#__HAL_USB_FS_EXTI_CLEAR_FLAG
 
__HAL_USB_OTG_FS_WAKEUP_EXTI_CLEAR_FLAG


	)

3630 
	#__HAL_USB_FS_EXTI_SET_RISING_EGDE_TRIGGER
 
__HAL_USB_OTG_FS_WAKEUP_EXTI_ENABLE_RISING_EDGE


	)

3631 
	#__HAL_USB_FS_EXTI_SET_FALLING_EGDE_TRIGGER
 
__HAL_USB_OTG_FS_WAKEUP_EXTI_ENABLE_FALLING_EDGE


	)

3632 
	#__HAL_USB_FS_EXTI_SET_FALLINGRISING_TRIGGER
 
__HAL_USB_OTG_FS_WAKEUP_EXTI_ENABLE_RISING_FALLING_EDGE


	)

3633 
	#__HAL_USB_FS_EXTI_GENERATE_SWIT
 
__HAL_USB_OTG_FS_WAKEUP_EXTI_GENERATE_SWIT


	)

3635 
	#__HAL_USB_HS_EXTI_ENABLE_IT
 
__HAL_USB_OTG_HS_WAKEUP_EXTI_ENABLE_IT


	)

3636 
	#__HAL_USB_HS_EXTI_DISABLE_IT
 
__HAL_USB_OTG_HS_WAKEUP_EXTI_DISABLE_IT


	)

3637 
	#__HAL_USB_HS_EXTI_GET_FLAG
 
__HAL_USB_OTG_HS_WAKEUP_EXTI_GET_FLAG


	)

3638 
	#__HAL_USB_HS_EXTI_CLEAR_FLAG
 
__HAL_USB_OTG_HS_WAKEUP_EXTI_CLEAR_FLAG


	)

3639 
	#__HAL_USB_HS_EXTI_SET_RISING_EGDE_TRIGGER
 
__HAL_USB_OTG_HS_WAKEUP_EXTI_ENABLE_RISING_EDGE


	)

3640 
	#__HAL_USB_HS_EXTI_SET_FALLING_EGDE_TRIGGER
 
__HAL_USB_OTG_HS_WAKEUP_EXTI_ENABLE_FALLING_EDGE


	)

3641 
	#__HAL_USB_HS_EXTI_SET_FALLINGRISING_TRIGGER
 
__HAL_USB_OTG_HS_WAKEUP_EXTI_ENABLE_RISING_FALLING_EDGE


	)

3642 
	#__HAL_USB_HS_EXTI_GENERATE_SWIT
 
__HAL_USB_OTG_HS_WAKEUP_EXTI_GENERATE_SWIT


	)

3644 
	#HAL_PCD_A˘iveRemŸeWakeup
 
HAL_PCD_A˘iv©eRemŸeWakeup


	)

3645 
	#HAL_PCD_DeA˘iveRemŸeWakeup
 
HAL_PCD_DeA˘iv©eRemŸeWakeup


	)

3647 
	#HAL_PCD_SëTxFiFo
 
HAL_PCDEx_SëTxFiFo


	)

3648 
	#HAL_PCD_SëRxFiFo
 
HAL_PCDEx_SëRxFiFo


	)

3656 
	#__HAL_TIM_SëICPªsˇÀrVÆue
 
TIM_SET_ICPRESCALERVALUE


	)

3657 
	#__HAL_TIM_Re£tICPªsˇÀrVÆue
 
TIM_RESET_ICPRESCALERVALUE


	)

3659 
	#TIM_GET_ITSTATUS
 
__HAL_TIM_GET_IT_SOURCE


	)

3660 
	#TIM_GET_CLEAR_IT
 
__HAL_TIM_CLEAR_IT


	)

3662 
	#__HAL_TIM_GET_ITSTATUS
 
__HAL_TIM_GET_IT_SOURCE


	)

3664 
	#__HAL_TIM_DIRECTION_STATUS
 
__HAL_TIM_IS_TIM_COUNTING_DOWN


	)

3665 
	#__HAL_TIM_PRESCALER
 
__HAL_TIM_SET_PRESCALER


	)

3666 
	#__HAL_TIM_SëCou¡î
 
__HAL_TIM_SET_COUNTER


	)

3667 
	#__HAL_TIM_GëCou¡î
 
__HAL_TIM_GET_COUNTER


	)

3668 
	#__HAL_TIM_SëAut‹ñﬂd
 
__HAL_TIM_SET_AUTORELOAD


	)

3669 
	#__HAL_TIM_GëAut‹ñﬂd
 
__HAL_TIM_GET_AUTORELOAD


	)

3670 
	#__HAL_TIM_SëClockDivisi⁄
 
__HAL_TIM_SET_CLOCKDIVISION


	)

3671 
	#__HAL_TIM_GëClockDivisi⁄
 
__HAL_TIM_GET_CLOCKDIVISION


	)

3672 
	#__HAL_TIM_SëICPªsˇÀr
 
__HAL_TIM_SET_ICPRESCALER


	)

3673 
	#__HAL_TIM_GëICPªsˇÀr
 
__HAL_TIM_GET_ICPRESCALER


	)

3674 
	#__HAL_TIM_SëCom∑ª
 
__HAL_TIM_SET_COMPARE


	)

3675 
	#__HAL_TIM_GëCom∑ª
 
__HAL_TIM_GET_COMPARE


	)

3677 
	#TIM_BREAKINPUTSOURCE_DFSDM
 
TIM_BREAKINPUTSOURCE_DFSDM1


	)

3686 
	#__HAL_ETH_EXTI_ENABLE_IT
 
__HAL_ETH_WAKEUP_EXTI_ENABLE_IT


	)

3687 
	#__HAL_ETH_EXTI_DISABLE_IT
 
__HAL_ETH_WAKEUP_EXTI_DISABLE_IT


	)

3688 
	#__HAL_ETH_EXTI_GET_FLAG
 
__HAL_ETH_WAKEUP_EXTI_GET_FLAG


	)

3689 
	#__HAL_ETH_EXTI_CLEAR_FLAG
 
__HAL_ETH_WAKEUP_EXTI_CLEAR_FLAG


	)

3690 
	#__HAL_ETH_EXTI_SET_RISING_EGDE_TRIGGER
 
__HAL_ETH_WAKEUP_EXTI_ENABLE_RISING_EDGE_TRIGGER


	)

3691 
	#__HAL_ETH_EXTI_SET_FALLING_EGDE_TRIGGER
 
__HAL_ETH_WAKEUP_EXTI_ENABLE_FALLING_EDGE_TRIGGER


	)

3692 
	#__HAL_ETH_EXTI_SET_FALLINGRISING_TRIGGER
 
__HAL_ETH_WAKEUP_EXTI_ENABLE_FALLINGRISING_TRIGGER


	)

3694 
	#ETH_PROMISCIOUSMODE_ENABLE
 
ETH_PROMISCUOUS_MODE_ENABLE


	)

3695 
	#ETH_PROMISCIOUSMODE_DISABLE
 
ETH_PROMISCUOUS_MODE_DISABLE


	)

3696 
	#IS_ETH_PROMISCIOUS_MODE
 
IS_ETH_PROMISCUOUS_MODE


	)

3704 
	#__HAL_LTDC_LAYER
 
LTDC_LAYER


	)

3705 
	#__HAL_LTDC_RELOAD_CONFIG
 
__HAL_LTDC_RELOAD_IMMEDIATE_CONFIG


	)

3713 
	#SAI_OUTPUTDRIVE_DISABLED
 
SAI_OUTPUTDRIVE_DISABLE


	)

3714 
	#SAI_OUTPUTDRIVE_ENABLED
 
SAI_OUTPUTDRIVE_ENABLE


	)

3715 
	#SAI_MASTERDIVIDER_ENABLED
 
SAI_MASTERDIVIDER_ENABLE


	)

3716 
	#SAI_MASTERDIVIDER_DISABLED
 
SAI_MASTERDIVIDER_DISABLE


	)

3717 
	#SAI_STREOMODE
 
SAI_STEREOMODE


	)

3718 
	#SAI_FIFOSètus_Em±y
 
SAI_FIFOSTATUS_EMPTY


	)

3719 
	#SAI_FIFOSètus_Less1Qu¨ãrFuŒ
 
SAI_FIFOSTATUS_LESS1QUARTERFULL


	)

3720 
	#SAI_FIFOSètus_1Qu¨ãrFuŒ
 
SAI_FIFOSTATUS_1QUARTERFULL


	)

3721 
	#SAI_FIFOSètus_HÆfFuŒ
 
SAI_FIFOSTATUS_HALFFULL


	)

3722 
	#SAI_FIFOSètus_3Qu¨ãrsFuŒ
 
SAI_FIFOSTATUS_3QUARTERFULL


	)

3723 
	#SAI_FIFOSètus_FuŒ
 
SAI_FIFOSTATUS_FULL


	)

3724 
	#IS_SAI_BLOCK_MONO_STREO_MODE
 
IS_SAI_BLOCK_MONO_STEREO_MODE


	)

3725 
	#SAI_SYNCHRONOUS_EXT
 
SAI_SYNCHRONOUS_EXT_SAI1


	)

3726 
	#SAI_SYNCEXT_IN_ENABLE
 
SAI_SYNCEXT_OUTBLOCKA_ENABLE


	)

3734 #i‡
deföed
(
STM32H7
)

3735 
	#HAL_SPDIFRX_Re˚iveC⁄åﬁFlow
 
HAL_SPDIFRX_Re˚iveCålFlow


	)

3736 
	#HAL_SPDIFRX_Re˚iveC⁄åﬁFlow_IT
 
HAL_SPDIFRX_Re˚iveCålFlow_IT


	)

3737 
	#HAL_SPDIFRX_Re˚iveC⁄åﬁFlow_DMA
 
HAL_SPDIFRX_Re˚iveCålFlow_DMA


	)

3746 #i‡
deföed
 (
STM32H7
Ë|| deföed (
STM32G4
Ë|| deföed (
STM32F3
)

3747 
	#HAL_HRTIM_Wavef‹mCou¡îSèπ_IT
 
HAL_HRTIM_Wavef‹mCou¡Sèπ_IT


	)

3748 
	#HAL_HRTIM_Wavef‹mCou¡îSèπ_DMA
 
HAL_HRTIM_Wavef‹mCou¡Sèπ_DMA


	)

3749 
	#HAL_HRTIM_Wavef‹mCou¡îSèπ
 
HAL_HRTIM_Wavef‹mCou¡Sèπ


	)

3750 
	#HAL_HRTIM_Wavef‹mCou¡îSt›_IT
 
HAL_HRTIM_Wavef‹mCou¡St›_IT


	)

3751 
	#HAL_HRTIM_Wavef‹mCou¡îSt›_DMA
 
HAL_HRTIM_Wavef‹mCou¡St›_DMA


	)

3752 
	#HAL_HRTIM_Wavef‹mCou¡îSt›
 
HAL_HRTIM_Wavef‹mCou¡St›


	)

3761 #i‡
deföed
 (
STM32L4
Ë|| deföed (
STM32F4
Ë|| deföed (
STM32F7
Ë|| deföed(
STM32H7
)

3762 
	#HAL_QPSI_TIMEOUT_DEFAULT_VALUE
 
HAL_QSPI_TIMEOUT_DEFAULT_VALUE


	)

3776 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal.h

22 #i‚de‡
__STM32F1xx_HAL_H


23 
	#__STM32F1xx_HAL_H


	)

25 #ifde‡
__˝lu•lus


30 
	~"°m32f1xx_hÆ_c⁄f.h
"

51 
HAL_TICK_FREQ_10HZ
 = 100U,

52 
HAL_TICK_FREQ_100HZ
 = 10U,

53 
HAL_TICK_FREQ_1KHZ
 = 1U,

54 
HAL_TICK_FREQ_DEFAULT
 = 
HAL_TICK_FREQ_1KHZ


55 } 
	tHAL_TickFªqTy≥Def
;

60 
__IO
 
uöt32_t
 
uwTick
;

61 
uöt32_t
 
uwTickPrio
;

62 
HAL_TickFªqTy≥Def
 
uwTickFªq
;

88 
	#__HAL_DBGMCU_FREEZE_TIM2
(Ë
	`SET_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM2_STOP
)

	)

89 
	#__HAL_DBGMCU_UNFREEZE_TIM2
(Ë
	`CLEAR_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM2_STOP
)

	)

94 
	#__HAL_DBGMCU_FREEZE_TIM3
(Ë
	`SET_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM3_STOP
)

	)

95 
	#__HAL_DBGMCU_UNFREEZE_TIM3
(Ë
	`CLEAR_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM3_STOP
)

	)

97 #i‡
deföed
 (
DBGMCU_CR_DBG_TIM4_STOP
)

101 
	#__HAL_DBGMCU_FREEZE_TIM4
(Ë
	`SET_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM4_STOP
)

	)

102 
	#__HAL_DBGMCU_UNFREEZE_TIM4
(Ë
	`CLEAR_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM4_STOP
)

	)

105 #i‡
deföed
 (
DBGMCU_CR_DBG_TIM5_STOP
)

109 
	#__HAL_DBGMCU_FREEZE_TIM5
(Ë
	`SET_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM5_STOP
)

	)

110 
	#__HAL_DBGMCU_UNFREEZE_TIM5
(Ë
	`CLEAR_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM5_STOP
)

	)

113 #i‡
deföed
 (
DBGMCU_CR_DBG_TIM6_STOP
)

117 
	#__HAL_DBGMCU_FREEZE_TIM6
(Ë
	`SET_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM6_STOP
)

	)

118 
	#__HAL_DBGMCU_UNFREEZE_TIM6
(Ë
	`CLEAR_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM6_STOP
)

	)

121 #i‡
deföed
 (
DBGMCU_CR_DBG_TIM7_STOP
)

125 
	#__HAL_DBGMCU_FREEZE_TIM7
(Ë
	`SET_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM7_STOP
)

	)

126 
	#__HAL_DBGMCU_UNFREEZE_TIM7
(Ë
	`CLEAR_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM7_STOP
)

	)

129 #i‡
deföed
 (
DBGMCU_CR_DBG_TIM12_STOP
)

133 
	#__HAL_DBGMCU_FREEZE_TIM12
(Ë
	`SET_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM12_STOP
)

	)

134 
	#__HAL_DBGMCU_UNFREEZE_TIM12
(Ë
	`CLEAR_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM12_STOP
)

	)

137 #i‡
deföed
 (
DBGMCU_CR_DBG_TIM13_STOP
)

141 
	#__HAL_DBGMCU_FREEZE_TIM13
(Ë
	`SET_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM13_STOP
)

	)

142 
	#__HAL_DBGMCU_UNFREEZE_TIM13
(Ë
	`CLEAR_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM13_STOP
)

	)

145 #i‡
deföed
 (
DBGMCU_CR_DBG_TIM14_STOP
)

149 
	#__HAL_DBGMCU_FREEZE_TIM14
(Ë
	`SET_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM14_STOP
)

	)

150 
	#__HAL_DBGMCU_UNFREEZE_TIM14
(Ë
	`CLEAR_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM14_STOP
)

	)

156 
	#__HAL_DBGMCU_FREEZE_WWDG
(Ë
	`SET_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_WWDG_STOP
)

	)

157 
	#__HAL_DBGMCU_UNFREEZE_WWDG
(Ë
	`CLEAR_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_WWDG_STOP
)

	)

162 
	#__HAL_DBGMCU_FREEZE_IWDG
(Ë
	`SET_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_IWDG_STOP
)

	)

163 
	#__HAL_DBGMCU_UNFREEZE_IWDG
(Ë
	`CLEAR_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_IWDG_STOP
)

	)

168 
	#__HAL_DBGMCU_FREEZE_I2C1_TIMEOUT
(Ë
	`SET_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_I2C1_SMBUS_TIMEOUT
)

	)

169 
	#__HAL_DBGMCU_UNFREEZE_I2C1_TIMEOUT
(Ë
	`CLEAR_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_I2C1_SMBUS_TIMEOUT
)

	)

171 #i‡
deföed
 (
DBGMCU_CR_DBG_I2C2_SMBUS_TIMEOUT
)

175 
	#__HAL_DBGMCU_FREEZE_I2C2_TIMEOUT
(Ë
	`SET_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_I2C2_SMBUS_TIMEOUT
)

	)

176 
	#__HAL_DBGMCU_UNFREEZE_I2C2_TIMEOUT
(Ë
	`CLEAR_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_I2C2_SMBUS_TIMEOUT
)

	)

179 #i‡
deföed
 (
DBGMCU_CR_DBG_CAN1_STOP
)

183 
	#__HAL_DBGMCU_FREEZE_CAN1
(Ë
	`SET_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_CAN1_STOP
)

	)

184 
	#__HAL_DBGMCU_UNFREEZE_CAN1
(Ë
	`CLEAR_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_CAN1_STOP
)

	)

187 #i‡
deföed
 (
DBGMCU_CR_DBG_CAN2_STOP
)

191 
	#__HAL_DBGMCU_FREEZE_CAN2
(Ë
	`SET_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_CAN2_STOP
)

	)

192 
	#__HAL_DBGMCU_UNFREEZE_CAN2
(Ë
	`CLEAR_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_CAN2_STOP
)

	)

196 #i‡
deföed
 (
DBGMCU_CR_DBG_TIM1_STOP
)

200 
	#__HAL_DBGMCU_FREEZE_TIM1
(Ë
	`SET_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM1_STOP
)

	)

201 
	#__HAL_DBGMCU_UNFREEZE_TIM1
(Ë
	`CLEAR_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM1_STOP
)

	)

204 #i‡
deföed
 (
DBGMCU_CR_DBG_TIM8_STOP
)

208 
	#__HAL_DBGMCU_FREEZE_TIM8
(Ë
	`SET_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM8_STOP
)

	)

209 
	#__HAL_DBGMCU_UNFREEZE_TIM8
(Ë
	`CLEAR_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM8_STOP
)

	)

212 #i‡
deföed
 (
DBGMCU_CR_DBG_TIM9_STOP
)

216 
	#__HAL_DBGMCU_FREEZE_TIM9
(Ë
	`SET_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM9_STOP
)

	)

217 
	#__HAL_DBGMCU_UNFREEZE_TIM9
(Ë
	`CLEAR_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM9_STOP
)

	)

220 #i‡
deföed
 (
DBGMCU_CR_DBG_TIM10_STOP
)

224 
	#__HAL_DBGMCU_FREEZE_TIM10
(Ë
	`SET_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM10_STOP
)

	)

225 
	#__HAL_DBGMCU_UNFREEZE_TIM10
(Ë
	`CLEAR_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM10_STOP
)

	)

228 #i‡
deföed
 (
DBGMCU_CR_DBG_TIM11_STOP
)

232 
	#__HAL_DBGMCU_FREEZE_TIM11
(Ë
	`SET_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM11_STOP
)

	)

233 
	#__HAL_DBGMCU_UNFREEZE_TIM11
(Ë
	`CLEAR_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM11_STOP
)

	)

237 #i‡
deföed
 (
DBGMCU_CR_DBG_TIM15_STOP
)

241 
	#__HAL_DBGMCU_FREEZE_TIM15
(Ë
	`SET_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM15_STOP
)

	)

242 
	#__HAL_DBGMCU_UNFREEZE_TIM15
(Ë
	`CLEAR_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM15_STOP
)

	)

245 #i‡
deföed
 (
DBGMCU_CR_DBG_TIM16_STOP
)

249 
	#__HAL_DBGMCU_FREEZE_TIM16
(Ë
	`SET_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM16_STOP
)

	)

250 
	#__HAL_DBGMCU_UNFREEZE_TIM16
(Ë
	`CLEAR_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM16_STOP
)

	)

253 #i‡
deföed
 (
DBGMCU_CR_DBG_TIM17_STOP
)

257 
	#__HAL_DBGMCU_FREEZE_TIM17
(Ë
	`SET_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM17_STOP
)

	)

258 
	#__HAL_DBGMCU_UNFREEZE_TIM17
(Ë
	`CLEAR_BIT
(
DBGMCU
->
CR
, 
DBGMCU_CR_DBG_TIM17_STOP
)

	)

268 
	#IS_TICKFREQ
(
FREQ
Ë(((FREQË=
HAL_TICK_FREQ_10HZ
) || \

269 ((
FREQ
Ë=
HAL_TICK_FREQ_100HZ
) || \

270 ((
FREQ
Ë=
HAL_TICK_FREQ_1KHZ
))

	)

283 
HAL_SètusTy≥Def
 
HAL_Inô
();

284 
HAL_SètusTy≥Def
 
HAL_DeInô
();

285 
HAL_M•Inô
();

286 
HAL_M•DeInô
();

287 
HAL_SètusTy≥Def
 
HAL_InôTick
(
uöt32_t
 
TickPri‹ôy
);

296 
HAL_IncTick
();

298 
uöt32_t
 
HAL_GëTick
();

299 
uöt32_t
 
HAL_GëTickPrio
();

300 
HAL_SètusTy≥Def
 
HAL_SëTickFªq
(
HAL_TickFªqTy≥Def
 
Fªq
);

301 
HAL_TickFªqTy≥Def
 
HAL_GëTickFªq
();

302 
HAL_Su•ídTick
();

303 
HAL_ResumeTick
();

304 
uöt32_t
 
HAL_GëHÆVîsi⁄
();

305 
uöt32_t
 
HAL_GëREVID
();

306 
uöt32_t
 
HAL_GëDEVID
();

307 
uöt32_t
 
HAL_GëUIDw0
();

308 
uöt32_t
 
HAL_GëUIDw1
();

309 
uöt32_t
 
HAL_GëUIDw2
();

310 
HAL_DBGMCU_E«bÀDBGSÀïMode
();

311 
HAL_DBGMCU_DißbÀDBGSÀïMode
();

312 
HAL_DBGMCU_E«bÀDBGSt›Mode
();

313 
HAL_DBGMCU_DißbÀDBGSt›Mode
();

314 
HAL_DBGMCU_E«bÀDBGSèndbyMode
();

315 
HAL_DBGMCU_DißbÀDBGSèndbyMode
();

352 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h

22 #i‚de‡
__STM32F1xx_HAL_DEF


23 
	#__STM32F1xx_HAL_DEF


	)

25 #ifde‡
__˝lu•lus


30 
	~"°m32f1xx.h
"

31 
	~"Legacy/°m32_hÆ_Àgacy.h
"

32 
	~<°ddef.h
>

41 
HAL_OK
 = 0x00U,

42 
HAL_ERROR
 = 0x01U,

43 
HAL_BUSY
 = 0x02U,

44 
HAL_TIMEOUT
 = 0x03U

45 } 
	tHAL_SètusTy≥Def
;

52 
HAL_UNLOCKED
 = 0x00U,

53 
HAL_LOCKED
 = 0x01U

54 } 
	tHAL_LockTy≥Def
;

57 
	#HAL_MAX_DELAY
 0xFFFFFFFFU

	)

59 
	#HAL_IS_BIT_SET
(
REG
, 
BIT
Ë(((REGË& (BIT)Ë!0U)

	)

60 
	#HAL_IS_BIT_CLR
(
REG
, 
BIT
Ë(((REGË& (BIT)Ë=0U)

	)

62 
	#__HAL_LINKDMA
(
__HANDLE__
, 
__PPP_DMA_FIELD__
, 
__DMA_HANDLE__
) \

64 (
__HANDLE__
)->
__PPP_DMA_FIELD__
 = &(
__DMA_HANDLE__
); \

65 (
__DMA_HANDLE__
).
P¨ít
 = (
__HANDLE__
); \

66 } 0U)

	)

68 
	#UNUSED
(
X
Ë()X

	)

85 
	#__HAL_RESET_HANDLE_STATE
(
__HANDLE__
Ë((__HANDLE__)->
Sèã
 = 0U)

	)

87 #i‡(
USE_RTOS
 == 1U)

91 
	#__HAL_LOCK
(
__HANDLE__
) \

93 if((
__HANDLE__
)->
Lock
 =
HAL_LOCKED
) \

95  
HAL_BUSY
; \

99 (
__HANDLE__
)->
Lock
 = 
HAL_LOCKED
; \

101 }0U)

	)

103 
	#__HAL_UNLOCK
(
__HANDLE__
) \

105 (
__HANDLE__
)->
Lock
 = 
HAL_UNLOCKED
; \

106 }0U)

	)

109 #i‡
deföed
 (
__ARMCC_VERSION
) && (__ARMCC_VERSION >= 6010050)

110 #i‚de‡
__wók


111 
	#__wók
 
	`__©åibuã__
((
wók
))

	)

113 #i‚de‡
__∑cked


114 
	#__∑cked
 
	`__©åibuã__
((
∑cked
))

	)

116 #ñi‡
deföed
 ( 
__GNUC__
 ) && !deföed (
__CC_ARM
)

117 #i‚de‡
__wók


118 
	#__wók
 
	`__©åibuã__
((
wók
))

	)

120 #i‚de‡
__∑cked


121 
	#__∑cked
 
	`__©åibuã__
((
__∑cked__
))

	)

127 #i‡
deföed
 (
__ARMCC_VERSION
) && (__ARMCC_VERSION >= 6010050)

128 #i‚de‡
__ALIGN_BEGIN


129 
	#__ALIGN_BEGIN


	)

131 #i‚de‡
__ALIGN_END


132 
	#__ALIGN_END
 
	`__©åibuã__
 ((
	`Æig√d
 (4)))

	)

134 #ñi‡
deföed
 ( 
__GNUC__
 ) && !deföed (
__CC_ARM
)

135 #i‚de‡
__ALIGN_END


136 
	#__ALIGN_END
 
	`__©åibuã__
 ((
	`Æig√d
 (4)))

	)

138 #i‚de‡
__ALIGN_BEGIN


139 
	#__ALIGN_BEGIN


	)

142 #i‚de‡
__ALIGN_END


143 
	#__ALIGN_END


	)

145 #i‚de‡
__ALIGN_BEGIN


146 #i‡
deföed
 (
__CC_ARM
)

147 
	#__ALIGN_BEGIN
 
	`__Æign
(4)

	)

148 #ñi‡
deföed
 (
__ICCARM__
)

149 
	#__ALIGN_BEGIN


	)

158 #i‡
deföed
 ( 
__CC_ARM
 ) || (deföed (
__ARMCC_VERSION
) && (__ARMCC_VERSION >= 6010050))

168 
	#__RAM_FUNC


	)

170 #ñi‡
deföed
 ( 
__ICCARM__
 )

175 
	#__RAM_FUNC
 
__ømfunc


	)

177 #ñi‡
deföed
 ( 
__GNUC__
 )

183 
	#__RAM_FUNC
 
	`__©åibuã__
((
	`£˘i⁄
(".RamFunc")))

	)

190 #i‡
deföed
 ( 
__CC_ARM
 ) || (deföed (
__ARMCC_VERSION
Ë&& (__ARMCC_VERSION >6010050)Ë|| deföed ( 
__GNUC__
 )

194 
	#__NOINLINE
 
	`__©åibuã__
 ( (
noölöe
Ë)

	)

196 #ñi‡
deföed
 ( 
__ICCARM__
 )

200 
	#__NOINLINE
 
	`_Pøgma
("›timizêno_ölöe")

	)

204 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_pcd.h

21 #i‚de‡
STM32F1xx_HAL_PCD_H


22 
	#STM32F1xx_HAL_PCD_H


	)

24 #ifde‡
__˝lu•lus


29 
	~"°m32f1xx_Œ_usb.h
"

31 #i‡
deföed
 (
USB
Ë|| deföed (
USB_OTG_FS
)

51 
HAL_PCD_STATE_RESET
 = 0x00,

52 
HAL_PCD_STATE_READY
 = 0x01,

53 
HAL_PCD_STATE_ERROR
 = 0x02,

54 
HAL_PCD_STATE_BUSY
 = 0x03,

55 
HAL_PCD_STATE_TIMEOUT
 = 0x04

56 } 
	tPCD_SèãTy≥Def
;

61 
LPM_L0
 = 0x00,

62 
LPM_L1
 = 0x01,

63 
LPM_L2
 = 0x02,

64 
LPM_L3
 = 0x03,

65 } 
	tPCD_LPM_SèãTy≥Def
;

69 
PCD_LPM_L0_ACTIVE
 = 0x00,

70 
PCD_LPM_L1_ACTIVE
 = 0x01,

71 } 
	tPCD_LPM_MsgTy≥Def
;

75 
PCD_BCD_ERROR
 = 0xFF,

76 
PCD_BCD_CONTACT_DETECTION
 = 0xFE,

77 
PCD_BCD_STD_DOWNSTREAM_PORT
 = 0xFD,

78 
PCD_BCD_CHARGING_DOWNSTREAM_PORT
 = 0xFC,

79 
PCD_BCD_DEDICATED_CHARGING_PORT
 = 0xFB,

80 
PCD_BCD_DISCOVERY_COMPLETED
 = 0x00,

82 } 
	tPCD_BCD_MsgTy≥Def
;

84 #i‡
deföed
 (
USB
)

87 #i‡
deföed
 (
USB_OTG_FS
)

88 
USB_OTG_GlobÆTy≥Def
 
	tPCD_Ty≥Def
;

89 
USB_OTG_CfgTy≥Def
 
	tPCD_InôTy≥Def
;

90 
USB_OTG_EPTy≥Def
 
	tPCD_EPTy≥Def
;

92 #i‡
deföed
 (
USB
)

93 
USB_Ty≥Def
 
	tPCD_Ty≥Def
;

94 
USB_CfgTy≥Def
 
	tPCD_InôTy≥Def
;

95 
USB_EPTy≥Def
 
	tPCD_EPTy≥Def
;

101 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

102 
__PCD_H™dÀTy≥Def


107 
PCD_Ty≥Def
 *
In°™˚
;

108 
PCD_InôTy≥Def
 
Inô
;

109 
__IO
 
uöt8_t
 
USB_Addªss
;

110 #i‡
deföed
 (
USB_OTG_FS
)

111 
PCD_EPTy≥Def
 
IN_ï
[16];

112 
PCD_EPTy≥Def
 
OUT_ï
[16];

114 #i‡
deföed
 (
USB
)

115 
PCD_EPTy≥Def
 
IN_ï
[8];

116 
PCD_EPTy≥Def
 
OUT_ï
[8];

118 
HAL_LockTy≥Def
 
Lock
;

119 
__IO
 
PCD_SèãTy≥Def
 
Sèã
;

120 
__IO
 
uöt32_t
 
Eº‹Code
;

121 
uöt32_t
 
Sëup
[12];

122 
PCD_LPM_SèãTy≥Def
 
LPM_Sèã
;

123 
uöt32_t
 
BESL
;

125 *
pD©a
;

127 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

128 (* 
SOFCÆlback
)(
__PCD_H™dÀTy≥Def
 *
hpcd
);

129 (* 
SëupSègeCÆlback
)(
__PCD_H™dÀTy≥Def
 *
hpcd
);

130 (* 
Re£tCÆlback
)(
__PCD_H™dÀTy≥Def
 *
hpcd
);

131 (* 
Su•ídCÆlback
)(
__PCD_H™dÀTy≥Def
 *
hpcd
);

132 (* 
ResumeCÆlback
)(
__PCD_H™dÀTy≥Def
 *
hpcd
);

133 (* 
C⁄√˘CÆlback
)(
__PCD_H™dÀTy≥Def
 *
hpcd
);

134 (* 
Disc⁄√˘CÆlback
)(
__PCD_H™dÀTy≥Def
 *
hpcd
);

136 (* 
D©aOutSègeCÆlback
)(
__PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ïnum
);

137 (* 
D©aInSègeCÆlback
)(
__PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ïnum
);

138 (* 
ISOOUTIncom∂ëeCÆlback
)(
__PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ïnum
);

139 (* 
ISOINIncom∂ëeCÆlback
)(
__PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ïnum
);

141 (* 
M•InôCÆlback
)(
__PCD_H™dÀTy≥Def
 *
hpcd
);

142 (* 
M•DeInôCÆlback
)(
__PCD_H™dÀTy≥Def
 *
hpcd
);

144 } 
	tPCD_H™dÀTy≥Def
;

151 
	~"°m32f1xx_hÆ_pcd_ex.h
"

161 
	#PCD_SPEED_FULL
 
USBD_FS_SPEED


	)

169 
	#PCD_PHY_ULPI
 1U

	)

170 
	#PCD_PHY_EMBEDDED
 2U

	)

171 
	#PCD_PHY_UTMI
 3U

	)

180 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

181 
	#HAL_PCD_ERROR_INVALID_CALLBACK
 (0x00000010UË

	)

197 #i‡
deföed
 (
USB_OTG_FS
)

198 
	#__HAL_PCD_ENABLE
(
__HANDLE__
Ë()
	`USB_E«bÀGlobÆI¡
 ((__HANDLE__)->
In°™˚
)

	)

199 
	#__HAL_PCD_DISABLE
(
__HANDLE__
Ë()
	`USB_DißbÀGlobÆI¡
 ((__HANDLE__)->
In°™˚
)

	)

201 
	#__HAL_PCD_GET_FLAG
(
__HANDLE__
, 
__INTERRUPT__
) \

202 ((
	`USB_RódI¡îru±s
((
__HANDLE__
)->
In°™˚
Ë& (
__INTERRUPT__
)Ë=(__INTERRUPT__))

	)

204 
	#__HAL_PCD_CLEAR_FLAG
(
__HANDLE__
, 
__INTERRUPT__
Ë(((__HANDLE__)->
In°™˚
->
GINTSTS
Ë&(__INTERRUPT__))

	)

205 
	#__HAL_PCD_IS_INVALID_INTERRUPT
(
__HANDLE__
Ë(
	`USB_RódI¡îru±s
((__HANDLE__)->
In°™˚
Ë=0U)

	)

207 
	#__HAL_PCD_UNGATE_PHYCLOCK
(
__HANDLE__
) \

208 *(
__IO
 
uöt32_t
 *)((uöt32_t)((
__HANDLE__
)->
In°™˚
Ë+ 
USB_OTG_PCGCCTL_BASE
Ë&~(
USB_OTG_PCGCCTL_STOPCLK
)

	)

210 
	#__HAL_PCD_GATE_PHYCLOCK
(
__HANDLE__
) \

211 *(
__IO
 
uöt32_t
 *)((uöt32_t)((
__HANDLE__
)->
In°™˚
Ë+ 
USB_OTG_PCGCCTL_BASE
Ë|
USB_OTG_PCGCCTL_STOPCLK


	)

213 
	#__HAL_PCD_IS_PHY_SUSPENDED
(
__HANDLE__
) \

214 ((*(
__IO
 
uöt32_t
 *)((uöt32_t)((
__HANDLE__
)->
In°™˚
Ë+ 
USB_OTG_PCGCCTL_BASE
)Ë& 0x10U)

	)

216 
	#__HAL_USB_OTG_FS_WAKEUP_EXTI_ENABLE_IT
(Ë
EXTI
->
IMR
 |
USB_OTG_FS_WAKEUP_EXTI_LINE


	)

217 
	#__HAL_USB_OTG_FS_WAKEUP_EXTI_DISABLE_IT
(Ë
EXTI
->
IMR
 &~(
USB_OTG_FS_WAKEUP_EXTI_LINE
)

	)

218 
	#__HAL_USB_OTG_FS_WAKEUP_EXTI_GET_FLAG
(Ë
EXTI
->
PR
 & (
USB_OTG_FS_WAKEUP_EXTI_LINE
)

	)

219 
	#__HAL_USB_OTG_FS_WAKEUP_EXTI_CLEAR_FLAG
(Ë
EXTI
->
PR
 = 
USB_OTG_FS_WAKEUP_EXTI_LINE


	)

221 
	#__HAL_USB_OTG_FS_WAKEUP_EXTI_ENABLE_RISING_EDGE
() \

223 
EXTI
->
FTSR
 &~(
USB_OTG_FS_WAKEUP_EXTI_LINE
); \

224 
EXTI
->
RTSR
 |
USB_OTG_FS_WAKEUP_EXTI_LINE
; \

225 } 0U)

	)

228 #i‡
deföed
 (
USB
)

229 
	#__HAL_PCD_ENABLE
(
__HANDLE__
Ë()
	`USB_E«bÀGlobÆI¡
 ((__HANDLE__)->
In°™˚
)

	)

230 
	#__HAL_PCD_DISABLE
(
__HANDLE__
Ë()
	`USB_DißbÀGlobÆI¡
 ((__HANDLE__)->
In°™˚
)

	)

231 
	#__HAL_PCD_GET_FLAG
(
__HANDLE__
, 
__INTERRUPT__
Ë((
	`USB_RódI¡îru±s
((__HANDLE__)->
In°™˚
)\

232 & (
__INTERRUPT__
)Ë=(__INTERRUPT__))

	)

234 
	#__HAL_PCD_CLEAR_FLAG
(
__HANDLE__
, 
__INTERRUPT__
Ë(((__HANDLE__)->
In°™˚
->
ISTR
)\

235 &(
uöt16_t
)(~(
__INTERRUPT__
)))

	)

237 
	#__HAL_USB_WAKEUP_EXTI_ENABLE_IT
(Ë
EXTI
->
IMR
 |
USB_WAKEUP_EXTI_LINE


	)

238 
	#__HAL_USB_WAKEUP_EXTI_DISABLE_IT
(Ë
EXTI
->
IMR
 &~(
USB_WAKEUP_EXTI_LINE
)

	)

239 
	#__HAL_USB_WAKEUP_EXTI_GET_FLAG
(Ë
EXTI
->
PR
 & (
USB_WAKEUP_EXTI_LINE
)

	)

240 
	#__HAL_USB_WAKEUP_EXTI_CLEAR_FLAG
(Ë
EXTI
->
PR
 = 
USB_WAKEUP_EXTI_LINE


	)

242 
	#__HAL_USB_WAKEUP_EXTI_ENABLE_RISING_EDGE
() \

244 
EXTI
->
FTSR
 &~(
USB_WAKEUP_EXTI_LINE
); \

245 
EXTI
->
RTSR
 |
USB_WAKEUP_EXTI_LINE
; \

246 } 0U)

	)

263 
HAL_SètusTy≥Def
 
HAL_PCD_Inô
(
PCD_H™dÀTy≥Def
 *
hpcd
);

264 
HAL_SètusTy≥Def
 
HAL_PCD_DeInô
(
PCD_H™dÀTy≥Def
 *
hpcd
);

265 
HAL_PCD_M•Inô
(
PCD_H™dÀTy≥Def
 *
hpcd
);

266 
HAL_PCD_M•DeInô
(
PCD_H™dÀTy≥Def
 *
hpcd
);

268 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

275 
HAL_PCD_SOF_CB_ID
 = 0x01,

276 
HAL_PCD_SETUPSTAGE_CB_ID
 = 0x02,

277 
HAL_PCD_RESET_CB_ID
 = 0x03,

278 
HAL_PCD_SUSPEND_CB_ID
 = 0x04,

279 
HAL_PCD_RESUME_CB_ID
 = 0x05,

280 
HAL_PCD_CONNECT_CB_ID
 = 0x06,

281 
HAL_PCD_DISCONNECT_CB_ID
 = 0x07,

283 
HAL_PCD_MSPINIT_CB_ID
 = 0x08,

284 
HAL_PCD_MSPDEINIT_CB_ID
 = 0x09

286 } 
	tHAL_PCD_CÆlbackIDTy≥Def
;

296 (*
pPCD_CÆlbackTy≥Def
)(
	tPCD_H™dÀTy≥Def
 *
	thpcd
);

297 (*
pPCD_D©aOutSègeCÆlbackTy≥Def
)(
	tPCD_H™dÀTy≥Def
 *
	thpcd
, 
	tuöt8_t
 
	tïnum
);

298 (*
pPCD_D©aInSègeCÆlbackTy≥Def
)(
	tPCD_H™dÀTy≥Def
 *
	thpcd
, 
	tuöt8_t
 
	tïnum
);

299 (*
pPCD_IsoOutIn˝…CÆlbackTy≥Def
)(
	tPCD_H™dÀTy≥Def
 *
	thpcd
, 
	tuöt8_t
 
	tïnum
);

300 (*
pPCD_IsoInIn˝…CÆlbackTy≥Def
)(
	tPCD_H™dÀTy≥Def
 *
	thpcd
, 
	tuöt8_t
 
	tïnum
);

306 
HAL_SètusTy≥Def
 
HAL_PCD_Regi°îCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
,

307 
HAL_PCD_CÆlbackIDTy≥Def
 
CÆlbackID
,

308 
pPCD_CÆlbackTy≥Def
 
pCÆlback
);

310 
HAL_SètusTy≥Def
 
HAL_PCD_UnRegi°îCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
,

311 
HAL_PCD_CÆlbackIDTy≥Def
 
CÆlbackID
);

313 
HAL_SètusTy≥Def
 
HAL_PCD_Regi°îD©aOutSègeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
,

314 
pPCD_D©aOutSègeCÆlbackTy≥Def
 
pCÆlback
);

316 
HAL_SètusTy≥Def
 
HAL_PCD_UnRegi°îD©aOutSègeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
);

318 
HAL_SètusTy≥Def
 
HAL_PCD_Regi°îD©aInSègeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
,

319 
pPCD_D©aInSègeCÆlbackTy≥Def
 
pCÆlback
);

321 
HAL_SètusTy≥Def
 
HAL_PCD_UnRegi°îD©aInSègeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
);

323 
HAL_SètusTy≥Def
 
HAL_PCD_Regi°îIsoOutIn˝…CÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
,

324 
pPCD_IsoOutIn˝…CÆlbackTy≥Def
 
pCÆlback
);

326 
HAL_SètusTy≥Def
 
HAL_PCD_UnRegi°îIsoOutIn˝…CÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
);

328 
HAL_SètusTy≥Def
 
HAL_PCD_Regi°îIsoInIn˝…CÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
,

329 
pPCD_IsoInIn˝…CÆlbackTy≥Def
 
pCÆlback
);

331 
HAL_SètusTy≥Def
 
HAL_PCD_UnRegi°îIsoInIn˝…CÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
);

343 
HAL_SètusTy≥Def
 
HAL_PCD_Sèπ
(
PCD_H™dÀTy≥Def
 *
hpcd
);

344 
HAL_SètusTy≥Def
 
HAL_PCD_St›
(
PCD_H™dÀTy≥Def
 *
hpcd
);

345 
HAL_PCD_IRQH™dÀr
(
PCD_H™dÀTy≥Def
 *
hpcd
);

346 
HAL_PCD_WKUP_IRQH™dÀr
(
PCD_H™dÀTy≥Def
 *
hpcd
);

348 
HAL_PCD_SOFCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
);

349 
HAL_PCD_SëupSègeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
);

350 
HAL_PCD_Re£tCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
);

351 
HAL_PCD_Su•ídCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
);

352 
HAL_PCD_ResumeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
);

353 
HAL_PCD_C⁄√˘CÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
);

354 
HAL_PCD_Disc⁄√˘CÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
);

356 
HAL_PCD_D©aOutSègeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ïnum
);

357 
HAL_PCD_D©aInSègeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ïnum
);

358 
HAL_PCD_ISOOUTIncom∂ëeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ïnum
);

359 
HAL_PCD_ISOINIncom∂ëeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ïnum
);

368 
HAL_SètusTy≥Def
 
HAL_PCD_DevC⁄√˘
(
PCD_H™dÀTy≥Def
 *
hpcd
);

369 
HAL_SètusTy≥Def
 
HAL_PCD_DevDisc⁄√˘
(
PCD_H™dÀTy≥Def
 *
hpcd
);

370 
HAL_SètusTy≥Def
 
HAL_PCD_SëAddªss
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
addªss
);

371 
HAL_SètusTy≥Def
 
HAL_PCD_EP_O≥n
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ï_addr
,

372 
uöt16_t
 
ï_mps
, 
uöt8_t
 
ï_ty≥
);

374 
HAL_SètusTy≥Def
 
HAL_PCD_EP_Clo£
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ï_addr
);

375 
HAL_SètusTy≥Def
 
HAL_PCD_EP_Re˚ive
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ï_addr
,

376 
uöt8_t
 *
pBuf
, 
uöt32_t
 
Àn
);

378 
HAL_SètusTy≥Def
 
HAL_PCD_EP_Tønsmô
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ï_addr
,

379 
uöt8_t
 *
pBuf
, 
uöt32_t
 
Àn
);

382 
HAL_SètusTy≥Def
 
HAL_PCD_EP_SëSèŒ
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ï_addr
);

383 
HAL_SètusTy≥Def
 
HAL_PCD_EP_CÃSèŒ
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ï_addr
);

384 
HAL_SètusTy≥Def
 
HAL_PCD_EP_Flush
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ï_addr
);

385 
HAL_SètusTy≥Def
 
HAL_PCD_A˘iv©eRemŸeWakeup
(
PCD_H™dÀTy≥Def
 *
hpcd
);

386 
HAL_SètusTy≥Def
 
HAL_PCD_DeA˘iv©eRemŸeWakeup
(
PCD_H™dÀTy≥Def
 *
hpcd
);

388 
uöt32_t
 
HAL_PCD_EP_GëRxCou¡
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ï_addr
);

397 
PCD_SèãTy≥Def
 
HAL_PCD_GëSèã
(
PCD_H™dÀTy≥Def
 *
hpcd
);

413 #i‡
deföed
 (
USB_OTG_FS
)

414 
	#USB_OTG_FS_WAKEUP_EXTI_LINE
 (0x1U << 18Ë

	)

417 #i‡
deföed
 (
USB
)

418 
	#USB_WAKEUP_EXTI_LINE
 (0x1U << 18Ë

	)

424 #i‡
deföed
 (
USB
)

428 
	#PCD_EP0MPS_64
 
EP_MPS_64


	)

429 
	#PCD_EP0MPS_32
 
EP_MPS_32


	)

430 
	#PCD_EP0MPS_16
 
EP_MPS_16


	)

431 
	#PCD_EP0MPS_08
 
EP_MPS_8


	)

439 
	#PCD_ENDP0
 0U

	)

440 
	#PCD_ENDP1
 1U

	)

441 
	#PCD_ENDP2
 2U

	)

442 
	#PCD_ENDP3
 3U

	)

443 
	#PCD_ENDP4
 4U

	)

444 
	#PCD_ENDP5
 5U

	)

445 
	#PCD_ENDP6
 6U

	)

446 
	#PCD_ENDP7
 7U

	)

454 
	#PCD_SNG_BUF
 0U

	)

455 
	#PCD_DBL_BUF
 1U

	)

464 #i‡
deföed
 (
USB_OTG_FS
)

465 #i‚de‡
USB_OTG_DOEPINT_OTEPSPR


466 
	#USB_OTG_DOEPINT_OTEPSPR
 (0x1UL << 5Ë

	)

469 #i‚de‡
USB_OTG_DOEPMSK_OTEPSPRM


470 
	#USB_OTG_DOEPMSK_OTEPSPRM
 (0x1UL << 5Ë

	)

473 #i‚de‡
USB_OTG_DOEPINT_NAK


474 
	#USB_OTG_DOEPINT_NAK
 (0x1UL << 13Ë

	)

477 #i‚de‡
USB_OTG_DOEPMSK_NAKM


478 
	#USB_OTG_DOEPMSK_NAKM
 (0x1UL << 13Ë

	)

481 #i‚de‡
USB_OTG_DOEPINT_STPKTRX


482 
	#USB_OTG_DOEPINT_STPKTRX
 (0x1UL << 15Ë

	)

485 #i‚de‡
USB_OTG_DOEPMSK_NYETM


486 
	#USB_OTG_DOEPMSK_NYETM
 (0x1UL << 14Ë

	)

494 #i‡
deföed
 (
USB
)

496 
	#USB_CNTRX_NBLK_MSK
 (0x1FU << 10)

	)

497 
	#USB_CNTRX_BLSIZE
 (0x1U << 15)

	)

500 
	#PCD_SET_ENDPOINT
(
USBx
, 
bEpNum
, 
wRegVÆue
Ë(*(
__IO
 
uöt16_t
 *)\

501 (&(
USBx
)->
EP0R
 + ((
bEpNum
Ë* 2U)Ë(
uöt16_t
)(
wRegVÆue
))

	)

504 
	#PCD_GET_ENDPOINT
(
USBx
, 
bEpNum
Ë(*(
__IO
 
uöt16_t
 *)(&(USBx)->
EP0R
 + ((bEpNumË* 2U)))

	)

507 
	#USB_EP0SèπX„r
 
USB_EPSèπX„r


	)

516 
	#PCD_SET_EPTYPE
(
USBx
, 
bEpNum
, 
wTy≥
Ë(
	`PCD_SET_ENDPOINT
((USBx), (bEpNum), ((
	`PCD_GET_ENDPOINT
((USBx), (bEpNum))\

517 & 
USB_EP_T_MASK
Ë| (
wTy≥
Ë| 
USB_EP_CTR_TX
 | 
USB_EP_CTR_RX
)))

	)

526 
	#PCD_GET_EPTYPE
(
USBx
, 
bEpNum
Ë(
	`PCD_GET_ENDPOINT
((USBx), (bEpNum)Ë& 
USB_EP_T_FIELD
)

	)

535 
	#PCD_FªeU£rBuf„r
(
USBx
, 
bEpNum
, 
bDú
) \

537 i‡((
bDú
) == 0U) \

540 
	`PCD_TX_DTOG
((
USBx
), (
bEpNum
)); \

542 i‡((
bDú
) == 1U) \

545 
	`PCD_RX_DTOG
((
USBx
), (
bEpNum
)); \

547 } 0)

	)

556 
	#PCD_SET_EP_TX_STATUS
(
USBx
, 
bEpNum
, 
wSèã
) \

558 
uöt16_t
 
_wRegVÆ
; \

560 
_wRegVÆ
 = 
	`PCD_GET_ENDPOINT
((
USBx
), (
bEpNum
)Ë& 
USB_EPTX_DTOGMASK
; \

562 i‡((
USB_EPTX_DTOG1
 & (
wSèã
))!= 0U) \

564 
_wRegVÆ
 ^
USB_EPTX_DTOG1
; \

567 i‡((
USB_EPTX_DTOG2
 & (
wSèã
))!= 0U) \

569 
_wRegVÆ
 ^
USB_EPTX_DTOG2
; \

571 
	`PCD_SET_ENDPOINT
((
USBx
), (
bEpNum
), (
_wRegVÆ
 | 
USB_EP_CTR_RX
 | 
USB_EP_CTR_TX
)); \

572 } 0Ë

	)

581 
	#PCD_SET_EP_RX_STATUS
(
USBx
, 
bEpNum
,
wSèã
) \

583 
uöt16_t
 
_wRegVÆ
; \

585 
_wRegVÆ
 = 
	`PCD_GET_ENDPOINT
((
USBx
), (
bEpNum
)Ë& 
USB_EPRX_DTOGMASK
; \

587 i‡((
USB_EPRX_DTOG1
 & (
wSèã
))!= 0U) \

589 
_wRegVÆ
 ^
USB_EPRX_DTOG1
; \

592 i‡((
USB_EPRX_DTOG2
 & (
wSèã
))!= 0U) \

594 
_wRegVÆ
 ^
USB_EPRX_DTOG2
; \

596 
	`PCD_SET_ENDPOINT
((
USBx
), (
bEpNum
), (
_wRegVÆ
 | 
USB_EP_CTR_RX
 | 
USB_EP_CTR_TX
)); \

597 } 0Ë

	)

607 
	#PCD_SET_EP_TXRX_STATUS
(
USBx
, 
bEpNum
, 
wSèãrx
, 
wSèãtx
) \

609 
uöt16_t
 
_wRegVÆ
; \

611 
_wRegVÆ
 = 
	`PCD_GET_ENDPOINT
((
USBx
), (
bEpNum
)Ë& (
USB_EPRX_DTOGMASK
 | 
USB_EPTX_STAT
); \

613 i‡((
USB_EPRX_DTOG1
 & (
wSèãrx
))!= 0U) \

615 
_wRegVÆ
 ^
USB_EPRX_DTOG1
; \

618 i‡((
USB_EPRX_DTOG2
 & (
wSèãrx
))!= 0U) \

620 
_wRegVÆ
 ^
USB_EPRX_DTOG2
; \

623 i‡((
USB_EPTX_DTOG1
 & (
wSèãtx
))!= 0U) \

625 
_wRegVÆ
 ^
USB_EPTX_DTOG1
; \

628 i‡((
USB_EPTX_DTOG2
 & (
wSèãtx
))!= 0U) \

630 
_wRegVÆ
 ^
USB_EPTX_DTOG2
; \

633 
	`PCD_SET_ENDPOINT
((
USBx
), (
bEpNum
), (
_wRegVÆ
 | 
USB_EP_CTR_RX
 | 
USB_EP_CTR_TX
)); \

634 } 0Ë

	)

643 
	#PCD_GET_EP_TX_STATUS
(
USBx
, 
bEpNum
Ë((
uöt16_t
)
	`PCD_GET_ENDPOINT
((USBx), (bEpNum)Ë& 
USB_EPTX_STAT
)

	)

644 
	#PCD_GET_EP_RX_STATUS
(
USBx
, 
bEpNum
Ë((
uöt16_t
)
	`PCD_GET_ENDPOINT
((USBx), (bEpNum)Ë& 
USB_EPRX_STAT
)

	)

652 
	#PCD_SET_EP_TX_VALID
(
USBx
, 
bEpNum
Ë(
	`PCD_SET_EP_TX_STATUS
((USBx), (bEpNum), 
USB_EP_TX_VALID
))

	)

653 
	#PCD_SET_EP_RX_VALID
(
USBx
, 
bEpNum
Ë(
	`PCD_SET_EP_RX_STATUS
((USBx), (bEpNum), 
USB_EP_RX_VALID
))

	)

661 
	#PCD_GET_EP_TX_STALL_STATUS
(
USBx
, 
bEpNum
Ë(
	`PCD_GET_EP_TX_STATUS
((USBx), (bEpNum)Ë=
USB_EP_TX_STALL
)

	)

662 
	#PCD_GET_EP_RX_STALL_STATUS
(
USBx
, 
bEpNum
Ë(
	`PCD_GET_EP_RX_STATUS
((USBx), (bEpNum)Ë=
USB_EP_RX_STALL
)

	)

670 
	#PCD_SET_EP_KIND
(
USBx
, 
bEpNum
) \

672 
uöt16_t
 
_wRegVÆ
; \

674 
_wRegVÆ
 = 
	`PCD_GET_ENDPOINT
((
USBx
), (
bEpNum
)Ë& 
USB_EPREG_MASK
; \

676 
	`PCD_SET_ENDPOINT
((
USBx
), (
bEpNum
), (
_wRegVÆ
 | 
USB_EP_CTR_RX
 | 
USB_EP_CTR_TX
 | 
USB_EP_KIND
)); \

677 } 0Ë

	)

679 
	#PCD_CLEAR_EP_KIND
(
USBx
, 
bEpNum
) \

681 
uöt16_t
 
_wRegVÆ
; \

683 
_wRegVÆ
 = 
	`PCD_GET_ENDPOINT
((
USBx
), (
bEpNum
)Ë& 
USB_EPKIND_MASK
; \

685 
	`PCD_SET_ENDPOINT
((
USBx
), (
bEpNum
), (
_wRegVÆ
 | 
USB_EP_CTR_RX
 | 
USB_EP_CTR_TX
)); \

686 } 0Ë

	)

694 
	#PCD_SET_OUT_STATUS
(
USBx
, 
bEpNum
Ë
	`PCD_SET_EP_KIND
((USBx), (bEpNum))

	)

695 
	#PCD_CLEAR_OUT_STATUS
(
USBx
, 
bEpNum
Ë
	`PCD_CLEAR_EP_KIND
((USBx), (bEpNum))

	)

703 
	#PCD_SET_EP_DBUF
(
USBx
, 
bEpNum
Ë
	`PCD_SET_EP_KIND
((USBx), (bEpNum))

	)

704 
	#PCD_CLEAR_EP_DBUF
(
USBx
, 
bEpNum
Ë
	`PCD_CLEAR_EP_KIND
((USBx), (bEpNum))

	)

712 
	#PCD_CLEAR_RX_EP_CTR
(
USBx
, 
bEpNum
) \

714 
uöt16_t
 
_wRegVÆ
; \

716 
_wRegVÆ
 = 
	`PCD_GET_ENDPOINT
((
USBx
), (
bEpNum
)Ë& (0x7FFFU & 
USB_EPREG_MASK
); \

718 
	`PCD_SET_ENDPOINT
((
USBx
), (
bEpNum
), (
_wRegVÆ
 | 
USB_EP_CTR_TX
)); \

719 } 0Ë

	)

721 
	#PCD_CLEAR_TX_EP_CTR
(
USBx
, 
bEpNum
) \

723 
uöt16_t
 
_wRegVÆ
; \

725 
_wRegVÆ
 = 
	`PCD_GET_ENDPOINT
((
USBx
), (
bEpNum
)Ë& (0xFF7FU & 
USB_EPREG_MASK
); \

727 
	`PCD_SET_ENDPOINT
((
USBx
), (
bEpNum
), (
_wRegVÆ
 | 
USB_EP_CTR_RX
)); \

728 } 0Ë

	)

736 
	#PCD_RX_DTOG
(
USBx
, 
bEpNum
) \

738 
uöt16_t
 
_wEPVÆ
; \

740 
_wEPVÆ
 = 
	`PCD_GET_ENDPOINT
((
USBx
), (
bEpNum
)Ë& 
USB_EPREG_MASK
; \

742 
	`PCD_SET_ENDPOINT
((
USBx
), (
bEpNum
), (
_wEPVÆ
 | 
USB_EP_CTR_RX
 | 
USB_EP_CTR_TX
 | 
USB_EP_DTOG_RX
)); \

743 } 0Ë

	)

745 
	#PCD_TX_DTOG
(
USBx
, 
bEpNum
) \

747 
uöt16_t
 
_wEPVÆ
; \

749 
_wEPVÆ
 = 
	`PCD_GET_ENDPOINT
((
USBx
), (
bEpNum
)Ë& 
USB_EPREG_MASK
; \

751 
	`PCD_SET_ENDPOINT
((
USBx
), (
bEpNum
), (
_wEPVÆ
 | 
USB_EP_CTR_RX
 | 
USB_EP_CTR_TX
 | 
USB_EP_DTOG_TX
)); \

752 } 0Ë

	)

759 
	#PCD_CLEAR_RX_DTOG
(
USBx
, 
bEpNum
) \

761 
uöt16_t
 
_wRegVÆ
; \

763 
_wRegVÆ
 = 
	`PCD_GET_ENDPOINT
((
USBx
), (
bEpNum
)); \

765 i‡((
_wRegVÆ
 & 
USB_EP_DTOG_RX
) != 0U)\

767 
	`PCD_RX_DTOG
((
USBx
), (
bEpNum
)); \

769 } 0Ë

	)

771 
	#PCD_CLEAR_TX_DTOG
(
USBx
, 
bEpNum
) \

773 
uöt16_t
 
_wRegVÆ
; \

775 
_wRegVÆ
 = 
	`PCD_GET_ENDPOINT
((
USBx
), (
bEpNum
)); \

777 i‡((
_wRegVÆ
 & 
USB_EP_DTOG_TX
) != 0U)\

779 
	`PCD_TX_DTOG
((
USBx
), (
bEpNum
)); \

781 } 0Ë

	)

790 
	#PCD_SET_EP_ADDRESS
(
USBx
, 
bEpNum
, 
bAddr
) \

792 
uöt16_t
 
_wRegVÆ
; \

794 
_wRegVÆ
 = (
	`PCD_GET_ENDPOINT
((
USBx
), (
bEpNum
)Ë& 
USB_EPREG_MASK
Ë| (
bAddr
); \

796 
	`PCD_SET_ENDPOINT
((
USBx
), (
bEpNum
), (
_wRegVÆ
 | 
USB_EP_CTR_RX
 | 
USB_EP_CTR_TX
)); \

797 } 0Ë

	)

805 
	#PCD_GET_EP_ADDRESS
(
USBx
, 
bEpNum
Ë((
uöt8_t
)(
	`PCD_GET_ENDPOINT
((USBx), (bEpNum)Ë& 
USB_EPADDR_FIELD
))

	)

807 
	#PCD_EP_TX_CNT
(
USBx
, 
bEpNum
Ë((
uöt16_t
 *)((((
uöt32_t
)(USBx)->
BTABLE
\

808 + ((
uöt32_t
)(
bEpNum
Ë* 8UË+ 2UË* 
PMA_ACCESS
Ë+ ((uöt32_t)(
USBx
Ë+ 0x400U)))

	)

810 
	#PCD_EP_RX_CNT
(
USBx
, 
bEpNum
Ë((
uöt16_t
 *)((((
uöt32_t
)(USBx)->
BTABLE
\

811 + ((
uöt32_t
)(
bEpNum
Ë* 8UË+ 6UË* 
PMA_ACCESS
Ë+ ((uöt32_t)(
USBx
Ë+ 0x400U)))

	)

821 
	#PCD_SET_EP_TX_ADDRESS
(
USBx
, 
bEpNum
, 
wAddr
) \

823 
__IO
 
uöt16_t
 *
_wRegVÆ
; \

824 
uöt32_t
 
_wRegBa£
 = (uöt32_t)
USBx
; \

826 
_wRegBa£
 +(
uöt32_t
)(
USBx
)->
BTABLE
; \

827 
_wRegVÆ
 = (
__IO
 
uöt16_t
 *)(
_wRegBa£
 + 0x400U + (((
uöt32_t
)(
bEpNum
Ë* 8UË* 
PMA_ACCESS
)); \

828 *
_wRegVÆ
 = ((
wAddr
) >> 1) << 1; \

829 } 0Ë

	)

831 
	#PCD_SET_EP_RX_ADDRESS
(
USBx
, 
bEpNum
, 
wAddr
) \

833 
__IO
 
uöt16_t
 *
_wRegVÆ
; \

834 
uöt32_t
 
_wRegBa£
 = (uöt32_t)
USBx
; \

836 
_wRegBa£
 +(
uöt32_t
)(
USBx
)->
BTABLE
; \

837 
_wRegVÆ
 = (
__IO
 
uöt16_t
 *)(
_wRegBa£
 + 0x400U + ((((
uöt32_t
)(
bEpNum
Ë* 8UË+ 4UË* 
PMA_ACCESS
)); \

838 *
_wRegVÆ
 = ((
wAddr
) >> 1) << 1; \

839 } 0Ë

	)

847 
	#PCD_GET_EP_TX_ADDRESS
(
USBx
, 
bEpNum
Ë((
uöt16_t
)*
	`PCD_EP_TX_ADDRESS
((USBx), (bEpNum)))

	)

848 
	#PCD_GET_EP_RX_ADDRESS
(
USBx
, 
bEpNum
Ë((
uöt16_t
)*
	`PCD_EP_RX_ADDRESS
((USBx), (bEpNum)))

	)

857 
	#PCD_CALC_BLK32
(
pdwReg
, 
wCou¡
, 
wNBlocks
) \

859 (
wNBlocks
Ë(
wCou¡
) >> 5; \

860 i‡(((
wCou¡
) & 0x1fU) == 0U) \

862 (
wNBlocks
)--; \

864 *(
pdwReg
Ë(
uöt16_t
)(((
wNBlocks
Ë<< 10Ë| 
USB_CNTRX_BLSIZE
); \

865 } 0Ë

	)

867 
	#PCD_CALC_BLK2
(
pdwReg
, 
wCou¡
, 
wNBlocks
) \

869 (
wNBlocks
Ë(
wCou¡
) >> 1; \

870 i‡(((
wCou¡
) & 0x1U) != 0U) \

872 (
wNBlocks
)++; \

874 *(
pdwReg
Ë(
uöt16_t
)((
wNBlocks
) << 10); \

875 } 0Ë

	)

877 
	#PCD_SET_EP_CNT_RX_REG
(
pdwReg
, 
wCou¡
) \

879 
uöt32_t
 
wNBlocks
; \

880 i‡((
wCou¡
) == 0U) \

882 *(
pdwReg
Ë&(
uöt16_t
)~
USB_CNTRX_NBLK_MSK
; \

883 *(
pdwReg
Ë|
USB_CNTRX_BLSIZE
; \

885 if((
wCou¡
) <= 62U) \

887 
	`PCD_CALC_BLK2
((
pdwReg
), (
wCou¡
), 
wNBlocks
); \

891 
	`PCD_CALC_BLK32
((
pdwReg
), (
wCou¡
), 
wNBlocks
); \

893 } 0Ë

	)

895 
	#PCD_SET_EP_RX_DBUF0_CNT
(
USBx
, 
bEpNum
, 
wCou¡
) \

897 
uöt32_t
 
_wRegBa£
 = (uöt32_t)(
USBx
); \

898 
__IO
 
uöt16_t
 *
pdwReg
; \

900 
_wRegBa£
 +(
uöt32_t
)(
USBx
)->
BTABLE
; \

901 
pdwReg
 = (
__IO
 
uöt16_t
 *)(
_wRegBa£
 + 0x400U + ((((
uöt32_t
)(
bEpNum
Ë* 8UË+ 2UË* 
PMA_ACCESS
)); \

902 
	`PCD_SET_EP_CNT_RX_REG
(
pdwReg
, (
wCou¡
)); \

903 } 0)

	)

912 
	#PCD_SET_EP_TX_CNT
(
USBx
, 
bEpNum
, 
wCou¡
) \

914 
uöt32_t
 
_wRegBa£
 = (uöt32_t)(
USBx
); \

915 
__IO
 
uöt16_t
 *
_wRegVÆ
; \

917 
_wRegBa£
 +(
uöt32_t
)(
USBx
)->
BTABLE
; \

918 
_wRegVÆ
 = (
__IO
 
uöt16_t
 *)(
_wRegBa£
 + 0x400U + ((((
uöt32_t
)(
bEpNum
Ë* 8UË+ 2UË* 
PMA_ACCESS
)); \

919 *
_wRegVÆ
 = (
uöt16_t
)(
wCou¡
); \

920 } 0)

	)

922 
	#PCD_SET_EP_RX_CNT
(
USBx
, 
bEpNum
, 
wCou¡
) \

924 
uöt32_t
 
_wRegBa£
 = (uöt32_t)(
USBx
); \

925 
__IO
 
uöt16_t
 *
_wRegVÆ
; \

927 
_wRegBa£
 +(
uöt32_t
)(
USBx
)->
BTABLE
; \

928 
_wRegVÆ
 = (
__IO
 
uöt16_t
 *)(
_wRegBa£
 + 0x400U + ((((
uöt32_t
)(
bEpNum
Ë* 8UË+ 6UË* 
PMA_ACCESS
)); \

929 
	`PCD_SET_EP_CNT_RX_REG
(
_wRegVÆ
, (
wCou¡
)); \

930 } 0)

	)

938 
	#PCD_GET_EP_TX_CNT
(
USBx
, 
bEpNum
Ë((
uöt32_t
)(*
	`PCD_EP_TX_CNT
((USBx), (bEpNum))Ë& 0x3ffU)

	)

939 
	#PCD_GET_EP_RX_CNT
(
USBx
, 
bEpNum
Ë((
uöt32_t
)(*
	`PCD_EP_RX_CNT
((USBx), (bEpNum))Ë& 0x3ffU)

	)

948 
	#PCD_SET_EP_DBUF0_ADDR
(
USBx
, 
bEpNum
, 
wBuf0Addr
) \

950 
	`PCD_SET_EP_TX_ADDRESS
((
USBx
), (
bEpNum
), (
wBuf0Addr
)); \

951 } 0Ë

	)

953 
	#PCD_SET_EP_DBUF1_ADDR
(
USBx
, 
bEpNum
, 
wBuf1Addr
) \

955 
	`PCD_SET_EP_RX_ADDRESS
((
USBx
), (
bEpNum
), (
wBuf1Addr
)); \

956 } 0Ë

	)

966 
	#PCD_SET_EP_DBUF_ADDR
(
USBx
, 
bEpNum
, 
wBuf0Addr
, 
wBuf1Addr
) \

968 
	`PCD_SET_EP_DBUF0_ADDR
((
USBx
), (
bEpNum
), (
wBuf0Addr
)); \

969 
	`PCD_SET_EP_DBUF1_ADDR
((
USBx
), (
bEpNum
), (
wBuf1Addr
)); \

970 } 0Ë

	)

978 
	#PCD_GET_EP_DBUF0_ADDR
(
USBx
, 
bEpNum
Ë(
	`PCD_GET_EP_TX_ADDRESS
((USBx), (bEpNum)))

	)

979 
	#PCD_GET_EP_DBUF1_ADDR
(
USBx
, 
bEpNum
Ë(
	`PCD_GET_EP_RX_ADDRESS
((USBx), (bEpNum)))

	)

990 
	#PCD_SET_EP_DBUF0_CNT
(
USBx
, 
bEpNum
, 
bDú
, 
wCou¡
) \

992 i‡((
bDú
) == 0U) \

995 
	`PCD_SET_EP_RX_DBUF0_CNT
((
USBx
), (
bEpNum
), (
wCou¡
)); \

999 i‡((
bDú
) == 1U) \

1002 
	`PCD_SET_EP_TX_CNT
((
USBx
), (
bEpNum
), (
wCou¡
)); \

1005 } 0Ë

	)

1007 
	#PCD_SET_EP_DBUF1_CNT
(
USBx
, 
bEpNum
, 
bDú
, 
wCou¡
) \

1009 
uöt32_t
 
_wBa£
 = (uöt32_t)(
USBx
); \

1010 
__IO
 
uöt16_t
 *
_wEPRegVÆ
; \

1012 i‡((
bDú
) == 0U) \

1015 
	`PCD_SET_EP_RX_CNT
((
USBx
), (
bEpNum
), (
wCou¡
)); \

1019 i‡((
bDú
) == 1U) \

1022 
_wBa£
 +(
uöt32_t
)(
USBx
)->
BTABLE
; \

1023 
_wEPRegVÆ
 = (
__IO
 
uöt16_t
 *)(
_wBa£
 + 0x400U + ((((
uöt32_t
)(
bEpNum
Ë* 8UË+ 6UË* 
PMA_ACCESS
)); \

1024 *
_wEPRegVÆ
 = (
uöt16_t
)(
wCou¡
); \

1027 } 0Ë

	)

1029 
	#PCD_SET_EP_DBUF_CNT
(
USBx
, 
bEpNum
, 
bDú
, 
wCou¡
) \

1031 
	`PCD_SET_EP_DBUF0_CNT
((
USBx
), (
bEpNum
), (
bDú
), (
wCou¡
)); \

1032 
	`PCD_SET_EP_DBUF1_CNT
((
USBx
), (
bEpNum
), (
bDú
), (
wCou¡
)); \

1033 } 0Ë

	)

1041 
	#PCD_GET_EP_DBUF0_CNT
(
USBx
, 
bEpNum
Ë(
	`PCD_GET_EP_TX_CNT
((USBx), (bEpNum)))

	)

1042 
	#PCD_GET_EP_DBUF1_CNT
(
USBx
, 
bEpNum
Ë(
	`PCD_GET_EP_RX_CNT
((USBx), (bEpNum)))

	)

1059 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_pcd_ex.h

21 #i‚de‡
STM32F1xx_HAL_PCD_EX_H


22 
	#STM32F1xx_HAL_PCD_EX_H


	)

24 #ifde‡
__˝lu•lus


29 
	~"°m32f1xx_hÆ_def.h
"

31 #i‡
deföed
 (
USB
Ë|| deföed (
USB_OTG_FS
)

50 #i‡
deföed
 (
USB_OTG_FS
)

51 
HAL_SètusTy≥Def
 
HAL_PCDEx_SëTxFiFo
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
fifo
, 
uöt16_t
 
size
);

52 
HAL_SètusTy≥Def
 
HAL_PCDEx_SëRxFiFo
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt16_t
 
size
);

55 #i‡
deföed
 (
USB
)

56 
HAL_SètusTy≥Def
 
HAL_PCDEx_PMAC⁄fig
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt16_t
 
ï_addr
,

57 
uöt16_t
 
ï_köd
, 
uöt32_t
 
pmØdªss
);

59 
HAL_PCDEx_SëC⁄√˘i⁄Sèã
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
°©e
);

61 
HAL_PCDEx_LPM_CÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
PCD_LPM_MsgTy≥Def
 
msg
);

62 
HAL_PCDEx_BCD_CÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
PCD_BCD_MsgTy≥Def
 
msg
);

81 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32F1xx_HAL_Driver\Inc\stm32f1xx_ll_usb.h

21 #i‚de‡
STM32F1xx_LL_USB_H


22 
	#STM32F1xx_LL_USB_H


	)

24 #ifde‡
__˝lu•lus


29 
	~"°m32f1xx_hÆ_def.h
"

31 #i‡
deföed
 (
USB
Ë|| deföed (
USB_OTG_FS
)

45 #i‡
deföed
 (
USB_OTG_FS
)

49 
USB_DEVICE_MODE
 = 0,

50 
USB_HOST_MODE
 = 1,

51 
USB_DRD_MODE
 = 2

52 } 
	tUSB_ModeTy≥Def
;

59 
URB_IDLE
 = 0,

60 
URB_DONE
,

61 
URB_NOTREADY
,

62 
URB_NYET
,

63 
URB_ERROR
,

64 
URB_STALL


65 } 
	tUSB_OTG_URBSèãTy≥Def
;

72 
HC_IDLE
 = 0,

73 
HC_XFRC
,

74 
HC_HALTED
,

75 
HC_NAK
,

76 
HC_NYET
,

77 
HC_STALL
,

78 
HC_XACTERR
,

79 
HC_BBLERR
,

80 
HC_DATATGLERR


81 } 
	tUSB_OTG_HCSèãTy≥Def
;

88 
uöt32_t
 
dev_ídpoöts
;

92 
uöt32_t
 
Ho°_ch™√ls
;

96 
uöt32_t
 
•ìd
;

100 
uöt32_t
 
dma_íabÀ
;

102 
uöt32_t
 
ï0_mps
;

104 
uöt32_t
 
phy_ôÁ˚
;

107 
uöt32_t
 
Sof_íabÀ
;

109 
uöt32_t
 
low_powî_íabÀ
;

111 
uöt32_t
 
Õm_íabÀ
;

113 
uöt32_t
 
b©ãry_ch¨gög_íabÀ
;

115 
uöt32_t
 
vbus_£nsög_íabÀ
;

117 
uöt32_t
 
u£_dediˇãd_ï1
;

119 
uöt32_t
 
u£_exã∫Æ_vbus
;

121 } 
	tUSB_OTG_CfgTy≥Def
;

125 
uöt8_t
 
num
;

128 
uöt8_t
 
is_ö
;

131 
uöt8_t
 
is_°Æl
;

134 
uöt8_t
 
ty≥
;

137 
uöt8_t
 
d©a_pid_°¨t
;

140 
uöt8_t
 
eví_odd_‰ame
;

143 
uöt16_t
 
tx_fifo_num
;

146 
uöt32_t
 
max∑ckë
;

149 
uöt8_t
 *
x„r_buff
;

151 
uöt32_t
 
dma_addr
;

153 
uöt32_t
 
x„r_Àn
;

155 
uöt32_t
 
x„r_cou¡
;

156 } 
	tUSB_OTG_EPTy≥Def
;

160 
uöt8_t
 
dev_addr
;

163 
uöt8_t
 
ch_num
;

166 
uöt8_t
 
ï_num
;

169 
uöt8_t
 
ï_is_ö
;

172 
uöt8_t
 
•ìd
;

176 
uöt8_t
 
do_pög
;

178 
uöt8_t
 
¥o˚ss_pög
;

180 
uöt8_t
 
ï_ty≥
;

183 
uöt16_t
 
max_∑ckë
;

186 
uöt8_t
 
d©a_pid
;

189 
uöt8_t
 *
x„r_buff
;

191 
uöt32_t
 
X„rSize
;

193 
uöt32_t
 
x„r_Àn
;

195 
uöt32_t
 
x„r_cou¡
;

197 
uöt8_t
 
toggÀ_ö
;

200 
uöt8_t
 
toggÀ_out
;

203 
uöt32_t
 
dma_addr
;

205 
uöt32_t
 
EºC¡
;

207 
USB_OTG_URBSèãTy≥Def
 
urb_°©e
;

210 
USB_OTG_HCSèãTy≥Def
 
°©e
;

212 } 
	tUSB_OTG_HCTy≥Def
;

215 #i‡
deföed
 (
USB
)

219 
USB_DEVICE_MODE
 = 0

220 } 
	tUSB_ModeTy≥Def
;

227 
uöt32_t
 
dev_ídpoöts
;

231 
uöt32_t
 
•ìd
;

235 
uöt32_t
 
ï0_mps
;

237 
uöt32_t
 
phy_ôÁ˚
;

240 
uöt32_t
 
Sof_íabÀ
;

242 
uöt32_t
 
low_powî_íabÀ
;

244 
uöt32_t
 
Õm_íabÀ
;

246 
uöt32_t
 
b©ãry_ch¨gög_íabÀ
;

247 } 
	tUSB_CfgTy≥Def
;

251 
uöt8_t
 
num
;

254 
uöt8_t
 
is_ö
;

257 
uöt8_t
 
is_°Æl
;

260 
uöt8_t
 
ty≥
;

263 
uöt8_t
 
d©a_pid_°¨t
;

266 
uöt16_t
 
pmØdªss
;

269 
uöt16_t
 
pmØddr0
;

272 
uöt16_t
 
pmØddr1
;

275 
uöt8_t
 
doubÀbuf„r
;

278 
uöt16_t
 
tx_fifo_num
;

282 
uöt32_t
 
max∑ckë
;

285 
uöt8_t
 *
x„r_buff
;

287 
uöt32_t
 
x„r_Àn
;

289 
uöt32_t
 
x„r_cou¡
;

291 
uöt32_t
 
x„r_Àn_db
;

293 
uöt8_t
 
x„r_fûl_db
;

295 } 
	tUSB_EPTy≥Def
;

304 #i‡
deföed
 (
USB_OTG_FS
)

308 
	#USB_OTG_CORE_ID_300A
 0x4F54300AU

	)

309 
	#USB_OTG_CORE_ID_310A
 0x4F54310AU

	)

317 
	#USB_OTG_MODE_DEVICE
 0U

	)

318 
	#USB_OTG_MODE_HOST
 1U

	)

319 
	#USB_OTG_MODE_DRD
 2U

	)

327 
	#USBD_FS_SPEED
 2U

	)

328 
	#USBH_FSLS_SPEED
 1U

	)

336 
	#USB_OTG_SPEED_FULL
 3U

	)

344 
	#USB_OTG_ULPI_PHY
 1U

	)

345 
	#USB_OTG_EMBEDDED_PHY
 2U

	)

353 #i‚de‡
USBD_FS_TRDT_VALUE


354 
	#USBD_FS_TRDT_VALUE
 5U

	)

355 
	#USBD_DEFAULT_TRDT_VALUE
 9U

	)

364 
	#USB_OTG_FS_MAX_PACKET_SIZE
 64U

	)

365 
	#USB_OTG_MAX_EP0_SIZE
 64U

	)

373 
	#DSTS_ENUMSPD_HS_PHY_30MHZ_OR_60MHZ
 (0U << 1)

	)

374 
	#DSTS_ENUMSPD_FS_PHY_30MHZ_OR_60MHZ
 (1U << 1)

	)

375 
	#DSTS_ENUMSPD_FS_PHY_48MHZ
 (3U << 1)

	)

383 
	#DCFG_FRAME_INTERVAL_80
 0U

	)

384 
	#DCFG_FRAME_INTERVAL_85
 1U

	)

385 
	#DCFG_FRAME_INTERVAL_90
 2U

	)

386 
	#DCFG_FRAME_INTERVAL_95
 3U

	)

394 
	#EP_MPS_64
 0U

	)

395 
	#EP_MPS_32
 1U

	)

396 
	#EP_MPS_16
 2U

	)

397 
	#EP_MPS_8
 3U

	)

405 
	#EP_SPEED_LOW
 0U

	)

406 
	#EP_SPEED_FULL
 1U

	)

407 
	#EP_SPEED_HIGH
 2U

	)

415 
	#EP_TYPE_CTRL
 0U

	)

416 
	#EP_TYPE_ISOC
 1U

	)

417 
	#EP_TYPE_BULK
 2U

	)

418 
	#EP_TYPE_INTR
 3U

	)

419 
	#EP_TYPE_MSK
 3U

	)

427 
	#STS_GOUT_NAK
 1U

	)

428 
	#STS_DATA_UPDT
 2U

	)

429 
	#STS_XFER_COMP
 3U

	)

430 
	#STS_SETUP_COMP
 4U

	)

431 
	#STS_SETUP_UPDT
 6U

	)

439 
	#HCFG_30_60_MHZ
 0U

	)

440 
	#HCFG_48_MHZ
 1U

	)

441 
	#HCFG_6_MHZ
 2U

	)

449 
	#HPRT0_PRTSPD_HIGH_SPEED
 0U

	)

450 
	#HPRT0_PRTSPD_FULL_SPEED
 1U

	)

451 
	#HPRT0_PRTSPD_LOW_SPEED
 2U

	)

456 
	#HCCHAR_CTRL
 0U

	)

457 
	#HCCHAR_ISOC
 1U

	)

458 
	#HCCHAR_BULK
 2U

	)

459 
	#HCCHAR_INTR
 3U

	)

461 
	#HC_PID_DATA0
 0U

	)

462 
	#HC_PID_DATA2
 1U

	)

463 
	#HC_PID_DATA1
 2U

	)

464 
	#HC_PID_SETUP
 3U

	)

466 
	#GRXSTS_PKTSTS_IN
 2U

	)

467 
	#GRXSTS_PKTSTS_IN_XFER_COMP
 3U

	)

468 
	#GRXSTS_PKTSTS_DATA_TOGGLE_ERR
 5U

	)

469 
	#GRXSTS_PKTSTS_CH_HALTED
 7U

	)

471 
	#USBx_PCGCCTL
 *(
__IO
 
uöt32_t
 *)((uöt32_t)
USBx_BASE
 + 
USB_OTG_PCGCCTL_BASE
)

	)

472 
	#USBx_HPRT0
 *(
__IO
 
uöt32_t
 *)((uöt32_t)
USBx_BASE
 + 
USB_OTG_HOST_PORT_BASE
)

	)

474 
	#USBx_DEVICE
 ((
USB_OTG_Devi˚Ty≥Def
 *)(
USBx_BASE
 + 
USB_OTG_DEVICE_BASE
))

	)

475 
	#USBx_INEP
(
i
Ë((
USB_OTG_INEndpoötTy≥Def
 *)(
USBx_BASE
\

476 + 
USB_OTG_IN_ENDPOINT_BASE
 + ((
i
Ë* 
USB_OTG_EP_REG_SIZE
)))

	)

478 
	#USBx_OUTEP
(
i
Ë((
USB_OTG_OUTEndpoötTy≥Def
 *)(
USBx_BASE
\

479 + 
USB_OTG_OUT_ENDPOINT_BASE
 + ((
i
Ë* 
USB_OTG_EP_REG_SIZE
)))

	)

481 
	#USBx_DFIFO
(
i
Ë*(
__IO
 
uöt32_t
 *)(
USBx_BASE
 + 
USB_OTG_FIFO_BASE
 + ((iË* 
USB_OTG_FIFO_SIZE
))

	)

483 
	#USBx_HOST
 ((
USB_OTG_Ho°Ty≥Def
 *)(
USBx_BASE
 + 
USB_OTG_HOST_BASE
))

	)

484 
	#USBx_HC
(
i
Ë((
USB_OTG_Ho°Ch™√lTy≥Def
 *)(
USBx_BASE
\

485 + 
USB_OTG_HOST_CHANNEL_BASE
\

486 + ((
i
Ë* 
USB_OTG_HOST_CHANNEL_SIZE
)))

	)

490 #i‡
deföed
 (
USB
)

494 
	#EP_MPS_64
 0U

	)

495 
	#EP_MPS_32
 1U

	)

496 
	#EP_MPS_16
 2U

	)

497 
	#EP_MPS_8
 3U

	)

505 
	#EP_TYPE_CTRL
 0U

	)

506 
	#EP_TYPE_ISOC
 1U

	)

507 
	#EP_TYPE_BULK
 2U

	)

508 
	#EP_TYPE_INTR
 3U

	)

509 
	#EP_TYPE_MSK
 3U

	)

517 
	#USBD_FS_SPEED
 2U

	)

522 
	#BTABLE_ADDRESS
 0x000U

	)

523 
	#PMA_ACCESS
 2U

	)

525 #i‡
deföed
 (
USB_OTG_FS
)

526 
	#EP_ADDR_MSK
 0xFU

	)

528 #i‡
deföed
 (
USB
)

529 
	#EP_ADDR_MSK
 0x7U

	)

539 #i‡
deföed
 (
USB_OTG_FS
)

540 
	#USB_MASK_INTERRUPT
(
__INSTANCE__
, 
__INTERRUPT__
Ë((__INSTANCE__)->
GINTMSK
 &~(__INTERRUPT__))

	)

541 
	#USB_UNMASK_INTERRUPT
(
__INSTANCE__
, 
__INTERRUPT__
Ë((__INSTANCE__)->
GINTMSK
 |(__INTERRUPT__))

	)

543 
	#CLEAR_IN_EP_INTR
(
__EPNUM__
, 
__INTERRUPT__
Ë(
	`USBx_INEP
(__EPNUM__)->
DIEPINT
 = (__INTERRUPT__))

	)

544 
	#CLEAR_OUT_EP_INTR
(
__EPNUM__
, 
__INTERRUPT__
Ë(
	`USBx_OUTEP
(__EPNUM__)->
DOEPINT
 = (__INTERRUPT__))

	)

554 #i‡
deföed
 (
USB_OTG_FS
)

555 
HAL_SètusTy≥Def
 
USB_C‹eInô
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_OTG_CfgTy≥Def
 
cfg
);

556 
HAL_SètusTy≥Def
 
USB_DevInô
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_OTG_CfgTy≥Def
 
cfg
);

557 
HAL_SètusTy≥Def
 
USB_E«bÀGlobÆI¡
(
USB_OTG_GlobÆTy≥Def
 *
USBx
);

558 
HAL_SètusTy≥Def
 
USB_DißbÀGlobÆI¡
(
USB_OTG_GlobÆTy≥Def
 *
USBx
);

559 
HAL_SètusTy≥Def
 
USB_SëTu∫¨oundTime
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt32_t
 
h˛k
, 
uöt8_t
 
•ìd
);

560 
HAL_SètusTy≥Def
 
USB_SëCuºítMode
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_ModeTy≥Def
 
mode
);

561 
HAL_SètusTy≥Def
 
USB_SëDevS≥ed
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt8_t
 
•ìd
);

562 
HAL_SètusTy≥Def
 
USB_FlushRxFifo
(
USB_OTG_GlobÆTy≥Def
 *
USBx
);

563 
HAL_SètusTy≥Def
 
USB_FlushTxFifo
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt32_t
 
num
);

564 
HAL_SètusTy≥Def
 
USB_A˘iv©eEndpoöt
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_OTG_EPTy≥Def
 *
ï
);

565 
HAL_SètusTy≥Def
 
USB_Dó˘iv©eEndpoöt
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_OTG_EPTy≥Def
 *
ï
);

566 
HAL_SètusTy≥Def
 
USB_A˘iv©eDediˇãdEndpoöt
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_OTG_EPTy≥Def
 *
ï
);

567 
HAL_SètusTy≥Def
 
USB_Dó˘iv©eDediˇãdEndpoöt
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_OTG_EPTy≥Def
 *
ï
);

568 
HAL_SètusTy≥Def
 
USB_EPSèπX„r
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_OTG_EPTy≥Def
 *
ï
);

569 
HAL_SètusTy≥Def
 
USB_EP0SèπX„r
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_OTG_EPTy≥Def
 *
ï
);

570 
HAL_SètusTy≥Def
 
USB_WrôePackë
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt8_t
 *
§c
,

571 
uöt8_t
 
ch_ï_num
, 
uöt16_t
 
Àn
);

573 *
USB_RódPackë
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt8_t
 *
de°
, 
uöt16_t
 
Àn
);

574 
HAL_SètusTy≥Def
 
USB_EPSëSèŒ
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_OTG_EPTy≥Def
 *
ï
);

575 
HAL_SètusTy≥Def
 
USB_EPCÀ¨SèŒ
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_OTG_EPTy≥Def
 *
ï
);

576 
HAL_SètusTy≥Def
 
USB_SëDevAddªss
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt8_t
 
addªss
);

577 
HAL_SètusTy≥Def
 
USB_DevC⁄√˘
(
USB_OTG_GlobÆTy≥Def
 *
USBx
);

578 
HAL_SètusTy≥Def
 
USB_DevDisc⁄√˘
(
USB_OTG_GlobÆTy≥Def
 *
USBx
);

579 
HAL_SètusTy≥Def
 
USB_St›Devi˚
(
USB_OTG_GlobÆTy≥Def
 *
USBx
);

580 
HAL_SètusTy≥Def
 
USB_A˘iv©eSëup
(
USB_OTG_GlobÆTy≥Def
 *
USBx
);

581 
HAL_SètusTy≥Def
 
USB_EP0_OutSèπ
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt8_t
 *
p£tup
);

582 
uöt8_t
 
USB_GëDevS≥ed
(
USB_OTG_GlobÆTy≥Def
 *
USBx
);

583 
uöt32_t
 
USB_GëMode
(
USB_OTG_GlobÆTy≥Def
 *
USBx
);

584 
uöt32_t
 
USB_RódI¡îru±s
(
USB_OTG_GlobÆTy≥Def
 *
USBx
);

585 
uöt32_t
 
USB_RódDevAŒOutEpI¡îru±
(
USB_OTG_GlobÆTy≥Def
 *
USBx
);

586 
uöt32_t
 
USB_RódDevOutEPI¡îru±
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt8_t
 
ïnum
);

587 
uöt32_t
 
USB_RódDevAŒInEpI¡îru±
(
USB_OTG_GlobÆTy≥Def
 *
USBx
);

588 
uöt32_t
 
USB_RódDevInEPI¡îru±
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt8_t
 
ïnum
);

589 
USB_CÀ¨I¡îru±s
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt32_t
 
öãºu±
);

591 
HAL_SètusTy≥Def
 
USB_Ho°Inô
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_OTG_CfgTy≥Def
 
cfg
);

592 
HAL_SètusTy≥Def
 
USB_InôFSLSPClkSñ
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt8_t
 
‰eq
);

593 
HAL_SètusTy≥Def
 
USB_Re£tP‹t
(
USB_OTG_GlobÆTy≥Def
 *
USBx
);

594 
HAL_SètusTy≥Def
 
USB_DriveVbus
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt8_t
 
°©e
);

595 
uöt32_t
 
USB_GëHo°S≥ed
(
USB_OTG_GlobÆTy≥Def
 *
USBx
);

596 
uöt32_t
 
USB_GëCuºítFøme
(
USB_OTG_GlobÆTy≥Def
 *
USBx
);

597 
HAL_SètusTy≥Def
 
USB_HC_Inô
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt8_t
 
ch_num
,

598 
uöt8_t
 
ïnum
, uöt8_à
dev_addªss
, uöt8_à
•ìd
,

599 
uöt8_t
 
ï_ty≥
, 
uöt16_t
 
mps
);

600 
HAL_SètusTy≥Def
 
USB_HC_SèπX„r
(
USB_OTG_GlobÆTy≥Def
 *
USBx
,

601 
USB_OTG_HCTy≥Def
 *
hc
);

603 
uöt32_t
 
USB_HC_RódI¡îru±
(
USB_OTG_GlobÆTy≥Def
 *
USBx
);

604 
HAL_SètusTy≥Def
 
USB_HC_HÆt
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt8_t
 
hc_num
);

605 
HAL_SètusTy≥Def
 
USB_DoPög
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt8_t
 
ch_num
);

606 
HAL_SètusTy≥Def
 
USB_St›Ho°
(
USB_OTG_GlobÆTy≥Def
 *
USBx
);

607 
HAL_SètusTy≥Def
 
USB_A˘iv©eRemŸeWakeup
(
USB_OTG_GlobÆTy≥Def
 *
USBx
);

608 
HAL_SètusTy≥Def
 
USB_DeA˘iv©eRemŸeWakeup
(
USB_OTG_GlobÆTy≥Def
 *
USBx
);

611 #i‡
deföed
 (
USB
)

612 
HAL_SètusTy≥Def
 
USB_C‹eInô
(
USB_Ty≥Def
 *
USBx
, 
USB_CfgTy≥Def
 
cfg
);

613 
HAL_SètusTy≥Def
 
USB_DevInô
(
USB_Ty≥Def
 *
USBx
, 
USB_CfgTy≥Def
 
cfg
);

614 
HAL_SètusTy≥Def
 
USB_E«bÀGlobÆI¡
(
USB_Ty≥Def
 *
USBx
);

615 
HAL_SètusTy≥Def
 
USB_DißbÀGlobÆI¡
(
USB_Ty≥Def
 *
USBx
);

616 
HAL_SètusTy≥Def
 
USB_SëCuºítMode
(
USB_Ty≥Def
 *
USBx
, 
USB_ModeTy≥Def
 
mode
);

617 
HAL_SètusTy≥Def
 
USB_SëDevS≥ed
(
USB_Ty≥Def
 *
USBx
, 
uöt8_t
 
•ìd
);

618 
HAL_SètusTy≥Def
 
USB_FlushRxFifo
(
USB_Ty≥Def
 *
USBx
);

619 
HAL_SètusTy≥Def
 
USB_FlushTxFifo
(
USB_Ty≥Def
 *
USBx
, 
uöt32_t
 
num
);

621 #i‡
deföed
 (
HAL_PCD_MODULE_ENABLED
)

622 
HAL_SètusTy≥Def
 
USB_A˘iv©eEndpoöt
(
USB_Ty≥Def
 *
USBx
, 
USB_EPTy≥Def
 *
ï
);

623 
HAL_SètusTy≥Def
 
USB_Dó˘iv©eEndpoöt
(
USB_Ty≥Def
 *
USBx
, 
USB_EPTy≥Def
 *
ï
);

624 
HAL_SètusTy≥Def
 
USB_EPSèπX„r
(
USB_Ty≥Def
 *
USBx
, 
USB_EPTy≥Def
 *
ï
);

625 
HAL_SètusTy≥Def
 
USB_EPSëSèŒ
(
USB_Ty≥Def
 *
USBx
, 
USB_EPTy≥Def
 *
ï
);

626 
HAL_SètusTy≥Def
 
USB_EPCÀ¨SèŒ
(
USB_Ty≥Def
 *
USBx
, 
USB_EPTy≥Def
 *
ï
);

629 
HAL_SètusTy≥Def
 
USB_SëDevAddªss
(
USB_Ty≥Def
 *
USBx
, 
uöt8_t
 
addªss
);

630 
HAL_SètusTy≥Def
 
USB_DevC⁄√˘
(
USB_Ty≥Def
 *
USBx
);

631 
HAL_SètusTy≥Def
 
USB_DevDisc⁄√˘
(
USB_Ty≥Def
 *
USBx
);

632 
HAL_SètusTy≥Def
 
USB_St›Devi˚
(
USB_Ty≥Def
 *
USBx
);

633 
HAL_SètusTy≥Def
 
USB_EP0_OutSèπ
(
USB_Ty≥Def
 *
USBx
, 
uöt8_t
 *
p£tup
);

634 
HAL_SètusTy≥Def
 
USB_WrôePackë
(
USB_Ty≥Def
 *
USBx
, 
uöt8_t
 *
§c
,

635 
uöt8_t
 
ch_ï_num
, 
uöt16_t
 
Àn
);

637 *
USB_RódPackë
(
USB_Ty≥Def
 *
USBx
, 
uöt8_t
 *
de°
, 
uöt16_t
 
Àn
);

639 
uöt32_t
 
USB_RódI¡îru±s
(
USB_Ty≥Def
 *
USBx
);

640 
uöt32_t
 
USB_RódDevAŒOutEpI¡îru±
(
USB_Ty≥Def
 *
USBx
);

641 
uöt32_t
 
USB_RódDevOutEPI¡îru±
(
USB_Ty≥Def
 *
USBx
, 
uöt8_t
 
ïnum
);

642 
uöt32_t
 
USB_RódDevAŒInEpI¡îru±
(
USB_Ty≥Def
 *
USBx
);

643 
uöt32_t
 
USB_RódDevInEPI¡îru±
(
USB_Ty≥Def
 *
USBx
, 
uöt8_t
 
ïnum
);

644 
USB_CÀ¨I¡îru±s
(
USB_Ty≥Def
 *
USBx
, 
uöt32_t
 
öãºu±
);

645 
HAL_SètusTy≥Def
 
USB_A˘iv©eRemŸeWakeup
(
USB_Ty≥Def
 *
USBx
);

646 
HAL_SètusTy≥Def
 
USB_DeA˘iv©eRemŸeWakeup
(
USB_Ty≥Def
 *
USBx
);

648 
USB_WrôePMA
(
USB_Ty≥Def
 *
USBx
, 
uöt8_t
 *
pbU§Buf
,

649 
uöt16_t
 
wPMABufAddr
, uöt16_à
wNByãs
);

651 
USB_RódPMA
(
USB_Ty≥Def
 *
USBx
, 
uöt8_t
 *
pbU§Buf
,

652 
uöt16_t
 
wPMABufAddr
, uöt16_à
wNByãs
);

671 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32F1xx_HAL_Driver\Src\stm32f1xx_hal_pcd.c

57 
	~"°m32f1xx_hÆ.h
"

68 #ifde‡
HAL_PCD_MODULE_ENABLED


70 #i‡
deföed
 (
USB
Ë|| deföed (
USB_OTG_FS
)

79 
	#PCD_MIN
(
a
, 
b
Ë((◊Ë< (b)Ë? (aË: (b))

	)

80 
	#PCD_MAX
(
a
, 
b
Ë((◊Ë> (b)Ë? (aË: (b))

	)

89 #i‡
deföed
 (
USB_OTG_FS
)

90 
HAL_SètusTy≥Def
 
PCD_WrôeEm±yTxFifo
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt32_t
 
ïnum
);

91 
HAL_SètusTy≥Def
 
PCD_EP_OutX‰Com∂ëe_öt
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt32_t
 
ïnum
);

92 
HAL_SètusTy≥Def
 
PCD_EP_OutSëupPackë_öt
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt32_t
 
ïnum
);

95 #i‡
deföed
 (
USB
)

96 
HAL_SètusTy≥Def
 
PCD_EP_ISR_H™dÀr
(
PCD_H™dÀTy≥Def
 *
hpcd
);

97 
HAL_SètusTy≥Def
 
HAL_PCD_EP_DB_Tønsmô
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
PCD_EPTy≥Def
 *
ï
, 
uöt16_t
 
wEPVÆ
);

98 
uöt16_t
 
HAL_PCD_EP_DB_Re˚ive
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
PCD_EPTy≥Def
 *
ï
, uöt16_à
wEPVÆ
);

128 
HAL_SètusTy≥Def
 
	$HAL_PCD_Inô
(
PCD_H™dÀTy≥Def
 *
hpcd
)

130 #i‡
	`deföed
 (
USB_OTG_FS
)

131 
USB_OTG_GlobÆTy≥Def
 *
USBx
;

133 
uöt8_t
 
i
;

136 i‡(
hpcd
 =
NULL
)

138  
HAL_ERROR
;

142 
	`as£π_∑øm
(
	`IS_PCD_ALL_INSTANCE
(
hpcd
->
In°™˚
));

144 #i‡
	`deföed
 (
USB_OTG_FS
)

145 
USBx
 = 
hpcd
->
In°™˚
;

148 i‡(
hpcd
->
Sèã
 =
HAL_PCD_STATE_RESET
)

151 
hpcd
->
Lock
 = 
HAL_UNLOCKED
;

153 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

154 
hpcd
->
SOFCÆlback
 = 
HAL_PCD_SOFCÆlback
;

155 
hpcd
->
SëupSègeCÆlback
 = 
HAL_PCD_SëupSègeCÆlback
;

156 
hpcd
->
Re£tCÆlback
 = 
HAL_PCD_Re£tCÆlback
;

157 
hpcd
->
Su•ídCÆlback
 = 
HAL_PCD_Su•ídCÆlback
;

158 
hpcd
->
ResumeCÆlback
 = 
HAL_PCD_ResumeCÆlback
;

159 
hpcd
->
C⁄√˘CÆlback
 = 
HAL_PCD_C⁄√˘CÆlback
;

160 
hpcd
->
Disc⁄√˘CÆlback
 = 
HAL_PCD_Disc⁄√˘CÆlback
;

161 
hpcd
->
D©aOutSègeCÆlback
 = 
HAL_PCD_D©aOutSègeCÆlback
;

162 
hpcd
->
D©aInSègeCÆlback
 = 
HAL_PCD_D©aInSègeCÆlback
;

163 
hpcd
->
ISOOUTIncom∂ëeCÆlback
 = 
HAL_PCD_ISOOUTIncom∂ëeCÆlback
;

164 
hpcd
->
ISOINIncom∂ëeCÆlback
 = 
HAL_PCD_ISOINIncom∂ëeCÆlback
;

166 i‡(
hpcd
->
M•InôCÆlback
 =
NULL
)

168 
hpcd
->
M•InôCÆlback
 = 
HAL_PCD_M•Inô
;

172 
hpcd
->
	`M•InôCÆlback
(hpcd);

175 
	`HAL_PCD_M•Inô
(
hpcd
);

179 
hpcd
->
Sèã
 = 
HAL_PCD_STATE_BUSY
;

181 #i‡
	`deföed
 (
USB_OTG_FS
)

183 i‡((
USBx
->
CID
 & (0x1U << 8)) == 0U)

185 
hpcd
->
Inô
.
dma_íabÀ
 = 0U;

190 
	`__HAL_PCD_DISABLE
(
hpcd
);

193 i‡(
	`USB_C‹eInô
(
hpcd
->
In°™˚
, hpcd->
Inô
Ë!
HAL_OK
)

195 
hpcd
->
Sèã
 = 
HAL_PCD_STATE_ERROR
;

196  
HAL_ERROR
;

200 ()
	`USB_SëCuºítMode
(
hpcd
->
In°™˚
, 
USB_DEVICE_MODE
);

203 
i
 = 0U; i < 
hpcd
->
Inô
.
dev_ídpoöts
; i++)

206 
hpcd
->
IN_ï
[
i
].
is_ö
 = 1U;

207 
hpcd
->
IN_ï
[
i
].
num
 = i;

208 
hpcd
->
IN_ï
[
i
].
tx_fifo_num
 = i;

210 
hpcd
->
IN_ï
[
i
].
ty≥
 = 
EP_TYPE_CTRL
;

211 
hpcd
->
IN_ï
[
i
].
max∑ckë
 = 0U;

212 
hpcd
->
IN_ï
[
i
].
x„r_buff
 = 0U;

213 
hpcd
->
IN_ï
[
i
].
x„r_Àn
 = 0U;

216 
i
 = 0U; i < 
hpcd
->
Inô
.
dev_ídpoöts
; i++)

218 
hpcd
->
OUT_ï
[
i
].
is_ö
 = 0U;

219 
hpcd
->
OUT_ï
[
i
].
num
 = i;

221 
hpcd
->
OUT_ï
[
i
].
ty≥
 = 
EP_TYPE_CTRL
;

222 
hpcd
->
OUT_ï
[
i
].
max∑ckë
 = 0U;

223 
hpcd
->
OUT_ï
[
i
].
x„r_buff
 = 0U;

224 
hpcd
->
OUT_ï
[
i
].
x„r_Àn
 = 0U;

228 i‡(
	`USB_DevInô
(
hpcd
->
In°™˚
, hpcd->
Inô
Ë!
HAL_OK
)

230 
hpcd
->
Sèã
 = 
HAL_PCD_STATE_ERROR
;

231  
HAL_ERROR
;

234 
hpcd
->
USB_Addªss
 = 0U;

235 
hpcd
->
Sèã
 = 
HAL_PCD_STATE_READY
;

236 ()
	`USB_DevDisc⁄√˘
(
hpcd
->
In°™˚
);

238  
HAL_OK
;

239 
	}
}

246 
HAL_SètusTy≥Def
 
	$HAL_PCD_DeInô
(
PCD_H™dÀTy≥Def
 *
hpcd
)

249 i‡(
hpcd
 =
NULL
)

251  
HAL_ERROR
;

254 
hpcd
->
Sèã
 = 
HAL_PCD_STATE_BUSY
;

257 i‡(
	`USB_St›Devi˚
(
hpcd
->
In°™˚
Ë!
HAL_OK
)

259  
HAL_ERROR
;

262 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

263 i‡(
hpcd
->
M•DeInôCÆlback
 =
NULL
)

265 
hpcd
->
M•DeInôCÆlback
 = 
HAL_PCD_M•DeInô
;

269 
hpcd
->
	`M•DeInôCÆlback
(hpcd);

272 
	`HAL_PCD_M•DeInô
(
hpcd
);

275 
hpcd
->
Sèã
 = 
HAL_PCD_STATE_RESET
;

277  
HAL_OK
;

278 
	}
}

285 
__wók
 
	$HAL_PCD_M•Inô
(
PCD_H™dÀTy≥Def
 *
hpcd
)

288 
	`UNUSED
(
hpcd
);

293 
	}
}

300 
__wók
 
	$HAL_PCD_M•DeInô
(
PCD_H™dÀTy≥Def
 *
hpcd
)

303 
	`UNUSED
(
hpcd
);

308 
	}
}

310 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

329 
HAL_SètusTy≥Def
 
	$HAL_PCD_Regi°îCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
,

330 
HAL_PCD_CÆlbackIDTy≥Def
 
CÆlbackID
,

331 
pPCD_CÆlbackTy≥Def
 
pCÆlback
)

333 
HAL_SètusTy≥Def
 
°©us
 = 
HAL_OK
;

335 i‡(
pCÆlback
 =
NULL
)

338 
hpcd
->
Eº‹Code
 |
HAL_PCD_ERROR_INVALID_CALLBACK
;

339  
HAL_ERROR
;

342 
	`__HAL_LOCK
(
hpcd
);

344 i‡(
hpcd
->
Sèã
 =
HAL_PCD_STATE_READY
)

346 
CÆlbackID
)

348 
HAL_PCD_SOF_CB_ID
 :

349 
hpcd
->
SOFCÆlback
 = 
pCÆlback
;

352 
HAL_PCD_SETUPSTAGE_CB_ID
 :

353 
hpcd
->
SëupSègeCÆlback
 = 
pCÆlback
;

356 
HAL_PCD_RESET_CB_ID
 :

357 
hpcd
->
Re£tCÆlback
 = 
pCÆlback
;

360 
HAL_PCD_SUSPEND_CB_ID
 :

361 
hpcd
->
Su•ídCÆlback
 = 
pCÆlback
;

364 
HAL_PCD_RESUME_CB_ID
 :

365 
hpcd
->
ResumeCÆlback
 = 
pCÆlback
;

368 
HAL_PCD_CONNECT_CB_ID
 :

369 
hpcd
->
C⁄√˘CÆlback
 = 
pCÆlback
;

372 
HAL_PCD_DISCONNECT_CB_ID
 :

373 
hpcd
->
Disc⁄√˘CÆlback
 = 
pCÆlback
;

376 
HAL_PCD_MSPINIT_CB_ID
 :

377 
hpcd
->
M•InôCÆlback
 = 
pCÆlback
;

380 
HAL_PCD_MSPDEINIT_CB_ID
 :

381 
hpcd
->
M•DeInôCÆlback
 = 
pCÆlback
;

386 
hpcd
->
Eº‹Code
 |
HAL_PCD_ERROR_INVALID_CALLBACK
;

388 
°©us
 = 
HAL_ERROR
;

392 i‡(
hpcd
->
Sèã
 =
HAL_PCD_STATE_RESET
)

394 
CÆlbackID
)

396 
HAL_PCD_MSPINIT_CB_ID
 :

397 
hpcd
->
M•InôCÆlback
 = 
pCÆlback
;

400 
HAL_PCD_MSPDEINIT_CB_ID
 :

401 
hpcd
->
M•DeInôCÆlback
 = 
pCÆlback
;

406 
hpcd
->
Eº‹Code
 |
HAL_PCD_ERROR_INVALID_CALLBACK
;

408 
°©us
 = 
HAL_ERROR
;

415 
hpcd
->
Eº‹Code
 |
HAL_PCD_ERROR_INVALID_CALLBACK
;

417 
°©us
 = 
HAL_ERROR
;

421 
	`__HAL_UNLOCK
(
hpcd
);

422  
°©us
;

423 
	}
}

442 
HAL_SètusTy≥Def
 
	$HAL_PCD_UnRegi°îCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
HAL_PCD_CÆlbackIDTy≥Def
 
CÆlbackID
)

444 
HAL_SètusTy≥Def
 
°©us
 = 
HAL_OK
;

447 
	`__HAL_LOCK
(
hpcd
);

450 i‡(
hpcd
->
Sèã
 =
HAL_PCD_STATE_READY
)

452 
CÆlbackID
)

454 
HAL_PCD_SOF_CB_ID
 :

455 
hpcd
->
SOFCÆlback
 = 
HAL_PCD_SOFCÆlback
;

458 
HAL_PCD_SETUPSTAGE_CB_ID
 :

459 
hpcd
->
SëupSègeCÆlback
 = 
HAL_PCD_SëupSègeCÆlback
;

462 
HAL_PCD_RESET_CB_ID
 :

463 
hpcd
->
Re£tCÆlback
 = 
HAL_PCD_Re£tCÆlback
;

466 
HAL_PCD_SUSPEND_CB_ID
 :

467 
hpcd
->
Su•ídCÆlback
 = 
HAL_PCD_Su•ídCÆlback
;

470 
HAL_PCD_RESUME_CB_ID
 :

471 
hpcd
->
ResumeCÆlback
 = 
HAL_PCD_ResumeCÆlback
;

474 
HAL_PCD_CONNECT_CB_ID
 :

475 
hpcd
->
C⁄√˘CÆlback
 = 
HAL_PCD_C⁄√˘CÆlback
;

478 
HAL_PCD_DISCONNECT_CB_ID
 :

479 
hpcd
->
Disc⁄√˘CÆlback
 = 
HAL_PCD_Disc⁄√˘CÆlback
;

482 
HAL_PCD_MSPINIT_CB_ID
 :

483 
hpcd
->
M•InôCÆlback
 = 
HAL_PCD_M•Inô
;

486 
HAL_PCD_MSPDEINIT_CB_ID
 :

487 
hpcd
->
M•DeInôCÆlback
 = 
HAL_PCD_M•DeInô
;

492 
hpcd
->
Eº‹Code
 |
HAL_PCD_ERROR_INVALID_CALLBACK
;

495 
°©us
 = 
HAL_ERROR
;

499 i‡(
hpcd
->
Sèã
 =
HAL_PCD_STATE_RESET
)

501 
CÆlbackID
)

503 
HAL_PCD_MSPINIT_CB_ID
 :

504 
hpcd
->
M•InôCÆlback
 = 
HAL_PCD_M•Inô
;

507 
HAL_PCD_MSPDEINIT_CB_ID
 :

508 
hpcd
->
M•DeInôCÆlback
 = 
HAL_PCD_M•DeInô
;

513 
hpcd
->
Eº‹Code
 |
HAL_PCD_ERROR_INVALID_CALLBACK
;

516 
°©us
 = 
HAL_ERROR
;

523 
hpcd
->
Eº‹Code
 |
HAL_PCD_ERROR_INVALID_CALLBACK
;

526 
°©us
 = 
HAL_ERROR
;

530 
	`__HAL_UNLOCK
(
hpcd
);

531  
°©us
;

532 
	}
}

541 
HAL_SètusTy≥Def
 
	$HAL_PCD_Regi°îD©aOutSègeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
,

542 
pPCD_D©aOutSègeCÆlbackTy≥Def
 
pCÆlback
)

544 
HAL_SètusTy≥Def
 
°©us
 = 
HAL_OK
;

546 i‡(
pCÆlback
 =
NULL
)

549 
hpcd
->
Eº‹Code
 |
HAL_PCD_ERROR_INVALID_CALLBACK
;

551  
HAL_ERROR
;

555 
	`__HAL_LOCK
(
hpcd
);

557 i‡(
hpcd
->
Sèã
 =
HAL_PCD_STATE_READY
)

559 
hpcd
->
D©aOutSègeCÆlback
 = 
pCÆlback
;

564 
hpcd
->
Eº‹Code
 |
HAL_PCD_ERROR_INVALID_CALLBACK
;

567 
°©us
 = 
HAL_ERROR
;

571 
	`__HAL_UNLOCK
(
hpcd
);

573  
°©us
;

574 
	}
}

582 
HAL_SètusTy≥Def
 
	$HAL_PCD_UnRegi°îD©aOutSègeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

584 
HAL_SètusTy≥Def
 
°©us
 = 
HAL_OK
;

587 
	`__HAL_LOCK
(
hpcd
);

589 i‡(
hpcd
->
Sèã
 =
HAL_PCD_STATE_READY
)

591 
hpcd
->
D©aOutSègeCÆlback
 = 
HAL_PCD_D©aOutSègeCÆlback
;

596 
hpcd
->
Eº‹Code
 |
HAL_PCD_ERROR_INVALID_CALLBACK
;

599 
°©us
 = 
HAL_ERROR
;

603 
	`__HAL_UNLOCK
(
hpcd
);

605  
°©us
;

606 
	}
}

615 
HAL_SètusTy≥Def
 
	$HAL_PCD_Regi°îD©aInSègeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
,

616 
pPCD_D©aInSègeCÆlbackTy≥Def
 
pCÆlback
)

618 
HAL_SètusTy≥Def
 
°©us
 = 
HAL_OK
;

620 i‡(
pCÆlback
 =
NULL
)

623 
hpcd
->
Eº‹Code
 |
HAL_PCD_ERROR_INVALID_CALLBACK
;

625  
HAL_ERROR
;

629 
	`__HAL_LOCK
(
hpcd
);

631 i‡(
hpcd
->
Sèã
 =
HAL_PCD_STATE_READY
)

633 
hpcd
->
D©aInSègeCÆlback
 = 
pCÆlback
;

638 
hpcd
->
Eº‹Code
 |
HAL_PCD_ERROR_INVALID_CALLBACK
;

641 
°©us
 = 
HAL_ERROR
;

645 
	`__HAL_UNLOCK
(
hpcd
);

647  
°©us
;

648 
	}
}

656 
HAL_SètusTy≥Def
 
	$HAL_PCD_UnRegi°îD©aInSègeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

658 
HAL_SètusTy≥Def
 
°©us
 = 
HAL_OK
;

661 
	`__HAL_LOCK
(
hpcd
);

663 i‡(
hpcd
->
Sèã
 =
HAL_PCD_STATE_READY
)

665 
hpcd
->
D©aInSègeCÆlback
 = 
HAL_PCD_D©aInSègeCÆlback
;

670 
hpcd
->
Eº‹Code
 |
HAL_PCD_ERROR_INVALID_CALLBACK
;

673 
°©us
 = 
HAL_ERROR
;

677 
	`__HAL_UNLOCK
(
hpcd
);

679  
°©us
;

680 
	}
}

689 
HAL_SètusTy≥Def
 
	$HAL_PCD_Regi°îIsoOutIn˝…CÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
,

690 
pPCD_IsoOutIn˝…CÆlbackTy≥Def
 
pCÆlback
)

692 
HAL_SètusTy≥Def
 
°©us
 = 
HAL_OK
;

694 i‡(
pCÆlback
 =
NULL
)

697 
hpcd
->
Eº‹Code
 |
HAL_PCD_ERROR_INVALID_CALLBACK
;

699  
HAL_ERROR
;

703 
	`__HAL_LOCK
(
hpcd
);

705 i‡(
hpcd
->
Sèã
 =
HAL_PCD_STATE_READY
)

707 
hpcd
->
ISOOUTIncom∂ëeCÆlback
 = 
pCÆlback
;

712 
hpcd
->
Eº‹Code
 |
HAL_PCD_ERROR_INVALID_CALLBACK
;

715 
°©us
 = 
HAL_ERROR
;

719 
	`__HAL_UNLOCK
(
hpcd
);

721  
°©us
;

722 
	}
}

731 
HAL_SètusTy≥Def
 
	$HAL_PCD_UnRegi°îIsoOutIn˝…CÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

733 
HAL_SètusTy≥Def
 
°©us
 = 
HAL_OK
;

736 
	`__HAL_LOCK
(
hpcd
);

738 i‡(
hpcd
->
Sèã
 =
HAL_PCD_STATE_READY
)

740 
hpcd
->
ISOOUTIncom∂ëeCÆlback
 = 
HAL_PCD_ISOOUTIncom∂ëeCÆlback
;

745 
hpcd
->
Eº‹Code
 |
HAL_PCD_ERROR_INVALID_CALLBACK
;

748 
°©us
 = 
HAL_ERROR
;

752 
	`__HAL_UNLOCK
(
hpcd
);

754  
°©us
;

755 
	}
}

764 
HAL_SètusTy≥Def
 
	$HAL_PCD_Regi°îIsoInIn˝…CÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
,

765 
pPCD_IsoInIn˝…CÆlbackTy≥Def
 
pCÆlback
)

767 
HAL_SètusTy≥Def
 
°©us
 = 
HAL_OK
;

769 i‡(
pCÆlback
 =
NULL
)

772 
hpcd
->
Eº‹Code
 |
HAL_PCD_ERROR_INVALID_CALLBACK
;

774  
HAL_ERROR
;

778 
	`__HAL_LOCK
(
hpcd
);

780 i‡(
hpcd
->
Sèã
 =
HAL_PCD_STATE_READY
)

782 
hpcd
->
ISOINIncom∂ëeCÆlback
 = 
pCÆlback
;

787 
hpcd
->
Eº‹Code
 |
HAL_PCD_ERROR_INVALID_CALLBACK
;

790 
°©us
 = 
HAL_ERROR
;

794 
	`__HAL_UNLOCK
(
hpcd
);

796  
°©us
;

797 
	}
}

806 
HAL_SètusTy≥Def
 
	$HAL_PCD_UnRegi°îIsoInIn˝…CÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

808 
HAL_SètusTy≥Def
 
°©us
 = 
HAL_OK
;

811 
	`__HAL_LOCK
(
hpcd
);

813 i‡(
hpcd
->
Sèã
 =
HAL_PCD_STATE_READY
)

815 
hpcd
->
ISOINIncom∂ëeCÆlback
 = 
HAL_PCD_ISOINIncom∂ëeCÆlback
;

820 
hpcd
->
Eº‹Code
 |
HAL_PCD_ERROR_INVALID_CALLBACK
;

823 
°©us
 = 
HAL_ERROR
;

827 
	`__HAL_UNLOCK
(
hpcd
);

829  
°©us
;

830 
	}
}

858 
HAL_SètusTy≥Def
 
	$HAL_PCD_Sèπ
(
PCD_H™dÀTy≥Def
 *
hpcd
)

860 
	`__HAL_LOCK
(
hpcd
);

861 
	`__HAL_PCD_ENABLE
(
hpcd
);

863 #i‡
	`deföed
 (
USB
)

864 
	`HAL_PCDEx_SëC⁄√˘i⁄Sèã
(
hpcd
, 1U);

867 ()
	`USB_DevC⁄√˘
(
hpcd
->
In°™˚
);

868 
	`__HAL_UNLOCK
(
hpcd
);

870  
HAL_OK
;

871 
	}
}

878 
HAL_SètusTy≥Def
 
	$HAL_PCD_St›
(
PCD_H™dÀTy≥Def
 *
hpcd
)

880 
	`__HAL_LOCK
(
hpcd
);

881 
	`__HAL_PCD_DISABLE
(
hpcd
);

883 #i‡
	`deföed
 (
USB
)

884 
	`HAL_PCDEx_SëC⁄√˘i⁄Sèã
(
hpcd
, 0U);

887 ()
	`USB_DevDisc⁄√˘
(
hpcd
->
In°™˚
);

889 #i‡
	`deföed
 (
USB_OTG_FS
)

890 ()
	`USB_FlushTxFifo
(
hpcd
->
In°™˚
, 0x10U);

893 
	`__HAL_UNLOCK
(
hpcd
);

895  
HAL_OK
;

896 
	}
}

898 #i‡
deföed
 (
USB_OTG_FS
)

904 
	$HAL_PCD_IRQH™dÀr
(
PCD_H™dÀTy≥Def
 *
hpcd
)

906 
USB_OTG_GlobÆTy≥Def
 *
USBx
 = 
hpcd
->
In°™˚
;

907 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

908 
USB_OTG_EPTy≥Def
 *
ï
;

909 
uöt32_t
 
i
;

910 
uöt32_t
 
ï_öå
;

911 
uöt32_t
 
ïöt
;

912 
uöt32_t
 
ïnum
;

913 
uöt32_t
 
fif€m±ymsk
;

914 
uöt32_t
 
ãmp
;

917 i‡(
	`USB_GëMode
(
hpcd
->
In°™˚
Ë=
USB_OTG_MODE_DEVICE
)

920 i‡(
	`__HAL_PCD_IS_INVALID_INTERRUPT
(
hpcd
))

925 i‡(
	`__HAL_PCD_GET_FLAG
(
hpcd
, 
USB_OTG_GINTSTS_MMIS
))

928 
	`__HAL_PCD_CLEAR_FLAG
(
hpcd
, 
USB_OTG_GINTSTS_MMIS
);

932 i‡(
	`__HAL_PCD_GET_FLAG
(
hpcd
, 
USB_OTG_GINTSTS_RXFLVL
))

934 
	`USB_MASK_INTERRUPT
(
hpcd
->
In°™˚
, 
USB_OTG_GINTSTS_RXFLVL
);

936 
ãmp
 = 
USBx
->
GRXSTSP
;

938 
ï
 = &
hpcd
->
OUT_ï
[
ãmp
 & 
USB_OTG_GRXSTSP_EPNUM
];

940 i‡(((
ãmp
 & 
USB_OTG_GRXSTSP_PKTSTS
Ë>> 17Ë=
STS_DATA_UPDT
)

942 i‡((
ãmp
 & 
USB_OTG_GRXSTSP_BCNT
) != 0U)

944 ()
	`USB_RódPackë
(
USBx
, 
ï
->
x„r_buff
,

945 (
uöt16_t
)((
ãmp
 & 
USB_OTG_GRXSTSP_BCNT
) >> 4));

947 
ï
->
x„r_buff
 +(
ãmp
 & 
USB_OTG_GRXSTSP_BCNT
) >> 4;

948 
ï
->
x„r_cou¡
 +(
ãmp
 & 
USB_OTG_GRXSTSP_BCNT
) >> 4;

951 i‡(((
ãmp
 & 
USB_OTG_GRXSTSP_PKTSTS
Ë>> 17Ë=
STS_SETUP_UPDT
)

953 ()
	`USB_RódPackë
(
USBx
, (
uöt8_t
 *)
hpcd
->
Sëup
, 8U);

954 
ï
->
x„r_cou¡
 +(
ãmp
 & 
USB_OTG_GRXSTSP_BCNT
) >> 4;

960 
	`USB_UNMASK_INTERRUPT
(
hpcd
->
In°™˚
, 
USB_OTG_GINTSTS_RXFLVL
);

963 i‡(
	`__HAL_PCD_GET_FLAG
(
hpcd
, 
USB_OTG_GINTSTS_OEPINT
))

965 
ïnum
 = 0U;

968 
ï_öå
 = 
	`USB_RódDevAŒOutEpI¡îru±
(
hpcd
->
In°™˚
);

970 
ï_öå
 != 0U)

972 i‡((
ï_öå
 & 0x1U) != 0U)

974 
ïöt
 = 
	`USB_RódDevOutEPI¡îru±
(
hpcd
->
In°™˚
, (
uöt8_t
)
ïnum
);

976 i‡((
ïöt
 & 
USB_OTG_DOEPINT_XFRC
) == USB_OTG_DOEPINT_XFRC)

978 
	`CLEAR_OUT_EP_INTR
(
ïnum
, 
USB_OTG_DOEPINT_XFRC
);

979 ()
	`PCD_EP_OutX‰Com∂ëe_öt
(
hpcd
, 
ïnum
);

982 i‡((
ïöt
 & 
USB_OTG_DOEPINT_STUP
) == USB_OTG_DOEPINT_STUP)

984 
	`CLEAR_OUT_EP_INTR
(
ïnum
, 
USB_OTG_DOEPINT_STUP
);

986 ()
	`PCD_EP_OutSëupPackë_öt
(
hpcd
, 
ïnum
);

989 i‡((
ïöt
 & 
USB_OTG_DOEPINT_OTEPDIS
) == USB_OTG_DOEPINT_OTEPDIS)

991 
	`CLEAR_OUT_EP_INTR
(
ïnum
, 
USB_OTG_DOEPINT_OTEPDIS
);

995 i‡((
ïöt
 & 
USB_OTG_DOEPINT_OTEPSPR
) == USB_OTG_DOEPINT_OTEPSPR)

997 
	`CLEAR_OUT_EP_INTR
(
ïnum
, 
USB_OTG_DOEPINT_OTEPSPR
);

1001 i‡((
ïöt
 & 
USB_OTG_DOEPINT_NAK
) == USB_OTG_DOEPINT_NAK)

1003 
	`CLEAR_OUT_EP_INTR
(
ïnum
, 
USB_OTG_DOEPINT_NAK
);

1006 
ïnum
++;

1007 
ï_öå
 >>= 1U;

1011 i‡(
	`__HAL_PCD_GET_FLAG
(
hpcd
, 
USB_OTG_GINTSTS_IEPINT
))

1014 
ï_öå
 = 
	`USB_RódDevAŒInEpI¡îru±
(
hpcd
->
In°™˚
);

1016 
ïnum
 = 0U;

1018 
ï_öå
 != 0U)

1020 i‡((
ï_öå
 & 0x1U) != 0U)

1022 
ïöt
 = 
	`USB_RódDevInEPI¡îru±
(
hpcd
->
In°™˚
, (
uöt8_t
)
ïnum
);

1024 i‡((
ïöt
 & 
USB_OTG_DIEPINT_XFRC
) == USB_OTG_DIEPINT_XFRC)

1026 
fif€m±ymsk
 = (
uöt32_t
)(0x1UL << (
ïnum
 & 
EP_ADDR_MSK
));

1027 
USBx_DEVICE
->
DIEPEMPMSK
 &~
fif€m±ymsk
;

1029 
	`CLEAR_IN_EP_INTR
(
ïnum
, 
USB_OTG_DIEPINT_XFRC
);

1031 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

1032 
hpcd
->
	`D©aInSègeCÆlback
(hpcd, (
uöt8_t
)
ïnum
);

1034 
	`HAL_PCD_D©aInSègeCÆlback
(
hpcd
, (
uöt8_t
)
ïnum
);

1037 i‡((
ïöt
 & 
USB_OTG_DIEPINT_TOC
) == USB_OTG_DIEPINT_TOC)

1039 
	`CLEAR_IN_EP_INTR
(
ïnum
, 
USB_OTG_DIEPINT_TOC
);

1041 i‡((
ïöt
 & 
USB_OTG_DIEPINT_ITTXFE
) == USB_OTG_DIEPINT_ITTXFE)

1043 
	`CLEAR_IN_EP_INTR
(
ïnum
, 
USB_OTG_DIEPINT_ITTXFE
);

1045 i‡((
ïöt
 & 
USB_OTG_DIEPINT_INEPNE
) == USB_OTG_DIEPINT_INEPNE)

1047 
	`CLEAR_IN_EP_INTR
(
ïnum
, 
USB_OTG_DIEPINT_INEPNE
);

1049 i‡((
ïöt
 & 
USB_OTG_DIEPINT_EPDISD
) == USB_OTG_DIEPINT_EPDISD)

1051 
	`CLEAR_IN_EP_INTR
(
ïnum
, 
USB_OTG_DIEPINT_EPDISD
);

1053 i‡((
ïöt
 & 
USB_OTG_DIEPINT_TXFE
) == USB_OTG_DIEPINT_TXFE)

1055 ()
	`PCD_WrôeEm±yTxFifo
(
hpcd
, 
ïnum
);

1058 
ïnum
++;

1059 
ï_öå
 >>= 1U;

1064 i‡(
	`__HAL_PCD_GET_FLAG
(
hpcd
, 
USB_OTG_GINTSTS_WKUINT
))

1067 
USBx_DEVICE
->
DCTL
 &~
USB_OTG_DCTL_RWUSIG
;

1069 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

1070 
hpcd
->
	`ResumeCÆlback
(hpcd);

1072 
	`HAL_PCD_ResumeCÆlback
(
hpcd
);

1075 
	`__HAL_PCD_CLEAR_FLAG
(
hpcd
, 
USB_OTG_GINTSTS_WKUINT
);

1079 i‡(
	`__HAL_PCD_GET_FLAG
(
hpcd
, 
USB_OTG_GINTSTS_USBSUSP
))

1081 i‡((
USBx_DEVICE
->
DSTS
 & 
USB_OTG_DSTS_SUSPSTS
) == USB_OTG_DSTS_SUSPSTS)

1083 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

1084 
hpcd
->
	`Su•ídCÆlback
(hpcd);

1086 
	`HAL_PCD_Su•ídCÆlback
(
hpcd
);

1089 
	`__HAL_PCD_CLEAR_FLAG
(
hpcd
, 
USB_OTG_GINTSTS_USBSUSP
);

1092 i‡(
	`__HAL_PCD_GET_FLAG
(
hpcd
, 
USB_OTG_GINTSTS_USBRST
))

1094 
USBx_DEVICE
->
DCTL
 &~
USB_OTG_DCTL_RWUSIG
;

1095 ()
	`USB_FlushTxFifo
(
hpcd
->
In°™˚
, 0x10U);

1097 
i
 = 0U; i < 
hpcd
->
Inô
.
dev_ídpoöts
; i++)

1099 
	`USBx_INEP
(
i
)->
DIEPINT
 = 0xFB7FU;

1100 
	`USBx_INEP
(
i
)->
DIEPCTL
 &~
USB_OTG_DIEPCTL_STALL
;

1101 
	`USBx_INEP
(
i
)->
DIEPCTL
 |
USB_OTG_DIEPCTL_SNAK
;

1102 
	`USBx_OUTEP
(
i
)->
DOEPINT
 = 0xFB7FU;

1103 
	`USBx_OUTEP
(
i
)->
DOEPCTL
 &~
USB_OTG_DOEPCTL_STALL
;

1104 
	`USBx_OUTEP
(
i
)->
DOEPCTL
 |
USB_OTG_DOEPCTL_SNAK
;

1106 
USBx_DEVICE
->
DAINTMSK
 |= 0x10001U;

1108 i‡(
hpcd
->
Inô
.
u£_dediˇãd_ï1
 != 0U)

1110 
USBx_DEVICE
->
DOUTEP1MSK
 |
USB_OTG_DOEPMSK_STUPM
 |

1111 
USB_OTG_DOEPMSK_XFRCM
 |

1112 
USB_OTG_DOEPMSK_EPDM
;

1114 
USBx_DEVICE
->
DINEP1MSK
 |
USB_OTG_DIEPMSK_TOM
 |

1115 
USB_OTG_DIEPMSK_XFRCM
 |

1116 
USB_OTG_DIEPMSK_EPDM
;

1120 
USBx_DEVICE
->
DOEPMSK
 |
USB_OTG_DOEPMSK_STUPM
 |

1121 
USB_OTG_DOEPMSK_XFRCM
 |

1122 
USB_OTG_DOEPMSK_EPDM
 |

1123 
USB_OTG_DOEPMSK_OTEPSPRM
 |

1124 
USB_OTG_DOEPMSK_NAKM
;

1126 
USBx_DEVICE
->
DIEPMSK
 |
USB_OTG_DIEPMSK_TOM
 |

1127 
USB_OTG_DIEPMSK_XFRCM
 |

1128 
USB_OTG_DIEPMSK_EPDM
;

1132 
USBx_DEVICE
->
DCFG
 &~
USB_OTG_DCFG_DAD
;

1135 ()
	`USB_EP0_OutSèπ
(
hpcd
->
In°™˚
, (
uöt8_t
 *)hpcd->
Sëup
);

1137 
	`__HAL_PCD_CLEAR_FLAG
(
hpcd
, 
USB_OTG_GINTSTS_USBRST
);

1141 i‡(
	`__HAL_PCD_GET_FLAG
(
hpcd
, 
USB_OTG_GINTSTS_ENUMDNE
))

1143 ()
	`USB_A˘iv©eSëup
(
hpcd
->
In°™˚
);

1144 
hpcd
->
Inô
.
•ìd
 = 
	`USB_GëDevS≥ed
(hpcd->
In°™˚
);

1147 ()
	`USB_SëTu∫¨oundTime
(
hpcd
->
In°™˚
,

1148 
	`HAL_RCC_GëHCLKFªq
(),

1149 (
uöt8_t
)
hpcd
->
Inô
.
•ìd
);

1151 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

1152 
hpcd
->
	`Re£tCÆlback
(hpcd);

1154 
	`HAL_PCD_Re£tCÆlback
(
hpcd
);

1157 
	`__HAL_PCD_CLEAR_FLAG
(
hpcd
, 
USB_OTG_GINTSTS_ENUMDNE
);

1161 i‡(
	`__HAL_PCD_GET_FLAG
(
hpcd
, 
USB_OTG_GINTSTS_SOF
))

1163 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

1164 
hpcd
->
	`SOFCÆlback
(hpcd);

1166 
	`HAL_PCD_SOFCÆlback
(
hpcd
);

1169 
	`__HAL_PCD_CLEAR_FLAG
(
hpcd
, 
USB_OTG_GINTSTS_SOF
);

1173 i‡(
	`__HAL_PCD_GET_FLAG
(
hpcd
, 
USB_OTG_GINTSTS_IISOIXFR
))

1177 
ïnum
 = 0U;

1179 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

1180 
hpcd
->
	`ISOINIncom∂ëeCÆlback
(hpcd, (
uöt8_t
)
ïnum
);

1182 
	`HAL_PCD_ISOINIncom∂ëeCÆlback
(
hpcd
, (
uöt8_t
)
ïnum
);

1185 
	`__HAL_PCD_CLEAR_FLAG
(
hpcd
, 
USB_OTG_GINTSTS_IISOIXFR
);

1189 i‡(
	`__HAL_PCD_GET_FLAG
(
hpcd
, 
USB_OTG_GINTSTS_PXFR_INCOMPISOOUT
))

1193 
ïnum
 = 0U;

1195 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

1196 
hpcd
->
	`ISOOUTIncom∂ëeCÆlback
(hpcd, (
uöt8_t
)
ïnum
);

1198 
	`HAL_PCD_ISOOUTIncom∂ëeCÆlback
(
hpcd
, (
uöt8_t
)
ïnum
);

1201 
	`__HAL_PCD_CLEAR_FLAG
(
hpcd
, 
USB_OTG_GINTSTS_PXFR_INCOMPISOOUT
);

1205 i‡(
	`__HAL_PCD_GET_FLAG
(
hpcd
, 
USB_OTG_GINTSTS_SRQINT
))

1207 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

1208 
hpcd
->
	`C⁄√˘CÆlback
(hpcd);

1210 
	`HAL_PCD_C⁄√˘CÆlback
(
hpcd
);

1213 
	`__HAL_PCD_CLEAR_FLAG
(
hpcd
, 
USB_OTG_GINTSTS_SRQINT
);

1217 i‡(
	`__HAL_PCD_GET_FLAG
(
hpcd
, 
USB_OTG_GINTSTS_OTGINT
))

1219 
ãmp
 = 
hpcd
->
In°™˚
->
GOTGINT
;

1221 i‡((
ãmp
 & 
USB_OTG_GOTGINT_SEDET
) == USB_OTG_GOTGINT_SEDET)

1223 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

1224 
hpcd
->
	`Disc⁄√˘CÆlback
(hpcd);

1226 
	`HAL_PCD_Disc⁄√˘CÆlback
(
hpcd
);

1229 
hpcd
->
In°™˚
->
GOTGINT
 |
ãmp
;

1232 
	}
}

1240 
	$HAL_PCD_WKUP_IRQH™dÀr
(
PCD_H™dÀTy≥Def
 *
hpcd
)

1243 
	`__HAL_USB_OTG_FS_WAKEUP_EXTI_CLEAR_FLAG
();

1244 
	}
}

1247 #i‡
deföed
 (
USB
)

1253 
	$HAL_PCD_IRQH™dÀr
(
PCD_H™dÀTy≥Def
 *
hpcd
)

1255 
uöt16_t
 
°‹e_ï
[8];

1256 
uöt8_t
 
i
;

1258 i‡(
	`__HAL_PCD_GET_FLAG
(
hpcd
, 
USB_ISTR_CTR
))

1262 ()
	`PCD_EP_ISR_H™dÀr
(
hpcd
);

1265 i‡(
	`__HAL_PCD_GET_FLAG
(
hpcd
, 
USB_ISTR_RESET
))

1267 
	`__HAL_PCD_CLEAR_FLAG
(
hpcd
, 
USB_ISTR_RESET
);

1269 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

1270 
hpcd
->
	`Re£tCÆlback
(hpcd);

1272 
	`HAL_PCD_Re£tCÆlback
(
hpcd
);

1275 ()
	`HAL_PCD_SëAddªss
(
hpcd
, 0U);

1278 i‡(
	`__HAL_PCD_GET_FLAG
(
hpcd
, 
USB_ISTR_PMAOVR
))

1280 
	`__HAL_PCD_CLEAR_FLAG
(
hpcd
, 
USB_ISTR_PMAOVR
);

1283 i‡(
	`__HAL_PCD_GET_FLAG
(
hpcd
, 
USB_ISTR_ERR
))

1285 
	`__HAL_PCD_CLEAR_FLAG
(
hpcd
, 
USB_ISTR_ERR
);

1288 i‡(
	`__HAL_PCD_GET_FLAG
(
hpcd
, 
USB_ISTR_WKUP
))

1290 
hpcd
->
In°™˚
->
CNTR
 &(
uöt16_t
Ë~(
USB_CNTR_LP_MODE
);

1291 
hpcd
->
In°™˚
->
CNTR
 &(
uöt16_t
Ë~(
USB_CNTR_FSUSP
);

1293 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

1294 
hpcd
->
	`ResumeCÆlback
(hpcd);

1296 
	`HAL_PCD_ResumeCÆlback
(
hpcd
);

1299 
	`__HAL_PCD_CLEAR_FLAG
(
hpcd
, 
USB_ISTR_WKUP
);

1302 i‡(
	`__HAL_PCD_GET_FLAG
(
hpcd
, 
USB_ISTR_SUSP
))

1307 
i
 = 0U; i < 8U; i++)

1309 
°‹e_ï
[
i
] = 
	`PCD_GET_ENDPOINT
(
hpcd
->
In°™˚
, i);

1313 
hpcd
->
In°™˚
->
CNTR
 |(
uöt16_t
)(
USB_CNTR_FRES
);

1316 
hpcd
->
In°™˚
->
CNTR
 &(
uöt16_t
)(~
USB_CNTR_FRES
);

1319 (
hpcd
->
In°™˚
->
ISTR
 & 
USB_ISTR_RESET
) == 0U)

1324 
	`__HAL_PCD_CLEAR_FLAG
(
hpcd
, 
USB_ISTR_RESET
);

1327 
i
 = 0U; i < 8U; i++)

1329 
	`PCD_SET_ENDPOINT
(
hpcd
->
In°™˚
, 
i
, 
°‹e_ï
[i]);

1333 
hpcd
->
In°™˚
->
CNTR
 |(
uöt16_t
)
USB_CNTR_FSUSP
;

1336 
	`__HAL_PCD_CLEAR_FLAG
(
hpcd
, 
USB_ISTR_SUSP
);

1338 
hpcd
->
In°™˚
->
CNTR
 |(
uöt16_t
)
USB_CNTR_LP_MODE
;

1340 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

1341 
hpcd
->
	`Su•ídCÆlback
(hpcd);

1343 
	`HAL_PCD_Su•ídCÆlback
(
hpcd
);

1347 i‡(
	`__HAL_PCD_GET_FLAG
(
hpcd
, 
USB_ISTR_SOF
))

1349 
	`__HAL_PCD_CLEAR_FLAG
(
hpcd
, 
USB_ISTR_SOF
);

1351 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

1352 
hpcd
->
	`SOFCÆlback
(hpcd);

1354 
	`HAL_PCD_SOFCÆlback
(
hpcd
);

1358 i‡(
	`__HAL_PCD_GET_FLAG
(
hpcd
, 
USB_ISTR_ESOF
))

1361 
	`__HAL_PCD_CLEAR_FLAG
(
hpcd
, 
USB_ISTR_ESOF
);

1363 
	}
}

1371 
	$HAL_PCD_WKUP_IRQH™dÀr
(
PCD_H™dÀTy≥Def
 *
hpcd
)

1374 
	`__HAL_USB_WAKEUP_EXTI_CLEAR_FLAG
();

1375 
	}
}

1384 
__wók
 
	$HAL_PCD_D©aOutSègeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ïnum
)

1387 
	`UNUSED
(
hpcd
);

1388 
	`UNUSED
(
ïnum
);

1393 
	}
}

1401 
__wók
 
	$HAL_PCD_D©aInSègeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ïnum
)

1404 
	`UNUSED
(
hpcd
);

1405 
	`UNUSED
(
ïnum
);

1410 
	}
}

1416 
__wók
 
	$HAL_PCD_SëupSègeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

1419 
	`UNUSED
(
hpcd
);

1424 
	}
}

1431 
__wók
 
	$HAL_PCD_SOFCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

1434 
	`UNUSED
(
hpcd
);

1439 
	}
}

1446 
__wók
 
	$HAL_PCD_Re£tCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

1449 
	`UNUSED
(
hpcd
);

1454 
	}
}

1461 
__wók
 
	$HAL_PCD_Su•ídCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

1464 
	`UNUSED
(
hpcd
);

1469 
	}
}

1476 
__wók
 
	$HAL_PCD_ResumeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

1479 
	`UNUSED
(
hpcd
);

1484 
	}
}

1492 
__wók
 
	$HAL_PCD_ISOOUTIncom∂ëeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ïnum
)

1495 
	`UNUSED
(
hpcd
);

1496 
	`UNUSED
(
ïnum
);

1501 
	}
}

1509 
__wók
 
	$HAL_PCD_ISOINIncom∂ëeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ïnum
)

1512 
	`UNUSED
(
hpcd
);

1513 
	`UNUSED
(
ïnum
);

1518 
	}
}

1525 
__wók
 
	$HAL_PCD_C⁄√˘CÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

1528 
	`UNUSED
(
hpcd
);

1533 
	}
}

1540 
__wók
 
	$HAL_PCD_Disc⁄√˘CÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

1543 
	`UNUSED
(
hpcd
);

1548 
	}
}

1574 
HAL_SètusTy≥Def
 
	$HAL_PCD_DevC⁄√˘
(
PCD_H™dÀTy≥Def
 *
hpcd
)

1576 
	`__HAL_LOCK
(
hpcd
);

1578 #i‡
	`deföed
 (
USB
)

1579 
	`HAL_PCDEx_SëC⁄√˘i⁄Sèã
(
hpcd
, 1U);

1582 ()
	`USB_DevC⁄√˘
(
hpcd
->
In°™˚
);

1583 
	`__HAL_UNLOCK
(
hpcd
);

1585  
HAL_OK
;

1586 
	}
}

1593 
HAL_SètusTy≥Def
 
	$HAL_PCD_DevDisc⁄√˘
(
PCD_H™dÀTy≥Def
 *
hpcd
)

1595 
	`__HAL_LOCK
(
hpcd
);

1597 #i‡
	`deföed
 (
USB
)

1598 
	`HAL_PCDEx_SëC⁄√˘i⁄Sèã
(
hpcd
, 0U);

1601 ()
	`USB_DevDisc⁄√˘
(
hpcd
->
In°™˚
);

1602 
	`__HAL_UNLOCK
(
hpcd
);

1604  
HAL_OK
;

1605 
	}
}

1613 
HAL_SètusTy≥Def
 
	$HAL_PCD_SëAddªss
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
addªss
)

1615 
	`__HAL_LOCK
(
hpcd
);

1616 
hpcd
->
USB_Addªss
 = 
addªss
;

1617 ()
	`USB_SëDevAddªss
(
hpcd
->
In°™˚
, 
addªss
);

1618 
	`__HAL_UNLOCK
(
hpcd
);

1620  
HAL_OK
;

1621 
	}
}

1630 
HAL_SètusTy≥Def
 
	$HAL_PCD_EP_O≥n
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ï_addr
,

1631 
uöt16_t
 
ï_mps
, 
uöt8_t
 
ï_ty≥
)

1633 
HAL_SètusTy≥Def
 
ªt
 = 
HAL_OK
;

1634 
PCD_EPTy≥Def
 *
ï
;

1636 i‡((
ï_addr
 & 0x80U) == 0x80U)

1638 
ï
 = &
hpcd
->
IN_ï
[
ï_addr
 & 
EP_ADDR_MSK
];

1639 
ï
->
is_ö
 = 1U;

1643 
ï
 = &
hpcd
->
OUT_ï
[
ï_addr
 & 
EP_ADDR_MSK
];

1644 
ï
->
is_ö
 = 0U;

1647 
ï
->
num
 = 
ï_addr
 & 
EP_ADDR_MSK
;

1648 
ï
->
max∑ckë
 = 
ï_mps
;

1649 
ï
->
ty≥
 = 
ï_ty≥
;

1651 i‡(
ï
->
is_ö
 != 0U)

1654 
ï
->
tx_fifo_num
 =Ép->
num
;

1657 i‡(
ï_ty≥
 =
EP_TYPE_BULK
)

1659 
ï
->
d©a_pid_°¨t
 = 0U;

1662 
	`__HAL_LOCK
(
hpcd
);

1663 ()
	`USB_A˘iv©eEndpoöt
(
hpcd
->
In°™˚
, 
ï
);

1664 
	`__HAL_UNLOCK
(
hpcd
);

1666  
ªt
;

1667 
	}
}

1675 
HAL_SètusTy≥Def
 
	$HAL_PCD_EP_Clo£
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ï_addr
)

1677 
PCD_EPTy≥Def
 *
ï
;

1679 i‡((
ï_addr
 & 0x80U) == 0x80U)

1681 
ï
 = &
hpcd
->
IN_ï
[
ï_addr
 & 
EP_ADDR_MSK
];

1682 
ï
->
is_ö
 = 1U;

1686 
ï
 = &
hpcd
->
OUT_ï
[
ï_addr
 & 
EP_ADDR_MSK
];

1687 
ï
->
is_ö
 = 0U;

1689 
ï
->
num
 = 
ï_addr
 & 
EP_ADDR_MSK
;

1691 
	`__HAL_LOCK
(
hpcd
);

1692 ()
	`USB_Dó˘iv©eEndpoöt
(
hpcd
->
In°™˚
, 
ï
);

1693 
	`__HAL_UNLOCK
(
hpcd
);

1694  
HAL_OK
;

1695 
	}
}

1706 
HAL_SètusTy≥Def
 
	$HAL_PCD_EP_Re˚ive
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ï_addr
, uöt8_à*
pBuf
, 
uöt32_t
 
Àn
)

1708 
PCD_EPTy≥Def
 *
ï
;

1710 
ï
 = &
hpcd
->
OUT_ï
[
ï_addr
 & 
EP_ADDR_MSK
];

1713 
ï
->
x„r_buff
 = 
pBuf
;

1714 
ï
->
x„r_Àn
 = 
Àn
;

1715 
ï
->
x„r_cou¡
 = 0U;

1716 
ï
->
is_ö
 = 0U;

1717 
ï
->
num
 = 
ï_addr
 & 
EP_ADDR_MSK
;

1719 i‡((
ï_addr
 & 
EP_ADDR_MSK
) == 0U)

1721 ()
	`USB_EP0SèπX„r
(
hpcd
->
In°™˚
, 
ï
);

1725 ()
	`USB_EPSèπX„r
(
hpcd
->
In°™˚
, 
ï
);

1728  
HAL_OK
;

1729 
	}
}

1737 
uöt32_t
 
	$HAL_PCD_EP_GëRxCou¡
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ï_addr
)

1739  
hpcd
->
OUT_ï
[
ï_addr
 & 
EP_ADDR_MSK
].
x„r_cou¡
;

1740 
	}
}

1749 
HAL_SètusTy≥Def
 
	$HAL_PCD_EP_Tønsmô
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ï_addr
, uöt8_à*
pBuf
, 
uöt32_t
 
Àn
)

1751 
PCD_EPTy≥Def
 *
ï
;

1753 
ï
 = &
hpcd
->
IN_ï
[
ï_addr
 & 
EP_ADDR_MSK
];

1756 
ï
->
x„r_buff
 = 
pBuf
;

1757 
ï
->
x„r_Àn
 = 
Àn
;

1758 #i‡
	`deföed
 (
USB
)

1759 
ï
->
x„r_fûl_db
 = 1U;

1760 
ï
->
x„r_Àn_db
 = 
Àn
;

1762 
ï
->
x„r_cou¡
 = 0U;

1763 
ï
->
is_ö
 = 1U;

1764 
ï
->
num
 = 
ï_addr
 & 
EP_ADDR_MSK
;

1766 i‡((
ï_addr
 & 
EP_ADDR_MSK
) == 0U)

1768 ()
	`USB_EP0SèπX„r
(
hpcd
->
In°™˚
, 
ï
);

1772 ()
	`USB_EPSèπX„r
(
hpcd
->
In°™˚
, 
ï
);

1775  
HAL_OK
;

1776 
	}
}

1784 
HAL_SètusTy≥Def
 
	$HAL_PCD_EP_SëSèŒ
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ï_addr
)

1786 
PCD_EPTy≥Def
 *
ï
;

1788 i‡(((
uöt32_t
)
ï_addr
 & 
EP_ADDR_MSK
Ë> 
hpcd
->
Inô
.
dev_ídpoöts
)

1790  
HAL_ERROR
;

1793 i‡((0x80U & 
ï_addr
) == 0x80U)

1795 
ï
 = &
hpcd
->
IN_ï
[
ï_addr
 & 
EP_ADDR_MSK
];

1796 
ï
->
is_ö
 = 1U;

1800 
ï
 = &
hpcd
->
OUT_ï
[
ï_addr
];

1801 
ï
->
is_ö
 = 0U;

1804 
ï
->
is_°Æl
 = 1U;

1805 
ï
->
num
 = 
ï_addr
 & 
EP_ADDR_MSK
;

1807 
	`__HAL_LOCK
(
hpcd
);

1809 ()
	`USB_EPSëSèŒ
(
hpcd
->
In°™˚
, 
ï
);

1811 i‡((
ï_addr
 & 
EP_ADDR_MSK
) == 0U)

1813 ()
	`USB_EP0_OutSèπ
(
hpcd
->
In°™˚
, (
uöt8_t
 *)hpcd->
Sëup
);

1816 
	`__HAL_UNLOCK
(
hpcd
);

1818  
HAL_OK
;

1819 
	}
}

1827 
HAL_SètusTy≥Def
 
	$HAL_PCD_EP_CÃSèŒ
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ï_addr
)

1829 
PCD_EPTy≥Def
 *
ï
;

1831 i‡(((
uöt32_t
)
ï_addr
 & 0x0FUË> 
hpcd
->
Inô
.
dev_ídpoöts
)

1833  
HAL_ERROR
;

1836 i‡((0x80U & 
ï_addr
) == 0x80U)

1838 
ï
 = &
hpcd
->
IN_ï
[
ï_addr
 & 
EP_ADDR_MSK
];

1839 
ï
->
is_ö
 = 1U;

1843 
ï
 = &
hpcd
->
OUT_ï
[
ï_addr
 & 
EP_ADDR_MSK
];

1844 
ï
->
is_ö
 = 0U;

1847 
ï
->
is_°Æl
 = 0U;

1848 
ï
->
num
 = 
ï_addr
 & 
EP_ADDR_MSK
;

1850 
	`__HAL_LOCK
(
hpcd
);

1851 ()
	`USB_EPCÀ¨SèŒ
(
hpcd
->
In°™˚
, 
ï
);

1852 
	`__HAL_UNLOCK
(
hpcd
);

1854  
HAL_OK
;

1855 
	}
}

1863 
HAL_SètusTy≥Def
 
	$HAL_PCD_EP_Flush
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ï_addr
)

1865 
	`__HAL_LOCK
(
hpcd
);

1867 i‡((
ï_addr
 & 0x80U) == 0x80U)

1869 ()
	`USB_FlushTxFifo
(
hpcd
->
In°™˚
, (
uöt32_t
)
ï_addr
 & 
EP_ADDR_MSK
);

1873 ()
	`USB_FlushRxFifo
(
hpcd
->
In°™˚
);

1876 
	`__HAL_UNLOCK
(
hpcd
);

1878  
HAL_OK
;

1879 
	}
}

1886 
HAL_SètusTy≥Def
 
	$HAL_PCD_A˘iv©eRemŸeWakeup
(
PCD_H™dÀTy≥Def
 *
hpcd
)

1888  (
	`USB_A˘iv©eRemŸeWakeup
(
hpcd
->
In°™˚
));

1889 
	}
}

1896 
HAL_SètusTy≥Def
 
	$HAL_PCD_DeA˘iv©eRemŸeWakeup
(
PCD_H™dÀTy≥Def
 *
hpcd
)

1898  (
	`USB_DeA˘iv©eRemŸeWakeup
(
hpcd
->
In°™˚
));

1899 
	}
}

1925 
PCD_SèãTy≥Def
 
	$HAL_PCD_GëSèã
(
PCD_H™dÀTy≥Def
 *
hpcd
)

1927  
hpcd
->
Sèã
;

1928 
	}
}

1942 #i‡
deföed
 (
USB_OTG_FS
)

1949 
HAL_SètusTy≥Def
 
	$PCD_WrôeEm±yTxFifo
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt32_t
 
ïnum
)

1951 
USB_OTG_GlobÆTy≥Def
 *
USBx
 = 
hpcd
->
In°™˚
;

1952 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

1953 
USB_OTG_EPTy≥Def
 *
ï
;

1954 
uöt32_t
 
Àn
;

1955 
uöt32_t
 
Àn32b
;

1956 
uöt32_t
 
fif€m±ymsk
;

1958 
ï
 = &
hpcd
->
IN_ï
[
ïnum
];

1960 i‡(
ï
->
x„r_cou¡
 >Ép->
x„r_Àn
)

1962  
HAL_ERROR
;

1965 
Àn
 = 
ï
->
x„r_Àn
 -Ép->
x„r_cou¡
;

1967 i‡(
Àn
 > 
ï
->
max∑ckë
)

1969 
Àn
 = 
ï
->
max∑ckë
;

1972 
Àn32b
 = (
Àn
 + 3U) / 4U;

1974 ((
	`USBx_INEP
(
ïnum
)->
DTXFSTS
 & 
USB_OTG_DTXFSTS_INEPTFSAV
Ë>
Àn32b
) &&

1975 (
ï
->
x„r_cou¡
 <Ép->
x„r_Àn
) && (ep->xfer_len != 0U))

1978 
Àn
 = 
ï
->
x„r_Àn
 -Ép->
x„r_cou¡
;

1980 i‡(
Àn
 > 
ï
->
max∑ckë
)

1982 
Àn
 = 
ï
->
max∑ckë
;

1984 
Àn32b
 = (
Àn
 + 3U) / 4U;

1986 ()
	`USB_WrôePackë
(
USBx
, 
ï
->
x„r_buff
, (
uöt8_t
)
ïnum
, (
uöt16_t
)
Àn
);

1988 
ï
->
x„r_buff
 +
Àn
;

1989 
ï
->
x„r_cou¡
 +
Àn
;

1992 i‡(
ï
->
x„r_Àn
 <ï->
x„r_cou¡
)

1994 
fif€m±ymsk
 = (
uöt32_t
)(0x1UL << (
ïnum
 & 
EP_ADDR_MSK
));

1995 
USBx_DEVICE
->
DIEPEMPMSK
 &~
fif€m±ymsk
;

1998  
HAL_OK
;

1999 
	}
}

2008 
HAL_SètusTy≥Def
 
	$PCD_EP_OutX‰Com∂ëe_öt
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt32_t
 
ïnum
)

2010 
USB_OTG_GlobÆTy≥Def
 *
USBx
 = 
hpcd
->
In°™˚
;

2011 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

2012 
uöt32_t
 
gSNPSiD
 = *(
__IO
 uöt32_à*)(&
USBx
->
CID
 + 0x1U);

2013 
uöt32_t
 
D€pötReg
 = 
	`USBx_OUTEP
(
ïnum
)->
DOEPINT
;

2015 i‡(
gSNPSiD
 =
USB_OTG_CORE_ID_310A
)

2018 i‡((
D€pötReg
 & 
USB_OTG_DOEPINT_STPKTRX
) == USB_OTG_DOEPINT_STPKTRX)

2020 
	`CLEAR_OUT_EP_INTR
(
ïnum
, 
USB_OTG_DOEPINT_STPKTRX
);

2024 i‡((
D€pötReg
 & 
USB_OTG_DOEPINT_OTEPSPR
) == USB_OTG_DOEPINT_OTEPSPR)

2026 
	`CLEAR_OUT_EP_INTR
(
ïnum
, 
USB_OTG_DOEPINT_OTEPSPR
);

2029 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

2030 
hpcd
->
	`D©aOutSègeCÆlback
(hpcd, (
uöt8_t
)
ïnum
);

2032 
	`HAL_PCD_D©aOutSègeCÆlback
(
hpcd
, (
uöt8_t
)
ïnum
);

2038 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

2039 
hpcd
->
	`D©aOutSègeCÆlback
(hpcd, (
uöt8_t
)
ïnum
);

2041 
	`HAL_PCD_D©aOutSègeCÆlback
(
hpcd
, (
uöt8_t
)
ïnum
);

2045  
HAL_OK
;

2046 
	}
}

2055 
HAL_SètusTy≥Def
 
	$PCD_EP_OutSëupPackë_öt
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt32_t
 
ïnum
)

2057 
USB_OTG_GlobÆTy≥Def
 *
USBx
 = 
hpcd
->
In°™˚
;

2058 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

2059 
uöt32_t
 
gSNPSiD
 = *(
__IO
 uöt32_à*)(&
USBx
->
CID
 + 0x1U);

2060 
uöt32_t
 
D€pötReg
 = 
	`USBx_OUTEP
(
ïnum
)->
DOEPINT
;

2062 i‡((
gSNPSiD
 > 
USB_OTG_CORE_ID_300A
) &&

2063 ((
D€pötReg
 & 
USB_OTG_DOEPINT_STPKTRX
) == USB_OTG_DOEPINT_STPKTRX))

2065 
	`CLEAR_OUT_EP_INTR
(
ïnum
, 
USB_OTG_DOEPINT_STPKTRX
);

2069 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

2070 
hpcd
->
	`SëupSègeCÆlback
(hpcd);

2072 
	`HAL_PCD_SëupSègeCÆlback
(
hpcd
);

2075  
HAL_OK
;

2076 
	}
}

2079 #i‡
deföed
 (
USB
)

2085 
HAL_SètusTy≥Def
 
	$PCD_EP_ISR_H™dÀr
(
PCD_H™dÀTy≥Def
 *
hpcd
)

2087 
PCD_EPTy≥Def
 *
ï
;

2088 
uöt16_t
 
cou¡
, 
wI°r
, 
wEPVÆ
, 
TxByãNbª
;

2089 
uöt8_t
 
ïödex
;

2092 (
hpcd
->
In°™˚
->
ISTR
 & 
USB_ISTR_CTR
) != 0U)

2094 
wI°r
 = 
hpcd
->
In°™˚
->
ISTR
;

2097 
ïödex
 = (
uöt8_t
)(
wI°r
 & 
USB_ISTR_EP_ID
);

2099 i‡(
ïödex
 == 0U)

2104 i‡((
wI°r
 & 
USB_ISTR_DIR
) == 0U)

2110 
	`PCD_CLEAR_TX_EP_CTR
(
hpcd
->
In°™˚
, 
PCD_ENDP0
);

2111 
ï
 = &
hpcd
->
IN_ï
[0];

2113 
ï
->
x„r_cou¡
 = 
	`PCD_GET_EP_TX_CNT
(
hpcd
->
In°™˚
,Ép->
num
);

2114 
ï
->
x„r_buff
 +ï->
x„r_cou¡
;

2117 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

2118 
hpcd
->
	`D©aInSègeCÆlback
(hpcd, 0U);

2120 
	`HAL_PCD_D©aInSègeCÆlback
(
hpcd
, 0U);

2123 i‡((
hpcd
->
USB_Addªss
 > 0UË&& (
ï
->
x„r_Àn
 == 0U))

2125 
hpcd
->
In°™˚
->
DADDR
 = ((
uöt16_t
)hpcd->
USB_Addªss
 | 
USB_DADDR_EF
);

2126 
hpcd
->
USB_Addªss
 = 0U;

2135 
ï
 = &
hpcd
->
OUT_ï
[0];

2136 
wEPVÆ
 = 
	`PCD_GET_ENDPOINT
(
hpcd
->
In°™˚
, 
PCD_ENDP0
);

2138 i‡((
wEPVÆ
 & 
USB_EP_SETUP
) != 0U)

2141 
ï
->
x„r_cou¡
 = 
	`PCD_GET_EP_RX_CNT
(
hpcd
->
In°™˚
,Ép->
num
);

2143 
	`USB_RódPMA
(
hpcd
->
In°™˚
, (
uöt8_t
 *)hpcd->
Sëup
,

2144 
ï
->
pmØdªss
, (
uöt16_t
Îp->
x„r_cou¡
);

2147 
	`PCD_CLEAR_RX_EP_CTR
(
hpcd
->
In°™˚
, 
PCD_ENDP0
);

2150 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

2151 
hpcd
->
	`SëupSègeCÆlback
(hpcd);

2153 
	`HAL_PCD_SëupSègeCÆlback
(
hpcd
);

2156 i‡((
wEPVÆ
 & 
USB_EP_CTR_RX
) != 0U)

2158 
	`PCD_CLEAR_RX_EP_CTR
(
hpcd
->
In°™˚
, 
PCD_ENDP0
);

2161 
ï
->
x„r_cou¡
 = 
	`PCD_GET_EP_RX_CNT
(
hpcd
->
In°™˚
,Ép->
num
);

2163 i‡((
ï
->
x„r_cou¡
 !0UË&& (ï->
x„r_buff
 != 0U))

2165 
	`USB_RódPMA
(
hpcd
->
In°™˚
, 
ï
->
x„r_buff
,

2166 
ï
->
pmØdªss
, (
uöt16_t
Îp->
x„r_cou¡
);

2168 
ï
->
x„r_buff
 +ï->
x„r_cou¡
;

2171 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

2172 
hpcd
->
	`D©aOutSègeCÆlback
(hpcd, 0U);

2174 
	`HAL_PCD_D©aOutSègeCÆlback
(
hpcd
, 0U);

2178 i‡((
	`PCD_GET_ENDPOINT
(
hpcd
->
In°™˚
, 
PCD_ENDP0
Ë& 
USB_EP_SETUP
) == 0U)

2180 
	`PCD_SET_EP_RX_CNT
(
hpcd
->
In°™˚
, 
PCD_ENDP0
, 
ï
->
max∑ckë
);

2181 
	`PCD_SET_EP_RX_STATUS
(
hpcd
->
In°™˚
, 
PCD_ENDP0
, 
USB_EP_RX_VALID
);

2190 
wEPVÆ
 = 
	`PCD_GET_ENDPOINT
(
hpcd
->
In°™˚
, 
ïödex
);

2192 i‡((
wEPVÆ
 & 
USB_EP_CTR_RX
) != 0U)

2195 
	`PCD_CLEAR_RX_EP_CTR
(
hpcd
->
In°™˚
, 
ïödex
);

2196 
ï
 = &
hpcd
->
OUT_ï
[
ïödex
];

2199 i‡(
ï
->
doubÀbuf„r
 == 0U)

2201 
cou¡
 = (
uöt16_t
)
	`PCD_GET_EP_RX_CNT
(
hpcd
->
In°™˚
, 
ï
->
num
);

2203 i‡(
cou¡
 != 0U)

2205 
	`USB_RódPMA
(
hpcd
->
In°™˚
, 
ï
->
x„r_buff
,Ép->
pmØdªss
, 
cou¡
);

2211 i‡(
ï
->
ty≥
 =
EP_TYPE_BULK
)

2213 
cou¡
 = 
	`HAL_PCD_EP_DB_Re˚ive
(
hpcd
, 
ï
, 
wEPVÆ
);

2218 
	`PCD_FªeU£rBuf„r
(
hpcd
->
In°™˚
, 
ï
->
num
, 0U);

2220 i‡((
	`PCD_GET_ENDPOINT
(
hpcd
->
In°™˚
, 
ï
->
num
Ë& 
USB_EP_DTOG_RX
) != 0U)

2223 
cou¡
 = (
uöt16_t
)
	`PCD_GET_EP_DBUF0_CNT
(
hpcd
->
In°™˚
, 
ï
->
num
);

2225 i‡(
cou¡
 != 0U)

2227 
	`USB_RódPMA
(
hpcd
->
In°™˚
, 
ï
->
x„r_buff
,Ép->
pmØddr0
, 
cou¡
);

2233 
cou¡
 = (
uöt16_t
)
	`PCD_GET_EP_DBUF1_CNT
(
hpcd
->
In°™˚
, 
ï
->
num
);

2235 i‡(
cou¡
 != 0U)

2237 
	`USB_RódPMA
(
hpcd
->
In°™˚
, 
ï
->
x„r_buff
,Ép->
pmØddr1
, 
cou¡
);

2243 
ï
->
x„r_cou¡
 +
cou¡
;

2244 
ï
->
x„r_buff
 +
cou¡
;

2246 i‡((
ï
->
x„r_Àn
 =0UË|| (
cou¡
 <Ép->
max∑ckë
))

2249 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

2250 
hpcd
->
	`D©aOutSègeCÆlback
(hpcd, 
ï
->
num
);

2252 
	`HAL_PCD_D©aOutSègeCÆlback
(
hpcd
, 
ï
->
num
);

2257 (Ë
	`USB_EPSèπX„r
(
hpcd
->
In°™˚
, 
ï
);

2262 i‡((
wEPVÆ
 & 
USB_EP_CTR_TX
) != 0U)

2264 
ï
 = &
hpcd
->
IN_ï
[
ïödex
];

2267 
	`PCD_CLEAR_TX_EP_CTR
(
hpcd
->
In°™˚
, 
ïödex
);

2270 i‡((
ï
->
ty≥
 =
EP_TYPE_INTR
Ë|| (ï->ty≥ =
EP_TYPE_CTRL
) ||

2271 ((
ï
->
ty≥
 =
EP_TYPE_BULK
Ë&& ((
wEPVÆ
 & 
USB_EP_KIND
) == 0U)))

2274 
TxByãNbª
 = (
uöt16_t
)
	`PCD_GET_EP_TX_CNT
(
hpcd
->
In°™˚
, 
ï
->
num
);

2276 i‡(
ï
->
x„r_Àn
 > 
TxByãNbª
)

2278 
ï
->
x„r_Àn
 -
TxByãNbª
;

2282 
ï
->
x„r_Àn
 = 0U;

2286 i‡(
ï
->
x„r_Àn
 == 0U)

2289 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

2290 
hpcd
->
	`D©aInSègeCÆlback
(hpcd, 
ï
->
num
);

2292 
	`HAL_PCD_D©aInSègeCÆlback
(
hpcd
, 
ï
->
num
);

2298 
ï
->
x„r_buff
 +
TxByãNbª
;

2299 
ï
->
x„r_cou¡
 +
TxByãNbª
;

2300 ()
	`USB_EPSèπX„r
(
hpcd
->
In°™˚
, 
ï
);

2306 ()
	`HAL_PCD_EP_DB_Tønsmô
(
hpcd
, 
ï
, 
wEPVÆ
);

2312  
HAL_OK
;

2313 
	}
}

2323 
uöt16_t
 
	$HAL_PCD_EP_DB_Re˚ive
(
PCD_H™dÀTy≥Def
 *
hpcd
,

2324 
PCD_EPTy≥Def
 *
ï
, 
uöt16_t
 
wEPVÆ
)

2326 
uöt16_t
 
cou¡
;

2329 i‡((
wEPVÆ
 & 
USB_EP_DTOG_RX
) != 0U)

2332 
cou¡
 = (
uöt16_t
)
	`PCD_GET_EP_DBUF0_CNT
(
hpcd
->
In°™˚
, 
ï
->
num
);

2334 i‡(
ï
->
x„r_Àn
 >
cou¡
)

2336 
ï
->
x„r_Àn
 -
cou¡
;

2340 
ï
->
x„r_Àn
 = 0U;

2343 i‡(
ï
->
x„r_Àn
 == 0U)

2346 
	`PCD_SET_EP_RX_STATUS
(
hpcd
->
In°™˚
, 
ï
->
num
, 
USB_EP_RX_NAK
);

2350 i‡((
wEPVÆ
 & 
USB_EP_DTOG_TX
) != 0U)

2352 
	`PCD_FªeU£rBuf„r
(
hpcd
->
In°™˚
, 
ï
->
num
, 0U);

2355 i‡(
cou¡
 != 0U)

2357 
	`USB_RódPMA
(
hpcd
->
In°™˚
, 
ï
->
x„r_buff
,Ép->
pmØddr0
, 
cou¡
);

2364 
cou¡
 = (
uöt16_t
)
	`PCD_GET_EP_DBUF1_CNT
(
hpcd
->
In°™˚
, 
ï
->
num
);

2366 i‡(
ï
->
x„r_Àn
 >
cou¡
)

2368 
ï
->
x„r_Àn
 -
cou¡
;

2372 
ï
->
x„r_Àn
 = 0U;

2375 i‡(
ï
->
x„r_Àn
 == 0U)

2378 
	`PCD_SET_EP_RX_STATUS
(
hpcd
->
In°™˚
, 
ï
->
num
, 
USB_EP_RX_NAK
);

2382 i‡((
wEPVÆ
 & 
USB_EP_DTOG_TX
) == 0U)

2384 
	`PCD_FªeU£rBuf„r
(
hpcd
->
In°™˚
, 
ï
->
num
, 0U);

2387 i‡(
cou¡
 != 0U)

2389 
	`USB_RódPMA
(
hpcd
->
In°™˚
, 
ï
->
x„r_buff
,Ép->
pmØddr1
, 
cou¡
);

2393  
cou¡
;

2394 
	}
}

2404 
HAL_SètusTy≥Def
 
	$HAL_PCD_EP_DB_Tønsmô
(
PCD_H™dÀTy≥Def
 *
hpcd
,

2405 
PCD_EPTy≥Def
 *
ï
, 
uöt16_t
 
wEPVÆ
)

2407 
uöt32_t
 
Àn
;

2408 
uöt16_t
 
TxByãNbª
;

2411 i‡((
wEPVÆ
 & 
USB_EP_DTOG_TX
) != 0U)

2414 
TxByãNbª
 = (
uöt16_t
)
	`PCD_GET_EP_DBUF0_CNT
(
hpcd
->
In°™˚
, 
ï
->
num
);

2416 i‡(
ï
->
x„r_Àn
 > 
TxByãNbª
)

2418 
ï
->
x„r_Àn
 -
TxByãNbª
;

2422 
ï
->
x„r_Àn
 = 0U;

2425 i‡(
ï
->
x„r_Àn
 == 0U)

2427 
	`PCD_SET_EP_DBUF0_CNT
(
hpcd
->
In°™˚
, 
ï
->
num
,Ép->
is_ö
, 0U);

2428 
	`PCD_SET_EP_DBUF1_CNT
(
hpcd
->
In°™˚
, 
ï
->
num
,Ép->
is_ö
, 0U);

2431 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

2432 
hpcd
->
	`D©aInSègeCÆlback
(hpcd, 
ï
->
num
);

2434 
	`HAL_PCD_D©aInSègeCÆlback
(
hpcd
, 
ï
->
num
);

2437 i‡((
wEPVÆ
 & 
USB_EP_DTOG_RX
) != 0U)

2439 
	`PCD_FªeU£rBuf„r
(
hpcd
->
In°™˚
, 
ï
->
num
, 1U);

2445 i‡((
wEPVÆ
 & 
USB_EP_DTOG_RX
) != 0U)

2447 
	`PCD_FªeU£rBuf„r
(
hpcd
->
In°™˚
, 
ï
->
num
, 1U);

2451 i‡(
ï
->
x„r_fûl_db
 == 1U)

2453 
ï
->
x„r_buff
 +
TxByãNbª
;

2454 
ï
->
x„r_cou¡
 +
TxByãNbª
;

2457 i‡(
ï
->
x„r_Àn_db
 >ï->
max∑ckë
)

2459 
Àn
 = 
ï
->
max∑ckë
;

2460 
ï
->
x„r_Àn_db
 -
Àn
;

2462 i‡(
ï
->
x„r_Àn_db
 == 0U)

2464 
Àn
 = 
TxByãNbª
;

2465 
ï
->
x„r_fûl_db
 = 0U;

2469 
ï
->
x„r_fûl_db
 = 0U;

2470 
Àn
 = 
ï
->
x„r_Àn_db
;

2471 
ï
->
x„r_Àn_db
 = 0U;

2476 
	`PCD_SET_EP_DBUF0_CNT
(
hpcd
->
In°™˚
, 
ï
->
num
,Ép->
is_ö
, 
Àn
);

2479 
	`USB_WrôePMA
(
hpcd
->
In°™˚
, 
ï
->
x„r_buff
,Ép->
pmØddr0
, (
uöt16_t
)
Àn
);

2486 
TxByãNbª
 = (
uöt16_t
)
	`PCD_GET_EP_DBUF1_CNT
(
hpcd
->
In°™˚
, 
ï
->
num
);

2488 i‡(
ï
->
x„r_Àn
 >
TxByãNbª
)

2490 
ï
->
x„r_Àn
 -
TxByãNbª
;

2494 
ï
->
x„r_Àn
 = 0U;

2498 i‡(
ï
->
x„r_Àn
 == 0U)

2500 
	`PCD_SET_EP_DBUF0_CNT
(
hpcd
->
In°™˚
, 
ï
->
num
,Ép->
is_ö
, 0U);

2501 
	`PCD_SET_EP_DBUF1_CNT
(
hpcd
->
In°™˚
, 
ï
->
num
,Ép->
is_ö
, 0U);

2504 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

2505 
hpcd
->
	`D©aInSègeCÆlback
(hpcd, 
ï
->
num
);

2507 
	`HAL_PCD_D©aInSègeCÆlback
(
hpcd
, 
ï
->
num
);

2511 i‡((
wEPVÆ
 & 
USB_EP_DTOG_RX
) == 0U)

2513 
	`PCD_FªeU£rBuf„r
(
hpcd
->
In°™˚
, 
ï
->
num
, 1U);

2519 i‡((
wEPVÆ
 & 
USB_EP_DTOG_RX
) == 0U)

2521 
	`PCD_FªeU£rBuf„r
(
hpcd
->
In°™˚
, 
ï
->
num
, 1U);

2525 i‡(
ï
->
x„r_fûl_db
 == 1U)

2527 
ï
->
x„r_buff
 +
TxByãNbª
;

2528 
ï
->
x„r_cou¡
 +
TxByãNbª
;

2531 i‡(
ï
->
x„r_Àn_db
 >ï->
max∑ckë
)

2533 
Àn
 = 
ï
->
max∑ckë
;

2534 
ï
->
x„r_Àn_db
 -
Àn
;

2536 i‡(
ï
->
x„r_Àn_db
 == 0U)

2538 
Àn
 = 
TxByãNbª
;

2539 
ï
->
x„r_fûl_db
 = 0U;

2543 
Àn
 = 
ï
->
x„r_Àn_db
;

2544 
ï
->
x„r_Àn_db
 = 0U;

2545 
ï
->
x„r_fûl_db
 = 0;

2549 
	`PCD_SET_EP_DBUF1_CNT
(
hpcd
->
In°™˚
, 
ï
->
num
,Ép->
is_ö
, 
Àn
);

2552 
	`USB_WrôePMA
(
hpcd
->
In°™˚
, 
ï
->
x„r_buff
,Ép->
pmØddr1
, (
uöt16_t
)
Àn
);

2558 
	`PCD_SET_EP_TX_STATUS
(
hpcd
->
In°™˚
, 
ï
->
num
, 
USB_EP_TX_VALID
);

2560  
HAL_OK
;

2561 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32F1xx_HAL_Driver\Src\stm32f1xx_hal_pcd_ex.c

25 
	~"°m32f1xx_hÆ.h
"

36 #ifde‡
HAL_PCD_MODULE_ENABLED


38 #i‡
deföed
 (
USB
Ë|| deföed (
USB_OTG_FS
)

63 #i‡
deföed
 (
USB_OTG_FS
)

71 
HAL_SètusTy≥Def
 
	$HAL_PCDEx_SëTxFiFo
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
fifo
, 
uöt16_t
 
size
)

73 
uöt8_t
 
i
;

74 
uöt32_t
 
Tx_Off£t
;

86 
Tx_Off£t
 = 
hpcd
->
In°™˚
->
GRXFSIZ
;

88 i‡(
fifo
 == 0U)

90 
hpcd
->
In°™˚
->
DIEPTXF0_HNPTXFSIZ
 = ((
uöt32_t
)
size
 << 16Ë| 
Tx_Off£t
;

94 
Tx_Off£t
 +(
hpcd
->
In°™˚
->
DIEPTXF0_HNPTXFSIZ
) >> 16;

95 
i
 = 0U; i < (
fifo
 - 1U); i++)

97 
Tx_Off£t
 +(
hpcd
->
In°™˚
->
DIEPTXF
[
i
] >> 16);

101 
hpcd
->
In°™˚
->
DIEPTXF
[
fifo
 - 1U] = ((
uöt32_t
)
size
 << 16Ë| 
Tx_Off£t
;

104  
HAL_OK
;

105 
	}
}

113 
HAL_SètusTy≥Def
 
	$HAL_PCDEx_SëRxFiFo
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt16_t
 
size
)

115 
hpcd
->
In°™˚
->
GRXFSIZ
 = 
size
;

117  
HAL_OK
;

118 
	}
}

120 #i‡
deföed
 (
USB
)

138 
HAL_SètusTy≥Def
 
	$HAL_PCDEx_PMAC⁄fig
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt16_t
 
ï_addr
,

139 
uöt16_t
 
ï_köd
, 
uöt32_t
 
pmØdªss
)

141 
PCD_EPTy≥Def
 *
ï
;

144 i‡((0x80U & 
ï_addr
) == 0x80U)

146 
ï
 = &
hpcd
->
IN_ï
[
ï_addr
 & 
EP_ADDR_MSK
];

150 
ï
 = &
hpcd
->
OUT_ï
[
ï_addr
];

154 i‡(
ï_köd
 =
PCD_SNG_BUF
)

157 
ï
->
doubÀbuf„r
 = 0U;

159 
ï
->
pmØdªss
 = (
uöt16_t
)pmaadress;

164 
ï
->
doubÀbuf„r
 = 1U;

166 
ï
->
pmØddr0
 = (
uöt16_t
)(
pmØdªss
 & 0xFFFFU);

167 
ï
->
pmØddr1
 = (
uöt16_t
)((
pmØdªss
 & 0xFFFF0000U) >> 16);

170  
HAL_OK
;

171 
	}
}

181 
__wók
 
	$HAL_PCDEx_SëC⁄√˘i⁄Sèã
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
°©e
)

184 
	`UNUSED
(
hpcd
);

185 
	`UNUSED
(
°©e
);

189 
	}
}

198 
__wók
 
	$HAL_PCDEx_LPM_CÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
PCD_LPM_MsgTy≥Def
 
msg
)

201 
	`UNUSED
(
hpcd
);

202 
	`UNUSED
(
msg
);

207 
	}
}

215 
__wók
 
	$HAL_PCDEx_BCD_CÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
PCD_BCD_MsgTy≥Def
 
msg
)

218 
	`UNUSED
(
hpcd
);

219 
	`UNUSED
(
msg
);

224 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32F1xx_HAL_Driver\Src\stm32f1xx_ll_usb.c

41 
	~"°m32f1xx_hÆ.h
"

47 #i‡
deföed
 (
HAL_PCD_MODULE_ENABLED
Ë|| deföed (
HAL_HCD_MODULE_ENABLED
)

48 #i‡
deföed
 (
USB
Ë|| deföed (
USB_OTG_FS
)

55 #i‡
deföed
 (
USB_OTG_FS
)

56 
HAL_SètusTy≥Def
 
USB_C‹eRe£t
(
USB_OTG_GlobÆTy≥Def
 *
USBx
);

82 
HAL_SètusTy≥Def
 
	$USB_C‹eInô
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_OTG_CfgTy≥Def
 
cfg
)

84 
HAL_SètusTy≥Def
 
ªt
;

88 
USBx
->
GUSBCFG
 |
USB_OTG_GUSBCFG_PHYSEL
;

91 
ªt
 = 
	`USB_C‹eRe£t
(
USBx
);

94 
USBx
->
GCCFG
 |
USB_OTG_GCCFG_PWRDWN
;

96  
ªt
;

97 
	}
}

106 
HAL_SètusTy≥Def
 
	$USB_SëTu∫¨oundTime
(
USB_OTG_GlobÆTy≥Def
 *
USBx
,

107 
uöt32_t
 
h˛k
, 
uöt8_t
 
•ìd
)

109 
uöt32_t
 
UsbTrd
;

115 i‡(
•ìd
 =
USBD_FS_SPEED
)

117 i‡((
h˛k
 >= 14200000U) && (hclk < 15000000U))

120 
UsbTrd
 = 0xFU;

122 i‡((
h˛k
 >= 15000000U) && (hclk < 16000000U))

125 
UsbTrd
 = 0xEU;

127 i‡((
h˛k
 >= 16000000U) && (hclk < 17200000U))

130 
UsbTrd
 = 0xDU;

132 i‡((
h˛k
 >= 17200000U) && (hclk < 18500000U))

135 
UsbTrd
 = 0xCU;

137 i‡((
h˛k
 >= 18500000U) && (hclk < 20000000U))

140 
UsbTrd
 = 0xBU;

142 i‡((
h˛k
 >= 20000000U) && (hclk < 21800000U))

145 
UsbTrd
 = 0xAU;

147 i‡((
h˛k
 >= 21800000U) && (hclk < 24000000U))

150 
UsbTrd
 = 0x9U;

152 i‡((
h˛k
 >= 24000000U) && (hclk < 27700000U))

155 
UsbTrd
 = 0x8U;

157 i‡((
h˛k
 >= 27700000U) && (hclk < 32000000U))

160 
UsbTrd
 = 0x7U;

165 
UsbTrd
 = 0x6U;

170 
UsbTrd
 = 
USBD_DEFAULT_TRDT_VALUE
;

173 
USBx
->
GUSBCFG
 &~
USB_OTG_GUSBCFG_TRDT
;

174 
USBx
->
GUSBCFG
 |(
uöt32_t
)((
UsbTrd
 << 10Ë& 
USB_OTG_GUSBCFG_TRDT
);

176  
HAL_OK
;

177 
	}
}

185 
HAL_SètusTy≥Def
 
	$USB_E«bÀGlobÆI¡
(
USB_OTG_GlobÆTy≥Def
 *
USBx
)

187 
USBx
->
GAHBCFG
 |
USB_OTG_GAHBCFG_GINT
;

188  
HAL_OK
;

189 
	}
}

197 
HAL_SètusTy≥Def
 
	$USB_DißbÀGlobÆI¡
(
USB_OTG_GlobÆTy≥Def
 *
USBx
)

199 
USBx
->
GAHBCFG
 &~
USB_OTG_GAHBCFG_GINT
;

200  
HAL_OK
;

201 
	}
}

212 
HAL_SètusTy≥Def
 
	$USB_SëCuºítMode
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_ModeTy≥Def
 
mode
)

214 
uöt32_t
 
ms
 = 0U;

216 
USBx
->
GUSBCFG
 &~(
USB_OTG_GUSBCFG_FHMOD
 | 
USB_OTG_GUSBCFG_FDMOD
);

218 i‡(
mode
 =
USB_HOST_MODE
)

220 
USBx
->
GUSBCFG
 |
USB_OTG_GUSBCFG_FHMOD
;

224 
	`HAL_Dñay
(1U);

225 
ms
++;

226 } (
	`USB_GëMode
(
USBx
Ë!(
uöt32_t
)
USB_HOST_MODE
Ë&& (
ms
 < 50U));

228 i‡(
mode
 =
USB_DEVICE_MODE
)

230 
USBx
->
GUSBCFG
 |
USB_OTG_GUSBCFG_FDMOD
;

234 
	`HAL_Dñay
(1U);

235 
ms
++;

236 } (
	`USB_GëMode
(
USBx
Ë!(
uöt32_t
)
USB_DEVICE_MODE
Ë&& (
ms
 < 50U));

240  
HAL_ERROR
;

243 i‡(
ms
 == 50U)

245  
HAL_ERROR
;

248  
HAL_OK
;

249 
	}
}

259 
HAL_SètusTy≥Def
 
	$USB_DevInô
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_OTG_CfgTy≥Def
 
cfg
)

261 
HAL_SètusTy≥Def
 
ªt
 = 
HAL_OK
;

262 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

263 
uöt32_t
 
i
;

265 
i
 = 0U; i < 15U; i++)

267 
USBx
->
DIEPTXF
[
i
] = 0U;

271 
USBx
->
GCCFG
 |
USB_OTG_GCCFG_VBUSBSEN
;

274 
USBx_PCGCCTL
 = 0U;

277 
USBx_DEVICE
->
DCFG
 |
DCFG_FRAME_INTERVAL_80
;

280 ()
	`USB_SëDevS≥ed
(
USBx
, 
USB_OTG_SPEED_FULL
);

283 i‡(
	`USB_FlushTxFifo
(
USBx
, 0x10UË!
HAL_OK
)

285 
ªt
 = 
HAL_ERROR
;

288 i‡(
	`USB_FlushRxFifo
(
USBx
Ë!
HAL_OK
)

290 
ªt
 = 
HAL_ERROR
;

294 
USBx_DEVICE
->
DIEPMSK
 = 0U;

295 
USBx_DEVICE
->
DOEPMSK
 = 0U;

296 
USBx_DEVICE
->
DAINTMSK
 = 0U;

298 
i
 = 0U; i < 
cfg
.
dev_ídpoöts
; i++)

300 i‡((
	`USBx_INEP
(
i
)->
DIEPCTL
 & 
USB_OTG_DIEPCTL_EPENA
) == USB_OTG_DIEPCTL_EPENA)

302 i‡(
i
 == 0U)

304 
	`USBx_INEP
(
i
)->
DIEPCTL
 = 
USB_OTG_DIEPCTL_SNAK
;

308 
	`USBx_INEP
(
i
)->
DIEPCTL
 = 
USB_OTG_DIEPCTL_EPDIS
 | 
USB_OTG_DIEPCTL_SNAK
;

313 
	`USBx_INEP
(
i
)->
DIEPCTL
 = 0U;

316 
	`USBx_INEP
(
i
)->
DIEPTSIZ
 = 0U;

317 
	`USBx_INEP
(
i
)->
DIEPINT
 = 0xFB7FU;

320 
i
 = 0U; i < 
cfg
.
dev_ídpoöts
; i++)

322 i‡((
	`USBx_OUTEP
(
i
)->
DOEPCTL
 & 
USB_OTG_DOEPCTL_EPENA
) == USB_OTG_DOEPCTL_EPENA)

324 i‡(
i
 == 0U)

326 
	`USBx_OUTEP
(
i
)->
DOEPCTL
 = 
USB_OTG_DOEPCTL_SNAK
;

330 
	`USBx_OUTEP
(
i
)->
DOEPCTL
 = 
USB_OTG_DOEPCTL_EPDIS
 | 
USB_OTG_DOEPCTL_SNAK
;

335 
	`USBx_OUTEP
(
i
)->
DOEPCTL
 = 0U;

338 
	`USBx_OUTEP
(
i
)->
DOEPTSIZ
 = 0U;

339 
	`USBx_OUTEP
(
i
)->
DOEPINT
 = 0xFB7FU;

342 
USBx_DEVICE
->
DIEPMSK
 &~(
USB_OTG_DIEPMSK_TXFURM
);

345 
USBx
->
GINTMSK
 = 0U;

348 
USBx
->
GINTSTS
 = 0xBFFFFFFFU;

351 
USBx
->
GINTMSK
 |
USB_OTG_GINTMSK_RXFLVLM
;

354 
USBx
->
GINTMSK
 |
USB_OTG_GINTMSK_USBSUSPM
 | 
USB_OTG_GINTMSK_USBRST
 |

355 
USB_OTG_GINTMSK_ENUMDNEM
 | 
USB_OTG_GINTMSK_IEPINT
 |

356 
USB_OTG_GINTMSK_OEPINT
 | 
USB_OTG_GINTMSK_IISOIXFRM
 |

357 
USB_OTG_GINTMSK_PXFRM_IISOOXFRM
 | 
USB_OTG_GINTMSK_WUIM
;

359 i‡(
cfg
.
Sof_íabÀ
 != 0U)

361 
USBx
->
GINTMSK
 |
USB_OTG_GINTMSK_SOFM
;

364 i‡(
cfg
.
vbus_£nsög_íabÀ
 == 1U)

366 
USBx
->
GINTMSK
 |(
USB_OTG_GINTMSK_SRQIM
 | 
USB_OTG_GINTMSK_OTGINT
);

369  
ªt
;

370 
	}
}

380 
HAL_SètusTy≥Def
 
	$USB_FlushTxFifo
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt32_t
 
num
)

382 
uöt32_t
 
cou¡
 = 0U;

384 
USBx
->
GRSTCTL
 = (
USB_OTG_GRSTCTL_TXFFLSH
 | (
num
 << 6));

388 i‡(++
cou¡
 > 200000U)

390  
HAL_TIMEOUT
;

392 } (
USBx
->
GRSTCTL
 & 
USB_OTG_GRSTCTL_TXFFLSH
) == USB_OTG_GRSTCTL_TXFFLSH);

394  
HAL_OK
;

395 
	}
}

402 
HAL_SètusTy≥Def
 
	$USB_FlushRxFifo
(
USB_OTG_GlobÆTy≥Def
 *
USBx
)

404 
uöt32_t
 
cou¡
 = 0;

406 
USBx
->
GRSTCTL
 = 
USB_OTG_GRSTCTL_RXFFLSH
;

410 i‡(++
cou¡
 > 200000U)

412  
HAL_TIMEOUT
;

414 } (
USBx
->
GRSTCTL
 & 
USB_OTG_GRSTCTL_RXFFLSH
) == USB_OTG_GRSTCTL_RXFFLSH);

416  
HAL_OK
;

417 
	}
}

428 
HAL_SètusTy≥Def
 
	$USB_SëDevS≥ed
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt8_t
 
•ìd
)

430 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

432 
USBx_DEVICE
->
DCFG
 |
•ìd
;

433  
HAL_OK
;

434 
	}
}

443 
uöt8_t
 
	$USB_GëDevS≥ed
(
USB_OTG_GlobÆTy≥Def
 *
USBx
)

445 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

446 
uöt8_t
 
•ìd
;

447 
uöt32_t
 
DevEnumS≥ed
 = 
USBx_DEVICE
->
DSTS
 & 
USB_OTG_DSTS_ENUMSPD
;

449 i‡((
DevEnumS≥ed
 =
DSTS_ENUMSPD_FS_PHY_30MHZ_OR_60MHZ
) ||

450 (
DevEnumS≥ed
 =
DSTS_ENUMSPD_FS_PHY_48MHZ
))

452 
•ìd
 = 
USBD_FS_SPEED
;

456 
•ìd
 = 0xFU;

459  
•ìd
;

460 
	}
}

468 
HAL_SètusTy≥Def
 
	$USB_A˘iv©eEndpoöt
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_OTG_EPTy≥Def
 *
ï
)

470 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

471 
uöt32_t
 
ïnum
 = (uöt32_t)
ï
->
num
;

473 i‡(
ï
->
is_ö
 == 1U)

475 
USBx_DEVICE
->
DAINTMSK
 |
USB_OTG_DAINTMSK_IEPM
 & (
uöt32_t
)(1UL << (
ï
->
num
 & 
EP_ADDR_MSK
));

477 i‡((
	`USBx_INEP
(
ïnum
)->
DIEPCTL
 & 
USB_OTG_DIEPCTL_USBAEP
) == 0U)

479 
	`USBx_INEP
(
ïnum
)->
DIEPCTL
 |(
ï
->
max∑ckë
 & 
USB_OTG_DIEPCTL_MPSIZ
) |

480 ((
uöt32_t
)
ï
->
ty≥
 << 18Ë| (
ïnum
 << 22) |

481 
USB_OTG_DIEPCTL_SD0PID_SEVNFRM
 |

482 
USB_OTG_DIEPCTL_USBAEP
;

487 
USBx_DEVICE
->
DAINTMSK
 |
USB_OTG_DAINTMSK_OEPM
 & ((
uöt32_t
)(1UL << (
ï
->
num
 & 
EP_ADDR_MSK
)) << 16);

489 i‡(((
	`USBx_OUTEP
(
ïnum
)->
DOEPCTL
Ë& 
USB_OTG_DOEPCTL_USBAEP
) == 0U)

491 
	`USBx_OUTEP
(
ïnum
)->
DOEPCTL
 |(
ï
->
max∑ckë
 & 
USB_OTG_DOEPCTL_MPSIZ
) |

492 ((
uöt32_t
)
ï
->
ty≥
 << 18) |

493 
USB_OTG_DIEPCTL_SD0PID_SEVNFRM
 |

494 
USB_OTG_DOEPCTL_USBAEP
;

497  
HAL_OK
;

498 
	}
}

506 
HAL_SètusTy≥Def
 
	$USB_A˘iv©eDediˇãdEndpoöt
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_OTG_EPTy≥Def
 *
ï
)

508 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

509 
uöt32_t
 
ïnum
 = (uöt32_t)
ï
->
num
;

512 i‡(
ï
->
is_ö
 == 1U)

514 i‡(((
	`USBx_INEP
(
ïnum
)->
DIEPCTL
Ë& 
USB_OTG_DIEPCTL_USBAEP
) == 0U)

516 
	`USBx_INEP
(
ïnum
)->
DIEPCTL
 |(
ï
->
max∑ckë
 & 
USB_OTG_DIEPCTL_MPSIZ
) |

517 ((
uöt32_t
)
ï
->
ty≥
 << 18Ë| (
ïnum
 << 22) |

518 
USB_OTG_DIEPCTL_SD0PID_SEVNFRM
 |

519 
USB_OTG_DIEPCTL_USBAEP
;

522 
USBx_DEVICE
->
DEACHMSK
 |
USB_OTG_DAINTMSK_IEPM
 & (
uöt32_t
)(1UL << (
ï
->
num
 & 
EP_ADDR_MSK
));

526 i‡(((
	`USBx_OUTEP
(
ïnum
)->
DOEPCTL
Ë& 
USB_OTG_DOEPCTL_USBAEP
) == 0U)

528 
	`USBx_OUTEP
(
ïnum
)->
DOEPCTL
 |(
ï
->
max∑ckë
 & 
USB_OTG_DOEPCTL_MPSIZ
) |

529 ((
uöt32_t
)
ï
->
ty≥
 << 18Ë| (
ïnum
 << 22) |

530 
USB_OTG_DOEPCTL_USBAEP
;

533 
USBx_DEVICE
->
DEACHMSK
 |
USB_OTG_DAINTMSK_OEPM
 & ((
uöt32_t
)(1UL << (
ï
->
num
 & 
EP_ADDR_MSK
)) << 16);

536  
HAL_OK
;

537 
	}
}

545 
HAL_SètusTy≥Def
 
	$USB_Dó˘iv©eEndpoöt
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_OTG_EPTy≥Def
 *
ï
)

547 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

548 
uöt32_t
 
ïnum
 = (uöt32_t)
ï
->
num
;

551 i‡(
ï
->
is_ö
 == 1U)

553 i‡((
	`USBx_INEP
(
ïnum
)->
DIEPCTL
 & 
USB_OTG_DIEPCTL_EPENA
) == USB_OTG_DIEPCTL_EPENA)

555 
	`USBx_INEP
(
ïnum
)->
DIEPCTL
 |
USB_OTG_DIEPCTL_SNAK
;

556 
	`USBx_INEP
(
ïnum
)->
DIEPCTL
 |
USB_OTG_DIEPCTL_EPDIS
;

559 
USBx_DEVICE
->
DEACHMSK
 &~(
USB_OTG_DAINTMSK_IEPM
 & (
uöt32_t
)(1UL << (
ï
->
num
 & 
EP_ADDR_MSK
)));

560 
USBx_DEVICE
->
DAINTMSK
 &~(
USB_OTG_DAINTMSK_IEPM
 & (
uöt32_t
)(1UL << (
ï
->
num
 & 
EP_ADDR_MSK
)));

561 
	`USBx_INEP
(
ïnum
)->
DIEPCTL
 &~(
USB_OTG_DIEPCTL_USBAEP
 |

562 
USB_OTG_DIEPCTL_MPSIZ
 |

563 
USB_OTG_DIEPCTL_TXFNUM
 |

564 
USB_OTG_DIEPCTL_SD0PID_SEVNFRM
 |

565 
USB_OTG_DIEPCTL_EPTYP
);

569 i‡((
	`USBx_OUTEP
(
ïnum
)->
DOEPCTL
 & 
USB_OTG_DOEPCTL_EPENA
) == USB_OTG_DOEPCTL_EPENA)

571 
	`USBx_OUTEP
(
ïnum
)->
DOEPCTL
 |
USB_OTG_DOEPCTL_SNAK
;

572 
	`USBx_OUTEP
(
ïnum
)->
DOEPCTL
 |
USB_OTG_DOEPCTL_EPDIS
;

575 
USBx_DEVICE
->
DEACHMSK
 &~(
USB_OTG_DAINTMSK_OEPM
 & ((
uöt32_t
)(1UL << (
ï
->
num
 & 
EP_ADDR_MSK
)) << 16));

576 
USBx_DEVICE
->
DAINTMSK
 &~(
USB_OTG_DAINTMSK_OEPM
 & ((
uöt32_t
)(1UL << (
ï
->
num
 & 
EP_ADDR_MSK
)) << 16));

577 
	`USBx_OUTEP
(
ïnum
)->
DOEPCTL
 &~(
USB_OTG_DOEPCTL_USBAEP
 |

578 
USB_OTG_DOEPCTL_MPSIZ
 |

579 
USB_OTG_DOEPCTL_SD0PID_SEVNFRM
 |

580 
USB_OTG_DOEPCTL_EPTYP
);

583  
HAL_OK
;

584 
	}
}

592 
HAL_SètusTy≥Def
 
	$USB_Dó˘iv©eDediˇãdEndpoöt
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_OTG_EPTy≥Def
 *
ï
)

594 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

595 
uöt32_t
 
ïnum
 = (uöt32_t)
ï
->
num
;

598 i‡(
ï
->
is_ö
 == 1U)

600 i‡((
	`USBx_INEP
(
ïnum
)->
DIEPCTL
 & 
USB_OTG_DIEPCTL_EPENA
) == USB_OTG_DIEPCTL_EPENA)

602 
	`USBx_INEP
(
ïnum
)->
DIEPCTL
 |
USB_OTG_DIEPCTL_SNAK
;

603 
	`USBx_INEP
(
ïnum
)->
DIEPCTL
 |
USB_OTG_DIEPCTL_EPDIS
;

606 
	`USBx_INEP
(
ïnum
)->
DIEPCTL
 &~ 
USB_OTG_DIEPCTL_USBAEP
;

607 
USBx_DEVICE
->
DAINTMSK
 &~(
USB_OTG_DAINTMSK_IEPM
 & (
uöt32_t
)(1UL << (
ï
->
num
 & 
EP_ADDR_MSK
)));

611 i‡((
	`USBx_OUTEP
(
ïnum
)->
DOEPCTL
 & 
USB_OTG_DOEPCTL_EPENA
) == USB_OTG_DOEPCTL_EPENA)

613 
	`USBx_OUTEP
(
ïnum
)->
DOEPCTL
 |
USB_OTG_DOEPCTL_SNAK
;

614 
	`USBx_OUTEP
(
ïnum
)->
DOEPCTL
 |
USB_OTG_DOEPCTL_EPDIS
;

617 
	`USBx_OUTEP
(
ïnum
)->
DOEPCTL
 &~
USB_OTG_DOEPCTL_USBAEP
;

618 
USBx_DEVICE
->
DAINTMSK
 &~(
USB_OTG_DAINTMSK_OEPM
 & ((
uöt32_t
)(1UL << (
ï
->
num
 & 
EP_ADDR_MSK
)) << 16));

621  
HAL_OK
;

622 
	}
}

630 
HAL_SètusTy≥Def
 
	$USB_EPSèπX„r
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_OTG_EPTy≥Def
 *
ï
)

632 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

633 
uöt32_t
 
ïnum
 = (uöt32_t)
ï
->
num
;

634 
uöt16_t
 
pkt˙t
;

637 i‡(
ï
->
is_ö
 == 1U)

640 i‡(
ï
->
x„r_Àn
 == 0U)

642 
	`USBx_INEP
(
ïnum
)->
DIEPTSIZ
 &~(
USB_OTG_DIEPTSIZ_PKTCNT
);

643 
	`USBx_INEP
(
ïnum
)->
DIEPTSIZ
 |(
USB_OTG_DIEPTSIZ_PKTCNT
 & (1U << 19));

644 
	`USBx_INEP
(
ïnum
)->
DIEPTSIZ
 &~(
USB_OTG_DIEPTSIZ_XFRSIZ
);

653 
	`USBx_INEP
(
ïnum
)->
DIEPTSIZ
 &~(
USB_OTG_DIEPTSIZ_XFRSIZ
);

654 
	`USBx_INEP
(
ïnum
)->
DIEPTSIZ
 &~(
USB_OTG_DIEPTSIZ_PKTCNT
);

655 
	`USBx_INEP
(
ïnum
)->
DIEPTSIZ
 |(
USB_OTG_DIEPTSIZ_PKTCNT
 &

656 (((
ï
->
x„r_Àn
 +Ép->
max∑ckë
 - 1U) /Ép->maxpacket) << 19));

658 
	`USBx_INEP
(
ïnum
)->
DIEPTSIZ
 |(
USB_OTG_DIEPTSIZ_XFRSIZ
 & 
ï
->
x„r_Àn
);

660 i‡(
ï
->
ty≥
 =
EP_TYPE_ISOC
)

662 
	`USBx_INEP
(
ïnum
)->
DIEPTSIZ
 &~(
USB_OTG_DIEPTSIZ_MULCNT
);

663 
	`USBx_INEP
(
ïnum
)->
DIEPTSIZ
 |(
USB_OTG_DIEPTSIZ_MULCNT
 & (1U << 29));

667 
	`USBx_INEP
(
ïnum
)->
DIEPCTL
 |(
USB_OTG_DIEPCTL_CNAK
 | 
USB_OTG_DIEPCTL_EPENA
);

669 i‡(
ï
->
ty≥
 !
EP_TYPE_ISOC
)

672 i‡(
ï
->
x„r_Àn
 > 0U)

674 
USBx_DEVICE
->
DIEPEMPMSK
 |1UL << (
ï
->
num
 & 
EP_ADDR_MSK
);

679 i‡((
USBx_DEVICE
->
DSTS
 & (1U << 8)) == 0U)

681 
	`USBx_INEP
(
ïnum
)->
DIEPCTL
 |
USB_OTG_DIEPCTL_SODDFRM
;

685 
	`USBx_INEP
(
ïnum
)->
DIEPCTL
 |
USB_OTG_DIEPCTL_SD0PID_SEVNFRM
;

688 ()
	`USB_WrôePackë
(
USBx
, 
ï
->
x„r_buff
,Ép->
num
, (
uöt16_t
Îp->
x„r_Àn
);

697 
	`USBx_OUTEP
(
ïnum
)->
DOEPTSIZ
 &~(
USB_OTG_DOEPTSIZ_XFRSIZ
);

698 
	`USBx_OUTEP
(
ïnum
)->
DOEPTSIZ
 &~(
USB_OTG_DOEPTSIZ_PKTCNT
);

700 i‡(
ï
->
x„r_Àn
 == 0U)

702 
	`USBx_OUTEP
(
ïnum
)->
DOEPTSIZ
 |(
USB_OTG_DOEPTSIZ_XFRSIZ
 & 
ï
->
max∑ckë
);

703 
	`USBx_OUTEP
(
ïnum
)->
DOEPTSIZ
 |(
USB_OTG_DOEPTSIZ_PKTCNT
 & (1U << 19));

707 
pkt˙t
 = (
uöt16_t
)((
ï
->
x„r_Àn
 +Ép->
max∑ckë
 - 1U) /Ép->maxpacket);

708 
	`USBx_OUTEP
(
ïnum
)->
DOEPTSIZ
 |
USB_OTG_DOEPTSIZ_PKTCNT
 & ((
uöt32_t
)
pkt˙t
 << 19);

709 
	`USBx_OUTEP
(
ïnum
)->
DOEPTSIZ
 |
USB_OTG_DOEPTSIZ_XFRSIZ
 & (
ï
->
max∑ckë
 * 
pkt˙t
);

712 i‡(
ï
->
ty≥
 =
EP_TYPE_ISOC
)

714 i‡((
USBx_DEVICE
->
DSTS
 & (1U << 8)) == 0U)

716 
	`USBx_OUTEP
(
ïnum
)->
DOEPCTL
 |
USB_OTG_DOEPCTL_SODDFRM
;

720 
	`USBx_OUTEP
(
ïnum
)->
DOEPCTL
 |
USB_OTG_DOEPCTL_SD0PID_SEVNFRM
;

724 
	`USBx_OUTEP
(
ïnum
)->
DOEPCTL
 |(
USB_OTG_DOEPCTL_CNAK
 | 
USB_OTG_DOEPCTL_EPENA
);

727  
HAL_OK
;

728 
	}
}

736 
HAL_SètusTy≥Def
 
	$USB_EP0SèπX„r
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_OTG_EPTy≥Def
 *
ï
)

738 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

739 
uöt32_t
 
ïnum
 = (uöt32_t)
ï
->
num
;

742 i‡(
ï
->
is_ö
 == 1U)

745 i‡(
ï
->
x„r_Àn
 == 0U)

747 
	`USBx_INEP
(
ïnum
)->
DIEPTSIZ
 &~(
USB_OTG_DIEPTSIZ_PKTCNT
);

748 
	`USBx_INEP
(
ïnum
)->
DIEPTSIZ
 |(
USB_OTG_DIEPTSIZ_PKTCNT
 & (1U << 19));

749 
	`USBx_INEP
(
ïnum
)->
DIEPTSIZ
 &~(
USB_OTG_DIEPTSIZ_XFRSIZ
);

758 
	`USBx_INEP
(
ïnum
)->
DIEPTSIZ
 &~(
USB_OTG_DIEPTSIZ_XFRSIZ
);

759 
	`USBx_INEP
(
ïnum
)->
DIEPTSIZ
 &~(
USB_OTG_DIEPTSIZ_PKTCNT
);

761 i‡(
ï
->
x„r_Àn
 >Ép->
max∑ckë
)

763 
ï
->
x„r_Àn
 =Ép->
max∑ckë
;

765 
	`USBx_INEP
(
ïnum
)->
DIEPTSIZ
 |(
USB_OTG_DIEPTSIZ_PKTCNT
 & (1U << 19));

766 
	`USBx_INEP
(
ïnum
)->
DIEPTSIZ
 |(
USB_OTG_DIEPTSIZ_XFRSIZ
 & 
ï
->
x„r_Àn
);

770 
	`USBx_INEP
(
ïnum
)->
DIEPCTL
 |(
USB_OTG_DIEPCTL_CNAK
 | 
USB_OTG_DIEPCTL_EPENA
);

773 i‡(
ï
->
x„r_Àn
 > 0U)

775 
USBx_DEVICE
->
DIEPEMPMSK
 |1UL << (
ï
->
num
 & 
EP_ADDR_MSK
);

784 
	`USBx_OUTEP
(
ïnum
)->
DOEPTSIZ
 &~(
USB_OTG_DOEPTSIZ_XFRSIZ
);

785 
	`USBx_OUTEP
(
ïnum
)->
DOEPTSIZ
 &~(
USB_OTG_DOEPTSIZ_PKTCNT
);

787 i‡(
ï
->
x„r_Àn
 > 0U)

789 
ï
->
x„r_Àn
 =Ép->
max∑ckë
;

792 
	`USBx_OUTEP
(
ïnum
)->
DOEPTSIZ
 |(
USB_OTG_DOEPTSIZ_PKTCNT
 & (1U << 19));

793 
	`USBx_OUTEP
(
ïnum
)->
DOEPTSIZ
 |(
USB_OTG_DOEPTSIZ_XFRSIZ
 & (
ï
->
max∑ckë
));

796 
	`USBx_OUTEP
(
ïnum
)->
DOEPCTL
 |(
USB_OTG_DOEPCTL_CNAK
 | 
USB_OTG_DOEPCTL_EPENA
);

799  
HAL_OK
;

800 
	}
}

811 
HAL_SètusTy≥Def
 
	$USB_WrôePackë
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt8_t
 *
§c
,

812 
uöt8_t
 
ch_ï_num
, 
uöt16_t
 
Àn
)

814 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

815 
uöt8_t
 *
pSrc
 = 
§c
;

816 
uöt32_t
 
cou¡32b
;

817 
uöt32_t
 
i
;

819 
cou¡32b
 = ((
uöt32_t
)
Àn
 + 3U) / 4U;

820 
i
 = 0U; i < 
cou¡32b
; i++)

822 
	`USBx_DFIFO
((
uöt32_t
)
ch_ï_num
Ë
	`__UNALIGNED_UINT32_READ
(
pSrc
);

823 
pSrc
++;

824 
pSrc
++;

825 
pSrc
++;

826 
pSrc
++;

829  
HAL_OK
;

830 
	}
}

839 *
	$USB_RódPackë
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt8_t
 *
de°
, 
uöt16_t
 
Àn
)

841 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

842 
uöt8_t
 *
pDe°
 = 
de°
;

843 
uöt32_t
 
pD©a
;

844 
uöt32_t
 
i
;

845 
uöt32_t
 
cou¡32b
 = (uöt32_t)
Àn
 >> 2U;

846 
uöt16_t
 
ªmaöög_byãs
 = 
Àn
 % 4U;

848 
i
 = 0U; i < 
cou¡32b
; i++)

850 
	`__UNALIGNED_UINT32_WRITE
(
pDe°
, 
	`USBx_DFIFO
(0U));

851 
pDe°
++;

852 
pDe°
++;

853 
pDe°
++;

854 
pDe°
++;

858 i‡(
ªmaöög_byãs
 != 0U)

860 
i
 = 0U;

861 
	`__UNALIGNED_UINT32_WRITE
(&
pD©a
, 
	`USBx_DFIFO
(0U));

865 *(
uöt8_t
 *)
pDe°
 = (uöt8_t)(
pD©a
 >> (8U * (uöt8_t)(
i
)));

866 
i
++;

867 
pDe°
++;

868 
ªmaöög_byãs
--;

869 } 
ªmaöög_byãs
 != 0U);

872  ((*)
pDe°
);

873 
	}
}

881 
HAL_SètusTy≥Def
 
	$USB_EPSëSèŒ
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_OTG_EPTy≥Def
 *
ï
)

883 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

884 
uöt32_t
 
ïnum
 = (uöt32_t)
ï
->
num
;

886 i‡(
ï
->
is_ö
 == 1U)

888 i‡(((
	`USBx_INEP
(
ïnum
)->
DIEPCTL
 & 
USB_OTG_DIEPCTL_EPENA
) == 0U) && (epnum != 0U))

890 
	`USBx_INEP
(
ïnum
)->
DIEPCTL
 &~(
USB_OTG_DIEPCTL_EPDIS
);

892 
	`USBx_INEP
(
ïnum
)->
DIEPCTL
 |
USB_OTG_DIEPCTL_STALL
;

896 i‡(((
	`USBx_OUTEP
(
ïnum
)->
DOEPCTL
 & 
USB_OTG_DOEPCTL_EPENA
) == 0U) && (epnum != 0U))

898 
	`USBx_OUTEP
(
ïnum
)->
DOEPCTL
 &~(
USB_OTG_DOEPCTL_EPDIS
);

900 
	`USBx_OUTEP
(
ïnum
)->
DOEPCTL
 |
USB_OTG_DOEPCTL_STALL
;

903  
HAL_OK
;

904 
	}
}

912 
HAL_SètusTy≥Def
 
	$USB_EPCÀ¨SèŒ
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_OTG_EPTy≥Def
 *
ï
)

914 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

915 
uöt32_t
 
ïnum
 = (uöt32_t)
ï
->
num
;

917 i‡(
ï
->
is_ö
 == 1U)

919 
	`USBx_INEP
(
ïnum
)->
DIEPCTL
 &~
USB_OTG_DIEPCTL_STALL
;

920 i‡((
ï
->
ty≥
 =
EP_TYPE_INTR
Ë|| (ï->ty≥ =
EP_TYPE_BULK
))

922 
	`USBx_INEP
(
ïnum
)->
DIEPCTL
 |
USB_OTG_DIEPCTL_SD0PID_SEVNFRM
;

927 
	`USBx_OUTEP
(
ïnum
)->
DOEPCTL
 &~
USB_OTG_DOEPCTL_STALL
;

928 i‡((
ï
->
ty≥
 =
EP_TYPE_INTR
Ë|| (ï->ty≥ =
EP_TYPE_BULK
))

930 
	`USBx_OUTEP
(
ïnum
)->
DOEPCTL
 |
USB_OTG_DOEPCTL_SD0PID_SEVNFRM
;

933  
HAL_OK
;

934 
	}
}

941 
HAL_SètusTy≥Def
 
	$USB_St›Devi˚
(
USB_OTG_GlobÆTy≥Def
 *
USBx
)

943 
HAL_SètusTy≥Def
 
ªt
;

944 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

945 
uöt32_t
 
i
;

948 
i
 = 0U; i < 15U; i++)

950 
	`USBx_INEP
(
i
)->
DIEPINT
 = 0xFB7FU;

951 
	`USBx_OUTEP
(
i
)->
DOEPINT
 = 0xFB7FU;

955 
USBx_DEVICE
->
DIEPMSK
 = 0U;

956 
USBx_DEVICE
->
DOEPMSK
 = 0U;

957 
USBx_DEVICE
->
DAINTMSK
 = 0U;

960 
ªt
 = 
	`USB_FlushRxFifo
(
USBx
);

961 i‡(
ªt
 !
HAL_OK
)

963  
ªt
;

966 
ªt
 = 
	`USB_FlushTxFifo
(
USBx
, 0x10U);

967 i‡(
ªt
 !
HAL_OK
)

969  
ªt
;

972  
ªt
;

973 
	}
}

982 
HAL_SètusTy≥Def
 
	$USB_SëDevAddªss
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt8_t
 
addªss
)

984 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

986 
USBx_DEVICE
->
DCFG
 &~(
USB_OTG_DCFG_DAD
);

987 
USBx_DEVICE
->
DCFG
 |((
uöt32_t
)
addªss
 << 4Ë& 
USB_OTG_DCFG_DAD
;

989  
HAL_OK
;

990 
	}
}

997 
HAL_SètusTy≥Def
 
	$USB_DevC⁄√˘
(
USB_OTG_GlobÆTy≥Def
 *
USBx
)

999 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

1002 
USBx_PCGCCTL
 &~(
USB_OTG_PCGCCTL_STOPCLK
 | 
USB_OTG_PCGCCTL_GATECLK
);

1004 
USBx_DEVICE
->
DCTL
 &~
USB_OTG_DCTL_SDIS
;

1006  
HAL_OK
;

1007 
	}
}

1014 
HAL_SètusTy≥Def
 
	$USB_DevDisc⁄√˘
(
USB_OTG_GlobÆTy≥Def
 *
USBx
)

1016 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

1019 
USBx_PCGCCTL
 &~(
USB_OTG_PCGCCTL_STOPCLK
 | 
USB_OTG_PCGCCTL_GATECLK
);

1021 
USBx_DEVICE
->
DCTL
 |
USB_OTG_DCTL_SDIS
;

1023  
HAL_OK
;

1024 
	}
}

1031 
uöt32_t
 
	$USB_RódI¡îru±s
(
USB_OTG_GlobÆTy≥Def
 *
USBx
)

1033 
uöt32_t
 
tm¥eg
;

1035 
tm¥eg
 = 
USBx
->
GINTSTS
;

1036 
tm¥eg
 &
USBx
->
GINTMSK
;

1038  
tm¥eg
;

1039 
	}
}

1046 
uöt32_t
 
	$USB_RódDevAŒOutEpI¡îru±
(
USB_OTG_GlobÆTy≥Def
 *
USBx
)

1048 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

1049 
uöt32_t
 
tm¥eg
;

1051 
tm¥eg
 = 
USBx_DEVICE
->
DAINT
;

1052 
tm¥eg
 &
USBx_DEVICE
->
DAINTMSK
;

1054  ((
tm¥eg
 & 0xffff0000U) >> 16);

1055 
	}
}

1062 
uöt32_t
 
	$USB_RódDevAŒInEpI¡îru±
(
USB_OTG_GlobÆTy≥Def
 *
USBx
)

1064 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

1065 
uöt32_t
 
tm¥eg
;

1067 
tm¥eg
 = 
USBx_DEVICE
->
DAINT
;

1068 
tm¥eg
 &
USBx_DEVICE
->
DAINTMSK
;

1070  ((
tm¥eg
 & 0xFFFFU));

1071 
	}
}

1080 
uöt32_t
 
	$USB_RódDevOutEPI¡îru±
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt8_t
 
ïnum
)

1082 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

1083 
uöt32_t
 
tm¥eg
;

1085 
tm¥eg
 = 
	`USBx_OUTEP
((
uöt32_t
)
ïnum
)->
DOEPINT
;

1086 
tm¥eg
 &
USBx_DEVICE
->
DOEPMSK
;

1088  
tm¥eg
;

1089 
	}
}

1098 
uöt32_t
 
	$USB_RódDevInEPI¡îru±
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt8_t
 
ïnum
)

1100 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

1101 
uöt32_t
 
tm¥eg
;

1102 
uöt32_t
 
msk
;

1103 
uöt32_t
 
emp
;

1105 
msk
 = 
USBx_DEVICE
->
DIEPMSK
;

1106 
emp
 = 
USBx_DEVICE
->
DIEPEMPMSK
;

1107 
msk
 |((
emp
 >> (
ïnum
 & 
EP_ADDR_MSK
)) & 0x1U) << 7;

1108 
tm¥eg
 = 
	`USBx_INEP
((
uöt32_t
)
ïnum
)->
DIEPINT
 & 
msk
;

1110  
tm¥eg
;

1111 
	}
}

1119 
	$USB_CÀ¨I¡îru±s
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt32_t
 
öãºu±
)

1121 
USBx
->
GINTSTS
 |
öãºu±
;

1122 
	}
}

1132 
uöt32_t
 
	$USB_GëMode
(
USB_OTG_GlobÆTy≥Def
 *
USBx
)

1134  ((
USBx
->
GINTSTS
) & 0x1U);

1135 
	}
}

1142 
HAL_SètusTy≥Def
 
	$USB_A˘iv©eSëup
(
USB_OTG_GlobÆTy≥Def
 *
USBx
)

1144 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

1147 
	`USBx_INEP
(0U)->
DIEPCTL
 &~
USB_OTG_DIEPCTL_MPSIZ
;

1149 
USBx_DEVICE
->
DCTL
 |
USB_OTG_DCTL_CGINAK
;

1151  
HAL_OK
;

1152 
	}
}

1160 
HAL_SètusTy≥Def
 
	$USB_EP0_OutSèπ
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt8_t
 *
p£tup
)

1162 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

1163 
uöt32_t
 
gSNPSiD
 = *(
__IO
 uöt32_à*)(&
USBx
->
CID
 + 0x1U);

1164 
	`UNUSED
(
p£tup
);

1166 i‡(
gSNPSiD
 > 
USB_OTG_CORE_ID_300A
)

1168 i‡((
	`USBx_OUTEP
(0U)->
DOEPCTL
 & 
USB_OTG_DOEPCTL_EPENA
) == USB_OTG_DOEPCTL_EPENA)

1170  
HAL_OK
;

1174 
	`USBx_OUTEP
(0U)->
DOEPTSIZ
 = 0U;

1175 
	`USBx_OUTEP
(0U)->
DOEPTSIZ
 |(
USB_OTG_DOEPTSIZ_PKTCNT
 & (1U << 19));

1176 
	`USBx_OUTEP
(0U)->
DOEPTSIZ
 |= (3U * 8U);

1177 
	`USBx_OUTEP
(0U)->
DOEPTSIZ
 |
USB_OTG_DOEPTSIZ_STUPCNT
;

1179  
HAL_OK
;

1180 
	}
}

1187 
HAL_SètusTy≥Def
 
	$USB_C‹eRe£t
(
USB_OTG_GlobÆTy≥Def
 *
USBx
)

1189 
uöt32_t
 
cou¡
 = 0U;

1194 i‡(++
cou¡
 > 200000U)

1196  
HAL_TIMEOUT
;

1198 } (
USBx
->
GRSTCTL
 & 
USB_OTG_GRSTCTL_AHBIDL
) == 0U);

1201 
cou¡
 = 0U;

1202 
USBx
->
GRSTCTL
 |
USB_OTG_GRSTCTL_CSRST
;

1206 i‡(++
cou¡
 > 200000U)

1208  
HAL_TIMEOUT
;

1210 } (
USBx
->
GRSTCTL
 & 
USB_OTG_GRSTCTL_CSRST
) == USB_OTG_GRSTCTL_CSRST);

1212  
HAL_OK
;

1213 
	}
}

1223 
HAL_SètusTy≥Def
 
	$USB_Ho°Inô
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_OTG_CfgTy≥Def
 
cfg
)

1225 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

1226 
uöt32_t
 
i
;

1229 
USBx_PCGCCTL
 = 0U;

1232 
USBx
->
GCCFG
 &~(
USB_OTG_GCCFG_VBUSASEN
);

1233 
USBx
->
GCCFG
 &~(
USB_OTG_GCCFG_VBUSBSEN
);

1235 
USBx_HOST
->
HCFG
 &~(
USB_OTG_HCFG_FSLSS
);

1238 ()
	`USB_FlushTxFifo
(
USBx
, 0x10U);

1239 ()
	`USB_FlushRxFifo
(
USBx
);

1242 
i
 = 0U; i < 
cfg
.
Ho°_ch™√ls
; i++)

1244 
	`USBx_HC
(
i
)->
HCINT
 = 0xFFFFFFFFU;

1245 
	`USBx_HC
(
i
)->
HCINTMSK
 = 0U;

1249 
USBx
->
GINTMSK
 = 0U;

1252 
USBx
->
GINTSTS
 = 0xFFFFFFFFU;

1255 
USBx
->
GRXFSIZ
 = 0x80U;

1256 
USBx
->
DIEPTXF0_HNPTXFSIZ
 = (
uöt32_t
)(((0x60U << 16Ë& 
USB_OTG_NPTXFD
) | 0x80U);

1257 
USBx
->
HPTXFSIZ
 = (
uöt32_t
)(((0x40U << 16)& 
USB_OTG_HPTXFSIZ_PTXFD
) | 0xE0U);

1259 
USBx
->
GINTMSK
 |
USB_OTG_GINTMSK_RXFLVLM
;

1262 
USBx
->
GINTMSK
 |(
USB_OTG_GINTMSK_PRTIM
 | 
USB_OTG_GINTMSK_HCIM
 | \

1263 
USB_OTG_GINTMSK_SOFM
 | 
USB_OTG_GINTSTS_DISCINT
 | \

1264 
USB_OTG_GINTMSK_PXFRM_IISOOXFRM
 | 
USB_OTG_GINTMSK_WUIM
);

1266  
HAL_OK
;

1267 
	}
}

1279 
HAL_SètusTy≥Def
 
	$USB_InôFSLSPClkSñ
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt8_t
 
‰eq
)

1281 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

1283 
USBx_HOST
->
HCFG
 &~(
USB_OTG_HCFG_FSLSPCS
);

1284 
USBx_HOST
->
HCFG
 |(
uöt32_t
)
‰eq
 & 
USB_OTG_HCFG_FSLSPCS
;

1286 i‡(
‰eq
 =
HCFG_48_MHZ
)

1288 
USBx_HOST
->
HFIR
 = 48000U;

1290 i‡(
‰eq
 =
HCFG_6_MHZ
)

1292 
USBx_HOST
->
HFIR
 = 6000U;

1299  
HAL_OK
;

1300 
	}
}

1309 
HAL_SètusTy≥Def
 
	$USB_Re£tP‹t
(
USB_OTG_GlobÆTy≥Def
 *
USBx
)

1311 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

1313 
__IO
 
uöt32_t
 
h¥t0
 = 0U;

1315 
h¥t0
 = 
USBx_HPRT0
;

1317 
h¥t0
 &~(
USB_OTG_HPRT_PENA
 | 
USB_OTG_HPRT_PCDET
 |

1318 
USB_OTG_HPRT_PENCHNG
 | 
USB_OTG_HPRT_POCCHNG
);

1320 
USBx_HPRT0
 = (
USB_OTG_HPRT_PRST
 | 
h¥t0
);

1321 
	`HAL_Dñay
(100U);

1322 
USBx_HPRT0
 = ((~
USB_OTG_HPRT_PRST
Ë& 
h¥t0
);

1323 
	`HAL_Dñay
(10U);

1325  
HAL_OK
;

1326 
	}
}

1336 
HAL_SètusTy≥Def
 
	$USB_DriveVbus
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt8_t
 
°©e
)

1338 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

1339 
__IO
 
uöt32_t
 
h¥t0
 = 0U;

1341 
h¥t0
 = 
USBx_HPRT0
;

1343 
h¥t0
 &~(
USB_OTG_HPRT_PENA
 | 
USB_OTG_HPRT_PCDET
 |

1344 
USB_OTG_HPRT_PENCHNG
 | 
USB_OTG_HPRT_POCCHNG
);

1346 i‡(((
h¥t0
 & 
USB_OTG_HPRT_PPWR
Ë=0UË&& (
°©e
 == 1U))

1348 
USBx_HPRT0
 = (
USB_OTG_HPRT_PPWR
 | 
h¥t0
);

1350 i‡(((
h¥t0
 & 
USB_OTG_HPRT_PPWR
Ë=USB_OTG_HPRT_PPWRË&& (
°©e
 == 0U))

1352 
USBx_HPRT0
 = ((~
USB_OTG_HPRT_PPWR
Ë& 
h¥t0
);

1354  
HAL_OK
;

1355 
	}
}

1365 
uöt32_t
 
	$USB_GëHo°S≥ed
(
USB_OTG_GlobÆTy≥Def
 *
USBx
)

1367 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

1368 
__IO
 
uöt32_t
 
h¥t0
 = 0U;

1370 
h¥t0
 = 
USBx_HPRT0
;

1371  ((
h¥t0
 & 
USB_OTG_HPRT_PSPD
) >> 17);

1372 
	}
}

1379 
uöt32_t
 
	$USB_GëCuºítFøme
(
USB_OTG_GlobÆTy≥Def
 *
USBx
)

1381 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

1383  (
USBx_HOST
->
HFNUM
 & 
USB_OTG_HFNUM_FRNUM
);

1384 
	}
}

1409 
HAL_SètusTy≥Def
 
	$USB_HC_Inô
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt8_t
 
ch_num
,

1410 
uöt8_t
 
ïnum
, uöt8_à
dev_addªss
, uöt8_à
•ìd
,

1411 
uöt8_t
 
ï_ty≥
, 
uöt16_t
 
mps
)

1413 
HAL_SètusTy≥Def
 
ªt
 = 
HAL_OK
;

1414 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

1415 
uöt32_t
 
HCch¨EpDú
;

1416 
uöt32_t
 
HCch¨LowS≥ed
;

1417 
uöt32_t
 
Ho°C‹eS≥ed
;

1420 
	`USBx_HC
((
uöt32_t
)
ch_num
)->
HCINT
 = 0xFFFFFFFFU;

1423 
ï_ty≥
)

1425 
EP_TYPE_CTRL
:

1426 
EP_TYPE_BULK
:

1427 
	`USBx_HC
((
uöt32_t
)
ch_num
)->
HCINTMSK
 = 
USB_OTG_HCINTMSK_XFRCM
 |

1428 
USB_OTG_HCINTMSK_STALLM
 |

1429 
USB_OTG_HCINTMSK_TXERRM
 |

1430 
USB_OTG_HCINTMSK_DTERRM
 |

1431 
USB_OTG_HCINTMSK_AHBERR
 |

1432 
USB_OTG_HCINTMSK_NAKM
;

1434 i‡((
ïnum
 & 0x80U) == 0x80U)

1436 
	`USBx_HC
((
uöt32_t
)
ch_num
)->
HCINTMSK
 |
USB_OTG_HCINTMSK_BBERRM
;

1440 
EP_TYPE_INTR
:

1441 
	`USBx_HC
((
uöt32_t
)
ch_num
)->
HCINTMSK
 = 
USB_OTG_HCINTMSK_XFRCM
 |

1442 
USB_OTG_HCINTMSK_STALLM
 |

1443 
USB_OTG_HCINTMSK_TXERRM
 |

1444 
USB_OTG_HCINTMSK_DTERRM
 |

1445 
USB_OTG_HCINTMSK_NAKM
 |

1446 
USB_OTG_HCINTMSK_AHBERR
 |

1447 
USB_OTG_HCINTMSK_FRMORM
;

1449 i‡((
ïnum
 & 0x80U) == 0x80U)

1451 
	`USBx_HC
((
uöt32_t
)
ch_num
)->
HCINTMSK
 |
USB_OTG_HCINTMSK_BBERRM
;

1456 
EP_TYPE_ISOC
:

1457 
	`USBx_HC
((
uöt32_t
)
ch_num
)->
HCINTMSK
 = 
USB_OTG_HCINTMSK_XFRCM
 |

1458 
USB_OTG_HCINTMSK_ACKM
 |

1459 
USB_OTG_HCINTMSK_AHBERR
 |

1460 
USB_OTG_HCINTMSK_FRMORM
;

1462 i‡((
ïnum
 & 0x80U) == 0x80U)

1464 
	`USBx_HC
((
uöt32_t
)
ch_num
)->
HCINTMSK
 |(
USB_OTG_HCINTMSK_TXERRM
 | 
USB_OTG_HCINTMSK_BBERRM
);

1469 
ªt
 = 
HAL_ERROR
;

1474 
USBx_HOST
->
HAINTMSK
 |1UL << (
ch_num
 & 0xFU);

1477 
USBx
->
GINTMSK
 |
USB_OTG_GINTMSK_HCIM
;

1480 i‡((
ïnum
 & 0x80U) == 0x80U)

1482 
HCch¨EpDú
 = (0x1U << 15Ë& 
USB_OTG_HCCHAR_EPDIR
;

1486 
HCch¨EpDú
 = 0U;

1489 
Ho°C‹eS≥ed
 = 
	`USB_GëHo°S≥ed
(
USBx
);

1492 i‡((
•ìd
 =
HPRT0_PRTSPD_LOW_SPEED
Ë&& (
Ho°C‹eS≥ed
 != HPRT0_PRTSPD_LOW_SPEED))

1494 
HCch¨LowS≥ed
 = (0x1U << 17Ë& 
USB_OTG_HCCHAR_LSDEV
;

1498 
HCch¨LowS≥ed
 = 0U;

1501 
	`USBx_HC
((
uöt32_t
)
ch_num
)->
HCCHAR
 = (((uöt32_t)
dev_addªss
 << 22Ë& 
USB_OTG_HCCHAR_DAD
) |

1502 ((((
uöt32_t
)
ïnum
 & 0x7FUË<< 11Ë& 
USB_OTG_HCCHAR_EPNUM
) |

1503 (((
uöt32_t
)
ï_ty≥
 << 18Ë& 
USB_OTG_HCCHAR_EPTYP
) |

1504 ((
uöt32_t
)
mps
 & 
USB_OTG_HCCHAR_MPSIZ
Ë| 
HCch¨EpDú
 | 
HCch¨LowS≥ed
;

1506 i‡(
ï_ty≥
 =
EP_TYPE_INTR
)

1508 
	`USBx_HC
((
uöt32_t
)
ch_num
)->
HCCHAR
 |
USB_OTG_HCCHAR_ODDFRM
 ;

1511  
ªt
;

1512 
	}
}

1520 
HAL_SètusTy≥Def
 
	$USB_HC_SèπX„r
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
USB_OTG_HCTy≥Def
 *
hc
)

1522 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

1523 
uöt32_t
 
ch_num
 = (uöt32_t)
hc
->ch_num;

1524 
__IO
 
uöt32_t
 
tm¥eg
;

1525 
uöt8_t
 
is_odd‰ame
;

1526 
uöt16_t
 
Àn_w‹ds
;

1527 
uöt16_t
 
num_∑ckës
;

1528 
uöt16_t
 
max_hc_pkt_cou¡
 = 256U;

1531 i‡(
hc
->
x„r_Àn
 > 0U)

1533 
num_∑ckës
 = (
uöt16_t
)((
hc
->
x„r_Àn
 + hc->
max_∑ckë
 - 1U) / hc->max_packet);

1535 i‡(
num_∑ckës
 > 
max_hc_pkt_cou¡
)

1537 
num_∑ckës
 = 
max_hc_pkt_cou¡
;

1538 
hc
->
X„rSize
 = (
uöt32_t
)
num_∑ckës
 * hc->
max_∑ckë
;

1543 
num_∑ckës
 = 1U;

1550 i‡(
hc
->
ï_is_ö
 != 0U)

1552 
hc
->
X„rSize
 = (
uöt32_t
)
num_∑ckës
 * hc->
max_∑ckë
;

1556 
hc
->
X„rSize
 = hc->
x„r_Àn
;

1560 
	`USBx_HC
(
ch_num
)->
HCTSIZ
 = (
hc
->
X„rSize
 & 
USB_OTG_HCTSIZ_XFRSIZ
) |

1561 (((
uöt32_t
)
num_∑ckës
 << 19Ë& 
USB_OTG_HCTSIZ_PKTCNT
) |

1562 (((
uöt32_t
)
hc
->
d©a_pid
 << 29Ë& 
USB_OTG_HCTSIZ_DPID
);

1564 
is_odd‰ame
 = (((
uöt32_t
)
USBx_HOST
->
HFNUM
 & 0x01U) != 0U) ? 0U : 1U;

1565 
	`USBx_HC
(
ch_num
)->
HCCHAR
 &~
USB_OTG_HCCHAR_ODDFRM
;

1566 
	`USBx_HC
(
ch_num
)->
HCCHAR
 |(
uöt32_t
)
is_odd‰ame
 << 29;

1569 
tm¥eg
 = 
	`USBx_HC
(
ch_num
)->
HCCHAR
;

1570 
tm¥eg
 &~
USB_OTG_HCCHAR_CHDIS
;

1573 i‡(
hc
->
ï_is_ö
 != 0U)

1575 
tm¥eg
 |
USB_OTG_HCCHAR_EPDIR
;

1579 
tm¥eg
 &~
USB_OTG_HCCHAR_EPDIR
;

1581 
tm¥eg
 |
USB_OTG_HCCHAR_CHENA
;

1582 
	`USBx_HC
(
ch_num
)->
HCCHAR
 = 
tm¥eg
;

1584 i‡((
hc
->
ï_is_ö
 =0UË&& (hc->
x„r_Àn
 > 0U))

1586 
hc
->
ï_ty≥
)

1589 
EP_TYPE_CTRL
:

1590 
EP_TYPE_BULK
:

1592 
Àn_w‹ds
 = (
uöt16_t
)((
hc
->
x„r_Àn
 + 3U) / 4U);

1595 i‡(
Àn_w‹ds
 > (
USBx
->
HNPTXSTS
 & 0xFFFFU))

1598 
USBx
->
GINTMSK
 |
USB_OTG_GINTMSK_NPTXFEM
;

1603 
EP_TYPE_INTR
:

1604 
EP_TYPE_ISOC
:

1605 
Àn_w‹ds
 = (
uöt16_t
)((
hc
->
x„r_Àn
 + 3U) / 4U);

1607 i‡(
Àn_w‹ds
 > (
USBx_HOST
->
HPTXSTS
 & 0xFFFFU))

1610 
USBx
->
GINTMSK
 |
USB_OTG_GINTMSK_PTXFEM
;

1619 ()
	`USB_WrôePackë
(
USBx
, 
hc
->
x„r_buff
, hc->
ch_num
, (
uöt16_t
)hc->
x„r_Àn
);

1622  
HAL_OK
;

1623 
	}
}

1630 
uöt32_t
 
	$USB_HC_RódI¡îru±
(
USB_OTG_GlobÆTy≥Def
 *
USBx
)

1632 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

1634  ((
USBx_HOST
->
HAINT
) & 0xFFFFU);

1635 
	}
}

1644 
HAL_SètusTy≥Def
 
	$USB_HC_HÆt
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt8_t
 
hc_num
)

1646 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

1647 
uöt32_t
 
h˙um
 = (uöt32_t)
hc_num
;

1648 
uöt32_t
 
cou¡
 = 0U;

1649 
uöt32_t
 
HcEpTy≥
 = (
	`USBx_HC
(
h˙um
)->
HCCHAR
 & 
USB_OTG_HCCHAR_EPTYP
) >> 18;

1650 
uöt32_t
 
Ch™√lE«
 = (
	`USBx_HC
(
h˙um
)->
HCCHAR
 & 
USB_OTG_HCCHAR_CHENA
) >> 31;

1652 i‡(((
USBx
->
GAHBCFG
 & 
USB_OTG_GAHBCFG_DMAEN
) == USB_OTG_GAHBCFG_DMAEN) &&

1653 (
Ch™√lE«
 == 0U))

1655  
HAL_OK
;

1659 i‡((
HcEpTy≥
 =
HCCHAR_CTRL
Ë|| (HcEpTy≥ =
HCCHAR_BULK
))

1661 
	`USBx_HC
(
h˙um
)->
HCCHAR
 |
USB_OTG_HCCHAR_CHDIS
;

1663 i‡((
USBx
->
GAHBCFG
 & 
USB_OTG_GAHBCFG_DMAEN
) == 0U)

1665 i‡((
USBx
->
HNPTXSTS
 & (0xFFU << 16)) == 0U)

1667 
	`USBx_HC
(
h˙um
)->
HCCHAR
 &~
USB_OTG_HCCHAR_CHENA
;

1668 
	`USBx_HC
(
h˙um
)->
HCCHAR
 |
USB_OTG_HCCHAR_CHENA
;

1669 
	`USBx_HC
(
h˙um
)->
HCCHAR
 &~
USB_OTG_HCCHAR_EPDIR
;

1672 i‡(++
cou¡
 > 1000U)

1676 } (
	`USBx_HC
(
h˙um
)->
HCCHAR
 & 
USB_OTG_HCCHAR_CHENA
) == USB_OTG_HCCHAR_CHENA);

1680 
	`USBx_HC
(
h˙um
)->
HCCHAR
 |
USB_OTG_HCCHAR_CHENA
;

1686 
	`USBx_HC
(
h˙um
)->
HCCHAR
 |
USB_OTG_HCCHAR_CHDIS
;

1688 i‡((
USBx_HOST
->
HPTXSTS
 & (0xFFU << 16)) == 0U)

1690 
	`USBx_HC
(
h˙um
)->
HCCHAR
 &~
USB_OTG_HCCHAR_CHENA
;

1691 
	`USBx_HC
(
h˙um
)->
HCCHAR
 |
USB_OTG_HCCHAR_CHENA
;

1692 
	`USBx_HC
(
h˙um
)->
HCCHAR
 &~
USB_OTG_HCCHAR_EPDIR
;

1695 i‡(++
cou¡
 > 1000U)

1699 } (
	`USBx_HC
(
h˙um
)->
HCCHAR
 & 
USB_OTG_HCCHAR_CHENA
) == USB_OTG_HCCHAR_CHENA);

1703 
	`USBx_HC
(
h˙um
)->
HCCHAR
 |
USB_OTG_HCCHAR_CHENA
;

1707  
HAL_OK
;

1708 
	}
}

1717 
HAL_SètusTy≥Def
 
	$USB_DoPög
(
USB_OTG_GlobÆTy≥Def
 *
USBx
, 
uöt8_t
 
ch_num
)

1719 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

1720 
uöt32_t
 
chnum
 = (uöt32_t)
ch_num
;

1721 
uöt32_t
 
num_∑ckës
 = 1U;

1722 
uöt32_t
 
tm¥eg
;

1724 
	`USBx_HC
(
chnum
)->
HCTSIZ
 = ((
num_∑ckës
 << 19Ë& 
USB_OTG_HCTSIZ_PKTCNT
) |

1725 
USB_OTG_HCTSIZ_DOPING
;

1728 
tm¥eg
 = 
	`USBx_HC
(
chnum
)->
HCCHAR
;

1729 
tm¥eg
 &~
USB_OTG_HCCHAR_CHDIS
;

1730 
tm¥eg
 |
USB_OTG_HCCHAR_CHENA
;

1731 
	`USBx_HC
(
chnum
)->
HCCHAR
 = 
tm¥eg
;

1733  
HAL_OK
;

1734 
	}
}

1741 
HAL_SètusTy≥Def
 
	$USB_St›Ho°
(
USB_OTG_GlobÆTy≥Def
 *
USBx
)

1743 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

1744 
uöt32_t
 
cou¡
 = 0U;

1745 
uöt32_t
 
vÆue
;

1746 
uöt32_t
 
i
;

1748 ()
	`USB_DißbÀGlobÆI¡
(
USBx
);

1751 ()
	`USB_FlushTxFifo
(
USBx
, 0x10U);

1752 ()
	`USB_FlushRxFifo
(
USBx
);

1755 
i
 = 0U; i <= 15U; i++)

1757 
vÆue
 = 
	`USBx_HC
(
i
)->
HCCHAR
;

1758 
vÆue
 |
USB_OTG_HCCHAR_CHDIS
;

1759 
vÆue
 &~
USB_OTG_HCCHAR_CHENA
;

1760 
vÆue
 &~
USB_OTG_HCCHAR_EPDIR
;

1761 
	`USBx_HC
(
i
)->
HCCHAR
 = 
vÆue
;

1765 
i
 = 0U; i <= 15U; i++)

1767 
vÆue
 = 
	`USBx_HC
(
i
)->
HCCHAR
;

1768 
vÆue
 |
USB_OTG_HCCHAR_CHDIS
;

1769 
vÆue
 |
USB_OTG_HCCHAR_CHENA
;

1770 
vÆue
 &~
USB_OTG_HCCHAR_EPDIR
;

1771 
	`USBx_HC
(
i
)->
HCCHAR
 = 
vÆue
;

1775 i‡(++
cou¡
 > 1000U)

1779 } (
	`USBx_HC
(
i
)->
HCCHAR
 & 
USB_OTG_HCCHAR_CHENA
) == USB_OTG_HCCHAR_CHENA);

1783 
USBx_HOST
->
HAINT
 = 0xFFFFFFFFU;

1784 
USBx
->
GINTSTS
 = 0xFFFFFFFFU;

1786  
HAL_OK
;

1787 
	}
}

1794 
HAL_SètusTy≥Def
 
	$USB_A˘iv©eRemŸeWakeup
(
USB_OTG_GlobÆTy≥Def
 *
USBx
)

1796 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

1798 i‡((
USBx_DEVICE
->
DSTS
 & 
USB_OTG_DSTS_SUSPSTS
) == USB_OTG_DSTS_SUSPSTS)

1801 
USBx_DEVICE
->
DCTL
 |
USB_OTG_DCTL_RWUSIG
;

1804  
HAL_OK
;

1805 
	}
}

1812 
HAL_SètusTy≥Def
 
	$USB_DeA˘iv©eRemŸeWakeup
(
USB_OTG_GlobÆTy≥Def
 *
USBx
)

1814 
uöt32_t
 
USBx_BASE
 = (uöt32_t)
USBx
;

1817 
USBx_DEVICE
->
DCTL
 &~(
USB_OTG_DCTL_RWUSIG
);

1819  
HAL_OK
;

1820 
	}
}

1823 #i‡
deföed
 (
USB
)

1831 
HAL_SètusTy≥Def
 
	$USB_C‹eInô
(
USB_Ty≥Def
 *
USBx
, 
USB_CfgTy≥Def
 
cfg
)

1834 
	`UNUSED
(
USBx
);

1835 
	`UNUSED
(
cfg
);

1842  
HAL_OK
;

1843 
	}
}

1851 
HAL_SètusTy≥Def
 
	$USB_E«bÀGlobÆI¡
(
USB_Ty≥Def
 *
USBx
)

1853 
uöt32_t
 
wöãºu±mask
;

1856 
USBx
->
ISTR
 = 0U;

1859 
wöãºu±mask
 = 
USB_CNTR_CTRM
 | 
USB_CNTR_WKUPM
 |

1860 
USB_CNTR_SUSPM
 | 
USB_CNTR_ERRM
 |

1861 
USB_CNTR_SOFM
 | 
USB_CNTR_ESOFM
 |

1862 
USB_CNTR_RESETM
;

1865 
USBx
->
CNTR
 = (
uöt16_t
)
wöãºu±mask
;

1867  
HAL_OK
;

1868 
	}
}

1876 
HAL_SètusTy≥Def
 
	$USB_DißbÀGlobÆI¡
(
USB_Ty≥Def
 *
USBx
)

1878 
uöt32_t
 
wöãºu±mask
;

1881 
wöãºu±mask
 = 
USB_CNTR_CTRM
 | 
USB_CNTR_WKUPM
 |

1882 
USB_CNTR_SUSPM
 | 
USB_CNTR_ERRM
 |

1883 
USB_CNTR_SOFM
 | 
USB_CNTR_ESOFM
 |

1884 
USB_CNTR_RESETM
;

1887 
USBx
->
CNTR
 &(
uöt16_t
)(~
wöãºu±mask
);

1889  
HAL_OK
;

1890 
	}
}

1900 
HAL_SètusTy≥Def
 
	$USB_SëCuºítMode
(
USB_Ty≥Def
 *
USBx
, 
USB_ModeTy≥Def
 
mode
)

1903 
	`UNUSED
(
USBx
);

1904 
	`UNUSED
(
mode
);

1910  
HAL_OK
;

1911 
	}
}

1921 
HAL_SètusTy≥Def
 
	$USB_DevInô
(
USB_Ty≥Def
 *
USBx
, 
USB_CfgTy≥Def
 
cfg
)

1924 
	`UNUSED
(
cfg
);

1928 
USBx
->
CNTR
 = (
uöt16_t
)
USB_CNTR_FRES
;

1931 
USBx
->
CNTR
 = 0U;

1934 
USBx
->
ISTR
 = 0U;

1937 
USBx
->
BTABLE
 = 
BTABLE_ADDRESS
;

1939  
HAL_OK
;

1940 
	}
}

1950 
HAL_SètusTy≥Def
 
	$USB_FlushTxFifo
(
USB_Ty≥Def
 *
USBx
, 
uöt32_t
 
num
)

1953 
	`UNUSED
(
USBx
);

1954 
	`UNUSED
(
num
);

1961  
HAL_OK
;

1962 
	}
}

1969 
HAL_SètusTy≥Def
 
	$USB_FlushRxFifo
(
USB_Ty≥Def
 *
USBx
)

1972 
	`UNUSED
(
USBx
);

1979  
HAL_OK
;

1980 
	}
}

1982 #i‡
deföed
 (
HAL_PCD_MODULE_ENABLED
)

1989 
HAL_SètusTy≥Def
 
	$USB_A˘iv©eEndpoöt
(
USB_Ty≥Def
 *
USBx
, 
USB_EPTy≥Def
 *
ï
)

1991 
HAL_SètusTy≥Def
 
ªt
 = 
HAL_OK
;

1992 
uöt16_t
 
wEpRegVÆ
;

1994 
wEpRegVÆ
 = 
	`PCD_GET_ENDPOINT
(
USBx
, 
ï
->
num
Ë& 
USB_EP_T_MASK
;

1997 
ï
->
ty≥
)

1999 
EP_TYPE_CTRL
:

2000 
wEpRegVÆ
 |
USB_EP_CONTROL
;

2003 
EP_TYPE_BULK
:

2004 
wEpRegVÆ
 |
USB_EP_BULK
;

2007 
EP_TYPE_INTR
:

2008 
wEpRegVÆ
 |
USB_EP_INTERRUPT
;

2011 
EP_TYPE_ISOC
:

2012 
wEpRegVÆ
 |
USB_EP_ISOCHRONOUS
;

2016 
ªt
 = 
HAL_ERROR
;

2020 
	`PCD_SET_ENDPOINT
(
USBx
, 
ï
->
num
, (
wEpRegVÆ
 | 
USB_EP_CTR_RX
 | 
USB_EP_CTR_TX
));

2022 
	`PCD_SET_EP_ADDRESS
(
USBx
, 
ï
->
num
,Ép->num);

2024 i‡(
ï
->
doubÀbuf„r
 == 0U)

2026 i‡(
ï
->
is_ö
 != 0U)

2029 
	`PCD_SET_EP_TX_ADDRESS
(
USBx
, 
ï
->
num
,Ép->
pmØdªss
);

2030 
	`PCD_CLEAR_TX_DTOG
(
USBx
, 
ï
->
num
);

2032 i‡(
ï
->
ty≥
 !
EP_TYPE_ISOC
)

2035 
	`PCD_SET_EP_TX_STATUS
(
USBx
, 
ï
->
num
, 
USB_EP_TX_NAK
);

2040 
	`PCD_SET_EP_TX_STATUS
(
USBx
, 
ï
->
num
, 
USB_EP_TX_DIS
);

2046 
	`PCD_SET_EP_RX_ADDRESS
(
USBx
, 
ï
->
num
,Ép->
pmØdªss
);

2049 
	`PCD_SET_EP_RX_CNT
(
USBx
, 
ï
->
num
,Ép->
max∑ckë
);

2050 
	`PCD_CLEAR_RX_DTOG
(
USBx
, 
ï
->
num
);

2053 
	`PCD_SET_EP_RX_STATUS
(
USBx
, 
ï
->
num
, 
USB_EP_RX_VALID
);

2060 
	`PCD_SET_EP_DBUF
(
USBx
, 
ï
->
num
);

2063 
	`PCD_SET_EP_DBUF_ADDR
(
USBx
, 
ï
->
num
,Ép->
pmØddr0
,Ép->
pmØddr1
);

2065 i‡(
ï
->
is_ö
 == 0U)

2068 
	`PCD_CLEAR_RX_DTOG
(
USBx
, 
ï
->
num
);

2069 
	`PCD_CLEAR_TX_DTOG
(
USBx
, 
ï
->
num
);

2071 
	`PCD_SET_EP_RX_STATUS
(
USBx
, 
ï
->
num
, 
USB_EP_RX_VALID
);

2072 
	`PCD_SET_EP_TX_STATUS
(
USBx
, 
ï
->
num
, 
USB_EP_TX_DIS
);

2077 
	`PCD_CLEAR_RX_DTOG
(
USBx
, 
ï
->
num
);

2078 
	`PCD_CLEAR_TX_DTOG
(
USBx
, 
ï
->
num
);

2080 i‡(
ï
->
ty≥
 !
EP_TYPE_ISOC
)

2083 
	`PCD_SET_EP_TX_STATUS
(
USBx
, 
ï
->
num
, 
USB_EP_TX_NAK
);

2088 
	`PCD_SET_EP_TX_STATUS
(
USBx
, 
ï
->
num
, 
USB_EP_TX_DIS
);

2091 
	`PCD_SET_EP_RX_STATUS
(
USBx
, 
ï
->
num
, 
USB_EP_RX_DIS
);

2095  
ªt
;

2096 
	}
}

2104 
HAL_SètusTy≥Def
 
	$USB_Dó˘iv©eEndpoöt
(
USB_Ty≥Def
 *
USBx
, 
USB_EPTy≥Def
 *
ï
)

2106 i‡(
ï
->
doubÀbuf„r
 == 0U)

2108 i‡(
ï
->
is_ö
 != 0U)

2110 
	`PCD_CLEAR_TX_DTOG
(
USBx
, 
ï
->
num
);

2113 
	`PCD_SET_EP_TX_STATUS
(
USBx
, 
ï
->
num
, 
USB_EP_TX_DIS
);

2117 
	`PCD_CLEAR_RX_DTOG
(
USBx
, 
ï
->
num
);

2120 
	`PCD_SET_EP_RX_STATUS
(
USBx
, 
ï
->
num
, 
USB_EP_RX_DIS
);

2126 i‡(
ï
->
is_ö
 == 0U)

2129 
	`PCD_CLEAR_RX_DTOG
(
USBx
, 
ï
->
num
);

2130 
	`PCD_CLEAR_TX_DTOG
(
USBx
, 
ï
->
num
);

2133 
	`PCD_TX_DTOG
(
USBx
, 
ï
->
num
);

2135 
	`PCD_SET_EP_RX_STATUS
(
USBx
, 
ï
->
num
, 
USB_EP_RX_DIS
);

2136 
	`PCD_SET_EP_TX_STATUS
(
USBx
, 
ï
->
num
, 
USB_EP_TX_DIS
);

2141 
	`PCD_CLEAR_RX_DTOG
(
USBx
, 
ï
->
num
);

2142 
	`PCD_CLEAR_TX_DTOG
(
USBx
, 
ï
->
num
);

2143 
	`PCD_RX_DTOG
(
USBx
, 
ï
->
num
);

2146 
	`PCD_SET_EP_TX_STATUS
(
USBx
, 
ï
->
num
, 
USB_EP_TX_DIS
);

2147 
	`PCD_SET_EP_RX_STATUS
(
USBx
, 
ï
->
num
, 
USB_EP_RX_DIS
);

2151  
HAL_OK
;

2152 
	}
}

2160 
HAL_SètusTy≥Def
 
	$USB_EPSèπX„r
(
USB_Ty≥Def
 *
USBx
, 
USB_EPTy≥Def
 *
ï
)

2162 
uöt32_t
 
Àn
;

2163 
uöt16_t
 
pmabuf„r
;

2164 
uöt16_t
 
wEPVÆ
;

2167 i‡(
ï
->
is_ö
 == 1U)

2170 i‡(
ï
->
x„r_Àn
 >Ép->
max∑ckë
)

2172 
Àn
 = 
ï
->
max∑ckë
;

2176 
Àn
 = 
ï
->
x„r_Àn
;

2180 i‡(
ï
->
doubÀbuf„r
 == 0U)

2182 
	`USB_WrôePMA
(
USBx
, 
ï
->
x„r_buff
,Ép->
pmØdªss
, (
uöt16_t
)
Àn
);

2183 
	`PCD_SET_EP_TX_CNT
(
USBx
, 
ï
->
num
, 
Àn
);

2188 i‡(
ï
->
ty≥
 =
EP_TYPE_BULK
)

2190 i‡(
ï
->
x„r_Àn_db
 >Ép->
max∑ckë
)

2193 
	`PCD_SET_EP_DBUF
(
USBx
, 
ï
->
num
);

2196 
ï
->
x„r_Àn_db
 -
Àn
;

2199 i‡((
	`PCD_GET_ENDPOINT
(
USBx
, 
ï
->
num
Ë& 
USB_EP_DTOG_TX
) != 0U)

2202 
	`PCD_SET_EP_DBUF1_CNT
(
USBx
, 
ï
->
num
,Ép->
is_ö
, 
Àn
);

2203 
pmabuf„r
 = 
ï
->
pmØddr1
;

2206 
	`USB_WrôePMA
(
USBx
, 
ï
->
x„r_buff
, 
pmabuf„r
, (
uöt16_t
)
Àn
);

2207 
ï
->
x„r_buff
 +
Àn
;

2209 i‡(
ï
->
x„r_Àn_db
 >Ép->
max∑ckë
)

2211 
ï
->
x„r_Àn_db
 -
Àn
;

2215 
Àn
 = 
ï
->
x„r_Àn_db
;

2216 
ï
->
x„r_Àn_db
 = 0U;

2220 
	`PCD_SET_EP_DBUF0_CNT
(
USBx
, 
ï
->
num
,Ép->
is_ö
, 
Àn
);

2221 
pmabuf„r
 = 
ï
->
pmØddr0
;

2224 
	`USB_WrôePMA
(
USBx
, 
ï
->
x„r_buff
, 
pmabuf„r
, (
uöt16_t
)
Àn
);

2229 
	`PCD_SET_EP_DBUF0_CNT
(
USBx
, 
ï
->
num
,Ép->
is_ö
, 
Àn
);

2230 
pmabuf„r
 = 
ï
->
pmØddr0
;

2233 
	`USB_WrôePMA
(
USBx
, 
ï
->
x„r_buff
, 
pmabuf„r
, (
uöt16_t
)
Àn
);

2234 
ï
->
x„r_buff
 +
Àn
;

2236 i‡(
ï
->
x„r_Àn_db
 >Ép->
max∑ckë
)

2238 
ï
->
x„r_Àn_db
 -
Àn
;

2242 
Àn
 = 
ï
->
x„r_Àn_db
;

2243 
ï
->
x„r_Àn_db
 = 0U;

2247 
	`PCD_SET_EP_DBUF1_CNT
(
USBx
, 
ï
->
num
,Ép->
is_ö
, 
Àn
);

2248 
pmabuf„r
 = 
ï
->
pmØddr1
;

2251 
	`USB_WrôePMA
(
USBx
, 
ï
->
x„r_buff
, 
pmabuf„r
, (
uöt16_t
)
Àn
);

2257 
Àn
 = 
ï
->
x„r_Àn_db
;

2260 
	`PCD_CLEAR_EP_DBUF
(
USBx
, 
ï
->
num
);

2263 
	`PCD_SET_EP_TX_CNT
(
USBx
, 
ï
->
num
, 
Àn
);

2264 
pmabuf„r
 = 
ï
->
pmØddr0
;

2267 
	`USB_WrôePMA
(
USBx
, 
ï
->
x„r_buff
, 
pmabuf„r
, (
uöt16_t
)
Àn
);

2275 
	`PCD_SET_EP_DBUF
(
USBx
, 
ï
->
num
);

2278 
ï
->
x„r_Àn_db
 -
Àn
;

2281 i‡((
	`PCD_GET_ENDPOINT
(
USBx
, 
ï
->
num
Ë& 
USB_EP_DTOG_TX
) != 0U)

2284 
	`PCD_SET_EP_DBUF1_CNT
(
USBx
, 
ï
->
num
,Ép->
is_ö
, 
Àn
);

2285 
pmabuf„r
 = 
ï
->
pmØddr1
;

2288 
	`USB_WrôePMA
(
USBx
, 
ï
->
x„r_buff
, 
pmabuf„r
, (
uöt16_t
)
Àn
);

2289 
ï
->
x„r_buff
 +
Àn
;

2291 i‡(
ï
->
x„r_Àn_db
 >Ép->
max∑ckë
)

2293 
ï
->
x„r_Àn_db
 -
Àn
;

2297 
Àn
 = 
ï
->
x„r_Àn_db
;

2298 
ï
->
x„r_Àn_db
 = 0U;

2301 i‡(
Àn
 > 0U)

2304 
	`PCD_SET_EP_DBUF0_CNT
(
USBx
, 
ï
->
num
,Ép->
is_ö
, 
Àn
);

2305 
pmabuf„r
 = 
ï
->
pmØddr0
;

2308 
	`USB_WrôePMA
(
USBx
, 
ï
->
x„r_buff
, 
pmabuf„r
, (
uöt16_t
)
Àn
);

2314 
	`PCD_SET_EP_DBUF0_CNT
(
USBx
, 
ï
->
num
,Ép->
is_ö
, 
Àn
);

2315 
pmabuf„r
 = 
ï
->
pmØddr0
;

2318 
	`USB_WrôePMA
(
USBx
, 
ï
->
x„r_buff
, 
pmabuf„r
, (
uöt16_t
)
Àn
);

2319 
ï
->
x„r_buff
 +
Àn
;

2321 i‡(
ï
->
x„r_Àn_db
 >Ép->
max∑ckë
)

2323 
ï
->
x„r_Àn_db
 -
Àn
;

2327 
Àn
 = 
ï
->
x„r_Àn_db
;

2328 
ï
->
x„r_Àn_db
 = 0U;

2331 i‡(
Àn
 > 0U)

2334 
	`PCD_SET_EP_DBUF1_CNT
(
USBx
, 
ï
->
num
,Ép->
is_ö
, 
Àn
);

2335 
pmabuf„r
 = 
ï
->
pmØddr1
;

2338 
	`USB_WrôePMA
(
USBx
, 
ï
->
x„r_buff
, 
pmabuf„r
, (
uöt16_t
)
Àn
);

2344 
	`PCD_SET_EP_TX_STATUS
(
USBx
, 
ï
->
num
, 
USB_EP_TX_VALID
);

2348 i‡(
ï
->
doubÀbuf„r
 == 0U)

2351 i‡(
ï
->
x„r_Àn
 >Ép->
max∑ckë
)

2353 
Àn
 = 
ï
->
max∑ckë
;

2354 
ï
->
x„r_Àn
 -
Àn
;

2358 
Àn
 = 
ï
->
x„r_Àn
;

2359 
ï
->
x„r_Àn
 = 0U;

2362 
	`PCD_SET_EP_RX_CNT
(
USBx
, 
ï
->
num
, 
Àn
);

2368 i‡(
ï
->
ty≥
 =
EP_TYPE_BULK
)

2370 
	`PCD_SET_EP_DBUF_CNT
(
USBx
, 
ï
->
num
,Ép->
is_ö
,Ép->
max∑ckë
);

2373 i‡(
ï
->
x„r_cou¡
 != 0U)

2376 
wEPVÆ
 = 
	`PCD_GET_ENDPOINT
(
USBx
, 
ï
->
num
);

2379 i‡((((
wEPVÆ
 & 
USB_EP_DTOG_RX
Ë!0UË&& ((wEPVÆ & 
USB_EP_DTOG_TX
) != 0U)) ||

2380 (((
wEPVÆ
 & 
USB_EP_DTOG_RX
Ë=0UË&& ((wEPVÆ & 
USB_EP_DTOG_TX
) == 0U)))

2382 
	`PCD_FªeU£rBuf„r
(
USBx
, 
ï
->
num
, 0U);

2387 i‡(
ï
->
ty≥
 =
EP_TYPE_ISOC
)

2390 i‡(
ï
->
x„r_Àn
 >Ép->
max∑ckë
)

2392 
Àn
 = 
ï
->
max∑ckë
;

2393 
ï
->
x„r_Àn
 -
Àn
;

2397 
Àn
 = 
ï
->
x„r_Àn
;

2398 
ï
->
x„r_Àn
 = 0U;

2400 
	`PCD_SET_EP_DBUF_CNT
(
USBx
, 
ï
->
num
,Ép->
is_ö
, 
Àn
);

2404  
HAL_ERROR
;

2408 
	`PCD_SET_EP_RX_STATUS
(
USBx
, 
ï
->
num
, 
USB_EP_RX_VALID
);

2411  
HAL_OK
;

2412 
	}
}

2421 
HAL_SètusTy≥Def
 
	$USB_EPSëSèŒ
(
USB_Ty≥Def
 *
USBx
, 
USB_EPTy≥Def
 *
ï
)

2423 i‡(
ï
->
is_ö
 != 0U)

2425 
	`PCD_SET_EP_TX_STATUS
(
USBx
, 
ï
->
num
, 
USB_EP_TX_STALL
);

2429 
	`PCD_SET_EP_RX_STATUS
(
USBx
, 
ï
->
num
, 
USB_EP_RX_STALL
);

2432  
HAL_OK
;

2433 
	}
}

2441 
HAL_SètusTy≥Def
 
	$USB_EPCÀ¨SèŒ
(
USB_Ty≥Def
 *
USBx
, 
USB_EPTy≥Def
 *
ï
)

2443 i‡(
ï
->
doubÀbuf„r
 == 0U)

2445 i‡(
ï
->
is_ö
 != 0U)

2447 
	`PCD_CLEAR_TX_DTOG
(
USBx
, 
ï
->
num
);

2449 i‡(
ï
->
ty≥
 !
EP_TYPE_ISOC
)

2452 
	`PCD_SET_EP_TX_STATUS
(
USBx
, 
ï
->
num
, 
USB_EP_TX_NAK
);

2457 
	`PCD_CLEAR_RX_DTOG
(
USBx
, 
ï
->
num
);

2460 
	`PCD_SET_EP_RX_STATUS
(
USBx
, 
ï
->
num
, 
USB_EP_RX_VALID
);

2464  
HAL_OK
;

2465 
	}
}

2473 
HAL_SètusTy≥Def
 
	$USB_St›Devi˚
(
USB_Ty≥Def
 *
USBx
)

2476 
USBx
->
CNTR
 = (
uöt16_t
)
USB_CNTR_FRES
;

2479 
USBx
->
ISTR
 = 0U;

2482 
USBx
->
CNTR
 = (
uöt16_t
)(
USB_CNTR_FRES
 | 
USB_CNTR_PDWN
);

2484  
HAL_OK
;

2485 
	}
}

2494 
HAL_SètusTy≥Def
 
	$USB_SëDevAddªss
(
USB_Ty≥Def
 *
USBx
, 
uöt8_t
 
addªss
)

2496 i‡(
addªss
 == 0U)

2499 
USBx
->
DADDR
 = (
uöt16_t
)
USB_DADDR_EF
;

2502  
HAL_OK
;

2503 
	}
}

2510 
HAL_SètusTy≥Def
 
	$USB_DevC⁄√˘
(
USB_Ty≥Def
 *
USBx
)

2513 
	`UNUSED
(
USBx
);

2520  
HAL_OK
;

2521 
	}
}

2528 
HAL_SètusTy≥Def
 
	$USB_DevDisc⁄√˘
(
USB_Ty≥Def
 *
USBx
)

2531 
	`UNUSED
(
USBx
);

2538  
HAL_OK
;

2539 
	}
}

2546 
uöt32_t
 
	$USB_RódI¡îru±s
(
USB_Ty≥Def
 *
USBx
)

2548 
uöt32_t
 
tm¥eg
;

2550 
tm¥eg
 = 
USBx
->
ISTR
;

2551  
tm¥eg
;

2552 
	}
}

2559 
uöt32_t
 
	$USB_RódDevAŒOutEpI¡îru±
(
USB_Ty≥Def
 *
USBx
)

2562 
	`UNUSED
(
USBx
);

2568 
	}
}

2575 
uöt32_t
 
	$USB_RódDevAŒInEpI¡îru±
(
USB_Ty≥Def
 *
USBx
)

2578 
	`UNUSED
(
USBx
);

2584 
	}
}

2593 
uöt32_t
 
	$USB_RódDevOutEPI¡îru±
(
USB_Ty≥Def
 *
USBx
, 
uöt8_t
 
ïnum
)

2596 
	`UNUSED
(
USBx
);

2597 
	`UNUSED
(
ïnum
);

2603 
	}
}

2612 
uöt32_t
 
	$USB_RódDevInEPI¡îru±
(
USB_Ty≥Def
 *
USBx
, 
uöt8_t
 
ïnum
)

2615 
	`UNUSED
(
USBx
);

2616 
	`UNUSED
(
ïnum
);

2622 
	}
}

2630 
	$USB_CÀ¨I¡îru±s
(
USB_Ty≥Def
 *
USBx
, 
uöt32_t
 
öãºu±
)

2633 
	`UNUSED
(
USBx
);

2634 
	`UNUSED
(
öãºu±
);

2639 
	}
}

2647 
HAL_SètusTy≥Def
 
	$USB_EP0_OutSèπ
(
USB_Ty≥Def
 *
USBx
, 
uöt8_t
 *
p£tup
)

2650 
	`UNUSED
(
USBx
);

2651 
	`UNUSED
(
p£tup
);

2656  
HAL_OK
;

2657 
	}
}

2664 
HAL_SètusTy≥Def
 
	$USB_A˘iv©eRemŸeWakeup
(
USB_Ty≥Def
 *
USBx
)

2666 
USBx
->
CNTR
 |(
uöt16_t
)
USB_CNTR_RESUME
;

2668  
HAL_OK
;

2669 
	}
}

2676 
HAL_SètusTy≥Def
 
	$USB_DeA˘iv©eRemŸeWakeup
(
USB_Ty≥Def
 *
USBx
)

2678 
USBx
->
CNTR
 &(
uöt16_t
)(~
USB_CNTR_RESUME
);

2680  
HAL_OK
;

2681 
	}
}

2691 
	$USB_WrôePMA
(
USB_Ty≥Def
 *
USBx
, 
uöt8_t
 *
pbU§Buf
, 
uöt16_t
 
wPMABufAddr
, uöt16_à
wNByãs
)

2693 
uöt32_t
 
n
 = ((uöt32_t)
wNByãs
 + 1U) >> 1;

2694 
uöt32_t
 
Ba£Addr
 = (uöt32_t)
USBx
;

2695 
uöt32_t
 
i
, 
ãmp1
, 
ãmp2
;

2696 
__IO
 
uöt16_t
 *
pdwVÆ
;

2697 
uöt8_t
 *
pBuf
 = 
pbU§Buf
;

2699 
pdwVÆ
 = (
__IO
 
uöt16_t
 *)(
Ba£Addr
 + 0x400U + ((
uöt32_t
)
wPMABufAddr
 * 
PMA_ACCESS
));

2701 
i
 = 
n
; i != 0U; i--)

2703 
ãmp1
 = *
pBuf
;

2704 
pBuf
++;

2705 
ãmp2
 = 
ãmp1
 | ((
uöt16_t
)((uöt16_tË*
pBuf
 << 8));

2706 *
pdwVÆ
 = (
uöt16_t
)
ãmp2
;

2707 
pdwVÆ
++;

2709 #i‡
PMA_ACCESS
 > 1U

2710 
pdwVÆ
++;

2713 
pBuf
++;

2715 
	}
}

2725 
	$USB_RódPMA
(
USB_Ty≥Def
 *
USBx
, 
uöt8_t
 *
pbU§Buf
, 
uöt16_t
 
wPMABufAddr
, uöt16_à
wNByãs
)

2727 
uöt32_t
 
n
 = (uöt32_t)
wNByãs
 >> 1;

2728 
uöt32_t
 
Ba£Addr
 = (uöt32_t)
USBx
;

2729 
uöt32_t
 
i
, 
ãmp
;

2730 
__IO
 
uöt16_t
 *
pdwVÆ
;

2731 
uöt8_t
 *
pBuf
 = 
pbU§Buf
;

2733 
pdwVÆ
 = (
__IO
 
uöt16_t
 *)(
Ba£Addr
 + 0x400U + ((
uöt32_t
)
wPMABufAddr
 * 
PMA_ACCESS
));

2735 
i
 = 
n
; i != 0U; i--)

2737 
ãmp
 = *(
__IO
 
uöt16_t
 *)
pdwVÆ
;

2738 
pdwVÆ
++;

2739 *
pBuf
 = (
uöt8_t
)((
ãmp
 >> 0) & 0xFFU);

2740 
pBuf
++;

2741 *
pBuf
 = (
uöt8_t
)((
ãmp
 >> 8) & 0xFFU);

2742 
pBuf
++;

2744 #i‡
PMA_ACCESS
 > 1U

2745 
pdwVÆ
++;

2749 i‡((
wNByãs
 % 2U) != 0U)

2751 
ãmp
 = *
pdwVÆ
;

2752 *
pBuf
 = (
uöt8_t
)((
ãmp
 >> 0) & 0xFFU);

2754 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Class\CDC\Inc\usbd_cdc.h

21 #i‚de‡
__USB_CDC_H


22 
	#__USB_CDC_H


	)

24 #ifde‡
__˝lu•lus


29 
	~"usbd_i‹eq.h
"

48 #i‚de‡
CDC_HS_BINTERVAL


49 
	#CDC_HS_BINTERVAL
 0x10U

	)

52 #i‚de‡
CDC_FS_BINTERVAL


53 
	#CDC_FS_BINTERVAL
 0x10U

	)

57 
	#CDC_DATA_HS_MAX_PACKET_SIZE
 64U

	)

58 
	#CDC_DATA_FS_MAX_PACKET_SIZE
 64U

	)

59 
	#CDC_CMD_PACKET_SIZE
 8U

	)

61 
	#USB_CDC_CONFIG_DESC_SIZ
 67U

	)

62 
	#CDC_DATA_HS_IN_PACKET_SIZE
 
CDC_DATA_HS_MAX_PACKET_SIZE


	)

63 
	#CDC_DATA_HS_OUT_PACKET_SIZE
 
CDC_DATA_HS_MAX_PACKET_SIZE


	)

65 
	#CDC_DATA_FS_IN_PACKET_SIZE
 
CDC_DATA_FS_MAX_PACKET_SIZE


	)

66 
	#CDC_DATA_FS_OUT_PACKET_SIZE
 
CDC_DATA_FS_MAX_PACKET_SIZE


	)

71 
	#CDC_SEND_ENCAPSULATED_COMMAND
 0x00U

	)

72 
	#CDC_GET_ENCAPSULATED_RESPONSE
 0x01U

	)

73 
	#CDC_SET_COMM_FEATURE
 0x02U

	)

74 
	#CDC_GET_COMM_FEATURE
 0x03U

	)

75 
	#CDC_CLEAR_COMM_FEATURE
 0x04U

	)

76 
	#CDC_SET_LINE_CODING
 0x20U

	)

77 
	#CDC_GET_LINE_CODING
 0x21U

	)

78 
	#CDC_SET_CONTROL_LINE_STATE
 0x22U

	)

79 
	#CDC_SEND_BREAK
 0x23U

	)

95 
uöt32_t
 
bôøã
;

96 
uöt8_t
 
f‹m©
;

97 
uöt8_t
 
∑rôyty≥
;

98 
uöt8_t
 
d©©y≥
;

99 } 
	tUSBD_CDC_LöeCodögTy≥Def
;

101 
	s_USBD_CDC_Itf


103 
öt8_t
 (* 
Inô
)();

104 
öt8_t
 (* 
DeInô
)();

105 
öt8_t
 (* 
C⁄åﬁ
)(
uöt8_t
 
cmd
, uöt8_à*
pbuf
, 
uöt16_t
 
Àngth
);

106 
öt8_t
 (* 
Re˚ive
)(
uöt8_t
 *
Buf
, 
uöt32_t
 *
Lí
);

108 } 
	tUSBD_CDC_ItfTy≥Def
;

113 
uöt32_t
 
d©a
[
CDC_DATA_HS_MAX_PACKET_SIZE
 / 4U];

114 
uöt8_t
 
CmdOpCode
;

115 
uöt8_t
 
CmdLígth
;

116 
uöt8_t
 *
RxBuf„r
;

117 
uöt8_t
 *
TxBuf„r
;

118 
uöt32_t
 
RxLígth
;

119 
uöt32_t
 
TxLígth
;

121 
__IO
 
uöt32_t
 
TxSèã
;

122 
__IO
 
uöt32_t
 
RxSèã
;

124 
	tUSBD_CDC_H™dÀTy≥Def
;

140 
USBD_CœssTy≥Def
 
USBD_CDC
;

141 
	#USBD_CDC_CLASS
 &
USBD_CDC


	)

149 
uöt8_t
 
USBD_CDC_Regi°îI¡îÁ˚
(
USBD_H™dÀTy≥Def
 *
pdev
,

150 
USBD_CDC_ItfTy≥Def
 *
f›s
);

152 
uöt8_t
 
USBD_CDC_SëTxBuf„r
(
USBD_H™dÀTy≥Def
 *
pdev
,

153 
uöt8_t
 *
pbuff
,

154 
uöt16_t
 
Àngth
);

156 
uöt8_t
 
USBD_CDC_SëRxBuf„r
(
USBD_H™dÀTy≥Def
 *
pdev
,

157 
uöt8_t
 *
pbuff
);

159 
uöt8_t
 
USBD_CDC_Re˚ivePackë
(
USBD_H™dÀTy≥Def
 *
pdev
);

161 
uöt8_t
 
USBD_CDC_TønsmôPackë
(
USBD_H™dÀTy≥Def
 *
pdev
);

163 
uöt8_t
 
USBD_CDC_Inô
(
USBD_H™dÀTy≥Def
 *
pdev
, uöt8_à
cfgidx
);

164 
uöt8_t
 
USBD_CDC_DeInô
(
USBD_H™dÀTy≥Def
 *
pdev
, uöt8_à
cfgidx
);

165 
uöt8_t
 
USBD_CDC_Sëup
(
USBD_H™dÀTy≥Def
 *
pdev
, 
USBD_SëupReqTy≥def
 *
ªq
);

166 
uöt8_t
 
USBD_CDC_D©aIn
(
USBD_H™dÀTy≥Def
 *
pdev
, uöt8_à
ïnum
);

167 
uöt8_t
 
USBD_CDC_D©aOut
(
USBD_H™dÀTy≥Def
 *
pdev
, uöt8_à
ïnum
);

168 
uöt8_t
 
USBD_CDC_EP0_RxRódy
(
USBD_H™dÀTy≥Def
 *
pdev
);

175 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Class\CDC\Src\usbd_cdc.c

59 
	~"usbd_cdc.h
"

60 
	~"usbd_˘Ãeq.h
"

61 
	~"°m32f1xx_hÆ.h
"

101 
uöt32_t
 
	gmem_1
[((
USBD_CDC_H™dÀTy≥Def
)/4)+1];

104 
uöt8_t
 
USBD_CDC_Inô
(
USBD_H™dÀTy≥Def
 *
pdev
,

105 
uöt8_t
 
cfgidx
);

107 
uöt8_t
 
USBD_CDC_DeInô
(
USBD_H™dÀTy≥Def
 *
pdev
,

108 
uöt8_t
 
cfgidx
);

110 
uöt8_t
 
USBD_CDC_Sëup
(
USBD_H™dÀTy≥Def
 *
pdev
,

111 
USBD_SëupReqTy≥def
 *
ªq
);

113 
uöt8_t
 
USBD_CDC_D©aIn
(
USBD_H™dÀTy≥Def
 *
pdev
,

114 
uöt8_t
 
ïnum
);

116 
uöt8_t
 
USBD_CDC_D©aOut
(
USBD_H™dÀTy≥Def
 *
pdev
,

117 
uöt8_t
 
ïnum
);

119 
uöt8_t
 
USBD_CDC_EP0_RxRódy
(
USBD_H™dÀTy≥Def
 *
pdev
);

121 
uöt8_t
 *
USBD_CDC_GëHSCfgDesc
(
uöt16_t
 *
Àngth
);

123 
uöt8_t
 *
USBD_CDC_GëDevi˚QuÆifõrDes¸ùt‹
(
uöt16_t
 *
Àngth
);

126 
__ALIGN_BEGIN
 c⁄° 
uöt8_t
 
	gUSBD_CDC_Devi˚QuÆifõrDesc
[
USB_LEN_DEV_QUALIFIER_DESC
] 
	g__ALIGN_END
 =

128 
USB_LEN_DEV_QUALIFIER_DESC
,

129 
USB_DESC_TYPE_DEVICE_QUALIFIER
,

150 
USBD_CœssTy≥Def
 
	gUSBD_CDC
 =

152 
USBD_CDC_Inô
,

153 
USBD_CDC_DeInô
,

154 
USBD_CDC_Sëup
,

155 
NULL
,

156 
USBD_CDC_EP0_RxRódy
,

157 
USBD_CDC_D©aIn
,

158 
USBD_CDC_D©aOut
,

159 
NULL
,

160 
NULL
,

161 
NULL
,

162 
USBD_CDC_GëHSCfgDesc
,

163 
USBD_CDC_GëHSCfgDesc
,

164 
USBD_CDC_GëHSCfgDesc
,

165 
USBD_CDC_GëHSCfgDesc
,

169 
__ALIGN_BEGIN
 c⁄° 
uöt8_t
 
	gUSBD_CDC_CfgHSDesc
[
USB_CDC_CONFIG_DESC_SIZ
] 
	g__ALIGN_END
 =

190 
uöt8_t
 
	$USBD_CDC_Inô
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
cfgidx
)

192 
uöt8_t
 
ªt
 = 0U;

193 
USBD_CDC_H™dÀTy≥Def
 *
hcdc
;

195 i‡(
pdev
->
dev_•ìd
 =
USBD_SPEED_HIGH
)

198 
	`USBD_LL_O≥nEP
(
pdev
, 
CDC_IN_EP
, 
USBD_EP_TYPE_BULK
,

199 
CDC_DATA_HS_IN_PACKET_SIZE
);

201 
pdev
->
ï_ö
[
CDC_IN_EP
 & 0xFU].
is_u£d
 = 1U;

204 
	`USBD_LL_O≥nEP
(
pdev
, 
CDC_OUT_EP
, 
USBD_EP_TYPE_BULK
,

205 
CDC_DATA_HS_OUT_PACKET_SIZE
);

207 
pdev
->
ï_out
[
CDC_OUT_EP
 & 0xFU].
is_u£d
 = 1U;

213 
	`USBD_LL_O≥nEP
(
pdev
, 
CDC_IN_EP
, 
USBD_EP_TYPE_BULK
,

214 
CDC_DATA_FS_IN_PACKET_SIZE
);

216 
pdev
->
ï_ö
[
CDC_IN_EP
 & 0xFU].
is_u£d
 = 1U;

219 
	`USBD_LL_O≥nEP
(
pdev
, 
CDC_OUT_EP
, 
USBD_EP_TYPE_BULK
,

220 
CDC_DATA_FS_OUT_PACKET_SIZE
);

222 
pdev
->
ï_out
[
CDC_OUT_EP
 & 0xFU].
is_u£d
 = 1U;

225 
	`USBD_LL_O≥nEP
(
pdev
, 
CDC_CMD_EP
, 
USBD_EP_TYPE_INTR
, 
CDC_CMD_PACKET_SIZE
);

226 
pdev
->
ï_ö
[
CDC_CMD_EP
 & 0xFU].
is_u£d
 = 1U;

228 
pdev
->
pCœssD©a
 = 
mem_1
;

230 i‡(
pdev
->
pCœssD©a
 =
NULL
)

232 
ªt
 = 1U;

236 
hcdc
 = (
USBD_CDC_H™dÀTy≥Def
 *Ë
pdev
->
pCœssD©a
;

239 ((
USBD_CDC_ItfTy≥Def
 *)
pdev
->
pU£rD©a
)->
	`Inô
();

242 
hcdc
->
TxSèã
 = 0U;

243 
hcdc
->
RxSèã
 = 0U;

245 i‡(
pdev
->
dev_•ìd
 =
USBD_SPEED_HIGH
)

248 
	`USBD_LL_Pª∑ªRe˚ive
(
pdev
, 
CDC_OUT_EP
, 
hcdc
->
RxBuf„r
,

249 
CDC_DATA_HS_OUT_PACKET_SIZE
);

254 
	`USBD_LL_Pª∑ªRe˚ive
(
pdev
, 
CDC_OUT_EP
, 
hcdc
->
RxBuf„r
,

255 
CDC_DATA_FS_OUT_PACKET_SIZE
);

258  
ªt
;

259 
	}
}

268 
uöt8_t
 
	$USBD_CDC_DeInô
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
cfgidx
)

270 
uöt8_t
 
ªt
 = 0U;

273 
	`USBD_LL_Clo£EP
(
pdev
, 
CDC_IN_EP
);

274 
pdev
->
ï_ö
[
CDC_IN_EP
 & 0xFU].
is_u£d
 = 0U;

277 
	`USBD_LL_Clo£EP
(
pdev
, 
CDC_OUT_EP
);

278 
pdev
->
ï_out
[
CDC_OUT_EP
 & 0xFU].
is_u£d
 = 0U;

281 
	`USBD_LL_Clo£EP
(
pdev
, 
CDC_CMD_EP
);

282 
pdev
->
ï_ö
[
CDC_CMD_EP
 & 0xFU].
is_u£d
 = 0U;

285 i‡(
pdev
->
pCœssD©a
 !
NULL
)

287 ((
USBD_CDC_ItfTy≥Def
 *)
pdev
->
pU£rD©a
)->
	`DeInô
();

288 
	`USBD_‰ì
(
pdev
->
pCœssD©a
);

289 
pdev
->
pCœssD©a
 = 
NULL
;

292  
ªt
;

293 
	}
}

302 
uöt8_t
 
	$USBD_CDC_Sëup
(
USBD_H™dÀTy≥Def
 *
pdev
,

303 
USBD_SëupReqTy≥def
 *
ªq
)

305 
USBD_CDC_H™dÀTy≥Def
 *
hcdc
 = (USBD_CDC_H™dÀTy≥De‡*Ë
pdev
->
pCœssD©a
;

306 
uöt8_t
 
iÁ…
 = 0U;

307 
uöt16_t
 
°©us_öfo
 = 0U;

308 
uöt8_t
 
ªt
 = 
USBD_OK
;

310 
ªq
->
bmReque°
 & 
USB_REQ_TYPE_MASK
)

312 
USB_REQ_TYPE_CLASS
 :

313 i‡(
ªq
->
wLígth
)

315 i‡(
ªq
->
bmReque°
 & 0x80U)

317 ((
USBD_CDC_ItfTy≥Def
 *)
pdev
->
pU£rD©a
)->
	`C⁄åﬁ
(
ªq
->
bReque°
,

318 (
uöt8_t
 *)(*)
hcdc
->
d©a
,

319 
ªq
->
wLígth
);

321 
	`USBD_CéSídD©a
(
pdev
, (
uöt8_t
 *)(*)
hcdc
->
d©a
, 
ªq
->
wLígth
);

325 
hcdc
->
CmdOpCode
 = 
ªq
->
bReque°
;

326 
hcdc
->
CmdLígth
 = (
uöt8_t
)
ªq
->
wLígth
;

328 
	`USBD_CéPª∑ªRx
(
pdev
, (
uöt8_t
 *)(*)
hcdc
->
d©a
, 
ªq
->
wLígth
);

333 ((
USBD_CDC_ItfTy≥Def
 *)
pdev
->
pU£rD©a
)->
	`C⁄åﬁ
(
ªq
->
bReque°
,

334 (
uöt8_t
 *)(*)
ªq
, 0U);

338 
USB_REQ_TYPE_STANDARD
:

339 
ªq
->
bReque°
)

341 
USB_REQ_GET_STATUS
:

342 i‡(
pdev
->
dev_°©e
 =
USBD_STATE_CONFIGURED
)

344 
	`USBD_CéSídD©a
(
pdev
, (
uöt8_t
 *)(*)&
°©us_öfo
, 2U);

348 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

349 
ªt
 = 
USBD_FAIL
;

353 
USB_REQ_GET_INTERFACE
:

354 i‡(
pdev
->
dev_°©e
 =
USBD_STATE_CONFIGURED
)

356 
	`USBD_CéSídD©a
(
pdev
, &
iÁ…
, 1U);

360 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

361 
ªt
 = 
USBD_FAIL
;

365 
USB_REQ_SET_INTERFACE
:

366 i‡(
pdev
->
dev_°©e
 !
USBD_STATE_CONFIGURED
)

368 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

369 
ªt
 = 
USBD_FAIL
;

374 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

375 
ªt
 = 
USBD_FAIL
;

381 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

382 
ªt
 = 
USBD_FAIL
;

386  
ªt
;

387 
	}
}

396 
uöt8_t
 
	$USBD_CDC_D©aIn
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ïnum
)

398 
USBD_CDC_H™dÀTy≥Def
 *
hcdc
 = (USBD_CDC_H™dÀTy≥De‡*)
pdev
->
pCœssD©a
;

399 
PCD_H™dÀTy≥Def
 *
hpcd
 = 
pdev
->
pD©a
;

401 i‡(
pdev
->
pCœssD©a
 !
NULL
)

403 i‡((
pdev
->
ï_ö
[
ïnum
].
tŸÆ_Àngth
 > 0UË&& (’dev->ï_ö[ïnum].tŸÆ_Àngth % 
hpcd
->
IN_ï
[ïnum].
max∑ckë
) == 0U))

406 
pdev
->
ï_ö
[
ïnum
].
tŸÆ_Àngth
 = 0U;

409 
	`USBD_LL_Tønsmô
(
pdev
, 
ïnum
, 
NULL
, 0U);

413 
hcdc
->
TxSèã
 = 0U;

415  
USBD_OK
;

419  
USBD_FAIL
;

421 
	}
}

430 
uöt8_t
 
	$USBD_CDC_D©aOut
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ïnum
)

432 
USBD_CDC_H™dÀTy≥Def
 *
hcdc
 = (USBD_CDC_H™dÀTy≥De‡*Ë
pdev
->
pCœssD©a
;

435 
hcdc
->
RxLígth
 = 
	`USBD_LL_GëRxD©aSize
(
pdev
, 
ïnum
);

439 i‡(
pdev
->
pCœssD©a
 !
NULL
)

441 ((
USBD_CDC_ItfTy≥Def
 *)
pdev
->
pU£rD©a
)->
	`Re˚ive
(
hcdc
->
RxBuf„r
, &hcdc->
RxLígth
);

443  
USBD_OK
;

447  
USBD_FAIL
;

449 
	}
}

457 
uöt8_t
 
	$USBD_CDC_EP0_RxRódy
(
USBD_H™dÀTy≥Def
 *
pdev
)

459 
USBD_CDC_H™dÀTy≥Def
 *
hcdc
 = (USBD_CDC_H™dÀTy≥De‡*Ë
pdev
->
pCœssD©a
;

461 i‡((
pdev
->
pU£rD©a
 !
NULL
Ë&& (
hcdc
->
CmdOpCode
 != 0xFFU))

463 ((
USBD_CDC_ItfTy≥Def
 *)
pdev
->
pU£rD©a
)->
	`C⁄åﬁ
(
hcdc
->
CmdOpCode
,

464 (
uöt8_t
 *)(*)
hcdc
->
d©a
,

465 (
uöt16_t
)
hcdc
->
CmdLígth
);

466 
hcdc
->
CmdOpCode
 = 0xFFU;

469  
USBD_OK
;

470 
	}
}

479 
uöt8_t
 *
	$USBD_CDC_GëHSCfgDesc
(
uöt16_t
 *
Àngth
)

482 *
Àngth
 = (
USBD_CDC_CfgHSDesc
);

483  (
uöt8_t
 *Ë
USBD_CDC_CfgHSDesc
;

484 
	}
}

493 
uöt8_t
 *
	$USBD_CDC_GëDevi˚QuÆifõrDes¸ùt‹
(
uöt16_t
 *
Àngth
)

496 *
Àngth
 = (
USBD_CDC_Devi˚QuÆifõrDesc
);

497  (
uöt8_t
 *Ë
USBD_CDC_Devi˚QuÆifõrDesc
;

498 
	}
}

506 
uöt8_t
 
	$USBD_CDC_Regi°îI¡îÁ˚
(
USBD_H™dÀTy≥Def
 *
pdev
,

507 
USBD_CDC_ItfTy≥Def
 *
f›s
)

509 
uöt8_t
 
ªt
 = 
USBD_FAIL
;

511 i‡(
f›s
 !
NULL
)

513 
pdev
->
pU£rD©a
 = 
f›s
;

514 
ªt
 = 
USBD_OK
;

517  
ªt
;

518 
	}
}

526 
uöt8_t
 
	$USBD_CDC_SëTxBuf„r
(
USBD_H™dÀTy≥Def
 *
pdev
,

527 
uöt8_t
 *
pbuff
,

528 
uöt16_t
 
Àngth
)

530 
USBD_CDC_H™dÀTy≥Def
 *
hcdc
 = (USBD_CDC_H™dÀTy≥De‡*Ë
pdev
->
pCœssD©a
;

532 
hcdc
->
TxBuf„r
 = 
pbuff
;

533 
hcdc
->
TxLígth
 = 
Àngth
;

535  
USBD_OK
;

536 
	}
}

545 
uöt8_t
 
	$USBD_CDC_SëRxBuf„r
(
USBD_H™dÀTy≥Def
 *
pdev
,

546 
uöt8_t
 *
pbuff
)

548 
USBD_CDC_H™dÀTy≥Def
 *
hcdc
 = (USBD_CDC_H™dÀTy≥De‡*Ë
pdev
->
pCœssD©a
;

550 
hcdc
->
RxBuf„r
 = 
pbuff
;

552  
USBD_OK
;

553 
	}
}

561 
uöt8_t
 
	$USBD_CDC_TønsmôPackë
(
USBD_H™dÀTy≥Def
 *
pdev
)

563 
USBD_CDC_H™dÀTy≥Def
 *
hcdc
 = (USBD_CDC_H™dÀTy≥De‡*Ë
pdev
->
pCœssD©a
;

565 i‡(
pdev
->
pCœssD©a
 !
NULL
)

567 i‡(
hcdc
->
TxSèã
 == 0U)

570 
hcdc
->
TxSèã
 = 1U;

573 
pdev
->
ï_ö
[
CDC_IN_EP
 & 0xFU].
tŸÆ_Àngth
 = 
hcdc
->
TxLígth
;

576 
	`USBD_LL_Tønsmô
(
pdev
, 
CDC_IN_EP
, 
hcdc
->
TxBuf„r
,

577 (
uöt16_t
)
hcdc
->
TxLígth
);

579  
USBD_OK
;

583  
USBD_BUSY
;

588  
USBD_FAIL
;

590 
	}
}

599 
uöt8_t
 
	$USBD_CDC_Re˚ivePackë
(
USBD_H™dÀTy≥Def
 *
pdev
)

601 
USBD_CDC_H™dÀTy≥Def
 *
hcdc
 = (USBD_CDC_H™dÀTy≥De‡*Ë
pdev
->
pCœssD©a
;

604 i‡(
pdev
->
pCœssD©a
 !
NULL
)

606 i‡(
pdev
->
dev_•ìd
 =
USBD_SPEED_HIGH
)

609 
	`USBD_LL_Pª∑ªRe˚ive
(
pdev
,

610 
CDC_OUT_EP
,

611 
hcdc
->
RxBuf„r
,

612 
CDC_DATA_HS_OUT_PACKET_SIZE
);

617 
	`USBD_LL_Pª∑ªRe˚ive
(
pdev
,

618 
CDC_OUT_EP
,

619 
hcdc
->
RxBuf„r
,

620 
CDC_DATA_FS_OUT_PACKET_SIZE
);

622  
USBD_OK
;

626  
USBD_FAIL
;

628 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Class\MSC\Inc\usbd_msc.h

21 #i‚de‡
__USBD_MSC_H


22 
	#__USBD_MSC_H


	)

24 #ifde‡
__˝lu•lus


29 
	~"usbd_msc_bŸ.h
"

30 
	~"usbd_msc_scsi.h
"

31 
	~"usbd_i‹eq.h
"

47 #i‚de‡
MSC_MEDIA_PACKET


48 
	#MSC_MEDIA_PACKET
 512U

	)

51 
	#MSC_MAX_FS_PACKET
 0x40U

	)

52 
	#MSC_MAX_HS_PACKET
 0x200U

	)

54 
	#BOT_GET_MAX_LUN
 0xFE

	)

55 
	#BOT_RESET
 0xFF

	)

56 
	#USB_MSC_CONFIG_DESC_SIZ
 32

	)

59 
	#MSC_EPIN_ADDR
 0x81U

	)

60 
	#MSC_EPOUT_ADDR
 0x01U

	)

69 
	s_USBD_STORAGE


71 
öt8_t
 (* 
Inô
)(
uöt8_t
 
lun
);

72 
öt8_t
 (* 
GëC≠acôy
)(
uöt8_t
 
lun
, 
uöt32_t
 *
block_num
, 
uöt16_t
 *
block_size
);

73 
öt8_t
 (* 
IsRódy
)(
uöt8_t
 
lun
);

74 
öt8_t
 (* 
IsWrôePrŸe˘ed
)(
uöt8_t
 
lun
);

75 
öt8_t
 (* 
Ród
)(
uöt8_t
 
lun
, uöt8_à*
buf
, 
uöt32_t
 
blk_addr
, 
uöt16_t
 
blk_Àn
);

76 
öt8_t
 (* 
Wrôe
)(
uöt8_t
 
lun
, uöt8_à*
buf
, 
uöt32_t
 
blk_addr
, 
uöt16_t
 
blk_Àn
);

77 
öt8_t
 (* 
GëMaxLun
)();

78 
öt8_t
 *
pInquúy
;

80 } 
	tUSBD_St‹ageTy≥Def
;

85 
uöt32_t
 
max_lun
;

86 
uöt32_t
 
öãrÁ˚
;

87 
uöt8_t
 
bŸ_°©e
;

88 
uöt8_t
 
bŸ_°©us
;

89 
uöt16_t
 
bŸ_d©a_Àngth
;

90 
uöt8_t
 
bŸ_d©a
[
MSC_MEDIA_PACKET
];

91 
USBD_MSC_BOT_CBWTy≥Def
 
cbw
;

92 
USBD_MSC_BOT_CSWTy≥Def
 
csw
;

94 
USBD_SCSI_Sí£Ty≥Def
 
scsi_£n£
 [
SENSE_LIST_DEEPTH
];

95 
uöt8_t
 
scsi_£n£_hód
;

96 
uöt8_t
 
scsi_£n£_èû
;

98 
uöt16_t
 
scsi_blk_size
;

99 
uöt32_t
 
scsi_blk_nbr
;

101 
uöt32_t
 
scsi_blk_addr
;

102 
uöt32_t
 
scsi_blk_Àn
;

104 
	tUSBD_MSC_BOT_H™dÀTy≥Def
;

107 
USBD_CœssTy≥Def
 
USBD_MSC
;

108 
	#USBD_MSC_CLASS
 &
USBD_MSC


	)

110 
uöt8_t
 
USBD_MSC_Regi°îSt‹age
(
USBD_H™dÀTy≥Def
 *
pdev
,

111 
USBD_St‹ageTy≥Def
 *
f›s
);

113 
uöt8_t
 
USBD_MSC_Inô
(
USBD_H™dÀTy≥Def
 *
pdev
, uöt8_à
cfgidx
);

114 
uöt8_t
 
USBD_MSC_DeInô
(
USBD_H™dÀTy≥Def
 *
pdev
,uöt8_à
cfgidx
);

115 
uöt8_t
 
USBD_MSC_Sëup
(
USBD_H™dÀTy≥Def
 *
pdev
, 
USBD_SëupReqTy≥def
 *
ªq
);

116 
uöt8_t
 
USBD_MSC_D©aIn
(
USBD_H™dÀTy≥Def
 *
pdev
, uöt8_à
ïnum
);

117 
uöt8_t
 
USBD_MSC_D©aOut
(
USBD_H™dÀTy≥Def
 *
pdev
, uöt8_à
ïnum
);

128 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Class\MSC\Inc\usbd_msc_bot.h

21 #i‚de‡
__USBD_MSC_BOT_H


22 
	#__USBD_MSC_BOT_H


	)

24 #ifde‡
__˝lu•lus


29 
	~"usbd_c‹e.h
"

44 
	#USBD_BOT_IDLE
 0U

	)

45 
	#USBD_BOT_DATA_OUT
 1U

	)

46 
	#USBD_BOT_DATA_IN
 2U

	)

47 
	#USBD_BOT_LAST_DATA_IN
 3U

	)

48 
	#USBD_BOT_SEND_DATA
 4U

	)

49 
	#USBD_BOT_NO_DATA
 5U

	)

51 
	#USBD_BOT_CBW_SIGNATURE
 0x43425355U

	)

52 
	#USBD_BOT_CSW_SIGNATURE
 0x53425355U

	)

53 
	#USBD_BOT_CBW_LENGTH
 31U

	)

54 
	#USBD_BOT_CSW_LENGTH
 13U

	)

55 
	#USBD_BOT_MAX_DATA
 256U

	)

58 
	#USBD_CSW_CMD_PASSED
 0x00U

	)

59 
	#USBD_CSW_CMD_FAILED
 0x01U

	)

60 
	#USBD_CSW_PHASE_ERROR
 0x02U

	)

63 
	#USBD_BOT_STATUS_NORMAL
 0U

	)

64 
	#USBD_BOT_STATUS_RECOVERY
 1U

	)

65 
	#USBD_BOT_STATUS_ERROR
 2U

	)

68 
	#USBD_DIR_IN
 0U

	)

69 
	#USBD_DIR_OUT
 1U

	)

70 
	#USBD_BOTH_DIR
 2U

	)

82 
uöt32_t
 
dSig«tuª
;

83 
uöt32_t
 
dTag
;

84 
uöt32_t
 
dD©aLígth
;

85 
uöt8_t
 
bmFœgs
;

86 
uöt8_t
 
bLUN
;

87 
uöt8_t
 
bCBLígth
;

88 
uöt8_t
 
CB
[16];

89 
uöt8_t
 
Re£rvedF‹Align
;

91 
	tUSBD_MSC_BOT_CBWTy≥Def
;

96 
uöt32_t
 
dSig«tuª
;

97 
uöt32_t
 
dTag
;

98 
uöt32_t
 
dD©aResidue
;

99 
uöt8_t
 
bSètus
;

100 
uöt8_t
 
Re£rvedF‹Align
[3];

102 
	tUSBD_MSC_BOT_CSWTy≥Def
;

119 
MSC_BOT_Inô
(
USBD_H™dÀTy≥Def
 *
pdev
);

120 
MSC_BOT_Re£t
(
USBD_H™dÀTy≥Def
 *
pdev
);

121 
MSC_BOT_DeInô
(
USBD_H™dÀTy≥Def
 *
pdev
);

122 
MSC_BOT_D©aIn
(
USBD_H™dÀTy≥Def
 *
pdev
,

123 
uöt8_t
 
ïnum
);

125 
MSC_BOT_D©aOut
(
USBD_H™dÀTy≥Def
 *
pdev
,

126 
uöt8_t
 
ïnum
);

128 
MSC_BOT_SídCSW
(
USBD_H™dÀTy≥Def
 *
pdev
,

129 
uöt8_t
 
CSW_Sètus
);

131 
MSC_BOT_C∂CÃFótuª
(
USBD_H™dÀTy≥Def
 *
pdev
,

132 
uöt8_t
 
ïnum
);

137 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Class\MSC\Inc\usbd_msc_data.h

21 #i‚de‡
__USBD_MSC_DATA_H


22 
	#__USBD_MSC_DATA_H


	)

24 #ifde‡
__˝lu•lus


29 
	~"usbd_c⁄f.h
"

43 
	#MODE_SENSE6_LEN
 8U

	)

44 
	#MODE_SENSE10_LEN
 8U

	)

45 
	#LENGTH_INQUIRY_PAGE00
 7U

	)

46 
	#LENGTH_FORMAT_CAPACITIES
 20U

	)

73 c⁄° 
uöt8_t
 
MSC_Page00_Inquúy_D©a
[];

74 c⁄° 
uöt8_t
 
MSC_Mode_Sí£6_d©a
[];

75 c⁄° 
uöt8_t
 
MSC_Mode_Sí£10_d©a
[] ;

89 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Class\MSC\Inc\usbd_msc_scsi.h

21 #i‚de‡
__USBD_MSC_SCSI_H


22 
	#__USBD_MSC_SCSI_H


	)

24 #ifde‡
__˝lu•lus


29 
	~"usbd_def.h
"

44 
	#SENSE_LIST_DEEPTH
 4U

	)

47 
	#SCSI_FORMAT_UNIT
 0x04U

	)

48 
	#SCSI_INQUIRY
 0x12U

	)

49 
	#SCSI_MODE_SELECT6
 0x15U

	)

50 
	#SCSI_MODE_SELECT10
 0x55U

	)

51 
	#SCSI_MODE_SENSE6
 0x1AU

	)

52 
	#SCSI_MODE_SENSE10
 0x5AU

	)

53 
	#SCSI_ALLOW_MEDIUM_REMOVAL
 0x1EU

	)

54 
	#SCSI_READ6
 0x08U

	)

55 
	#SCSI_READ10
 0x28U

	)

56 
	#SCSI_READ12
 0xA8U

	)

57 
	#SCSI_READ16
 0x88U

	)

59 
	#SCSI_READ_CAPACITY10
 0x25U

	)

60 
	#SCSI_READ_CAPACITY16
 0x9EU

	)

62 
	#SCSI_REQUEST_SENSE
 0x03U

	)

63 
	#SCSI_START_STOP_UNIT
 0x1BU

	)

64 
	#SCSI_TEST_UNIT_READY
 0x00U

	)

65 
	#SCSI_WRITE6
 0x0AU

	)

66 
	#SCSI_WRITE10
 0x2AU

	)

67 
	#SCSI_WRITE12
 0xAAU

	)

68 
	#SCSI_WRITE16
 0x8AU

	)

70 
	#SCSI_VERIFY10
 0x2FU

	)

71 
	#SCSI_VERIFY12
 0xAFU

	)

72 
	#SCSI_VERIFY16
 0x8FU

	)

74 
	#SCSI_SEND_DIAGNOSTIC
 0x1DU

	)

75 
	#SCSI_READ_FORMAT_CAPACITIES
 0x23U

	)

77 
	#NO_SENSE
 0U

	)

78 
	#RECOVERED_ERROR
 1U

	)

79 
	#NOT_READY
 2U

	)

80 
	#MEDIUM_ERROR
 3U

	)

81 
	#HARDWARE_ERROR
 4U

	)

82 
	#ILLEGAL_REQUEST
 5U

	)

83 
	#UNIT_ATTENTION
 6U

	)

84 
	#DATA_PROTECT
 7U

	)

85 
	#BLANK_CHECK
 8U

	)

86 
	#VENDOR_SPECIFIC
 9U

	)

87 
	#COPY_ABORTED
 10U

	)

88 
	#ABORTED_COMMAND
 11U

	)

89 
	#VOLUME_OVERFLOW
 13U

	)

90 
	#MISCOMPARE
 14U

	)

93 
	#INVALID_CDB
 0x20U

	)

94 
	#INVALID_FIELED_IN_COMMAND
 0x24U

	)

95 
	#PARAMETER_LIST_LENGTH_ERROR
 0x1AU

	)

96 
	#INVALID_FIELD_IN_PARAMETER_LIST
 0x26U

	)

97 
	#ADDRESS_OUT_OF_RANGE
 0x21U

	)

98 
	#MEDIUM_NOT_PRESENT
 0x3AU

	)

99 
	#MEDIUM_HAVE_CHANGED
 0x28U

	)

100 
	#WRITE_PROTECTED
 0x27U

	)

101 
	#UNRECOVERED_READ_ERROR
 0x11U

	)

102 
	#WRITE_FAULT
 0x03U

	)

104 
	#READ_FORMAT_CAPACITY_DATA_LEN
 0x0CU

	)

105 
	#READ_CAPACITY10_DATA_LEN
 0x08U

	)

106 
	#MODE_SENSE10_DATA_LEN
 0x08U

	)

107 
	#MODE_SENSE6_DATA_LEN
 0x04U

	)

108 
	#REQUEST_SENSE_DATA_LEN
 0x12U

	)

109 
	#STANDARD_INQUIRY_DATA_LEN
 0x24U

	)

110 
	#BLKVFY
 0x04U

	)

112 
uöt8_t
 
Page00_Inquúy_D©a
[];

113 
uöt8_t
 
Sènd¨d_Inquúy_D©a
[];

114 
uöt8_t
 
Sènd¨d_Inquúy_D©a2
[];

115 
uöt8_t
 
Mode_Sí£6_d©a
[];

116 
uöt8_t
 
Mode_Sí£10_d©a
[];

117 
uöt8_t
 
Scsi_Sí£_D©a
[];

118 
uöt8_t
 
RódC≠acôy10_D©a
[];

119 
uöt8_t
 
RódF‹m©C≠acôy_D©a
 [];

129 
	s_SENSE_ITEM


131 
	gSkey
;

134 
	s_ASCs


136 
	gASC
;

137 
	gASCQ
;

138 } 
	gb
;

139 
uöt8_t
 
	gASC
;

140 *
	gpD©a
;

141 } 
	gw
;

142 } 
	tUSBD_SCSI_Sí£Ty≥Def
;

165 
öt8_t
 
SCSI_Pro˚ssCmd
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à*
cmd
);

167 
SCSI_Sí£Code
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à
sKey
,

168 
uöt8_t
 
ASC
);

174 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Class\MSC\Src\usbd_msc.c

42 
	~"usbd_msc.h
"

44 
uöt32_t
 
	gmem_2
[((
USBD_MSC_BOT_H™dÀTy≥Def
)/4)+1];

83 
uöt8_t
 
USBD_MSC_Inô
(
USBD_H™dÀTy≥Def
 *
pdev
, uöt8_à
cfgidx
);

84 
uöt8_t
 
USBD_MSC_DeInô
(
USBD_H™dÀTy≥Def
 *
pdev
, uöt8_à
cfgidx
);

85 
uöt8_t
 
USBD_MSC_Sëup
(
USBD_H™dÀTy≥Def
 *
pdev
, 
USBD_SëupReqTy≥def
 *
ªq
);

86 
uöt8_t
 
USBD_MSC_D©aIn
(
USBD_H™dÀTy≥Def
 *
pdev
, uöt8_à
ïnum
);

87 
uöt8_t
 
USBD_MSC_D©aOut
(
USBD_H™dÀTy≥Def
 *
pdev
, uöt8_à
ïnum
);

89 
uöt8_t
 *
USBD_MSC_GëHSCfgDesc
(
uöt16_t
 *
Àngth
);

90 
uöt8_t
 *
USBD_MSC_GëFSCfgDesc
(
uöt16_t
 *
Àngth
);

91 
uöt8_t
 *
USBD_MSC_GëOthîS≥edCfgDesc
(
uöt16_t
 *
Àngth
);

92 
uöt8_t
 *
USBD_MSC_GëDevi˚QuÆifõrDes¸ùt‹
(
uöt16_t
 *
Àngth
);

104 
USBD_CœssTy≥Def
 
	gUSBD_MSC
 =

106 
USBD_MSC_Inô
,

107 
USBD_MSC_DeInô
,

108 
USBD_MSC_Sëup
,

109 
NULL
,

110 
NULL
,

111 
USBD_MSC_D©aIn
,

112 
USBD_MSC_D©aOut
,

113 
NULL
,

114 
NULL
,

115 
NULL
,

116 
USBD_MSC_GëHSCfgDesc
,

117 
USBD_MSC_GëFSCfgDesc
,

118 
USBD_MSC_GëOthîS≥edCfgDesc
,

119 
USBD_MSC_GëDevi˚QuÆifõrDes¸ùt‹
,

124 
__ALIGN_BEGIN
 
uöt8_t
 
	gUSBD_MSC_CfgHSDesc
[
USB_MSC_CONFIG_DESC_SIZ
] 
	g__ALIGN_END
 =

128 
USB_DESC_TYPE_CONFIGURATION
,

129 
USB_MSC_CONFIG_DESC_SIZ
,

151 
MSC_EPIN_ADDR
,

153 
LOBYTE
(
MSC_MAX_HS_PACKET
),

154 
HIBYTE
(
MSC_MAX_HS_PACKET
),

159 
MSC_EPOUT_ADDR
,

161 
LOBYTE
(
MSC_MAX_HS_PACKET
),

162 
HIBYTE
(
MSC_MAX_HS_PACKET
),

168 
__ALIGN_BEGIN
 
uöt8_t
 
	gUSBD_MSC_CfgFSDesc
[
USB_MSC_CONFIG_DESC_SIZ
] 
	g__ALIGN_END
 =

171 
USB_DESC_TYPE_CONFIGURATION
,

172 
USB_MSC_CONFIG_DESC_SIZ
,

194 
MSC_EPIN_ADDR
,

196 
LOBYTE
(
MSC_MAX_FS_PACKET
),

197 
HIBYTE
(
MSC_MAX_FS_PACKET
),

202 
MSC_EPOUT_ADDR
,

204 
LOBYTE
(
MSC_MAX_FS_PACKET
),

205 
HIBYTE
(
MSC_MAX_FS_PACKET
),

209 
__ALIGN_BEGIN
 
uöt8_t
 
	gUSBD_MSC_OthîS≥edCfgDesc
[
USB_MSC_CONFIG_DESC_SIZ
] 
	g__ALIGN_END
 =

212 
USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION
,

213 
USB_MSC_CONFIG_DESC_SIZ
,

235 
MSC_EPIN_ADDR
,

243 
MSC_EPOUT_ADDR
,

251 
__ALIGN_BEGIN
 
uöt8_t
 
	gUSBD_MSC_Devi˚QuÆifõrDesc
[
USB_LEN_DEV_QUALIFIER_DESC
] 
	g__ALIGN_END
 =

253 
USB_LEN_DEV_QUALIFIER_DESC
,

254 
USB_DESC_TYPE_DEVICE_QUALIFIER
,

260 
MSC_MAX_FS_PACKET
,

280 
uöt8_t
 
	$USBD_MSC_Inô
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
cfgidx
)

282 i‡(
pdev
->
dev_•ìd
 =
USBD_SPEED_HIGH
)

285 
	`USBD_LL_O≥nEP
(
pdev
, 
MSC_EPOUT_ADDR
, 
USBD_EP_TYPE_BULK
, 
MSC_MAX_HS_PACKET
);

286 
pdev
->
ï_out
[
MSC_EPOUT_ADDR
 & 0xFU].
is_u£d
 = 1U;

289 
	`USBD_LL_O≥nEP
(
pdev
, 
MSC_EPIN_ADDR
, 
USBD_EP_TYPE_BULK
, 
MSC_MAX_HS_PACKET
);

290 
pdev
->
ï_ö
[
MSC_EPIN_ADDR
 & 0xFU].
is_u£d
 = 1U;

295 
	`USBD_LL_O≥nEP
(
pdev
, 
MSC_EPOUT_ADDR
, 
USBD_EP_TYPE_BULK
, 
MSC_MAX_FS_PACKET
);

296 
pdev
->
ï_out
[
MSC_EPOUT_ADDR
 & 0xFU].
is_u£d
 = 1U;

299 
	`USBD_LL_O≥nEP
(
pdev
, 
MSC_EPIN_ADDR
, 
USBD_EP_TYPE_BULK
, 
MSC_MAX_FS_PACKET
);

300 
pdev
->
ï_ö
[
MSC_EPIN_ADDR
 & 0xFU].
is_u£d
 = 1U;

302 
pdev
->
pCœssD©a_2
 = 
mem_2
;

304 i‡(
pdev
->
pCœssD©a_2
 =
NULL
)

306  
USBD_FAIL
;

310 
	`MSC_BOT_Inô
(
pdev
);

312  
USBD_OK
;

313 
	}
}

322 
uöt8_t
 
	$USBD_MSC_DeInô
(
USBD_H™dÀTy≥Def
 *
pdev
,

323 
uöt8_t
 
cfgidx
)

326 
	`USBD_LL_Clo£EP
(
pdev
, 
MSC_EPOUT_ADDR
);

327 
pdev
->
ï_out
[
MSC_EPOUT_ADDR
 & 0xFU].
is_u£d
 = 0U;

330 
	`USBD_LL_Clo£EP
(
pdev
, 
MSC_EPIN_ADDR
);

331 
pdev
->
ï_ö
[
MSC_EPIN_ADDR
 & 0xFU].
is_u£d
 = 0U;

334 
	`MSC_BOT_DeInô
(
pdev
);

337 i‡(
pdev
->
pCœssD©a_2
 !
NULL
)

339 
	`USBD_‰ì
(
pdev
->
pCœssD©a_2
);

340 
pdev
->
pCœssD©a_2
 = 
NULL
;

343  
USBD_OK
;

344 
	}
}

352 
uöt8_t
 
	$USBD_MSC_Sëup
(
USBD_H™dÀTy≥Def
 *
pdev
, 
USBD_SëupReqTy≥def
 *
ªq
)

354 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*Ë
pdev
->
pCœssD©a_2
;

355 
uöt8_t
 
ªt
 = 
USBD_OK
;

356 
uöt16_t
 
°©us_öfo
 = 0U;

358 
ªq
->
bmReque°
 & 
USB_REQ_TYPE_MASK
)

361 
USB_REQ_TYPE_CLASS
:

362 
ªq
->
bReque°
)

364 
BOT_GET_MAX_LUN
:

365 i‡((
ªq
->
wVÆue
 =0UË&& (ªq->
wLígth
 == 1U) &&

366 ((
ªq
->
bmReque°
 & 0x80U) == 0x80U))

368 
hmsc
->
max_lun
 = (
uöt32_t
)((
USBD_St‹ageTy≥Def
 *)
pdev
->
pU£rD©a_2
)->
	`GëMaxLun
();

369 
	`USBD_CéSídD©a
(
pdev
, (
uöt8_t
 *)(*)&
hmsc
->
max_lun
, 1U);

373 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

374 
ªt
 = 
USBD_FAIL
;

378 
BOT_RESET
 :

379 i‡((
ªq
->
wVÆue
 =0UË&& (ªq->
wLígth
 == 0U) &&

380 ((
ªq
->
bmReque°
 & 0x80U) != 0x80U))

382 
	`MSC_BOT_Re£t
(
pdev
);

386 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

387 
ªt
 = 
USBD_FAIL
;

392 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

393 
ªt
 = 
USBD_FAIL
;

398 
USB_REQ_TYPE_STANDARD
:

399 
ªq
->
bReque°
)

401 
USB_REQ_GET_STATUS
:

402 i‡(
pdev
->
dev_°©e
 =
USBD_STATE_CONFIGURED
)

404 
	`USBD_CéSídD©a
(
pdev
, (
uöt8_t
 *)(*)&
°©us_öfo
, 2U);

408 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

409 
ªt
 = 
USBD_FAIL
;

413 
USB_REQ_GET_INTERFACE
:

414 i‡(
pdev
->
dev_°©e
 =
USBD_STATE_CONFIGURED
)

416 
	`USBD_CéSídD©a
(
pdev
, (
uöt8_t
 *)(*)&
hmsc
->
öãrÁ˚
, 1U);

420 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

421 
ªt
 = 
USBD_FAIL
;

425 
USB_REQ_SET_INTERFACE
:

426 i‡(
pdev
->
dev_°©e
 =
USBD_STATE_CONFIGURED
)

428 
hmsc
->
öãrÁ˚
 = (
uöt8_t
)(
ªq
->
wVÆue
);

432 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

433 
ªt
 = 
USBD_FAIL
;

437 
USB_REQ_CLEAR_FEATURE
:

440 
	`USBD_LL_FlushEP
(
pdev
, (
uöt8_t
)
ªq
->
wIndex
);

443 
	`USBD_LL_Clo£EP
(
pdev
, (
uöt8_t
)
ªq
->
wIndex
);

444 i‡((((
uöt8_t
)
ªq
->
wIndex
) & 0x80U) == 0x80U)

446 
pdev
->
ï_ö
[(
uöt8_t
)
ªq
->
wIndex
 & 0xFU].
is_u£d
 = 0U;

447 i‡(
pdev
->
dev_•ìd
 =
USBD_SPEED_HIGH
)

450 
	`USBD_LL_O≥nEP
(
pdev
, 
MSC_EPIN_ADDR
, 
USBD_EP_TYPE_BULK
,

451 
MSC_MAX_HS_PACKET
);

456 
	`USBD_LL_O≥nEP
(
pdev
, 
MSC_EPIN_ADDR
, 
USBD_EP_TYPE_BULK
,

457 
MSC_MAX_FS_PACKET
);

459 
pdev
->
ï_ö
[
MSC_EPIN_ADDR
 & 0xFU].
is_u£d
 = 1U;

463 
pdev
->
ï_out
[(
uöt8_t
)
ªq
->
wIndex
 & 0xFU].
is_u£d
 = 0U;

464 i‡(
pdev
->
dev_•ìd
 =
USBD_SPEED_HIGH
)

467 
	`USBD_LL_O≥nEP
(
pdev
, 
MSC_EPOUT_ADDR
, 
USBD_EP_TYPE_BULK
,

468 
MSC_MAX_HS_PACKET
);

473 
	`USBD_LL_O≥nEP
(
pdev
, 
MSC_EPOUT_ADDR
, 
USBD_EP_TYPE_BULK
,

474 
MSC_MAX_FS_PACKET
);

476 
pdev
->
ï_out
[
MSC_EPOUT_ADDR
 & 0xFU].
is_u£d
 = 1U;

480 
	`MSC_BOT_C∂CÃFótuª
(
pdev
, (
uöt8_t
)
ªq
->
wIndex
);

484 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

485 
ªt
 = 
USBD_FAIL
;

491 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

492 
ªt
 = 
USBD_FAIL
;

496  
ªt
;

497 
	}
}

506 
uöt8_t
 
	$USBD_MSC_D©aIn
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ïnum
)

508 
	`MSC_BOT_D©aIn
(
pdev
, 
ïnum
);

510  
USBD_OK
;

511 
	}
}

520 
uöt8_t
 
	$USBD_MSC_D©aOut
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ïnum
)

522 
	`MSC_BOT_D©aOut
(
pdev
, 
ïnum
);

524  
USBD_OK
;

525 
	}
}

533 
uöt8_t
 *
	$USBD_MSC_GëHSCfgDesc
(
uöt16_t
 *
Àngth
)

535 *
Àngth
 = (
USBD_MSC_CfgHSDesc
);

537  
USBD_MSC_CfgHSDesc
;

538 
	}
}

546 
uöt8_t
 *
	$USBD_MSC_GëFSCfgDesc
(
uöt16_t
 *
Àngth
)

548 *
Àngth
 = (
USBD_MSC_CfgFSDesc
);

550  
USBD_MSC_CfgFSDesc
;

551 
	}
}

559 
uöt8_t
 *
	$USBD_MSC_GëOthîS≥edCfgDesc
(
uöt16_t
 *
Àngth
)

561 *
Àngth
 = (
USBD_MSC_OthîS≥edCfgDesc
);

563  
USBD_MSC_OthîS≥edCfgDesc
;

564 
	}
}

571 
uöt8_t
 *
	$USBD_MSC_GëDevi˚QuÆifõrDes¸ùt‹
(
uöt16_t
 *
Àngth
)

573 *
Àngth
 = (
USBD_MSC_Devi˚QuÆifõrDesc
);

575  
USBD_MSC_Devi˚QuÆifõrDesc
;

576 
	}
}

583 
uöt8_t
 
	$USBD_MSC_Regi°îSt‹age
(
USBD_H™dÀTy≥Def
 *
pdev
,

584 
USBD_St‹ageTy≥Def
 *
f›s
)

586 i‡(
f›s
 !
NULL
)

588 
pdev
->
pU£rD©a_2
 = 
f›s
;

591  
USBD_OK
;

592 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Class\MSC\Src\usbd_msc_bot.c

27 
	~"usbd_msc_bŸ.h
"

28 
	~"usbd_msc.h
"

29 
	~"usbd_msc_scsi.h
"

30 
	~"usbd_i‹eq.h
"

79 
MSC_BOT_CBW_Decode
(
USBD_H™dÀTy≥Def
 *
pdev
);

80 
MSC_BOT_SídD©a
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 *
pbuf
,

81 
uöt16_t
 
Àn
);

83 
MSC_BOT_Ab‹t
(
USBD_H™dÀTy≥Def
 *
pdev
);

101 
	$MSC_BOT_Inô
(
USBD_H™dÀTy≥Def
 *
pdev
)

103 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*)
pdev
->
pCœssD©a_2
;

105 
hmsc
->
bŸ_°©e
 = 
USBD_BOT_IDLE
;

106 
hmsc
->
bŸ_°©us
 = 
USBD_BOT_STATUS_NORMAL
;

108 
hmsc
->
scsi_£n£_èû
 = 0U;

109 
hmsc
->
scsi_£n£_hód
 = 0U;

111 ((
USBD_St‹ageTy≥Def
 *)
pdev
->
pU£rD©a_2
)->
	`Inô
(0U);

113 
	`USBD_LL_FlushEP
(
pdev
, 
MSC_EPOUT_ADDR
);

114 
	`USBD_LL_FlushEP
(
pdev
, 
MSC_EPIN_ADDR
);

117 
	`USBD_LL_Pª∑ªRe˚ive
(
pdev
, 
MSC_EPOUT_ADDR
, (
uöt8_t
 *)(*)&
hmsc
->
cbw
,

118 
USBD_BOT_CBW_LENGTH
);

119 
	}
}

127 
	$MSC_BOT_Re£t
(
USBD_H™dÀTy≥Def
 *
pdev
)

129 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*)
pdev
->
pCœssD©a_2
;

131 
hmsc
->
bŸ_°©e
 = 
USBD_BOT_IDLE
;

132 
hmsc
->
bŸ_°©us
 = 
USBD_BOT_STATUS_RECOVERY
;

135 
	`USBD_LL_Pª∑ªRe˚ive
(
pdev
, 
MSC_EPOUT_ADDR
, (
uöt8_t
 *)(*)&
hmsc
->
cbw
,

136 
USBD_BOT_CBW_LENGTH
);

137 
	}
}

145 
	$MSC_BOT_DeInô
(
USBD_H™dÀTy≥Def
 *
pdev
)

147 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*)
pdev
->
pCœssD©a_2
;

148 
hmsc
->
bŸ_°©e
 = 
USBD_BOT_IDLE
;

149 
	}
}

158 
	$MSC_BOT_D©aIn
(
USBD_H™dÀTy≥Def
 *
pdev
,

159 
uöt8_t
 
ïnum
)

161 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*)
pdev
->
pCœssD©a_2
;

163 
hmsc
->
bŸ_°©e
)

165 
USBD_BOT_DATA_IN
:

166 i‡(
	`SCSI_Pro˚ssCmd
(
pdev
, 
hmsc
->
cbw
.
bLUN
, &hmsc->cbw.
CB
[0]) < 0)

168 
	`MSC_BOT_SídCSW
(
pdev
, 
USBD_CSW_CMD_FAILED
);

172 
USBD_BOT_SEND_DATA
:

173 
USBD_BOT_LAST_DATA_IN
:

174 
	`MSC_BOT_SídCSW
(
pdev
, 
USBD_CSW_CMD_PASSED
);

180 
	}
}

188 
	$MSC_BOT_D©aOut
(
USBD_H™dÀTy≥Def
 *
pdev
,

189 
uöt8_t
 
ïnum
)

191 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*)
pdev
->
pCœssD©a_2
;

193 
hmsc
->
bŸ_°©e
)

195 
USBD_BOT_IDLE
:

196 
	`MSC_BOT_CBW_Decode
(
pdev
);

199 
USBD_BOT_DATA_OUT
:

201 i‡(
	`SCSI_Pro˚ssCmd
(
pdev
, 
hmsc
->
cbw
.
bLUN
, &hmsc->cbw.
CB
[0]) < 0)

203 
	`MSC_BOT_SídCSW
(
pdev
, 
USBD_CSW_CMD_FAILED
);

210 
	}
}

218 
	$MSC_BOT_CBW_Decode
(
USBD_H™dÀTy≥Def
 *
pdev
)

220 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*)
pdev
->
pCœssD©a_2
;

222 
hmsc
->
csw
.
dTag
 = hmsc->
cbw
.dTag;

223 
hmsc
->
csw
.
dD©aResidue
 = hmsc->
cbw
.
dD©aLígth
;

225 i‡((
	`USBD_LL_GëRxD©aSize
(
pdev
, 
MSC_EPOUT_ADDR
Ë!
USBD_BOT_CBW_LENGTH
) ||

226 (
hmsc
->
cbw
.
dSig«tuª
 !
USBD_BOT_CBW_SIGNATURE
) ||

227 (
hmsc
->
cbw
.
bLUN
 > 1U) ||

228 (
hmsc
->
cbw
.
bCBLígth
 < 1U) || (hmsc->cbw.bCBLength > 16U))

231 
	`SCSI_Sí£Code
(
pdev
, 
hmsc
->
cbw
.
bLUN
, 
ILLEGAL_REQUEST
, 
INVALID_CDB
);

233 
hmsc
->
bŸ_°©us
 = 
USBD_BOT_STATUS_ERROR
;

234 
	`MSC_BOT_Ab‹t
(
pdev
);

238 i‡(
	`SCSI_Pro˚ssCmd
(
pdev
, 
hmsc
->
cbw
.
bLUN
, &hmsc->cbw.
CB
[0]) < 0)

240 i‡(
hmsc
->
bŸ_°©e
 =
USBD_BOT_NO_DATA
)

242 
	`MSC_BOT_SídCSW
(
pdev
, 
USBD_CSW_CMD_FAILED
);

246 
	`MSC_BOT_Ab‹t
(
pdev
);

250 i‡((
hmsc
->
bŸ_°©e
 !
USBD_BOT_DATA_IN
) &&

251 (
hmsc
->
bŸ_°©e
 !
USBD_BOT_DATA_OUT
) &&

252 (
hmsc
->
bŸ_°©e
 !
USBD_BOT_LAST_DATA_IN
))

254 i‡(
hmsc
->
bŸ_d©a_Àngth
 > 0U)

256 
	`MSC_BOT_SídD©a
(
pdev
, 
hmsc
->
bŸ_d©a
, hmsc->
bŸ_d©a_Àngth
);

258 i‡(
hmsc
->
bŸ_d©a_Àngth
 == 0U)

260 
	`MSC_BOT_SídCSW
(
pdev
, 
USBD_CSW_CMD_PASSED
);

264 
	`MSC_BOT_Ab‹t
(
pdev
);

272 
	}
}

282 
	$MSC_BOT_SídD©a
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 *
pbuf
,

283 
uöt16_t
 
Àn
)

285 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*)
pdev
->
pCœssD©a_2
;

287 
uöt16_t
 
Àngth
 = (uöt16_t)
	`MIN
(
hmsc
->
cbw
.
dD©aLígth
, 
Àn
);

289 
hmsc
->
csw
.
dD©aResidue
 -
Àn
;

290 
hmsc
->
csw
.
bSètus
 = 
USBD_CSW_CMD_PASSED
;

291 
hmsc
->
bŸ_°©e
 = 
USBD_BOT_SEND_DATA
;

293 
	`USBD_LL_Tønsmô
(
pdev
, 
MSC_EPIN_ADDR
, 
pbuf
, 
Àngth
);

294 
	}
}

303 
	$MSC_BOT_SídCSW
(
USBD_H™dÀTy≥Def
 *
pdev
,

304 
uöt8_t
 
CSW_Sètus
)

306 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*)
pdev
->
pCœssD©a_2
;

308 
hmsc
->
csw
.
dSig«tuª
 = 
USBD_BOT_CSW_SIGNATURE
;

309 
hmsc
->
csw
.
bSètus
 = 
CSW_Sètus
;

310 
hmsc
->
bŸ_°©e
 = 
USBD_BOT_IDLE
;

312 
	`USBD_LL_Tønsmô
(
pdev
, 
MSC_EPIN_ADDR
, (
uöt8_t
 *)(*)&
hmsc
->
csw
,

313 
USBD_BOT_CSW_LENGTH
);

316 
	`USBD_LL_Pª∑ªRe˚ive
(
pdev
, 
MSC_EPOUT_ADDR
, (
uöt8_t
 *)(*)&
hmsc
->
cbw
,

317 
USBD_BOT_CBW_LENGTH
);

318 
	}
}

327 
	$MSC_BOT_Ab‹t
(
USBD_H™dÀTy≥Def
 *
pdev
)

329 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*)
pdev
->
pCœssD©a_2
;

331 i‡((
hmsc
->
cbw
.
bmFœgs
 == 0U) &&

332 (
hmsc
->
cbw
.
dD©aLígth
 != 0U) &&

333 (
hmsc
->
bŸ_°©us
 =
USBD_BOT_STATUS_NORMAL
))

335 
	`USBD_LL_SèŒEP
(
pdev
, 
MSC_EPOUT_ADDR
);

338 
	`USBD_LL_SèŒEP
(
pdev
, 
MSC_EPIN_ADDR
);

340 i‡(
hmsc
->
bŸ_°©us
 =
USBD_BOT_STATUS_ERROR
)

342 
	`USBD_LL_Pª∑ªRe˚ive
(
pdev
, 
MSC_EPOUT_ADDR
, (
uöt8_t
 *)(*)&
hmsc
->
cbw
,

343 
USBD_BOT_CBW_LENGTH
);

345 
	}
}

355 
	$MSC_BOT_C∂CÃFótuª
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ïnum
)

357 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*)
pdev
->
pCœssD©a_2
;

359 i‡(
hmsc
->
bŸ_°©us
 =
USBD_BOT_STATUS_ERROR
)

361 
	`USBD_LL_SèŒEP
(
pdev
, 
MSC_EPIN_ADDR
);

362 
hmsc
->
bŸ_°©us
 = 
USBD_BOT_STATUS_NORMAL
;

364 i‡(((
ïnum
 & 0x80UË=0x80UË&& (
hmsc
->
bŸ_°©us
 !
USBD_BOT_STATUS_RECOVERY
))

366 
	`MSC_BOT_SídCSW
(
pdev
, 
USBD_CSW_CMD_FAILED
);

372 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Class\MSC\Src\usbd_msc_data.c

27 
	~"usbd_msc_d©a.h
"

70 c⁄° 
uöt8_t
 
	gMSC_Page00_Inquúy_D©a
[] =

75 (
LENGTH_INQUIRY_PAGE00
 - 4U),

81 c⁄° 
uöt8_t
 
	gMSC_Mode_Sí£6_d©a
[] =

93 c⁄° 
uöt8_t
 
	gMSC_Mode_Sí£10_d©a
[] =

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Class\MSC\Src\usbd_msc_scsi.c

27 
	~"usbd_msc_bŸ.h
"

28 
	~"usbd_msc_scsi.h
"

29 
	~"usbd_msc.h
"

30 
	~"usbd_msc_d©a.h
"

81 
öt8_t
 
SCSI_Te°UnôRódy
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à*
∑øms
);

82 
öt8_t
 
SCSI_Inquúy
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à*
∑øms
);

83 
öt8_t
 
SCSI_RódF‹m©C≠acôy
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à*
∑øms
);

84 
öt8_t
 
SCSI_RódC≠acôy10
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à*
∑øms
);

85 
öt8_t
 
SCSI_Reque°Sí£
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à*
∑øms
);

86 
öt8_t
 
SCSI_SèπSt›Unô
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à*
∑øms
);

87 
öt8_t
 
SCSI_ModeSí£6
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à*
∑øms
);

88 
öt8_t
 
SCSI_ModeSí£10
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à*
∑øms
);

89 
öt8_t
 
SCSI_Wrôe10
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à*
∑øms
);

90 
öt8_t
 
SCSI_Ród10
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à*
∑øms
);

91 
öt8_t
 
SCSI_Vîify10
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à*
∑øms
);

92 
öt8_t
 
SCSI_CheckAddªssR™ge
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
,

93 
uöt32_t
 
blk_off£t
, uöt32_à
blk_nbr
);

95 
öt8_t
 
SCSI_Pro˚ssRód
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
);

96 
öt8_t
 
SCSI_Pro˚ssWrôe
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
);

115 
öt8_t
 
	$SCSI_Pro˚ssCmd
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à*
cmd
)

117 
cmd
[0])

119 
SCSI_TEST_UNIT_READY
:

120 
	`SCSI_Te°UnôRódy
(
pdev
, 
lun
, 
cmd
);

123 
SCSI_REQUEST_SENSE
:

124 
	`SCSI_Reque°Sí£
(
pdev
, 
lun
, 
cmd
);

126 
SCSI_INQUIRY
:

127 
	`SCSI_Inquúy
(
pdev
, 
lun
, 
cmd
);

130 
SCSI_START_STOP_UNIT
:

131 
	`SCSI_SèπSt›Unô
(
pdev
, 
lun
, 
cmd
);

134 
SCSI_ALLOW_MEDIUM_REMOVAL
:

135 
	`SCSI_SèπSt›Unô
(
pdev
, 
lun
, 
cmd
);

138 
SCSI_MODE_SENSE6
:

139 
	`SCSI_ModeSí£6
(
pdev
, 
lun
, 
cmd
);

142 
SCSI_MODE_SENSE10
:

143 
	`SCSI_ModeSí£10
(
pdev
, 
lun
, 
cmd
);

146 
SCSI_READ_FORMAT_CAPACITIES
:

147 
	`SCSI_RódF‹m©C≠acôy
(
pdev
, 
lun
, 
cmd
);

150 
SCSI_READ_CAPACITY10
:

151 
	`SCSI_RódC≠acôy10
(
pdev
, 
lun
, 
cmd
);

154 
SCSI_READ10
:

155 
	`SCSI_Ród10
(
pdev
, 
lun
, 
cmd
);

158 
SCSI_WRITE10
:

159 
	`SCSI_Wrôe10
(
pdev
, 
lun
, 
cmd
);

162 
SCSI_VERIFY10
:

163 
	`SCSI_Vîify10
(
pdev
, 
lun
, 
cmd
);

167 
	`SCSI_Sí£Code
(
pdev
, 
lun
, 
ILLEGAL_REQUEST
, 
INVALID_CDB
);

172 
	}
}

182 
öt8_t
 
	$SCSI_Te°UnôRódy
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à*
∑øms
)

184 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*)
pdev
->
pCœssD©a_2
;

187 i‡(
hmsc
->
cbw
.
dD©aLígth
 != 0U)

189 
	`SCSI_Sí£Code
(
pdev
, 
hmsc
->
cbw
.
bLUN
, 
ILLEGAL_REQUEST
, 
INVALID_CDB
);

194 i‡(((
USBD_St‹ageTy≥Def
 *)
pdev
->
pU£rD©a_2
)->
	`IsRódy
(
lun
) != 0)

196 
	`SCSI_Sí£Code
(
pdev
, 
lun
, 
NOT_READY
, 
MEDIUM_NOT_PRESENT
);

197 
hmsc
->
bŸ_°©e
 = 
USBD_BOT_NO_DATA
;

201 
hmsc
->
bŸ_d©a_Àngth
 = 0U;

204 
	}
}

213 
öt8_t
 
	$SCSI_Inquúy
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à*
∑øms
)

215 
uöt8_t
 *
pPage
;

216 
uöt16_t
 
Àn
;

217 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*)
pdev
->
pCœssD©a_2
;

219 i‡(
∑øms
[1] & 0x01U)

221 
Àn
 = 
LENGTH_INQUIRY_PAGE00
;

222 
hmsc
->
bŸ_d©a_Àngth
 = 
Àn
;

224 
Àn
)

226 
Àn
--;

227 
hmsc
->
bŸ_d©a
[
Àn
] = 
MSC_Page00_Inquúy_D©a
[len];

232 
pPage
 = (
uöt8_t
 *)(*Ë& ((
USBD_St‹ageTy≥Def
 *)
pdev
->
pU£rD©a_2
)->
pInquúy
[
lun
 * 
STANDARD_INQUIRY_DATA_LEN
];

233 
Àn
 = (
uöt16_t
)
pPage
[4] + 5U;

235 i‡(
∑øms
[4] <
Àn
)

237 
Àn
 = 
∑øms
[4];

239 
hmsc
->
bŸ_d©a_Àngth
 = 
Àn
;

241 
Àn
)

243 
Àn
--;

244 
hmsc
->
bŸ_d©a
[
Àn
] = 
pPage
[len];

249 
	}
}

258 
öt8_t
 
	$SCSI_RódC≠acôy10
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à*
∑øms
)

260 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*)
pdev
->
pCœssD©a_2
;

262 i‡(((
USBD_St‹ageTy≥Def
 *)
pdev
->
pU£rD©a_2
)->
	`GëC≠acôy
(
lun
, &
hmsc
->
scsi_blk_nbr
, &hmsc->
scsi_blk_size
) != 0)

264 
	`SCSI_Sí£Code
(
pdev
, 
lun
, 
NOT_READY
, 
MEDIUM_NOT_PRESENT
);

270 
hmsc
->
bŸ_d©a
[0] = (
uöt8_t
)((hmsc->
scsi_blk_nbr
 - 1U) >> 24);

271 
hmsc
->
bŸ_d©a
[1] = (
uöt8_t
)((hmsc->
scsi_blk_nbr
 - 1U) >> 16);

272 
hmsc
->
bŸ_d©a
[2] = (
uöt8_t
)((hmsc->
scsi_blk_nbr
 - 1U) >> 8);

273 
hmsc
->
bŸ_d©a
[3] = (
uöt8_t
)(hmsc->
scsi_blk_nbr
 - 1U);

275 
hmsc
->
bŸ_d©a
[4] = (
uöt8_t
)(hmsc->
scsi_blk_size
 >> 24);

276 
hmsc
->
bŸ_d©a
[5] = (
uöt8_t
)(hmsc->
scsi_blk_size
 >> 16);

277 
hmsc
->
bŸ_d©a
[6] = (
uöt8_t
)(hmsc->
scsi_blk_size
 >> 8);

278 
hmsc
->
bŸ_d©a
[7] = (
uöt8_t
)(hmsc->
scsi_blk_size
);

280 
hmsc
->
bŸ_d©a_Àngth
 = 8U;

283 
	}
}

291 
öt8_t
 
	$SCSI_RódF‹m©C≠acôy
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à*
∑øms
)

293 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*)
pdev
->
pCœssD©a_2
;

295 
uöt16_t
 
blk_size
;

296 
uöt32_t
 
blk_nbr
;

297 
uöt16_t
 
i
;

299 
i
 = 0U; i < 12U ; i++)

301 
hmsc
->
bŸ_d©a
[
i
] = 0U;

304 i‡(((
USBD_St‹ageTy≥Def
 *)
pdev
->
pU£rD©a_2
)->
	`GëC≠acôy
(
lun
, &
blk_nbr
, &
blk_size
) != 0U)

306 
	`SCSI_Sí£Code
(
pdev
, 
lun
, 
NOT_READY
, 
MEDIUM_NOT_PRESENT
);

311 
hmsc
->
bŸ_d©a
[3] = 0x08U;

312 
hmsc
->
bŸ_d©a
[4] = (
uöt8_t
)((
blk_nbr
 - 1U) >> 24);

313 
hmsc
->
bŸ_d©a
[5] = (
uöt8_t
)((
blk_nbr
 - 1U) >> 16);

314 
hmsc
->
bŸ_d©a
[6] = (
uöt8_t
)((
blk_nbr
 - 1U) >> 8);

315 
hmsc
->
bŸ_d©a
[7] = (
uöt8_t
)(
blk_nbr
 - 1U);

317 
hmsc
->
bŸ_d©a
[8] = 0x02U;

318 
hmsc
->
bŸ_d©a
[9] = (
uöt8_t
)(
blk_size
 >> 16);

319 
hmsc
->
bŸ_d©a
[10] = (
uöt8_t
)(
blk_size
 >> 8);

320 
hmsc
->
bŸ_d©a
[11] = (
uöt8_t
)(
blk_size
);

322 
hmsc
->
bŸ_d©a_Àngth
 = 12U;

325 
	}
}

333 
öt8_t
 
	$SCSI_ModeSí£6
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à*
∑øms
)

335 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*)
pdev
->
pCœssD©a_2
;

336 
uöt16_t
 
Àn
 = 8U;

337 
hmsc
->
bŸ_d©a_Àngth
 = 
Àn
;

339 
Àn
)

341 
Àn
--;

342 
hmsc
->
bŸ_d©a
[
Àn
] = 
MSC_Mode_Sí£6_d©a
[len];

345 
	}
}

354 
öt8_t
 
	$SCSI_ModeSí£10
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à*
∑øms
)

356 
uöt16_t
 
Àn
 = 8U;

357 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*)
pdev
->
pCœssD©a_2
;

359 
hmsc
->
bŸ_d©a_Àngth
 = 
Àn
;

361 
Àn
)

363 
Àn
--;

364 
hmsc
->
bŸ_d©a
[
Àn
] = 
MSC_Mode_Sí£10_d©a
[len];

368 
	}
}

378 
öt8_t
 
	$SCSI_Reque°Sí£
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à*
∑øms
)

380 
uöt8_t
 
i
;

381 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*)
pdev
->
pCœssD©a_2
;

383 
i
 = 0U ; i < 
REQUEST_SENSE_DATA_LEN
; i++)

385 
hmsc
->
bŸ_d©a
[
i
] = 0U;

388 
hmsc
->
bŸ_d©a
[0] = 0x70U;

389 
hmsc
->
bŸ_d©a
[7] = 
REQUEST_SENSE_DATA_LEN
 - 6U;

391 i‡((
hmsc
->
scsi_£n£_hód
 !hmsc->
scsi_£n£_èû
))

394 
hmsc
->
bŸ_d©a
[2] = hmsc->
scsi_£n£
[hmsc->
scsi_£n£_hód
].
Skey
;

395 
hmsc
->
bŸ_d©a
[12] = hmsc->
scsi_£n£
[hmsc->
scsi_£n£_hód
].
w
.
b
.
ASCQ
;

396 
hmsc
->
bŸ_d©a
[13] = hmsc->
scsi_£n£
[hmsc->
scsi_£n£_hód
].
w
.
b
.
ASC
;

397 
hmsc
->
scsi_£n£_hód
++;

399 i‡(
hmsc
->
scsi_£n£_hód
 =
SENSE_LIST_DEEPTH
)

401 
hmsc
->
scsi_£n£_hód
 = 0U;

404 
hmsc
->
bŸ_d©a_Àngth
 = 
REQUEST_SENSE_DATA_LEN
;

406 i‡(
∑øms
[4] <
REQUEST_SENSE_DATA_LEN
)

408 
hmsc
->
bŸ_d©a_Àngth
 = 
∑øms
[4];

411 
	}
}

422 
	$SCSI_Sí£Code
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à
sKey
, uöt8_à
ASC
)

424 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*)
pdev
->
pCœssD©a_2
;

426 
hmsc
->
scsi_£n£
[hmsc->
scsi_£n£_èû
].
Skey
 = 
sKey
;

427 
hmsc
->
scsi_£n£
[hmsc->
scsi_£n£_èû
].
w
.
ASC
 = ASC << 8;

428 
hmsc
->
scsi_£n£_èû
++;

429 i‡(
hmsc
->
scsi_£n£_èû
 =
SENSE_LIST_DEEPTH
)

431 
hmsc
->
scsi_£n£_èû
 = 0U;

433 
	}
}

441 
öt8_t
 
	$SCSI_SèπSt›Unô
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à*
∑øms
)

443 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*Ë
pdev
->
pCœssD©a_2
;

444 
hmsc
->
bŸ_d©a_Àngth
 = 0U;

446 
	}
}

455 
öt8_t
 
	$SCSI_Ród10
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à*
∑øms
)

457 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*Ë
pdev
->
pCœssD©a_2
;

459 i‡(
hmsc
->
bŸ_°©e
 =
USBD_BOT_IDLE
)

462 i‡((
hmsc
->
cbw
.
bmFœgs
 & 0x80U) != 0x80U)

464 
	`SCSI_Sí£Code
(
pdev
, 
hmsc
->
cbw
.
bLUN
, 
ILLEGAL_REQUEST
, 
INVALID_CDB
);

468 i‡(((
USBD_St‹ageTy≥Def
 *)
pdev
->
pU£rD©a_2
)->
	`IsRódy
(
lun
) != 0)

470 
	`SCSI_Sí£Code
(
pdev
, 
lun
, 
NOT_READY
, 
MEDIUM_NOT_PRESENT
);

474 
hmsc
->
scsi_blk_addr
 = ((
uöt32_t
)
∑øms
[2] << 24) |

475 ((
uöt32_t
)
∑øms
[3] << 16) |

476 ((
uöt32_t
)
∑øms
[4] << 8) |

477 (
uöt32_t
)
∑øms
[5];

479 
hmsc
->
scsi_blk_Àn
 = ((
uöt32_t
)
∑øms
[7] << 8) | (uint32_t)params[8];

481 i‡(
	`SCSI_CheckAddªssR™ge
(
pdev
, 
lun
, 
hmsc
->
scsi_blk_addr
,

482 
hmsc
->
scsi_blk_Àn
) < 0)

487 
hmsc
->
bŸ_°©e
 = 
USBD_BOT_DATA_IN
;

490 i‡(
hmsc
->
cbw
.
dD©aLígth
 !(hmsc->
scsi_blk_Àn
 * hmsc->
scsi_blk_size
))

492 
	`SCSI_Sí£Code
(
pdev
, 
hmsc
->
cbw
.
bLUN
, 
ILLEGAL_REQUEST
, 
INVALID_CDB
);

496 
hmsc
->
bŸ_d©a_Àngth
 = 
MSC_MEDIA_PACKET
;

498  
	`SCSI_Pro˚ssRód
(
pdev
, 
lun
);

499 
	}
}

509 
öt8_t
 
	$SCSI_Wrôe10
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à*
∑øms
)

511 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*Ë
pdev
->
pCœssD©a_2
;

512 
uöt32_t
 
Àn
;

514 i‡(
hmsc
->
bŸ_°©e
 =
USBD_BOT_IDLE
)

517 i‡((
hmsc
->
cbw
.
bmFœgs
 & 0x80U) == 0x80U)

519 
	`SCSI_Sí£Code
(
pdev
, 
hmsc
->
cbw
.
bLUN
, 
ILLEGAL_REQUEST
, 
INVALID_CDB
);

524 i‡(((
USBD_St‹ageTy≥Def
 *)
pdev
->
pU£rD©a_2
)->
	`IsRódy
(
lun
) != 0)

526 
	`SCSI_Sí£Code
(
pdev
, 
lun
, 
NOT_READY
, 
MEDIUM_NOT_PRESENT
);

531 i‡(((
USBD_St‹ageTy≥Def
 *)
pdev
->
pU£rD©a_2
)->
	`IsWrôePrŸe˘ed
(
lun
) != 0)

533 
	`SCSI_Sí£Code
(
pdev
, 
lun
, 
NOT_READY
, 
WRITE_PROTECTED
);

537 
hmsc
->
scsi_blk_addr
 = ((
uöt32_t
)
∑øms
[2] << 24) |

538 ((
uöt32_t
)
∑øms
[3] << 16) |

539 ((
uöt32_t
)
∑øms
[4] << 8) |

540 (
uöt32_t
)
∑øms
[5];

542 
hmsc
->
scsi_blk_Àn
 = ((
uöt32_t
)
∑øms
[7] << 8) |

543 (
uöt32_t
)
∑øms
[8];

546 i‡(
	`SCSI_CheckAddªssR™ge
(
pdev
, 
lun
, 
hmsc
->
scsi_blk_addr
,

547 
hmsc
->
scsi_blk_Àn
) < 0)

552 
Àn
 = 
hmsc
->
scsi_blk_Àn
 * hmsc->
scsi_blk_size
;

555 i‡(
hmsc
->
cbw
.
dD©aLígth
 !
Àn
)

557 
	`SCSI_Sí£Code
(
pdev
, 
hmsc
->
cbw
.
bLUN
, 
ILLEGAL_REQUEST
, 
INVALID_CDB
);

561 
Àn
 = 
	`MIN
÷í, 
MSC_MEDIA_PACKET
);

564 
hmsc
->
bŸ_°©e
 = 
USBD_BOT_DATA_OUT
;

565 
	`USBD_LL_Pª∑ªRe˚ive
(
pdev
, 
MSC_EPOUT_ADDR
, 
hmsc
->
bŸ_d©a
, 
Àn
);

569  
	`SCSI_Pro˚ssWrôe
(
pdev
, 
lun
);

572 
	}
}

583 
öt8_t
 
	$SCSI_Vîify10
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
, uöt8_à*
∑øms
)

585 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*Ë
pdev
->
pCœssD©a_2
;

587 i‡((
∑øms
[1] & 0x02U) == 0x02U)

589 
	`SCSI_Sí£Code
(
pdev
, 
lun
, 
ILLEGAL_REQUEST
, 
INVALID_FIELED_IN_COMMAND
);

593 i‡(
	`SCSI_CheckAddªssR™ge
(
pdev
, 
lun
, 
hmsc
->
scsi_blk_addr
,

594 
hmsc
->
scsi_blk_Àn
) < 0)

598 
hmsc
->
bŸ_d©a_Àngth
 = 0U;

600 
	}
}

610 
öt8_t
 
	$SCSI_CheckAddªssR™ge
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
,

611 
uöt32_t
 
blk_off£t
, uöt32_à
blk_nbr
)

613 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*Ë
pdev
->
pCœssD©a_2
;

615 i‡((
blk_off£t
 + 
blk_nbr
Ë> 
hmsc
->
scsi_blk_nbr
)

617 
	`SCSI_Sí£Code
(
pdev
, 
lun
, 
ILLEGAL_REQUEST
, 
ADDRESS_OUT_OF_RANGE
);

621 
	}
}

629 
öt8_t
 
	$SCSI_Pro˚ssRód
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
)

631 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*)
pdev
->
pCœssD©a_2
;

632 
uöt32_t
 
Àn
 = 
hmsc
->
scsi_blk_Àn
 * hmsc->
scsi_blk_size
;

634 
Àn
 = 
	`MIN
÷í, 
MSC_MEDIA_PACKET
);

636 i‡(((
USBD_St‹ageTy≥Def
 *)
pdev
->
pU£rD©a_2
)->
	`Ród
(
lun
,

637 
hmsc
->
bŸ_d©a
,

638 
hmsc
->
scsi_blk_addr
,

639 (
Àn
 / 
hmsc
->
scsi_blk_size
)) < 0)

641 
	`SCSI_Sí£Code
(
pdev
, 
lun
, 
HARDWARE_ERROR
, 
UNRECOVERED_READ_ERROR
);

645 
	`USBD_LL_Tønsmô
(
pdev
, 
MSC_EPIN_ADDR
, 
hmsc
->
bŸ_d©a
, 
Àn
);

647 
hmsc
->
scsi_blk_addr
 +(
Àn
 / hmsc->
scsi_blk_size
);

648 
hmsc
->
scsi_blk_Àn
 -(
Àn
 / hmsc->
scsi_blk_size
);

651 
hmsc
->
csw
.
dD©aResidue
 -
Àn
;

653 i‡(
hmsc
->
scsi_blk_Àn
 == 0U)

655 
hmsc
->
bŸ_°©e
 = 
USBD_BOT_LAST_DATA_IN
;

658 
	}
}

667 
öt8_t
 
	$SCSI_Pro˚ssWrôe
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
lun
)

669 
USBD_MSC_BOT_H™dÀTy≥Def
 *
hmsc
 = (USBD_MSC_BOT_H™dÀTy≥De‡*Ë
pdev
->
pCœssD©a_2
;

670 
uöt32_t
 
Àn
 = 
hmsc
->
scsi_blk_Àn
 * hmsc->
scsi_blk_size
;

672 
Àn
 = 
	`MIN
÷í, 
MSC_MEDIA_PACKET
);

674 i‡(((
USBD_St‹ageTy≥Def
 *)
pdev
->
pU£rD©a_2
)->
	`Wrôe
(
lun
, 
hmsc
->
bŸ_d©a
,

675 
hmsc
->
scsi_blk_addr
,

676 (
Àn
 / 
hmsc
->
scsi_blk_size
)) < 0)

678 
	`SCSI_Sí£Code
(
pdev
, 
lun
, 
HARDWARE_ERROR
, 
WRITE_FAULT
);

683 
hmsc
->
scsi_blk_addr
 +(
Àn
 / hmsc->
scsi_blk_size
);

684 
hmsc
->
scsi_blk_Àn
 -(
Àn
 / hmsc->
scsi_blk_size
);

687 
hmsc
->
csw
.
dD©aResidue
 -
Àn
;

689 i‡(
hmsc
->
scsi_blk_Àn
 == 0U)

691 
	`MSC_BOT_SídCSW
(
pdev
, 
USBD_CSW_CMD_PASSED
);

695 
Àn
 = 
	`MIN
((
hmsc
->
scsi_blk_Àn
 * hmsc->
scsi_blk_size
), 
MSC_MEDIA_PACKET
);

697 
	`USBD_LL_Pª∑ªRe˚ive
(
pdev
, 
MSC_EPOUT_ADDR
, 
hmsc
->
bŸ_d©a
, 
Àn
);

701 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Core\Inc\usbd_core.h

21 #i‚de‡
__USBD_CORE_H


22 
	#__USBD_CORE_H


	)

24 #ifde‡
__˝lu•lus


29 
	~"usbd_c⁄f.h
"

30 
	~"usbd_def.h
"

31 
	~"usbd_i‹eq.h
"

32 
	~"usbd_˘Ãeq.h
"

47 #i‚de‡
USBD_DEBUG_LEVEL


48 
	#USBD_DEBUG_LEVEL
 0U

	)

77 
	#USBD_SOF
 
USBD_LL_SOF


	)

85 
USBD_SètusTy≥Def
 
USBD_Inô
(
USBD_H™dÀTy≥Def
 *
pdev
, c⁄° 
USBD_Des¸ùt‹sTy≥Def
 *
pdesc
, 
uöt8_t
 
id
);

86 
USBD_SètusTy≥Def
 
USBD_DeInô
(
USBD_H™dÀTy≥Def
 *
pdev
);

87 
USBD_SètusTy≥Def
 
USBD_Sèπ
(
USBD_H™dÀTy≥Def
 *
pdev
);

88 
USBD_SètusTy≥Def
 
USBD_St›
(
USBD_H™dÀTy≥Def
 *
pdev
);

89 
USBD_SètusTy≥Def
 
USBD_Regi°îCœss
(
USBD_H™dÀTy≥Def
 *
pdev
, c⁄° 
USBD_CœssTy≥Def
 *
p˛ass
);

91 
USBD_SètusTy≥Def
 
USBD_RunTe°Mode
(
USBD_H™dÀTy≥Def
 *
pdev
);

92 
USBD_SètusTy≥Def
 
USBD_SëCœssC⁄fig
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
cfgidx
);

93 
USBD_SètusTy≥Def
 
USBD_CÃCœssC⁄fig
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
cfgidx
);

95 
USBD_SètusTy≥Def
 
USBD_LL_SëupSège
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 *
p£tup
);

96 
USBD_SètusTy≥Def
 
USBD_LL_D©aOutSège
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ïnum
, uöt8_à*
pd©a
);

97 
USBD_SètusTy≥Def
 
USBD_LL_D©aInSège
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ïnum
, uöt8_à*
pd©a
);

99 
USBD_SètusTy≥Def
 
USBD_LL_Re£t
(
USBD_H™dÀTy≥Def
 *
pdev
);

100 
USBD_SètusTy≥Def
 
USBD_LL_SëS≥ed
(
USBD_H™dÀTy≥Def
 *
pdev
, 
USBD_S≥edTy≥Def
 
•ìd
);

101 
USBD_SètusTy≥Def
 
USBD_LL_Su•íd
(
USBD_H™dÀTy≥Def
 *
pdev
);

102 
USBD_SètusTy≥Def
 
USBD_LL_Resume
(
USBD_H™dÀTy≥Def
 *
pdev
);

104 
USBD_SètusTy≥Def
 
USBD_LL_SOF
(
USBD_H™dÀTy≥Def
 *
pdev
);

105 
USBD_SètusTy≥Def
 
USBD_LL_IsoINIncom∂ëe
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ïnum
);

106 
USBD_SètusTy≥Def
 
USBD_LL_IsoOUTIncom∂ëe
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ïnum
);

108 
USBD_SètusTy≥Def
 
USBD_LL_DevC⁄√˘ed
(
USBD_H™dÀTy≥Def
 *
pdev
);

109 
USBD_SètusTy≥Def
 
USBD_LL_DevDisc⁄√˘ed
(
USBD_H™dÀTy≥Def
 *
pdev
);

112 
USBD_SètusTy≥Def
 
USBD_LL_Inô
(
USBD_H™dÀTy≥Def
 *
pdev
);

113 
USBD_SètusTy≥Def
 
USBD_LL_DeInô
(
USBD_H™dÀTy≥Def
 *
pdev
);

114 
USBD_SètusTy≥Def
 
USBD_LL_Sèπ
(
USBD_H™dÀTy≥Def
 *
pdev
);

115 
USBD_SètusTy≥Def
 
USBD_LL_St›
(
USBD_H™dÀTy≥Def
 *
pdev
);

116 
USBD_SètusTy≥Def
 
USBD_LL_O≥nEP
(
USBD_H™dÀTy≥Def
 *
pdev
,

117 
uöt8_t
 
ï_addr
,

118 
uöt8_t
 
ï_ty≥
,

119 
uöt16_t
 
ï_mps
);

121 
USBD_SètusTy≥Def
 
USBD_LL_Clo£EP
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ï_addr
);

122 
USBD_SètusTy≥Def
 
USBD_LL_FlushEP
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ï_addr
);

123 
USBD_SètusTy≥Def
 
USBD_LL_SèŒEP
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ï_addr
);

124 
USBD_SètusTy≥Def
 
USBD_LL_CÀ¨SèŒEP
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ï_addr
);

125 
uöt8_t
 
USBD_LL_IsSèŒEP
(
USBD_H™dÀTy≥Def
 *
pdev
, uöt8_à
ï_addr
);

126 
USBD_SètusTy≥Def
 
USBD_LL_SëUSBAddªss
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
dev_addr
);

127 
USBD_SètusTy≥Def
 
USBD_LL_Tønsmô
(
USBD_H™dÀTy≥Def
 *
pdev
,

128 
uöt8_t
 
ï_addr
,

129 
uöt8_t
 *
pbuf
,

130 
uöt16_t
 
size
);

132 
USBD_SètusTy≥Def
 
USBD_LL_Pª∑ªRe˚ive
(
USBD_H™dÀTy≥Def
 *
pdev
,

133 
uöt8_t
 
ï_addr
,

134 
uöt8_t
 *
pbuf
,

135 
uöt16_t
 
size
);

137 
uöt32_t
 
USBD_LL_GëRxD©aSize
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ï_addr
);

138 
USBD_LL_Dñay
(
uöt32_t
 
Dñay
);

144 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Core\Inc\usbd_ctlreq.h

21 #i‚de‡
__USB_REQUEST_H


22 
	#__USB_REQUEST_H


	)

24 #ifde‡
__˝lu•lus


29 
	~"usbd_def.h
"

76 
USBD_SètusTy≥Def
 
USBD_StdDevReq
(
USBD_H™dÀTy≥Def
 *
pdev
, 
USBD_SëupReqTy≥def
 *
ªq
);

77 
USBD_SètusTy≥Def
 
USBD_StdItfReq
(
USBD_H™dÀTy≥Def
 *
pdev
, 
USBD_SëupReqTy≥def
 *
ªq
);

78 
USBD_SètusTy≥Def
 
USBD_StdEPReq
(
USBD_H™dÀTy≥Def
 *
pdev
, 
USBD_SëupReqTy≥def
 *
ªq
);

81 
USBD_CéEº‹
(
USBD_H™dÀTy≥Def
 *
pdev
, 
USBD_SëupReqTy≥def
 *
ªq
);

83 
USBD_P¨£SëupReque°
(
USBD_SëupReqTy≥def
 *
ªq
, 
uöt8_t
 *
pd©a
);

85 
USBD_GëSåög
(
uöt8_t
 *
desc
, uöt8_à*
unicode
, 
uöt16_t
 *
Àn
);

90 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Core\Inc\usbd_def.h

21 #i‚de‡
__USBD_DEF_H


22 
	#__USBD_DEF_H


	)

24 #ifde‡
__˝lu•lus


29 
	~"usbd_c⁄f.h
"

47 #i‚de‡
NULL


48 
	#NULL
 0U

	)

51 #i‚de‡
USBD_MAX_NUM_INTERFACES


52 
	#USBD_MAX_NUM_INTERFACES
 1U

	)

55 #i‚de‡
USBD_MAX_NUM_CONFIGURATION


56 
	#USBD_MAX_NUM_CONFIGURATION
 1U

	)

59 #i‚de‡
USBD_LPM_ENABLED


60 
	#USBD_LPM_ENABLED
 0U

	)

63 #i‚de‡
USBD_SELF_POWERED


64 
	#USBD_SELF_POWERED
 1U

	)

67 #i‚de‡
USBD_SUPPORT_USER_STRING_DESC


68 
	#USBD_SUPPORT_USER_STRING_DESC
 0U

	)

71 
	#USB_LEN_DEV_QUALIFIER_DESC
 0x0AU

	)

72 
	#USB_LEN_DEV_DESC
 0x12U

	)

73 
	#USB_LEN_CFG_DESC
 0x09U

	)

74 
	#USB_LEN_IF_DESC
 0x09U

	)

75 
	#USB_LEN_EP_DESC
 0x07U

	)

76 
	#USB_LEN_OTG_DESC
 0x03U

	)

77 
	#USB_LEN_LANGID_STR_DESC
 0x04U

	)

78 
	#USB_LEN_OTHER_SPEED_DESC_SIZ
 0x09U

	)

80 
	#USBD_IDX_LANGID_STR
 0x00U

	)

81 
	#USBD_IDX_MFC_STR
 0x01U

	)

82 
	#USBD_IDX_PRODUCT_STR
 0x02U

	)

83 
	#USBD_IDX_SERIAL_STR
 0x03U

	)

84 
	#USBD_IDX_CONFIG_STR
 0x04U

	)

85 
	#USBD_IDX_INTERFACE_STR
 0x05U

	)

87 
	#USB_REQ_TYPE_STANDARD
 0x00U

	)

88 
	#USB_REQ_TYPE_CLASS
 0x20U

	)

89 
	#USB_REQ_TYPE_VENDOR
 0x40U

	)

90 
	#USB_REQ_TYPE_MASK
 0x60U

	)

92 
	#USB_REQ_RECIPIENT_DEVICE
 0x00U

	)

93 
	#USB_REQ_RECIPIENT_INTERFACE
 0x01U

	)

94 
	#USB_REQ_RECIPIENT_ENDPOINT
 0x02U

	)

95 
	#USB_REQ_RECIPIENT_MASK
 0x03U

	)

97 
	#USB_REQ_GET_STATUS
 0x00U

	)

98 
	#USB_REQ_CLEAR_FEATURE
 0x01U

	)

99 
	#USB_REQ_SET_FEATURE
 0x03U

	)

100 
	#USB_REQ_SET_ADDRESS
 0x05U

	)

101 
	#USB_REQ_GET_DESCRIPTOR
 0x06U

	)

102 
	#USB_REQ_SET_DESCRIPTOR
 0x07U

	)

103 
	#USB_REQ_GET_CONFIGURATION
 0x08U

	)

104 
	#USB_REQ_SET_CONFIGURATION
 0x09U

	)

105 
	#USB_REQ_GET_INTERFACE
 0x0AU

	)

106 
	#USB_REQ_SET_INTERFACE
 0x0BU

	)

107 
	#USB_REQ_SYNCH_FRAME
 0x0CU

	)

109 
	#USB_DESC_TYPE_DEVICE
 0x01U

	)

110 
	#USB_DESC_TYPE_CONFIGURATION
 0x02U

	)

111 
	#USB_DESC_TYPE_STRING
 0x03U

	)

112 
	#USB_DESC_TYPE_INTERFACE
 0x04U

	)

113 
	#USB_DESC_TYPE_ENDPOINT
 0x05U

	)

114 
	#USB_DESC_TYPE_DEVICE_QUALIFIER
 0x06U

	)

115 
	#USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION
 0x07U

	)

116 
	#USB_DESC_TYPE_BOS
 0x0FU

	)

118 
	#USB_CONFIG_REMOTE_WAKEUP
 0x02U

	)

119 
	#USB_CONFIG_SELF_POWERED
 0x01U

	)

121 
	#USB_FEATURE_EP_HALT
 0x00U

	)

122 
	#USB_FEATURE_REMOTE_WAKEUP
 0x01U

	)

123 
	#USB_FEATURE_TEST_MODE
 0x02U

	)

125 
	#USB_DEVICE_CAPABITY_TYPE
 0x10U

	)

127 
	#USB_HS_MAX_PACKET_SIZE
 512U

	)

128 
	#USB_FS_MAX_PACKET_SIZE
 64U

	)

129 
	#USB_MAX_EP0_SIZE
 64U

	)

132 
	#USBD_STATE_DEFAULT
 0x01U

	)

133 
	#USBD_STATE_ADDRESSED
 0x02U

	)

134 
	#USBD_STATE_CONFIGURED
 0x03U

	)

135 
	#USBD_STATE_SUSPENDED
 0x04U

	)

139 
	#USBD_EP0_IDLE
 0x00U

	)

140 
	#USBD_EP0_SETUP
 0x01U

	)

141 
	#USBD_EP0_DATA_IN
 0x02U

	)

142 
	#USBD_EP0_DATA_OUT
 0x03U

	)

143 
	#USBD_EP0_STATUS_IN
 0x04U

	)

144 
	#USBD_EP0_STATUS_OUT
 0x05U

	)

145 
	#USBD_EP0_STALL
 0x06U

	)

147 
	#USBD_EP_TYPE_CTRL
 0x00U

	)

148 
	#USBD_EP_TYPE_ISOC
 0x01U

	)

149 
	#USBD_EP_TYPE_BULK
 0x02U

	)

150 
	#USBD_EP_TYPE_INTR
 0x03U

	)

162 
	susb_£tup_ªq


164 
uöt8_t
 
bmReque°
;

165 
uöt8_t
 
bReque°
;

166 
uöt16_t
 
wVÆue
;

167 
uöt16_t
 
wIndex
;

168 
uöt16_t
 
wLígth
;

169 } 
	tUSBD_SëupReqTy≥def
;

171 
_USBD_H™dÀTy≥Def
;

173 
	s_Devi˚_cb


175 
uöt8_t
 (*
Inô
)(
_USBD_H™dÀTy≥Def
 *
pdev
, uöt8_à
cfgidx
);

176 
uöt8_t
 (*
DeInô
)(
_USBD_H™dÀTy≥Def
 *
pdev
, uöt8_à
cfgidx
);

178 
uöt8_t
 (*
Sëup
)(
_USBD_H™dÀTy≥Def
 *
pdev
, 
USBD_SëupReqTy≥def
 *
ªq
);

179 
uöt8_t
 (*
EP0_TxSít
)(
_USBD_H™dÀTy≥Def
 *
pdev
);

180 
uöt8_t
 (*
EP0_RxRódy
)(
_USBD_H™dÀTy≥Def
 *
pdev
);

182 
uöt8_t
 (*
D©aIn
)(
_USBD_H™dÀTy≥Def
 *
pdev
, uöt8_à
ïnum
);

183 
uöt8_t
 (*
D©aOut
)(
_USBD_H™dÀTy≥Def
 *
pdev
, uöt8_à
ïnum
);

184 
uöt8_t
 (*
SOF
)(
_USBD_H™dÀTy≥Def
 *
pdev
);

185 
uöt8_t
 (*
IsoINIncom∂ëe
)(
_USBD_H™dÀTy≥Def
 *
pdev
, uöt8_à
ïnum
);

186 
uöt8_t
 (*
IsoOUTIncom∂ëe
)(
_USBD_H™dÀTy≥Def
 *
pdev
, uöt8_à
ïnum
);

188 
uöt8_t
 *(*
GëHSC⁄figDes¸ùt‹
)(
uöt16_t
 *
Àngth
);

189 
uöt8_t
 *(*
GëFSC⁄figDes¸ùt‹
)(
uöt16_t
 *
Àngth
);

190 
uöt8_t
 *(*
GëOthîS≥edC⁄figDes¸ùt‹
)(
uöt16_t
 *
Àngth
);

191 
uöt8_t
 *(*
GëDevi˚QuÆifõrDes¸ùt‹
)(
uöt16_t
 *
Àngth
);

192 #i‡(
USBD_SUPPORT_USER_STRING_DESC
 == 1U)

193 
uöt8_t
 *(*
GëU§SåDes¸ùt‹
)(
_USBD_H™dÀTy≥Def
 *
pdev
, uöt8_à
ödex
, 
uöt16_t
 *
Àngth
);

196 } 
	tUSBD_CœssTy≥Def
;

201 
USBD_SPEED_HIGH
 = 0U,

202 
USBD_SPEED_FULL
 = 1U,

203 
USBD_SPEED_LOW
 = 2U,

204 } 
	tUSBD_S≥edTy≥Def
;

209 
USBD_OK
 = 0U,

210 
USBD_BUSY
,

211 
USBD_FAIL
,

212 } 
	tUSBD_SètusTy≥Def
;

217 
uöt8_t
 *(*
GëDevi˚Des¸ùt‹
)(
USBD_S≥edTy≥Def
 
•ìd
, 
uöt16_t
 *
Àngth
);

218 
uöt8_t
 *(*
GëL™gIDSåDes¸ùt‹
)(
USBD_S≥edTy≥Def
 
•ìd
, 
uöt16_t
 *
Àngth
);

219 
uöt8_t
 *(*
GëM™uÁ˘uªrSåDes¸ùt‹
)(
USBD_S≥edTy≥Def
 
•ìd
, 
uöt16_t
 *
Àngth
);

220 
uöt8_t
 *(*
GëProdu˘SåDes¸ùt‹
)(
USBD_S≥edTy≥Def
 
•ìd
, 
uöt16_t
 *
Àngth
);

221 
uöt8_t
 *(*
GëSîülSåDes¸ùt‹
)(
USBD_S≥edTy≥Def
 
•ìd
, 
uöt16_t
 *
Àngth
);

222 
uöt8_t
 *(*
GëC⁄figuøti⁄SåDes¸ùt‹
)(
USBD_S≥edTy≥Def
 
•ìd
, 
uöt16_t
 *
Àngth
);

223 
uöt8_t
 *(*
GëI¡îÁ˚SåDes¸ùt‹
)(
USBD_S≥edTy≥Def
 
•ìd
, 
uöt16_t
 *
Àngth
);

224 #i‡(
USBD_LPM_ENABLED
 == 1U)

225 
uöt8_t
 *(*
GëBOSDes¸ùt‹
)(
USBD_S≥edTy≥Def
 
•ìd
, 
uöt16_t
 *
Àngth
);

227 } 
	tUSBD_Des¸ùt‹sTy≥Def
;

232 
uöt32_t
 
°©us
;

233 
uöt32_t
 
is_u£d
;

234 
uöt32_t
 
tŸÆ_Àngth
;

235 
uöt32_t
 
ªm_Àngth
;

236 
uöt32_t
 
max∑ckë
;

237 } 
	tUSBD_EndpoötTy≥Def
;

240 
	s_USBD_H™dÀTy≥Def


242 
uöt8_t
 
id
;

243 
uöt32_t
 
dev_c⁄fig
;

244 
uöt32_t
 
dev_deÁu…_c⁄fig
;

245 
uöt32_t
 
dev_c⁄fig_°©us
;

246 
USBD_S≥edTy≥Def
 
dev_•ìd
;

247 
USBD_EndpoötTy≥Def
 
ï_ö
[16];

248 
USBD_EndpoötTy≥Def
 
ï_out
[16];

249 
uöt32_t
 
ï0_°©e
;

250 
uöt32_t
 
ï0_d©a_Àn
;

251 
uöt8_t
 
dev_°©e
;

252 
uöt8_t
 
dev_ﬁd_°©e
;

253 
uöt8_t
 
dev_addªss
;

254 
uöt8_t
 
dev_c⁄√˘i⁄_°©us
;

255 
uöt8_t
 
dev_ã°_mode
;

256 
uöt32_t
 
dev_ªmŸe_wakeup
;

258 
USBD_SëupReqTy≥def
 
ªque°
;

259 c⁄° 
USBD_Des¸ùt‹sTy≥Def
 *
pDesc
;

260 c⁄° 
USBD_CœssTy≥Def
 *
pCœss
;

261 *
pCœssD©a
;

262 *
pU£rD©a
;

263 *
pCœssD©a_2
;

264 *
pU£rD©a_2
;

265 *
pD©a
;

266 } 
	tUSBD_H™dÀTy≥Def
;

277 
	#SWAPBYTE
(
addr
Ë(((
uöt16_t
)(*((
uöt8_t
 *)(addr)))) + \

278 (((
uöt16_t
)(*(((
uöt8_t
 *)(
addr
)Ë+ 1U))Ë<< 8U))

	)

280 
	#LOBYTE
(
x
Ë((
uöt8_t
)((xË& 0x00FFU))

	)

281 
	#HIBYTE
(
x
Ë((
uöt8_t
)(((xË& 0xFF00UË>> 8U))

	)

282 
	#MIN
(
a
, 
b
Ë((◊Ë< (b)Ë? (aË: (b))

	)

283 
	#MAX
(
a
, 
b
Ë((◊Ë> (b)Ë? (aË: (b))

	)

286 #i‡ 
deföed
 ( 
__GNUC__
 )

287 #i‚de‡
__wók


288 
	#__wók
 
	`__©åibuã__
((
wók
))

	)

290 #i‚de‡
__∑cked


291 
	#__∑cked
 
	`__©åibuã__
((
__∑cked__
))

	)

299 #i‡
deföed
 ( 
__GNUC__
 ) && !deföed (
__CC_ARM
)

300 #i‚de‡
__ALIGN_END


301 
	#__ALIGN_END
 
	`__©åibuã__
 ((
	`Æig√d
 (4U)))

	)

303 #i‚de‡
__ALIGN_BEGIN


304 
	#__ALIGN_BEGIN


	)

307 #i‚de‡
__ALIGN_END


308 
	#__ALIGN_END


	)

310 #i‚de‡
__ALIGN_BEGIN


311 #i‡
deföed
 (
__CC_ARM
)

312 
	#__ALIGN_BEGIN
 
	`__Æign
(4U)

	)

313 #ñi‡
deföed
 (
__ICCARM__
)

314 
	#__ALIGN_BEGIN


	)

340 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Core\Inc\usbd_ioreq.h

21 #i‚de‡
__USBD_IOREQ_H


22 
	#__USBD_IOREQ_H


	)

24 #ifde‡
__˝lu•lus


29 
	~"usbd_def.h
"

30 
	~"usbd_c‹e.h
"

80 
USBD_SètusTy≥Def
 
USBD_CéSídD©a
(
USBD_H™dÀTy≥Def
 *
pdev
,

81 
uöt8_t
 *
pbuf
,

82 
uöt16_t
 
Àn
);

84 
USBD_SètusTy≥Def
 
USBD_CéC⁄töueSídD©a
(
USBD_H™dÀTy≥Def
 *
pdev
,

85 
uöt8_t
 *
pbuf
,

86 
uöt16_t
 
Àn
);

88 
USBD_SètusTy≥Def
 
USBD_CéPª∑ªRx
(
USBD_H™dÀTy≥Def
 *
pdev
,

89 
uöt8_t
 *
pbuf
,

90 
uöt16_t
 
Àn
);

92 
USBD_SètusTy≥Def
 
USBD_CéC⁄töueRx
(
USBD_H™dÀTy≥Def
 *
pdev
,

93 
uöt8_t
 *
pbuf
,

94 
uöt16_t
 
Àn
);

96 
USBD_SètusTy≥Def
 
USBD_CéSídSètus
(
USBD_H™dÀTy≥Def
 *
pdev
);

98 
USBD_SètusTy≥Def
 
USBD_CéRe˚iveSètus
(
USBD_H™dÀTy≥Def
 *
pdev
);

100 
uöt32_t
 
USBD_GëRxCou¡
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ï_addr
);

106 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Core\Src\usbd_core.c

21 
	~"usbd_c‹e.h
"

89 
USBD_SètusTy≥Def
 
	$USBD_Inô
(
USBD_H™dÀTy≥Def
 *
pdev
,

90 c⁄° 
USBD_Des¸ùt‹sTy≥Def
 *
pdesc
, 
uöt8_t
 
id
)

93 i‡(
pdev
 =
NULL
)

95 #i‡(
USBD_DEBUG_LEVEL
 > 1U)

96 
	`USBD_EºLog
("Invalid Device handle");

98  
USBD_FAIL
;

102 i‡(
pdev
->
pCœss
 !
NULL
)

104 
pdev
->
pCœss
 = 
NULL
;

108 i‡(
pdesc
 !
NULL
)

110 
pdev
->
pDesc
 = 
pdesc
;

114 
pdev
->
dev_°©e
 = 
USBD_STATE_DEFAULT
;

115 
pdev
->
id
 = id;

117 
	`USBD_LL_Inô
(
pdev
);

119  
USBD_OK
;

120 
	}
}

128 
USBD_SètusTy≥Def
 
	$USBD_DeInô
(
USBD_H™dÀTy≥Def
 *
pdev
)

131 
pdev
->
dev_°©e
 = 
USBD_STATE_DEFAULT
;

134 
pdev
->
pCœss
->
	`DeInô
’dev, (
uöt8_t
Ìdev->
dev_c⁄fig
);

137 
	`USBD_LL_St›
(
pdev
);

140 
	`USBD_LL_DeInô
(
pdev
);

142  
USBD_OK
;

143 
	}
}

152 
USBD_SètusTy≥Def
 
	$USBD_Regi°îCœss
(
USBD_H™dÀTy≥Def
 *
pdev
, c⁄° 
USBD_CœssTy≥Def
 *
p˛ass
)

154 
USBD_SètusTy≥Def
 
°©us
 = 
USBD_OK
;

155 i‡(
p˛ass
 !
NULL
)

158 
pdev
->
pCœss
 = 
p˛ass
;

159 
°©us
 = 
USBD_OK
;

163 #i‡(
USBD_DEBUG_LEVEL
 > 1U)

164 
	`USBD_EºLog
("Invalid Class handle");

166 
°©us
 = 
USBD_FAIL
;

169  
°©us
;

170 
	}
}

178 
USBD_SètusTy≥Def
 
	$USBD_Sèπ
(
USBD_H™dÀTy≥Def
 *
pdev
)

181 
	`USBD_LL_Sèπ
(
pdev
);

183  
USBD_OK
;

184 
	}
}

192 
USBD_SètusTy≥Def
 
	$USBD_St›
(
USBD_H™dÀTy≥Def
 *
pdev
)

195 
pdev
->
pCœss
->
	`DeInô
’dev, (
uöt8_t
Ìdev->
dev_c⁄fig
);

198 
	`USBD_LL_St›
(
pdev
);

200  
USBD_OK
;

201 
	}
}

209 
USBD_SètusTy≥Def
 
	$USBD_RunTe°Mode
(
USBD_H™dÀTy≥Def
 *
pdev
)

212 
	`UNUSED
(
pdev
);

214  
USBD_OK
;

215 
	}
}

225 
USBD_SètusTy≥Def
 
	$USBD_SëCœssC⁄fig
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
cfgidx
)

227 
USBD_SètusTy≥Def
 
ªt
 = 
USBD_FAIL
;

229 i‡(
pdev
->
pCœss
 !
NULL
)

232 i‡(
pdev
->
pCœss
->
	`Inô
’dev, 
cfgidx
) == 0U)

234 
ªt
 = 
USBD_OK
;

238  
ªt
;

239 
	}
}

248 
USBD_SètusTy≥Def
 
	$USBD_CÃCœssC⁄fig
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
cfgidx
)

251 
pdev
->
pCœss
->
	`DeInô
’dev, 
cfgidx
);

253  
USBD_OK
;

254 
	}
}

263 
USBD_SètusTy≥Def
 
	$USBD_LL_SëupSège
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 *
p£tup
)

265 
	`USBD_P¨£SëupReque°
(&
pdev
->
ªque°
, 
p£tup
);

267 
pdev
->
ï0_°©e
 = 
USBD_EP0_SETUP
;

269 
pdev
->
ï0_d©a_Àn
 =Ödev->
ªque°
.
wLígth
;

271 
pdev
->
ªque°
.
bmReque°
 & 0x1FU)

273 
USB_REQ_RECIPIENT_DEVICE
:

274 
	`USBD_StdDevReq
(
pdev
, &pdev->
ªque°
);

277 
USB_REQ_RECIPIENT_INTERFACE
:

278 
	`USBD_StdItfReq
(
pdev
, &pdev->
ªque°
);

281 
USB_REQ_RECIPIENT_ENDPOINT
:

282 
	`USBD_StdEPReq
(
pdev
, &pdev->
ªque°
);

286 
	`USBD_LL_SèŒEP
(
pdev
, (pdev->
ªque°
.
bmReque°
 & 0x80U));

290  
USBD_OK
;

291 
	}
}

300 
USBD_SètusTy≥Def
 
	$USBD_LL_D©aOutSège
(
USBD_H™dÀTy≥Def
 *
pdev
,

301 
uöt8_t
 
ïnum
, uöt8_à*
pd©a
)

303 
USBD_EndpoötTy≥Def
 *
≥p
;

305 i‡(
ïnum
 == 0U)

307 
≥p
 = &
pdev
->
ï_out
[0];

309 i‡(
pdev
->
ï0_°©e
 =
USBD_EP0_DATA_OUT
)

311 i‡(
≥p
->
ªm_Àngth
 >Öï->
max∑ckë
)

313 
≥p
->
ªm_Àngth
 -≥p->
max∑ckë
;

315 
	`USBD_CéC⁄töueRx
(
pdev
, 
pd©a
,

316 (
uöt16_t
)
	`MIN
(
≥p
->
ªm_Àngth
,Öï->
max∑ckë
));

320 i‡((
pdev
->
pCœss
->
EP0_RxRódy
 !
NULL
) &&

321 (
pdev
->
dev_°©e
 =
USBD_STATE_CONFIGURED
))

323 
pdev
->
pCœss
->
	`EP0_RxRódy
(pdev);

325 
	`USBD_CéSídSètus
(
pdev
);

330 i‡(
pdev
->
ï0_°©e
 =
USBD_EP0_STATUS_OUT
)

335 
pdev
->
ï0_°©e
 = 
USBD_EP0_IDLE
;

336 
	`USBD_LL_SèŒEP
(
pdev
, 0U);

340 i‡((
pdev
->
pCœss
->
D©aOut
 !
NULL
) &&

341 (
pdev
->
dev_°©e
 =
USBD_STATE_CONFIGURED
))

343 
pdev
->
pCœss
->
	`D©aOut
’dev, 
ïnum
);

348  
USBD_FAIL
;

351  
USBD_OK
;

352 
	}
}

361 
USBD_SètusTy≥Def
 
	$USBD_LL_D©aInSège
(
USBD_H™dÀTy≥Def
 *
pdev
,

362 
uöt8_t
 
ïnum
, uöt8_à*
pd©a
)

364 
USBD_EndpoötTy≥Def
 *
≥p
;

366 i‡(
ïnum
 == 0U)

368 
≥p
 = &
pdev
->
ï_ö
[0];

370 i‡(
pdev
->
ï0_°©e
 =
USBD_EP0_DATA_IN
)

372 i‡(
≥p
->
ªm_Àngth
 >Öï->
max∑ckë
)

374 
≥p
->
ªm_Àngth
 -≥p->
max∑ckë
;

376 
	`USBD_CéC⁄töueSídD©a
(
pdev
, 
pd©a
, (
uöt16_t
)
≥p
->
ªm_Àngth
);

379 
	`USBD_LL_Pª∑ªRe˚ive
(
pdev
, 0U, 
NULL
, 0U);

384 i‡((
≥p
->
tŸÆ_Àngth
 %Öï->
max∑ckë
 == 0U) &&

385 (
≥p
->
tŸÆ_Àngth
 >≥p->
max∑ckë
) &&

386 (
≥p
->
tŸÆ_Àngth
 < 
pdev
->
ï0_d©a_Àn
))

388 
	`USBD_CéC⁄töueSídD©a
(
pdev
, 
NULL
, 0U);

389 
pdev
->
ï0_d©a_Àn
 = 0U;

392 
	`USBD_LL_Pª∑ªRe˚ive
(
pdev
, 0U, 
NULL
, 0U);

396 i‡((
pdev
->
pCœss
->
EP0_TxSít
 !
NULL
) &&

397 (
pdev
->
dev_°©e
 =
USBD_STATE_CONFIGURED
))

399 
pdev
->
pCœss
->
	`EP0_TxSít
(pdev);

401 
	`USBD_LL_SèŒEP
(
pdev
, 0x80U);

402 
	`USBD_CéRe˚iveSètus
(
pdev
);

408 i‡((
pdev
->
ï0_°©e
 =
USBD_EP0_STATUS_IN
) ||

409 (
pdev
->
ï0_°©e
 =
USBD_EP0_IDLE
))

411 
	`USBD_LL_SèŒEP
(
pdev
, 0x80U);

415 i‡(
pdev
->
dev_ã°_mode
 == 1U)

417 
	`USBD_RunTe°Mode
(
pdev
);

418 
pdev
->
dev_ã°_mode
 = 0U;

421 i‡((
pdev
->
pCœss
->
D©aIn
 !
NULL
) &&

422 (
pdev
->
dev_°©e
 =
USBD_STATE_CONFIGURED
))

424 
pdev
->
pCœss
->
	`D©aIn
’dev, 
ïnum
);

429  
USBD_FAIL
;

432  
USBD_OK
;

433 
	}
}

442 
USBD_SètusTy≥Def
 
	$USBD_LL_Re£t
(
USBD_H™dÀTy≥Def
 *
pdev
)

445 
	`USBD_LL_O≥nEP
(
pdev
, 0x00U, 
USBD_EP_TYPE_CTRL
, 
USB_MAX_EP0_SIZE
);

446 
pdev
->
ï_out
[0x00U & 0xFU].
is_u£d
 = 1U;

448 
pdev
->
ï_out
[0].
max∑ckë
 = 
USB_MAX_EP0_SIZE
;

451 
	`USBD_LL_O≥nEP
(
pdev
, 0x80U, 
USBD_EP_TYPE_CTRL
, 
USB_MAX_EP0_SIZE
);

452 
pdev
->
ï_ö
[0x80U & 0xFU].
is_u£d
 = 1U;

454 
pdev
->
ï_ö
[0].
max∑ckë
 = 
USB_MAX_EP0_SIZE
;

457 
pdev
->
dev_°©e
 = 
USBD_STATE_DEFAULT
;

458 
pdev
->
ï0_°©e
 = 
USBD_EP0_IDLE
;

459 
pdev
->
dev_c⁄fig
 = 0U;

460 
pdev
->
dev_ªmŸe_wakeup
 = 0U;

462 i‡(
pdev
->
pCœssD©a
)

464 
pdev
->
pCœss
->
	`DeInô
’dev, (
uöt8_t
Ìdev->
dev_c⁄fig
);

467  
USBD_OK
;

468 
	}
}

476 
USBD_SètusTy≥Def
 
	$USBD_LL_SëS≥ed
(
USBD_H™dÀTy≥Def
 *
pdev
,

477 
USBD_S≥edTy≥Def
 
•ìd
)

479 
pdev
->
dev_•ìd
 = 
•ìd
;

481  
USBD_OK
;

482 
	}
}

491 
USBD_SètusTy≥Def
 
	$USBD_LL_Su•íd
(
USBD_H™dÀTy≥Def
 *
pdev
)

493 
pdev
->
dev_ﬁd_°©e
 =Ödev->
dev_°©e
;

494 
pdev
->
dev_°©e
 = 
USBD_STATE_SUSPENDED
;

496  
USBD_OK
;

497 
	}
}

506 
USBD_SètusTy≥Def
 
	$USBD_LL_Resume
(
USBD_H™dÀTy≥Def
 *
pdev
)

508 i‡(
pdev
->
dev_°©e
 =
USBD_STATE_SUSPENDED
)

510 
pdev
->
dev_°©e
 =Ödev->
dev_ﬁd_°©e
;

513  
USBD_OK
;

514 
	}
}

523 
USBD_SètusTy≥Def
 
	$USBD_LL_SOF
(
USBD_H™dÀTy≥Def
 *
pdev
)

525 i‡(
pdev
->
dev_°©e
 =
USBD_STATE_CONFIGURED
)

527 i‡(
pdev
->
pCœss
->
SOF
 !
NULL
)

529 
pdev
->
pCœss
->
	`SOF
(pdev);

533  
USBD_OK
;

534 
	}
}

542 
USBD_SètusTy≥Def
 
	$USBD_LL_IsoINIncom∂ëe
(
USBD_H™dÀTy≥Def
 *
pdev
,

543 
uöt8_t
 
ïnum
)

546 
	`UNUSED
(
pdev
);

547 
	`UNUSED
(
ïnum
);

549  
USBD_OK
;

550 
	}
}

558 
USBD_SètusTy≥Def
 
	$USBD_LL_IsoOUTIncom∂ëe
(
USBD_H™dÀTy≥Def
 *
pdev
,

559 
uöt8_t
 
ïnum
)

562 
	`UNUSED
(
pdev
);

563 
	`UNUSED
(
ïnum
);

565  
USBD_OK
;

566 
	}
}

574 
USBD_SètusTy≥Def
 
	$USBD_LL_DevC⁄√˘ed
(
USBD_H™dÀTy≥Def
 *
pdev
)

577 
	`UNUSED
(
pdev
);

579  
USBD_OK
;

580 
	}
}

588 
USBD_SètusTy≥Def
 
	$USBD_LL_DevDisc⁄√˘ed
(
USBD_H™dÀTy≥Def
 *
pdev
)

591 
pdev
->
dev_°©e
 = 
USBD_STATE_DEFAULT
;

592 
pdev
->
pCœss
->
	`DeInô
’dev, (
uöt8_t
Ìdev->
dev_c⁄fig
);

594  
USBD_OK
;

595 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Core\Src\usbd_ctlreq.c

21 
	~"usbd_˘Ãeq.h
"

22 
	~"usbd_i‹eq.h
"

74 
USBD_GëDes¸ùt‹
(
USBD_H™dÀTy≥Def
 *
pdev
,

75 
USBD_SëupReqTy≥def
 *
ªq
);

77 
USBD_SëAddªss
(
USBD_H™dÀTy≥Def
 *
pdev
,

78 
USBD_SëupReqTy≥def
 *
ªq
);

80 
USBD_SëC⁄fig
(
USBD_H™dÀTy≥Def
 *
pdev
,

81 
USBD_SëupReqTy≥def
 *
ªq
);

83 
USBD_GëC⁄fig
(
USBD_H™dÀTy≥Def
 *
pdev
,

84 
USBD_SëupReqTy≥def
 *
ªq
);

86 
USBD_GëSètus
(
USBD_H™dÀTy≥Def
 *
pdev
,

87 
USBD_SëupReqTy≥def
 *
ªq
);

89 
USBD_SëFótuª
(
USBD_H™dÀTy≥Def
 *
pdev
,

90 
USBD_SëupReqTy≥def
 *
ªq
);

92 
USBD_CÃFótuª
(
USBD_H™dÀTy≥Def
 *
pdev
,

93 
USBD_SëupReqTy≥def
 *
ªq
);

95 
uöt8_t
 
USBD_GëLí
(uöt8_à*
buf
);

114 
USBD_SètusTy≥Def
 
	$USBD_StdDevReq
(
USBD_H™dÀTy≥Def
 *
pdev
,

115 
USBD_SëupReqTy≥def
 *
ªq
)

117 
USBD_SètusTy≥Def
 
ªt
 = 
USBD_OK
;

119 
ªq
->
bmReque°
 & 
USB_REQ_TYPE_MASK
)

121 
USB_REQ_TYPE_CLASS
:

122 
USB_REQ_TYPE_VENDOR
:

123 
pdev
->
pCœss
->
	`Sëup
’dev, 
ªq
);

126 
USB_REQ_TYPE_STANDARD
:

127 
ªq
->
bReque°
)

129 
USB_REQ_GET_DESCRIPTOR
:

130 
	`USBD_GëDes¸ùt‹
(
pdev
, 
ªq
);

133 
USB_REQ_SET_ADDRESS
:

134 
	`USBD_SëAddªss
(
pdev
, 
ªq
);

137 
USB_REQ_SET_CONFIGURATION
:

138 
	`USBD_SëC⁄fig
(
pdev
, 
ªq
);

141 
USB_REQ_GET_CONFIGURATION
:

142 
	`USBD_GëC⁄fig
(
pdev
, 
ªq
);

145 
USB_REQ_GET_STATUS
:

146 
	`USBD_GëSètus
(
pdev
, 
ªq
);

149 
USB_REQ_SET_FEATURE
:

150 
	`USBD_SëFótuª
(
pdev
, 
ªq
);

153 
USB_REQ_CLEAR_FEATURE
:

154 
	`USBD_CÃFótuª
(
pdev
, 
ªq
);

158 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

164 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

168  
ªt
;

169 
	}
}

178 
USBD_SètusTy≥Def
 
	$USBD_StdItfReq
(
USBD_H™dÀTy≥Def
 *
pdev
,

179 
USBD_SëupReqTy≥def
 *
ªq
)

181 
USBD_SètusTy≥Def
 
ªt
 = 
USBD_OK
;

183 
ªq
->
bmReque°
 & 
USB_REQ_TYPE_MASK
)

185 
USB_REQ_TYPE_CLASS
:

186 
USB_REQ_TYPE_VENDOR
:

187 
USB_REQ_TYPE_STANDARD
:

188 
pdev
->
dev_°©e
)

190 
USBD_STATE_DEFAULT
:

191 
USBD_STATE_ADDRESSED
:

192 
USBD_STATE_CONFIGURED
:

194 i‡(
	`LOBYTE
(
ªq
->
wIndex
Ë<
USBD_MAX_NUM_INTERFACES
)

196 
ªt
 = (
USBD_SètusTy≥Def
)
pdev
->
pCœss
->
	`Sëup
’dev, 
ªq
);

198 i‡((
ªq
->
wLígth
 =0UË&& (
ªt
 =
USBD_OK
))

200 
	`USBD_CéSídSètus
(
pdev
);

205 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

210 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

216 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

220  
USBD_OK
;

221 
	}
}

230 
USBD_SètusTy≥Def
 
	$USBD_StdEPReq
(
USBD_H™dÀTy≥Def
 *
pdev
,

231 
USBD_SëupReqTy≥def
 *
ªq
)

233 
USBD_EndpoötTy≥Def
 *
≥p
;

234 
uöt8_t
 
ï_addr
;

235 
USBD_SètusTy≥Def
 
ªt
 = 
USBD_OK
;

236 
ï_addr
 = 
	`LOBYTE
(
ªq
->
wIndex
);

238 
ªq
->
bmReque°
 & 
USB_REQ_TYPE_MASK
)

240 
USB_REQ_TYPE_CLASS
:

241 
USB_REQ_TYPE_VENDOR
:

242 
pdev
->
pCœss
->
	`Sëup
’dev, 
ªq
);

245 
USB_REQ_TYPE_STANDARD
:

247 i‡((
ªq
->
bmReque°
 & 0x60U) == 0x20U)

249 
ªt
 = (
USBD_SètusTy≥Def
)
pdev
->
pCœss
->
	`Sëup
’dev, 
ªq
);

251  
ªt
;

254 
ªq
->
bReque°
)

256 
USB_REQ_SET_FEATURE
:

257 
pdev
->
dev_°©e
)

259 
USBD_STATE_ADDRESSED
:

260 i‡((
ï_addr
 != 0x00U) && (ep_addr != 0x80U))

262 
	`USBD_LL_SèŒEP
(
pdev
, 
ï_addr
);

263 
	`USBD_LL_SèŒEP
(
pdev
, 0x80U);

267 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

271 
USBD_STATE_CONFIGURED
:

272 i‡(
ªq
->
wVÆue
 =
USB_FEATURE_EP_HALT
)

274 i‡((
ï_addr
 != 0x00U) &&

275 (
ï_addr
 !0x80UË&& (
ªq
->
wLígth
 == 0x00U))

277 
	`USBD_LL_SèŒEP
(
pdev
, 
ï_addr
);

280 
	`USBD_CéSídSètus
(
pdev
);

285 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

290 
USB_REQ_CLEAR_FEATURE
:

292 
pdev
->
dev_°©e
)

294 
USBD_STATE_ADDRESSED
:

295 i‡((
ï_addr
 != 0x00U) && (ep_addr != 0x80U))

297 
	`USBD_LL_SèŒEP
(
pdev
, 
ï_addr
);

298 
	`USBD_LL_SèŒEP
(
pdev
, 0x80U);

302 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

306 
USBD_STATE_CONFIGURED
:

307 i‡(
ªq
->
wVÆue
 =
USB_FEATURE_EP_HALT
)

309 i‡((
ï_addr
 & 0x7FU) != 0x00U)

311 
	`USBD_LL_CÀ¨SèŒEP
(
pdev
, 
ï_addr
);

313 
	`USBD_CéSídSètus
(
pdev
);

318 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

323 
USB_REQ_GET_STATUS
:

324 
pdev
->
dev_°©e
)

326 
USBD_STATE_ADDRESSED
:

327 i‡((
ï_addr
 != 0x00U) && (ep_addr != 0x80U))

329 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

332 
≥p
 = ((
ï_addr
 & 0x80UË=0x80UË? &
pdev
->
ï_ö
[ep_addr & 0x7FU] : \

333 &
pdev
->
ï_out
[
ï_addr
 & 0x7FU];

335 
≥p
->
°©us
 = 0x0000U;

337 
	`USBD_CéSídD©a
(
pdev
, (
uöt8_t
 *)(*)&
≥p
->
°©us
, 2U);

340 
USBD_STATE_CONFIGURED
:

341 i‡((
ï_addr
 & 0x80U) == 0x80U)

343 i‡(
pdev
->
ï_ö
[
ï_addr
 & 0xFU].
is_u£d
 == 0U)

345 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

351 i‡(
pdev
->
ï_out
[
ï_addr
 & 0xFU].
is_u£d
 == 0U)

353 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

358 
≥p
 = ((
ï_addr
 & 0x80UË=0x80UË? &
pdev
->
ï_ö
[ep_addr & 0x7FU] : \

359 &
pdev
->
ï_out
[
ï_addr
 & 0x7FU];

361 i‡((
ï_addr
 == 0x00U) || (ep_addr == 0x80U))

363 
≥p
->
°©us
 = 0x0000U;

365 i‡(
	`USBD_LL_IsSèŒEP
(
pdev
, 
ï_addr
))

367 
≥p
->
°©us
 = 0x0001U;

371 
≥p
->
°©us
 = 0x0000U;

374 
	`USBD_CéSídD©a
(
pdev
, (
uöt8_t
 *)(*)&
≥p
->
°©us
, 2U);

378 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

384 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

390 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

394  
ªt
;

395 
	}
}

405 
	$USBD_GëDes¸ùt‹
(
USBD_H™dÀTy≥Def
 *
pdev
,

406 
USBD_SëupReqTy≥def
 *
ªq
)

408 
uöt16_t
 
Àn
 = 0U;

409 
uöt8_t
 *
pbuf
 = 
NULL
;

410 
uöt8_t
 
îr
 = 0U;

412 
ªq
->
wVÆue
 >> 8)

414 #i‡(
USBD_LPM_ENABLED
 == 1U)

415 
USB_DESC_TYPE_BOS
:

416 i‡(
pdev
->
pDesc
->
GëBOSDes¸ùt‹
 !
NULL
)

418 
pbuf
 = 
pdev
->
pDesc
->
	`GëBOSDes¸ùt‹
’dev->
dev_•ìd
, &
Àn
);

422 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

423 
îr
++;

427 
USB_DESC_TYPE_DEVICE
:

428 
pbuf
 = 
pdev
->
pDesc
->
	`GëDevi˚Des¸ùt‹
’dev->
dev_•ìd
, &
Àn
);

431 
USB_DESC_TYPE_CONFIGURATION
:

432 i‡(
pdev
->
dev_•ìd
 =
USBD_SPEED_HIGH
)

434 
pbuf
 = 
pdev
->
pCœss
->
	`GëHSC⁄figDes¸ùt‹
(&
Àn
);

435 
	`¥ötf
("USBD_SPEED_HIGH\n");

440 
pbuf
 = 
pdev
->
pCœss
->
	`GëFSC⁄figDes¸ùt‹
(&
Àn
);

441 
	`¥ötf
("!!!USBD_SPEED_HIGH\n");

446 
USB_DESC_TYPE_STRING
:

447 (
uöt8_t
)(
ªq
->
wVÆue
))

449 
USBD_IDX_LANGID_STR
:

450 i‡(
pdev
->
pDesc
->
GëL™gIDSåDes¸ùt‹
 !
NULL
)

452 
pbuf
 = 
pdev
->
pDesc
->
	`GëL™gIDSåDes¸ùt‹
’dev->
dev_•ìd
, &
Àn
);

456 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

457 
îr
++;

461 
USBD_IDX_MFC_STR
:

462 i‡(
pdev
->
pDesc
->
GëM™uÁ˘uªrSåDes¸ùt‹
 !
NULL
)

464 
pbuf
 = 
pdev
->
pDesc
->
	`GëM™uÁ˘uªrSåDes¸ùt‹
’dev->
dev_•ìd
, &
Àn
);

468 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

469 
îr
++;

473 
USBD_IDX_PRODUCT_STR
:

474 i‡(
pdev
->
pDesc
->
GëProdu˘SåDes¸ùt‹
 !
NULL
)

476 
pbuf
 = 
pdev
->
pDesc
->
	`GëProdu˘SåDes¸ùt‹
’dev->
dev_•ìd
, &
Àn
);

480 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

481 
îr
++;

485 
USBD_IDX_SERIAL_STR
:

486 i‡(
pdev
->
pDesc
->
GëSîülSåDes¸ùt‹
 !
NULL
)

488 
pbuf
 = 
pdev
->
pDesc
->
	`GëSîülSåDes¸ùt‹
’dev->
dev_•ìd
, &
Àn
);

492 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

493 
îr
++;

497 
USBD_IDX_CONFIG_STR
:

498 i‡(
pdev
->
pDesc
->
GëC⁄figuøti⁄SåDes¸ùt‹
 !
NULL
)

500 
pbuf
 = 
pdev
->
pDesc
->
	`GëC⁄figuøti⁄SåDes¸ùt‹
’dev->
dev_•ìd
, &
Àn
);

504 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

505 
îr
++;

509 
USBD_IDX_INTERFACE_STR
:

510 i‡(
pdev
->
pDesc
->
GëI¡îÁ˚SåDes¸ùt‹
 !
NULL
)

512 
pbuf
 = 
pdev
->
pDesc
->
	`GëI¡îÁ˚SåDes¸ùt‹
’dev->
dev_•ìd
, &
Àn
);

516 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

517 
îr
++;

522 #i‡(
USBD_SUPPORT_USER_STRING_DESC
 == 1U)

523 i‡(
pdev
->
pCœss
->
GëU§SåDes¸ùt‹
 !
NULL
)

525 
pbuf
 = 
pdev
->
pCœss
->
	`GëU§SåDes¸ùt‹
’dev, (
ªq
->
wVÆue
), &
Àn
);

529 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

530 
îr
++;

534 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

535 
îr
++;

540 
USB_DESC_TYPE_DEVICE_QUALIFIER
:

541 i‡(
pdev
->
dev_•ìd
 =
USBD_SPEED_HIGH
)

543 
pbuf
 = 
pdev
->
pCœss
->
	`GëDevi˚QuÆifõrDes¸ùt‹
(&
Àn
);

547 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

548 
îr
++;

552 
USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION
:

553 i‡(
pdev
->
dev_•ìd
 =
USBD_SPEED_HIGH
)

555 
pbuf
 = 
pdev
->
pCœss
->
	`GëOthîS≥edC⁄figDes¸ùt‹
(&
Àn
);

560 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

561 
îr
++;

566 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

567 
îr
++;

571 i‡(
îr
 != 0U)

577 i‡((
Àn
 !0UË&& (
ªq
->
wLígth
 != 0U))

579 
Àn
 = 
	`MIN
÷í, 
ªq
->
wLígth
);

580 ()
	`USBD_CéSídD©a
(
pdev
, 
pbuf
, 
Àn
);

583 i‡(
ªq
->
wLígth
 == 0U)

585 ()
	`USBD_CéSídSètus
(
pdev
);

588 
	}
}

597 
	$USBD_SëAddªss
(
USBD_H™dÀTy≥Def
 *
pdev
,

598 
USBD_SëupReqTy≥def
 *
ªq
)

600 
uöt8_t
 
dev_addr
;

602 i‡((
ªq
->
wIndex
 =0UË&& (ªq->
wLígth
 =0UË&& (ªq->
wVÆue
 < 128U))

604 
dev_addr
 = (
uöt8_t
)(
ªq
->
wVÆue
) & 0x7FU;

606 i‡(
pdev
->
dev_°©e
 =
USBD_STATE_CONFIGURED
)

608 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

612 
pdev
->
dev_addªss
 = 
dev_addr
;

613 
	`USBD_LL_SëUSBAddªss
(
pdev
, 
dev_addr
);

614 
	`USBD_CéSídSètus
(
pdev
);

616 i‡(
dev_addr
 != 0U)

618 
pdev
->
dev_°©e
 = 
USBD_STATE_ADDRESSED
;

622 
pdev
->
dev_°©e
 = 
USBD_STATE_DEFAULT
;

628 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

630 
	}
}

639 
	$USBD_SëC⁄fig
(
USBD_H™dÀTy≥Def
 *
pdev
, 
USBD_SëupReqTy≥def
 *
ªq
)

641 
uöt8_t
 
cfgidx
;

643 
cfgidx
 = (
uöt8_t
)(
ªq
->
wVÆue
);

645 i‡(
cfgidx
 > 
USBD_MAX_NUM_CONFIGURATION
)

647 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

651 
pdev
->
dev_°©e
)

653 
USBD_STATE_ADDRESSED
:

654 i‡(
cfgidx
)

656 
pdev
->
dev_c⁄fig
 = 
cfgidx
;

657 
pdev
->
dev_°©e
 = 
USBD_STATE_CONFIGURED
;

658 i‡(
	`USBD_SëCœssC⁄fig
(
pdev
, 
cfgidx
Ë=
USBD_FAIL
)

660 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

663 
	`USBD_CéSídSètus
(
pdev
);

667 
	`USBD_CéSídSètus
(
pdev
);

671 
USBD_STATE_CONFIGURED
:

672 i‡(
cfgidx
 == 0U)

674 
pdev
->
dev_°©e
 = 
USBD_STATE_ADDRESSED
;

675 
pdev
->
dev_c⁄fig
 = 
cfgidx
;

676 
	`USBD_CÃCœssC⁄fig
(
pdev
, 
cfgidx
);

677 
	`USBD_CéSídSètus
(
pdev
);

679 i‡(
cfgidx
 !
pdev
->
dev_c⁄fig
)

682 
	`USBD_CÃCœssC⁄fig
(
pdev
, (
uöt8_t
Ìdev->
dev_c⁄fig
);

685 
pdev
->
dev_c⁄fig
 = 
cfgidx
;

686 i‡(
	`USBD_SëCœssC⁄fig
(
pdev
, 
cfgidx
Ë=
USBD_FAIL
)

688 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

691 
	`USBD_CéSídSètus
(
pdev
);

695 
	`USBD_CéSídSètus
(
pdev
);

700 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

701 
	`USBD_CÃCœssC⁄fig
(
pdev
, 
cfgidx
);

705 
	}
}

714 
	$USBD_GëC⁄fig
(
USBD_H™dÀTy≥Def
 *
pdev
, 
USBD_SëupReqTy≥def
 *
ªq
)

716 i‡(
ªq
->
wLígth
 != 1U)

718 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

722 
pdev
->
dev_°©e
)

724 
USBD_STATE_DEFAULT
:

725 
USBD_STATE_ADDRESSED
:

726 
pdev
->
dev_deÁu…_c⁄fig
 = 0U;

727 
	`USBD_CéSídD©a
(
pdev
, (
uöt8_t
 *)(*)&pdev->
dev_deÁu…_c⁄fig
, 1U);

730 
USBD_STATE_CONFIGURED
:

731 
	`USBD_CéSídD©a
(
pdev
, (
uöt8_t
 *)(*)&pdev->
dev_c⁄fig
, 1U);

735 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

739 
	}
}

748 
	$USBD_GëSètus
(
USBD_H™dÀTy≥Def
 *
pdev
, 
USBD_SëupReqTy≥def
 *
ªq
)

750 
pdev
->
dev_°©e
)

752 
USBD_STATE_DEFAULT
:

753 
USBD_STATE_ADDRESSED
:

754 
USBD_STATE_CONFIGURED
:

755 i‡(
ªq
->
wLígth
 != 0x2U)

757 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

761 #i‡(
USBD_SELF_POWERED
 == 1U)

762 
pdev
->
dev_c⁄fig_°©us
 = 
USB_CONFIG_SELF_POWERED
;

764 
pdev
->
dev_c⁄fig_°©us
 = 0U;

767 i‡(
pdev
->
dev_ªmŸe_wakeup
)

769 
pdev
->
dev_c⁄fig_°©us
 |
USB_CONFIG_REMOTE_WAKEUP
;

772 
	`USBD_CéSídD©a
(
pdev
, (
uöt8_t
 *)(*)&pdev->
dev_c⁄fig_°©us
, 2U);

776 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

779 
	}
}

789 
	$USBD_SëFótuª
(
USBD_H™dÀTy≥Def
 *
pdev
,

790 
USBD_SëupReqTy≥def
 *
ªq
)

792 i‡(
ªq
->
wVÆue
 =
USB_FEATURE_REMOTE_WAKEUP
)

794 
pdev
->
dev_ªmŸe_wakeup
 = 1U;

795 
	`USBD_CéSídSètus
(
pdev
);

797 
	}
}

807 
	$USBD_CÃFótuª
(
USBD_H™dÀTy≥Def
 *
pdev
,

808 
USBD_SëupReqTy≥def
 *
ªq
)

810 
pdev
->
dev_°©e
)

812 
USBD_STATE_DEFAULT
:

813 
USBD_STATE_ADDRESSED
:

814 
USBD_STATE_CONFIGURED
:

815 i‡(
ªq
->
wVÆue
 =
USB_FEATURE_REMOTE_WAKEUP
)

817 
pdev
->
dev_ªmŸe_wakeup
 = 0U;

818 
	`USBD_CéSídSètus
(
pdev
);

823 
	`USBD_CéEº‹
(
pdev
, 
ªq
);

826 
	}
}

836 
	$USBD_P¨£SëupReque°
(
USBD_SëupReqTy≥def
 *
ªq
, 
uöt8_t
 *
pd©a
)

838 
ªq
->
bmReque°
 = *(
uöt8_t
 *)(
pd©a
);

839 
ªq
->
bReque°
 = *(
uöt8_t
 *)(
pd©a
 + 1U);

840 
ªq
->
wVÆue
 = 
	`SWAPBYTE
(
pd©a
 + 2U);

841 
ªq
->
wIndex
 = 
	`SWAPBYTE
(
pd©a
 + 4U);

842 
ªq
->
wLígth
 = 
	`SWAPBYTE
(
pd©a
 + 6U);

844 
	}
}

854 
	$USBD_CéEº‹
(
USBD_H™dÀTy≥Def
 *
pdev
,

855 
USBD_SëupReqTy≥def
 *
ªq
)

857 
	`USBD_LL_SèŒEP
(
pdev
, 0x80U);

858 
	`USBD_LL_SèŒEP
(
pdev
, 0U);

859 
	}
}

870 
	$USBD_GëSåög
(
uöt8_t
 *
desc
, uöt8_à*
unicode
, 
uöt16_t
 *
Àn
)

872 
uöt8_t
 
idx
 = 0U;

874 i‡(
desc
 !
NULL
)

876 *
Àn
 = (
uöt16_t
)
	`USBD_GëLí
(
desc
) * 2U + 2U;

877 
unicode
[
idx
++] = *(
uöt8_t
 *)(*)
Àn
;

878 
unicode
[
idx
++] = 
USB_DESC_TYPE_STRING
;

880 *
desc
 != '\0')

882 
unicode
[
idx
++] = *
desc
++;

883 
unicode
[
idx
++] = 0U;

886 
	}
}

894 
uöt8_t
 
	$USBD_GëLí
(
uöt8_t
 *
buf
)

896 
uöt8_t
 
Àn
 = 0U;

898 *
buf
 != '\0')

900 
Àn
++;

901 
buf
++;

904  
Àn
;

905 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Core\Src\usbd_ioreq.c

21 
	~"usbd_i‹eq.h
"

87 
USBD_SètusTy≥Def
 
	$USBD_CéSídD©a
(
USBD_H™dÀTy≥Def
 *
pdev
,

88 
uöt8_t
 *
pbuf
, 
uöt16_t
 
Àn
)

91 
pdev
->
ï0_°©e
 = 
USBD_EP0_DATA_IN
;

92 
pdev
->
ï_ö
[0].
tŸÆ_Àngth
 = 
Àn
;

93 
pdev
->
ï_ö
[0].
ªm_Àngth
 = 
Àn
;

96 
	`USBD_LL_Tønsmô
(
pdev
, 0x00U, 
pbuf
, 
Àn
);

98  
USBD_OK
;

99 
	}
}

109 
USBD_SètusTy≥Def
 
	$USBD_CéC⁄töueSídD©a
(
USBD_H™dÀTy≥Def
 *
pdev
,

110 
uöt8_t
 *
pbuf
, 
uöt16_t
 
Àn
)

113 
	`USBD_LL_Tønsmô
(
pdev
, 0x00U, 
pbuf
, 
Àn
);

115  
USBD_OK
;

116 
	}
}

126 
USBD_SètusTy≥Def
 
	$USBD_CéPª∑ªRx
(
USBD_H™dÀTy≥Def
 *
pdev
,

127 
uöt8_t
 *
pbuf
, 
uöt16_t
 
Àn
)

130 
pdev
->
ï0_°©e
 = 
USBD_EP0_DATA_OUT
;

131 
pdev
->
ï_out
[0].
tŸÆ_Àngth
 = 
Àn
;

132 
pdev
->
ï_out
[0].
ªm_Àngth
 = 
Àn
;

135 
	`USBD_LL_Pª∑ªRe˚ive
(
pdev
, 0U, 
pbuf
, 
Àn
);

137  
USBD_OK
;

138 
	}
}

148 
USBD_SètusTy≥Def
 
	$USBD_CéC⁄töueRx
(
USBD_H™dÀTy≥Def
 *
pdev
,

149 
uöt8_t
 *
pbuf
, 
uöt16_t
 
Àn
)

151 
	`USBD_LL_Pª∑ªRe˚ive
(
pdev
, 0U, 
pbuf
, 
Àn
);

153  
USBD_OK
;

154 
	}
}

162 
USBD_SètusTy≥Def
 
	$USBD_CéSídSètus
(
USBD_H™dÀTy≥Def
 *
pdev
)

165 
pdev
->
ï0_°©e
 = 
USBD_EP0_STATUS_IN
;

168 
	`USBD_LL_Tønsmô
(
pdev
, 0x00U, 
NULL
, 0U);

170  
USBD_OK
;

171 
	}
}

179 
USBD_SètusTy≥Def
 
	$USBD_CéRe˚iveSètus
(
USBD_H™dÀTy≥Def
 *
pdev
)

182 
pdev
->
ï0_°©e
 = 
USBD_EP0_STATUS_OUT
;

185 
	`USBD_LL_Pª∑ªRe˚ive
(
pdev
, 0U, 
NULL
, 0U);

187  
USBD_OK
;

188 
	}
}

197 
uöt32_t
 
	$USBD_GëRxCou¡
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ï_addr
)

199  
	`USBD_LL_GëRxD©aSize
(
pdev
, 
ï_addr
);

200 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\STM32F103xx.svd

1 <?
xml
 
	gvîsi⁄
="1.0" 
ícodög
="UTF-8" 
°™dÆ⁄e
="no"?><
devi˚
 
schemaVîsi⁄
="1.1" 
xm s
:
xs
="hâp://www.w3.‹g/2001/XMLSchema-ö°™˚" xs:
noName•a˚SchemaLoˇti⁄
="CMSIS-SVD_Schema_1_1.xsd"> <
«me
>
STM32F103xx
</«me> <
vîsi⁄
>1.3</vîsi⁄> <
des¸ùti⁄
>STM32F103xx</des¸ùti⁄> <!--
Bus
 
I¡îÁ˚
 
Pr›îtõs
--> <!--
C‹ãx
-
M3
 
is
 
byã
 
addªsßbÀ
--> <
addªssUnôBôs
>8</addªssUnôBôs> <!--
the
 
maximum
 
d©a
 
bô
 
width
 
ac˚ssibÀ
 
wôhö
 
a
 
sögÀ
 
å™s„r
--> <width>32</width> <!--
Regi°î
 
DeÁu…
 Pr›îtõs--> <
size
>0x20</size> <
ª£tVÆue
>0x0</ª£tVÆue> <
ª£tMask
>0xFFFFFFFF</ª£tMask> <
≥rùhîÆs
> <
≥rùhîÆ
> <«me>
FSMC
</«me> <des¸ùti⁄>
FÀxibÀ
 
mem‹y
 
c⁄åﬁÀr
</des¸ùti⁄> <
groupName
>FSMC</groupName> <
ba£Addªss
>0xA0000000</ba£Addªss> <
addªssBlock
> <
off£t
>0x0</off£t> <size>0x1000</size> <
ußge
>
ªgi°îs
</ußge> </addªssBlock> <
öãºu±
> <«me>FSMC</«me> <des¸ùti⁄>FSMC 
globÆ
 i¡îru±</des¸ùti⁄> <
vÆue
>48</vÆue> </öãºu±> <ªgi°îs> <> <«me>
BCR1
</«me> <
di•œyName
>BCR1</di•œyName> <des¸ùti⁄>
SRAM
/
NOR
-
Fœsh
 
chù
-
£À˘
 
c⁄åﬁ
 1</des¸ùti⁄> <
addªssOff£t
>0x0</addªssOff£t> <size>0x20</size> <
ac˚ss
>
ªad
-
wrôe
</ac˚ss> <ª£tVÆue>0x000030D0</ª£tVÆue> <
fõlds
> <
fõld
> <«me>
CBURSTRW
</«me> <des¸ùti⁄>CBURSTRW</des¸ùti⁄> <
bôOff£t
>19</bôOff£t> <
bôWidth
>1</bôWidth> </fõld> <fõld> <«me>
ASYNCWAIT
</«me> <des¸ùti⁄>ASYNCWAIT</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
EXTMOD
</«me> <des¸ùti⁄>EXTMOD</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
WAITEN
</«me> <des¸ùti⁄>WAITEN</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
WREN
</«me> <des¸ùti⁄>WREN</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
WAITCFG
</«me> <des¸ùti⁄>WAITCFG</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
WAITPOL
</«me> <des¸ùti⁄>WAITPOL</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BURSTEN
</«me> <des¸ùti⁄>BURSTEN</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FACCEN
</«me> <des¸ùti⁄>FACCEN</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
MWID
</«me> <des¸ùti⁄>MWID</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
MTYP
</«me> <des¸ùti⁄>MTYP</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
MUXEN
</«me> <des¸ùti⁄>MUXEN</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
MBKEN
</«me> <des¸ùti⁄>MBKEN</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
BTR1
</«me> <di•œyName>BTR1</di•œyName> <des¸ùti⁄>SRAM/NOR-Fœsh chù-£À˘ 
timög
 1</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0xFFFFFFFF</ª£tVÆue> <fõlds> <fõld> <«me>
ACCMOD
</«me> <des¸ùti⁄>ACCMOD</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
DATLAT
</«me> <des¸ùti⁄>DATLAT</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
CLKDIV
</«me> <des¸ùti⁄>CLKDIV</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
BUSTURN
</«me> <des¸ùti⁄>BUSTURN</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
DATAST
</«me> <des¸ùti⁄>DATAST</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>
ADDHLD
</«me> <des¸ùti⁄>ADDHLD</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
ADDSET
</«me> <des¸ùti⁄>ADDSET</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> </fõlds> </> <> <«me>
BCR2
</«me> <di•œyName>BCR2</di•œyName> <des¸ùti⁄>SRAM/NOR-Fœsh chù-£À˘ c⁄åﬁ 2</des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x000030D0</ª£tVÆue> <fõlds> <fõld> <«me>CBURSTRW</«me> <des¸ùti⁄>CBURSTRW</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>ASYNCWAIT</«me> <des¸ùti⁄>ASYNCWAIT</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>EXTMOD</«me> <des¸ùti⁄>EXTMOD</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>WAITEN</«me> <des¸ùti⁄>WAITEN</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>WREN</«me> <des¸ùti⁄>WREN</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>WAITCFG</«me> <des¸ùti⁄>WAITCFG</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
WRAPMOD
</«me> <des¸ùti⁄>WRAPMOD</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>WAITPOL</«me> <des¸ùti⁄>WAITPOL</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>BURSTEN</«me> <des¸ùti⁄>BURSTEN</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FACCEN</«me> <des¸ùti⁄>FACCEN</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MWID</«me> <des¸ùti⁄>MWID</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>MTYP</«me> <des¸ùti⁄>MTYP</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>MUXEN</«me> <des¸ùti⁄>MUXEN</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MBKEN</«me> <des¸ùti⁄>MBKEN</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
BTR2
</«me> <di•œyName>BTR2</di•œyName> <des¸ùti⁄>SRAM/NOR-Fœsh chù-£À˘Åimög 2</des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0xFFFFFFFF</ª£tVÆue> <fõlds> <fõld> <«me>ACCMOD</«me> <des¸ùti⁄>ACCMOD</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>DATLAT</«me> <des¸ùti⁄>DATLAT</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>CLKDIV</«me> <des¸ùti⁄>CLKDIV</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>BUSTURN</«me> <des¸ùti⁄>BUSTURN</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>DATAST</«me> <des¸ùti⁄>DATAST</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>ADDHLD</«me> <des¸ùti⁄>ADDHLD</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>ADDSET</«me> <des¸ùti⁄>ADDSET</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> </fõlds> </> <> <«me>
BCR3
</«me> <di•œyName>BCR3</di•œyName> <des¸ùti⁄>SRAM/NOR-Fœsh chù-£À˘ c⁄åﬁ 3</des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x000030D0</ª£tVÆue> <fõlds> <fõld> <«me>CBURSTRW</«me> <des¸ùti⁄>CBURSTRW</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>ASYNCWAIT</«me> <des¸ùti⁄>ASYNCWAIT</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>EXTMOD</«me> <des¸ùti⁄>EXTMOD</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>WAITEN</«me> <des¸ùti⁄>WAITEN</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>WREN</«me> <des¸ùti⁄>WREN</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>WAITCFG</«me> <des¸ùti⁄>WAITCFG</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>WRAPMOD</«me> <des¸ùti⁄>WRAPMOD</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>WAITPOL</«me> <des¸ùti⁄>WAITPOL</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>BURSTEN</«me> <des¸ùti⁄>BURSTEN</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FACCEN</«me> <des¸ùti⁄>FACCEN</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MWID</«me> <des¸ùti⁄>MWID</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>MTYP</«me> <des¸ùti⁄>MTYP</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>MUXEN</«me> <des¸ùti⁄>MUXEN</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MBKEN</«me> <des¸ùti⁄>MBKEN</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
BTR3
</«me> <di•œyName>BTR3</di•œyName> <des¸ùti⁄>SRAM/NOR-Fœsh chù-£À˘Åimög 3</des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0xFFFFFFFF</ª£tVÆue> <fõlds> <fõld> <«me>ACCMOD</«me> <des¸ùti⁄>ACCMOD</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>DATLAT</«me> <des¸ùti⁄>DATLAT</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>CLKDIV</«me> <des¸ùti⁄>CLKDIV</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>BUSTURN</«me> <des¸ùti⁄>BUSTURN</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>DATAST</«me> <des¸ùti⁄>DATAST</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>ADDHLD</«me> <des¸ùti⁄>ADDHLD</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>ADDSET</«me> <des¸ùti⁄>ADDSET</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> </fõlds> </> <> <«me>
BCR4
</«me> <di•œyName>BCR4</di•œyName> <des¸ùti⁄>SRAM/NOR-Fœsh chù-£À˘ c⁄åﬁ 4</des¸ùti⁄> <addªssOff£t>0x18</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x000030D0</ª£tVÆue> <fõlds> <fõld> <«me>CBURSTRW</«me> <des¸ùti⁄>CBURSTRW</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>ASYNCWAIT</«me> <des¸ùti⁄>ASYNCWAIT</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>EXTMOD</«me> <des¸ùti⁄>EXTMOD</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>WAITEN</«me> <des¸ùti⁄>WAITEN</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>WREN</«me> <des¸ùti⁄>WREN</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>WAITCFG</«me> <des¸ùti⁄>WAITCFG</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>WRAPMOD</«me> <des¸ùti⁄>WRAPMOD</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>WAITPOL</«me> <des¸ùti⁄>WAITPOL</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>BURSTEN</«me> <des¸ùti⁄>BURSTEN</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FACCEN</«me> <des¸ùti⁄>FACCEN</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MWID</«me> <des¸ùti⁄>MWID</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>MTYP</«me> <des¸ùti⁄>MTYP</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>MUXEN</«me> <des¸ùti⁄>MUXEN</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MBKEN</«me> <des¸ùti⁄>MBKEN</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
BTR4
</«me> <di•œyName>BTR4</di•œyName> <des¸ùti⁄>SRAM/NOR-Fœsh chù-£À˘Åimög 4</des¸ùti⁄> <addªssOff£t>0x1C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0xFFFFFFFF</ª£tVÆue> <fõlds> <fõld> <«me>ACCMOD</«me> <des¸ùti⁄>ACCMOD</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>DATLAT</«me> <des¸ùti⁄>DATLAT</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>CLKDIV</«me> <des¸ùti⁄>CLKDIV</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>BUSTURN</«me> <des¸ùti⁄>BUSTURN</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>DATAST</«me> <des¸ùti⁄>DATAST</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>ADDHLD</«me> <des¸ùti⁄>ADDHLD</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>ADDSET</«me> <des¸ùti⁄>ADDSET</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> </fõlds> </> <> <«me>
PCR2
</«me> <di•œyName>PCR2</di•œyName> <des¸ùti⁄>
PC
 
C¨d
/
NAND
 Fœsh c⁄åﬁ 2</des¸ùti⁄> <addªssOff£t>0x60</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000018</ª£tVÆue> <fõlds> <fõld> <«me>
ECCPS
</«me> <des¸ùti⁄>ECCPS</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
TAR
</«me> <des¸ùti⁄>TAR</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
TCLR
</«me> <des¸ùti⁄>TCLR</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
ECCEN
</«me> <des¸ùti⁄>ECCEN</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PWID
</«me> <des¸ùti⁄>PWID</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
PTYP
</«me> <des¸ùti⁄>PTYP</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PBKEN
</«me> <des¸ùti⁄>PBKEN</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PWAITEN
</«me> <des¸ùti⁄>PWAITEN</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
SR2
</«me> <di•œyName>SR2</di•œyName> <des¸ùti⁄>
FIFO
 
°©us
 
™d
 i¡îru± 2</des¸ùti⁄> <addªssOff£t>0x64</addªssOff£t> <size>0x20</size> <ª£tVÆue>0x00000040</ª£tVÆue> <fõlds> <fõld> <«me>
FEMPT
</«me> <des¸ùti⁄>FEMPT</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-
⁄ly
</ac˚ss> </fõld> <fõld> <«me>
IFEN
</«me> <des¸ùti⁄>IFEN</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
ILEN
</«me> <des¸ùti⁄>ILEN</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
IREN
</«me> <des¸ùti⁄>IREN</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
IFS
</«me> <des¸ùti⁄>IFS</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
ILS
</«me> <des¸ùti⁄>ILS</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
IRS
</«me> <des¸ùti⁄>IRS</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> </fõlds> </> <> <«me>
PMEM2
</«me> <di•œyName>PMEM2</di•œyName> <des¸ùti⁄>
Comm⁄
 mem‹y 
•a˚
Åimög 2</des¸ùti⁄> <addªssOff£t>0x68</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0xFCFCFCFC</ª£tVÆue> <fõlds> <fõld> <«me>
MEMHIZx
</«me> <des¸ùti⁄>MEMHIZx</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>
MEMHOLDx
</«me> <des¸ùti⁄>MEMHOLDx</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>
MEMWAITx
</«me> <des¸ùti⁄>MEMWAITx</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>
MEMSETx
</«me> <des¸ùti⁄>MEMSETx</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
PATT2
</«me> <di•œyName>PATT2</di•œyName> <des¸ùti⁄>
Aâribuã
 mem‹y s∑˚Åimög 2</des¸ùti⁄> <addªssOff£t>0x6C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0xFCFCFCFC</ª£tVÆue> <fõlds> <fõld> <«me>
ATTHIZx
</«me> <des¸ùti⁄>Aâribuã mem‹y 
x
 
d©abus
 
HiZ
 
time
</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>
ATTHOLDx
</«me> <des¸ùti⁄>Aâribuã mem‹y x 
hﬁd
Åime</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>
ATTWAITx
</«me> <des¸ùti⁄>Aâribuã mem‹y x 
waô
Åime</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>
ATTSETx
</«me> <des¸ùti⁄>Aâribuã mem‹y x 
£tup
Åime</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
ECCR2
</«me> <di•œyName>ECCR2</di•œyName> <des¸ùti⁄>
ECC
 
ªsu…
 2</des¸ùti⁄> <addªssOff£t>0x74</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
ECCx
</«me> <des¸ùti⁄>ECCÑesu…</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
PCR3
</«me> <di•œyName>PCR3</di•œyName> <des¸ùti⁄>PC C¨d/NAND Fœsh c⁄åﬁ 3</des¸ùti⁄> <addªssOff£t>0x80</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000018</ª£tVÆue> <fõlds> <fõld> <«me>ECCPS</«me> <des¸ùti⁄>ECCPS</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>TAR</«me> <des¸ùti⁄>TAR</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>TCLR</«me> <des¸ùti⁄>TCLR</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>ECCEN</«me> <des¸ùti⁄>ECCEN</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>PWID</«me> <des¸ùti⁄>PWID</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>PTYP</«me> <des¸ùti⁄>PTYP</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>PBKEN</«me> <des¸ùti⁄>PBKEN</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>PWAITEN</«me> <des¸ùti⁄>PWAITEN</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
SR3
</«me> <di•œyName>SR3</di•œyName> <des¸ùti⁄>FIFO sètu†™d i¡îru± 3</des¸ùti⁄> <addªssOff£t>0x84</addªssOff£t> <size>0x20</size> <ª£tVÆue>0x00000040</ª£tVÆue> <fõlds> <fõld> <«me>FEMPT</«me> <des¸ùti⁄>FEMPT</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>IFEN</«me> <des¸ùti⁄>IFEN</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>ILEN</«me> <des¸ùti⁄>ILEN</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>IREN</«me> <des¸ùti⁄>IREN</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>IFS</«me> <des¸ùti⁄>IFS</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>ILS</«me> <des¸ùti⁄>ILS</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>IRS</«me> <des¸ùti⁄>IRS</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> </fõlds> </> <> <«me>
PMEM3
</«me> <di•œyName>PMEM3</di•œyName> <des¸ùti⁄>Comm⁄ mem‹y s∑˚Åimög 3</des¸ùti⁄> <addªssOff£t>0x88</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0xFCFCFCFC</ª£tVÆue> <fõlds> <fõld> <«me>MEMHIZx</«me> <des¸ùti⁄>MEMHIZx</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>MEMHOLDx</«me> <des¸ùti⁄>MEMHOLDx</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>MEMWAITx</«me> <des¸ùti⁄>MEMWAITx</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>MEMSETx</«me> <des¸ùti⁄>MEMSETx</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
PATT3
</«me> <di•œyName>PATT3</di•œyName> <des¸ùti⁄>Aâribuã mem‹y s∑˚Åimög 3</des¸ùti⁄> <addªssOff£t>0x8C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0xFCFCFCFC</ª£tVÆue> <fõlds> <fõld> <«me>ATTHIZx</«me> <des¸ùti⁄>ATTHIZx</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>ATTHOLDx</«me> <des¸ùti⁄>ATTHOLDx</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>ATTWAITx</«me> <des¸ùti⁄>ATTWAITx</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>ATTSETx</«me> <des¸ùti⁄>ATTSETx</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
ECCR3
</«me> <di•œyName>ECCR3</di•œyName> <des¸ùti⁄>ECCÑesu… 3</des¸ùti⁄> <addªssOff£t>0x94</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>ECCx</«me> <des¸ùti⁄>ECCx</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
PCR4
</«me> <di•œyName>PCR4</di•œyName> <des¸ùti⁄>PC C¨d/NAND Fœsh c⁄åﬁ 4</des¸ùti⁄> <addªssOff£t>0xA0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000018</ª£tVÆue> <fõlds> <fõld> <«me>ECCPS</«me> <des¸ùti⁄>ECCPS</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>TAR</«me> <des¸ùti⁄>TAR</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>TCLR</«me> <des¸ùti⁄>TCLR</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>ECCEN</«me> <des¸ùti⁄>ECCEN</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>PWID</«me> <des¸ùti⁄>PWID</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>PTYP</«me> <des¸ùti⁄>PTYP</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>PBKEN</«me> <des¸ùti⁄>PBKEN</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>PWAITEN</«me> <des¸ùti⁄>PWAITEN</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
SR4
</«me> <di•œyName>SR4</di•œyName> <des¸ùti⁄>FIFO sètu†™d i¡îru± 4</des¸ùti⁄> <addªssOff£t>0xA4</addªssOff£t> <size>0x20</size> <ª£tVÆue>0x00000040</ª£tVÆue> <fõlds> <fõld> <«me>FEMPT</«me> <des¸ùti⁄>FEMPT</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>IFEN</«me> <des¸ùti⁄>IFEN</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>ILEN</«me> <des¸ùti⁄>ILEN</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>IREN</«me> <des¸ùti⁄>IREN</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>IFS</«me> <des¸ùti⁄>IFS</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>ILS</«me> <des¸ùti⁄>ILS</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>IRS</«me> <des¸ùti⁄>IRS</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> </fõlds> </> <> <«me>
PMEM4
</«me> <di•œyName>PMEM4</di•œyName> <des¸ùti⁄>Comm⁄ mem‹y s∑˚Åimög 4</des¸ùti⁄> <addªssOff£t>0xA8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0xFCFCFCFC</ª£tVÆue> <fõlds> <fõld> <«me>MEMHIZx</«me> <des¸ùti⁄>MEMHIZx</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>MEMHOLDx</«me> <des¸ùti⁄>MEMHOLDx</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>MEMWAITx</«me> <des¸ùti⁄>MEMWAITx</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>MEMSETx</«me> <des¸ùti⁄>MEMSETx</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
PATT4
</«me> <di•œyName>PATT4</di•œyName> <des¸ùti⁄>Aâribuã mem‹y s∑˚Åimög 4</des¸ùti⁄> <addªssOff£t>0xAC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0xFCFCFCFC</ª£tVÆue> <fõlds> <fõld> <«me>ATTHIZx</«me> <des¸ùti⁄>ATTHIZx</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>ATTHOLDx</«me> <des¸ùti⁄>ATTHOLDx</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>ATTWAITx</«me> <des¸ùti⁄>ATTWAITx</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>ATTSETx</«me> <des¸ùti⁄>ATTSETx</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
PIO4
</«me> <di•œyName>PIO4</di•œyName> <des¸ùti⁄>
I
/
O
 s∑˚Åimög 4</des¸ùti⁄> <addªssOff£t>0xB0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0xFCFCFCFC</ª£tVÆue> <fõlds> <fõld> <«me>
IOHIZx
</«me> <des¸ùti⁄>IOHIZx</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>
IOHOLDx
</«me> <des¸ùti⁄>IOHOLDx</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>
IOWAITx
</«me> <des¸ùti⁄>IOWAITx</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>
IOSETx
</«me> <des¸ùti⁄>IOSETx</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
BWTR1
</«me> <di•œyName>BWTR1</di•œyName> <des¸ùti⁄>SRAM/NOR-Fœsh wrôêtimögÑegi°î†1</des¸ùti⁄> <addªssOff£t>0x104</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0FFFFFFF</ª£tVÆue> <fõlds> <fõld> <«me>ACCMOD</«me> <des¸ùti⁄>ACCMOD</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>DATLAT</«me> <des¸ùti⁄>DATLAT</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>CLKDIV</«me> <des¸ùti⁄>CLKDIV</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>DATAST</«me> <des¸ùti⁄>DATAST</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>ADDHLD</«me> <des¸ùti⁄>ADDHLD</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>ADDSET</«me> <des¸ùti⁄>ADDSET</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> </fõlds> </> <> <«me>
BWTR2
</«me> <di•œyName>BWTR2</di•œyName> <des¸ùti⁄>SRAM/NOR-Fœsh wrôêtimögÑegi°î†2</des¸ùti⁄> <addªssOff£t>0x10C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0FFFFFFF</ª£tVÆue> <fõlds> <fõld> <«me>ACCMOD</«me> <des¸ùti⁄>ACCMOD</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>DATLAT</«me> <des¸ùti⁄>DATLAT</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>CLKDIV</«me> <des¸ùti⁄>CLKDIV</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>DATAST</«me> <des¸ùti⁄>DATAST</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>ADDHLD</«me> <des¸ùti⁄>ADDHLD</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>ADDSET</«me> <des¸ùti⁄>ADDSET</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> </fõlds> </> <> <«me>
BWTR3
</«me> <di•œyName>BWTR3</di•œyName> <des¸ùti⁄>SRAM/NOR-Fœsh wrôêtimögÑegi°î†3</des¸ùti⁄> <addªssOff£t>0x114</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0FFFFFFF</ª£tVÆue> <fõlds> <fõld> <«me>ACCMOD</«me> <des¸ùti⁄>ACCMOD</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>DATLAT</«me> <des¸ùti⁄>DATLAT</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>CLKDIV</«me> <des¸ùti⁄>CLKDIV</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>DATAST</«me> <des¸ùti⁄>DATAST</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>ADDHLD</«me> <des¸ùti⁄>ADDHLD</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>ADDSET</«me> <des¸ùti⁄>ADDSET</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> </fõlds> </> <> <«me>
BWTR4
</«me> <di•œyName>BWTR4</di•œyName> <des¸ùti⁄>SRAM/NOR-Fœsh wrôêtimögÑegi°î†4</des¸ùti⁄> <addªssOff£t>0x11C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0FFFFFFF</ª£tVÆue> <fõlds> <fõld> <«me>ACCMOD</«me> <des¸ùti⁄>ACCMOD</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>DATLAT</«me> <des¸ùti⁄>DATLAT</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>CLKDIV</«me> <des¸ùti⁄>CLKDIV</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>DATAST</«me> <des¸ùti⁄>DATAST</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>ADDHLD</«me> <des¸ùti⁄>ADDHLD</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>ADDSET</«me> <des¸ùti⁄>ADDSET</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ> <«me>
PWR
</«me> <des¸ùti⁄>
Powî
 c⁄åﬁ</des¸ùti⁄> <groupName>PWR</groupName> <ba£Addªss>0x40007000</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <öãºu±> <«me>
PVD
</«me> <des¸ùti⁄>PVD 
through
 
EXTI
 
löe
 
dëe˘i⁄
 i¡îru±</des¸ùti⁄> <vÆue>1</vÆue> </öãºu±> <ªgi°îs> <> <«me>
CR
</«me> <di•œyName>CR</di•œyName> <des¸ùti⁄>Powî c⁄åﬁ (
PWR_CR
)</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
LPDS
</«me> <des¸ùti⁄>
Low
 Powî 
Dìp
 
SÀï
</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PDDS
</«me> <des¸ùti⁄>Powî 
Down
 Dì∞SÀï</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CWUF
</«me> <des¸ùti⁄>
CÀ¨
 
Wake
-
up
 
Fœg
</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CSBF
</«me> <des¸ùti⁄>CÀ¨ 
STANDBY
 Fœg</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PVDE
</«me> <des¸ùti⁄>Powî 
Vﬁège
 
Dëe˘‹
 
E«bÀ
</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PLS
</«me> <des¸ùti⁄>PVD 
Levñ
 
Sñe˘i⁄
</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
DBP
</«me> <des¸ùti⁄>
DißbÀ
 
Backup
 
Domaö
 wrôê
¥Ÿe˘i⁄
</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CSR
</«me> <di•œyName>CSR</di•œyName> <des¸ùti⁄>Powî c⁄åﬁ (PWR_CR)</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
WUF
</«me> <des¸ùti⁄>Wake-
Up
 Fœg</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
SBF
</«me> <des¸ùti⁄>STANDBY Fœg</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
PVDO
</«me> <des¸ùti⁄>PVD 
Ouçut
</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
EWUP
</«me> <des¸ùti⁄>E«bÀ 
WKUP
 
pö
</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ> <«me>
RCC
</«me> <des¸ùti⁄>
Re£t
ánd 
˛ock
 c⁄åﬁ</des¸ùti⁄> <groupName>RCC</groupName> <ba£Addªss>0x40021000</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <öãºu±> <«me>RCC</«me> <des¸ùti⁄>RCC globÆ i¡îru±</des¸ùti⁄> <vÆue>5</vÆue> </öãºu±> <ªgi°îs> <> <«me>CR</«me> <di•œyName>CR</di•œyName> <des¸ùti⁄>
Clock
 c⁄åﬁ </des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ª£tVÆue>0x00000083</ª£tVÆue> <fõlds> <fõld> <«me>
HSION
</«me> <des¸ùti⁄>
I¡î«l
 
High
 
S≥ed
 clock 
íabÀ
</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
HSIRDY
</«me> <des¸ùti⁄>I¡î«»High S≥ed clock 
ªady
 
Êag
</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
HSITRIM
</«me> <des¸ùti⁄>I¡î«»High S≥ed clock 
åimmög
</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>5</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
HSICAL
</«me> <des¸ùti⁄>I¡î«»High S≥ed clock 
CÆibøti⁄
</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
HSEON
</«me> <des¸ùti⁄>
Exã∫Æ
 High S≥ed clockÉ«bÀ</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
HSERDY
</«me> <des¸ùti⁄>Exã∫Æ High S≥ed clockÑódy fœg</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
HSEBYP
</«me> <des¸ùti⁄>Exã∫Æ High S≥ed clock 
By∑ss
</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
CSSON
</«me> <des¸ùti⁄>Clock 
Securôy
 
Sy°em
É«bÀ</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
PLLON
</«me> <des¸ùti⁄>
PLL
É«bÀ</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
PLLRDY
</«me> <des¸ùti⁄>PLL clockÑódy fœg</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> </fõlds> </> <> <«me>
CFGR
</«me> <di•œyName>CFGR</di•œyName> <des¸ùti⁄>Clock 
c⁄figuøti⁄
 (
RCC_CFGR
)</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
SW
</«me> <des¸ùti⁄>Sy°em clock 
Swôch
</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>2</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
SWS
</«me> <des¸ùti⁄>Sy°em Clock Swôch 
Sètus
</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>2</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
HPRE
</«me> <des¸ùti⁄>
AHB
 
¥esˇÀr
</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>4</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
PPRE1
</«me> <des¸ùti⁄>
APB
 Low 
•ìd
ÖªsˇÀ∏(
APB1
)</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>3</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
PPRE2
</«me> <des¸ùti⁄>APB High s≥edÖªsˇÀ∏(
APB2
)</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>3</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
ADCPRE
</«me> <des¸ùti⁄>
ADC
ÖªsˇÀr</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>2</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
PLLSRC
</«me> <des¸ùti⁄>PLL 
íåy
 clock 
sour˚
</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
PLLXTPRE
</«me> <des¸ùti⁄>
HSE
 
dividî
 PLLÉ¡ry</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
PLLMUL
</«me> <des¸ùti⁄>PLL 
Mu…ùliˇti⁄
 
Fa˘‹
</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>4</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
OTGFSPRE
</«me> <des¸ùti⁄>
USB
 
OTG
 
FS
ÖªsˇÀr</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
MCO
</«me> <des¸ùti⁄>
Mi¸oc⁄åﬁÀr
 clock 
ouçut
</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>3</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> </fõlds> </> <> <«me>
CIR
</«me> <di•œyName>CIR</di•œyName> <des¸ùti⁄>Clock i¡îru± (
RCC_CIR
)</des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
LSIRDYF
</«me> <des¸ùti⁄>
LSI
 
Ródy
 
I¡îru±
 fœg</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
LSERDYF
</«me> <des¸ùti⁄>
LSE
 Ródy I¡îru± fœg</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
HSIRDYF
</«me> <des¸ùti⁄>
HSI
 Ródy I¡îru± fœg</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
HSERDYF
</«me> <des¸ùti⁄>HSE Ródy I¡îru± fœg</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
PLLRDYF
</«me> <des¸ùti⁄>PLL Ródy I¡îru± fœg</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
CSSF
</«me> <des¸ùti⁄>Clock Securôy Sy°em I¡îru± fœg</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
LSIRDYIE
</«me> <des¸ùti⁄>LSI Ródy I¡îru± E«bÀ</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
LSERDYIE
</«me> <des¸ùti⁄>LSE Ródy I¡îru± E«bÀ</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
HSIRDYIE
</«me> <des¸ùti⁄>HSI Ródy I¡îru± E«bÀ</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
HSERDYIE
</«me> <des¸ùti⁄>HSE Ródy I¡îru± E«bÀ</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
PLLRDYIE
</«me> <des¸ùti⁄>PLL Ródy I¡îru± E«bÀ</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
LSIRDYC
</«me> <des¸ùti⁄>LSI Ródy I¡îru± CÀ¨</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>wrôe-⁄ly</ac˚ss> </fõld> <fõld> <«me>
LSERDYC
</«me> <des¸ùti⁄>LSE Ródy I¡îru± CÀ¨</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>wrôe-⁄ly</ac˚ss> </fõld> <fõld> <«me>
HSIRDYC
</«me> <des¸ùti⁄>HSI Ródy I¡îru± CÀ¨</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>wrôe-⁄ly</ac˚ss> </fõld> <fõld> <«me>
HSERDYC
</«me> <des¸ùti⁄>HSE Ródy I¡îru± CÀ¨</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>wrôe-⁄ly</ac˚ss> </fõld> <fõld> <«me>
PLLRDYC
</«me> <des¸ùti⁄>PLL Ródy I¡îru± CÀ¨</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>wrôe-⁄ly</ac˚ss> </fõld> <fõld> <«me>
CSSC
</«me> <des¸ùti⁄>Clock 
£curôy
 
sy°em
 i¡îru± 
˛ór
</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>wrôe-⁄ly</ac˚ss> </fõld> </fõlds> </> <> <«me>
APB2RSTR
</«me> <di•œyName>APB2RSTR</di•œyName> <des¸ùti⁄>APB2ÖîùhîÆ 
ª£t
 (
RCC_APB2RSTR
)</des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x000000000</ª£tVÆue> <fõlds> <fõld> <«me>
AFIORST
</«me> <des¸ùti⁄>
A…î«ã
 
fun˘i⁄
 I/OÑe£t</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IOPARST
</«me> <des¸ùti⁄>
IO
 
p‹t
 
A
Ñe£t</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IOPBRST
</«me> <des¸ùti⁄>IOÖ‹à
B
Ñe£t</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IOPCRST
</«me> <des¸ùti⁄>IOÖ‹à
C
Ñe£t</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IOPDRST
</«me> <des¸ùti⁄>IOÖ‹à
D
Ñe£t</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IOPERST
</«me> <des¸ùti⁄>IOÖ‹à
E
Ñe£t</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IOPFRST
</«me> <des¸ùti⁄>IOÖ‹à
F
Ñe£t</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IOPGRST
</«me> <des¸ùti⁄>IOÖ‹à
G
Ñe£t</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ADC1RST
</«me> <des¸ùti⁄>ADC 1 
öãrÁ˚
Ñe£t</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ADC2RST
</«me> <des¸ùti⁄>ADC 2 i¡îÁ˚Ñe£t</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM1RST
</«me> <des¸ùti⁄>
TIM1
 
timî
Ñe£t</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SPI1RST
</«me> <des¸ùti⁄>
SPI
 1Ñe£t</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM8RST
</«me> <des¸ùti⁄>
TIM8
ÅimîÑe£t</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
USART1RST
</«me> <des¸ùti⁄>
USART1
Ñe£t</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ADC3RST
</«me> <des¸ùti⁄>ADC 3 i¡îÁ˚Ñe£t</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM9RST
</«me> <des¸ùti⁄>
TIM9
ÅimîÑe£t</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM10RST
</«me> <des¸ùti⁄>
TIM10
ÅimîÑe£t</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM11RST
</«me> <des¸ùti⁄>
TIM11
ÅimîÑe£t</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
APB1RSTR
</«me> <di•œyName>APB1RSTR</di•œyName> <des¸ùti⁄>APB1ÖîùhîÆÑe£à(
RCC_APB1RSTR
)</des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
TIM2RST
</«me> <des¸ùti⁄>
Timî
 2Ñe£t</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM3RST
</«me> <des¸ùti⁄>Timî 3Ñe£t</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM4RST
</«me> <des¸ùti⁄>Timî 4Ñe£t</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM5RST
</«me> <des¸ùti⁄>Timî 5Ñe£t</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM6RST
</«me> <des¸ùti⁄>Timî 6Ñe£t</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM7RST
</«me> <des¸ùti⁄>Timî 7Ñe£t</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM12RST
</«me> <des¸ùti⁄>Timî 12Ñe£t</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM13RST
</«me> <des¸ùti⁄>Timî 13Ñe£t</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM14RST
</«me> <des¸ùti⁄>Timî 14Ñe£t</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
WWDGRST
</«me> <des¸ùti⁄>
Wödow
 
w©chdog
Ñe£t</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SPI2RST
</«me> <des¸ùti⁄>
SPI2
Ñe£t</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SPI3RST
</«me> <des¸ùti⁄>
SPI3
Ñe£t</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
USART2RST
</«me> <des¸ùti⁄>
USART
 2Ñe£t</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
USART3RST
</«me> <des¸ùti⁄>USART 3Ñe£t</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
UART4RST
</«me> <des¸ùti⁄>
UART
 4Ñe£t</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
UART5RST
</«me> <des¸ùti⁄>UART 5Ñe£t</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
I2C1RST
</«me> <des¸ùti⁄>
I2C1
Ñe£t</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
I2C2RST
</«me> <des¸ùti⁄>
I2C2
Ñe£t</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
USBRST
</«me> <des¸ùti⁄>USBÑe£t</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CANRST
</«me> <des¸ùti⁄>
CAN
Ñe£t</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BKPRST
</«me> <des¸ùti⁄>Backu∞öãrÁ˚Ñe£t</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PWRRST
</«me> <des¸ùti⁄>Powî i¡îÁ˚Ñe£t</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DACRST
</«me> <des¸ùti⁄>
DAC
 i¡îÁ˚Ñe£t</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
AHBENR
</«me> <di•œyName>AHBENR</di•œyName> <des¸ùti⁄>AHB 
PîùhîÆ
 ClockÉ«bÀ (
RCC_AHBENR
)</des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000014</ª£tVÆue> <fõlds> <fõld> <«me>
DMA1EN
</«me> <des¸ùti⁄>
DMA1
 clockÉ«bÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DMA2EN
</«me> <des¸ùti⁄>
DMA2
 clockÉ«bÀ</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SRAMEN
</«me> <des¸ùti⁄>SRAM i¡îÁ˚ clockÉ«bÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FLITFEN
</«me> <des¸ùti⁄>
FLITF
 clockÉ«bÀ</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CRCEN
</«me> <des¸ùti⁄>
CRC
 clockÉ«bÀ</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FSMCEN
</«me> <des¸ùti⁄>FSMC clockÉ«bÀ</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SDIOEN
</«me> <des¸ùti⁄>
SDIO
 clockÉ«bÀ</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
APB2ENR
</«me> <di•œyName>APB2ENR</di•œyName> <des¸ùti⁄>APB2ÖîùhîÆ clockÉ«bÀ (
RCC_APB2ENR
)</des¸ùti⁄> <addªssOff£t>0x18</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
AFIOEN
</«me> <des¸ùti⁄>A…î«ã fun˘i⁄ I/O clockÉ«bÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IOPAEN
</«me> <des¸ùti⁄>I/OÖ‹àA clockÉ«bÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IOPBEN
</«me> <des¸ùti⁄>I/OÖ‹àB clockÉ«bÀ</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IOPCEN
</«me> <des¸ùti⁄>I/OÖ‹àC clockÉ«bÀ</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IOPDEN
</«me> <des¸ùti⁄>I/OÖ‹àD clockÉ«bÀ</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IOPEEN
</«me> <des¸ùti⁄>I/OÖ‹àE clockÉ«bÀ</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IOPFEN
</«me> <des¸ùti⁄>I/OÖ‹àF clockÉ«bÀ</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IOPGEN
</«me> <des¸ùti⁄>I/OÖ‹àG clockÉ«bÀ</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ADC1EN
</«me> <des¸ùti⁄>ADC 1 i¡îÁ˚ clockÉ«bÀ</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ADC2EN
</«me> <des¸ùti⁄>ADC 2 i¡îÁ˚ clockÉ«bÀ</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM1EN
</«me> <des¸ùti⁄>TIM1 Timî clockÉ«bÀ</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SPI1EN
</«me> <des¸ùti⁄>SPI 1 clockÉ«bÀ</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM8EN
</«me> <des¸ùti⁄>TIM8 Timî clockÉ«bÀ</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
USART1EN
</«me> <des¸ùti⁄>USART1 clockÉ«bÀ</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ADC3EN
</«me> <des¸ùti⁄>
ADC3
 i¡îÁ˚ clockÉ«bÀ</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM9EN
</«me> <des¸ùti⁄>TIM9 Timî clockÉ«bÀ</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM10EN
</«me> <des¸ùti⁄>TIM10 Timî clockÉ«bÀ</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM11EN
</«me> <des¸ùti⁄>TIM11 Timî clockÉ«bÀ</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
APB1ENR
</«me> <di•œyName>APB1ENR</di•œyName> <des¸ùti⁄>APB1ÖîùhîÆ clockÉ«bÀ (
RCC_APB1ENR
)</des¸ùti⁄> <addªssOff£t>0x1C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
TIM2EN
</«me> <des¸ùti⁄>Timî 2 clockÉ«bÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM3EN
</«me> <des¸ùti⁄>Timî 3 clockÉ«bÀ</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM4EN
</«me> <des¸ùti⁄>Timî 4 clockÉ«bÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM5EN
</«me> <des¸ùti⁄>Timî 5 clockÉ«bÀ</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM6EN
</«me> <des¸ùti⁄>Timî 6 clockÉ«bÀ</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM7EN
</«me> <des¸ùti⁄>Timî 7 clockÉ«bÀ</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM12EN
</«me> <des¸ùti⁄>Timî 12 clockÉ«bÀ</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM13EN
</«me> <des¸ùti⁄>Timî 13 clockÉ«bÀ</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM14EN
</«me> <des¸ùti⁄>Timî 14 clockÉ«bÀ</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
WWDGEN
</«me> <des¸ùti⁄>Wödow w©chdog clockÉ«bÀ</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SPI2EN
</«me> <des¸ùti⁄>SPI 2 clockÉ«bÀ</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SPI3EN
</«me> <des¸ùti⁄>SPI 3 clockÉ«bÀ</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
USART2EN
</«me> <des¸ùti⁄>USART 2 clockÉ«bÀ</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
USART3EN
</«me> <des¸ùti⁄>USART 3 clockÉ«bÀ</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
UART4EN
</«me> <des¸ùti⁄>UART 4 clockÉ«bÀ</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
UART5EN
</«me> <des¸ùti⁄>UART 5 clockÉ«bÀ</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
I2C1EN
</«me> <des¸ùti⁄>
I2C
 1 clockÉ«bÀ</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
I2C2EN
</«me> <des¸ùti⁄>I2C 2 clockÉ«bÀ</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
USBEN
</«me> <des¸ùti⁄>USB clockÉ«bÀ</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CANEN
</«me> <des¸ùti⁄>CAN clockÉ«bÀ</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BKPEN
</«me> <des¸ùti⁄>Backu∞öãrÁ˚ clockÉ«bÀ</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PWREN
</«me> <des¸ùti⁄>Powî i¡îÁ˚ clockÉ«bÀ</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DACEN
</«me> <des¸ùti⁄>DAC i¡îÁ˚ clockÉ«bÀ</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
BDCR
</«me> <di•œyName>BDCR</di•œyName> <des¸ùti⁄>Backu∞
domaö
 c⁄åﬁ (
RCC_BDCR
)</des¸ùti⁄> <addªssOff£t>0x20</addªssOff£t> <size>0x20</size> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
LSEON
</«me> <des¸ùti⁄>Exã∫Æ Low S≥ed 
oscûœt‹
É«bÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
LSERDY
</«me> <des¸ùti⁄>Exã∫Æ Low S≥ed oscûœt‹Ñódy</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
LSEBYP
</«me> <des¸ùti⁄>Exã∫Æ Low S≥ed oscûœt‹ 
by∑ss
</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
RTCSEL
</«me> <des¸ùti⁄>
RTC
 clock sour˚ 
£À˘i⁄
</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
RTCEN
</«me> <des¸ùti⁄>RTC clockÉ«bÀ</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
BDRST
</«me> <des¸ùti⁄>Backu∞domaö 
so·w¨e
Ñe£t</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> </fõlds> </> <> <«me>CSR</«me> <di•œyName>CSR</di•œyName> <des¸ùti⁄>
C⁄åﬁ
/°©u†(
RCC_CSR
)</des¸ùti⁄> <addªssOff£t>0x24</addªssOff£t> <size>0x20</size> <ª£tVÆue>0x0C000000</ª£tVÆue> <fõlds> <fõld> <«me>
LSION
</«me> <des¸ùti⁄>I¡î«»
low
 s≥ed oscûœt‹É«bÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
LSIRDY
</«me> <des¸ùti⁄>I¡î«»low s≥ed oscûœt‹Ñódy</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
RMVF
</«me> <des¸ùti⁄>
Remove
Ñe£àÊag</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
PINRSTF
</«me> <des¸ùti⁄>
PIN
Ñe£àÊag</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
PORRSTF
</«me> <des¸ùti⁄>
POR
/
PDR
Ñe£àÊag</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
SFTRSTF
</«me> <des¸ùti⁄>
So·w¨e
Ñe£àÊag</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
IWDGRSTF
</«me> <des¸ùti⁄>
Indïídít
 w©chdogÑe£àÊag</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
WWDGRSTF
</«me> <des¸ùti⁄>Wödow w©chdogÑe£àÊag</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
LPWRRSTF
</«me> <des¸ùti⁄>Low-
powî
Ñe£àÊag</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ> <«me>
GPIOA
</«me> <des¸ùti⁄>
GíîÆ
 
puΩo£
 I/O</des¸ùti⁄> <groupName>
GPIO
</groupName> <ba£Addªss>0x40010800</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <ªgi°îs> <> <«me>
CRL
</«me> <di•œyName>CRL</di•œyName> <des¸ùti⁄>
P‹t
 c⁄figuøti⁄ low (
GPIOn_CRL
)</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x44444444</ª£tVÆue> <fõlds> <fõld> <«me>
MODE0
</«me> <des¸ùti⁄>P‹à
n
.0 
mode
 
bôs
</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
CNF0
</«me> <des¸ùti⁄>P‹àn.0 c⁄figuøti⁄ bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
MODE1
</«me> <des¸ùti⁄>P‹àn.1 modêbôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
CNF1
</«me> <des¸ùti⁄>P‹àn.1 c⁄figuøti⁄ bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
MODE2
</«me> <des¸ùti⁄>P‹àn.2 modêbôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
CNF2
</«me> <des¸ùti⁄>P‹àn.2 c⁄figuøti⁄ bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
MODE3
</«me> <des¸ùti⁄>P‹àn.3 modêbôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
CNF3
</«me> <des¸ùti⁄>P‹àn.3 c⁄figuøti⁄ bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
MODE4
</«me> <des¸ùti⁄>P‹àn.4 modêbôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
CNF4
</«me> <des¸ùti⁄>P‹àn.4 c⁄figuøti⁄ bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
MODE5
</«me> <des¸ùti⁄>P‹àn.5 modêbôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
CNF5
</«me> <des¸ùti⁄>P‹àn.5 c⁄figuøti⁄ bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
MODE6
</«me> <des¸ùti⁄>P‹àn.6 modêbôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
CNF6
</«me> <des¸ùti⁄>P‹àn.6 c⁄figuøti⁄ bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
MODE7
</«me> <des¸ùti⁄>P‹àn.7 modêbôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
CNF7
</«me> <des¸ùti⁄>P‹àn.7 c⁄figuøti⁄ bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>2</bôWidth> </fõld> </fõlds> </> <> <«me>
CRH
</«me> <di•œyName>CRH</di•œyName> <des¸ùti⁄>P‹àc⁄figuøti⁄ 
high
 (GPIOn_CRL)</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x44444444</ª£tVÆue> <fõlds> <fõld> <«me>
MODE8
</«me> <des¸ùti⁄>P‹àn.8 modêbôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
CNF8
</«me> <des¸ùti⁄>P‹àn.8 c⁄figuøti⁄ bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
MODE9
</«me> <des¸ùti⁄>P‹àn.9 modêbôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
CNF9
</«me> <des¸ùti⁄>P‹àn.9 c⁄figuøti⁄ bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
MODE10
</«me> <des¸ùti⁄>P‹àn.10 modêbôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
CNF10
</«me> <des¸ùti⁄>P‹àn.10 c⁄figuøti⁄ bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
MODE11
</«me> <des¸ùti⁄>P‹àn.11 modêbôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
CNF11
</«me> <des¸ùti⁄>P‹àn.11 c⁄figuøti⁄ bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
MODE12
</«me> <des¸ùti⁄>P‹àn.12 modêbôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
CNF12
</«me> <des¸ùti⁄>P‹àn.12 c⁄figuøti⁄ bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
MODE13
</«me> <des¸ùti⁄>P‹àn.13 modêbôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
CNF13
</«me> <des¸ùti⁄>P‹àn.13 c⁄figuøti⁄ bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
MODE14
</«me> <des¸ùti⁄>P‹àn.14 modêbôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
CNF14
</«me> <des¸ùti⁄>P‹àn.14 c⁄figuøti⁄ bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
MODE15
</«me> <des¸ùti⁄>P‹àn.15 modêbôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
CNF15
</«me> <des¸ùti⁄>P‹àn.15 c⁄figuøti⁄ bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>2</bôWidth> </fõld> </fõlds> </> <> <«me>
IDR
</«me> <di•œyName>IDR</di•œyName> <des¸ùti⁄>P‹à
öput
 d©®(
GPIOn_IDR
)</des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
IDR0
</«me> <des¸ùti⁄>P‹àöpuàd©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IDR1
</«me> <des¸ùti⁄>P‹àöpuàd©a</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IDR2
</«me> <des¸ùti⁄>P‹àöpuàd©a</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IDR3
</«me> <des¸ùti⁄>P‹àöpuàd©a</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IDR4
</«me> <des¸ùti⁄>P‹àöpuàd©a</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IDR5
</«me> <des¸ùti⁄>P‹àöpuàd©a</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IDR6
</«me> <des¸ùti⁄>P‹àöpuàd©a</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IDR7
</«me> <des¸ùti⁄>P‹àöpuàd©a</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IDR8
</«me> <des¸ùti⁄>P‹àöpuàd©a</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IDR9
</«me> <des¸ùti⁄>P‹àöpuàd©a</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IDR10
</«me> <des¸ùti⁄>P‹àöpuàd©a</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IDR11
</«me> <des¸ùti⁄>P‹àöpuàd©a</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IDR12
</«me> <des¸ùti⁄>P‹àöpuàd©a</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IDR13
</«me> <des¸ùti⁄>P‹àöpuàd©a</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IDR14
</«me> <des¸ùti⁄>P‹àöpuàd©a</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IDR15
</«me> <des¸ùti⁄>P‹àöpuàd©a</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
ODR
</«me> <di•œyName>ODR</di•œyName> <des¸ùti⁄>P‹àouçuàd©®(
GPIOn_ODR
)</des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
ODR0
</«me> <des¸ùti⁄>P‹àouçuàd©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ODR1
</«me> <des¸ùti⁄>P‹àouçuàd©a</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ODR2
</«me> <des¸ùti⁄>P‹àouçuàd©a</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ODR3
</«me> <des¸ùti⁄>P‹àouçuàd©a</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ODR4
</«me> <des¸ùti⁄>P‹àouçuàd©a</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ODR5
</«me> <des¸ùti⁄>P‹àouçuàd©a</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ODR6
</«me> <des¸ùti⁄>P‹àouçuàd©a</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ODR7
</«me> <des¸ùti⁄>P‹àouçuàd©a</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ODR8
</«me> <des¸ùti⁄>P‹àouçuàd©a</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ODR9
</«me> <des¸ùti⁄>P‹àouçuàd©a</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ODR10
</«me> <des¸ùti⁄>P‹àouçuàd©a</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ODR11
</«me> <des¸ùti⁄>P‹àouçuàd©a</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ODR12
</«me> <des¸ùti⁄>P‹àouçuàd©a</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ODR13
</«me> <des¸ùti⁄>P‹àouçuàd©a</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ODR14
</«me> <des¸ùti⁄>P‹àouçuàd©a</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ODR15
</«me> <des¸ùti⁄>P‹àouçuàd©a</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
BSRR
</«me> <di•œyName>BSRR</di•œyName> <des¸ùti⁄>P‹àbô 
£t
/ª£à(
GPIOn_BSRR
)</des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ac˚ss>wrôe-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
BS0
</«me> <des¸ùti⁄>
Së
 bô 0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BS1
</«me> <des¸ùti⁄>Së bô 1</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BS2
</«me> <des¸ùti⁄>Së bô 1</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BS3
</«me> <des¸ùti⁄>Së bô 3</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BS4
</«me> <des¸ùti⁄>Së bô 4</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BS5
</«me> <des¸ùti⁄>Së bô 5</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BS6
</«me> <des¸ùti⁄>Së bô 6</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BS7
</«me> <des¸ùti⁄>Së bô 7</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BS8
</«me> <des¸ùti⁄>Së bô 8</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BS9
</«me> <des¸ùti⁄>Së bô 9</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BS10
</«me> <des¸ùti⁄>Së bô 10</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BS11
</«me> <des¸ùti⁄>Së bô 11</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BS12
</«me> <des¸ùti⁄>Së bô 12</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BS13
</«me> <des¸ùti⁄>Së bô 13</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BS14
</«me> <des¸ùti⁄>Së bô 14</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BS15
</«me> <des¸ùti⁄>Së bô 15</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BR0
</«me> <des¸ùti⁄>Re£àbô 0</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BR1
</«me> <des¸ùti⁄>Re£àbô 1</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BR2
</«me> <des¸ùti⁄>Re£àbô 2</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BR3
</«me> <des¸ùti⁄>Re£àbô 3</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BR4
</«me> <des¸ùti⁄>Re£àbô 4</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BR5
</«me> <des¸ùti⁄>Re£àbô 5</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BR6
</«me> <des¸ùti⁄>Re£àbô 6</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BR7
</«me> <des¸ùti⁄>Re£àbô 7</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BR8
</«me> <des¸ùti⁄>Re£àbô 8</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BR9
</«me> <des¸ùti⁄>Re£àbô 9</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BR10
</«me> <des¸ùti⁄>Re£àbô 10</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BR11
</«me> <des¸ùti⁄>Re£àbô 11</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BR12
</«me> <des¸ùti⁄>Re£àbô 12</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BR13
</«me> <des¸ùti⁄>Re£àbô 13</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BR14
</«me> <des¸ùti⁄>Re£àbô 14</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BR15
</«me> <des¸ùti⁄>Re£àbô 15</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
BRR
</«me> <di•œyName>BRR</di•œyName> <des¸ùti⁄>P‹àbôÑe£à(
GPIOn_BRR
)</des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ac˚ss>wrôe-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>BR0</«me> <des¸ùti⁄>Re£àbô 0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>BR1</«me> <des¸ùti⁄>Re£àbô 1</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>BR2</«me> <des¸ùti⁄>Re£àbô 1</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>BR3</«me> <des¸ùti⁄>Re£àbô 3</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>BR4</«me> <des¸ùti⁄>Re£àbô 4</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>BR5</«me> <des¸ùti⁄>Re£àbô 5</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>BR6</«me> <des¸ùti⁄>Re£àbô 6</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>BR7</«me> <des¸ùti⁄>Re£àbô 7</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>BR8</«me> <des¸ùti⁄>Re£àbô 8</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>BR9</«me> <des¸ùti⁄>Re£àbô 9</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>BR10</«me> <des¸ùti⁄>Re£àbô 10</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>BR11</«me> <des¸ùti⁄>Re£àbô 11</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>BR12</«me> <des¸ùti⁄>Re£àbô 12</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>BR13</«me> <des¸ùti⁄>Re£àbô 13</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>BR14</«me> <des¸ùti⁄>Re£àbô 14</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>BR15</«me> <des¸ùti⁄>Re£àbô 15</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
LCKR
</«me> <di•œyName>LCKR</di•œyName> <des¸ùti⁄>P‹àc⁄figuøti⁄ 
lock
 </des¸ùti⁄> <addªssOff£t>0x18</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
LCK0
</«me> <des¸ùti⁄>P‹àA 
Lock
 bô 0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
LCK1
</«me> <des¸ùti⁄>P‹àA Lock bô 1</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
LCK2
</«me> <des¸ùti⁄>P‹àA Lock bô 2</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
LCK3
</«me> <des¸ùti⁄>P‹àA Lock bô 3</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
LCK4
</«me> <des¸ùti⁄>P‹àA Lock bô 4</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
LCK5
</«me> <des¸ùti⁄>P‹àA Lock bô 5</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
LCK6
</«me> <des¸ùti⁄>P‹àA Lock bô 6</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
LCK7
</«me> <des¸ùti⁄>P‹àA Lock bô 7</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
LCK8
</«me> <des¸ùti⁄>P‹àA Lock bô 8</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
LCK9
</«me> <des¸ùti⁄>P‹àA Lock bô 9</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
LCK10
</«me> <des¸ùti⁄>P‹àA Lock bô 10</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
LCK11
</«me> <des¸ùti⁄>P‹àA Lock bô 11</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
LCK12
</«me> <des¸ùti⁄>P‹àA Lock bô 12</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
LCK13
</«me> <des¸ùti⁄>P‹àA Lock bô 13</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
LCK14
</«me> <des¸ùti⁄>P‹àA Lock bô 14</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
LCK15
</«me> <des¸ùti⁄>P‹àA Lock bô 15</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
LCKK
</«me> <des¸ùti⁄>Lock 
key
</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ 
dîivedFrom
="GPIOA"> <«me>
GPIOB
</«me> <ba£Addªss>0x40010C00</ba£Addªss> </≥rùhîÆ> <≥rùhîÆ dîivedFrom="GPIOA"> <«me>
GPIOC
</«me> <ba£Addªss>0x40011000</ba£Addªss> </≥rùhîÆ> <≥rùhîÆ dîivedFrom="GPIOA"> <«me>
GPIOD
</«me> <ba£Addªss>0x40011400</ba£Addªss> </≥rùhîÆ> <≥rùhîÆ dîivedFrom="GPIOA"> <«me>
GPIOE
</«me> <ba£Addªss>0x40011800</ba£Addªss> </≥rùhîÆ> <≥rùhîÆ dîivedFrom="GPIOA"> <«me>
GPIOF
</«me> <ba£Addªss>0x40011C00</ba£Addªss> </≥rùhîÆ> <≥rùhîÆ dîivedFrom="GPIOA"> <«me>
GPIOG
</«me> <ba£Addªss>0x40012000</ba£Addªss> </≥rùhîÆ> <≥rùhîÆ> <«me>
AFIO
</«me> <des¸ùti⁄>A…î«ã fun˘i⁄ I/O</des¸ùti⁄> <groupName>AFIO</groupName> <ba£Addªss>0x40010000</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <ªgi°îs> <> <«me>
EVCR
</«me> <di•œyName>EVCR</di•œyName> <des¸ùti⁄>
Evít
 C⁄åﬁ Regi°î (
AFIO_EVCR
)</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>PIN</«me> <des¸ùti⁄>
Pö
 sñe˘i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
PORT
</«me> <des¸ùti⁄>P‹à£À˘i⁄</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
EVOE
</«me> <des¸ùti⁄>EvíàOuçuàE«bÀ</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
MAPR
</«me> <di•œyName>MAPR</di•œyName> <des¸ùti⁄>
AF
 
ªm≠
ánd 
debug
 I/O c⁄figuøti⁄ (
AFIO_MAPR
)</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
SPI1_REMAP
</«me> <des¸ùti⁄>
SPI1
 
ªm≠pög
</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
I2C1_REMAP
</«me> <des¸ùti⁄>I2C1Ñem≠pög</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
USART1_REMAP
</«me> <des¸ùti⁄>USART1Ñem≠pög</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
USART2_REMAP
</«me> <des¸ùti⁄>
USART2
Ñem≠pög</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
USART3_REMAP
</«me> <des¸ùti⁄>
USART3
Ñem≠pög</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>2</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
TIM1_REMAP
</«me> <des¸ùti⁄>TIM1Ñem≠pög</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>2</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
TIM2_REMAP
</«me> <des¸ùti⁄>
TIM2
Ñem≠pög</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
TIM3_REMAP
</«me> <des¸ùti⁄>
TIM3
Ñem≠pög</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>2</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
TIM4_REMAP
</«me> <des¸ùti⁄>
TIM4
Ñem≠pög</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
CAN_REMAP
</«me> <des¸ùti⁄>
CAN1
Ñem≠pög</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>2</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
PD01_REMAP
</«me> <des¸ùti⁄>P‹à
D0
/P‹à
D1
 
m≠pög
 
⁄
 
OSCIN
/
OSCOUT
</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
TIM5CH4_IREMAP
</«me> <des¸ùti⁄>Sëánd 
˛óªd
 
by
 so·w¨e</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
ADC1_ETRGINJ_REMAP
</«me> <des¸ùti⁄>ADC 1 Exã∫Æ 
åiggî
 
öje˘ed
 
c⁄vîsi⁄
Ñem≠pög</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
ADC1_ETRGREG_REMAP
</«me> <des¸ùti⁄>ADC 1 
exã∫Æ
Åriggî 
ªguœr
 c⁄vîsi⁄Ñem≠pög</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
ADC2_ETRGINJ_REMAP
</«me> <des¸ùti⁄>ADC 2Éxã∫ÆÅriggî inje˘ed c⁄vîsi⁄Ñem≠pög</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
ADC2_ETRGREG_REMAP
</«me> <des¸ùti⁄>ADC 2Éxã∫ÆÅriggîÑeguœ∏c⁄vîsi⁄Ñem≠pög</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
SWJ_CFG
</«me> <des¸ùti⁄>
Sîül
 
wúe
 
JTAG
 c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>3</bôWidth> <ac˚ss>wrôe-⁄ly</ac˚ss> </fõld> </fõlds> </> <> <«me>
EXTICR1
</«me> <di•œyName>EXTICR1</di•œyName> <des¸ùti⁄>Exã∫Æ i¡îru± c⁄figuøti⁄ 1 (
AFIO_EXTICR1
)</des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
EXTI0
</«me> <des¸ùti⁄>EXTI0 c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
EXTI1
</«me> <des¸ùti⁄>EXTI1 c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
EXTI2
</«me> <des¸ùti⁄>EXTI2 c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
EXTI3
</«me> <des¸ùti⁄>EXTI3 c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>4</bôWidth> </fõld> </fõlds> </> <> <«me>
EXTICR2
</«me> <di•œyName>EXTICR2</di•œyName> <des¸ùti⁄>Exã∫Æ i¡îru± c⁄figuøti⁄ 2 (
AFIO_EXTICR2
)</des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
EXTI4
</«me> <des¸ùti⁄>EXTI4 c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
EXTI5
</«me> <des¸ùti⁄>EXTI5 c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
EXTI6
</«me> <des¸ùti⁄>EXTI6 c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
EXTI7
</«me> <des¸ùti⁄>EXTI7 c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>4</bôWidth> </fõld> </fõlds> </> <> <«me>
EXTICR3
</«me> <di•œyName>EXTICR3</di•œyName> <des¸ùti⁄>Exã∫Æ i¡îru± c⁄figuøti⁄ 3 (
AFIO_EXTICR3
)</des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
EXTI8
</«me> <des¸ùti⁄>EXTI8 c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
EXTI9
</«me> <des¸ùti⁄>EXTI9 c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
EXTI10
</«me> <des¸ùti⁄>EXTI10 c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
EXTI11
</«me> <des¸ùti⁄>EXTI11 c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>4</bôWidth> </fõld> </fõlds> </> <> <«me>
EXTICR4
</«me> <di•œyName>EXTICR4</di•œyName> <des¸ùti⁄>Exã∫Æ i¡îru± c⁄figuøti⁄ 4 (
AFIO_EXTICR4
)</des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
EXTI12
</«me> <des¸ùti⁄>EXTI12 c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
EXTI13
</«me> <des¸ùti⁄>EXTI13 c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
EXTI14
</«me> <des¸ùti⁄>EXTI14 c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
EXTI15
</«me> <des¸ùti⁄>EXTI15 c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>4</bôWidth> </fõld> </fõlds> </> <> <«me>
MAPR2
</«me> <di•œyName>MAPR2</di•œyName> <des¸ùti⁄>AFÑem≠ánd debug I/O c⁄figuøti⁄ </des¸ùti⁄> <addªssOff£t>0x1C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
TIM9_REMAP
</«me> <des¸ùti⁄>TIM9Ñem≠pög</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM10_REMAP
</«me> <des¸ùti⁄>TIM10Ñem≠pög</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM11_REMAP
</«me> <des¸ùti⁄>TIM11Ñem≠pög</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM13_REMAP
</«me> <des¸ùti⁄>
TIM13
Ñem≠pög</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIM14_REMAP
</«me> <des¸ùti⁄>
TIM14
Ñem≠pög</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FSMC_NADV
</«me> <des¸ùti⁄>
NADV
 
c⁄√˘
/
disc⁄√˘
</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ> <«me>EXTI</«me> <des¸ùti⁄>EXTI</des¸ùti⁄> <groupName>EXTI</groupName> <ba£Addªss>0x40010400</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <öãºu±> <«me>
TAMPER
</«me> <des¸ùti⁄>
Tam≥r
 i¡îru±</des¸ùti⁄> <vÆue>2</vÆue> </öãºu±> <öãºu±> <«me>EXTI0</«me> <des¸ùti⁄>EXTI 
Löe0
 i¡îru±</des¸ùti⁄> <vÆue>6</vÆue> </öãºu±> <öãºu±> <«me>EXTI1</«me> <des¸ùti⁄>EXTI 
Löe1
 i¡îru±</des¸ùti⁄> <vÆue>7</vÆue> </öãºu±> <öãºu±> <«me>EXTI2</«me> <des¸ùti⁄>EXTI 
Löe2
 i¡îru±</des¸ùti⁄> <vÆue>8</vÆue> </öãºu±> <öãºu±> <«me>EXTI3</«me> <des¸ùti⁄>EXTI 
Löe3
 i¡îru±</des¸ùti⁄> <vÆue>9</vÆue> </öãºu±> <öãºu±> <«me>EXTI4</«me> <des¸ùti⁄>EXTI 
Löe4
 i¡îru±</des¸ùti⁄> <vÆue>10</vÆue> </öãºu±> <öãºu±> <«me>
EXTI9_5
</«me> <des¸ùti⁄>EXTI 
Löe
[9:5] 
öãºu±s
</des¸ùti⁄> <vÆue>23</vÆue> </öãºu±> <öãºu±> <«me>
EXTI15_10
</«me> <des¸ùti⁄>EXTI Löe[15:10] i¡îru±s</des¸ùti⁄> <vÆue>40</vÆue> </öãºu±> <ªgi°îs> <> <«me>
IMR
</«me> <di•œyName>IMR</di•œyName> <des¸ùti⁄>I¡îru± 
mask
 (
EXTI_IMR
)</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
MR0
</«me> <des¸ùti⁄>I¡îru± 
Mask
 o¿löê0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
MR1
</«me> <des¸ùti⁄>I¡îru± Mask o¿löê1</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
MR2
</«me> <des¸ùti⁄>I¡îru± Mask o¿löê2</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
MR3
</«me> <des¸ùti⁄>I¡îru± Mask o¿löê3</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
MR4
</«me> <des¸ùti⁄>I¡îru± Mask o¿löê4</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
MR5
</«me> <des¸ùti⁄>I¡îru± Mask o¿löê5</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
MR6
</«me> <des¸ùti⁄>I¡îru± Mask o¿löê6</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
MR7
</«me> <des¸ùti⁄>I¡îru± Mask o¿löê7</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
MR8
</«me> <des¸ùti⁄>I¡îru± Mask o¿löê8</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
MR9
</«me> <des¸ùti⁄>I¡îru± Mask o¿löê9</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
MR10
</«me> <des¸ùti⁄>I¡îru± Mask o¿löê10</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
MR11
</«me> <des¸ùti⁄>I¡îru± Mask o¿löê11</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
MR12
</«me> <des¸ùti⁄>I¡îru± Mask o¿löê12</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
MR13
</«me> <des¸ùti⁄>I¡îru± Mask o¿löê13</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
MR14
</«me> <des¸ùti⁄>I¡îru± Mask o¿löê14</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
MR15
</«me> <des¸ùti⁄>I¡îru± Mask o¿löê15</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
MR16
</«me> <des¸ùti⁄>I¡îru± Mask o¿löê16</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
MR17
</«me> <des¸ùti⁄>I¡îru± Mask o¿löê17</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
MR18
</«me> <des¸ùti⁄>I¡îru± Mask o¿löê18</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
EMR
</«me> <di•œyName>EMR</di•œyName> <des¸ùti⁄>Evíàmask (
EXTI_EMR
)</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>MR0</«me> <des¸ùti⁄>EvíàMask o¿löê0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MR1</«me> <des¸ùti⁄>EvíàMask o¿löê1</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MR2</«me> <des¸ùti⁄>EvíàMask o¿löê2</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MR3</«me> <des¸ùti⁄>EvíàMask o¿löê3</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MR4</«me> <des¸ùti⁄>EvíàMask o¿löê4</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MR5</«me> <des¸ùti⁄>EvíàMask o¿löê5</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MR6</«me> <des¸ùti⁄>EvíàMask o¿löê6</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MR7</«me> <des¸ùti⁄>EvíàMask o¿löê7</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MR8</«me> <des¸ùti⁄>EvíàMask o¿löê8</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MR9</«me> <des¸ùti⁄>EvíàMask o¿löê9</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MR10</«me> <des¸ùti⁄>EvíàMask o¿löê10</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MR11</«me> <des¸ùti⁄>EvíàMask o¿löê11</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MR12</«me> <des¸ùti⁄>EvíàMask o¿löê12</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MR13</«me> <des¸ùti⁄>EvíàMask o¿löê13</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MR14</«me> <des¸ùti⁄>EvíàMask o¿löê14</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MR15</«me> <des¸ùti⁄>EvíàMask o¿löê15</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MR16</«me> <des¸ùti⁄>EvíàMask o¿löê16</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MR17</«me> <des¸ùti⁄>EvíàMask o¿löê17</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MR18</«me> <des¸ùti⁄>EvíàMask o¿löê18</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
RTSR
</«me> <di•œyName>RTSR</di•œyName> <des¸ùti⁄>
Risög
 
Triggî
 sñe˘i⁄ (
EXTI_RTSR
)</des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
TR0
</«me> <des¸ùti⁄>RisögÅriggî 
evít
 c⁄figuøti⁄ 
of
Üöê0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TR1
</«me> <des¸ùti⁄>RisögÅriggîÉvíàc⁄figuøti⁄ o‡löê1</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TR2
</«me> <des¸ùti⁄>RisögÅriggîÉvíàc⁄figuøti⁄ o‡löê2</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TR3
</«me> <des¸ùti⁄>RisögÅriggîÉvíàc⁄figuøti⁄ o‡löê3</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TR4
</«me> <des¸ùti⁄>RisögÅriggîÉvíàc⁄figuøti⁄ o‡löê4</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TR5
</«me> <des¸ùti⁄>RisögÅriggîÉvíàc⁄figuøti⁄ o‡löê5</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TR6
</«me> <des¸ùti⁄>RisögÅriggîÉvíàc⁄figuøti⁄ o‡löê6</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TR7
</«me> <des¸ùti⁄>RisögÅriggîÉvíàc⁄figuøti⁄ o‡löê7</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TR8
</«me> <des¸ùti⁄>RisögÅriggîÉvíàc⁄figuøti⁄ o‡löê8</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TR9
</«me> <des¸ùti⁄>RisögÅriggîÉvíàc⁄figuøti⁄ o‡löê9</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TR10
</«me> <des¸ùti⁄>RisögÅriggîÉvíàc⁄figuøti⁄ o‡löê10</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TR11
</«me> <des¸ùti⁄>RisögÅriggîÉvíàc⁄figuøti⁄ o‡löê11</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TR12
</«me> <des¸ùti⁄>RisögÅriggîÉvíàc⁄figuøti⁄ o‡löê12</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TR13
</«me> <des¸ùti⁄>RisögÅriggîÉvíàc⁄figuøti⁄ o‡löê13</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TR14
</«me> <des¸ùti⁄>RisögÅriggîÉvíàc⁄figuøti⁄ o‡löê14</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TR15
</«me> <des¸ùti⁄>RisögÅriggîÉvíàc⁄figuøti⁄ o‡löê15</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TR16
</«me> <des¸ùti⁄>RisögÅriggîÉvíàc⁄figuøti⁄ o‡löê16</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TR17
</«me> <des¸ùti⁄>RisögÅriggîÉvíàc⁄figuøti⁄ o‡löê17</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TR18
</«me> <des¸ùti⁄>RisögÅriggîÉvíàc⁄figuøti⁄ o‡löê18</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
FTSR
</«me> <di•œyName>FTSR</di•œyName> <des¸ùti⁄>
FÆlög
 Triggî sñe˘i⁄ (
EXTI_FTSR
)</des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>TR0</«me> <des¸ùti⁄>FÆlögÅriggîÉvíàc⁄figuøti⁄ o‡löê0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TR1</«me> <des¸ùti⁄>FÆlögÅriggîÉvíàc⁄figuøti⁄ o‡löê1</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TR2</«me> <des¸ùti⁄>FÆlögÅriggîÉvíàc⁄figuøti⁄ o‡löê2</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TR3</«me> <des¸ùti⁄>FÆlögÅriggîÉvíàc⁄figuøti⁄ o‡löê3</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TR4</«me> <des¸ùti⁄>FÆlögÅriggîÉvíàc⁄figuøti⁄ o‡löê4</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TR5</«me> <des¸ùti⁄>FÆlögÅriggîÉvíàc⁄figuøti⁄ o‡löê5</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TR6</«me> <des¸ùti⁄>FÆlögÅriggîÉvíàc⁄figuøti⁄ o‡löê6</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TR7</«me> <des¸ùti⁄>FÆlögÅriggîÉvíàc⁄figuøti⁄ o‡löê7</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TR8</«me> <des¸ùti⁄>FÆlögÅriggîÉvíàc⁄figuøti⁄ o‡löê8</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TR9</«me> <des¸ùti⁄>FÆlögÅriggîÉvíàc⁄figuøti⁄ o‡löê9</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TR10</«me> <des¸ùti⁄>FÆlögÅriggîÉvíàc⁄figuøti⁄ o‡löê10</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TR11</«me> <des¸ùti⁄>FÆlögÅriggîÉvíàc⁄figuøti⁄ o‡löê11</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TR12</«me> <des¸ùti⁄>FÆlögÅriggîÉvíàc⁄figuøti⁄ o‡löê12</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TR13</«me> <des¸ùti⁄>FÆlögÅriggîÉvíàc⁄figuøti⁄ o‡löê13</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TR14</«me> <des¸ùti⁄>FÆlögÅriggîÉvíàc⁄figuøti⁄ o‡löê14</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TR15</«me> <des¸ùti⁄>FÆlögÅriggîÉvíàc⁄figuøti⁄ o‡löê15</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TR16</«me> <des¸ùti⁄>FÆlögÅriggîÉvíàc⁄figuøti⁄ o‡löê16</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TR17</«me> <des¸ùti⁄>FÆlögÅriggîÉvíàc⁄figuøti⁄ o‡löê17</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TR18</«me> <des¸ùti⁄>FÆlögÅriggîÉvíàc⁄figuøti⁄ o‡löê18</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
SWIER
</«me> <di•œyName>SWIER</di•œyName> <des¸ùti⁄>So·w¨êöãºu±Évíà(
EXTI_SWIER
)</des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
SWIER0
</«me> <des¸ùti⁄>So·w¨êI¡îru± o¿löê0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SWIER1
</«me> <des¸ùti⁄>So·w¨êI¡îru± o¿löê1</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SWIER2
</«me> <des¸ùti⁄>So·w¨êI¡îru± o¿löê2</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SWIER3
</«me> <des¸ùti⁄>So·w¨êI¡îru± o¿löê3</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SWIER4
</«me> <des¸ùti⁄>So·w¨êI¡îru± o¿löê4</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SWIER5
</«me> <des¸ùti⁄>So·w¨êI¡îru± o¿löê5</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SWIER6
</«me> <des¸ùti⁄>So·w¨êI¡îru± o¿löê6</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SWIER7
</«me> <des¸ùti⁄>So·w¨êI¡îru± o¿löê7</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SWIER8
</«me> <des¸ùti⁄>So·w¨êI¡îru± o¿löê8</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SWIER9
</«me> <des¸ùti⁄>So·w¨êI¡îru± o¿löê9</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SWIER10
</«me> <des¸ùti⁄>So·w¨êI¡îru± o¿löê10</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SWIER11
</«me> <des¸ùti⁄>So·w¨êI¡îru± o¿löê11</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SWIER12
</«me> <des¸ùti⁄>So·w¨êI¡îru± o¿löê12</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SWIER13
</«me> <des¸ùti⁄>So·w¨êI¡îru± o¿löê13</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SWIER14
</«me> <des¸ùti⁄>So·w¨êI¡îru± o¿löê14</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SWIER15
</«me> <des¸ùti⁄>So·w¨êI¡îru± o¿löê15</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SWIER16
</«me> <des¸ùti⁄>So·w¨êI¡îru± o¿löê16</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SWIER17
</«me> <des¸ùti⁄>So·w¨êI¡îru± o¿löê17</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SWIER18
</«me> <des¸ùti⁄>So·w¨êI¡îru± o¿löê18</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
PR
</«me> <di•œyName>PR</di•œyName> <des¸ùti⁄>
Pídög
 (
EXTI_PR
)</des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
PR0
</«me> <des¸ùti⁄>Pídög bô 0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PR1
</«me> <des¸ùti⁄>Pídög bô 1</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PR2
</«me> <des¸ùti⁄>Pídög bô 2</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PR3
</«me> <des¸ùti⁄>Pídög bô 3</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PR4
</«me> <des¸ùti⁄>Pídög bô 4</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PR5
</«me> <des¸ùti⁄>Pídög bô 5</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PR6
</«me> <des¸ùti⁄>Pídög bô 6</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PR7
</«me> <des¸ùti⁄>Pídög bô 7</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PR8
</«me> <des¸ùti⁄>Pídög bô 8</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PR9
</«me> <des¸ùti⁄>Pídög bô 9</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PR10
</«me> <des¸ùti⁄>Pídög bô 10</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PR11
</«me> <des¸ùti⁄>Pídög bô 11</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PR12
</«me> <des¸ùti⁄>Pídög bô 12</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PR13
</«me> <des¸ùti⁄>Pídög bô 13</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PR14
</«me> <des¸ùti⁄>Pídög bô 14</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PR15
</«me> <des¸ùti⁄>Pídög bô 15</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PR16
</«me> <des¸ùti⁄>Pídög bô 16</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PR17
</«me> <des¸ùti⁄>Pídög bô 17</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PR18
</«me> <des¸ùti⁄>Pídög bô 18</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ> <«me>DMA1</«me> <des¸ùti⁄>
DMA
 c⁄åﬁÀr</des¸ùti⁄> <groupName>DMA</groupName> <ba£Addªss>0x40020000</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <öãºu±> <«me>
DMA1_Ch™√l1
</«me> <des¸ùti⁄>DMA1 
Ch™√l1
 globÆ i¡îru±</des¸ùti⁄> <vÆue>11</vÆue> </öãºu±> <öãºu±> <«me>
DMA1_Ch™√l2
</«me> <des¸ùti⁄>DMA1 
Ch™√l2
 globÆ i¡îru±</des¸ùti⁄> <vÆue>12</vÆue> </öãºu±> <öãºu±> <«me>
DMA1_Ch™√l3
</«me> <des¸ùti⁄>DMA1 
Ch™√l3
 globÆ i¡îru±</des¸ùti⁄> <vÆue>13</vÆue> </öãºu±> <öãºu±> <«me>
DMA1_Ch™√l4
</«me> <des¸ùti⁄>DMA1 
Ch™√l4
 globÆ i¡îru±</des¸ùti⁄> <vÆue>14</vÆue> </öãºu±> <öãºu±> <«me>
DMA1_Ch™√l5
</«me> <des¸ùti⁄>DMA1 
Ch™√l5
 globÆ i¡îru±</des¸ùti⁄> <vÆue>15</vÆue> </öãºu±> <öãºu±> <«me>
DMA1_Ch™√l6
</«me> <des¸ùti⁄>DMA1 
Ch™√l6
 globÆ i¡îru±</des¸ùti⁄> <vÆue>16</vÆue> </öãºu±> <öãºu±> <«me>
DMA1_Ch™√l7
</«me> <des¸ùti⁄>DMA1 
Ch™√l7
 globÆ i¡îru±</des¸ùti⁄> <vÆue>17</vÆue> </öãºu±> <ªgi°îs> <> <«me>
ISR
</«me> <di•œyName>ISR</di•œyName> <des¸ùti⁄>DMA i¡îru± sètu†(
DMA_ISR
)</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
GIF1
</«me> <des¸ùti⁄>
Ch™√l
 1 
GlobÆ
 i¡îru± fœg</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TCIF1
</«me> <des¸ùti⁄>Ch™√»1 
Tøns„r
 
Com∂ëe
 fœg</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
HTIF1
</«me> <des¸ùti⁄>Ch™√»1 
HÆf
 Tøns„∏Com∂ëêÊag</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TEIF1
</«me> <des¸ùti⁄>Ch™√»1 Tøns„∏
Eº‹
 fœg</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
GIF2
</«me> <des¸ùti⁄>Ch™√»2 GlobÆ i¡îru± fœg</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TCIF2
</«me> <des¸ùti⁄>Ch™√»2 Tøns„∏Com∂ëêÊag</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
HTIF2
</«me> <des¸ùti⁄>Ch™√»2 HÆ‡Tøns„∏Com∂ëêÊag</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TEIF2
</«me> <des¸ùti⁄>Ch™√»2 Tøns„∏Eº‹ fœg</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
GIF3
</«me> <des¸ùti⁄>Ch™√»3 GlobÆ i¡îru± fœg</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TCIF3
</«me> <des¸ùti⁄>Ch™√»3 Tøns„∏Com∂ëêÊag</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
HTIF3
</«me> <des¸ùti⁄>Ch™√»3 HÆ‡Tøns„∏Com∂ëêÊag</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TEIF3
</«me> <des¸ùti⁄>Ch™√»3 Tøns„∏Eº‹ fœg</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
GIF4
</«me> <des¸ùti⁄>Ch™√»4 GlobÆ i¡îru± fœg</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TCIF4
</«me> <des¸ùti⁄>Ch™√»4 Tøns„∏Com∂ëêÊag</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
HTIF4
</«me> <des¸ùti⁄>Ch™√»4 HÆ‡Tøns„∏Com∂ëêÊag</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TEIF4
</«me> <des¸ùti⁄>Ch™√»4 Tøns„∏Eº‹ fœg</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
GIF5
</«me> <des¸ùti⁄>Ch™√»5 GlobÆ i¡îru± fœg</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TCIF5
</«me> <des¸ùti⁄>Ch™√»5 Tøns„∏Com∂ëêÊag</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
HTIF5
</«me> <des¸ùti⁄>Ch™√»5 HÆ‡Tøns„∏Com∂ëêÊag</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TEIF5
</«me> <des¸ùti⁄>Ch™√»5 Tøns„∏Eº‹ fœg</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
GIF6
</«me> <des¸ùti⁄>Ch™√»6 GlobÆ i¡îru± fœg</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TCIF6
</«me> <des¸ùti⁄>Ch™√»6 Tøns„∏Com∂ëêÊag</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
HTIF6
</«me> <des¸ùti⁄>Ch™√»6 HÆ‡Tøns„∏Com∂ëêÊag</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TEIF6
</«me> <des¸ùti⁄>Ch™√»6 Tøns„∏Eº‹ fœg</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
GIF7
</«me> <des¸ùti⁄>Ch™√»7 GlobÆ i¡îru± fœg</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TCIF7
</«me> <des¸ùti⁄>Ch™√»7 Tøns„∏Com∂ëêÊag</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
HTIF7
</«me> <des¸ùti⁄>Ch™√»7 HÆ‡Tøns„∏Com∂ëêÊag</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TEIF7
</«me> <des¸ùti⁄>Ch™√»7 Tøns„∏Eº‹ fœg</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
IFCR
</«me> <di•œyName>IFCR</di•œyName> <des¸ùti⁄>DMA i¡îru± fœg cÀ¨ (
DMA_IFCR
)</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>wrôe-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
CGIF1
</«me> <des¸ùti⁄>Ch™√»1 GlobÆ i¡îru± cÀ¨</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CGIF2
</«me> <des¸ùti⁄>Ch™√»2 GlobÆ i¡îru± cÀ¨</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CGIF3
</«me> <des¸ùti⁄>Ch™√»3 GlobÆ i¡îru± cÀ¨</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CGIF4
</«me> <des¸ùti⁄>Ch™√»4 GlobÆ i¡îru± cÀ¨</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CGIF5
</«me> <des¸ùti⁄>Ch™√»5 GlobÆ i¡îru± cÀ¨</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CGIF6
</«me> <des¸ùti⁄>Ch™√»6 GlobÆ i¡îru± cÀ¨</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CGIF7
</«me> <des¸ùti⁄>Ch™√»7 GlobÆ i¡îru± cÀ¨</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CTCIF1
</«me> <des¸ùti⁄>Ch™√»1 Tøns„∏Com∂ëê˛ór</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CTCIF2
</«me> <des¸ùti⁄>Ch™√»2 Tøns„∏Com∂ëê˛ór</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CTCIF3
</«me> <des¸ùti⁄>Ch™√»3 Tøns„∏Com∂ëê˛ór</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CTCIF4
</«me> <des¸ùti⁄>Ch™√»4 Tøns„∏Com∂ëê˛ór</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CTCIF5
</«me> <des¸ùti⁄>Ch™√»5 Tøns„∏Com∂ëê˛ór</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CTCIF6
</«me> <des¸ùti⁄>Ch™√»6 Tøns„∏Com∂ëê˛ór</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CTCIF7
</«me> <des¸ùti⁄>Ch™√»7 Tøns„∏Com∂ëê˛ór</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CHTIF1
</«me> <des¸ùti⁄>Ch™√»1 HÆ‡Tøns„∏˛ór</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CHTIF2
</«me> <des¸ùti⁄>Ch™√»2 HÆ‡Tøns„∏˛ór</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CHTIF3
</«me> <des¸ùti⁄>Ch™√»3 HÆ‡Tøns„∏˛ór</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CHTIF4
</«me> <des¸ùti⁄>Ch™√»4 HÆ‡Tøns„∏˛ór</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CHTIF5
</«me> <des¸ùti⁄>Ch™√»5 HÆ‡Tøns„∏˛ór</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CHTIF6
</«me> <des¸ùti⁄>Ch™√»6 HÆ‡Tøns„∏˛ór</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CHTIF7
</«me> <des¸ùti⁄>Ch™√»7 HÆ‡Tøns„∏˛ór</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CTEIF1
</«me> <des¸ùti⁄>Ch™√»1 Tøns„∏Eº‹ cÀ¨</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CTEIF2
</«me> <des¸ùti⁄>Ch™√»2 Tøns„∏Eº‹ cÀ¨</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CTEIF3
</«me> <des¸ùti⁄>Ch™√»3 Tøns„∏Eº‹ cÀ¨</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CTEIF4
</«me> <des¸ùti⁄>Ch™√»4 Tøns„∏Eº‹ cÀ¨</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CTEIF5
</«me> <des¸ùti⁄>Ch™√»5 Tøns„∏Eº‹ cÀ¨</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CTEIF6
</«me> <des¸ùti⁄>Ch™√»6 Tøns„∏Eº‹ cÀ¨</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CTEIF7
</«me> <des¸ùti⁄>Ch™√»7 Tøns„∏Eº‹ cÀ¨</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CCR1
</«me> <di•œyName>CCR1</di•œyName> <des¸ùti⁄>DMA 
ch™√l
 c⁄figuøti⁄ (
DMA_CCR
)</des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
EN
</«me> <des¸ùti⁄>Ch™√»íabÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TCIE
</«me> <des¸ùti⁄>Tøns„∏
com∂ëe
 i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
HTIE
</«me> <des¸ùti⁄>HÆ‡Tøns„∏öãºu±É«bÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TEIE
</«me> <des¸ùti⁄>Tøns„∏
îr‹
 i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DIR
</«me> <des¸ùti⁄>
D©a
Åøns„∏
dúe˘i⁄
</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CIRC
</«me> <des¸ùti⁄>
Cúcuœr
 mode</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PINC
</«me> <des¸ùti⁄>PîùhîÆ 
ö¸emít
 mode</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
MINC
</«me> <des¸ùti⁄>
Mem‹y
 in¸emíàmode</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PSIZE
</«me> <des¸ùti⁄>PîùhîÆ size</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
MSIZE
</«me> <des¸ùti⁄>Mem‹y size</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
PL
</«me> <des¸ùti⁄>Ch™√»
Pri‹ôy
 
Àvñ
</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
MEM2MEM
</«me> <des¸ùti⁄>Mem‹y 
to
 mem‹y mode</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CNDTR1
</«me> <di•œyName>CNDTR1</di•œyName> <des¸ùti⁄>DMA ch™√»1 
numbî
 o‡d©®</des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
NDT
</«me> <des¸ùti⁄>
Numbî
 o‡d©®tÿå™s„r</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
CPAR1
</«me> <di•œyName>CPAR1</di•œyName> <des¸ùti⁄>DMA ch™√»1ÖîùhîÆ 
addªss
 </des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
PA
</«me> <des¸ùti⁄>PîùhîÆáddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
CMAR1
</«me> <di•œyName>CMAR1</di•œyName> <des¸ùti⁄>DMA ch™√»1 mem‹yáddªs†</des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
MA
</«me> <des¸ùti⁄>Mem‹yáddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
CCR2
</«me> <di•œyName>CCR2</di•œyName> <des¸ùti⁄>DMA ch™√»c⁄figuøti⁄ (DMA_CCR)</des¸ùti⁄> <addªssOff£t>0x1C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>EN</«me> <des¸ùti⁄>Ch™√»íabÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TCIE</«me> <des¸ùti⁄>Tøns„∏com∂ëêöãºu±É«bÀ</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>HTIE</«me> <des¸ùti⁄>HÆ‡Tøns„∏öãºu±É«bÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TEIE</«me> <des¸ùti⁄>Tøns„∏îr‹ i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>DIR</«me> <des¸ùti⁄>D©®å™s„∏dúe˘i⁄</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CIRC</«me> <des¸ùti⁄>Cúcuœ∏mode</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>PINC</«me> <des¸ùti⁄>PîùhîÆ in¸emíàmode</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MINC</«me> <des¸ùti⁄>Mem‹y in¸emíàmode</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>PSIZE</«me> <des¸ùti⁄>PîùhîÆ size</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>MSIZE</«me> <des¸ùti⁄>Mem‹y size</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>PL</«me> <des¸ùti⁄>Ch™√»Pri‹ôyÜevñ</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>MEM2MEM</«me> <des¸ùti⁄>Mem‹yÅÿmem‹y mode</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CNDTR2
</«me> <di•œyName>CNDTR2</di•œyName> <des¸ùti⁄>DMA ch™√»2Çumbî o‡d©®</des¸ùti⁄> <addªssOff£t>0x20</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>NDT</«me> <des¸ùti⁄>Numbî o‡d©®tÿå™s„r</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
CPAR2
</«me> <di•œyName>CPAR2</di•œyName> <des¸ùti⁄>DMA ch™√»2ÖîùhîÆáddªs†</des¸ùti⁄> <addªssOff£t>0x24</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>PA</«me> <des¸ùti⁄>PîùhîÆáddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
CMAR2
</«me> <di•œyName>CMAR2</di•œyName> <des¸ùti⁄>DMA ch™√»2 mem‹yáddªs†</des¸ùti⁄> <addªssOff£t>0x28</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>MA</«me> <des¸ùti⁄>Mem‹yáddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
CCR3
</«me> <di•œyName>CCR3</di•œyName> <des¸ùti⁄>DMA ch™√»c⁄figuøti⁄ (DMA_CCR)</des¸ùti⁄> <addªssOff£t>0x30</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>EN</«me> <des¸ùti⁄>Ch™√»íabÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TCIE</«me> <des¸ùti⁄>Tøns„∏com∂ëêöãºu±É«bÀ</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>HTIE</«me> <des¸ùti⁄>HÆ‡Tøns„∏öãºu±É«bÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TEIE</«me> <des¸ùti⁄>Tøns„∏îr‹ i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>DIR</«me> <des¸ùti⁄>D©®å™s„∏dúe˘i⁄</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CIRC</«me> <des¸ùti⁄>Cúcuœ∏mode</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>PINC</«me> <des¸ùti⁄>PîùhîÆ in¸emíàmode</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MINC</«me> <des¸ùti⁄>Mem‹y in¸emíàmode</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>PSIZE</«me> <des¸ùti⁄>PîùhîÆ size</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>MSIZE</«me> <des¸ùti⁄>Mem‹y size</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>PL</«me> <des¸ùti⁄>Ch™√»Pri‹ôyÜevñ</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>MEM2MEM</«me> <des¸ùti⁄>Mem‹yÅÿmem‹y mode</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CNDTR3
</«me> <di•œyName>CNDTR3</di•œyName> <des¸ùti⁄>DMA ch™√»3Çumbî o‡d©®</des¸ùti⁄> <addªssOff£t>0x34</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>NDT</«me> <des¸ùti⁄>Numbî o‡d©®tÿå™s„r</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
CPAR3
</«me> <di•œyName>CPAR3</di•œyName> <des¸ùti⁄>DMA ch™√»3ÖîùhîÆáddªs†</des¸ùti⁄> <addªssOff£t>0x38</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>PA</«me> <des¸ùti⁄>PîùhîÆáddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
CMAR3
</«me> <di•œyName>CMAR3</di•œyName> <des¸ùti⁄>DMA ch™√»3 mem‹yáddªs†</des¸ùti⁄> <addªssOff£t>0x3C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>MA</«me> <des¸ùti⁄>Mem‹yáddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
CCR4
</«me> <di•œyName>CCR4</di•œyName> <des¸ùti⁄>DMA ch™√»c⁄figuøti⁄ (DMA_CCR)</des¸ùti⁄> <addªssOff£t>0x44</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>EN</«me> <des¸ùti⁄>Ch™√»íabÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TCIE</«me> <des¸ùti⁄>Tøns„∏com∂ëêöãºu±É«bÀ</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>HTIE</«me> <des¸ùti⁄>HÆ‡Tøns„∏öãºu±É«bÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TEIE</«me> <des¸ùti⁄>Tøns„∏îr‹ i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>DIR</«me> <des¸ùti⁄>D©®å™s„∏dúe˘i⁄</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CIRC</«me> <des¸ùti⁄>Cúcuœ∏mode</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>PINC</«me> <des¸ùti⁄>PîùhîÆ in¸emíàmode</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MINC</«me> <des¸ùti⁄>Mem‹y in¸emíàmode</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>PSIZE</«me> <des¸ùti⁄>PîùhîÆ size</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>MSIZE</«me> <des¸ùti⁄>Mem‹y size</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>PL</«me> <des¸ùti⁄>Ch™√»Pri‹ôyÜevñ</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>MEM2MEM</«me> <des¸ùti⁄>Mem‹yÅÿmem‹y mode</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CNDTR4
</«me> <di•œyName>CNDTR4</di•œyName> <des¸ùti⁄>DMA ch™√»4Çumbî o‡d©®</des¸ùti⁄> <addªssOff£t>0x48</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>NDT</«me> <des¸ùti⁄>Numbî o‡d©®tÿå™s„r</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
CPAR4
</«me> <di•œyName>CPAR4</di•œyName> <des¸ùti⁄>DMA ch™√»4ÖîùhîÆáddªs†</des¸ùti⁄> <addªssOff£t>0x4C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>PA</«me> <des¸ùti⁄>PîùhîÆáddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
CMAR4
</«me> <di•œyName>CMAR4</di•œyName> <des¸ùti⁄>DMA ch™√»4 mem‹yáddªs†</des¸ùti⁄> <addªssOff£t>0x50</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>MA</«me> <des¸ùti⁄>Mem‹yáddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
CCR5
</«me> <di•œyName>CCR5</di•œyName> <des¸ùti⁄>DMA ch™√»c⁄figuøti⁄ (DMA_CCR)</des¸ùti⁄> <addªssOff£t>0x58</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>EN</«me> <des¸ùti⁄>Ch™√»íabÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TCIE</«me> <des¸ùti⁄>Tøns„∏com∂ëêöãºu±É«bÀ</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>HTIE</«me> <des¸ùti⁄>HÆ‡Tøns„∏öãºu±É«bÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TEIE</«me> <des¸ùti⁄>Tøns„∏îr‹ i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>DIR</«me> <des¸ùti⁄>D©®å™s„∏dúe˘i⁄</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CIRC</«me> <des¸ùti⁄>Cúcuœ∏mode</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>PINC</«me> <des¸ùti⁄>PîùhîÆ in¸emíàmode</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MINC</«me> <des¸ùti⁄>Mem‹y in¸emíàmode</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>PSIZE</«me> <des¸ùti⁄>PîùhîÆ size</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>MSIZE</«me> <des¸ùti⁄>Mem‹y size</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>PL</«me> <des¸ùti⁄>Ch™√»Pri‹ôyÜevñ</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>MEM2MEM</«me> <des¸ùti⁄>Mem‹yÅÿmem‹y mode</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CNDTR5
</«me> <di•œyName>CNDTR5</di•œyName> <des¸ùti⁄>DMA ch™√»5Çumbî o‡d©®</des¸ùti⁄> <addªssOff£t>0x5C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>NDT</«me> <des¸ùti⁄>Numbî o‡d©®tÿå™s„r</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
CPAR5
</«me> <di•œyName>CPAR5</di•œyName> <des¸ùti⁄>DMA ch™√»5ÖîùhîÆáddªs†</des¸ùti⁄> <addªssOff£t>0x60</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>PA</«me> <des¸ùti⁄>PîùhîÆáddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
CMAR5
</«me> <di•œyName>CMAR5</di•œyName> <des¸ùti⁄>DMA ch™√»5 mem‹yáddªs†</des¸ùti⁄> <addªssOff£t>0x64</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>MA</«me> <des¸ùti⁄>Mem‹yáddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
CCR6
</«me> <di•œyName>CCR6</di•œyName> <des¸ùti⁄>DMA ch™√»c⁄figuøti⁄ (DMA_CCR)</des¸ùti⁄> <addªssOff£t>0x6C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>EN</«me> <des¸ùti⁄>Ch™√»íabÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TCIE</«me> <des¸ùti⁄>Tøns„∏com∂ëêöãºu±É«bÀ</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>HTIE</«me> <des¸ùti⁄>HÆ‡Tøns„∏öãºu±É«bÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TEIE</«me> <des¸ùti⁄>Tøns„∏îr‹ i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>DIR</«me> <des¸ùti⁄>D©®å™s„∏dúe˘i⁄</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CIRC</«me> <des¸ùti⁄>Cúcuœ∏mode</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>PINC</«me> <des¸ùti⁄>PîùhîÆ in¸emíàmode</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MINC</«me> <des¸ùti⁄>Mem‹y in¸emíàmode</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>PSIZE</«me> <des¸ùti⁄>PîùhîÆ size</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>MSIZE</«me> <des¸ùti⁄>Mem‹y size</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>PL</«me> <des¸ùti⁄>Ch™√»Pri‹ôyÜevñ</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>MEM2MEM</«me> <des¸ùti⁄>Mem‹yÅÿmem‹y mode</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CNDTR6
</«me> <di•œyName>CNDTR6</di•œyName> <des¸ùti⁄>DMA ch™√»6Çumbî o‡d©®</des¸ùti⁄> <addªssOff£t>0x70</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>NDT</«me> <des¸ùti⁄>Numbî o‡d©®tÿå™s„r</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
CPAR6
</«me> <di•œyName>CPAR6</di•œyName> <des¸ùti⁄>DMA ch™√»6ÖîùhîÆáddªs†</des¸ùti⁄> <addªssOff£t>0x74</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>PA</«me> <des¸ùti⁄>PîùhîÆáddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
CMAR6
</«me> <di•œyName>CMAR6</di•œyName> <des¸ùti⁄>DMA ch™√»6 mem‹yáddªs†</des¸ùti⁄> <addªssOff£t>0x78</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>MA</«me> <des¸ùti⁄>Mem‹yáddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
CCR7
</«me> <di•œyName>CCR7</di•œyName> <des¸ùti⁄>DMA ch™√»c⁄figuøti⁄ (DMA_CCR)</des¸ùti⁄> <addªssOff£t>0x80</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>EN</«me> <des¸ùti⁄>Ch™√»íabÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TCIE</«me> <des¸ùti⁄>Tøns„∏com∂ëêöãºu±É«bÀ</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>HTIE</«me> <des¸ùti⁄>HÆ‡Tøns„∏öãºu±É«bÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TEIE</«me> <des¸ùti⁄>Tøns„∏îr‹ i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>DIR</«me> <des¸ùti⁄>D©®å™s„∏dúe˘i⁄</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CIRC</«me> <des¸ùti⁄>Cúcuœ∏mode</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>PINC</«me> <des¸ùti⁄>PîùhîÆ in¸emíàmode</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MINC</«me> <des¸ùti⁄>Mem‹y in¸emíàmode</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>PSIZE</«me> <des¸ùti⁄>PîùhîÆ size</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>MSIZE</«me> <des¸ùti⁄>Mem‹y size</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>PL</«me> <des¸ùti⁄>Ch™√»Pri‹ôyÜevñ</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>MEM2MEM</«me> <des¸ùti⁄>Mem‹yÅÿmem‹y mode</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CNDTR7
</«me> <di•œyName>CNDTR7</di•œyName> <des¸ùti⁄>DMA ch™√»7Çumbî o‡d©®</des¸ùti⁄> <addªssOff£t>0x84</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>NDT</«me> <des¸ùti⁄>Numbî o‡d©®tÿå™s„r</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
CPAR7
</«me> <di•œyName>CPAR7</di•œyName> <des¸ùti⁄>DMA ch™√»7ÖîùhîÆáddªs†</des¸ùti⁄> <addªssOff£t>0x88</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>PA</«me> <des¸ùti⁄>PîùhîÆáddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
CMAR7
</«me> <di•œyName>CMAR7</di•œyName> <des¸ùti⁄>DMA ch™√»7 mem‹yáddªs†</des¸ùti⁄> <addªssOff£t>0x8C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>MA</«me> <des¸ùti⁄>Mem‹yáddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ dîivedFrom="DMA1"> <«me>DMA2</«me> <ba£Addªss>0x40020400</ba£Addªss> <öãºu±> <«me>
DMA2_Ch™√l1
</«me> <des¸ùti⁄>DMA2 Ch™√l1 globÆ i¡îru±</des¸ùti⁄> <vÆue>56</vÆue> </öãºu±> <öãºu±> <«me>
DMA2_Ch™√l2
</«me> <des¸ùti⁄>DMA2 Ch™√l2 globÆ i¡îru±</des¸ùti⁄> <vÆue>57</vÆue> </öãºu±> <öãºu±> <«me>
DMA2_Ch™√l3
</«me> <des¸ùti⁄>DMA2 Ch™√l3 globÆ i¡îru±</des¸ùti⁄> <vÆue>58</vÆue> </öãºu±> <öãºu±> <«me>
DMA2_Ch™√l4_5
</«me> <des¸ùti⁄>DMA2 Ch™√l4ánd DMA2 Ch™√l5 globÆ i¡îru±</des¸ùti⁄> <vÆue>59</vÆue> </öãºu±> </≥rùhîÆ> <≥rùhîÆ> <«me>SDIO</«me> <des¸ùti⁄>
Secuª
 
digôÆ
 i≈ut/ouçuàöãrÁ˚</des¸ùti⁄> <groupName>SDIO</groupName> <ba£Addªss>0x40018000</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <öãºu±> <«me>SDIO</«me> <des¸ùti⁄>SDIO globÆ i¡îru±</des¸ùti⁄> <vÆue>49</vÆue> </öãºu±> <ªgi°îs> <> <«me>
POWER
</«me> <di•œyName>POWER</di•œyName> <des¸ùti⁄>
Bôs
 1:0 = 
PWRCTRL
: Powî 
suµly
 c⁄åﬁ bôs</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>PWRCTRL</«me> <des¸ùti⁄>PWRCTRL</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>2</bôWidth> </fõld> </fõlds> </> <> <«me>
CLKCR
</«me> <di•œyName>CLKCR</di•œyName> <des¸ùti⁄>
SDI
 clock c⁄åﬁ (
SDIO_CLKCR
)</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CLKDIV</«me> <des¸ùti⁄>Clock 
divide
 
Á˘‹
</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>
CLKEN
</«me> <des¸ùti⁄>ClockÉ«bÀ bô</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PWRSAV
</«me> <des¸ùti⁄>Powî 
ßvög
 c⁄figuøti⁄ bô</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BYPASS
</«me> <des¸ùti⁄>Clock dividî by∑s†íabÀ bô</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
WIDBUS
</«me> <des¸ùti⁄>
Wide
 
bus
 modêíabÀ bô</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
NEGEDGE
</«me> <des¸ùti⁄>
SDIO_CK
 
dïhasög
 sñe˘i⁄ bô</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
HWFC_EN
</«me> <des¸ùti⁄>
HW
 
Flow
 C⁄åﬁÉ«bÀ</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
ARG
</«me> <di•œyName>ARG</di•œyName> <des¸ùti⁄>Bô†31:0 = : 
Comm™d
 
¨gumít
</des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
CMDARG
</«me> <des¸ùti⁄>Comm™dárgumít</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
CMD
</«me> <di•œyName>CMD</di•œyName> <des¸ùti⁄>SDIO 
comm™d
 (
SDIO_CMD
)</des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
CMDINDEX
</«me> <des¸ùti⁄>CMDINDEX</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>6</bôWidth> </fõld> <fõld> <«me>
WAITRESP
</«me> <des¸ùti⁄>WAITRESP</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
WAITINT
</«me> <des¸ùti⁄>WAITINT</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
WAITPEND
</«me> <des¸ùti⁄>WAITPEND</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CPSMEN
</«me> <des¸ùti⁄>CPSMEN</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SDIOSu•íd
</«me> <des¸ùti⁄>SDIOSu•íd</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ENCMDcom∂
</«me> <des¸ùti⁄>ENCMDcom∂</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
nIEN
</«me> <des¸ùti⁄>nIEN</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CE_ATACMD
</«me> <des¸ùti⁄>CE_ATACMD</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
RESPCMD
</«me> <di•œyName>RESPCMD</di•œyName> <des¸ùti⁄>SDIO comm™d </des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>RESPCMD</«me> <des¸ùti⁄>RESPCMD</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>6</bôWidth> </fõld> </fõlds> </> <> <«me>
RESPI1
</«me> <di•œyName>RESPI1</di•œyName> <des¸ùti⁄>Bô†31:0 = 
CARDSTATUS1
</des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CARDSTATUS1</«me> <des¸ùti⁄>CARDSTATUS1</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
RESP2
</«me> <di•œyName>RESP2</di•œyName> <des¸ùti⁄>Bô†31:0 = 
CARDSTATUS2
</des¸ùti⁄> <addªssOff£t>0x18</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CARDSTATUS2</«me> <des¸ùti⁄>CARDSTATUS2</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
RESP3
</«me> <di•œyName>RESP3</di•œyName> <des¸ùti⁄>Bô†31:0 = 
CARDSTATUS3
</des¸ùti⁄> <addªssOff£t>0x1C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CARDSTATUS3</«me> <des¸ùti⁄>CARDSTATUS3</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
RESP4
</«me> <di•œyName>RESP4</di•œyName> <des¸ùti⁄>Bô†31:0 = 
CARDSTATUS4
</des¸ùti⁄> <addªssOff£t>0x20</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CARDSTATUS4</«me> <des¸ùti⁄>CARDSTATUS4</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
DTIMER
</«me> <di•œyName>DTIMER</di•œyName> <des¸ùti⁄>Bô†31:0 = 
DATATIME
: D©®
timeout
 
≥riod
</des¸ùti⁄> <addªssOff£t>0x24</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>DATATIME</«me> <des¸ùti⁄>D©®timeouà≥riod</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
DLEN
</«me> <di•œyName>DLEN</di•œyName> <des¸ùti⁄>Bô†24:0 = 
DATALENGTH
: D©®
Àngth
 vÆue</des¸ùti⁄> <addªssOff£t>0x28</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>DATALENGTH</«me> <des¸ùti⁄>D©®Àngth vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>25</bôWidth> </fõld> </fõlds> </> <> <«me>
DCTRL
</«me> <di•œyName>DCTRL</di•œyName> <des¸ùti⁄>SDIO d©®c⁄åﬁ (
SDIO_DCTRL
)</des¸ùti⁄> <addªssOff£t>0x2C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
DTEN
</«me> <des¸ùti⁄>DTEN</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DTDIR
</«me> <des¸ùti⁄>DTDIR</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DTMODE
</«me> <des¸ùti⁄>DTMODE</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DMAEN
</«me> <des¸ùti⁄>DMAEN</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DBLOCKSIZE
</«me> <des¸ùti⁄>DBLOCKSIZE</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
PWSTART
</«me> <des¸ùti⁄>PWSTART</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PWSTOP
</«me> <des¸ùti⁄>PWSTOP</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RWMOD
</«me> <des¸ùti⁄>RWMOD</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>SDIOEN</«me> <des¸ùti⁄>SDIOEN</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
DCOUNT
</«me> <di•œyName>DCOUNT</di•œyName> <des¸ùti⁄>Bô†24:0 = 
DATACOUNT
: D©®
cou¡
 vÆue</des¸ùti⁄> <addªssOff£t>0x30</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>DATACOUNT</«me> <des¸ùti⁄>D©®cou¡ vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>25</bôWidth> </fõld> </fõlds> </> <> <«me>
STA
</«me> <di•œyName>STA</di•œyName> <des¸ùti⁄>SDIO sètu†(
SDIO_STA
)</des¸ùti⁄> <addªssOff£t>0x34</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
CCRCFAIL
</«me> <des¸ùti⁄>CCRCFAIL</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DCRCFAIL
</«me> <des¸ùti⁄>DCRCFAIL</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CTIMEOUT
</«me> <des¸ùti⁄>CTIMEOUT</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DTIMEOUT
</«me> <des¸ùti⁄>DTIMEOUT</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TXUNDERR
</«me> <des¸ùti⁄>TXUNDERR</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RXOVERR
</«me> <des¸ùti⁄>RXOVERR</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CMDREND
</«me> <des¸ùti⁄>CMDREND</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CMDSENT
</«me> <des¸ùti⁄>CMDSENT</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DATAEND
</«me> <des¸ùti⁄>DATAEND</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
STBITERR
</«me> <des¸ùti⁄>STBITERR</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DBCKEND
</«me> <des¸ùti⁄>DBCKEND</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CMDACT
</«me> <des¸ùti⁄>CMDACT</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TXACT
</«me> <des¸ùti⁄>TXACT</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RXACT
</«me> <des¸ùti⁄>RXACT</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TXFIFOHE
</«me> <des¸ùti⁄>TXFIFOHE</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RXFIFOHF
</«me> <des¸ùti⁄>RXFIFOHF</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TXFIFOF
</«me> <des¸ùti⁄>TXFIFOF</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RXFIFOF
</«me> <des¸ùti⁄>RXFIFOF</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TXFIFOE
</«me> <des¸ùti⁄>TXFIFOE</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RXFIFOE
</«me> <des¸ùti⁄>RXFIFOE</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TXDAVL
</«me> <des¸ùti⁄>TXDAVL</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RXDAVL
</«me> <des¸ùti⁄>RXDAVL</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SDIOIT
</«me> <des¸ùti⁄>SDIOIT</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CEATAEND
</«me> <des¸ùti⁄>CEATAEND</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
ICR
</«me> <di•œyName>ICR</di•œyName> <des¸ùti⁄>SDIO i¡îru± cÀ¨ (
SDIO_ICR
)</des¸ùti⁄> <addªssOff£t>0x38</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
CCRCFAILC
</«me> <des¸ùti⁄>CCRCFAILC</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DCRCFAILC
</«me> <des¸ùti⁄>DCRCFAILC</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CTIMEOUTC
</«me> <des¸ùti⁄>CTIMEOUTC</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DTIMEOUTC
</«me> <des¸ùti⁄>DTIMEOUTC</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TXUNDERRC
</«me> <des¸ùti⁄>TXUNDERRC</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RXOVERRC
</«me> <des¸ùti⁄>RXOVERRC</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CMDRENDC
</«me> <des¸ùti⁄>CMDRENDC</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CMDSENTC
</«me> <des¸ùti⁄>CMDSENTC</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DATAENDC
</«me> <des¸ùti⁄>DATAENDC</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
STBITERRC
</«me> <des¸ùti⁄>STBITERRC</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DBCKENDC
</«me> <des¸ùti⁄>DBCKENDC</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SDIOITC
</«me> <des¸ùti⁄>SDIOITC</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CEATAENDC
</«me> <des¸ùti⁄>CEATAENDC</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
MASK
</«me> <di•œyName>MASK</di•œyName> <des¸ùti⁄>SDIO mask (
SDIO_MASK
)</des¸ùti⁄> <addªssOff£t>0x3C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
CCRCFAILIE
</«me> <des¸ùti⁄>CCRCFAILIE</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DCRCFAILIE
</«me> <des¸ùti⁄>DCRCFAILIE</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CTIMEOUTIE
</«me> <des¸ùti⁄>CTIMEOUTIE</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DTIMEOUTIE
</«me> <des¸ùti⁄>DTIMEOUTIE</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TXUNDERRIE
</«me> <des¸ùti⁄>TXUNDERRIE</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RXOVERRIE
</«me> <des¸ùti⁄>RXOVERRIE</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CMDRENDIE
</«me> <des¸ùti⁄>CMDRENDIE</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CMDSENTIE
</«me> <des¸ùti⁄>CMDSENTIE</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DATAENDIE
</«me> <des¸ùti⁄>DATAENDIE</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
STBITERRIE
</«me> <des¸ùti⁄>STBITERRIE</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DBACKENDIE
</«me> <des¸ùti⁄>DBACKENDIE</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CMDACTIE
</«me> <des¸ùti⁄>CMDACTIE</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TXACTIE
</«me> <des¸ùti⁄>TXACTIE</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RXACTIE
</«me> <des¸ùti⁄>RXACTIE</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TXFIFOHEIE
</«me> <des¸ùti⁄>TXFIFOHEIE</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RXFIFOHFIE
</«me> <des¸ùti⁄>RXFIFOHFIE</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TXFIFOFIE
</«me> <des¸ùti⁄>TXFIFOFIE</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RXFIFOFIE
</«me> <des¸ùti⁄>RXFIFOFIE</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TXFIFOEIE
</«me> <des¸ùti⁄>TXFIFOEIE</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RXFIFOEIE
</«me> <des¸ùti⁄>RXFIFOEIE</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TXDAVLIE
</«me> <des¸ùti⁄>TXDAVLIE</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RXDAVLIE
</«me> <des¸ùti⁄>RXDAVLIE</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SDIOITIE
</«me> <des¸ùti⁄>SDIOITIE</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CEATENDIE
</«me> <des¸ùti⁄>CEATENDIE</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
FIFOCNT
</«me> <di•œyName>FIFOCNT</di•œyName> <des¸ùti⁄>Bô†23:0 = 
FIFOCOUNT
: 
Remaöög
Çumbî o‡
w‹ds
Åÿ
be
 
wrôãn
Åÿ
‹
Ñód 
‰om
ÅhêFIFO</des¸ùti⁄> <addªssOff£t>0x48</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
FIF0COUNT
</«me> <des¸ùti⁄>FIF0COUNT</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>24</bôWidth> </fõld> </fõlds> </> <> <«me>FIFO</«me> <di•œyName>FIFO</di•œyName> <des¸ùti⁄>bô†31:0 = 
FIFOD©a
: 
Re˚ive
ánd 
å™smô
 FIFO d©a</des¸ùti⁄> <addªssOff£t>0x80</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FIFOD©a</«me> <des¸ùti⁄>FIFOD©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ> <«me>RTC</«me> <des¸ùti⁄>
Ról
Åimê˛ock</des¸ùti⁄> <groupName>RTC</groupName> <ba£Addªss>0x40002800</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <öãºu±> <«me>RTC</«me> <des¸ùti⁄>RTC globÆ i¡îru±</des¸ùti⁄> <vÆue>3</vÆue> </öãºu±> <öãºu±> <«me>
RTCAœrm
</«me> <des¸ùti⁄>RTC 
Aœrms
Åhrough EXTIÜöêöãºu±</des¸ùti⁄> <vÆue>41</vÆue> </öãºu±> <ªgi°îs> <> <«me>CRH</«me> <di•œyName>CRH</di•œyName> <des¸ùti⁄>RTC C⁄åﬁ Regi°î High</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
SECIE
</«me> <des¸ùti⁄>
Sec⁄d
 i¡îru± E«bÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ALRIE
</«me> <des¸ùti⁄>
Aœrm
 i¡îru± E«bÀ</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
OWIE
</«me> <des¸ùti⁄>
OvîÊow
 i¡îru± E«bÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>CRL</«me> <di•œyName>CRL</di•œyName> <des¸ùti⁄>RTC C⁄åﬁ Regi°î Low</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ª£tVÆue>0x00000020</ª£tVÆue> <fõlds> <fõld> <«me>
SECF
</«me> <des¸ùti⁄>Sec⁄d Fœg</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
ALRF
</«me> <des¸ùti⁄>Aœrm Fœg</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
OWF
</«me> <des¸ùti⁄>OvîÊow Fœg</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
RSF
</«me> <des¸ùti⁄>
Regi°îs
 
Synchr⁄ized
 Fœg</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
CNF
</«me> <des¸ùti⁄>
C⁄figuøti⁄
 Fœg</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
RTOFF
</«me> <des¸ùti⁄>RTC 
›î©i⁄
 
OFF
</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> </fõlds> </> <> <«me>
PRLH
</«me> <di•œyName>PRLH</di•œyName> <des¸ùti⁄>RTC 
PªsˇÀr
 
Lﬂd
 Regi°î High</des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ac˚ss>wrôe-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>PRLH</«me> <des¸ùti⁄>RTC PªsˇÀ∏Lﬂd Regi°î High</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> </fõlds> </> <> <«me>
PRLL
</«me> <di•œyName>PRLL</di•œyName> <des¸ùti⁄>RTC PªsˇÀ∏Lﬂd Regi°î Low</des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ac˚ss>wrôe-⁄ly</ac˚ss> <ª£tVÆue>0x8000</ª£tVÆue> <fõlds> <fõld> <«me>PRLL</«me> <des¸ùti⁄>RTC PªsˇÀ∏
Dividî
 Regi°î Low</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DIVH
</«me> <di•œyName>DIVH</di•œyName> <des¸ùti⁄>RTC PªsˇÀ∏Dividî Regi°î High</des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>DIVH</«me> <des¸ùti⁄>RTCÖªsˇÀ∏dividî high</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> </fõlds> </> <> <«me>
DIVL
</«me> <di•œyName>DIVL</di•œyName> <des¸ùti⁄>RTC PªsˇÀ∏Dividî Regi°î Low</des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x8000</ª£tVÆue> <fõlds> <fõld> <«me>DIVL</«me> <des¸ùti⁄>RTCÖªsˇÀ∏dividî Low</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
CNTH
</«me> <di•œyName>CNTH</di•œyName> <des¸ùti⁄>RTC 
Cou¡î
 Regi°î High</des¸ùti⁄> <addªssOff£t>0x18</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CNTH</«me> <des¸ùti⁄>RTC 
cou¡î
 high</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
CNTL
</«me> <di•œyName>CNTL</di•œyName> <des¸ùti⁄>RTC Cou¡î Regi°î Low</des¸ùti⁄> <addªssOff£t>0x1C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CNTL</«me> <des¸ùti⁄>RTC cou¡î Low</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
ALRH
</«me> <di•œyName>ALRH</di•œyName> <des¸ùti⁄>RTC Aœrm Regi°î High</des¸ùti⁄> <addªssOff£t>0x20</addªssOff£t> <size>0x20</size> <ac˚ss>wrôe-⁄ly</ac˚ss> <ª£tVÆue>0xFFFF</ª£tVÆue> <fõlds> <fõld> <«me>ALRH</«me> <des¸ùti⁄>RTC 
Æ¨m
 high</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
ALRL
</«me> <di•œyName>ALRL</di•œyName> <des¸ùti⁄>RTC Aœrm Regi°î Low</des¸ùti⁄> <addªssOff£t>0x24</addªssOff£t> <size>0x20</size> <ac˚ss>wrôe-⁄ly</ac˚ss> <ª£tVÆue>0xFFFF</ª£tVÆue> <fõlds> <fõld> <«me>ALRL</«me> <des¸ùti⁄>RTCáœrm low</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ> <«me>
BKP
</«me> <des¸ùti⁄>Backu∞ªgi°îs</des¸ùti⁄> <groupName>BKP</groupName> <ba£Addªss>0x40006C04</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <ªgi°îs> <> <«me>
DR1
</«me> <di•œyName>DR1</di•œyName> <des¸ùti⁄>Backu∞d©®(
BKP_DR
)</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>D1</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR2
</«me> <di•œyName>DR2</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D2
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR3
</«me> <di•œyName>DR3</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D3
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR4
</«me> <di•œyName>DR4</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D4
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR5
</«me> <di•œyName>DR5</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D5
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR6
</«me> <di•œyName>DR6</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D6
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR7
</«me> <di•œyName>DR7</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x18</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D7
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR8
</«me> <di•œyName>DR8</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x1C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D8
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR9
</«me> <di•œyName>DR9</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x20</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D9
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR10
</«me> <di•œyName>DR10</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x24</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D10
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR11
</«me> <di•œyName>DR11</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x3C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>DR11</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR12
</«me> <di•œyName>DR12</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x40</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>DR12</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR13
</«me> <di•œyName>DR13</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x44</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>DR13</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR14
</«me> <di•œyName>DR14</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x48</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D14
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR15
</«me> <di•œyName>DR15</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x4C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D15
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR16
</«me> <di•œyName>DR16</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x50</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D16
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR17
</«me> <di•œyName>DR17</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x54</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D17
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR18
</«me> <di•œyName>DR18</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x58</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D18
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR19
</«me> <di•œyName>DR19</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x5C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D19
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR20
</«me> <di•œyName>DR20</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x60</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D20
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR21
</«me> <di•œyName>DR21</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x64</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D21
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR22
</«me> <di•œyName>DR22</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x68</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D22
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR23
</«me> <di•œyName>DR23</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x6C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D23
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR24
</«me> <di•œyName>DR24</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x70</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D24
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR25
</«me> <di•œyName>DR25</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x74</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D25
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR26
</«me> <di•œyName>DR26</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x78</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D26
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR27
</«me> <di•œyName>DR27</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x7C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D27
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR28
</«me> <di•œyName>DR28</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x80</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D28
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR29
</«me> <di•œyName>DR29</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x84</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D29
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR30
</«me> <di•œyName>DR30</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x88</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D30
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR31
</«me> <di•œyName>DR31</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x8C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D31
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR32
</«me> <di•œyName>DR32</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x90</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D32
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR33
</«me> <di•œyName>DR33</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x94</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D33
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR34
</«me> <di•œyName>DR34</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x98</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D34
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR35
</«me> <di•œyName>DR35</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0x9C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D35
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR36
</«me> <di•œyName>DR36</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0xA0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D36
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR37
</«me> <di•œyName>DR37</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0xA4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D37
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR38
</«me> <di•œyName>DR38</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0xA8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D38
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR39
</«me> <di•œyName>DR39</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0xAC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D39
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR40
</«me> <di•œyName>DR40</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0xB0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D40
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR41
</«me> <di•œyName>DR41</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0xB4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D41
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DR42
</«me> <di•œyName>DR42</di•œyName> <des¸ùti⁄>Backu∞d©®(BKP_DR)</des¸ùti⁄> <addªssOff£t>0xB8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
D42
</«me> <des¸ùti⁄>Backu∞d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
RTCCR
</«me> <di•œyName>RTCCR</di•œyName> <des¸ùti⁄>RTC clock 
ˇlibøti⁄
 (
BKP_RTCCR
)</des¸ùti⁄> <addªssOff£t>0x28</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
CAL
</«me> <des¸ùti⁄>CÆibøti⁄ vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>7</bôWidth> </fõld> <fõld> <«me>
CCO
</«me> <des¸ùti⁄>CÆibøti⁄ Clock Ouçut</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ASOE
</«me> <des¸ùti⁄>Aœrm o∏
£c⁄d
 ouçuàíabÀ</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ASOS
</«me> <des¸ùti⁄>Aœrm o∏£c⁄d ouçuà£À˘i⁄</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>CR</«me> <di•œyName>CR</di•œyName> <des¸ùti⁄>Backu∞c⁄åﬁ (
BKP_CR
)</des¸ùti⁄> <addªssOff£t>0x2C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
TPE
</«me> <des¸ùti⁄>Tam≥∏pöÉ«bÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TPAL
</«me> <des¸ùti⁄>Tam≥∏pö 
a˘ive
Üevñ</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>CSR</«me> <di•œyName>CSR</di•œyName> <des¸ùti⁄>
BKP_CSR
 c⁄åﬁ/°©u†(BKP_CSR)</des¸ùti⁄> <addªssOff£t>0x30</addªssOff£t> <size>0x20</size> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
CTE
</«me> <des¸ùti⁄>CÀ¨ Tam≥∏evít</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>wrôe-⁄ly</ac˚ss> </fõld> <fõld> <«me>
CTI
</«me> <des¸ùti⁄>CÀ¨ Tam≥∏I¡îru±</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>wrôe-⁄ly</ac˚ss> </fõld> <fõld> <«me>
TPIE
</«me> <des¸ùti⁄>Tam≥∏Pö i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
TEF
</«me> <des¸ùti⁄>Tam≥∏EvíàFœg</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
TIF
</«me> <des¸ùti⁄>Tam≥∏I¡îru± Fœg</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ> <«me>
IWDG
</«me> <des¸ùti⁄>Indïídíàw©chdog</des¸ùti⁄> <groupName>IWDG</groupName> <ba£Addªss>0x40003000</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <ªgi°îs> <> <«me>
KR
</«me> <di•œyName>KR</di•œyName> <des¸ùti⁄>
Key
 (
IWDG_KR
)</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ac˚ss>wrôe-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
KEY
</«me> <des¸ùti⁄>Key vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>PR</«me> <di•œyName>PR</di•œyName> <des¸ùti⁄>PªsˇÀ∏(
IWDG_PR
)</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>PR</«me> <des¸ùti⁄>PªsˇÀ∏dividî</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>3</bôWidth> </fõld> </fõlds> </> <> <«me>
RLR
</«me> <di•œyName>RLR</di•œyName> <des¸ùti⁄>
Rñﬂd
 (
IWDG_RLR
)</des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000FFF</ª£tVÆue> <fõlds> <fõld> <«me>
RL
</«me> <des¸ùti⁄>
W©chdog
 cou¡î 
ªlﬂd
 vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>12</bôWidth> </fõld> </fõlds> </> <> <«me>
SR
</«me> <di•œyName>SR</di•œyName> <des¸ùti⁄>Sètu†(
IWDG_SR
)</des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
PVU
</«me> <des¸ùti⁄>W©chdogÖªsˇÀ∏vÆuê
upd©e
</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RVU
</«me> <des¸ùti⁄>W©chdog cou¡îÑñﬂd vÆuêupd©e</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ> <«me>
WWDG
</«me> <des¸ùti⁄>Wödow w©chdog</des¸ùti⁄> <groupName>WWDG</groupName> <ba£Addªss>0x40002C00</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <öãºu±> <«me>WWDG</«me> <des¸ùti⁄>Wödow W©chdog i¡îru±</des¸ùti⁄> <vÆue>0</vÆue> </öãºu±> <ªgi°îs> <> <«me>CR</«me> <di•œyName>CR</di•œyName> <des¸ùti⁄>C⁄åﬁ (
WWDG_CR
)</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000007F</ª£tVÆue> <fõlds> <fõld> <«me>
T
</«me> <des¸ùti⁄>7-bô cou¡î (
MSB
Åÿ
LSB
)</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>7</bôWidth> </fõld> <fõld> <«me>
WDGA
</«me> <des¸ùti⁄>
A˘iv©i⁄
 bô</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CFR
</«me> <di•œyName>CFR</di•œyName> <des¸ùti⁄>C⁄figuøti⁄ (
WWDG_CFR
)</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000007F</ª£tVÆue> <fõlds> <fõld> <«me>
W
</«me> <des¸ùti⁄>7-bô 
wödow
 vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>7</bôWidth> </fõld> <fõld> <«me>
WDGTB
</«me> <des¸ùti⁄>Timî 
Ba£
</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
EWI
</«me> <des¸ùti⁄>
E¨ly
 
Wakeup
 I¡îru±</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>SR</«me> <di•œyName>SR</di•œyName> <des¸ùti⁄>Sètu†(
WWDG_SR
)</des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>EWI</«me> <des¸ùti⁄>E¨ly Wakeu∞I¡îru±</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ> <«me>TIM1</«me> <des¸ùti⁄>
Adv™˚d
Åimî</des¸ùti⁄> <groupName>
TIM
</groupName> <ba£Addªss>0x40012C00</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <öãºu±> <«me>
TIM1_BRK_TIM9
</«me> <des¸ùti⁄>TIM1 
Bªak
 i¡îru±ánd TIM9 globÆ i¡îru±</des¸ùti⁄> <vÆue>24</vÆue> </öãºu±> <öãºu±> <«me>
TIM1_UP_TIM10
</«me> <des¸ùti⁄>TIM1 
Upd©e
 i¡îru±ánd TIM10 globÆ i¡îru±</des¸ùti⁄> <vÆue>25</vÆue> </öãºu±> <öãºu±> <«me>
TIM1_TRG_COM_TIM11
</«me> <des¸ùti⁄>TIM1 Triggîánd 
Commuèti⁄
 i¡îru±†™d TIM11 globÆ i¡îru±</des¸ùti⁄> <vÆue>26</vÆue> </öãºu±> <öãºu±> <«me>
TIM1_CC
</«me> <des¸ùti⁄>TIM1 
C≠tuª
 
Com∑ª
 i¡îru±</des¸ùti⁄> <vÆue>27</vÆue> </öãºu±> <ªgi°îs> <> <«me>
CR1
</«me> <di•œyName>CR1</di•œyName> <des¸ùti⁄>c⁄åﬁ 1</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
CKD
</«me> <des¸ùti⁄>Clock 
divisi⁄
</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
ARPE
</«me> <des¸ùti⁄>
Auto
-ªlﬂd 
¥ñﬂd
É«bÀ</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CMS
</«me> <des¸ùti⁄>
Cíãr
-
Æig√d
 modê£À˘i⁄</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>DIR</«me> <des¸ùti⁄>
Dúe˘i⁄
</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
OPM
</«me> <des¸ùti⁄>
O√
-
pul£
 mode</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
URS
</«me> <des¸ùti⁄>Upd©ê
ªque°
 sour˚</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
UDIS
</«me> <des¸ùti⁄>Upd©ê
dißbÀ
</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CEN
</«me> <des¸ùti⁄>Cou¡îÉ«bÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CR2
</«me> <di•œyName>CR2</di•œyName> <des¸ùti⁄>c⁄åﬁ 2</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
OIS4
</«me> <des¸ùti⁄>Ouçuà
IdÀ
 
°©e
 4</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
OIS3N
</«me> <des¸ùti⁄>OuçuàIdÀ sèã 3</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
OIS3
</«me> <des¸ùti⁄>OuçuàIdÀ sèã 3</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
OIS2N
</«me> <des¸ùti⁄>OuçuàIdÀ sèã 2</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
OIS2
</«me> <des¸ùti⁄>OuçuàIdÀ sèã 2</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
OIS1N
</«me> <des¸ùti⁄>OuçuàIdÀ sèã 1</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
OIS1
</«me> <des¸ùti⁄>OuçuàIdÀ sèã 1</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TI1S
</«me> <des¸ùti⁄>
TI1
 sñe˘i⁄</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
MMS
</«me> <des¸ùti⁄>
Ma°î
 modê£À˘i⁄</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
CCDS
</«me> <des¸ùti⁄>C≠tuª/
com∑ª
 DMA sñe˘i⁄</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CCUS
</«me> <des¸ùti⁄>C≠tuª/com∑ª c⁄åﬁ upd©ê£À˘i⁄</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CCPC
</«me> <des¸ùti⁄>C≠tuª/com∑ª 
¥ñﬂded
 c⁄åﬁ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
SMCR
</«me> <di•œyName>SMCR</di•œyName> <des¸ùti⁄>
¶ave
 modêc⁄åﬁ </des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
ETP
</«me> <des¸ùti⁄>Exã∫ÆÅriggî 
pﬁ¨ôy
</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ECE
</«me> <des¸ùti⁄>Exã∫Æ clockÉ«bÀ</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ETPS
</«me> <des¸ùti⁄>Exã∫ÆÅriggîÖªsˇÀr</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
ETF
</«me> <des¸ùti⁄>Exã∫ÆÅriggî 
fûãr
</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
MSM
</«me> <des¸ùti⁄>Ma°î/
Sœve
 mode</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TS
</«me> <des¸ùti⁄>Triggî sñe˘i⁄</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
SMS
</«me> <des¸ùti⁄>Sœvêmodê£À˘i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>3</bôWidth> </fõld> </fõlds> </> <> <«me>
DIER
</«me> <di•œyName>DIER</di•œyName> <des¸ùti⁄>DMA/I¡îru±É«bÀ </des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
TDE
</«me> <des¸ùti⁄>Triggî DMAÑeque°É«bÀ</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
COMDE
</«me> <des¸ùti⁄>
COM
 DMAÑeque°É«bÀ</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC4DE
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 4 DMAÑeque°É«bÀ</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC3DE
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 3 DMAÑeque°É«bÀ</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC2DE
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 DMAÑeque°É«bÀ</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC1DE
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 DMAÑeque°É«bÀ</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
UDE
</«me> <des¸ùti⁄>Upd©êDMAÑeque°É«bÀ</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TIE
</«me> <des¸ùti⁄>Triggî i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC4IE
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 4 i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC3IE
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 3 i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC2IE
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC1IE
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
UIE
</«me> <des¸ùti⁄>Upd©êöãºu±É«bÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BIE
</«me> <des¸ùti⁄>Bªak i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
COMIE
</«me> <des¸ùti⁄>COM i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>SR</«me> <di•œyName>SR</di•œyName> <des¸ùti⁄>°©u†</des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
CC4OF
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 4 
ovîˇ±uª
 fœg</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC3OF
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 3 ovîˇ±uª fœg</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC2OF
</«me> <des¸ùti⁄>C≠tuª/com∑ª 2 ovîˇ±uª fœg</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC1OF
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 ovîˇ±uª fœg</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BIF
</«me> <des¸ùti⁄>Bªak i¡îru± fœg</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TIF</«me> <des¸ùti⁄>Triggî i¡îru± fœg</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
COMIF
</«me> <des¸ùti⁄>COM i¡îru± fœg</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC4IF
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 4 i¡îru± fœg</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC3IF
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 3 i¡îru± fœg</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC2IF
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 i¡îru± fœg</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC1IF
</«me> <des¸ùti⁄>C≠tuª/com∑ª 1 i¡îru± fœg</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
UIF
</«me> <des¸ùti⁄>Upd©êöãºu± fœg</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
EGR
</«me> <di•œyName>EGR</di•œyName> <des¸ùti⁄>evíà
gíî©i⁄
 </des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ac˚ss>wrôe-⁄ly</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
BG
</«me> <des¸ùti⁄>Bªak gíî©i⁄</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TG
</«me> <des¸ùti⁄>Triggî gíî©i⁄</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
COMG
</«me> <des¸ùti⁄>C≠tuª/Com∑ª c⁄åﬁ upd©êgíî©i⁄</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC4G
</«me> <des¸ùti⁄>C≠tuª/com∑ª 4 gíî©i⁄</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC3G
</«me> <des¸ùti⁄>C≠tuª/com∑ª 3 gíî©i⁄</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC2G
</«me> <des¸ùti⁄>C≠tuª/com∑ª 2 gíî©i⁄</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC1G
</«me> <des¸ùti⁄>C≠tuª/com∑ª 1 gíî©i⁄</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
UG
</«me> <des¸ùti⁄>Upd©êgíî©i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CCMR1_Ouçut
</«me> <di•œyName>CCMR1_Ouçut</di•œyName> <des¸ùti⁄>
ˇ±uª
/com∑ª modê(ouçuàmode)</des¸ùti⁄> <addªssOff£t>0x18</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
OC2CE
</«me> <des¸ùti⁄>OuçuàCom∑ª 2 cÀ¨É«bÀ</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
OC2M
</«me> <des¸ùti⁄>OuçuàCom∑ª 2 mode</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
OC2PE
</«me> <des¸ùti⁄>OuçuàCom∑ª 2ÖªlﬂdÉ«bÀ</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
OC2FE
</«me> <des¸ùti⁄>OuçuàCom∑ª 2 
Á°
É«bÀ</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC2S
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 sñe˘i⁄</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
OC1CE
</«me> <des¸ùti⁄>OuçuàCom∑ª 1 cÀ¨É«bÀ</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
OC1M
</«me> <des¸ùti⁄>OuçuàCom∑ª 1 mode</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
OC1PE
</«me> <des¸ùti⁄>OuçuàCom∑ª 1ÖªlﬂdÉ«bÀ</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
OC1FE
</«me> <des¸ùti⁄>OuçuàCom∑ª 1 fa°É«bÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC1S
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 sñe˘i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>2</bôWidth> </fõld> </fõlds> </> <> <«me>
CCMR1_I≈ut
</«me> <di•œyName>CCMR1_I≈ut</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ª modê1 (öpuàmode)</des¸ùti⁄> <
Æã∫©eRegi°î
>CCMR1_Ouçut</Æã∫©eRegi°î> <addªssOff£t>0x18</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
IC2F
</«me> <des¸ùti⁄>
I≈ut
 c≠tuª 2 fûãr</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
IC2PCS
</«me> <des¸ùti⁄>I≈uàˇ±uª 2ÖªsˇÀr</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>CC2S</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 sñe˘i⁄</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
IC1F
</«me> <des¸ùti⁄>I≈uàˇ±uª 1 fûãr</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
ICPCS
</«me> <des¸ùti⁄>I≈uàˇ±uª 1ÖªsˇÀr</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>CC1S</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 sñe˘i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>2</bôWidth> </fõld> </fõlds> </> <> <«me>
CCMR2_Ouçut
</«me> <di•œyName>CCMR2_Ouçut</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ª modê(ouçuàmode)</des¸ùti⁄> <addªssOff£t>0x1C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
OC4CE
</«me> <des¸ùti⁄>Ouçuàcom∑ª 4 cÀ¨É«bÀ</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
OC4M
</«me> <des¸ùti⁄>Ouçuàcom∑ª 4 mode</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
OC4PE
</«me> <des¸ùti⁄>Ouçuàcom∑ª 4ÖªlﬂdÉ«bÀ</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
OC4FE
</«me> <des¸ùti⁄>Ouçuàcom∑ª 4 fa°É«bÀ</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC4S
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 4 sñe˘i⁄</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
OC3CE
</«me> <des¸ùti⁄>Ouçuàcom∑ª 3 cÀ¨É«bÀ</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
OC3M
</«me> <des¸ùti⁄>Ouçuàcom∑ª 3 mode</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
OC3PE
</«me> <des¸ùti⁄>Ouçuàcom∑ª 3ÖªlﬂdÉ«bÀ</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
OC3FE
</«me> <des¸ùti⁄>Ouçuàcom∑ª 3 fa°É«bÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC3S
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 3 sñe˘i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>2</bôWidth> </fõld> </fõlds> </> <> <«me>
CCMR2_I≈ut
</«me> <di•œyName>CCMR2_I≈ut</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ª modê2 (öpuàmode)</des¸ùti⁄> <Æã∫©eRegi°î>CCMR2_Ouçut</Æã∫©eRegi°î> <addªssOff£t>0x1C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
IC4F
</«me> <des¸ùti⁄>I≈uàˇ±uª 4 fûãr</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
IC4PSC
</«me> <des¸ùti⁄>I≈uàˇ±uª 4ÖªsˇÀr</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>CC4S</«me> <des¸ùti⁄>C≠tuª/Com∑ª 4 sñe˘i⁄</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
IC3F
</«me> <des¸ùti⁄>I≈uàˇ±uª 3 fûãr</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
IC3PSC
</«me> <des¸ùti⁄>I≈uàˇ±uª 3ÖªsˇÀr</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>CC3S</«me> <des¸ùti⁄>C≠tuª/com∑ª 3 sñe˘i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>2</bôWidth> </fõld> </fõlds> </> <> <«me>
CCER
</«me> <di•œyName>CCER</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ªÉ«bÀ </des¸ùti⁄> <addªssOff£t>0x20</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
CC4P
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 3 ouçuà
Pﬁ¨ôy
</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC4E
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 4 ouçuàíabÀ</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC3NP
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 3 ouçuàPﬁ¨ôy</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC3NE
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 3 
com∂emíèry
 ouçuàíabÀ</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC3P
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 3 ouçuàPﬁ¨ôy</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC3E
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 3 ouçuàíabÀ</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC2NP
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 ouçuàPﬁ¨ôy</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC2NE
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 com∂emíèry ouçuàíabÀ</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC2P
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 ouçuàPﬁ¨ôy</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC2E
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 ouçuàíabÀ</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC1NP
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 ouçuàPﬁ¨ôy</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC1NE
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 com∂emíèry ouçuàíabÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC1P
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 ouçuàPﬁ¨ôy</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CC1E
</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 ouçuàíabÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CNT
</«me> <di•œyName>CNT</di•œyName> <des¸ùti⁄>cou¡î</des¸ùti⁄> <addªssOff£t>0x24</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CNT</«me> <des¸ùti⁄>cou¡î vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
PSC
</«me> <di•œyName>PSC</di•œyName> <des¸ùti⁄>¥esˇÀr</des¸ùti⁄> <addªssOff£t>0x28</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>PSC</«me> <des¸ùti⁄>PªsˇÀ∏vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
ARR
</«me> <di•œyName>ARR</di•œyName> <des¸ùti⁄>auto-ªlﬂd </des¸ùti⁄> <addªssOff£t>0x2C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>ARR</«me> <des¸ùti⁄>Auto-ªlﬂd vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>CCR1</«me> <di•œyName>CCR1</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ª 1</des¸ùti⁄> <addªssOff£t>0x34</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CCR1</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>CCR2</«me> <di•œyName>CCR2</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ª 2</des¸ùti⁄> <addªssOff£t>0x38</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CCR2</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>CCR3</«me> <di•œyName>CCR3</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ª 3</des¸ùti⁄> <addªssOff£t>0x3C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CCR3</«me> <des¸ùti⁄>C≠tuª/Com∑ª vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>CCR4</«me> <di•œyName>CCR4</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ª 4</des¸ùti⁄> <addªssOff£t>0x40</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CCR4</«me> <des¸ùti⁄>C≠tuª/Com∑ª vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
DCR
</«me> <di•œyName>DCR</di•œyName> <des¸ùti⁄>DMA c⁄åﬁ </des¸ùti⁄> <addªssOff£t>0x48</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
DBL
</«me> <des¸ùti⁄>DMA 
bur°
Üígth</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>
DBA
</«me> <des¸ùti⁄>DMA 
ba£
áddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>5</bôWidth> </fõld> </fõlds> </> <> <«me>
DMAR
</«me> <di•œyName>DMAR</di•œyName> <des¸ùti⁄>DMAáddªs†
fuŒ
Åøns„r</des¸ùti⁄> <addªssOff£t>0x4C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
DMAB
</«me> <des¸ùti⁄>DMA bur° 
ac˚s£s
</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
RCR
</«me> <di•œyName>RCR</di•œyName> <des¸ùti⁄>
ª≥tôi⁄
 cou¡î </des¸ùti⁄> <addªssOff£t>0x30</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
REP
</«me> <des¸ùti⁄>
Rïëôi⁄
 cou¡î vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
BDTR
</«me> <di•œyName>BDTR</di•œyName> <des¸ùti⁄>ánd 
dód
-timê</des¸ùti⁄> <addªssOff£t>0x44</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
MOE
</«me> <des¸ùti⁄>
Maö
 ouçuàíabÀ</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
AOE
</«me> <des¸ùti⁄>
Autom©ic
 ouçuàíabÀ</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>BKP</«me> <des¸ùti⁄>BªakÖﬁ¨ôy</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BKE
</«me> <des¸ùti⁄>BªakÉ«bÀ</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
OSSR
</«me> <des¸ùti⁄>
Off
-°©ê£À˘i⁄ 
Run
 mode</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
OSSI
</«me> <des¸ùti⁄>Off-°©ê£À˘i⁄ IdÀ mode</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
LOCK
</«me> <des¸ùti⁄>Lock c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
DTG
</«me> <des¸ùti⁄>
Dód
-timê
gíî©‹
 sëup</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ dîivedFrom="TIM1"> <«me>TIM8</«me> <ba£Addªss>0x40013400</ba£Addªss> <öãºu±> <«me>
TIM8_BRK_TIM12
</«me> <des¸ùti⁄>TIM8 Bªak i¡îru±ánd 
TIM12
 globÆ i¡îru±</des¸ùti⁄> <vÆue>43</vÆue> </öãºu±> <öãºu±> <«me>
TIM8_UP_TIM13
</«me> <des¸ùti⁄>TIM8 Upd©êöãºu±ánd TIM13 globÆ i¡îru±</des¸ùti⁄> <vÆue>44</vÆue> </öãºu±> <öãºu±> <«me>
TIM8_TRG_COM_TIM14
</«me> <des¸ùti⁄>TIM8 Triggîánd Commuèti⁄ i¡îru±†™d TIM14 globÆ i¡îru±</des¸ùti⁄> <vÆue>45</vÆue> </öãºu±> <öãºu±> <«me>
TIM8_CC
</«me> <des¸ùti⁄>TIM8 C≠tuª Com∑ª i¡îru±</des¸ùti⁄> <vÆue>46</vÆue> </öãºu±> </≥rùhîÆ> <≥rùhîÆ> <«me>TIM2</«me> <des¸ùti⁄>GíîÆÖuΩo£Åimî</des¸ùti⁄> <groupName>TIM</groupName> <ba£Addªss>0x40000000</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <öãºu±> <«me>TIM2</«me> <des¸ùti⁄>TIM2 globÆ i¡îru±</des¸ùti⁄> <vÆue>28</vÆue> </öãºu±> <ªgi°îs> <> <«me>CR1</«me> <di•œyName>CR1</di•œyName> <des¸ùti⁄>c⁄åﬁ 1</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>CKD</«me> <des¸ùti⁄>Clock divisi⁄</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>ARPE</«me> <des¸ùti⁄>Auto-ªlﬂdÖªlﬂdÉ«bÀ</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CMS</«me> <des¸ùti⁄>Cíãr-Æig√d modê£À˘i⁄</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>DIR</«me> <des¸ùti⁄>Dúe˘i⁄</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>OPM</«me> <des¸ùti⁄>O√-pul£ mode</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>URS</«me> <des¸ùti⁄>Upd©êªque° sour˚</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>UDIS</«me> <des¸ùti⁄>Upd©êdißbÀ</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CEN</«me> <des¸ùti⁄>Cou¡îÉ«bÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>CR2</«me> <di•œyName>CR2</di•œyName> <des¸ùti⁄>c⁄åﬁ 2</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>TI1S</«me> <des¸ùti⁄>TI1 sñe˘i⁄</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>MMS</«me> <des¸ùti⁄>Ma°î modê£À˘i⁄</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>CCDS</«me> <des¸ùti⁄>C≠tuª/com∑ª DMA sñe˘i⁄</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>SMCR</«me> <di•œyName>SMCR</di•œyName> <des¸ùti⁄>¶avêmodêc⁄åﬁ </des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>ETP</«me> <des¸ùti⁄>Exã∫ÆÅriggîÖﬁ¨ôy</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>ECE</«me> <des¸ùti⁄>Exã∫Æ clockÉ«bÀ</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>ETPS</«me> <des¸ùti⁄>Exã∫ÆÅriggîÖªsˇÀr</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>ETF</«me> <des¸ùti⁄>Exã∫ÆÅriggî fûãr</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>MSM</«me> <des¸ùti⁄>Ma°î/Sœvêmode</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TS</«me> <des¸ùti⁄>Triggî sñe˘i⁄</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>SMS</«me> <des¸ùti⁄>Sœvêmodê£À˘i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>3</bôWidth> </fõld> </fõlds> </> <> <«me>DIER</«me> <di•œyName>DIER</di•œyName> <des¸ùti⁄>DMA/I¡îru±É«bÀ </des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>TDE</«me> <des¸ùti⁄>Triggî DMAÑeque°É«bÀ</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC4DE</«me> <des¸ùti⁄>C≠tuª/Com∑ª 4 DMAÑeque°É«bÀ</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC3DE</«me> <des¸ùti⁄>C≠tuª/Com∑ª 3 DMAÑeque°É«bÀ</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC2DE</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 DMAÑeque°É«bÀ</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC1DE</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 DMAÑeque°É«bÀ</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>UDE</«me> <des¸ùti⁄>Upd©êDMAÑeque°É«bÀ</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TIE</«me> <des¸ùti⁄>Triggî i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC4IE</«me> <des¸ùti⁄>C≠tuª/Com∑ª 4 i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC3IE</«me> <des¸ùti⁄>C≠tuª/Com∑ª 3 i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC2IE</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC1IE</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>UIE</«me> <des¸ùti⁄>Upd©êöãºu±É«bÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>SR</«me> <di•œyName>SR</di•œyName> <des¸ùti⁄>°©u†</des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>CC4OF</«me> <des¸ùti⁄>C≠tuª/Com∑ª 4 ovîˇ±uª fœg</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC3OF</«me> <des¸ùti⁄>C≠tuª/Com∑ª 3 ovîˇ±uª fœg</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC2OF</«me> <des¸ùti⁄>C≠tuª/com∑ª 2 ovîˇ±uª fœg</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC1OF</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 ovîˇ±uª fœg</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TIF</«me> <des¸ùti⁄>Triggî i¡îru± fœg</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC4IF</«me> <des¸ùti⁄>C≠tuª/Com∑ª 4 i¡îru± fœg</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC3IF</«me> <des¸ùti⁄>C≠tuª/Com∑ª 3 i¡îru± fœg</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC2IF</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 i¡îru± fœg</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC1IF</«me> <des¸ùti⁄>C≠tuª/com∑ª 1 i¡îru± fœg</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>UIF</«me> <des¸ùti⁄>Upd©êöãºu± fœg</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>EGR</«me> <di•œyName>EGR</di•œyName> <des¸ùti⁄>evíàgíî©i⁄ </des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ac˚ss>wrôe-⁄ly</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>TG</«me> <des¸ùti⁄>Triggî gíî©i⁄</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC4G</«me> <des¸ùti⁄>C≠tuª/com∑ª 4 gíî©i⁄</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC3G</«me> <des¸ùti⁄>C≠tuª/com∑ª 3 gíî©i⁄</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC2G</«me> <des¸ùti⁄>C≠tuª/com∑ª 2 gíî©i⁄</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC1G</«me> <des¸ùti⁄>C≠tuª/com∑ª 1 gíî©i⁄</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>UG</«me> <des¸ùti⁄>Upd©êgíî©i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>CCMR1_Ouçut</«me> <di•œyName>CCMR1_Ouçut</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ª modê1 (ouçuàmode)</des¸ùti⁄> <addªssOff£t>0x18</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>OC2CE</«me> <des¸ùti⁄>Ouçuàcom∑ª 2 cÀ¨É«bÀ</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>OC2M</«me> <des¸ùti⁄>Ouçuàcom∑ª 2 mode</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>OC2PE</«me> <des¸ùti⁄>Ouçuàcom∑ª 2ÖªlﬂdÉ«bÀ</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>OC2FE</«me> <des¸ùti⁄>Ouçuàcom∑ª 2 fa°É«bÀ</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC2S</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 sñe˘i⁄</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>OC1CE</«me> <des¸ùti⁄>Ouçuàcom∑ª 1 cÀ¨É«bÀ</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>OC1M</«me> <des¸ùti⁄>Ouçuàcom∑ª 1 mode</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>OC1PE</«me> <des¸ùti⁄>Ouçuàcom∑ª 1ÖªlﬂdÉ«bÀ</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>OC1FE</«me> <des¸ùti⁄>Ouçuàcom∑ª 1 fa°É«bÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC1S</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 sñe˘i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>2</bôWidth> </fõld> </fõlds> </> <> <«me>CCMR1_I≈ut</«me> <di•œyName>CCMR1_I≈ut</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ª modê1 (öpuàmode)</des¸ùti⁄> <Æã∫©eRegi°î>CCMR1_Ouçut</Æã∫©eRegi°î> <addªssOff£t>0x18</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>IC2F</«me> <des¸ùti⁄>I≈uàˇ±uª 2 fûãr</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
IC2PSC
</«me> <des¸ùti⁄>I≈uàˇ±uª 2ÖªsˇÀr</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>CC2S</«me> <des¸ùti⁄>C≠tuª/com∑ª 2 sñe˘i⁄</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>IC1F</«me> <des¸ùti⁄>I≈uàˇ±uª 1 fûãr</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
IC1PSC
</«me> <des¸ùti⁄>I≈uàˇ±uª 1ÖªsˇÀr</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>CC1S</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 sñe˘i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>2</bôWidth> </fõld> </fõlds> </> <> <«me>CCMR2_Ouçut</«me> <di•œyName>CCMR2_Ouçut</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ª modê2 (ouçuàmode)</des¸ùti⁄> <addªssOff£t>0x1C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
O24CE
</«me> <des¸ùti⁄>Ouçuàcom∑ª 4 cÀ¨É«bÀ</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>OC4M</«me> <des¸ùti⁄>Ouçuàcom∑ª 4 mode</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>OC4PE</«me> <des¸ùti⁄>Ouçuàcom∑ª 4ÖªlﬂdÉ«bÀ</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>OC4FE</«me> <des¸ùti⁄>Ouçuàcom∑ª 4 fa°É«bÀ</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC4S</«me> <des¸ùti⁄>C≠tuª/Com∑ª 4 sñe˘i⁄</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>OC3CE</«me> <des¸ùti⁄>Ouçuàcom∑ª 3 cÀ¨É«bÀ</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>OC3M</«me> <des¸ùti⁄>Ouçuàcom∑ª 3 mode</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>OC3PE</«me> <des¸ùti⁄>Ouçuàcom∑ª 3ÖªlﬂdÉ«bÀ</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>OC3FE</«me> <des¸ùti⁄>Ouçuàcom∑ª 3 fa°É«bÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC3S</«me> <des¸ùti⁄>C≠tuª/Com∑ª 3 sñe˘i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>2</bôWidth> </fõld> </fõlds> </> <> <«me>CCMR2_I≈ut</«me> <di•œyName>CCMR2_I≈ut</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ª modê2 (öpuàmode)</des¸ùti⁄> <Æã∫©eRegi°î>CCMR2_Ouçut</Æã∫©eRegi°î> <addªssOff£t>0x1C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>IC4F</«me> <des¸ùti⁄>I≈uàˇ±uª 4 fûãr</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>IC4PSC</«me> <des¸ùti⁄>I≈uàˇ±uª 4ÖªsˇÀr</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>CC4S</«me> <des¸ùti⁄>C≠tuª/Com∑ª 4 sñe˘i⁄</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>IC3F</«me> <des¸ùti⁄>I≈uàˇ±uª 3 fûãr</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>IC3PSC</«me> <des¸ùti⁄>I≈uàˇ±uª 3ÖªsˇÀr</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>CC3S</«me> <des¸ùti⁄>C≠tuª/Com∑ª 3 sñe˘i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>2</bôWidth> </fõld> </fõlds> </> <> <«me>CCER</«me> <di•œyName>CCER</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ªÉ«bÀ </des¸ùti⁄> <addªssOff£t>0x20</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>CC4P</«me> <des¸ùti⁄>C≠tuª/Com∑ª 3 ouçuàPﬁ¨ôy</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC4E</«me> <des¸ùti⁄>C≠tuª/Com∑ª 4 ouçuàíabÀ</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC3P</«me> <des¸ùti⁄>C≠tuª/Com∑ª 3 ouçuàPﬁ¨ôy</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC3E</«me> <des¸ùti⁄>C≠tuª/Com∑ª 3 ouçuàíabÀ</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC2P</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 ouçuàPﬁ¨ôy</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC2E</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 ouçuàíabÀ</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC1P</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 ouçuàPﬁ¨ôy</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC1E</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 ouçuàíabÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>CNT</«me> <di•œyName>CNT</di•œyName> <des¸ùti⁄>cou¡î</des¸ùti⁄> <addªssOff£t>0x24</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CNT</«me> <des¸ùti⁄>cou¡î vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>PSC</«me> <di•œyName>PSC</di•œyName> <des¸ùti⁄>¥esˇÀr</des¸ùti⁄> <addªssOff£t>0x28</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>PSC</«me> <des¸ùti⁄>PªsˇÀ∏vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>ARR</«me> <di•œyName>ARR</di•œyName> <des¸ùti⁄>auto-ªlﬂd </des¸ùti⁄> <addªssOff£t>0x2C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>ARR</«me> <des¸ùti⁄>Auto-ªlﬂd vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>CCR1</«me> <di•œyName>CCR1</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ª 1</des¸ùti⁄> <addªssOff£t>0x34</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CCR1</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>CCR2</«me> <di•œyName>CCR2</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ª 2</des¸ùti⁄> <addªssOff£t>0x38</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CCR2</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>CCR3</«me> <di•œyName>CCR3</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ª 3</des¸ùti⁄> <addªssOff£t>0x3C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CCR3</«me> <des¸ùti⁄>C≠tuª/Com∑ª vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>CCR4</«me> <di•œyName>CCR4</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ª 4</des¸ùti⁄> <addªssOff£t>0x40</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CCR4</«me> <des¸ùti⁄>C≠tuª/Com∑ª vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>DCR</«me> <di•œyName>DCR</di•œyName> <des¸ùti⁄>DMA c⁄åﬁ </des¸ùti⁄> <addªssOff£t>0x48</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>DBL</«me> <des¸ùti⁄>DMA bur°Üígth</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>DBA</«me> <des¸ùti⁄>DMA ba£áddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>5</bôWidth> </fõld> </fõlds> </> <> <«me>DMAR</«me> <di•œyName>DMAR</di•œyName> <des¸ùti⁄>DMAáddªs†fuŒÅøns„r</des¸ùti⁄> <addªssOff£t>0x4C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>DMAB</«me> <des¸ùti⁄>DMA bur°ác˚s£s</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ dîivedFrom="TIM2"> <«me>TIM3</«me> <ba£Addªss>0x40000400</ba£Addªss> <öãºu±> <«me>TIM3</«me> <des¸ùti⁄>TIM3 globÆ i¡îru±</des¸ùti⁄> <vÆue>29</vÆue> </öãºu±> </≥rùhîÆ> <≥rùhîÆ dîivedFrom="TIM2"> <«me>TIM4</«me> <ba£Addªss>0x40000800</ba£Addªss> <öãºu±> <«me>TIM4</«me> <des¸ùti⁄>TIM4 globÆ i¡îru±</des¸ùti⁄> <vÆue>30</vÆue> </öãºu±> </≥rùhîÆ> <≥rùhîÆ dîivedFrom="TIM2"> <«me>
TIM5
</«me> <ba£Addªss>0x40000C00</ba£Addªss> <öãºu±> <«me>TIM5</«me> <des¸ùti⁄>TIM5 globÆ i¡îru±</des¸ùti⁄> <vÆue>50</vÆue> </öãºu±> </≥rùhîÆ> <≥rùhîÆ> <«me>TIM9</«me> <des¸ùti⁄>GíîÆÖuΩo£Åimî</des¸ùti⁄> <groupName>TIM</groupName> <ba£Addªss>0x40014C00</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <öãºu±> <«me>TIM1_BRK_TIM9</«me> <des¸ùti⁄>TIM1 Bªak i¡îru±ánd TIM9 globÆ i¡îru±</des¸ùti⁄> <vÆue>24</vÆue> </öãºu±> <ªgi°îs> <> <«me>CR1</«me> <di•œyName>CR1</di•œyName> <des¸ùti⁄>c⁄åﬁ 1</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>CKD</«me> <des¸ùti⁄>Clock divisi⁄</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>ARPE</«me> <des¸ùti⁄>Auto-ªlﬂdÖªlﬂdÉ«bÀ</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>OPM</«me> <des¸ùti⁄>O√-pul£ mode</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>URS</«me> <des¸ùti⁄>Upd©êªque° sour˚</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>UDIS</«me> <des¸ùti⁄>Upd©êdißbÀ</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CEN</«me> <des¸ùti⁄>Cou¡îÉ«bÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>CR2</«me> <di•œyName>CR2</di•œyName> <des¸ùti⁄>c⁄åﬁ 2</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>MMS</«me> <des¸ùti⁄>Ma°î modê£À˘i⁄</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>3</bôWidth> </fõld> </fõlds> </> <> <«me>SMCR</«me> <di•œyName>SMCR</di•œyName> <des¸ùti⁄>¶avêmodêc⁄åﬁ </des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>MSM</«me> <des¸ùti⁄>Ma°î/Sœvêmode</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TS</«me> <des¸ùti⁄>Triggî sñe˘i⁄</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>SMS</«me> <des¸ùti⁄>Sœvêmodê£À˘i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>3</bôWidth> </fõld> </fõlds> </> <> <«me>DIER</«me> <di•œyName>DIER</di•œyName> <des¸ùti⁄>DMA/I¡îru±É«bÀ </des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>TIE</«me> <des¸ùti⁄>Triggî i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC2IE</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC1IE</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>UIE</«me> <des¸ùti⁄>Upd©êöãºu±É«bÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>SR</«me> <di•œyName>SR</di•œyName> <des¸ùti⁄>°©u†</des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>CC2OF</«me> <des¸ùti⁄>C≠tuª/com∑ª 2 ovîˇ±uª fœg</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC1OF</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 ovîˇ±uª fœg</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TIF</«me> <des¸ùti⁄>Triggî i¡îru± fœg</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC2IF</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 i¡îru± fœg</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC1IF</«me> <des¸ùti⁄>C≠tuª/com∑ª 1 i¡îru± fœg</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>UIF</«me> <des¸ùti⁄>Upd©êöãºu± fœg</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>EGR</«me> <di•œyName>EGR</di•œyName> <des¸ùti⁄>evíàgíî©i⁄ </des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ac˚ss>wrôe-⁄ly</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>TG</«me> <des¸ùti⁄>Triggî gíî©i⁄</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC2G</«me> <des¸ùti⁄>C≠tuª/com∑ª 2 gíî©i⁄</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC1G</«me> <des¸ùti⁄>C≠tuª/com∑ª 1 gíî©i⁄</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>UG</«me> <des¸ùti⁄>Upd©êgíî©i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>CCMR1_Ouçut</«me> <di•œyName>CCMR1_Ouçut</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ª modê1 (ouçuàmode)</des¸ùti⁄> <addªssOff£t>0x18</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>OC2M</«me> <des¸ùti⁄>OuçuàCom∑ª 2 mode</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>OC2PE</«me> <des¸ùti⁄>OuçuàCom∑ª 2ÖªlﬂdÉ«bÀ</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>OC2FE</«me> <des¸ùti⁄>OuçuàCom∑ª 2 fa°É«bÀ</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC2S</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 sñe˘i⁄</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>OC1M</«me> <des¸ùti⁄>OuçuàCom∑ª 1 mode</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>OC1PE</«me> <des¸ùti⁄>OuçuàCom∑ª 1ÖªlﬂdÉ«bÀ</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>OC1FE</«me> <des¸ùti⁄>OuçuàCom∑ª 1 fa°É«bÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC1S</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 sñe˘i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>2</bôWidth> </fõld> </fõlds> </> <> <«me>CCMR1_I≈ut</«me> <di•œyName>CCMR1_I≈ut</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ª modê1 (öpuàmode)</des¸ùti⁄> <Æã∫©eRegi°î>CCMR1_Ouçut</Æã∫©eRegi°î> <addªssOff£t>0x18</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>IC2F</«me> <des¸ùti⁄>I≈uàˇ±uª 2 fûãr</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>IC2PSC</«me> <des¸ùti⁄>I≈uàˇ±uª 2ÖªsˇÀr</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>CC2S</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 sñe˘i⁄</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>IC1F</«me> <des¸ùti⁄>I≈uàˇ±uª 1 fûãr</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>IC1PSC</«me> <des¸ùti⁄>I≈uàˇ±uª 1ÖªsˇÀr</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>CC1S</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 sñe˘i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>2</bôWidth> </fõld> </fõlds> </> <> <«me>CCER</«me> <di•œyName>CCER</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ªÉ«bÀ </des¸ùti⁄> <addªssOff£t>0x20</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>CC2NP</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 ouçuàPﬁ¨ôy</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC2P</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 ouçuàPﬁ¨ôy</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC2E</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 ouçuàíabÀ</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC1NP</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 ouçuàPﬁ¨ôy</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC1P</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 ouçuàPﬁ¨ôy</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC1E</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 ouçuàíabÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>CNT</«me> <di•œyName>CNT</di•œyName> <des¸ùti⁄>cou¡î</des¸ùti⁄> <addªssOff£t>0x24</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CNT</«me> <des¸ùti⁄>cou¡î vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>PSC</«me> <di•œyName>PSC</di•œyName> <des¸ùti⁄>¥esˇÀr</des¸ùti⁄> <addªssOff£t>0x28</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>PSC</«me> <des¸ùti⁄>PªsˇÀ∏vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>ARR</«me> <di•œyName>ARR</di•œyName> <des¸ùti⁄>auto-ªlﬂd </des¸ùti⁄> <addªssOff£t>0x2C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>ARR</«me> <des¸ùti⁄>Auto-ªlﬂd vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>CCR1</«me> <di•œyName>CCR1</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ª 1</des¸ùti⁄> <addªssOff£t>0x34</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CCR1</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>CCR2</«me> <di•œyName>CCR2</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ª 2</des¸ùti⁄> <addªssOff£t>0x38</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CCR2</«me> <des¸ùti⁄>C≠tuª/Com∑ª 2 vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ dîivedFrom="TIM9"> <«me>TIM12</«me> <ba£Addªss>0x40001800</ba£Addªss> <öãºu±> <«me>TIM8_BRK_TIM12</«me> <des¸ùti⁄>TIM8 Bªak i¡îru±ánd TIM12 globÆ i¡îru±</des¸ùti⁄> <vÆue>43</vÆue> </öãºu±> </≥rùhîÆ> <≥rùhîÆ> <«me>TIM10</«me> <des¸ùti⁄>GíîÆÖuΩo£Åimî</des¸ùti⁄> <groupName>TIM</groupName> <ba£Addªss>0x40015000</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <öãºu±> <«me>TIM1_UP_TIM10</«me> <des¸ùti⁄>TIM1 Upd©êöãºu±ánd TIM10 globÆ i¡îru±</des¸ùti⁄> <vÆue>25</vÆue> </öãºu±> <ªgi°îs> <> <«me>CR1</«me> <di•œyName>CR1</di•œyName> <des¸ùti⁄>c⁄åﬁ 1</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>CKD</«me> <des¸ùti⁄>Clock divisi⁄</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>ARPE</«me> <des¸ùti⁄>Auto-ªlﬂdÖªlﬂdÉ«bÀ</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>URS</«me> <des¸ùti⁄>Upd©êªque° sour˚</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>UDIS</«me> <des¸ùti⁄>Upd©êdißbÀ</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CEN</«me> <des¸ùti⁄>Cou¡îÉ«bÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>CR2</«me> <di•œyName>CR2</di•œyName> <des¸ùti⁄>c⁄åﬁ 2</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>MMS</«me> <des¸ùti⁄>Ma°î modê£À˘i⁄</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>3</bôWidth> </fõld> </fõlds> </> <> <«me>DIER</«me> <di•œyName>DIER</di•œyName> <des¸ùti⁄>DMA/I¡îru±É«bÀ </des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>CC1IE</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>UIE</«me> <des¸ùti⁄>Upd©êöãºu±É«bÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>SR</«me> <di•œyName>SR</di•œyName> <des¸ùti⁄>°©u†</des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>CC1OF</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 ovîˇ±uª fœg</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC1IF</«me> <des¸ùti⁄>C≠tuª/com∑ª 1 i¡îru± fœg</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>UIF</«me> <des¸ùti⁄>Upd©êöãºu± fœg</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>EGR</«me> <di•œyName>EGR</di•œyName> <des¸ùti⁄>evíàgíî©i⁄ </des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ac˚ss>wrôe-⁄ly</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>CC1G</«me> <des¸ùti⁄>C≠tuª/com∑ª 1 gíî©i⁄</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>UG</«me> <des¸ùti⁄>Upd©êgíî©i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>CCMR1_Ouçut</«me> <di•œyName>CCMR1_Ouçut</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ª modê(ouçuàmode)</des¸ùti⁄> <addªssOff£t>0x18</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>OC1M</«me> <des¸ùti⁄>OuçuàCom∑ª 1 mode</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>OC1PE</«me> <des¸ùti⁄>OuçuàCom∑ª 1ÖªlﬂdÉ«bÀ</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC1S</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 sñe˘i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>2</bôWidth> </fõld> </fõlds> </> <> <«me>CCMR1_I≈ut</«me> <di•œyName>CCMR1_I≈ut</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ª modê(öpuàmode)</des¸ùti⁄> <Æã∫©eRegi°î>CCMR1_Ouçut</Æã∫©eRegi°î> <addªssOff£t>0x18</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>IC1F</«me> <des¸ùti⁄>I≈uàˇ±uª 1 fûãr</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>IC1PSC</«me> <des¸ùti⁄>I≈uàˇ±uª 1ÖªsˇÀr</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>CC1S</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 sñe˘i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>2</bôWidth> </fõld> </fõlds> </> <> <«me>CCER</«me> <di•œyName>CCER</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ªÉ«bÀ </des¸ùti⁄> <addªssOff£t>0x20</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>CC1NP</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 ouçuàPﬁ¨ôy</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC1P</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 ouçuàPﬁ¨ôy</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CC1E</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 ouçuàíabÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>CNT</«me> <di•œyName>CNT</di•œyName> <des¸ùti⁄>cou¡î</des¸ùti⁄> <addªssOff£t>0x24</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CNT</«me> <des¸ùti⁄>cou¡î vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>PSC</«me> <di•œyName>PSC</di•œyName> <des¸ùti⁄>¥esˇÀr</des¸ùti⁄> <addªssOff£t>0x28</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>PSC</«me> <des¸ùti⁄>PªsˇÀ∏vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>ARR</«me> <di•œyName>ARR</di•œyName> <des¸ùti⁄>auto-ªlﬂd </des¸ùti⁄> <addªssOff£t>0x2C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>ARR</«me> <des¸ùti⁄>Auto-ªlﬂd vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>CCR1</«me> <di•œyName>CCR1</di•œyName> <des¸ùti⁄>ˇ±uª/com∑ª 1</des¸ùti⁄> <addªssOff£t>0x34</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CCR1</«me> <des¸ùti⁄>C≠tuª/Com∑ª 1 vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ dîivedFrom="TIM10"> <«me>TIM11</«me> <ba£Addªss>0x40015400</ba£Addªss> <öãºu±> <«me>TIM1_TRG_COM_TIM11</«me> <des¸ùti⁄>TIM1 Triggîánd Commuèti⁄ i¡îru±†™d TIM11 globÆ i¡îru±</des¸ùti⁄> <vÆue>26</vÆue> </öãºu±> </≥rùhîÆ> <≥rùhîÆ dîivedFrom="TIM10"> <«me>TIM13</«me> <ba£Addªss>0x40001C00</ba£Addªss> <öãºu±> <«me>TIM8_UP_TIM13</«me> <des¸ùti⁄>TIM8 Upd©êöãºu±ánd TIM13 globÆ i¡îru±</des¸ùti⁄> <vÆue>44</vÆue> </öãºu±> </≥rùhîÆ> <≥rùhîÆ dîivedFrom="TIM10"> <«me>TIM14</«me> <ba£Addªss>0x40002000</ba£Addªss> <öãºu±> <«me>TIM8_TRG_COM_TIM14</«me> <des¸ùti⁄>TIM8 Triggîánd Commuèti⁄ i¡îru±†™d TIM14 globÆ i¡îru±</des¸ùti⁄> <vÆue>45</vÆue> </öãºu±> </≥rùhîÆ> <≥rùhîÆ> <«me>
TIM6
</«me> <des¸ùti⁄>
Basic
Åimî</des¸ùti⁄> <groupName>TIM</groupName> <ba£Addªss>0x40001000</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <öãºu±> <«me>TIM6</«me> <des¸ùti⁄>TIM6 globÆ i¡îru±</des¸ùti⁄> <vÆue>54</vÆue> </öãºu±> <ªgi°îs> <> <«me>CR1</«me> <di•œyName>CR1</di•œyName> <des¸ùti⁄>c⁄åﬁ 1</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>ARPE</«me> <des¸ùti⁄>Auto-ªlﬂdÖªlﬂdÉ«bÀ</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>OPM</«me> <des¸ùti⁄>O√-pul£ mode</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>URS</«me> <des¸ùti⁄>Upd©êªque° sour˚</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>UDIS</«me> <des¸ùti⁄>Upd©êdißbÀ</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CEN</«me> <des¸ùti⁄>Cou¡îÉ«bÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>CR2</«me> <di•œyName>CR2</di•œyName> <des¸ùti⁄>c⁄åﬁ 2</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>MMS</«me> <des¸ùti⁄>Ma°î modê£À˘i⁄</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>3</bôWidth> </fõld> </fõlds> </> <> <«me>DIER</«me> <di•œyName>DIER</di•œyName> <des¸ùti⁄>DMA/I¡îru±É«bÀ </des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>UDE</«me> <des¸ùti⁄>Upd©êDMAÑeque°É«bÀ</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>UIE</«me> <des¸ùti⁄>Upd©êöãºu±É«bÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>SR</«me> <di•œyName>SR</di•œyName> <des¸ùti⁄>°©u†</des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>UIF</«me> <des¸ùti⁄>Upd©êöãºu± fœg</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>EGR</«me> <di•œyName>EGR</di•œyName> <des¸ùti⁄>evíàgíî©i⁄ </des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ac˚ss>wrôe-⁄ly</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>UG</«me> <des¸ùti⁄>Upd©êgíî©i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>CNT</«me> <di•œyName>CNT</di•œyName> <des¸ùti⁄>cou¡î</des¸ùti⁄> <addªssOff£t>0x24</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CNT</«me> <des¸ùti⁄>Low cou¡î vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>PSC</«me> <di•œyName>PSC</di•œyName> <des¸ùti⁄>¥esˇÀr</des¸ùti⁄> <addªssOff£t>0x28</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>PSC</«me> <des¸ùti⁄>PªsˇÀ∏vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>ARR</«me> <di•œyName>ARR</di•œyName> <des¸ùti⁄>auto-ªlﬂd </des¸ùti⁄> <addªssOff£t>0x2C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>ARR</«me> <des¸ùti⁄>Low Auto-ªlﬂd vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ dîivedFrom="TIM6"> <«me>
TIM7
</«me> <ba£Addªss>0x40001400</ba£Addªss> <öãºu±> <«me>TIM7</«me> <des¸ùti⁄>TIM7 globÆ i¡îru±</des¸ùti⁄> <vÆue>55</vÆue> </öãºu±> </≥rùhîÆ> <≥rùhîÆ> <«me>I2C1</«me> <des¸ùti⁄>
I¡î
 
öãgøãd
 
cúcuô
</des¸ùti⁄> <groupName>I2C</groupName> <ba£Addªss>0x40005400</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <öãºu±> <«me>
I2C1_EV
</«me> <des¸ùti⁄>I2C1Évíàöãºu±</des¸ùti⁄> <vÆue>31</vÆue> </öãºu±> <öãºu±> <«me>
I2C1_ER
</«me> <des¸ùti⁄>I2C1Éº‹ i¡îru±</des¸ùti⁄> <vÆue>32</vÆue> </öãºu±> <ªgi°îs> <> <«me>CR1</«me> <di•œyName>CR1</di•œyName> <des¸ùti⁄>C⁄åﬁ 1</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
SWRST
</«me> <des¸ùti⁄>So·w¨êª£t</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ALERT
</«me> <des¸ùti⁄>
SMBus
 
Æît
</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PEC
</«me> <des¸ùti⁄>
Packë
Éº‹ 
checkög
</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
POS
</«me> <des¸ùti⁄>
AcknowÀdge
/PEC 
Posôi⁄
 (d©®
ª˚±i⁄
)</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ACK
</«me> <des¸ùti⁄>AcknowÀdgêíabÀ</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
STOP
</«me> <des¸ùti⁄>
St›
 gíî©i⁄</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
START
</«me> <des¸ùti⁄>
Sèπ
 gíî©i⁄</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
NOSTRETCH
</«me> <des¸ùti⁄>Clock 
°ªtchög
 dißbÀ (Sœvêmode)</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ENGC
</«me> <des¸ùti⁄>GíîÆ 
ˇŒ
É«bÀ</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ENPEC
</«me> <des¸ùti⁄>PECÉ«bÀ</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ENARP
</«me> <des¸ùti⁄>
ARP
É«bÀ</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SMBTYPE
</«me> <des¸ùti⁄>SMBu†
ty≥
</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SMBUS
</«me> <des¸ùti⁄>SMBu†mode</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PE
</«me> <des¸ùti⁄>PîùhîÆÉ«bÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>CR2</«me> <di•œyName>CR2</di•œyName> <des¸ùti⁄>C⁄åﬁ 2</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
LAST
</«me> <des¸ùti⁄>DMA 
œ°
Åøns„r</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>DMAEN</«me> <des¸ùti⁄>DMA 
ªque°s
É«bÀ</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ITBUFEN
</«me> <des¸ùti⁄>
Buf„r
 i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ITEVTEN
</«me> <des¸ùti⁄>Evíàöãºu±É«bÀ</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ITERREN
</«me> <des¸ùti⁄>Eº‹ i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FREQ
</«me> <des¸ùti⁄>PîùhîÆ clock 
‰equícy
</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>6</bôWidth> </fõld> </fõlds> </> <> <«me>
OAR1
</«me> <di•œyName>OAR1</di•œyName> <des¸ùti⁄>
Own
áddªs†1</des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
ADDMODE
</«me> <des¸ùti⁄>
Addªssög
 modê(¶avêmode)</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ADD10
</«me> <des¸ùti⁄>I¡îÁ˚áddªss</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
ADD7
</«me> <des¸ùti⁄>I¡îÁ˚áddªss</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>7</bôWidth> </fõld> <fõld> <«me>
ADD0
</«me> <des¸ùti⁄>I¡îÁ˚áddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
OAR2
</«me> <di•œyName>OAR2</di•œyName> <des¸ùti⁄>Ow¿addªs†2</des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
ADD2
</«me> <des¸ùti⁄>I¡îÁ˚áddªss</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>7</bôWidth> </fõld> <fõld> <«me>
ENDUAL
</«me> <des¸ùti⁄>
DuÆ
 
addªssög
 modêíabÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
DR
</«me> <di•œyName>DR</di•œyName> <des¸ùti⁄>D©®</des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>DR</«me> <des¸ùti⁄>8-bô d©®</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
SR1
</«me> <di•œyName>SR1</di•œyName> <des¸ùti⁄>Sètu†1</des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
SMBALERT
</«me> <des¸ùti⁄>SMBu†Æît</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
TIMEOUT
</«me> <des¸ùti⁄>
Timeout
 o∏
Tlow
Éº‹</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
PECERR
</«me> <des¸ùti⁄>PEC Eº‹ 
ö
Ñe˚±i⁄</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
OVR
</«me> <des¸ùti⁄>
Ovîrun
/
Undîrun
</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>AF</«me> <des¸ùti⁄>AcknowÀdgê
Áûuª
</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
ARLO
</«me> <des¸ùti⁄>
Arbôøti⁄
 
lo°
 (
ma°î
 mode)</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
BERR
</«me> <des¸ùti⁄>Bu†îr‹</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
TxE
</«me> <des¸ùti⁄>D©®
em±y
 (
å™smôãrs
)</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
RxNE
</«me> <des¸ùti⁄>D©®
nŸ
Ém±y (
ª˚ivîs
)</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
STOPF
</«me> <des¸ùti⁄>St› dëe˘i⁄ (¶avêmode)</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>ADD10</«me> <des¸ùti⁄>10-bô 
hódî
 
£¡
 (Ma°î mode)</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
BTF
</«me> <des¸ùti⁄>
Byã
Åøns„∏
föished
</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
ADDR
</«me> <des¸ùti⁄>
Addªss
 síà(ma°î mode)/
m©ched
 (¶avêmode)</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
SB
</«me> <des¸ùti⁄>Sèπ bô (Ma°î mode)</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> </fõlds> </> <> <«me>SR2</«me> <di•œyName>SR2</di•œyName> <des¸ùti⁄>Sètu†2</des¸ùti⁄> <addªssOff£t>0x18</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>PEC</«me> <des¸ùti⁄>
ackë
Éº‹ checkög </des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>
DUALF
</«me> <des¸ùti⁄>DuÆ fœg (Sœvêmode)</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SMBHOST
</«me> <des¸ùti⁄>SMBu†
ho°
 hódî (Sœvêmode)</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SMBDEFAULT
</«me> <des¸ùti⁄>SMBu†devi˚ áddªs†(Sœvêmode)</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
GENCALL
</«me> <des¸ùti⁄>GíîÆ cÆ»addªs†(Sœvêmode)</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TRA
</«me> <des¸ùti⁄>
Tønsmôãr
/
ª˚ivî
</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BUSY
</«me> <des¸ùti⁄>Bu†
busy
</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
MSL
</«me> <des¸ùti⁄>Ma°î/¶ave</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CCR
</«me> <di•œyName>CCR</di•œyName> <des¸ùti⁄>Clock c⁄åﬁ </des¸ùti⁄> <addªssOff£t>0x1C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
F_S
</«me> <des¸ùti⁄>I2C ma°î modê£À˘i⁄</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DUTY
</«me> <des¸ùti⁄>
Fa°
 modê
duty
 
cy˛e
</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CCR</«me> <des¸ùti⁄>Clock c⁄åﬁ ö Fa°/
Sènd¨d
 modê(Ma°î mode)</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>12</bôWidth> </fõld> </fõlds> </> <> <«me>
TRISE
</«me> <di•œyName>TRISE</di•œyName> <des¸ùti⁄>TRISE </des¸ùti⁄> <addªssOff£t>0x20</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0002</ª£tVÆue> <fõlds> <fõld> <«me>TRISE</«me> <des¸ùti⁄>
Maximum
 
ri£
Åimêö Fa°/Sènd¨d modê(Ma°î mode)</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>6</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ dîivedFrom="I2C1"> <«me>I2C2</«me> <ba£Addªss>0x40005800</ba£Addªss> <öãºu±> <«me>
I2C2_EV
</«me> <des¸ùti⁄>I2C2Évíàöãºu±</des¸ùti⁄> <vÆue>33</vÆue> </öãºu±> <öãºu±> <«me>
I2C2_ER
</«me> <des¸ùti⁄>I2C2Éº‹ i¡îru±</des¸ùti⁄> <vÆue>34</vÆue> </öãºu±> </≥rùhîÆ> <≥rùhîÆ> <«me>SPI1</«me> <des¸ùti⁄>Sîü»≥rùhîÆ i¡îÁ˚</des¸ùti⁄> <groupName>SPI</groupName> <ba£Addªss>0x40013000</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <öãºu±> <«me>SPI1</«me> <des¸ùti⁄>SPI1 globÆ i¡îru±</des¸ùti⁄> <vÆue>35</vÆue> </öãºu±> <ªgi°îs> <> <«me>CR1</«me> <di•œyName>CR1</di•œyName> <des¸ùti⁄>c⁄åﬁ 1</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
BIDIMODE
</«me> <des¸ùti⁄>
Bidúe˘i⁄Æ
 d©®modêíabÀ</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BIDIOE
</«me> <des¸ùti⁄>OuçuàíabÀ i¿
bidúe˘i⁄Æ
 mode</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CRCEN</«me> <des¸ùti⁄>
H¨dw¨e
 CRC 
ˇlcuœti⁄
É«bÀ</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CRCNEXT
</«me> <des¸ùti⁄>CRCÅøns„∏
√xt
</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DFF
</«me> <des¸ùti⁄>D©®
‰ame
 
f‹m©
</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RXONLY
</«me> <des¸ùti⁄>Re˚ivê⁄ly</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SSM
</«me> <des¸ùti⁄>So·w¨ê¶avê
m™agemít
</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SSI
</«me> <des¸ùti⁄>I¡î«»¶avê£À˘</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
LSBFIRST
</«me> <des¸ùti⁄>
Føme
 f‹m©</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SPE
</«me> <des¸ùti⁄>SPIÉ«bÀ</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BR
</«me> <des¸ùti⁄>
Baud
 
øã
 c⁄åﬁ</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
MSTR
</«me> <des¸ùti⁄>Ma°î sñe˘i⁄</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CPOL
</«me> <des¸ùti⁄>ClockÖﬁ¨ôy</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CPHA
</«me> <des¸ùti⁄>Clock 
pha£
</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>CR2</«me> <di•œyName>CR2</di•œyName> <des¸ùti⁄>c⁄åﬁ 2</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
TXEIE
</«me> <des¸ùti⁄>
Tx
 
buf„r
Ém±y i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RXNEIE
</«me> <des¸ùti⁄>
RX
 buf„∏nŸÉm±y i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ERRIE
</«me> <des¸ùti⁄>Eº‹ i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SSOE
</«me> <des¸ùti⁄>
SS
 ouçuàíabÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TXDMAEN
</«me> <des¸ùti⁄>Tx buf„∏DMAÉ«bÀ</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RXDMAEN
</«me> <des¸ùti⁄>
Rx
 buf„∏DMAÉ«bÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>SR</«me> <di•œyName>SR</di•œyName> <des¸ùti⁄>°©u†</des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ª£tVÆue>0x0002</ª£tVÆue> <fõlds> <fõld> <«me>
BSY
</«me> <des¸ùti⁄>
Busy
 fœg</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>OVR</«me> <des¸ùti⁄>Ovîru¿Êag</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
MODF
</«me> <des¸ùti⁄>
Mode
 
Áu…
</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
CRCERR
</«me> <des¸ùti⁄>CRCÉº‹ fœg</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
UDR
</«me> <des¸ùti⁄>Undîru¿Êag</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
CHSIDE
</«me> <des¸ùti⁄>Ch™√»
side
</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
TXE
</«me> <des¸ùti⁄>
Tønsmô
 buf„∏em±y</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
RXNE
</«me> <des¸ùti⁄>Re˚ivêbuf„∏nŸÉm±y</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> </fõlds> </> <> <«me>DR</«me> <di•œyName>DR</di•œyName> <des¸ùti⁄>d©®</des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>DR</«me> <des¸ùti⁄>D©®</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
CRCPR
</«me> <di•œyName>CRCPR</di•œyName> <des¸ùti⁄>CRC 
pﬁynomül
 </des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0007</ª£tVÆue> <fõlds> <fõld> <«me>
CRCPOLY
</«me> <des¸ùti⁄>CRCÖﬁynomü»</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
RXCRCR
</«me> <di•œyName>RXCRCR</di•œyName> <des¸ùti⁄>RX CRC </des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
RxCRC
</«me> <des¸ùti⁄>Rx CRC </des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
TXCRCR
</«me> <di•œyName>TXCRCR</di•œyName> <des¸ùti⁄>
TX
 CRC </des¸ùti⁄> <addªssOff£t>0x18</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
TxCRC
</«me> <des¸ùti⁄>Tx CRC </des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
I2SCFGR
</«me> <di•œyName>I2SCFGR</di•œyName> <des¸ùti⁄>
I2S
 c⁄figuøti⁄ </des¸ùti⁄> <addªssOff£t>0x1C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
I2SMOD
</«me> <des¸ùti⁄>I2S modê£À˘i⁄</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
I2SE
</«me> <des¸ùti⁄>I2S E«bÀ</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
I2SCFG
</«me> <des¸ùti⁄>I2S c⁄figuøti⁄ mode</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
PCMSYNC
</«me> <des¸ùti⁄>
PCM
 fømê
synchr⁄iz©i⁄
</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
I2SSTD
</«me> <des¸ùti⁄>I2S 
°™d¨d
 sñe˘i⁄</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
CKPOL
</«me> <des¸ùti⁄>
Sãady
 sèã clockÖﬁ¨ôy</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DATLEN
</«me> <des¸ùti⁄>D©®ÀngthÅÿbê
å™s„ºed
</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
CHLEN
</«me> <des¸ùti⁄>Ch™√»Àngth (numbî o‡bô†
≥r
 
audio
 ch™√l)</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
I2SPR
</«me> <di•œyName>I2SPR</di•œyName> <des¸ùti⁄>I2SÖªsˇÀ∏</des¸ùti⁄> <addªssOff£t>0x20</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>00000010</ª£tVÆue> <fõlds> <fõld> <«me>
MCKOE
</«me> <des¸ùti⁄>Ma°î clock ouçuàíabÀ</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ODD
</«me> <des¸ùti⁄>
Odd
 fa˘‹ thê¥esˇÀr</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
I2SDIV
</«me> <des¸ùti⁄>I2S 
Löór
ÖªsˇÀr</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ dîivedFrom="SPI1"> <«me>SPI2</«me> <ba£Addªss>0x40003800</ba£Addªss> <öãºu±> <«me>SPI2</«me> <des¸ùti⁄>SPI2 globÆ i¡îru±</des¸ùti⁄> <vÆue>36</vÆue> </öãºu±> </≥rùhîÆ> <≥rùhîÆ dîivedFrom="SPI1"> <«me>SPI3</«me> <ba£Addªss>0x40003C00</ba£Addªss> <öãºu±> <«me>SPI3</«me> <des¸ùti⁄>SPI3 globÆ i¡îru±</des¸ùti⁄> <vÆue>51</vÆue> </öãºu±> </≥rùhîÆ> <≥rùhîÆ> <«me>USART1</«me> <des¸ùti⁄>
Univîßl
 
synchr⁄ous
 
asynchr⁄ous
Ñe˚ivî 
å™smôãr
</des¸ùti⁄> <groupName>USART</groupName> <ba£Addªss>0x40013800</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <öãºu±> <«me>USART1</«me> <des¸ùti⁄>USART1 globÆ i¡îru±</des¸ùti⁄> <vÆue>37</vÆue> </öãºu±> <ªgi°îs> <> <«me>SR</«me> <di•œyName>SR</di•œyName> <des¸ùti⁄>Sètu†</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ª£tVÆue>0x00C0</ª£tVÆue> <fõlds> <fõld> <«me>
CTS
</«me> <des¸ùti⁄>CTS fœg</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
LBD
</«me> <des¸ùti⁄>
LIN
  dëe˘i⁄ fœg</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>TXE</«me> <des¸ùti⁄>Tønsmô d©®em±y</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
TC
</«me> <des¸ùti⁄>
Tønsmissi⁄
 com∂ëe</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>RXNE</«me> <des¸ùti⁄>
Ród
 d©®nŸÉm±y</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
IDLE
</«me> <des¸ùti⁄>IDLEÜöê
dëe˘ed
</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
ORE
</«me> <des¸ùti⁄>Ovîru¿îr‹</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
NE
</«me> <des¸ùti⁄>
Noi£
Éº‹ fœg</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
FE
</«me> <des¸ùti⁄>
Fømög
Éº‹</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>PE</«me> <des¸ùti⁄>
P¨ôy
Éº‹</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> </fõlds> </> <> <«me>DR</«me> <di•œyName>DR</di•œyName> <des¸ùti⁄>D©®</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>DR</«me> <des¸ùti⁄>D©®vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>9</bôWidth> </fõld> </fõlds> </> <> <«me>BRR</«me> <di•œyName>BRR</di•œyName> <des¸ùti⁄>BaudÑ©ê</des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
DIV_M™tisß
</«me> <des¸ùti⁄>
m™tisß
 o‡
USARTDIV
</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>12</bôWidth> </fõld> <fõld> <«me>
DIV_Fø˘i⁄
</«me> <des¸ùti⁄>
‰a˘i⁄
 o‡USARTDIV</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> </fõlds> </> <> <«me>CR1</«me> <di•œyName>CR1</di•œyName> <des¸ùti⁄>C⁄åﬁ 1</des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
UE
</«me> <des¸ùti⁄>USARTÉ«bÀ</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
M
</«me> <des¸ùti⁄>
W‹d
Üígth</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
WAKE
</«me> <des¸ùti⁄>Wakeu∞
mëhod
</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PCE
</«me> <des¸ùti⁄>P¨ôy c⁄åﬁÉ«bÀ</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PS
</«me> <des¸ùti⁄>P¨ôy sñe˘i⁄</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PEIE
</«me> <des¸ùti⁄>PE i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TXEIE</«me> <des¸ùti⁄>TXE i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TCIE</«me> <des¸ùti⁄>Tønsmissi⁄ com∂ëêöãºu±É«bÀ</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>RXNEIE</«me> <des¸ùti⁄>RXNE i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IDLEIE
</«me> <des¸ùti⁄>IDLE i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TE
</«me> <des¸ùti⁄>Tønsmôã∏íabÀ</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RE
</«me> <des¸ùti⁄>
Re˚ivî
É«bÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RWU
</«me> <des¸ùti⁄>Re˚ivî 
wakeup
</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SBK
</«me> <des¸ùti⁄>
Síd
 </des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>CR2</«me> <di•œyName>CR2</di•œyName> <des¸ùti⁄>C⁄åﬁ 2</des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
LINEN
</«me> <des¸ùti⁄>LIN modêíabÀ</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>STOP</«me> <des¸ùti⁄>STOP bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>CLKEN</«me> <des¸ùti⁄>ClockÉ«bÀ</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CPOL</«me> <des¸ùti⁄>ClockÖﬁ¨ôy</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CPHA</«me> <des¸ùti⁄>ClockÖha£</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
LBCL
</«me> <des¸ùti⁄>
La°
 bô clockÖul£</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
LBDIE
</«me> <des¸ùti⁄>LIN  dëe˘i⁄ i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
LBDL
</«me> <des¸ùti⁄>
lö
  dëe˘i⁄Üígth</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ADD
</«me> <des¸ùti⁄>Addªs†o‡thêUSART 
node
</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> </fõlds> </> <> <«me>
CR3
</«me> <di•œyName>CR3</di•œyName> <des¸ùti⁄>C⁄åﬁ 3</des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
CTSIE
</«me> <des¸ùti⁄>CTS i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CTSE
</«me> <des¸ùti⁄>CTSÉ«bÀ</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RTSE
</«me> <des¸ùti⁄>
RTS
É«bÀ</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DMAT
</«me> <des¸ùti⁄>DMAÉ«bÀÅønsmôãr</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>DMAR</«me> <des¸ùti⁄>DMAÉ«bÀÑe˚ivî</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SCEN
</«me> <des¸ùti⁄>
Sm¨tˇrd
 modêíabÀ</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
NACK
</«me> <des¸ùti⁄>Sm¨tˇrd NACKÉ«bÀ</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
HDSEL
</«me> <des¸ùti⁄>HÆf-
du∂ex
 sñe˘i⁄</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
IRLP
</«me> <des¸ùti⁄>
IrDA
Üow-powî</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>IREN</«me> <des¸ùti⁄>IrDA modêíabÀ</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
EIE
</«me> <des¸ùti⁄>Eº‹ i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
GTPR
</«me> <di•œyName>GTPR</di•œyName> <des¸ùti⁄>
Gu¨d
Åimê™dÖªsˇÀ∏</des¸ùti⁄> <addªssOff£t>0x18</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
GT
</«me> <des¸ùti⁄>Gu¨dÅimêvÆue</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>PSC</«me> <des¸ùti⁄>PªsˇÀ∏vÆue</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ dîivedFrom="USART1"> <«me>USART2</«me> <ba£Addªss>0x40004400</ba£Addªss> <öãºu±> <«me>USART2</«me> <des¸ùti⁄>USART2 globÆ i¡îru±</des¸ùti⁄> <vÆue>38</vÆue> </öãºu±> </≥rùhîÆ> <≥rùhîÆ dîivedFrom="USART1"> <«me>USART3</«me> <ba£Addªss>0x40004800</ba£Addªss> <öãºu±> <«me>USART3</«me> <des¸ùti⁄>USART3 globÆ i¡îru±</des¸ùti⁄> <vÆue>39</vÆue> </öãºu±> </≥rùhîÆ> <≥rùhîÆ> <«me>
ADC1
</«me> <des¸ùti⁄>
A«log
ÅÿdigôÆ 
c⁄vîãr
</des¸ùti⁄> <groupName>ADC</groupName> <ba£Addªss>0x40012400</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <öãºu±> <«me>ADC</«me> <des¸ùti⁄>ADC1 globÆ i¡îru±</des¸ùti⁄> <vÆue>18</vÆue> </öãºu±> <ªgi°îs> <> <«me>SR</«me> <di•œyName>SR</di•œyName> <des¸ùti⁄>°©u†</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
STRT
</«me> <des¸ùti⁄>
Reguœr
 ch™√»
°¨t
 fœg</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
JSTRT
</«me> <des¸ùti⁄>
Inje˘ed
 ch™√»°¨àÊag</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
JEOC
</«me> <des¸ùti⁄>Inje˘ed ch™√»
íd
 o‡c⁄vîsi⁄</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
EOC
</«me> <des¸ùti⁄>Reguœ∏ch™√»íd o‡c⁄vîsi⁄</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
AWD
</«me> <des¸ùti⁄>A«log w©chdog fœg</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>CR1</«me> <di•œyName>CR1</di•œyName> <des¸ùti⁄>c⁄åﬁ 1</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
AWDEN
</«me> <des¸ùti⁄>A«log w©chdogÉ«bÀ o¿ªguœ∏
ch™√ls
</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
JAWDEN
</«me> <des¸ùti⁄>A«log w©chdogÉ«bÀ o¿öje˘ed ch™√ls</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DUALMOD
</«me> <des¸ùti⁄>DuÆ modê£À˘i⁄</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
DISCNUM
</«me> <des¸ùti⁄>
Disc⁄töuous
 modêch™√»cou¡</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
JDISCEN
</«me> <des¸ùti⁄>Disc⁄töuou†modê⁄ inje˘ed ch™√ls</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DISCEN
</«me> <des¸ùti⁄>Disc⁄töuou†modê⁄Ñeguœ∏ch™√ls</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
JAUTO
</«me> <des¸ùti⁄>Autom©i¯öje˘ed 
group
 c⁄vîsi⁄</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
AWDSGL
</«me> <des¸ùti⁄>E«bÀÅhêw©chdog o¿®sögÀ ch™√»ö 
sˇn
 mode</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SCAN
</«me> <des¸ùti⁄>
Sˇn
 mode</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
JEOCIE
</«me> <des¸ùti⁄>I¡îru±É«bÀ öje˘ed ch™√ls</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
AWDIE
</«me> <des¸ùti⁄>A«log w©chdog i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
EOCIE
</«me> <des¸ùti⁄>I¡îru±É«bÀ EOC</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
AWDCH
</«me> <des¸ùti⁄>A«log w©chdog ch™√»£À˘ bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>5</bôWidth> </fõld> </fõlds> </> <> <«me>CR2</«me> <di•œyName>CR2</di•œyName> <des¸ùti⁄>c⁄åﬁ 2</des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
TSVREFE
</«me> <des¸ùti⁄>
Tem≥øtuª
 
£ns‹
ánd 
VREFINT
É«bÀ</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SWSTART
</«me> <des¸ùti⁄>Sèπ c⁄vîsi⁄ o‡ªguœ∏ch™√ls</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
JSWSTART
</«me> <des¸ùti⁄>Sèπ c⁄vîsi⁄ o‡öje˘ed ch™√ls</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
EXTTRIG
</«me> <des¸ùti⁄>Exã∫ÆÅriggî c⁄vîsi⁄ modêªguœ∏ch™√ls</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
EXTSEL
</«me> <des¸ùti⁄>Exã∫ÆÉvíà£À˘ ªguœ∏group</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
JEXTTRIG
</«me> <des¸ùti⁄>Exã∫ÆÅriggî c⁄vîsi⁄ modêöje˘ed ch™√ls</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
JEXTSEL
</«me> <des¸ùti⁄>Exã∫ÆÉvíà£À˘ öje˘ed group</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
ALIGN
</«me> <des¸ùti⁄>D©®
Æignmít
</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>DMA</«me> <des¸ùti⁄>
Dúe˘
 mem‹yác˚s†mode</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RSTCAL
</«me> <des¸ùti⁄>Re£àˇlibøti⁄</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CAL</«me> <des¸ùti⁄>A/D cÆibøti⁄</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
CONT
</«me> <des¸ùti⁄>
C⁄töuous
 c⁄vîsi⁄</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ADON
</«me> <des¸ùti⁄>A/D c⁄vîã∏
ON
 / OFF</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
SMPR1
</«me> <di•œyName>SMPR1</di•œyName> <des¸ùti⁄>
ßm∂e
Åimê1</des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
SMP10
</«me> <des¸ùti⁄>Ch™√»10 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
SMP11
</«me> <des¸ùti⁄>Ch™√»11 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
SMP12
</«me> <des¸ùti⁄>Ch™√»12 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
SMP13
</«me> <des¸ùti⁄>Ch™√»13 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
SMP14
</«me> <des¸ùti⁄>Ch™√»14 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
SMP15
</«me> <des¸ùti⁄>Ch™√»15 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
SMP16
</«me> <des¸ùti⁄>Ch™√»16 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
SMP17
</«me> <des¸ùti⁄>Ch™√»17 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>3</bôWidth> </fõld> </fõlds> </> <> <«me>
SMPR2
</«me> <di•œyName>SMPR2</di•œyName> <des¸ùti⁄>ßm∂êtimê2</des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
SMP0
</«me> <des¸ùti⁄>Ch™√»0 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
SMP1
</«me> <des¸ùti⁄>Ch™√»1 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
SMP2
</«me> <des¸ùti⁄>Ch™√»2 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
SMP3
</«me> <des¸ùti⁄>Ch™√»3 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
SMP4
</«me> <des¸ùti⁄>Ch™√»4 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
SMP5
</«me> <des¸ùti⁄>Ch™√»5 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
SMP6
</«me> <des¸ùti⁄>Ch™√»6 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
SMP7
</«me> <des¸ùti⁄>Ch™√»7 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
SMP8
</«me> <des¸ùti⁄>Ch™√»8 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
SMP9
</«me> <des¸ùti⁄>Ch™√»9 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>3</bôWidth> </fõld> </fõlds> </> <> <«me>
JOFR1
</«me> <di•œyName>JOFR1</di•œyName> <des¸ùti⁄>öje˘ed ch™√»d©®off£àx</des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
JOFFSET1
</«me> <des¸ùti⁄>D©®off£àöje˘ed ch™√»x</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>12</bôWidth> </fõld> </fõlds> </> <> <«me>
JOFR2
</«me> <di•œyName>JOFR2</di•œyName> <des¸ùti⁄>öje˘ed ch™√»d©®off£àx</des¸ùti⁄> <addªssOff£t>0x18</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
JOFFSET2
</«me> <des¸ùti⁄>D©®off£àöje˘ed ch™√»x</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>12</bôWidth> </fõld> </fõlds> </> <> <«me>
JOFR3
</«me> <di•œyName>JOFR3</di•œyName> <des¸ùti⁄>öje˘ed ch™√»d©®off£àx</des¸ùti⁄> <addªssOff£t>0x1C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
JOFFSET3
</«me> <des¸ùti⁄>D©®off£àöje˘ed ch™√»x</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>12</bôWidth> </fõld> </fõlds> </> <> <«me>
JOFR4
</«me> <di•œyName>JOFR4</di•œyName> <des¸ùti⁄>öje˘ed ch™√»d©®off£àx</des¸ùti⁄> <addªssOff£t>0x20</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
JOFFSET4
</«me> <des¸ùti⁄>D©®off£àöje˘ed ch™√»x</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>12</bôWidth> </fõld> </fõlds> </> <> <«me>
HTR
</«me> <di•œyName>HTR</di•œyName> <des¸ùti⁄>w©chdog 
highî
 
thªshﬁd
 </des¸ùti⁄> <addªssOff£t>0x24</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000FFF</ª£tVÆue> <fõlds> <fõld> <«me>
HT
</«me> <des¸ùti⁄>A«log w©chdog highîÅhªshﬁd</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>12</bôWidth> </fõld> </fõlds> </> <> <«me>
LTR
</«me> <di•œyName>LTR</di•œyName> <des¸ùti⁄>w©chdog 
lowî
Åhªshﬁd </des¸ùti⁄> <addªssOff£t>0x28</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
LT
</«me> <des¸ùti⁄>A«log w©chdogÜowîÅhªshﬁd</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>12</bôWidth> </fõld> </fõlds> </> <> <«me>
SQR1
</«me> <di•œyName>SQR1</di•œyName> <des¸ùti⁄>ªguœ∏
£quí˚
 1</des¸ùti⁄> <addªssOff£t>0x2C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
L
</«me> <des¸ùti⁄>Reguœ∏ch™√»£quí˚Üígth</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
SQ16
</«me> <des¸ùti⁄>16
th
 c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>
SQ15
</«me> <des¸ùti⁄>15th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>
SQ14
</«me> <des¸ùti⁄>14th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>
SQ13
</«me> <des¸ùti⁄>13th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>5</bôWidth> </fõld> </fõlds> </> <> <«me>
SQR2
</«me> <di•œyName>SQR2</di•œyName> <des¸ùti⁄>ªguœ∏£quí˚ 2</des¸ùti⁄> <addªssOff£t>0x30</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
SQ12
</«me> <des¸ùti⁄>12th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>
SQ11
</«me> <des¸ùti⁄>11th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>
SQ10
</«me> <des¸ùti⁄>10th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>
SQ9
</«me> <des¸ùti⁄>9th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>
SQ8
</«me> <des¸ùti⁄>8th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>
SQ7
</«me> <des¸ùti⁄>7th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>5</bôWidth> </fõld> </fõlds> </> <> <«me>
SQR3
</«me> <di•œyName>SQR3</di•œyName> <des¸ùti⁄>ªguœ∏£quí˚ 3</des¸ùti⁄> <addªssOff£t>0x34</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
SQ6
</«me> <des¸ùti⁄>6th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>
SQ5
</«me> <des¸ùti⁄>5th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>
SQ4
</«me> <des¸ùti⁄>4th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>
SQ3
</«me> <des¸ùti⁄>3
rd
 c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>
SQ2
</«me> <des¸ùti⁄>2
nd
 c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>
SQ1
</«me> <des¸ùti⁄>1
°
 c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>5</bôWidth> </fõld> </fõlds> </> <> <«me>
JSQR
</«me> <di•œyName>JSQR</di•œyName> <des¸ùti⁄>öje˘ed sequí˚ </des¸ùti⁄> <addªssOff£t>0x38</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
JL
</«me> <des¸ùti⁄>Inje˘ed sequí˚Üígth</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
JSQ4
</«me> <des¸ùti⁄>4th c⁄vîsi⁄ i¿öje˘ed sequí˚</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>
JSQ3
</«me> <des¸ùti⁄>3rd c⁄vîsi⁄ i¿öje˘ed sequí˚</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>
JSQ2
</«me> <des¸ùti⁄>2nd c⁄vîsi⁄ i¿öje˘ed sequí˚</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>
JSQ1
</«me> <des¸ùti⁄>1° c⁄vîsi⁄ i¿öje˘ed sequí˚</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>5</bôWidth> </fõld> </fõlds> </> <> <«me>
JDR1
</«me> <di•œyName>JDR1</di•œyName> <des¸ùti⁄>öje˘ed d©®x</des¸ùti⁄> <addªssOff£t>0x3C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
JDATA
</«me> <des¸ùti⁄>Inje˘ed d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
JDR2
</«me> <di•œyName>JDR2</di•œyName> <des¸ùti⁄>öje˘ed d©®x</des¸ùti⁄> <addªssOff£t>0x40</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>JDATA</«me> <des¸ùti⁄>Inje˘ed d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
JDR3
</«me> <di•œyName>JDR3</di•œyName> <des¸ùti⁄>öje˘ed d©®x</des¸ùti⁄> <addªssOff£t>0x44</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>JDATA</«me> <des¸ùti⁄>Inje˘ed d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>
JDR4
</«me> <di•œyName>JDR4</di•œyName> <des¸ùti⁄>öje˘ed d©®x</des¸ùti⁄> <addªssOff£t>0x48</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>JDATA</«me> <des¸ùti⁄>Inje˘ed d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>DR</«me> <di•œyName>DR</di•œyName> <des¸ùti⁄>ªguœ∏d©®</des¸ùti⁄> <addªssOff£t>0x4C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
DATA
</«me> <des¸ùti⁄>Reguœ∏d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> <fõld> <«me>
ADC2DATA
</«me> <des¸ùti⁄>
ADC2
 d©a</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ> <«me>ADC2</«me> <des¸ùti⁄>A«logÅÿdigôÆ c⁄vîãr</des¸ùti⁄> <groupName>ADC</groupName> <ba£Addªss>0x40012800</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <öãºu±> <«me>ADC</«me> <des¸ùti⁄>ADC2 globÆ i¡îru±</des¸ùti⁄> <vÆue>18</vÆue> </öãºu±> <ªgi°îs> <> <«me>SR</«me> <di•œyName>SR</di•œyName> <des¸ùti⁄>°©u†</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>STRT</«me> <des¸ùti⁄>Reguœ∏ch™√»°¨àÊag</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>JSTRT</«me> <des¸ùti⁄>Inje˘ed ch™√»°¨àÊag</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>JEOC</«me> <des¸ùti⁄>Inje˘ed ch™√»íd o‡c⁄vîsi⁄</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>EOC</«me> <des¸ùti⁄>Reguœ∏ch™√»íd o‡c⁄vîsi⁄</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>AWD</«me> <des¸ùti⁄>A«log w©chdog fœg</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>CR1</«me> <di•œyName>CR1</di•œyName> <des¸ùti⁄>c⁄åﬁ 1</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>AWDEN</«me> <des¸ùti⁄>A«log w©chdogÉ«bÀ o¿ªguœ∏ch™√ls</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>JAWDEN</«me> <des¸ùti⁄>A«log w©chdogÉ«bÀ o¿öje˘ed ch™√ls</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>DISCNUM</«me> <des¸ùti⁄>Disc⁄töuou†modêch™√»cou¡</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>JDISCEN</«me> <des¸ùti⁄>Disc⁄töuou†modê⁄ inje˘ed ch™√ls</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>DISCEN</«me> <des¸ùti⁄>Disc⁄töuou†modê⁄Ñeguœ∏ch™√ls</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>JAUTO</«me> <des¸ùti⁄>Autom©i¯öje˘ed grou∞c⁄vîsi⁄</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>AWDSGL</«me> <des¸ùti⁄>E«bÀÅhêw©chdog o¿®sögÀ ch™√»ö sˇ¿mode</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>SCAN</«me> <des¸ùti⁄>Sˇ¿mode</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>JEOCIE</«me> <des¸ùti⁄>I¡îru±É«bÀ öje˘ed ch™√ls</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>AWDIE</«me> <des¸ùti⁄>A«log w©chdog i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>EOCIE</«me> <des¸ùti⁄>I¡îru±É«bÀ EOC</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>AWDCH</«me> <des¸ùti⁄>A«log w©chdog ch™√»£À˘ bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>5</bôWidth> </fõld> </fõlds> </> <> <«me>CR2</«me> <di•œyName>CR2</di•œyName> <des¸ùti⁄>c⁄åﬁ 2</des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>TSVREFE</«me> <des¸ùti⁄>Tem≥øtuª sís‹ánd VREFINTÉ«bÀ</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>SWSTART</«me> <des¸ùti⁄>Sèπ c⁄vîsi⁄ o‡ªguœ∏ch™√ls</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>JSWSTART</«me> <des¸ùti⁄>Sèπ c⁄vîsi⁄ o‡öje˘ed ch™√ls</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>EXTTRIG</«me> <des¸ùti⁄>Exã∫ÆÅriggî c⁄vîsi⁄ modêªguœ∏ch™√ls</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>EXTSEL</«me> <des¸ùti⁄>Exã∫ÆÉvíà£À˘ ªguœ∏group</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>JEXTTRIG</«me> <des¸ùti⁄>Exã∫ÆÅriggî c⁄vîsi⁄ modêöje˘ed ch™√ls</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>JEXTSEL</«me> <des¸ùti⁄>Exã∫ÆÉvíà£À˘ öje˘ed group</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>ALIGN</«me> <des¸ùti⁄>D©®Æignmít</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>DMA</«me> <des¸ùti⁄>Dúe˘ mem‹yác˚s†mode</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>RSTCAL</«me> <des¸ùti⁄>Re£àˇlibøti⁄</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CAL</«me> <des¸ùti⁄>A/D cÆibøti⁄</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CONT</«me> <des¸ùti⁄>C⁄töuou†c⁄vîsi⁄</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>ADON</«me> <des¸ùti⁄>A/D c⁄vîã∏ON / OFF</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>SMPR1</«me> <di•œyName>SMPR1</di•œyName> <des¸ùti⁄>ßm∂êtimê1</des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>SMP10</«me> <des¸ùti⁄>Ch™√»10 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>SMP11</«me> <des¸ùti⁄>Ch™√»11 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>SMP12</«me> <des¸ùti⁄>Ch™√»12 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>SMP13</«me> <des¸ùti⁄>Ch™√»13 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>SMP14</«me> <des¸ùti⁄>Ch™√»14 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>SMP15</«me> <des¸ùti⁄>Ch™√»15 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>SMP16</«me> <des¸ùti⁄>Ch™√»16 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>SMP17</«me> <des¸ùti⁄>Ch™√»17 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>3</bôWidth> </fõld> </fõlds> </> <> <«me>SMPR2</«me> <di•œyName>SMPR2</di•œyName> <des¸ùti⁄>ßm∂êtimê2</des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>SMP0</«me> <des¸ùti⁄>Ch™√»0 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>SMP1</«me> <des¸ùti⁄>Ch™√»1 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>SMP2</«me> <des¸ùti⁄>Ch™√»2 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>SMP3</«me> <des¸ùti⁄>Ch™√»3 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>SMP4</«me> <des¸ùti⁄>Ch™√»4 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>SMP5</«me> <des¸ùti⁄>Ch™√»5 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>SMP6</«me> <des¸ùti⁄>Ch™√»6 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>SMP7</«me> <des¸ùti⁄>Ch™√»7 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>SMP8</«me> <des¸ùti⁄>Ch™√»8 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>SMP9</«me> <des¸ùti⁄>Ch™√»9 sam∂êtimê£À˘i⁄</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>3</bôWidth> </fõld> </fõlds> </> <> <«me>JOFR1</«me> <di•œyName>JOFR1</di•œyName> <des¸ùti⁄>öje˘ed ch™√»d©®off£àx</des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>JOFFSET1</«me> <des¸ùti⁄>D©®off£àöje˘ed ch™√»x</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>12</bôWidth> </fõld> </fõlds> </> <> <«me>JOFR2</«me> <di•œyName>JOFR2</di•œyName> <des¸ùti⁄>öje˘ed ch™√»d©®off£àx</des¸ùti⁄> <addªssOff£t>0x18</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>JOFFSET2</«me> <des¸ùti⁄>D©®off£àöje˘ed ch™√»x</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>12</bôWidth> </fõld> </fõlds> </> <> <«me>JOFR3</«me> <di•œyName>JOFR3</di•œyName> <des¸ùti⁄>öje˘ed ch™√»d©®off£àx</des¸ùti⁄> <addªssOff£t>0x1C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>JOFFSET3</«me> <des¸ùti⁄>D©®off£àöje˘ed ch™√»x</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>12</bôWidth> </fõld> </fõlds> </> <> <«me>JOFR4</«me> <di•œyName>JOFR4</di•œyName> <des¸ùti⁄>öje˘ed ch™√»d©®off£àx</des¸ùti⁄> <addªssOff£t>0x20</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>JOFFSET4</«me> <des¸ùti⁄>D©®off£àöje˘ed ch™√»x</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>12</bôWidth> </fõld> </fõlds> </> <> <«me>HTR</«me> <di•œyName>HTR</di•œyName> <des¸ùti⁄>w©chdog highîÅhªshﬁd </des¸ùti⁄> <addªssOff£t>0x24</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000FFF</ª£tVÆue> <fõlds> <fõld> <«me>HT</«me> <des¸ùti⁄>A«log w©chdog highîÅhªshﬁd</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>12</bôWidth> </fõld> </fõlds> </> <> <«me>LTR</«me> <di•œyName>LTR</di•œyName> <des¸ùti⁄>w©chdogÜowîÅhªshﬁd </des¸ùti⁄> <addªssOff£t>0x28</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>LT</«me> <des¸ùti⁄>A«log w©chdogÜowîÅhªshﬁd</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>12</bôWidth> </fõld> </fõlds> </> <> <«me>SQR1</«me> <di•œyName>SQR1</di•œyName> <des¸ùti⁄>ªguœ∏£quí˚ 1</des¸ùti⁄> <addªssOff£t>0x2C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>L</«me> <des¸ùti⁄>Reguœ∏ch™√»£quí˚Üígth</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>SQ16</«me> <des¸ùti⁄>16th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>SQ15</«me> <des¸ùti⁄>15th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>SQ14</«me> <des¸ùti⁄>14th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>SQ13</«me> <des¸ùti⁄>13th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>5</bôWidth> </fõld> </fõlds> </> <> <«me>SQR2</«me> <di•œyName>SQR2</di•œyName> <des¸ùti⁄>ªguœ∏£quí˚ 2</des¸ùti⁄> <addªssOff£t>0x30</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>SQ12</«me> <des¸ùti⁄>12th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>SQ11</«me> <des¸ùti⁄>11th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>SQ10</«me> <des¸ùti⁄>10th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>SQ9</«me> <des¸ùti⁄>9th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>SQ8</«me> <des¸ùti⁄>8th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>SQ7</«me> <des¸ùti⁄>7th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>5</bôWidth> </fõld> </fõlds> </> <> <«me>SQR3</«me> <di•œyName>SQR3</di•œyName> <des¸ùti⁄>ªguœ∏£quí˚ 3</des¸ùti⁄> <addªssOff£t>0x34</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>SQ6</«me> <des¸ùti⁄>6th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>SQ5</«me> <des¸ùti⁄>5th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>SQ4</«me> <des¸ùti⁄>4th c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>SQ3</«me> <des¸ùti⁄>3rd c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>SQ2</«me> <des¸ùti⁄>2nd c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>SQ1</«me> <des¸ùti⁄>1° c⁄vîsi⁄ i¿ªguœ∏£quí˚</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>5</bôWidth> </fõld> </fõlds> </> <> <«me>JSQR</«me> <di•œyName>JSQR</di•œyName> <des¸ùti⁄>öje˘ed sequí˚ </des¸ùti⁄> <addªssOff£t>0x38</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>JL</«me> <des¸ùti⁄>Inje˘ed sequí˚Üígth</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>JSQ4</«me> <des¸ùti⁄>4th c⁄vîsi⁄ i¿öje˘ed sequí˚</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>JSQ3</«me> <des¸ùti⁄>3rd c⁄vîsi⁄ i¿öje˘ed sequí˚</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>JSQ2</«me> <des¸ùti⁄>2nd c⁄vîsi⁄ i¿öje˘ed sequí˚</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>5</bôWidth> </fõld> <fõld> <«me>JSQ1</«me> <des¸ùti⁄>1° c⁄vîsi⁄ i¿öje˘ed sequí˚</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>5</bôWidth> </fõld> </fõlds> </> <> <«me>JDR1</«me> <di•œyName>JDR1</di•œyName> <des¸ùti⁄>öje˘ed d©®x</des¸ùti⁄> <addªssOff£t>0x3C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>JDATA</«me> <des¸ùti⁄>Inje˘ed d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>JDR2</«me> <di•œyName>JDR2</di•œyName> <des¸ùti⁄>öje˘ed d©®x</des¸ùti⁄> <addªssOff£t>0x40</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>JDATA</«me> <des¸ùti⁄>Inje˘ed d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>JDR3</«me> <di•œyName>JDR3</di•œyName> <des¸ùti⁄>öje˘ed d©®x</des¸ùti⁄> <addªssOff£t>0x44</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>JDATA</«me> <des¸ùti⁄>Inje˘ed d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>JDR4</«me> <di•œyName>JDR4</di•œyName> <des¸ùti⁄>öje˘ed d©®x</des¸ùti⁄> <addªssOff£t>0x48</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>JDATA</«me> <des¸ùti⁄>Inje˘ed d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>DR</«me> <di•œyName>DR</di•œyName> <des¸ùti⁄>ªguœ∏d©®</des¸ùti⁄> <addªssOff£t>0x4C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>DATA</«me> <des¸ùti⁄>Reguœ∏d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ dîivedFrom="ADC2"> <«me>ADC3</«me> <ba£Addªss>0x40013C00</ba£Addªss> <öãºu±> <«me>ADC3</«me> <des¸ùti⁄>ADC3 globÆ i¡îru±</des¸ùti⁄> <vÆue>47</vÆue> </öãºu±> </≥rùhîÆ> <≥rùhîÆ> <«me>CAN</«me> <des¸ùti⁄>
C⁄åﬁÀr
 
¨ó
 
√tw‹k
</des¸ùti⁄> <groupName>CAN</groupName> <ba£Addªss>0x40006400</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <öãºu±> <«me>
CAN1_TX
</«me> <des¸ùti⁄>CAN1 TX i¡îru±s</des¸ùti⁄> <vÆue>19</vÆue> </öãºu±> <öãºu±> <«me>
CAN1_RX0
</«me> <des¸ùti⁄>CAN1 
RX0
 i¡îru±s</des¸ùti⁄> <vÆue>20</vÆue> </öãºu±> <öãºu±> <«me>
CAN1_RX1
</«me> <des¸ùti⁄>CAN1 
RX1
 i¡îru±</des¸ùti⁄> <vÆue>21</vÆue> </öãºu±> <öãºu±> <«me>
CAN1_SCE
</«me> <des¸ùti⁄>CAN1 
SCE
 i¡îru±</des¸ùti⁄> <vÆue>22</vÆue> </öãºu±> <ªgi°îs> <> <«me>
CAN_MCR
</«me> <di•œyName>CAN_MCR</di•œyName> <des¸ùti⁄>CAN_MCR</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
DBF
</«me> <des¸ùti⁄>DBF</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RESET
</«me> <des¸ùti⁄>RESET</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TTCM
</«me> <des¸ùti⁄>TTCM</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
ABOM
</«me> <des¸ùti⁄>ABOM</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
AWUM
</«me> <des¸ùti⁄>AWUM</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
NART
</«me> <des¸ùti⁄>NART</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RFLM
</«me> <des¸ùti⁄>RFLM</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TXFP
</«me> <des¸ùti⁄>TXFP</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SLEEP
</«me> <des¸ùti⁄>SLEEP</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
INRQ
</«me> <des¸ùti⁄>INRQ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_MSR
</«me> <di•œyName>CAN_MSR</di•œyName> <des¸ùti⁄>CAN_MSR</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>RX</«me> <des¸ùti⁄>RX</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
SAMP
</«me> <des¸ùti⁄>SAMP</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
RXM
</«me> <des¸ùti⁄>RXM</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
TXM
</«me> <des¸ùti⁄>TXM</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
SLAKI
</«me> <des¸ùti⁄>SLAKI</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
WKUI
</«me> <des¸ùti⁄>WKUI</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
ERRI
</«me> <des¸ùti⁄>ERRI</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
SLAK
</«me> <des¸ùti⁄>SLAK</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
INAK
</«me> <des¸ùti⁄>INAK</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> </fõlds> </> <> <«me>
CAN_TSR
</«me> <di•œyName>CAN_TSR</di•œyName> <des¸ùti⁄>CAN_TSR</des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
LOW2
</«me> <des¸ùti⁄>
Lowe°
 
¥i‹ôy
 fœg 
maûbox
 2</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
LOW1
</«me> <des¸ùti⁄>Lowe°Öri‹ôy fœg maûbox 1</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
LOW0
</«me> <des¸ùti⁄>Lowe°Öri‹ôy fœg maûbox 0</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
TME2
</«me> <des¸ùti⁄>Lowe°Öri‹ôy fœg maûbox 2</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
TME1
</«me> <des¸ùti⁄>Lowe°Öri‹ôy fœg maûbox 1</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
TME0
</«me> <des¸ùti⁄>Lowe°Öri‹ôy fœg maûbox 0</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
CODE
</«me> <des¸ùti⁄>CODE</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>2</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
ABRQ2
</«me> <des¸ùti⁄>ABRQ2</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
TERR2
</«me> <des¸ùti⁄>TERR2</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
ALST2
</«me> <des¸ùti⁄>ALST2</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
TXOK2
</«me> <des¸ùti⁄>TXOK2</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
RQCP2
</«me> <des¸ùti⁄>RQCP2</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
ABRQ1
</«me> <des¸ùti⁄>ABRQ1</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
TERR1
</«me> <des¸ùti⁄>TERR1</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
ALST1
</«me> <des¸ùti⁄>ALST1</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
TXOK1
</«me> <des¸ùti⁄>TXOK1</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
RQCP1
</«me> <des¸ùti⁄>RQCP1</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
ABRQ0
</«me> <des¸ùti⁄>ABRQ0</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
TERR0
</«me> <des¸ùti⁄>TERR0</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
ALST0
</«me> <des¸ùti⁄>ALST0</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
TXOK0
</«me> <des¸ùti⁄>TXOK0</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
RQCP0
</«me> <des¸ùti⁄>RQCP0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> </fõlds> </> <> <«me>
CAN_RF0R
</«me> <di•œyName>CAN_RF0R</di•œyName> <des¸ùti⁄>CAN_RF0R</des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
RFOM0
</«me> <des¸ùti⁄>RFOM0</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
FOVR0
</«me> <des¸ùti⁄>FOVR0</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
FULL0
</«me> <des¸ùti⁄>FULL0</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
FMP0
</«me> <des¸ùti⁄>FMP0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>2</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> </fõlds> </> <> <«me>
CAN_RF1R
</«me> <di•œyName>CAN_RF1R</di•œyName> <des¸ùti⁄>CAN_RF1R</des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
RFOM1
</«me> <des¸ùti⁄>RFOM1</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
FOVR1
</«me> <des¸ùti⁄>FOVR1</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
FULL1
</«me> <des¸ùti⁄>FULL1</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
FMP1
</«me> <des¸ùti⁄>FMP1</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>2</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> </fõlds> </> <> <«me>
CAN_IER
</«me> <di•œyName>CAN_IER</di•œyName> <des¸ùti⁄>CAN_IER</des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
SLKIE
</«me> <des¸ùti⁄>SLKIE</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
WKUIE
</«me> <des¸ùti⁄>WKUIE</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>ERRIE</«me> <des¸ùti⁄>ERRIE</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
LECIE
</«me> <des¸ùti⁄>LECIE</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BOFIE
</«me> <des¸ùti⁄>BOFIE</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
EPVIE
</«me> <des¸ùti⁄>EPVIE</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
EWGIE
</«me> <des¸ùti⁄>EWGIE</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FOVIE1
</«me> <des¸ùti⁄>FOVIE1</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FFIE1
</«me> <des¸ùti⁄>FFIE1</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FMPIE1
</«me> <des¸ùti⁄>FMPIE1</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FOVIE0
</«me> <des¸ùti⁄>FOVIE0</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FFIE0
</«me> <des¸ùti⁄>FFIE0</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FMPIE0
</«me> <des¸ùti⁄>FMPIE0</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TMEIE
</«me> <des¸ùti⁄>TMEIE</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_ESR
</«me> <di•œyName>CAN_ESR</di•œyName> <des¸ùti⁄>CAN_ESR</des¸ùti⁄> <addªssOff£t>0x18</addªssOff£t> <size>0x20</size> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
REC
</«me> <des¸ùti⁄>REC</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
TEC
</«me> <des¸ùti⁄>TEC</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
LEC
</«me> <des¸ùti⁄>LEC</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>3</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
BOFF
</«me> <des¸ùti⁄>BOFF</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
EPVF
</«me> <des¸ùti⁄>EPVF</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>
EWGF
</«me> <des¸ùti⁄>EWGF</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> </fõlds> </> <> <«me>
CAN_BTR
</«me> <di•œyName>CAN_BTR</di•œyName> <des¸ùti⁄>CAN_BTR</des¸ùti⁄> <addªssOff£t>0x1C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
SILM
</«me> <des¸ùti⁄>SILM</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
LBKM
</«me> <des¸ùti⁄>LBKM</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SJW
</«me> <des¸ùti⁄>SJW</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
TS2
</«me> <des¸ùti⁄>TS2</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
TS1
</«me> <des¸ùti⁄>TS1</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
BRP
</«me> <des¸ùti⁄>BRP</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>10</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_TI0R
</«me> <di•œyName>CAN_TI0R</di•œyName> <des¸ùti⁄>CAN_TI0R</des¸ùti⁄> <addªssOff£t>0x180</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
STID
</«me> <des¸ùti⁄>STID</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>11</bôWidth> </fõld> <fõld> <«me>
EXID
</«me> <des¸ùti⁄>EXID</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>18</bôWidth> </fõld> <fõld> <«me>
IDE
</«me> <des¸ùti⁄>IDE</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RTR
</«me> <des¸ùti⁄>RTR</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TXRQ
</«me> <des¸ùti⁄>TXRQ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_TDT0R
</«me> <di•œyName>CAN_TDT0R</di•œyName> <des¸ùti⁄>CAN_TDT0R</des¸ùti⁄> <addªssOff£t>0x184</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
TIME
</«me> <des¸ùti⁄>TIME</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>16</bôWidth> </fõld> <fõld> <«me>
TGT
</«me> <des¸ùti⁄>TGT</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DLC
</«me> <des¸ùti⁄>DLC</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_TDL0R
</«me> <di•œyName>CAN_TDL0R</di•œyName> <des¸ùti⁄>CAN_TDL0R</des¸ùti⁄> <addªssOff£t>0x188</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
DATA3
</«me> <des¸ùti⁄>DATA3</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>
DATA2
</«me> <des¸ùti⁄>DATA2</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>
DATA1
</«me> <des¸ùti⁄>DATA1</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>
DATA0
</«me> <des¸ùti⁄>DATA0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_TDH0R
</«me> <di•œyName>CAN_TDH0R</di•œyName> <des¸ùti⁄>CAN_TDH0R</des¸ùti⁄> <addªssOff£t>0x18C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
DATA7
</«me> <des¸ùti⁄>DATA7</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>
DATA6
</«me> <des¸ùti⁄>DATA6</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>
DATA5
</«me> <des¸ùti⁄>DATA5</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>
DATA4
</«me> <des¸ùti⁄>DATA4</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_TI1R
</«me> <di•œyName>CAN_TI1R</di•œyName> <des¸ùti⁄>CAN_TI1R</des¸ùti⁄> <addªssOff£t>0x190</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>STID</«me> <des¸ùti⁄>STID</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>11</bôWidth> </fõld> <fõld> <«me>EXID</«me> <des¸ùti⁄>EXID</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>18</bôWidth> </fõld> <fõld> <«me>IDE</«me> <des¸ùti⁄>IDE</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>RTR</«me> <des¸ùti⁄>RTR</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TXRQ</«me> <des¸ùti⁄>TXRQ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_TDT1R
</«me> <di•œyName>CAN_TDT1R</di•œyName> <des¸ùti⁄>CAN_TDT1R</des¸ùti⁄> <addªssOff£t>0x194</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>TIME</«me> <des¸ùti⁄>TIME</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>16</bôWidth> </fõld> <fõld> <«me>TGT</«me> <des¸ùti⁄>TGT</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>DLC</«me> <des¸ùti⁄>DLC</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_TDL1R
</«me> <di•œyName>CAN_TDL1R</di•œyName> <des¸ùti⁄>CAN_TDL1R</des¸ùti⁄> <addªssOff£t>0x198</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>DATA3</«me> <des¸ùti⁄>DATA3</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DATA2</«me> <des¸ùti⁄>DATA2</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DATA1</«me> <des¸ùti⁄>DATA1</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DATA0</«me> <des¸ùti⁄>DATA0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_TDH1R
</«me> <di•œyName>CAN_TDH1R</di•œyName> <des¸ùti⁄>CAN_TDH1R</des¸ùti⁄> <addªssOff£t>0x19C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>DATA7</«me> <des¸ùti⁄>DATA7</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DATA6</«me> <des¸ùti⁄>DATA6</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DATA5</«me> <des¸ùti⁄>DATA5</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DATA4</«me> <des¸ùti⁄>DATA4</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_TI2R
</«me> <di•œyName>CAN_TI2R</di•œyName> <des¸ùti⁄>CAN_TI2R</des¸ùti⁄> <addªssOff£t>0x1A0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>STID</«me> <des¸ùti⁄>STID</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>11</bôWidth> </fõld> <fõld> <«me>EXID</«me> <des¸ùti⁄>EXID</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>18</bôWidth> </fõld> <fõld> <«me>IDE</«me> <des¸ùti⁄>IDE</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>RTR</«me> <des¸ùti⁄>RTR</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TXRQ</«me> <des¸ùti⁄>TXRQ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_TDT2R
</«me> <di•œyName>CAN_TDT2R</di•œyName> <des¸ùti⁄>CAN_TDT2R</des¸ùti⁄> <addªssOff£t>0x1A4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>TIME</«me> <des¸ùti⁄>TIME</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>16</bôWidth> </fõld> <fõld> <«me>TGT</«me> <des¸ùti⁄>TGT</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>DLC</«me> <des¸ùti⁄>DLC</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_TDL2R
</«me> <di•œyName>CAN_TDL2R</di•œyName> <des¸ùti⁄>CAN_TDL2R</des¸ùti⁄> <addªssOff£t>0x1A8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>DATA3</«me> <des¸ùti⁄>DATA3</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DATA2</«me> <des¸ùti⁄>DATA2</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DATA1</«me> <des¸ùti⁄>DATA1</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DATA0</«me> <des¸ùti⁄>DATA0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_TDH2R
</«me> <di•œyName>CAN_TDH2R</di•œyName> <des¸ùti⁄>CAN_TDH2R</des¸ùti⁄> <addªssOff£t>0x1AC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>DATA7</«me> <des¸ùti⁄>DATA7</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DATA6</«me> <des¸ùti⁄>DATA6</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DATA5</«me> <des¸ùti⁄>DATA5</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DATA4</«me> <des¸ùti⁄>DATA4</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_RI0R
</«me> <di•œyName>CAN_RI0R</di•œyName> <des¸ùti⁄>CAN_RI0R</des¸ùti⁄> <addªssOff£t>0x1B0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>STID</«me> <des¸ùti⁄>STID</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>11</bôWidth> </fõld> <fõld> <«me>EXID</«me> <des¸ùti⁄>EXID</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>18</bôWidth> </fõld> <fõld> <«me>IDE</«me> <des¸ùti⁄>IDE</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>RTR</«me> <des¸ùti⁄>RTR</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_RDT0R
</«me> <di•œyName>CAN_RDT0R</di•œyName> <des¸ùti⁄>CAN_RDT0R</des¸ùti⁄> <addªssOff£t>0x1B4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>TIME</«me> <des¸ùti⁄>TIME</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>16</bôWidth> </fõld> <fõld> <«me>
FMI
</«me> <des¸ùti⁄>FMI</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DLC</«me> <des¸ùti⁄>DLC</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_RDL0R
</«me> <di•œyName>CAN_RDL0R</di•œyName> <des¸ùti⁄>CAN_RDL0R</des¸ùti⁄> <addªssOff£t>0x1B8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>DATA3</«me> <des¸ùti⁄>DATA3</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DATA2</«me> <des¸ùti⁄>DATA2</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DATA1</«me> <des¸ùti⁄>DATA1</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DATA0</«me> <des¸ùti⁄>DATA0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_RDH0R
</«me> <di•œyName>CAN_RDH0R</di•œyName> <des¸ùti⁄>CAN_RDH0R</des¸ùti⁄> <addªssOff£t>0x1BC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>DATA7</«me> <des¸ùti⁄>DATA7</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DATA6</«me> <des¸ùti⁄>DATA6</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DATA5</«me> <des¸ùti⁄>DATA5</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DATA4</«me> <des¸ùti⁄>DATA4</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_RI1R
</«me> <di•œyName>CAN_RI1R</di•œyName> <des¸ùti⁄>CAN_RI1R</des¸ùti⁄> <addªssOff£t>0x1C0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>STID</«me> <des¸ùti⁄>STID</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>11</bôWidth> </fõld> <fõld> <«me>EXID</«me> <des¸ùti⁄>EXID</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>18</bôWidth> </fõld> <fõld> <«me>IDE</«me> <des¸ùti⁄>IDE</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>RTR</«me> <des¸ùti⁄>RTR</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_RDT1R
</«me> <di•œyName>CAN_RDT1R</di•œyName> <des¸ùti⁄>CAN_RDT1R</des¸ùti⁄> <addªssOff£t>0x1C4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>TIME</«me> <des¸ùti⁄>TIME</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>16</bôWidth> </fõld> <fõld> <«me>FMI</«me> <des¸ùti⁄>FMI</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DLC</«me> <des¸ùti⁄>DLC</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_RDL1R
</«me> <di•œyName>CAN_RDL1R</di•œyName> <des¸ùti⁄>CAN_RDL1R</des¸ùti⁄> <addªssOff£t>0x1C8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>DATA3</«me> <des¸ùti⁄>DATA3</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DATA2</«me> <des¸ùti⁄>DATA2</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DATA1</«me> <des¸ùti⁄>DATA1</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DATA0</«me> <des¸ùti⁄>DATA0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_RDH1R
</«me> <di•œyName>CAN_RDH1R</di•œyName> <des¸ùti⁄>CAN_RDH1R</des¸ùti⁄> <addªssOff£t>0x1CC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>DATA7</«me> <des¸ùti⁄>DATA7</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DATA6</«me> <des¸ùti⁄>DATA6</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DATA5</«me> <des¸ùti⁄>DATA5</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DATA4</«me> <des¸ùti⁄>DATA4</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_FMR
</«me> <di•œyName>CAN_FMR</di•œyName> <des¸ùti⁄>CAN_FMR</des¸ùti⁄> <addªssOff£t>0x200</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
FINIT
</«me> <des¸ùti⁄>FINIT</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_FM1R
</«me> <di•œyName>CAN_FM1R</di•œyName> <des¸ùti⁄>CAN_FM1R</des¸ùti⁄> <addªssOff£t>0x204</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
FBM0
</«me> <des¸ùti⁄>
Fûãr
 mode</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FBM1
</«me> <des¸ùti⁄>Fûã∏mode</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FBM2
</«me> <des¸ùti⁄>Fûã∏mode</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FBM3
</«me> <des¸ùti⁄>Fûã∏mode</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FBM4
</«me> <des¸ùti⁄>Fûã∏mode</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FBM5
</«me> <des¸ùti⁄>Fûã∏mode</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FBM6
</«me> <des¸ùti⁄>Fûã∏mode</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FBM7
</«me> <des¸ùti⁄>Fûã∏mode</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FBM8
</«me> <des¸ùti⁄>Fûã∏mode</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FBM9
</«me> <des¸ùti⁄>Fûã∏mode</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FBM10
</«me> <des¸ùti⁄>Fûã∏mode</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FBM11
</«me> <des¸ùti⁄>Fûã∏mode</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FBM12
</«me> <des¸ùti⁄>Fûã∏mode</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FBM13
</«me> <des¸ùti⁄>Fûã∏mode</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_FS1R
</«me> <di•œyName>CAN_FS1R</di•œyName> <des¸ùti⁄>CAN_FS1R</des¸ùti⁄> <addªssOff£t>0x20C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
FSC0
</«me> <des¸ùti⁄>Fûã∏
sˇÀ
 c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FSC1
</«me> <des¸ùti⁄>Fûã∏sˇÀ c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FSC2
</«me> <des¸ùti⁄>Fûã∏sˇÀ c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FSC3
</«me> <des¸ùti⁄>Fûã∏sˇÀ c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FSC4
</«me> <des¸ùti⁄>Fûã∏sˇÀ c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FSC5
</«me> <des¸ùti⁄>Fûã∏sˇÀ c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FSC6
</«me> <des¸ùti⁄>Fûã∏sˇÀ c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FSC7
</«me> <des¸ùti⁄>Fûã∏sˇÀ c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FSC8
</«me> <des¸ùti⁄>Fûã∏sˇÀ c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FSC9
</«me> <des¸ùti⁄>Fûã∏sˇÀ c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FSC10
</«me> <des¸ùti⁄>Fûã∏sˇÀ c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FSC11
</«me> <des¸ùti⁄>Fûã∏sˇÀ c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FSC12
</«me> <des¸ùti⁄>Fûã∏sˇÀ c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FSC13
</«me> <des¸ùti⁄>Fûã∏sˇÀ c⁄figuøti⁄</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_FFA1R
</«me> <di•œyName>CAN_FFA1R</di•œyName> <des¸ùti⁄>CAN_FFA1R</des¸ùti⁄> <addªssOff£t>0x214</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
FFA0
</«me> <des¸ùti⁄>Fûã∏FIFO 
assignmít
 fûã∏0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FFA1
</«me> <des¸ùti⁄>Fûã∏FIFOássignmíàfûã∏1</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FFA2
</«me> <des¸ùti⁄>Fûã∏FIFOássignmíàfûã∏2</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FFA3
</«me> <des¸ùti⁄>Fûã∏FIFOássignmíàfûã∏3</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FFA4
</«me> <des¸ùti⁄>Fûã∏FIFOássignmíàfûã∏4</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FFA5
</«me> <des¸ùti⁄>Fûã∏FIFOássignmíàfûã∏5</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FFA6
</«me> <des¸ùti⁄>Fûã∏FIFOássignmíàfûã∏6</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FFA7
</«me> <des¸ùti⁄>Fûã∏FIFOássignmíàfûã∏7</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FFA8
</«me> <des¸ùti⁄>Fûã∏FIFOássignmíàfûã∏8</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FFA9
</«me> <des¸ùti⁄>Fûã∏FIFOássignmíàfûã∏9</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FFA10
</«me> <des¸ùti⁄>Fûã∏FIFOássignmíàfûã∏10</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FFA11
</«me> <des¸ùti⁄>Fûã∏FIFOássignmíàfûã∏11</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FFA12
</«me> <des¸ùti⁄>Fûã∏FIFOássignmíàfûã∏12</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FFA13
</«me> <des¸ùti⁄>Fûã∏FIFOássignmíàfûã∏13</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
CAN_FA1R
</«me> <di•œyName>CAN_FA1R</di•œyName> <des¸ùti⁄>CAN_FA1R</des¸ùti⁄> <addªssOff£t>0x21C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
FACT0
</«me> <des¸ùti⁄>Fûã∏a˘ive</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FACT1
</«me> <des¸ùti⁄>Fûã∏a˘ive</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FACT2
</«me> <des¸ùti⁄>Fûã∏a˘ive</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FACT3
</«me> <des¸ùti⁄>Fûã∏a˘ive</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FACT4
</«me> <des¸ùti⁄>Fûã∏a˘ive</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FACT5
</«me> <des¸ùti⁄>Fûã∏a˘ive</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FACT6
</«me> <des¸ùti⁄>Fûã∏a˘ive</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FACT7
</«me> <des¸ùti⁄>Fûã∏a˘ive</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FACT8
</«me> <des¸ùti⁄>Fûã∏a˘ive</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FACT9
</«me> <des¸ùti⁄>Fûã∏a˘ive</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FACT10
</«me> <des¸ùti⁄>Fûã∏a˘ive</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FACT11
</«me> <des¸ùti⁄>Fûã∏a˘ive</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FACT12
</«me> <des¸ùti⁄>Fûã∏a˘ive</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FACT13
</«me> <des¸ùti⁄>Fûã∏a˘ive</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F0R1
</«me> <di•œyName>F0R1</di•œyName> <des¸ùti⁄>Fûã∏
b™k
 0 1</des¸ùti⁄> <addªssOff£t>0x240</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
FB0
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB1
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB2
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB3
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB4
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB5
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB6
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB7
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB8
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB9
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB10
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB11
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB12
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB13
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB14
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB15
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB16
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB17
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB18
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB19
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB20
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB21
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB22
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB23
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB24
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB25
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB26
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB27
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB28
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB29
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB30
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
FB31
</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F0R2
</«me> <di•œyName>F0R2</di•œyName> <des¸ùti⁄>Fûã∏b™k 0 2</des¸ùti⁄> <addªssOff£t>0x244</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F1R1
</«me> <di•œyName>F1R1</di•œyName> <des¸ùti⁄>Fûã∏b™k 1 1</des¸ùti⁄> <addªssOff£t>0x248</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F1R2
</«me> <di•œyName>F1R2</di•œyName> <des¸ùti⁄>Fûã∏b™k 1 2</des¸ùti⁄> <addªssOff£t>0x24C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F2R1
</«me> <di•œyName>F2R1</di•œyName> <des¸ùti⁄>Fûã∏b™k 2 1</des¸ùti⁄> <addªssOff£t>0x250</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F2R2
</«me> <di•œyName>F2R2</di•œyName> <des¸ùti⁄>Fûã∏b™k 2 2</des¸ùti⁄> <addªssOff£t>0x254</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F3R1
</«me> <di•œyName>F3R1</di•œyName> <des¸ùti⁄>Fûã∏b™k 3 1</des¸ùti⁄> <addªssOff£t>0x258</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F3R2
</«me> <di•œyName>F3R2</di•œyName> <des¸ùti⁄>Fûã∏b™k 3 2</des¸ùti⁄> <addªssOff£t>0x25C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F4R1
</«me> <di•œyName>F4R1</di•œyName> <des¸ùti⁄>Fûã∏b™k 4 1</des¸ùti⁄> <addªssOff£t>0x260</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F4R2
</«me> <di•œyName>F4R2</di•œyName> <des¸ùti⁄>Fûã∏b™k 4 2</des¸ùti⁄> <addªssOff£t>0x264</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F5R1
</«me> <di•œyName>F5R1</di•œyName> <des¸ùti⁄>Fûã∏b™k 5 1</des¸ùti⁄> <addªssOff£t>0x268</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F5R2
</«me> <di•œyName>F5R2</di•œyName> <des¸ùti⁄>Fûã∏b™k 5 2</des¸ùti⁄> <addªssOff£t>0x26C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F6R1
</«me> <di•œyName>F6R1</di•œyName> <des¸ùti⁄>Fûã∏b™k 6 1</des¸ùti⁄> <addªssOff£t>0x270</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F6R2
</«me> <di•œyName>F6R2</di•œyName> <des¸ùti⁄>Fûã∏b™k 6 2</des¸ùti⁄> <addªssOff£t>0x274</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F7R1
</«me> <di•œyName>F7R1</di•œyName> <des¸ùti⁄>Fûã∏b™k 7 1</des¸ùti⁄> <addªssOff£t>0x278</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F7R2
</«me> <di•œyName>F7R2</di•œyName> <des¸ùti⁄>Fûã∏b™k 7 2</des¸ùti⁄> <addªssOff£t>0x27C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F8R1
</«me> <di•œyName>F8R1</di•œyName> <des¸ùti⁄>Fûã∏b™k 8 1</des¸ùti⁄> <addªssOff£t>0x280</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F8R2
</«me> <di•œyName>F8R2</di•œyName> <des¸ùti⁄>Fûã∏b™k 8 2</des¸ùti⁄> <addªssOff£t>0x284</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F9R1
</«me> <di•œyName>F9R1</di•œyName> <des¸ùti⁄>Fûã∏b™k 9 1</des¸ùti⁄> <addªssOff£t>0x288</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F9R2
</«me> <di•œyName>F9R2</di•œyName> <des¸ùti⁄>Fûã∏b™k 9 2</des¸ùti⁄> <addªssOff£t>0x28C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F10R1
</«me> <di•œyName>F10R1</di•œyName> <des¸ùti⁄>Fûã∏b™k 10 1</des¸ùti⁄> <addªssOff£t>0x290</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F10R2
</«me> <di•œyName>F10R2</di•œyName> <des¸ùti⁄>Fûã∏b™k 10 2</des¸ùti⁄> <addªssOff£t>0x294</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F11R1
</«me> <di•œyName>F11R1</di•œyName> <des¸ùti⁄>Fûã∏b™k 11 1</des¸ùti⁄> <addªssOff£t>0x298</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F11R2
</«me> <di•œyName>F11R2</di•œyName> <des¸ùti⁄>Fûã∏b™k 11 2</des¸ùti⁄> <addªssOff£t>0x29C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F12R1
</«me> <di•œyName>F12R1</di•œyName> <des¸ùti⁄>Fûã∏b™k 4 1</des¸ùti⁄> <addªssOff£t>0x2A0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F12R2
</«me> <di•œyName>F12R2</di•œyName> <des¸ùti⁄>Fûã∏b™k 12 2</des¸ùti⁄> <addªssOff£t>0x2A4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F13R1
</«me> <di•œyName>F13R1</di•œyName> <des¸ùti⁄>Fûã∏b™k 13 1</des¸ùti⁄> <addªssOff£t>0x2A8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
F13R2
</«me> <di•œyName>F13R2</di•œyName> <des¸ùti⁄>Fûã∏b™k 13 2</des¸ùti⁄> <addªssOff£t>0x2AC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>FB0</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB1</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB2</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB3</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB4</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB5</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB6</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB7</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB8</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB9</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB10</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB11</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB12</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB13</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB14</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB15</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB16</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB17</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB18</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB19</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB20</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB21</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB22</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB23</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>23</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB24</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB25</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>25</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB26</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>26</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB27</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>27</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB28</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB29</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>29</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB30</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>30</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>FB31</«me> <des¸ùti⁄>Fûã∏bôs</des¸ùti⁄> <bôOff£t>31</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ> <«me>DAC</«me> <des¸ùti⁄>
DigôÆ
Åÿ
™Æog
 c⁄vîãr</des¸ùti⁄> <groupName>DAC</groupName> <ba£Addªss>0x40007400</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <ªgi°îs> <> <«me>CR</«me> <di•œyName>CR</di•œyName> <des¸ùti⁄>C⁄åﬁ (
DAC_CR
)</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
EN1
</«me> <des¸ùti⁄>DAC 
ch™√l1
É«bÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BOFF1
</«me> <des¸ùti⁄>DAC ch™√l1 ouçuàbuf„∏dißbÀ</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TEN1
</«me> <des¸ùti⁄>DAC ch™√l1ÅriggîÉ«bÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TSEL1
</«me> <des¸ùti⁄>DAC ch™√l1Åriggî sñe˘i⁄</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
WAVE1
</«me> <des¸ùti⁄>DAC ch™√l1 
noi£
/
åüngÀ
 
wave
 gíî©i⁄É«bÀ</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
MAMP1
</«me> <des¸ùti⁄>DAC ch™√l1 mask/
am∂ôude
 
£À˘‹
</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
DMAEN1
</«me> <des¸ùti⁄>DAC ch™√l1 DMAÉ«bÀ</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
EN2
</«me> <des¸ùti⁄>DAC 
ch™√l2
É«bÀ</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
BOFF2
</«me> <des¸ùti⁄>DAC ch™√l2 ouçuàbuf„∏dißbÀ</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TEN2
</«me> <des¸ùti⁄>DAC ch™√l2ÅriggîÉ«bÀ</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TSEL2
</«me> <des¸ùti⁄>DAC ch™√l2Åriggî sñe˘i⁄</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>3</bôWidth> </fõld> <fõld> <«me>
WAVE2
</«me> <des¸ùti⁄>DAC ch™√l2Çoi£/åüngÀ wavêgíî©i⁄É«bÀ</des¸ùti⁄> <bôOff£t>22</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
MAMP2
</«me> <des¸ùti⁄>DAC ch™√l2 mask/am∂ôudê£À˘‹</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
DMAEN2
</«me> <des¸ùti⁄>DAC ch™√l2 DMAÉ«bÀ</des¸ùti⁄> <bôOff£t>28</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
SWTRIGR
</«me> <di•œyName>SWTRIGR</di•œyName> <des¸ùti⁄>DAC so·w¨êåiggî (
DAC_SWTRIGR
)</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>wrôe-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
SWTRIG1
</«me> <des¸ùti⁄>DAC ch™√l1 so·w¨êåiggî</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
SWTRIG2
</«me> <des¸ùti⁄>DAC ch™√l2 so·w¨êåiggî</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
DHR12R1
</«me> <di•œyName>DHR12R1</di•œyName> <des¸ùti⁄>DAC ch™√l1 12-bô 
right
-Æig√d d©®
hﬁdög
 (
DAC_DHR12R1
)</des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
DACC1DHR
</«me> <des¸ùti⁄>DAC ch™√l1 12-bôÑight-Æig√d d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>12</bôWidth> </fõld> </fõlds> </> <> <«me>
DHR12L1
</«me> <di•œyName>DHR12L1</di•œyName> <des¸ùti⁄>DAC ch™√l1 12-bô 
À·
álig√d d©®hﬁdög (
DAC_DHR12L1
)</des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>DACC1DHR</«me> <des¸ùti⁄>DAC ch™√l1 12-bôÜe·-Æig√d d©a</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>12</bôWidth> </fõld> </fõlds> </> <> <«me>
DHR8R1
</«me> <di•œyName>DHR8R1</di•œyName> <des¸ùti⁄>DAC ch™√l1 8-bôÑighàÆig√d d©®hﬁdög (
DAC_DHR8R1
)</des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>DACC1DHR</«me> <des¸ùti⁄>DAC ch™√l1 8-bôÑight-Æig√d d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
DHR12R2
</«me> <di•œyName>DHR12R2</di•œyName> <des¸ùti⁄>DAC ch™√l2 12-bôÑighàÆig√d d©®hﬁdög (
DAC_DHR12R2
)</des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
DACC2DHR
</«me> <des¸ùti⁄>DAC ch™√l2 12-bôÑight-Æig√d d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>12</bôWidth> </fõld> </fõlds> </> <> <«me>
DHR12L2
</«me> <di•œyName>DHR12L2</di•œyName> <des¸ùti⁄>DAC ch™√l2 12-bôÜe·álig√d d©®hﬁdög (
DAC_DHR12L2
)</des¸ùti⁄> <addªssOff£t>0x18</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>DACC2DHR</«me> <des¸ùti⁄>DAC ch™√l2 12-bôÜe·-Æig√d d©a</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>12</bôWidth> </fõld> </fõlds> </> <> <«me>
DHR8R2
</«me> <di•œyName>DHR8R2</di•œyName> <des¸ùti⁄>DAC ch™√l2 8-bôÑight-Æig√d d©®hﬁdög (
DAC_DHR8R2
)</des¸ùti⁄> <addªssOff£t>0x1C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>DACC2DHR</«me> <des¸ùti⁄>DAC ch™√l2 8-bôÑight-Æig√d d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
DHR12RD
</«me> <di•œyName>DHR12RD</di•œyName> <des¸ùti⁄>DuÆ DAC 12-bôÑight-Æig√d d©®hﬁdög (
DAC_DHR12RD
), 
	gBôs
 31:28 
Re£rved
, Bô†15:12 Re£rved</des¸ùti⁄> <addªssOff£t>0x20</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>DACC1DHR</«me> <des¸ùti⁄>DAC ch™√l1 12-bôÑight-Æig√d d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>12</bôWidth> </fõld> <fõld> <«me>DACC2DHR</«me> <des¸ùti⁄>DAC ch™√l2 12-bôÑight-Æig√d d©a</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>12</bôWidth> </fõld> </fõlds> </> <> <«me>
DHR12LD
</«me> <di•œyName>DHR12LD</di•œyName> <des¸ùti⁄>
DUAL
 DAC 12-bôÜe·álig√d d©®hﬁdög (
DAC_DHR12LD
), Bô†19:16 Re£rved, Bô†3:0 Re£rved</des¸ùti⁄> <addªssOff£t>0x24</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>DACC1DHR</«me> <des¸ùti⁄>DAC ch™√l1 12-bôÜe·-Æig√d d©a</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>12</bôWidth> </fõld> <fõld> <«me>DACC2DHR</«me> <des¸ùti⁄>DAC ch™√l2 12-bôÑight-Æig√d d©a</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>12</bôWidth> </fõld> </fõlds> </> <> <«me>
DHR8RD
</«me> <di•œyName>DHR8RD</di•œyName> <des¸ùti⁄>DUAL DAC 8-bôÑighàÆig√d d©®hﬁdög (
DAC_DHR8RD
), Bô†31:16 Re£rved</des¸ùti⁄> <addªssOff£t>0x28</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>DACC1DHR</«me> <des¸ùti⁄>DAC ch™√l1 8-bôÑight-Æig√d d©a</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>DACC2DHR</«me> <des¸ùti⁄>DAC ch™√l2 8-bôÑight-Æig√d d©a</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
DOR1
</«me> <di•œyName>DOR1</di•œyName> <des¸ùti⁄>DAC ch™√l1 d©®ouçuà(
DAC_DOR1
)</des¸ùti⁄> <addªssOff£t>0x2C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
DACC1DOR
</«me> <des¸ùti⁄>DAC ch™√l1 d©®ouçut</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>12</bôWidth> </fõld> </fõlds> </> <> <«me>
DOR2
</«me> <di•œyName>DOR2</di•œyName> <des¸ùti⁄>DAC ch™√l2 d©®ouçuà(
DAC_DOR2
)</des¸ùti⁄> <addªssOff£t>0x30</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
DACC2DOR
</«me> <des¸ùti⁄>DAC ch™√l2 d©®ouçut</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>12</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ> <«me>
DBG
</«me> <des¸ùti⁄>
Debug
 
suµ‹t
</des¸ùti⁄> <groupName>DBG</groupName> <ba£Addªss>0xE0042000</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <ªgi°îs> <> <«me>
IDCODE
</«me> <di•œyName>IDCODE</di•œyName> <des¸ùti⁄>
DBGMCU_IDCODE
</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x0</ª£tVÆue> <fõlds> <fõld> <«me>
DEV_ID
</«me> <des¸ùti⁄>DEV_ID</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>12</bôWidth> </fõld> <fõld> <«me>
REV_ID
</«me> <des¸ùti⁄>REV_ID</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>16</bôWidth> </fõld> </fõlds> </> <> <«me>CR</«me> <di•œyName>CR</di•œyName> <des¸ùti⁄>
DBGMCU_CR
</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0</ª£tVÆue> <fõlds> <fõld> <«me>
DBG_SLEEP
</«me> <des¸ùti⁄>DBG_SLEEP</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DBG_STOP
</«me> <des¸ùti⁄>DBG_STOP</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DBG_STANDBY
</«me> <des¸ùti⁄>DBG_STANDBY</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TRACE_IOEN
</«me> <des¸ùti⁄>TRACE_IOEN</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
TRACE_MODE
</«me> <des¸ùti⁄>TRACE_MODE</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
DBG_IWDG_STOP
</«me> <des¸ùti⁄>DBG_IWDG_STOP</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DBG_WWDG_STOP
</«me> <des¸ùti⁄>DBG_WWDG_STOP</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DBG_TIM1_STOP
</«me> <des¸ùti⁄>DBG_TIM1_STOP</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DBG_TIM2_STOP
</«me> <des¸ùti⁄>DBG_TIM2_STOP</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DBG_TIM3_STOP
</«me> <des¸ùti⁄>DBG_TIM3_STOP</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DBG_TIM4_STOP
</«me> <des¸ùti⁄>DBG_TIM4_STOP</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DBG_CAN1_STOP
</«me> <des¸ùti⁄>DBG_CAN1_STOP</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DBG_I2C1_SMBUS_TIMEOUT
</«me> <des¸ùti⁄>DBG_I2C1_SMBUS_TIMEOUT</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DBG_I2C2_SMBUS_TIMEOUT
</«me> <des¸ùti⁄>DBG_I2C2_SMBUS_TIMEOUT</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DBG_TIM8_STOP
</«me> <des¸ùti⁄>DBG_TIM8_STOP</des¸ùti⁄> <bôOff£t>17</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DBG_TIM5_STOP
</«me> <des¸ùti⁄>DBG_TIM5_STOP</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DBG_TIM6_STOP
</«me> <des¸ùti⁄>DBG_TIM6_STOP</des¸ùti⁄> <bôOff£t>19</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DBG_TIM7_STOP
</«me> <des¸ùti⁄>DBG_TIM7_STOP</des¸ùti⁄> <bôOff£t>20</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
DBG_CAN2_STOP
</«me> <des¸ùti⁄>DBG_CAN2_STOP</des¸ùti⁄> <bôOff£t>21</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ> <«me>
UART4
</«me> <des¸ùti⁄>Univîß»asynchr⁄ou†ª˚ivîÅønsmôãr</des¸ùti⁄> <groupName>USART</groupName> <ba£Addªss>0x40004C00</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <öãºu±> <«me>UART4</«me> <des¸ùti⁄>UART4 globÆ i¡îru±</des¸ùti⁄> <vÆue>52</vÆue> </öãºu±> <ªgi°îs> <> <«me>SR</«me> <di•œyName>SR</di•œyName> <des¸ùti⁄>
UART4_SR
</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ª£tVÆue>0x0</ª£tVÆue> <fõlds> <fõld> <«me>PE</«me> <des¸ùti⁄>P¨ôyÉº‹</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>FE</«me> <des¸ùti⁄>FømögÉº‹</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>NE</«me> <des¸ùti⁄>Noi£Éº‹ fœg</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>ORE</«me> <des¸ùti⁄>Ovîru¿îr‹</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>IDLE</«me> <des¸ùti⁄>IDLEÜöêdëe˘ed</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>RXNE</«me> <des¸ùti⁄>Ród d©®nŸÉm±y</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>TC</«me> <des¸ùti⁄>Tønsmissi⁄ com∂ëe</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>TXE</«me> <des¸ùti⁄>Tønsmô d©®em±y</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>LBD</«me> <des¸ùti⁄>LIN  dëe˘i⁄ fœg</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> </fõlds> </> <> <«me>DR</«me> <di•œyName>DR</di•œyName> <des¸ùti⁄>
UART4_DR
</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0</ª£tVÆue> <fõlds> <fõld> <«me>DR</«me> <des¸ùti⁄>DR</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>9</bôWidth> </fõld> </fõlds> </> <> <«me>BRR</«me> <di•œyName>BRR</di•œyName> <des¸ùti⁄>
UART4_BRR
</des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0</ª£tVÆue> <fõlds> <fõld> <«me>DIV_Fø˘i⁄</«me> <des¸ùti⁄>DIV_Fø˘i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>DIV_M™tisß</«me> <des¸ùti⁄>DIV_M™tisß</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>12</bôWidth> </fõld> </fõlds> </> <> <«me>CR1</«me> <di•œyName>CR1</di•œyName> <des¸ùti⁄>
UART4_CR1
</des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0</ª£tVÆue> <fõlds> <fõld> <«me>SBK</«me> <des¸ùti⁄>Síd </des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>RWU</«me> <des¸ùti⁄>Re˚ivî wakeup</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>RE</«me> <des¸ùti⁄>Re˚ivîÉ«bÀ</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TE</«me> <des¸ùti⁄>Tønsmôã∏íabÀ</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>IDLEIE</«me> <des¸ùti⁄>IDLE i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>RXNEIE</«me> <des¸ùti⁄>RXNE i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TCIE</«me> <des¸ùti⁄>Tønsmissi⁄ com∂ëêöãºu±É«bÀ</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TXEIE</«me> <des¸ùti⁄>TXE i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>PEIE</«me> <des¸ùti⁄>PE i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>PS</«me> <des¸ùti⁄>P¨ôy sñe˘i⁄</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>PCE</«me> <des¸ùti⁄>P¨ôy c⁄åﬁÉ«bÀ</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>WAKE</«me> <des¸ùti⁄>Wakeu∞mëhod</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>M</«me> <des¸ùti⁄>W‹dÜígth</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>UE</«me> <des¸ùti⁄>USARTÉ«bÀ</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>CR2</«me> <di•œyName>CR2</di•œyName> <des¸ùti⁄>
UART4_CR2
</des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0</ª£tVÆue> <fõlds> <fõld> <«me>ADD</«me> <des¸ùti⁄>Addªs†o‡thêUSARTÇode</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>LBDL</«me> <des¸ùti⁄>lö  dëe˘i⁄Üígth</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>LBDIE</«me> <des¸ùti⁄>LIN  dëe˘i⁄ i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>STOP</«me> <des¸ùti⁄>STOP bôs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>LINEN</«me> <des¸ùti⁄>LIN modêíabÀ</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>CR3</«me> <di•œyName>CR3</di•œyName> <des¸ùti⁄>
UART4_CR3
</des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0</ª£tVÆue> <fõlds> <fõld> <«me>EIE</«me> <des¸ùti⁄>Eº‹ i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>IREN</«me> <des¸ùti⁄>IrDA modêíabÀ</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>IRLP</«me> <des¸ùti⁄>IrDAÜow-powî</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>HDSEL</«me> <des¸ùti⁄>HÆf-du∂ex sñe˘i⁄</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>DMAR</«me> <des¸ùti⁄>DMAÉ«bÀÑe˚ivî</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>DMAT</«me> <des¸ùti⁄>DMAÉ«bÀÅønsmôãr</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ> <«me>
UART5
</«me> <des¸ùti⁄>Univîß»asynchr⁄ou†ª˚ivîÅønsmôãr</des¸ùti⁄> <groupName>USART</groupName> <ba£Addªss>0x40005000</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <öãºu±> <«me>UART5</«me> <des¸ùti⁄>UART5 globÆ i¡îru±</des¸ùti⁄> <vÆue>53</vÆue> </öãºu±> <ªgi°îs> <> <«me>SR</«me> <di•œyName>SR</di•œyName> <des¸ùti⁄>UART4_SR</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ª£tVÆue>0x0</ª£tVÆue> <fõlds> <fõld> <«me>PE</«me> <des¸ùti⁄>PE</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>FE</«me> <des¸ùti⁄>FE</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>NE</«me> <des¸ùti⁄>NE</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>ORE</«me> <des¸ùti⁄>ORE</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>IDLE</«me> <des¸ùti⁄>IDLE</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>RXNE</«me> <des¸ùti⁄>RXNE</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>TC</«me> <des¸ùti⁄>TC</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>TXE</«me> <des¸ùti⁄>TXE</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> <fõld> <«me>LBD</«me> <des¸ùti⁄>LBD</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> </fõlds> </> <> <«me>DR</«me> <di•œyName>DR</di•œyName> <des¸ùti⁄>UART4_DR</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0</ª£tVÆue> <fõlds> <fõld> <«me>DR</«me> <des¸ùti⁄>DR</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>9</bôWidth> </fõld> </fõlds> </> <> <«me>BRR</«me> <di•œyName>BRR</di•œyName> <des¸ùti⁄>UART4_BRR</des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0</ª£tVÆue> <fõlds> <fõld> <«me>DIV_Fø˘i⁄</«me> <des¸ùti⁄>DIV_Fø˘i⁄</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>DIV_M™tisß</«me> <des¸ùti⁄>DIV_M™tisß</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>12</bôWidth> </fõld> </fõlds> </> <> <«me>CR1</«me> <di•œyName>CR1</di•œyName> <des¸ùti⁄>UART4_CR1</des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0</ª£tVÆue> <fõlds> <fõld> <«me>SBK</«me> <des¸ùti⁄>SBK</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>RWU</«me> <des¸ùti⁄>RWU</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>RE</«me> <des¸ùti⁄>RE</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TE</«me> <des¸ùti⁄>TE</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>IDLEIE</«me> <des¸ùti⁄>IDLEIE</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>RXNEIE</«me> <des¸ùti⁄>RXNEIE</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TCIE</«me> <des¸ùti⁄>TCIE</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>TXEIE</«me> <des¸ùti⁄>TXEIE</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>PEIE</«me> <des¸ùti⁄>PEIE</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>PS</«me> <des¸ùti⁄>PS</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>PCE</«me> <des¸ùti⁄>PCE</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>WAKE</«me> <des¸ùti⁄>WAKE</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>M</«me> <des¸ùti⁄>M</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>UE</«me> <des¸ùti⁄>UE</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>CR2</«me> <di•œyName>CR2</di•œyName> <des¸ùti⁄>UART4_CR2</des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0</ª£tVÆue> <fõlds> <fõld> <«me>ADD</«me> <des¸ùti⁄>ADD</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>LBDL</«me> <des¸ùti⁄>LBDL</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>LBDIE</«me> <des¸ùti⁄>LBDIE</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>STOP</«me> <des¸ùti⁄>STOP</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>LINEN</«me> <des¸ùti⁄>LINEN</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>CR3</«me> <di•œyName>CR3</di•œyName> <des¸ùti⁄>UART4_CR3</des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0</ª£tVÆue> <fõlds> <fõld> <«me>EIE</«me> <des¸ùti⁄>Eº‹ i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>IREN</«me> <des¸ùti⁄>IrDA modêíabÀ</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>IRLP</«me> <des¸ùti⁄>IrDAÜow-powî</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>HDSEL</«me> <des¸ùti⁄>HÆf-du∂ex sñe˘i⁄</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>DMAT</«me> <des¸ùti⁄>DMAÉ«bÀÅønsmôãr</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ> <«me>CRC</«me> <des¸ùti⁄>CRC cÆcuœti⁄ 
unô
</des¸ùti⁄> <groupName>CRC</groupName> <ba£Addªss>0x40023000</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <ªgi°îs> <> <«me>DR</«me> <di•œyName>DR</di•œyName> <des¸ùti⁄>D©®</des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0xFFFFFFFF</ª£tVÆue> <fõlds> <fõld> <«me>DR</«me> <des¸ùti⁄>D©®Regi°î</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>IDR</«me> <di•œyName>IDR</di•œyName> <des¸ùti⁄>IndïídíàD©®</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>IDR</«me> <des¸ùti⁄>IndïídíàD©®</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>CR</«me> <di•œyName>CR</di•œyName> <des¸ùti⁄>C⁄åﬁ </des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ac˚ss>wrôe-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>RESET</«me> <des¸ùti⁄>Re£àbô</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ> <«me>
FLASH
</«me> <des¸ùti⁄>FLASH</des¸ùti⁄> <groupName>FLASH</groupName> <ba£Addªss>0x40022000</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <öãºu±> <«me>FLASH</«me> <des¸ùti⁄>Fœsh globÆ i¡îru±</des¸ùti⁄> <vÆue>4</vÆue> </öãºu±> <ªgi°îs> <> <«me>
ACR
</«me> <di•œyName>ACR</di•œyName> <des¸ùti⁄>Fœshác˚s†c⁄åﬁ </des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ª£tVÆue>0x00000030</ª£tVÆue> <fõlds> <fõld> <«me>
LATENCY
</«me> <des¸ùti⁄>
L©ícy
</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>3</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
HLFCYA
</«me> <des¸ùti⁄>Fœsh 
hÆf
 cy˛êac˚s†íabÀ</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
PRFTBE
</«me> <des¸ùti⁄>
Pª„tch
 buf„∏íabÀ</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
PRFTBS
</«me> <des¸ùti⁄>Pª„tch buf„∏°©us</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> </fõlds> </> <> <«me>
KEYR
</«me> <di•œyName>KEYR</di•œyName> <des¸ùti⁄>Fœsh key </des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>wrôe-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>KEY</«me> <des¸ùti⁄>
FPEC
 key</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
OPTKEYR
</«me> <di•œyName>OPTKEYR</di•œyName> <des¸ùti⁄>Fœsh 
›ti⁄
 key </des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ac˚ss>wrôe-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
OPTKEY
</«me> <des¸ùti⁄>
O±i⁄
 byã key</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>SR</«me> <di•œyName>SR</di•œyName> <des¸ùti⁄>Sètu†</des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
EOP
</«me> <des¸ùti⁄>
End
 o‡›î©i⁄</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
WRPRTERR
</«me> <des¸ùti⁄>
Wrôe
ÖrŸe˘i⁄Éº‹</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>
PGERR
</«me> <des¸ùti⁄>
Progømmög
Éº‹</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-wrôe</ac˚ss> </fõld> <fõld> <«me>BSY</«me> <des¸ùti⁄>Busy</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> <ac˚ss>ªad-⁄ly</ac˚ss> </fõld> </fõlds> </> <> <«me>CR</«me> <di•œyName>CR</di•œyName> <des¸ùti⁄>C⁄åﬁ </des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000080</ª£tVÆue> <fõlds> <fõld> <«me>
PG
</«me> <des¸ùti⁄>Progømmög</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
PER
</«me> <des¸ùti⁄>
Page
 
Eø£
</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
MER
</«me> <des¸ùti⁄>
Mass
 Eø£</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
OPTPG
</«me> <des¸ùti⁄>O±i⁄ byã 
¥ogømmög
</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
OPTER
</«me> <des¸ùti⁄>O±i⁄ byã 
îa£
</des¸ùti⁄> <bôOff£t>5</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>STRT</«me> <des¸ùti⁄>Sèπ</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>LOCK</«me> <des¸ùti⁄>Lock</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
OPTWRE
</«me> <des¸ùti⁄>O±i⁄ 
byãs
 wrôêíabÀ</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>ERRIE</«me> <des¸ùti⁄>Eº‹ i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
EOPIE
</«me> <des¸ùti⁄>End o‡›î©i⁄ i¡îru±É«bÀ</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
AR
</«me> <di•œyName>AR</di•œyName> <des¸ùti⁄>Fœsháddªs†</des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ac˚ss>wrôe-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
FAR
</«me> <des¸ùti⁄>Fœsh Addªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
OBR
</«me> <di•œyName>OBR</di•œyName> <des¸ùti⁄>O±i⁄ byã </des¸ùti⁄> <addªssOff£t>0x1C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x03FFFFFC</ª£tVÆue> <fõlds> <fõld> <«me>
OPTERR
</«me> <des¸ùti⁄>O±i⁄ byãÉº‹</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
RDPRT
</«me> <des¸ùti⁄>RódÖrŸe˘i⁄</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
WDG_SW
</«me> <des¸ùti⁄>WDG_SW</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
nRST_STOP
</«me> <des¸ùti⁄>nRST_STOP</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
nRST_STDBY
</«me> <des¸ùti⁄>nRST_STDBY</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
D©a0
</«me> <des¸ùti⁄>D©a0</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>
D©a1
</«me> <des¸ùti⁄>D©a1</des¸ùti⁄> <bôOff£t>18</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
WRPR
</«me> <di•œyName>WRPR</di•œyName> <des¸ùti⁄>Wrôê¥Ÿe˘i⁄ </des¸ùti⁄> <addªssOff£t>0x20</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0xFFFFFFFF</ª£tVÆue> <fõlds> <fõld> <«me>
WRP
</«me> <des¸ùti⁄>Wrôê
¥Ÿe˘
</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ> <«me>
NVIC
</«me> <des¸ùti⁄>
Ne°ed
 
Ve˘‹ed
 I¡îru± C⁄åﬁÀr</des¸ùti⁄> <groupName>NVIC</groupName> <ba£Addªss>0xE000E000</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x1001</size> <ußge>ªgi°îs</ußge> </addªssBlock> <ªgi°îs> <> <«me>
ICTR
</«me> <di•œyName>ICTR</di•œyName> <des¸ùti⁄>I¡îru± C⁄åﬁÀ∏
Ty≥
 Regi°î</des¸ùti⁄> <addªssOff£t>0x4</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
INTLINESNUM
</«me> <des¸ùti⁄>
TŸÆ
Çumbî o‡öãºu± 
löes
 i¿
groups
</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> </fõlds> </> <> <«me>
STIR
</«me> <di•œyName>STIR</di•œyName> <des¸ùti⁄>So·w¨ê
Triggîed
 I¡îru± Regi°î</des¸ùti⁄> <addªssOff£t>0xF00</addªssOff£t> <size>0x20</size> <ac˚ss>wrôe-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
INTID
</«me> <des¸ùti⁄>öãºu±Åÿbê
åiggîed
</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>9</bôWidth> </fõld> </fõlds> </> <> <«me>
ISER0
</«me> <di•œyName>ISER0</di•œyName> <des¸ùti⁄>I¡îru± Së-E«bÀ Regi°î</des¸ùti⁄> <addªssOff£t>0x100</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
SETENA
</«me> <des¸ùti⁄>SETENA</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
ISER1
</«me> <di•œyName>ISER1</di•œyName> <des¸ùti⁄>I¡îru± Së-E«bÀ Regi°î</des¸ùti⁄> <addªssOff£t>0x104</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>SETENA</«me> <des¸ùti⁄>SETENA</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
ICER0
</«me> <di•œyName>ICER0</di•œyName> <des¸ùti⁄>I¡îru± CÀ¨-E«bÀ Regi°î</des¸ùti⁄> <addªssOff£t>0x180</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
CLRENA
</«me> <des¸ùti⁄>CLRENA</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
ICER1
</«me> <di•œyName>ICER1</di•œyName> <des¸ùti⁄>I¡îru± CÀ¨-E«bÀ Regi°î</des¸ùti⁄> <addªssOff£t>0x184</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CLRENA</«me> <des¸ùti⁄>CLRENA</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
ISPR0
</«me> <di•œyName>ISPR0</di•œyName> <des¸ùti⁄>I¡îru± Së-Pídög Regi°î</des¸ùti⁄> <addªssOff£t>0x200</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
SETPEND
</«me> <des¸ùti⁄>SETPEND</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
ISPR1
</«me> <di•œyName>ISPR1</di•œyName> <des¸ùti⁄>I¡îru± Së-Pídög Regi°î</des¸ùti⁄> <addªssOff£t>0x204</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>SETPEND</«me> <des¸ùti⁄>SETPEND</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
ICPR0
</«me> <di•œyName>ICPR0</di•œyName> <des¸ùti⁄>I¡îru± CÀ¨-Pídög Regi°î</des¸ùti⁄> <addªssOff£t>0x280</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
CLRPEND
</«me> <des¸ùti⁄>CLRPEND</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
ICPR1
</«me> <di•œyName>ICPR1</di•œyName> <des¸ùti⁄>I¡îru± CÀ¨-Pídög Regi°î</des¸ùti⁄> <addªssOff£t>0x284</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>CLRPEND</«me> <des¸ùti⁄>CLRPEND</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
IABR0
</«me> <di•œyName>IABR0</di•œyName> <des¸ùti⁄>I¡îru± 
A˘ive
 
Bô
 Regi°î</des¸ùti⁄> <addªssOff£t>0x300</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
ACTIVE
</«me> <des¸ùti⁄>ACTIVE</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
IABR1
</«me> <di•œyName>IABR1</di•œyName> <des¸ùti⁄>I¡îru± A˘ivêBô Regi°î</des¸ùti⁄> <addªssOff£t>0x304</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-⁄ly</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>ACTIVE</«me> <des¸ùti⁄>ACTIVE</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>32</bôWidth> </fõld> </fõlds> </> <> <«me>
IPR0
</«me> <di•œyName>IPR0</di•œyName> <des¸ùti⁄>I¡îru± Pri‹ôy Regi°î</des¸ùti⁄> <addªssOff£t>0x400</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
IPR_N0
</«me> <des¸ùti⁄>IPR_N0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>
IPR_N1
</«me> <des¸ùti⁄>IPR_N1</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>
IPR_N2
</«me> <des¸ùti⁄>IPR_N2</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>
IPR_N3
</«me> <des¸ùti⁄>IPR_N3</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
IPR1
</«me> <di•œyName>IPR1</di•œyName> <des¸ùti⁄>I¡îru± Pri‹ôy Regi°î</des¸ùti⁄> <addªssOff£t>0x404</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>IPR_N0</«me> <des¸ùti⁄>IPR_N0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N1</«me> <des¸ùti⁄>IPR_N1</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N2</«me> <des¸ùti⁄>IPR_N2</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N3</«me> <des¸ùti⁄>IPR_N3</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
IPR2
</«me> <di•œyName>IPR2</di•œyName> <des¸ùti⁄>I¡îru± Pri‹ôy Regi°î</des¸ùti⁄> <addªssOff£t>0x408</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>IPR_N0</«me> <des¸ùti⁄>IPR_N0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N1</«me> <des¸ùti⁄>IPR_N1</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N2</«me> <des¸ùti⁄>IPR_N2</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N3</«me> <des¸ùti⁄>IPR_N3</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
IPR3
</«me> <di•œyName>IPR3</di•œyName> <des¸ùti⁄>I¡îru± Pri‹ôy Regi°î</des¸ùti⁄> <addªssOff£t>0x40C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>IPR_N0</«me> <des¸ùti⁄>IPR_N0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N1</«me> <des¸ùti⁄>IPR_N1</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N2</«me> <des¸ùti⁄>IPR_N2</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N3</«me> <des¸ùti⁄>IPR_N3</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
IPR4
</«me> <di•œyName>IPR4</di•œyName> <des¸ùti⁄>I¡îru± Pri‹ôy Regi°î</des¸ùti⁄> <addªssOff£t>0x410</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>IPR_N0</«me> <des¸ùti⁄>IPR_N0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N1</«me> <des¸ùti⁄>IPR_N1</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N2</«me> <des¸ùti⁄>IPR_N2</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N3</«me> <des¸ùti⁄>IPR_N3</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
IPR5
</«me> <di•œyName>IPR5</di•œyName> <des¸ùti⁄>I¡îru± Pri‹ôy Regi°î</des¸ùti⁄> <addªssOff£t>0x414</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>IPR_N0</«me> <des¸ùti⁄>IPR_N0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N1</«me> <des¸ùti⁄>IPR_N1</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N2</«me> <des¸ùti⁄>IPR_N2</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N3</«me> <des¸ùti⁄>IPR_N3</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
IPR6
</«me> <di•œyName>IPR6</di•œyName> <des¸ùti⁄>I¡îru± Pri‹ôy Regi°î</des¸ùti⁄> <addªssOff£t>0x418</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>IPR_N0</«me> <des¸ùti⁄>IPR_N0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N1</«me> <des¸ùti⁄>IPR_N1</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N2</«me> <des¸ùti⁄>IPR_N2</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N3</«me> <des¸ùti⁄>IPR_N3</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
IPR7
</«me> <di•œyName>IPR7</di•œyName> <des¸ùti⁄>I¡îru± Pri‹ôy Regi°î</des¸ùti⁄> <addªssOff£t>0x41C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>IPR_N0</«me> <des¸ùti⁄>IPR_N0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N1</«me> <des¸ùti⁄>IPR_N1</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N2</«me> <des¸ùti⁄>IPR_N2</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N3</«me> <des¸ùti⁄>IPR_N3</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
IPR8
</«me> <di•œyName>IPR8</di•œyName> <des¸ùti⁄>I¡îru± Pri‹ôy Regi°î</des¸ùti⁄> <addªssOff£t>0x420</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>IPR_N0</«me> <des¸ùti⁄>IPR_N0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N1</«me> <des¸ùti⁄>IPR_N1</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N2</«me> <des¸ùti⁄>IPR_N2</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N3</«me> <des¸ùti⁄>IPR_N3</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
IPR9
</«me> <di•œyName>IPR9</di•œyName> <des¸ùti⁄>I¡îru± Pri‹ôy Regi°î</des¸ùti⁄> <addªssOff£t>0x424</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>IPR_N0</«me> <des¸ùti⁄>IPR_N0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N1</«me> <des¸ùti⁄>IPR_N1</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N2</«me> <des¸ùti⁄>IPR_N2</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N3</«me> <des¸ùti⁄>IPR_N3</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
IPR10
</«me> <di•œyName>IPR10</di•œyName> <des¸ùti⁄>I¡îru± Pri‹ôy Regi°î</des¸ùti⁄> <addªssOff£t>0x428</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>IPR_N0</«me> <des¸ùti⁄>IPR_N0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N1</«me> <des¸ùti⁄>IPR_N1</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N2</«me> <des¸ùti⁄>IPR_N2</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N3</«me> <des¸ùti⁄>IPR_N3</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
IPR11
</«me> <di•œyName>IPR11</di•œyName> <des¸ùti⁄>I¡îru± Pri‹ôy Regi°î</des¸ùti⁄> <addªssOff£t>0x42C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>IPR_N0</«me> <des¸ùti⁄>IPR_N0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N1</«me> <des¸ùti⁄>IPR_N1</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N2</«me> <des¸ùti⁄>IPR_N2</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N3</«me> <des¸ùti⁄>IPR_N3</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
IPR12
</«me> <di•œyName>IPR12</di•œyName> <des¸ùti⁄>I¡îru± Pri‹ôy Regi°î</des¸ùti⁄> <addªssOff£t>0x430</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>IPR_N0</«me> <des¸ùti⁄>IPR_N0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N1</«me> <des¸ùti⁄>IPR_N1</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N2</«me> <des¸ùti⁄>IPR_N2</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N3</«me> <des¸ùti⁄>IPR_N3</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
IPR13
</«me> <di•œyName>IPR13</di•œyName> <des¸ùti⁄>I¡îru± Pri‹ôy Regi°î</des¸ùti⁄> <addªssOff£t>0x434</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>IPR_N0</«me> <des¸ùti⁄>IPR_N0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N1</«me> <des¸ùti⁄>IPR_N1</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N2</«me> <des¸ùti⁄>IPR_N2</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N3</«me> <des¸ùti⁄>IPR_N3</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> <> <«me>
IPR14
</«me> <di•œyName>IPR14</di•œyName> <des¸ùti⁄>I¡îru± Pri‹ôy Regi°î</des¸ùti⁄> <addªssOff£t>0x438</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>IPR_N0</«me> <des¸ùti⁄>IPR_N0</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N1</«me> <des¸ùti⁄>IPR_N1</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N2</«me> <des¸ùti⁄>IPR_N2</des¸ùti⁄> <bôOff£t>16</bôOff£t> <bôWidth>8</bôWidth> </fõld> <fõld> <«me>IPR_N3</«me> <des¸ùti⁄>IPR_N3</des¸ùti⁄> <bôOff£t>24</bôOff£t> <bôWidth>8</bôWidth> </fõld> </fõlds> </> </ªgi°îs> </≥rùhîÆ> <≥rùhîÆ> <«me>USB</«me> <des¸ùti⁄>Univîß»
£rül
 bu†fuŒ-•ìd devi˚ i¡îÁ˚</des¸ùti⁄> <groupName>USB</groupName> <ba£Addªss>0x40005C00</ba£Addªss> <addªssBlock> <off£t>0x0</off£t> <size>0x400</size> <ußge>ªgi°îs</ußge> </addªssBlock> <öãºu±> <«me>
USB_FS_WKUP
</«me> <des¸ùti⁄>USB 
Devi˚
 FS Wakeu∞through EXTIÜöêöãºu±</des¸ùti⁄> <vÆue>42</vÆue> </öãºu±> <ªgi°îs> <> <«me>
EP0R
</«me> <di•œyName>EP0R</di•œyName> <des¸ùti⁄>
ídpoöt
 0 </des¸ùti⁄> <addªssOff£t>0x0</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
EA
</«me> <des¸ùti⁄>
Endpoöt
áddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
STAT_TX
</«me> <des¸ùti⁄>Sètu†bôs, 
å™smissi⁄
 
	gå™s„rs
</
	gdes¸ùti⁄
> <
	gbôOff£t
>4</bôOff£t> <
	gbôWidth
>2</bôWidth> </
	gfõld
> <fõld> <
	g«me
>
	gDTOG_TX
</«me> <des¸ùti⁄>D©®
	gToggÀ
, å™smissi⁄Åøns„rs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gCTR_TX
</«me> <des¸ùti⁄>
C‹ª˘
 Tøns„∏
	gå™smissi⁄
</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gEP_KIND
</«me> <des¸ùti⁄>Endpoöà
	gköd
</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gEP_TYPE
</«me> <des¸ùti⁄>Endpoöà
	gty≥
</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
	gSETUP
</«me> <des¸ùti⁄>
Sëup
 
å™ß˘i⁄
 
	gcom∂ëed
</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gSTAT_RX
</«me> <des¸ùti⁄>Sètu†
	gbôs
, ª˚±i⁄Åøns„rs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
	gDTOG_RX
</«me> <des¸ùti⁄>D©®ToggÀ, ª˚±i⁄Åøns„rs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gCTR_RX
</«me> <des¸ùti⁄>C‹ª˘Åøns„∏
	gª˚±i⁄
</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> </
	gfõlds
> </> <> <«me>
	gEP1R
</«me> <
	gdi•œyName
>EP1R</di•œyName> <des¸ùti⁄>
	gídpoöt
 1 </des¸ùti⁄> <
	gaddªssOff£t
>0x4</addªssOff£t> <
	gsize
>0x20</size> <
	gac˚ss
>
	gªad
-
	gwrôe
</ac˚ss> <
	gª£tVÆue
>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
	gEA
</«me> <des¸ùti⁄>Endpoöà
	gaddªss
</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
	gSTAT_TX
</«me> <des¸ùti⁄>Sètu†bôs, å™smissi⁄Åøns„rs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>DTOG_TX</«me> <des¸ùti⁄>D©®ToggÀ, å™smissi⁄Åøns„rs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CTR_TX</«me> <des¸ùti⁄>C‹ª˘ Tøns„∏å™smissi⁄</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>EP_KIND</«me> <des¸ùti⁄>Endpoöàköd</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>EP_TYPE</«me> <des¸ùti⁄>Endpoöàty≥</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>SETUP</«me> <des¸ùti⁄>Sëu∞å™ß˘i⁄ com∂ëed</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>STAT_RX</«me> <des¸ùti⁄>Sètu†bôs, ª˚±i⁄Åøns„rs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>DTOG_RX</«me> <des¸ùti⁄>D©®ToggÀ, ª˚±i⁄Åøns„rs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CTR_RX</«me> <des¸ùti⁄>C‹ª˘Åøns„∏ª˚±i⁄</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
	gEP2R
</«me> <di•œyName>EP2R</di•œyName> <des¸ùti⁄>ídpoöà2 </des¸ùti⁄> <addªssOff£t>0x8</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>EA</«me> <des¸ùti⁄>Endpoöàaddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>STAT_TX</«me> <des¸ùti⁄>Sètu†bôs, å™smissi⁄Åøns„rs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>DTOG_TX</«me> <des¸ùti⁄>D©®ToggÀ, å™smissi⁄Åøns„rs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CTR_TX</«me> <des¸ùti⁄>C‹ª˘ Tøns„∏å™smissi⁄</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>EP_KIND</«me> <des¸ùti⁄>Endpoöàköd</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>EP_TYPE</«me> <des¸ùti⁄>Endpoöàty≥</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>SETUP</«me> <des¸ùti⁄>Sëu∞å™ß˘i⁄ com∂ëed</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>STAT_RX</«me> <des¸ùti⁄>Sètu†bôs, ª˚±i⁄Åøns„rs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>DTOG_RX</«me> <des¸ùti⁄>D©®ToggÀ, ª˚±i⁄Åøns„rs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CTR_RX</«me> <des¸ùti⁄>C‹ª˘Åøns„∏ª˚±i⁄</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
	gEP3R
</«me> <di•œyName>EP3R</di•œyName> <des¸ùti⁄>ídpoöà3 </des¸ùti⁄> <addªssOff£t>0xC</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>EA</«me> <des¸ùti⁄>Endpoöàaddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>STAT_TX</«me> <des¸ùti⁄>Sètu†bôs, å™smissi⁄Åøns„rs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>DTOG_TX</«me> <des¸ùti⁄>D©®ToggÀ, å™smissi⁄Åøns„rs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CTR_TX</«me> <des¸ùti⁄>C‹ª˘ Tøns„∏å™smissi⁄</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>EP_KIND</«me> <des¸ùti⁄>Endpoöàköd</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>EP_TYPE</«me> <des¸ùti⁄>Endpoöàty≥</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>SETUP</«me> <des¸ùti⁄>Sëu∞å™ß˘i⁄ com∂ëed</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>STAT_RX</«me> <des¸ùti⁄>Sètu†bôs, ª˚±i⁄Åøns„rs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>DTOG_RX</«me> <des¸ùti⁄>D©®ToggÀ, ª˚±i⁄Åøns„rs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CTR_RX</«me> <des¸ùti⁄>C‹ª˘Åøns„∏ª˚±i⁄</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
	gEP4R
</«me> <di•œyName>EP4R</di•œyName> <des¸ùti⁄>ídpoöà4 </des¸ùti⁄> <addªssOff£t>0x10</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>EA</«me> <des¸ùti⁄>Endpoöàaddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>STAT_TX</«me> <des¸ùti⁄>Sètu†bôs, å™smissi⁄Åøns„rs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>DTOG_TX</«me> <des¸ùti⁄>D©®ToggÀ, å™smissi⁄Åøns„rs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CTR_TX</«me> <des¸ùti⁄>C‹ª˘ Tøns„∏å™smissi⁄</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>EP_KIND</«me> <des¸ùti⁄>Endpoöàköd</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>EP_TYPE</«me> <des¸ùti⁄>Endpoöàty≥</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>SETUP</«me> <des¸ùti⁄>Sëu∞å™ß˘i⁄ com∂ëed</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>STAT_RX</«me> <des¸ùti⁄>Sètu†bôs, ª˚±i⁄Åøns„rs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>DTOG_RX</«me> <des¸ùti⁄>D©®ToggÀ, ª˚±i⁄Åøns„rs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CTR_RX</«me> <des¸ùti⁄>C‹ª˘Åøns„∏ª˚±i⁄</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
	gEP5R
</«me> <di•œyName>EP5R</di•œyName> <des¸ùti⁄>ídpoöà5 </des¸ùti⁄> <addªssOff£t>0x14</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>EA</«me> <des¸ùti⁄>Endpoöàaddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>STAT_TX</«me> <des¸ùti⁄>Sètu†bôs, å™smissi⁄Åøns„rs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>DTOG_TX</«me> <des¸ùti⁄>D©®ToggÀ, å™smissi⁄Åøns„rs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CTR_TX</«me> <des¸ùti⁄>C‹ª˘ Tøns„∏å™smissi⁄</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>EP_KIND</«me> <des¸ùti⁄>Endpoöàköd</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>EP_TYPE</«me> <des¸ùti⁄>Endpoöàty≥</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>SETUP</«me> <des¸ùti⁄>Sëu∞å™ß˘i⁄ com∂ëed</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>STAT_RX</«me> <des¸ùti⁄>Sètu†bôs, ª˚±i⁄Åøns„rs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>DTOG_RX</«me> <des¸ùti⁄>D©®ToggÀ, ª˚±i⁄Åøns„rs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CTR_RX</«me> <des¸ùti⁄>C‹ª˘Åøns„∏ª˚±i⁄</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
	gEP6R
</«me> <di•œyName>EP6R</di•œyName> <des¸ùti⁄>ídpoöà6 </des¸ùti⁄> <addªssOff£t>0x18</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>EA</«me> <des¸ùti⁄>Endpoöàaddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>STAT_TX</«me> <des¸ùti⁄>Sètu†bôs, å™smissi⁄Åøns„rs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>DTOG_TX</«me> <des¸ùti⁄>D©®ToggÀ, å™smissi⁄Åøns„rs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CTR_TX</«me> <des¸ùti⁄>C‹ª˘ Tøns„∏å™smissi⁄</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>EP_KIND</«me> <des¸ùti⁄>Endpoöàköd</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>EP_TYPE</«me> <des¸ùti⁄>Endpoöàty≥</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>SETUP</«me> <des¸ùti⁄>Sëu∞å™ß˘i⁄ com∂ëed</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>STAT_RX</«me> <des¸ùti⁄>Sètu†bôs, ª˚±i⁄Åøns„rs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>DTOG_RX</«me> <des¸ùti⁄>D©®ToggÀ, ª˚±i⁄Åøns„rs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CTR_RX</«me> <des¸ùti⁄>C‹ª˘Åøns„∏ª˚±i⁄</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
	gEP7R
</«me> <di•œyName>EP7R</di•œyName> <des¸ùti⁄>ídpoöà7 </des¸ùti⁄> <addªssOff£t>0x1C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>EA</«me> <des¸ùti⁄>Endpoöàaddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>STAT_TX</«me> <des¸ùti⁄>Sètu†bôs, å™smissi⁄Åøns„rs</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>DTOG_TX</«me> <des¸ùti⁄>D©®ToggÀ, å™smissi⁄Åøns„rs</des¸ùti⁄> <bôOff£t>6</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CTR_TX</«me> <des¸ùti⁄>C‹ª˘ Tøns„∏å™smissi⁄</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>EP_KIND</«me> <des¸ùti⁄>Endpoöàköd</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>EP_TYPE</«me> <des¸ùti⁄>Endpoöàty≥</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>SETUP</«me> <des¸ùti⁄>Sëu∞å™ß˘i⁄ com∂ëed</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>STAT_RX</«me> <des¸ùti⁄>Sètu†bôs, ª˚±i⁄Åøns„rs</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>DTOG_RX</«me> <des¸ùti⁄>D©®ToggÀ, ª˚±i⁄Åøns„rs</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>CTR_RX</«me> <des¸ùti⁄>C‹ª˘Åøns„∏ª˚±i⁄</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
	gCNTR
</«me> <di•œyName>
	gUSB_CNTR
</di•œyName> <des¸ùti⁄>c⁄åﬁ </des¸ùti⁄> <addªssOff£t>0x40</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000003</ª£tVÆue> <fõlds> <fõld> <«me>
	gFRES
</«me> <des¸ùti⁄>
F‹˚
 USB 
	gRe£t
</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gPDWN
</«me> <des¸ùti⁄>Powî 
	gdown
</des¸ùti⁄> <bôOff£t>1</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gLPMODE
</«me> <des¸ùti⁄>
	gLow
-powî 
	gmode
</des¸ùti⁄> <bôOff£t>2</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gFSUSP
</«me> <des¸ùti⁄>F‹˚ 
	gsu•íd
</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gRESUME
</«me> <des¸ùti⁄>
Resume
 
	gªque°
</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gESOFM
</«me> <des¸ùti⁄>
Ex≥˘ed
 sèπ o‡‰amêöãºu± 
	gmask
</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gSOFM
</«me> <des¸ùti⁄>Sèπ o‡‰amêöãºu± mask</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gRESETM
</«me> <des¸ùti⁄>USBÑe£àöãºu± mask</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gSUSPM
</«me> <des¸ùti⁄>
Su•íd
 modêöãºu± mask</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gWKUPM
</«me> <des¸ùti⁄>Wakeu∞öãºu± mask</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gERRM
</«me> <des¸ùti⁄>Eº‹ i¡îru± mask</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gPMAOVRM
</«me> <des¸ùti⁄>Packë mem‹yáª®
	govî
 / 
undîrun
 i¡îru± mask</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gCTRM
</«me> <des¸ùti⁄>C‹ª˘Åøns„∏öãºu± mask</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
	gISTR
</«me> <di•œyName>ISTR</di•œyName> <des¸ùti⁄>öãºu± sètu†</des¸ùti⁄> <addªssOff£t>0x44</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x00000000</ª£tVÆue> <fõlds> <fõld> <«me>
	gEP_ID
</«me> <des¸ùti⁄>Endpoöà
	gIdítifõr
</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>4</bôWidth> </fõld> <fõld> <«me>
	gDIR
</«me> <des¸ùti⁄>Dúe˘i⁄ o‡
	gå™ß˘i⁄
</des¸ùti⁄> <bôOff£t>4</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gESOF
</«me> <des¸ùti⁄>Ex≥˘ed sèπ 
	g‰ame
</des¸ùti⁄> <bôOff£t>8</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gSOF
</«me> <des¸ùti⁄>°¨ào‡‰ame</des¸ùti⁄> <bôOff£t>9</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gRESET
</«me> <des¸ùti⁄>ª£àªque°</des¸ùti⁄> <bôOff£t>10</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gSUSP
</«me> <des¸ùti⁄>Su•íd modêªque°</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gWKUP
</«me> <des¸ùti⁄>
	gWakeup
</des¸ùti⁄> <bôOff£t>12</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gERR
</«me> <des¸ùti⁄>
	gEº‹
</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gPMAOVR
</«me> <des¸ùti⁄>Packë mem‹yáª®ovî / 
	gundîrun
</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gCTR
</«me> <des¸ùti⁄>C‹ª˘ 
	gå™s„r
</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
	gFNR
</«me> <di•œyName>FNR</di•œyName> <des¸ùti⁄>‰amênumbî </des¸ùti⁄> <addªssOff£t>0x48</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-
	g⁄ly
</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
	gFN
</«me> <des¸ùti⁄>Fømê
	gnumbî
</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>11</bôWidth> </fõld> <fõld> <«me>
	gLSOF
</«me> <des¸ùti⁄>
Lo°
 SOF</des¸ùti⁄> <bôOff£t>11</bôOff£t> <bôWidth>2</bôWidth> </fõld> <fõld> <«me>
	gLCK
</«me> <des¸ùti⁄>
	gLocked
</des¸ùti⁄> <bôOff£t>13</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gRXDM
</«me> <des¸ùti⁄>Re˚ivê
	gd©a
 -Üöê
	g°©us
</des¸ùti⁄> <bôOff£t>14</bôOff£t> <bôWidth>1</bôWidth> </fõld> <fõld> <«me>
	gRXDP
</«me> <des¸ùti⁄>Re˚ivêd©®+Üöê°©us</des¸ùti⁄> <bôOff£t>15</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
	gDADDR
</«me> <di•œyName>DADDR</di•œyName> <des¸ùti⁄>devi˚áddªss</des¸ùti⁄> <addªssOff£t>0x4C</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>
	gADD
</«me> <des¸ùti⁄>Devi˚áddªss</des¸ùti⁄> <bôOff£t>0</bôOff£t> <bôWidth>7</bôWidth> </fõld> <fõld> <«me>
	gEF
</«me> <des¸ùti⁄>E«bÀ 
	gfun˘i⁄
</des¸ùti⁄> <bôOff£t>7</bôOff£t> <bôWidth>1</bôWidth> </fõld> </fõlds> </> <> <«me>
	gBTABLE
</«me> <di•œyName>BTABLE</di•œyName> <des¸ùti⁄>Buf„∏
èbÀ
áddªss</des¸ùti⁄> <addªssOff£t>0x50</addªssOff£t> <size>0x20</size> <ac˚ss>ªad-wrôe</ac˚ss> <ª£tVÆue>0x0000</ª£tVÆue> <fõlds> <fõld> <«me>BTABLE</«me> <des¸ùti⁄>Buf„∏
	gèbÀ
</des¸ùti⁄> <bôOff£t>3</bôOff£t> <bôWidth>13</bôWidth> </fõld> </fõlds> </> </
	gªgi°îs
> </
	g≥rùhîÆ
> </
	g≥rùhîÆs
></
	gdevi˚
>

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\cmsis\cmsis_compiler.h

25 #i‚de‡
__CMSIS_COMPILER_H


26 
	#__CMSIS_COMPILER_H


	)

28 
	~<°döt.h
>

33 #i‡ 
deföed
 ( 
__CC_ARM
 )

34 
	~"cmsis_¨mcc.h
"

40 #ñi‡
deföed
 (
__ARMCC_VERSION
) && (__ARMCC_VERSION >= 6010050) && (__ARMCC_VERSION < 6100100)

41 
	~"cmsis_¨m˛™g_…m.h
"

46 #ñi‡
deföed
 (
__ARMCC_VERSION
) && (__ARMCC_VERSION >= 6100100)

47 
	~"cmsis_¨m˛™g.h
"

53 #ñi‡
deföed
 ( 
__GNUC__
 )

54 
	~"cmsis_gcc.h
"

60 #ñi‡
deföed
 ( 
__ICCARM__
 )

61 
	~<cmsis_icˇrm.h
>

67 #ñi‡
deföed
 ( 
__TI_ARM__
 )

68 
	~<cmsis_ccs.h
>

70 #i‚de‡ 
__ASM


71 
	#__ASM
 
__asm


	)

73 #i‚de‡ 
__INLINE


74 
	#__INLINE
 
ölöe


	)

76 #i‚de‡ 
__STATIC_INLINE


77 
	#__STATIC_INLINE
 
ölöe


	)

79 #i‚de‡ 
__STATIC_FORCEINLINE


80 
	#__STATIC_FORCEINLINE
 
__STATIC_INLINE


	)

82 #i‚de‡ 
__NO_RETURN


83 
	#__NO_RETURN
 
	`__©åibuã__
((
n‹ëu∫
))

	)

85 #i‚de‡ 
__USED


86 
	#__USED
 
	`__©åibuã__
((
u£d
))

	)

88 #i‚de‡ 
__WEAK


89 
	#__WEAK
 
	`__©åibuã__
((
wók
))

	)

91 #i‚de‡ 
__PACKED


92 
	#__PACKED
 
	`__©åibuã__
((
∑cked
))

	)

94 #i‚de‡ 
__PACKED_STRUCT


95 
	#__PACKED_STRUCT
 
	`__©åibuã__
((
∑cked
))

	)

97 #i‚de‡ 
__PACKED_UNION


98 
	#__PACKED_UNION
 
	`__©åibuã__
((
∑cked
))

	)

100 #i‚de‡ 
__UNALIGNED_UINT32


101 
__©åibuã__
((
∑cked
)Ë
	gT_UINT32
 { 
uöt32_t
 
	gv
; };

102 
	#__UNALIGNED_UINT32
(
x
Ë(((
T_UINT32
 *)(x))->
v
)

	)

104 #i‚de‡ 
__UNALIGNED_UINT16_WRITE


105 
__PACKED_STRUCT
 
	gT_UINT16_WRITE
 { 
uöt16_t
 
	gv
; };

106 
	#__UNALIGNED_UINT16_WRITE
(
addr
, 
vÆ
Ë()((((
T_UINT16_WRITE
 *)(*)◊ddr))->
v
Ë(vÆ))

	)

108 #i‚de‡ 
__UNALIGNED_UINT16_READ


109 
__PACKED_STRUCT
 
	gT_UINT16_READ
 { 
uöt16_t
 
	gv
; };

110 
	#__UNALIGNED_UINT16_READ
(
addr
Ë(((c⁄° 
T_UINT16_READ
 *)(c⁄° *)◊ddr))->
v
)

	)

112 #i‚de‡ 
__UNALIGNED_UINT32_WRITE


113 
__PACKED_STRUCT
 
	gT_UINT32_WRITE
 { 
uöt32_t
 
	gv
; };

114 
	#__UNALIGNED_UINT32_WRITE
(
addr
, 
vÆ
Ë()((((
T_UINT32_WRITE
 *)(*)◊ddr))->
v
Ë(vÆ))

	)

116 #i‚de‡ 
__UNALIGNED_UINT32_READ


117 
__PACKED_STRUCT
 
	gT_UINT32_READ
 { 
uöt32_t
 
	gv
; };

118 
	#__UNALIGNED_UINT32_READ
(
addr
Ë(((c⁄° 
T_UINT32_READ
 *)(c⁄° *)◊ddr))->
v
)

	)

120 #i‚de‡ 
__ALIGNED


121 
	#__ALIGNED
(
x
Ë
	`__©åibuã__
((
	`Æig√d
(x)))

	)

123 #i‚de‡ 
__RESTRICT


124 
	#__RESTRICT
 
__ª°ri˘


	)

126 #i‚de‡ 
__COMPILER_BARRIER


127 #w¨nög 
No
 
compûî
 
•ecific
 
sﬁuti⁄
 
__COMPILER_BARRIER
. __COMPILER_BARRIER 
is
 
ign‹ed
.

128 
	#__COMPILER_BARRIER
(Ë()0

	)

135 #ñi‡
deföed
 ( 
__TASKING__
 )

142 #i‚de‡ 
__ASM


143 
	#__ASM
 
__asm


	)

145 #i‚de‡ 
__INLINE


146 
	#__INLINE
 
ölöe


	)

148 #i‚de‡ 
__STATIC_INLINE


149 
	#__STATIC_INLINE
 
ölöe


	)

151 #i‚de‡ 
__STATIC_FORCEINLINE


152 
	#__STATIC_FORCEINLINE
 
__STATIC_INLINE


	)

154 #i‚de‡ 
__NO_RETURN


155 
	#__NO_RETURN
 
	`__©åibuã__
((
n‹ëu∫
))

	)

157 #i‚de‡ 
__USED


158 
	#__USED
 
	`__©åibuã__
((
u£d
))

	)

160 #i‚de‡ 
__WEAK


161 
	#__WEAK
 
	`__©åibuã__
((
wók
))

	)

163 #i‚de‡ 
__PACKED


164 
	#__PACKED
 
__∑cked__


	)

166 #i‚de‡ 
__PACKED_STRUCT


167 
	#__PACKED_STRUCT
 
__∑cked__


	)

169 #i‚de‡ 
__PACKED_UNION


170 
	#__PACKED_UNION
 
__∑cked__


	)

172 #i‚de‡ 
__UNALIGNED_UINT32


173 
__∑cked__
 
	gT_UINT32
 { 
uöt32_t
 
	gv
; };

174 
	#__UNALIGNED_UINT32
(
x
Ë(((
T_UINT32
 *)(x))->
v
)

	)

176 #i‚de‡ 
__UNALIGNED_UINT16_WRITE


177 
__PACKED_STRUCT
 
	gT_UINT16_WRITE
 { 
uöt16_t
 
	gv
; };

178 
	#__UNALIGNED_UINT16_WRITE
(
addr
, 
vÆ
Ë()((((
T_UINT16_WRITE
 *)(*)◊ddr))->
v
Ë(vÆ))

	)

180 #i‚de‡ 
__UNALIGNED_UINT16_READ


181 
__PACKED_STRUCT
 
	gT_UINT16_READ
 { 
uöt16_t
 
	gv
; };

182 
	#__UNALIGNED_UINT16_READ
(
addr
Ë(((c⁄° 
T_UINT16_READ
 *)(c⁄° *)◊ddr))->
v
)

	)

184 #i‚de‡ 
__UNALIGNED_UINT32_WRITE


185 
__PACKED_STRUCT
 
	gT_UINT32_WRITE
 { 
uöt32_t
 
	gv
; };

186 
	#__UNALIGNED_UINT32_WRITE
(
addr
, 
vÆ
Ë()((((
T_UINT32_WRITE
 *)(*)◊ddr))->
v
Ë(vÆ))

	)

188 #i‚de‡ 
__UNALIGNED_UINT32_READ


189 
__PACKED_STRUCT
 
	gT_UINT32_READ
 { 
uöt32_t
 
	gv
; };

190 
	#__UNALIGNED_UINT32_READ
(
addr
Ë(((c⁄° 
T_UINT32_READ
 *)(c⁄° *)◊ddr))->
v
)

	)

192 #i‚de‡ 
__ALIGNED


193 
	#__ALIGNED
(
x
Ë
	`__Æign
(x)

	)

195 #i‚de‡ 
__RESTRICT


196 #w¨nög 
No
 
compûî
 
•ecific
 
sﬁuti⁄
 
__RESTRICT
. __RESTRICT 
is
 
ign‹ed
.

197 
	#__RESTRICT


	)

199 #i‚de‡ 
__COMPILER_BARRIER


200 #w¨nög 
No
 
compûî
 
•ecific
 
sﬁuti⁄
 
__COMPILER_BARRIER
. __COMPILER_BARRIER 
is
 
ign‹ed
.

201 
	#__COMPILER_BARRIER
(Ë()0

	)

208 #ñi‡
deföed
 ( 
__CSMC__
 )

209 
	~<cmsis_csm.h
>

211 #i‚de‡ 
__ASM


212 
	#__ASM
 
_asm


	)

214 #i‚de‡ 
__INLINE


215 
	#__INLINE
 
ölöe


	)

217 #i‚de‡ 
__STATIC_INLINE


218 
	#__STATIC_INLINE
 
ölöe


	)

220 #i‚de‡ 
__STATIC_FORCEINLINE


221 
	#__STATIC_FORCEINLINE
 
__STATIC_INLINE


	)

223 #i‚de‡ 
__NO_RETURN


225 
	#__NO_RETURN


	)

227 #i‚de‡ 
__USED


228 #w¨nög 
No
 
compûî
 
•ecific
 
sﬁuti⁄
 
__USED
. __USED 
is
 
ign‹ed
.

229 
	#__USED


	)

231 #i‚de‡ 
__WEAK


232 
	#__WEAK
 
__wók


	)

234 #i‚de‡ 
__PACKED


235 
	#__PACKED
 @
∑cked


	)

237 #i‚de‡ 
__PACKED_STRUCT


238 
	#__PACKED_STRUCT
 @
∑cked
 

	)

240 #i‚de‡ 
__PACKED_UNION


241 
	#__PACKED_UNION
 @
∑cked
 

	)

243 #i‚de‡ 
__UNALIGNED_UINT32


244 @
∑cked
 
	sT_UINT32
 { 
uöt32_t
 
	mv
; };

245 
	#__UNALIGNED_UINT32
(
x
Ë(((
T_UINT32
 *)(x))->
v
)

	)

247 #i‚de‡ 
__UNALIGNED_UINT16_WRITE


248 
__PACKED_STRUCT
 
	gT_UINT16_WRITE
 { 
uöt16_t
 
	gv
; };

249 
	#__UNALIGNED_UINT16_WRITE
(
addr
, 
vÆ
Ë()((((
T_UINT16_WRITE
 *)(*)◊ddr))->
v
Ë(vÆ))

	)

251 #i‚de‡ 
__UNALIGNED_UINT16_READ


252 
__PACKED_STRUCT
 
	gT_UINT16_READ
 { 
uöt16_t
 
	gv
; };

253 
	#__UNALIGNED_UINT16_READ
(
addr
Ë(((c⁄° 
T_UINT16_READ
 *)(c⁄° *)◊ddr))->
v
)

	)

255 #i‚de‡ 
__UNALIGNED_UINT32_WRITE


256 
__PACKED_STRUCT
 
	gT_UINT32_WRITE
 { 
uöt32_t
 
	gv
; };

257 
	#__UNALIGNED_UINT32_WRITE
(
addr
, 
vÆ
Ë()((((
T_UINT32_WRITE
 *)(*)◊ddr))->
v
Ë(vÆ))

	)

259 #i‚de‡ 
__UNALIGNED_UINT32_READ


260 
__PACKED_STRUCT
 
	gT_UINT32_READ
 { 
uöt32_t
 
	gv
; };

261 
	#__UNALIGNED_UINT32_READ
(
addr
Ë(((c⁄° 
T_UINT32_READ
 *)(c⁄° *)◊ddr))->
v
)

	)

263 #i‚de‡ 
__ALIGNED


264 #w¨nög 
No
 
compûî
 
•ecific
 
sﬁuti⁄
 
__ALIGNED
. __ALIGNED 
is
 
ign‹ed
.

265 
	#__ALIGNED
(
x
)

	)

267 #i‚de‡ 
__RESTRICT


268 #w¨nög 
No
 
compûî
 
•ecific
 
sﬁuti⁄
 
__RESTRICT
. __RESTRICT 
is
 
ign‹ed
.

269 
	#__RESTRICT


	)

271 #i‚de‡ 
__COMPILER_BARRIER


272 #w¨nög 
No
 
compûî
 
•ecific
 
sﬁuti⁄
 
__COMPILER_BARRIER
. __COMPILER_BARRIER 
is
 
ign‹ed
.

273 
	#__COMPILER_BARRIER
(Ë()0

	)

278 #îr‹ 
Unknown
 
compûî
.

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\cmsis\cmsis_gcc.h

25 #i‚de‡
__CMSIS_GCC_H


26 
	#__CMSIS_GCC_H


	)

29 #¥agm®
GCC
 
dügno°ic
 
push


30 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wsign-conversion"

31 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wconversion"

32 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wunused-parameter"

35 #i‚de‡
__has_buûtö


36 
	#__has_buûtö
(
x
Ë(0)

	)

40 #i‚de‡ 
__ASM


41 
	#__ASM
 
__asm


	)

43 #i‚de‡ 
__INLINE


44 
	#__INLINE
 
ölöe


	)

46 #i‚de‡ 
__STATIC_INLINE


47 
	#__STATIC_INLINE
 
ölöe


	)

49 #i‚de‡ 
__STATIC_FORCEINLINE


50 
	#__STATIC_FORCEINLINE
 
	`__©åibuã__
((
Æways_ölöe
)Ë
ölöe


	)

52 #i‚de‡ 
__NO_RETURN


53 
	#__NO_RETURN
 
	`__©åibuã__
((
__n‹ëu∫__
))

	)

55 #i‚de‡ 
__USED


56 
	#__USED
 
	`__©åibuã__
((
u£d
))

	)

58 #i‚de‡ 
__WEAK


59 
	#__WEAK
 
	`__©åibuã__
((
wók
))

	)

61 #i‚de‡ 
__PACKED


62 
	#__PACKED
 
	`__©åibuã__
((
∑cked
, 
	`Æig√d
(1)))

	)

64 #i‚de‡ 
__PACKED_STRUCT


65 
	#__PACKED_STRUCT
 
	`__©åibuã__
((
∑cked
, 
	`Æig√d
(1)))

	)

67 #i‚de‡ 
__PACKED_UNION


68 
	#__PACKED_UNION
 
	`__©åibuã__
((
∑cked
, 
	`Æig√d
(1)))

	)

70 #i‚de‡ 
__UNALIGNED_UINT32


71 #¥agm®
GCC
 
dügno°ic
 
push


72 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wpacked"

73 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wattributes"

74 
__©åibuã__
((
∑cked
)Ë
	gT_UINT32
 { 
uöt32_t
 
	gv
; };

75 #¥agm®
GCC
 
dügno°ic
 
p›


76 
	#__UNALIGNED_UINT32
(
x
Ë(((
T_UINT32
 *)(x))->
v
)

	)

78 #i‚de‡ 
__UNALIGNED_UINT16_WRITE


79 #¥agm®
GCC
 
dügno°ic
 
push


80 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wpacked"

81 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wattributes"

82 
__PACKED_STRUCT
 
	gT_UINT16_WRITE
 { 
uöt16_t
 
	gv
; };

83 #¥agm®
GCC
 
dügno°ic
 
p›


84 
	#__UNALIGNED_UINT16_WRITE
(
addr
, 
vÆ
Ë()((((
T_UINT16_WRITE
 *)(*)◊ddr))->
v
Ë(vÆ))

	)

86 #i‚de‡ 
__UNALIGNED_UINT16_READ


87 #¥agm®
GCC
 
dügno°ic
 
push


88 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wpacked"

89 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wattributes"

90 
__PACKED_STRUCT
 
	gT_UINT16_READ
 { 
uöt16_t
 
	gv
; };

91 #¥agm®
GCC
 
dügno°ic
 
p›


92 
	#__UNALIGNED_UINT16_READ
(
addr
Ë(((c⁄° 
T_UINT16_READ
 *)(c⁄° *)◊ddr))->
v
)

	)

94 #i‚de‡ 
__UNALIGNED_UINT32_WRITE


95 #¥agm®
GCC
 
dügno°ic
 
push


96 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wpacked"

97 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wattributes"

98 
__PACKED_STRUCT
 
	gT_UINT32_WRITE
 { 
uöt32_t
 
	gv
; };

99 #¥agm®
GCC
 
dügno°ic
 
p›


100 
	#__UNALIGNED_UINT32_WRITE
(
addr
, 
vÆ
Ë()((((
T_UINT32_WRITE
 *)(*)◊ddr))->
v
Ë(vÆ))

	)

102 #i‚de‡ 
__UNALIGNED_UINT32_READ


103 #¥agm®
GCC
 
dügno°ic
 
push


104 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wpacked"

105 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wattributes"

106 
__PACKED_STRUCT
 
	gT_UINT32_READ
 { 
uöt32_t
 
	gv
; };

107 #¥agm®
GCC
 
dügno°ic
 
p›


108 
	#__UNALIGNED_UINT32_READ
(
addr
Ë(((c⁄° 
T_UINT32_READ
 *)(c⁄° *)◊ddr))->
v
)

	)

110 #i‚de‡ 
__ALIGNED


111 
	#__ALIGNED
(
x
Ë
	`__©åibuã__
((
	`Æig√d
(x)))

	)

113 #i‚de‡ 
__RESTRICT


114 
	#__RESTRICT
 
__ª°ri˘


	)

116 #i‚de‡ 
__COMPILER_BARRIER


117 
	#__COMPILER_BARRIER
(Ë
__ASM
 vﬁ©ûe("":::"mem‹y")

	)

122 #i‚de‡
__PROGRAM_START


131 
__STATIC_FORCEINLINE
 
__NO_RETURN
 
	$__cmsis_°¨t
()

133 
	`_°¨t
(Ë
__NO_RETURN
;

136 
uöt32_t
 c⁄°* 
§c
;

137 
uöt32_t
* 
de°
;

138 
uöt32_t
 
wÀn
;

139 } 
	t__c›y_èbÀ_t
;

142 
uöt32_t
* 
de°
;

143 
uöt32_t
 
wÀn
;

144 } 
	t__zîo_èbÀ_t
;

146 c⁄° 
__c›y_èbÀ_t
 
__c›y_èbÀ_°¨t__
;

147 c⁄° 
__c›y_èbÀ_t
 
__c›y_èbÀ_íd__
;

148 c⁄° 
__zîo_èbÀ_t
 
__zîo_èbÀ_°¨t__
;

149 c⁄° 
__zîo_èbÀ_t
 
__zîo_èbÀ_íd__
;

151 
__c›y_èbÀ_t
 c⁄°* 
pTabÀ
 = &
__c›y_èbÀ_°¨t__
;ÖTabÀ < &
__c›y_èbÀ_íd__
; ++pTable) {

152 
uöt32_t
 
i
=0u; i<
pTabÀ
->
wÀn
; ++i) {

153 
pTabÀ
->
de°
[
i
] =ÖTabÀ->
§c
[i];

157 
__zîo_èbÀ_t
 c⁄°* 
pTabÀ
 = &
__zîo_èbÀ_°¨t__
;ÖTabÀ < &
__zîo_èbÀ_íd__
; ++pTable) {

158 
uöt32_t
 
i
=0u; i<
pTabÀ
->
wÀn
; ++i) {

159 
pTabÀ
->
de°
[
i
] = 0u;

163 
	`_°¨t
();

164 
	}
}

166 
	#__PROGRAM_START
 
__cmsis_°¨t


	)

169 #i‚de‡
__INITIAL_SP


170 
	#__INITIAL_SP
 
__SèckT›


	)

173 #i‚de‡
__STACK_LIMIT


174 
	#__STACK_LIMIT
 
__SèckLimô


	)

177 #i‚de‡
__VECTOR_TABLE


178 
	#__VECTOR_TABLE
 
__Ve˘‹s


	)

181 #i‚de‡
__VECTOR_TABLE_ATTRIBUTE


182 
	#__VECTOR_TABLE_ATTRIBUTE
 
	`__©åibuã
((
u£d
, 
	`£˘i⁄
(".ve˘‹s")))

	)

196 
__STATIC_FORCEINLINE
 
	$__íabÀ_úq
()

198 
__ASM
 volatile ("cpsie i" : : : "memory");

199 
	}
}

207 
__STATIC_FORCEINLINE
 
	$__dißbÀ_úq
()

209 
__ASM
 volatile ("cpsid i" : : : "memory");

210 
	}
}

218 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__gë_CONTROL
()

220 
uöt32_t
 
ªsu…
;

222 
__ASM
 vﬁ©ûê("MRS %0, c⁄åﬁ" : "Ù" (
ªsu…
) );

223 (
ªsu…
);

224 
	}
}

227 #i‡(
deföed
 (
__ARM_FEATURE_CMSE
 ) && (__ARM_FEATURE_CMSE == 3))

233 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__TZ_gë_CONTROL_NS
()

235 
uöt32_t
 
ªsu…
;

237 
__ASM
 vﬁ©ûê("MRS %0, c⁄åﬁ_ns" : "Ù" (
ªsu…
) );

238 (
ªsu…
);

239 
	}
}

248 
__STATIC_FORCEINLINE
 
	$__£t_CONTROL
(
uöt32_t
 
c⁄åﬁ
)

250 
__ASM
 vﬁ©ûê("MSR c⁄åﬁ, %0" : : "r" (
c⁄åﬁ
) : "memory");

251 
	}
}

254 #i‡(
deföed
 (
__ARM_FEATURE_CMSE
 ) && (__ARM_FEATURE_CMSE == 3))

260 
__STATIC_FORCEINLINE
 
	$__TZ_£t_CONTROL_NS
(
uöt32_t
 
c⁄åﬁ
)

262 
__ASM
 vﬁ©ûê("MSR c⁄åﬁ_ns, %0" : : "r" (
c⁄åﬁ
) : "memory");

263 
	}
}

272 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__gë_IPSR
()

274 
uöt32_t
 
ªsu…
;

276 
__ASM
 vﬁ©ûê("MRS %0, ip§" : "Ù" (
ªsu…
) );

277 (
ªsu…
);

278 
	}
}

286 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__gë_APSR
()

288 
uöt32_t
 
ªsu…
;

290 
__ASM
 vﬁ©ûê("MRS %0,áp§" : "Ù" (
ªsu…
) );

291 (
ªsu…
);

292 
	}
}

300 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__gë_xPSR
()

302 
uöt32_t
 
ªsu…
;

304 
__ASM
 vﬁ©ûê("MRS %0, xp§" : "Ù" (
ªsu…
) );

305 (
ªsu…
);

306 
	}
}

314 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__gë_PSP
()

316 
uöt32_t
 
ªsu…
;

318 
__ASM
 vﬁ©ûê("MRS %0,Ö•" : "Ù" (
ªsu…
) );

319 (
ªsu…
);

320 
	}
}

323 #i‡(
deföed
 (
__ARM_FEATURE_CMSE
 ) && (__ARM_FEATURE_CMSE == 3))

329 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__TZ_gë_PSP_NS
()

331 
uöt32_t
 
ªsu…
;

333 
__ASM
 vﬁ©ûê("MRS %0,Ö•_ns" : "Ù" (
ªsu…
) );

334 (
ªsu…
);

335 
	}
}

344 
__STATIC_FORCEINLINE
 
	$__£t_PSP
(
uöt32_t
 
t›OfProcSèck
)

346 
__ASM
 vﬁ©ûê("MSRÖ•, %0" : : "r" (
t›OfProcSèck
) : );

347 
	}
}

350 #i‡(
deföed
 (
__ARM_FEATURE_CMSE
 ) && (__ARM_FEATURE_CMSE == 3))

356 
__STATIC_FORCEINLINE
 
	$__TZ_£t_PSP_NS
(
uöt32_t
 
t›OfProcSèck
)

358 
__ASM
 vﬁ©ûê("MSRÖ•_ns, %0" : : "r" (
t›OfProcSèck
) : );

359 
	}
}

368 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__gë_MSP
()

370 
uöt32_t
 
ªsu…
;

372 
__ASM
 vﬁ©ûê("MRS %0, m•" : "Ù" (
ªsu…
) );

373 (
ªsu…
);

374 
	}
}

377 #i‡(
deföed
 (
__ARM_FEATURE_CMSE
 ) && (__ARM_FEATURE_CMSE == 3))

383 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__TZ_gë_MSP_NS
()

385 
uöt32_t
 
ªsu…
;

387 
__ASM
 vﬁ©ûê("MRS %0, m•_ns" : "Ù" (
ªsu…
) );

388 (
ªsu…
);

389 
	}
}

398 
__STATIC_FORCEINLINE
 
	$__£t_MSP
(
uöt32_t
 
t›OfMaöSèck
)

400 
__ASM
 vﬁ©ûê("MSR m•, %0" : : "r" (
t›OfMaöSèck
) : );

401 
	}
}

404 #i‡(
deföed
 (
__ARM_FEATURE_CMSE
 ) && (__ARM_FEATURE_CMSE == 3))

410 
__STATIC_FORCEINLINE
 
	$__TZ_£t_MSP_NS
(
uöt32_t
 
t›OfMaöSèck
)

412 
__ASM
 vﬁ©ûê("MSR m•_ns, %0" : : "r" (
t›OfMaöSèck
) : );

413 
	}
}

417 #i‡(
deföed
 (
__ARM_FEATURE_CMSE
 ) && (__ARM_FEATURE_CMSE == 3))

423 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__TZ_gë_SP_NS
()

425 
uöt32_t
 
ªsu…
;

427 
__ASM
 vﬁ©ûê("MRS %0, sp_ns" : "Ù" (
ªsu…
) );

428 (
ªsu…
);

429 
	}
}

437 
__STATIC_FORCEINLINE
 
	$__TZ_£t_SP_NS
(
uöt32_t
 
t›OfSèck
)

439 
__ASM
 vﬁ©ûê("MSR sp_ns, %0" : : "r" (
t›OfSèck
) : );

440 
	}
}

449 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__gë_PRIMASK
()

451 
uöt32_t
 
ªsu…
;

453 
__ASM
 vﬁ©ûê("MRS %0,Örimask" : "Ù" (
ªsu…
) :: "memory");

454 (
ªsu…
);

455 
	}
}

458 #i‡(
deföed
 (
__ARM_FEATURE_CMSE
 ) && (__ARM_FEATURE_CMSE == 3))

464 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__TZ_gë_PRIMASK_NS
()

466 
uöt32_t
 
ªsu…
;

468 
__ASM
 vﬁ©ûê("MRS %0,Örimask_ns" : "Ù" (
ªsu…
) :: "memory");

469 (
ªsu…
);

470 
	}
}

479 
__STATIC_FORCEINLINE
 
	$__£t_PRIMASK
(
uöt32_t
 
¥iMask
)

481 
__ASM
 vﬁ©ûê("MSRÖrimask, %0" : : "r" (
¥iMask
) : "memory");

482 
	}
}

485 #i‡(
deföed
 (
__ARM_FEATURE_CMSE
 ) && (__ARM_FEATURE_CMSE == 3))

491 
__STATIC_FORCEINLINE
 
	$__TZ_£t_PRIMASK_NS
(
uöt32_t
 
¥iMask
)

493 
__ASM
 vﬁ©ûê("MSRÖrimask_ns, %0" : : "r" (
¥iMask
) : "memory");

494 
	}
}

498 #i‡((
deföed
 (
__ARM_ARCH_7M__
 ) && (__ARM_ARCH_7M__ == 1)) || \

499 (
deföed
 (
__ARM_ARCH_7EM__
 ) && (
	g__ARM_ARCH_7EM__
 == 1)) || \

500 (
deföed
 (
__ARM_ARCH_8M_MAIN__
 ) && (__ARM_ARCH_8M_MAIN__ == 1)) )

506 
__STATIC_FORCEINLINE
 
	$__íabÀ_Áu…_úq
()

508 
__ASM
 volatile ("cpsie f" : : : "memory");

509 
	}
}

517 
__STATIC_FORCEINLINE
 
	$__dißbÀ_Áu…_úq
()

519 
__ASM
 volatile ("cpsid f" : : : "memory");

520 
	}
}

528 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__gë_BASEPRI
()

530 
uöt32_t
 
ªsu…
;

532 
__ASM
 vﬁ©ûê("MRS %0, ba£¥i" : "Ù" (
ªsu…
) );

533 (
ªsu…
);

534 
	}
}

537 #i‡(
deföed
 (
__ARM_FEATURE_CMSE
 ) && (__ARM_FEATURE_CMSE == 3))

543 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__TZ_gë_BASEPRI_NS
()

545 
uöt32_t
 
ªsu…
;

547 
__ASM
 vﬁ©ûê("MRS %0, ba£¥i_ns" : "Ù" (
ªsu…
) );

548 (
ªsu…
);

549 
	}
}

558 
__STATIC_FORCEINLINE
 
	$__£t_BASEPRI
(
uöt32_t
 
ba£Pri
)

560 
__ASM
 vﬁ©ûê("MSR ba£¥i, %0" : : "r" (
ba£Pri
) : "memory");

561 
	}
}

564 #i‡(
deföed
 (
__ARM_FEATURE_CMSE
 ) && (__ARM_FEATURE_CMSE == 3))

570 
__STATIC_FORCEINLINE
 
	$__TZ_£t_BASEPRI_NS
(
uöt32_t
 
ba£Pri
)

572 
__ASM
 vﬁ©ûê("MSR ba£¥i_ns, %0" : : "r" (
ba£Pri
) : "memory");

573 
	}
}

583 
__STATIC_FORCEINLINE
 
	$__£t_BASEPRI_MAX
(
uöt32_t
 
ba£Pri
)

585 
__ASM
 vﬁ©ûê("MSR ba£¥i_max, %0" : : "r" (
ba£Pri
) : "memory");

586 
	}
}

594 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__gë_FAULTMASK
()

596 
uöt32_t
 
ªsu…
;

598 
__ASM
 vﬁ©ûê("MRS %0, fau…mask" : "Ù" (
ªsu…
) );

599 (
ªsu…
);

600 
	}
}

603 #i‡(
deföed
 (
__ARM_FEATURE_CMSE
 ) && (__ARM_FEATURE_CMSE == 3))

609 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__TZ_gë_FAULTMASK_NS
()

611 
uöt32_t
 
ªsu…
;

613 
__ASM
 vﬁ©ûê("MRS %0, fau…mask_ns" : "Ù" (
ªsu…
) );

614 (
ªsu…
);

615 
	}
}

624 
__STATIC_FORCEINLINE
 
	$__£t_FAULTMASK
(
uöt32_t
 
Áu…Mask
)

626 
__ASM
 vﬁ©ûê("MSR fau…mask, %0" : : "r" (
Áu…Mask
) : "memory");

627 
	}
}

630 #i‡(
deföed
 (
__ARM_FEATURE_CMSE
 ) && (__ARM_FEATURE_CMSE == 3))

636 
__STATIC_FORCEINLINE
 
	$__TZ_£t_FAULTMASK_NS
(
uöt32_t
 
Áu…Mask
)

638 
__ASM
 vﬁ©ûê("MSR fau…mask_ns, %0" : : "r" (
Áu…Mask
) : "memory");

639 
	}
}

643 (
deföed
 (
__ARM_ARCH_7EM__
 ) && (
	g__ARM_ARCH_7EM__
 == 1)) || \

644 (
deföed
 (
__ARM_ARCH_8M_MAIN__
 ) && (__ARM_ARCH_8M_MAIN__ == 1)) ) */

647 #i‡((
deföed
 (
__ARM_ARCH_8M_MAIN__
 ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \

648 (
deföed
 (
__ARM_ARCH_8M_BASE__
 ) && (__ARM_ARCH_8M_BASE__ == 1)) )

659 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__gë_PSPLIM
()

661 #i‡(!(
	`deföed
 (
__ARM_ARCH_8M_MAIN__
 ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \

662 (!
	`deföed
 (
__ARM_FEATURE_CMSE
) || (__ARM_FEATURE_CMSE < 3)))

666 
uöt32_t
 
ªsu…
;

667 
__ASM
 vﬁ©ûê("MRS %0,Ö•lim" : "Ù" (
ªsu…
) );

668  
ªsu…
;

670 
	}
}

672 #i‡(
deföed
 (
__ARM_FEATURE_CMSE
) && (__ARM_FEATURE_CMSE == 3))

681 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__TZ_gë_PSPLIM_NS
()

683 #i‡(!(
	`deföed
 (
__ARM_ARCH_8M_MAIN__
 ) && (__ARM_ARCH_8M_MAIN__ == 1)))

687 
uöt32_t
 
ªsu…
;

688 
__ASM
 vﬁ©ûê("MRS %0,Ö•lim_ns" : "Ù" (
ªsu…
) );

689  
ªsu…
;

691 
	}
}

704 
__STATIC_FORCEINLINE
 
	$__£t_PSPLIM
(
uöt32_t
 
ProcSèckPåLimô
)

706 #i‡(!(
	`deföed
 (
__ARM_ARCH_8M_MAIN__
 ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \

707 (!
	`deföed
 (
__ARM_FEATURE_CMSE
) || (__ARM_FEATURE_CMSE < 3)))

709 ()
ProcSèckPåLimô
;

711 
__ASM
 vﬁ©ûê("MSRÖ•lim, %0" : : "r" (
ProcSèckPåLimô
));

713 
	}
}

716 #i‡(
deföed
 (
__ARM_FEATURE_CMSE
 ) && (__ARM_FEATURE_CMSE == 3))

725 
__STATIC_FORCEINLINE
 
	$__TZ_£t_PSPLIM_NS
(
uöt32_t
 
ProcSèckPåLimô
)

727 #i‡(!(
	`deföed
 (
__ARM_ARCH_8M_MAIN__
 ) && (__ARM_ARCH_8M_MAIN__ == 1)))

729 ()
ProcSèckPåLimô
;

731 
__ASM
 vﬁ©ûê("MSRÖ•lim_ns, %0\n" : : "r" (
ProcSèckPåLimô
));

733 
	}
}

746 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__gë_MSPLIM
()

748 #i‡(!(
	`deföed
 (
__ARM_ARCH_8M_MAIN__
 ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \

749 (!
	`deföed
 (
__ARM_FEATURE_CMSE
) || (__ARM_FEATURE_CMSE < 3)))

753 
uöt32_t
 
ªsu…
;

754 
__ASM
 vﬁ©ûê("MRS %0, m•lim" : "Ù" (
ªsu…
) );

755  
ªsu…
;

757 
	}
}

760 #i‡(
deföed
 (
__ARM_FEATURE_CMSE
 ) && (__ARM_FEATURE_CMSE == 3))

769 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__TZ_gë_MSPLIM_NS
()

771 #i‡(!(
	`deföed
 (
__ARM_ARCH_8M_MAIN__
 ) && (__ARM_ARCH_8M_MAIN__ == 1)))

775 
uöt32_t
 
ªsu…
;

776 
__ASM
 vﬁ©ûê("MRS %0, m•lim_ns" : "Ù" (
ªsu…
) );

777  
ªsu…
;

779 
	}
}

792 
__STATIC_FORCEINLINE
 
	$__£t_MSPLIM
(
uöt32_t
 
MaöSèckPåLimô
)

794 #i‡(!(
	`deföed
 (
__ARM_ARCH_8M_MAIN__
 ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \

795 (!
	`deföed
 (
__ARM_FEATURE_CMSE
) || (__ARM_FEATURE_CMSE < 3)))

797 ()
MaöSèckPåLimô
;

799 
__ASM
 vﬁ©ûê("MSR m•lim, %0" : : "r" (
MaöSèckPåLimô
));

801 
	}
}

804 #i‡(
deföed
 (
__ARM_FEATURE_CMSE
 ) && (__ARM_FEATURE_CMSE == 3))

813 
__STATIC_FORCEINLINE
 
	$__TZ_£t_MSPLIM_NS
(
uöt32_t
 
MaöSèckPåLimô
)

815 #i‡(!(
	`deföed
 (
__ARM_ARCH_8M_MAIN__
 ) && (__ARM_ARCH_8M_MAIN__ == 1)))

817 ()
MaöSèckPåLimô
;

819 
__ASM
 vﬁ©ûê("MSR m•lim_ns, %0" : : "r" (
MaöSèckPåLimô
));

821 
	}
}

825 (
deföed
 (
__ARM_ARCH_8M_BASE__
 ) && (
	g__ARM_ARCH_8M_BASE__
 == 1)) ) */

833 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__gë_FPSCR
()

835 #i‡((
	`deföed
 (
__FPU_PRESENT
) && (__FPU_PRESENT == 1U)) && \

836 (
	`deföed
 (
__FPU_USED
 ) && (__FPU_USED == 1U)) )

837 #i‡
	`__has_buûtö
(
__buûtö_¨m_gë_Âs¸
)

841  
	`__buûtö_¨m_gë_Âs¸
();

843 
uöt32_t
 
ªsu…
;

845 
__ASM
 vﬁ©ûê("VMRS %0, fps¸" : "Ù" (
ªsu…
) );

846 (
ªsu…
);

851 
	}
}

859 
__STATIC_FORCEINLINE
 
	$__£t_FPSCR
(
uöt32_t
 
Âs¸
)

861 #i‡((
	`deföed
 (
__FPU_PRESENT
) && (__FPU_PRESENT == 1U)) && \

862 (
	`deföed
 (
__FPU_USED
 ) && (__FPU_USED == 1U)) )

863 #i‡
	`__has_buûtö
(
__buûtö_¨m_£t_Âs¸
)

867 
	`__buûtö_¨m_£t_Âs¸
(
Âs¸
);

869 
__ASM
 vﬁ©ûê("VMSR fps¸, %0" : : "r" (
Âs¸
) : "vfpcc", "memory");

872 ()
Âs¸
;

874 
	}
}

889 #i‡
deföed
 (
__thumb__
Ë&& !deföed (
__thumb2__
)

890 
	#__CMSIS_GCC_OUT_REG
(
r
Ë"ˆ" (r)

	)

891 
	#__CMSIS_GCC_RW_REG
(
r
Ë"+l" (r)

	)

892 
	#__CMSIS_GCC_USE_REG
(
r
Ë"l" (r)

	)

894 
	#__CMSIS_GCC_OUT_REG
(
r
Ë"Ù" (r)

	)

895 
	#__CMSIS_GCC_RW_REG
(
r
Ë"+r" (r)

	)

896 
	#__CMSIS_GCC_USE_REG
(
r
Ë"r" (r)

	)

903 
	#__NOP
(Ë
__ASM
 vﬁ©ûê("n›")

	)

909 
	#__WFI
(Ë
__ASM
 vﬁ©ûê("wfi")

	)

917 
	#__WFE
(Ë
__ASM
 vﬁ©ûê("w„")

	)

924 
	#__SEV
(Ë
__ASM
 vﬁ©ûê("£v")

	)

933 
__STATIC_FORCEINLINE
 
	$__ISB
()

935 
__ASM
 volatile ("isb 0xF":::"memory");

936 
	}
}

944 
__STATIC_FORCEINLINE
 
	$__DSB
()

946 
__ASM
 volatile ("dsb 0xF":::"memory");

947 
	}
}

955 
__STATIC_FORCEINLINE
 
	$__DMB
()

957 
__ASM
 volatile ("dmb 0xF":::"memory");

958 
	}
}

967 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__REV
(
uöt32_t
 
vÆue
)

969 #i‡(
__GNUC__
 > 4Ë|| (__GNUC__ =4 && 
__GNUC_MINOR__
 >= 5)

970  
	`__buûtö_bsw≠32
(
vÆue
);

972 
uöt32_t
 
ªsu…
;

974 
__ASM
 vﬁ©ûê("ªv %0, %1" : 
	`__CMSIS_GCC_OUT_REG
 (
ªsu…
Ë: 
	`__CMSIS_GCC_USE_REG
 (
vÆue
) );

975  
ªsu…
;

977 
	}
}

986 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__REV16
(
uöt32_t
 
vÆue
)

988 
uöt32_t
 
ªsu…
;

990 
__ASM
 vﬁ©ûê("ªv16 %0, %1" : 
	`__CMSIS_GCC_OUT_REG
 (
ªsu…
Ë: 
	`__CMSIS_GCC_USE_REG
 (
vÆue
) );

991  
ªsu…
;

992 
	}
}

1001 
__STATIC_FORCEINLINE
 
öt16_t
 
	$__REVSH
(
öt16_t
 
vÆue
)

1003 #i‡(
__GNUC__
 > 4Ë|| (__GNUC__ =4 && 
__GNUC_MINOR__
 >= 8)

1004  (
öt16_t
)
	`__buûtö_bsw≠16
(
vÆue
);

1006 
öt16_t
 
ªsu…
;

1008 
__ASM
 vﬁ©ûê("ªvsh %0, %1" : 
	`__CMSIS_GCC_OUT_REG
 (
ªsu…
Ë: 
	`__CMSIS_GCC_USE_REG
 (
vÆue
) );

1009  
ªsu…
;

1011 
	}
}

1021 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__ROR
(
uöt32_t
 
›1
, uöt32_à
›2
)

1023 
›2
 %= 32U;

1024 i‡(
›2
 == 0U)

1026  
›1
;

1028  (
›1
 >> 
›2
) | (op1 << (32U - op2));

1029 
	}
}

1039 
	#__BKPT
(
vÆue
Ë
__ASM
 vﬁ©ûê("bk± "#vÆue)

	)

1048 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__RBIT
(
uöt32_t
 
vÆue
)

1050 
uöt32_t
 
ªsu…
;

1052 #i‡((
	`deföed
 (
__ARM_ARCH_7M__
 ) && (__ARM_ARCH_7M__ == 1)) || \

1053 (
	`deföed
 (
__ARM_ARCH_7EM__
 ) && (__ARM_ARCH_7EM__ == 1)) || \

1054 (
	`deföed
 (
__ARM_ARCH_8M_MAIN__
 ) && (__ARM_ARCH_8M_MAIN__ == 1)) )

1055 
__ASM
 vﬁ©ûê("rbô %0, %1" : "Ù" (
ªsu…
Ë: "r" (
vÆue
) );

1057 
uöt32_t
 
s
 = (4U * 8U) - 1U;

1059 
ªsu…
 = 
vÆue
;

1060 
vÆue
 >>= 1U; value != 0U; value >>= 1U)

1062 
ªsu…
 <<= 1U;

1063 
ªsu…
 |
vÆue
 & 1U;

1064 
s
--;

1066 
ªsu…
 <<
s
;

1068  
ªsu…
;

1069 
	}
}

1078 
__STATIC_FORCEINLINE
 
uöt8_t
 
	$__CLZ
(
uöt32_t
 
vÆue
)

1089 i‡(
vÆue
 == 0U)

1093  
	`__buûtö_˛z
(
vÆue
);

1094 
	}
}

1097 #i‡((
deföed
 (
__ARM_ARCH_7M__
 ) && (__ARM_ARCH_7M__ == 1)) || \

1098 (
deföed
 (
__ARM_ARCH_7EM__
 ) && (
	g__ARM_ARCH_7EM__
 == 1)) || \

1099 (
deföed
 (
__ARM_ARCH_8M_MAIN__
 ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \

1100 (
deföed
 (
__ARM_ARCH_8M_BASE__
 ) && (__ARM_ARCH_8M_BASE__ == 1)) )

1107 
__STATIC_FORCEINLINE
 
uöt8_t
 
	$__LDREXB
(vﬁ©ûê
uöt8_t
 *
addr
)

1109 
uöt32_t
 
ªsu…
;

1111 #i‡(
__GNUC__
 > 4Ë|| (__GNUC__ =4 && 
__GNUC_MINOR__
 >= 8)

1112 
__ASM
 vﬁ©ûê("ldªxb %0, %1" : "Ù" (
ªsu…
Ë: "Q" (*
addr
) );

1117 
__ASM
 vﬁ©ûê("ldªxb %0, [%1]" : "Ù" (
ªsu…
Ë: "r" (
addr
) : "memory" );

1119  ((
uöt8_t
Ë
ªsu…
);

1120 
	}
}

1129 
__STATIC_FORCEINLINE
 
uöt16_t
 
	$__LDREXH
(vﬁ©ûê
uöt16_t
 *
addr
)

1131 
uöt32_t
 
ªsu…
;

1133 #i‡(
__GNUC__
 > 4Ë|| (__GNUC__ =4 && 
__GNUC_MINOR__
 >= 8)

1134 
__ASM
 vﬁ©ûê("ldªxh %0, %1" : "Ù" (
ªsu…
Ë: "Q" (*
addr
) );

1139 
__ASM
 vﬁ©ûê("ldªxh %0, [%1]" : "Ù" (
ªsu…
Ë: "r" (
addr
) : "memory" );

1141  ((
uöt16_t
Ë
ªsu…
);

1142 
	}
}

1151 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__LDREXW
(vﬁ©ûê
uöt32_t
 *
addr
)

1153 
uöt32_t
 
ªsu…
;

1155 
__ASM
 vﬁ©ûê("ldªx %0, %1" : "Ù" (
ªsu…
Ë: "Q" (*
addr
) );

1156 (
ªsu…
);

1157 
	}
}

1168 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__STREXB
(
uöt8_t
 
vÆue
, vﬁ©ûêuöt8_à*
addr
)

1170 
uöt32_t
 
ªsu…
;

1172 
__ASM
 vﬁ©ûê("°ªxb %0, %2, %1" : "=&r" (
ªsu…
), "=Q" (*
addr
Ë: "r" ((
uöt32_t
)
vÆue
) );

1173 (
ªsu…
);

1174 
	}
}

1185 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__STREXH
(
uöt16_t
 
vÆue
, vﬁ©ûêuöt16_à*
addr
)

1187 
uöt32_t
 
ªsu…
;

1189 
__ASM
 vﬁ©ûê("°ªxh %0, %2, %1" : "=&r" (
ªsu…
), "=Q" (*
addr
Ë: "r" ((
uöt32_t
)
vÆue
) );

1190 (
ªsu…
);

1191 
	}
}

1202 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__STREXW
(
uöt32_t
 
vÆue
, vﬁ©ûêuöt32_à*
addr
)

1204 
uöt32_t
 
ªsu…
;

1206 
__ASM
 vﬁ©ûê("°ªx %0, %2, %1" : "=&r" (
ªsu…
), "=Q" (*
addr
Ë: "r" (
vÆue
) );

1207 (
ªsu…
);

1208 
	}
}

1215 
__STATIC_FORCEINLINE
 
	$__CLREX
()

1217 
__ASM
 volatile ("clrex" ::: "memory");

1218 
	}
}

1221 (
deföed
 (
__ARM_ARCH_7EM__
 ) && (
	g__ARM_ARCH_7EM__
 == 1)) || \

1222 (
deföed
 (
__ARM_ARCH_8M_MAIN__
 ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \

1223 (
deföed
 (
__ARM_ARCH_8M_BASE__
 ) && (__ARM_ARCH_8M_BASE__ == 1)) ) */

1226 #i‡((
deföed
 (
__ARM_ARCH_7M__
 ) && (__ARM_ARCH_7M__ == 1)) || \

1227 (
deföed
 (
__ARM_ARCH_7EM__
 ) && (__ARM_ARCH_7EM__ == 1)) || \

1228 (
deföed
 (
__ARM_ARCH_8M_MAIN__
 ) && (__ARM_ARCH_8M_MAIN__ == 1)) )

1236 
	#__SSAT
(
ARG1
,
ARG2
) \

1237 
__exãnsi⁄__
 \

1239 
öt32_t
 
__RES
, 
__ARG1
 = (
ARG1
); \

1240 
	`__ASM
 ("sßà%0, %1, %2" : "Ù" (
__RES
Ë: "I" (
ARG2
), "r" (
__ARG1
) ); \

1241 
__RES
; \

1242 })

	)

1252 
	#__USAT
(
ARG1
,
ARG2
) \

1253 
__exãnsi⁄__
 \

1255 
uöt32_t
 
__RES
, 
__ARG1
 = (
ARG1
); \

1256 
	`__ASM
 ("ußà%0, %1, %2" : "Ù" (
__RES
Ë: "I" (
ARG2
), "r" (
__ARG1
) ); \

1257 
__RES
; \

1258 })

	)

1268 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__RRX
(
uöt32_t
 
vÆue
)

1270 
uöt32_t
 
ªsu…
;

1272 
__ASM
 vﬁ©ûê("ºx %0, %1" : 
	`__CMSIS_GCC_OUT_REG
 (
ªsu…
Ë: 
	`__CMSIS_GCC_USE_REG
 (
vÆue
) );

1273 (
ªsu…
);

1274 
	}
}

1283 
__STATIC_FORCEINLINE
 
uöt8_t
 
	$__LDRBT
(vﬁ©ûê
uöt8_t
 *
±r
)

1285 
uöt32_t
 
ªsu…
;

1287 #i‡(
__GNUC__
 > 4Ë|| (__GNUC__ =4 && 
__GNUC_MINOR__
 >= 8)

1288 
__ASM
 vﬁ©ûê("ldrbà%0, %1" : "Ù" (
ªsu…
Ë: "Q" (*
±r
) );

1293 
__ASM
 vﬁ©ûê("ldrbà%0, [%1]" : "Ù" (
ªsu…
Ë: "r" (
±r
) : "memory" );

1295  ((
uöt8_t
Ë
ªsu…
);

1296 
	}
}

1305 
__STATIC_FORCEINLINE
 
uöt16_t
 
	$__LDRHT
(vﬁ©ûê
uöt16_t
 *
±r
)

1307 
uöt32_t
 
ªsu…
;

1309 #i‡(
__GNUC__
 > 4Ë|| (__GNUC__ =4 && 
__GNUC_MINOR__
 >= 8)

1310 
__ASM
 vﬁ©ûê("ldrhà%0, %1" : "Ù" (
ªsu…
Ë: "Q" (*
±r
) );

1315 
__ASM
 vﬁ©ûê("ldrhà%0, [%1]" : "Ù" (
ªsu…
Ë: "r" (
±r
) : "memory" );

1317  ((
uöt16_t
Ë
ªsu…
);

1318 
	}
}

1327 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__LDRT
(vﬁ©ûê
uöt32_t
 *
±r
)

1329 
uöt32_t
 
ªsu…
;

1331 
__ASM
 vﬁ©ûê("ldπ %0, %1" : "Ù" (
ªsu…
Ë: "Q" (*
±r
) );

1332 (
ªsu…
);

1333 
	}
}

1342 
__STATIC_FORCEINLINE
 
	$__STRBT
(
uöt8_t
 
vÆue
, vﬁ©ûêuöt8_à*
±r
)

1344 
__ASM
 vﬁ©ûê("°rbà%1, %0" : "=Q" (*
±r
Ë: "r" ((
uöt32_t
)
vÆue
) );

1345 
	}
}

1354 
__STATIC_FORCEINLINE
 
	$__STRHT
(
uöt16_t
 
vÆue
, vﬁ©ûêuöt16_à*
±r
)

1356 
__ASM
 vﬁ©ûê("°rhà%1, %0" : "=Q" (*
±r
Ë: "r" ((
uöt32_t
)
vÆue
) );

1357 
	}
}

1366 
__STATIC_FORCEINLINE
 
	$__STRT
(
uöt32_t
 
vÆue
, vﬁ©ûêuöt32_à*
±r
)

1368 
__ASM
 vﬁ©ûê("°π %1, %0" : "=Q" (*
±r
Ë: "r" (
vÆue
) );

1369 
	}
}

1372 (
deföed
 (
__ARM_ARCH_7EM__
 ) && (
	g__ARM_ARCH_7EM__
 == 1)) || \

1373 (
deföed
 (
__ARM_ARCH_8M_MAIN__
 ) && (__ARM_ARCH_8M_MAIN__ == 1)) ) */

1382 
__STATIC_FORCEINLINE
 
öt32_t
 
	$__SSAT
(
öt32_t
 
vÆ
, 
uöt32_t
 
ßt
)

1384 i‡((
ßt
 >= 1U) && (sat <= 32U))

1386 c⁄° 
öt32_t
 
max
 = (öt32_t)((1U << (
ßt
 - 1U)) - 1U);

1387 c⁄° 
öt32_t
 
mö
 = -1 - 
max
 ;

1388 i‡(
vÆ
 > 
max
)

1390  
max
;

1392 i‡(
vÆ
 < 
mö
)

1394  
mö
;

1397  
vÆ
;

1398 
	}
}

1407 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__USAT
(
öt32_t
 
vÆ
, 
uöt32_t
 
ßt
)

1409 i‡(
ßt
 <= 31U)

1411 c⁄° 
uöt32_t
 
max
 = ((1U << 
ßt
) - 1U);

1412 i‡(
vÆ
 > (
öt32_t
)
max
)

1414  
max
;

1416 i‡(
vÆ
 < 0)

1421  (
uöt32_t
)
vÆ
;

1422 
	}
}

1425 (
deföed
 (
__ARM_ARCH_7EM__
 ) && (
	g__ARM_ARCH_7EM__
 == 1)) || \

1426 (
deföed
 (
__ARM_ARCH_8M_MAIN__
 ) && (__ARM_ARCH_8M_MAIN__ == 1)) ) */

1429 #i‡((
deföed
 (
__ARM_ARCH_8M_MAIN__
 ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \

1430 (
deföed
 (
__ARM_ARCH_8M_BASE__
 ) && (__ARM_ARCH_8M_BASE__ == 1)) )

1437 
__STATIC_FORCEINLINE
 
uöt8_t
 
	$__LDAB
(vﬁ©ûê
uöt8_t
 *
±r
)

1439 
uöt32_t
 
ªsu…
;

1441 
__ASM
 vﬁ©ûê("ldab %0, %1" : "Ù" (
ªsu…
Ë: "Q" (*
±r
) );

1442  ((
uöt8_t
Ë
ªsu…
);

1443 
	}
}

1452 
__STATIC_FORCEINLINE
 
uöt16_t
 
	$__LDAH
(vﬁ©ûê
uöt16_t
 *
±r
)

1454 
uöt32_t
 
ªsu…
;

1456 
__ASM
 vﬁ©ûê("ldah %0, %1" : "Ù" (
ªsu…
Ë: "Q" (*
±r
) );

1457  ((
uöt16_t
Ë
ªsu…
);

1458 
	}
}

1467 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__LDA
(vﬁ©ûê
uöt32_t
 *
±r
)

1469 
uöt32_t
 
ªsu…
;

1471 
__ASM
 vﬁ©ûê("ld®%0, %1" : "Ù" (
ªsu…
Ë: "Q" (*
±r
) );

1472 (
ªsu…
);

1473 
	}
}

1482 
__STATIC_FORCEINLINE
 
	$__STLB
(
uöt8_t
 
vÆue
, vﬁ©ûêuöt8_à*
±r
)

1484 
__ASM
 vﬁ©ûê("°lb %1, %0" : "=Q" (*
±r
Ë: "r" ((
uöt32_t
)
vÆue
) );

1485 
	}
}

1494 
__STATIC_FORCEINLINE
 
	$__STLH
(
uöt16_t
 
vÆue
, vﬁ©ûêuöt16_à*
±r
)

1496 
__ASM
 vﬁ©ûê("°lh %1, %0" : "=Q" (*
±r
Ë: "r" ((
uöt32_t
)
vÆue
) );

1497 
	}
}

1506 
__STATIC_FORCEINLINE
 
	$__STL
(
uöt32_t
 
vÆue
, vﬁ©ûêuöt32_à*
±r
)

1508 
__ASM
 vﬁ©ûê("°»%1, %0" : "=Q" (*
±r
Ë: "r" ((
uöt32_t
)
vÆue
) );

1509 
	}
}

1518 
__STATIC_FORCEINLINE
 
uöt8_t
 
	$__LDAEXB
(vﬁ©ûê
uöt8_t
 *
±r
)

1520 
uöt32_t
 
ªsu…
;

1522 
__ASM
 vﬁ©ûê("ld´xb %0, %1" : "Ù" (
ªsu…
Ë: "Q" (*
±r
) );

1523  ((
uöt8_t
Ë
ªsu…
);

1524 
	}
}

1533 
__STATIC_FORCEINLINE
 
uöt16_t
 
	$__LDAEXH
(vﬁ©ûê
uöt16_t
 *
±r
)

1535 
uöt32_t
 
ªsu…
;

1537 
__ASM
 vﬁ©ûê("ld´xh %0, %1" : "Ù" (
ªsu…
Ë: "Q" (*
±r
) );

1538  ((
uöt16_t
Ë
ªsu…
);

1539 
	}
}

1548 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__LDAEX
(vﬁ©ûê
uöt32_t
 *
±r
)

1550 
uöt32_t
 
ªsu…
;

1552 
__ASM
 vﬁ©ûê("ld´x %0, %1" : "Ù" (
ªsu…
Ë: "Q" (*
±r
) );

1553 (
ªsu…
);

1554 
	}
}

1565 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__STLEXB
(
uöt8_t
 
vÆue
, vﬁ©ûêuöt8_à*
±r
)

1567 
uöt32_t
 
ªsu…
;

1569 
__ASM
 vﬁ©ûê("°Àxb %0, %2, %1" : "=&r" (
ªsu…
), "=Q" (*
±r
Ë: "r" ((
uöt32_t
)
vÆue
) );

1570 (
ªsu…
);

1571 
	}
}

1582 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__STLEXH
(
uöt16_t
 
vÆue
, vﬁ©ûêuöt16_à*
±r
)

1584 
uöt32_t
 
ªsu…
;

1586 
__ASM
 vﬁ©ûê("°Àxh %0, %2, %1" : "=&r" (
ªsu…
), "=Q" (*
±r
Ë: "r" ((
uöt32_t
)
vÆue
) );

1587 (
ªsu…
);

1588 
	}
}

1599 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__STLEX
(
uöt32_t
 
vÆue
, vﬁ©ûêuöt32_à*
±r
)

1601 
uöt32_t
 
ªsu…
;

1603 
__ASM
 vﬁ©ûê("°Àx %0, %2, %1" : "=&r" (
ªsu…
), "=Q" (*
±r
Ë: "r" ((
uöt32_t
)
vÆue
) );

1604 (
ªsu…
);

1605 
	}
}

1608 (
deföed
 (
__ARM_ARCH_8M_BASE__
 ) && (
	g__ARM_ARCH_8M_BASE__
 == 1)) ) */

1619 #i‡(
deföed
 (
__ARM_FEATURE_DSP
) && (__ARM_FEATURE_DSP == 1))

1621 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__SADD8
(
uöt32_t
 
›1
, uöt32_à
›2
)

1623 
uöt32_t
 
ªsu…
;

1625 
__ASM
 vﬁ©ûê("ßdd8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1626 (
ªsu…
);

1627 
	}
}

1629 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__QADD8
(
uöt32_t
 
›1
, uöt32_à
›2
)

1631 
uöt32_t
 
ªsu…
;

1633 
__ASM
 vﬁ©ûê("qadd8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1634 (
ªsu…
);

1635 
	}
}

1637 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__SHADD8
(
uöt32_t
 
›1
, uöt32_à
›2
)

1639 
uöt32_t
 
ªsu…
;

1641 
__ASM
 vﬁ©ûê("shadd8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1642 (
ªsu…
);

1643 
	}
}

1645 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__UADD8
(
uöt32_t
 
›1
, uöt32_à
›2
)

1647 
uöt32_t
 
ªsu…
;

1649 
__ASM
 vﬁ©ûê("uadd8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1650 (
ªsu…
);

1651 
	}
}

1653 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__UQADD8
(
uöt32_t
 
›1
, uöt32_à
›2
)

1655 
uöt32_t
 
ªsu…
;

1657 
__ASM
 vﬁ©ûê("uqadd8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1658 (
ªsu…
);

1659 
	}
}

1661 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__UHADD8
(
uöt32_t
 
›1
, uöt32_à
›2
)

1663 
uöt32_t
 
ªsu…
;

1665 
__ASM
 vﬁ©ûê("uhadd8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1666 (
ªsu…
);

1667 
	}
}

1670 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__SSUB8
(
uöt32_t
 
›1
, uöt32_à
›2
)

1672 
uöt32_t
 
ªsu…
;

1674 
__ASM
 vﬁ©ûê("ssub8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1675 (
ªsu…
);

1676 
	}
}

1678 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__QSUB8
(
uöt32_t
 
›1
, uöt32_à
›2
)

1680 
uöt32_t
 
ªsu…
;

1682 
__ASM
 vﬁ©ûê("qsub8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1683 (
ªsu…
);

1684 
	}
}

1686 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__SHSUB8
(
uöt32_t
 
›1
, uöt32_à
›2
)

1688 
uöt32_t
 
ªsu…
;

1690 
__ASM
 vﬁ©ûê("shsub8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1691 (
ªsu…
);

1692 
	}
}

1694 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__USUB8
(
uöt32_t
 
›1
, uöt32_à
›2
)

1696 
uöt32_t
 
ªsu…
;

1698 
__ASM
 vﬁ©ûê("usub8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1699 (
ªsu…
);

1700 
	}
}

1702 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__UQSUB8
(
uöt32_t
 
›1
, uöt32_à
›2
)

1704 
uöt32_t
 
ªsu…
;

1706 
__ASM
 vﬁ©ûê("uqsub8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1707 (
ªsu…
);

1708 
	}
}

1710 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__UHSUB8
(
uöt32_t
 
›1
, uöt32_à
›2
)

1712 
uöt32_t
 
ªsu…
;

1714 
__ASM
 vﬁ©ûê("uhsub8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1715 (
ªsu…
);

1716 
	}
}

1719 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__SADD16
(
uöt32_t
 
›1
, uöt32_à
›2
)

1721 
uöt32_t
 
ªsu…
;

1723 
__ASM
 vﬁ©ûê("ßdd16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1724 (
ªsu…
);

1725 
	}
}

1727 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__QADD16
(
uöt32_t
 
›1
, uöt32_à
›2
)

1729 
uöt32_t
 
ªsu…
;

1731 
__ASM
 vﬁ©ûê("qadd16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1732 (
ªsu…
);

1733 
	}
}

1735 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__SHADD16
(
uöt32_t
 
›1
, uöt32_à
›2
)

1737 
uöt32_t
 
ªsu…
;

1739 
__ASM
 vﬁ©ûê("shadd16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1740 (
ªsu…
);

1741 
	}
}

1743 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__UADD16
(
uöt32_t
 
›1
, uöt32_à
›2
)

1745 
uöt32_t
 
ªsu…
;

1747 
__ASM
 vﬁ©ûê("uadd16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1748 (
ªsu…
);

1749 
	}
}

1751 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__UQADD16
(
uöt32_t
 
›1
, uöt32_à
›2
)

1753 
uöt32_t
 
ªsu…
;

1755 
__ASM
 vﬁ©ûê("uqadd16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1756 (
ªsu…
);

1757 
	}
}

1759 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__UHADD16
(
uöt32_t
 
›1
, uöt32_à
›2
)

1761 
uöt32_t
 
ªsu…
;

1763 
__ASM
 vﬁ©ûê("uhadd16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1764 (
ªsu…
);

1765 
	}
}

1767 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__SSUB16
(
uöt32_t
 
›1
, uöt32_à
›2
)

1769 
uöt32_t
 
ªsu…
;

1771 
__ASM
 vﬁ©ûê("ssub16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1772 (
ªsu…
);

1773 
	}
}

1775 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__QSUB16
(
uöt32_t
 
›1
, uöt32_à
›2
)

1777 
uöt32_t
 
ªsu…
;

1779 
__ASM
 vﬁ©ûê("qsub16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1780 (
ªsu…
);

1781 
	}
}

1783 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__SHSUB16
(
uöt32_t
 
›1
, uöt32_à
›2
)

1785 
uöt32_t
 
ªsu…
;

1787 
__ASM
 vﬁ©ûê("shsub16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1788 (
ªsu…
);

1789 
	}
}

1791 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__USUB16
(
uöt32_t
 
›1
, uöt32_à
›2
)

1793 
uöt32_t
 
ªsu…
;

1795 
__ASM
 vﬁ©ûê("usub16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1796 (
ªsu…
);

1797 
	}
}

1799 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__UQSUB16
(
uöt32_t
 
›1
, uöt32_à
›2
)

1801 
uöt32_t
 
ªsu…
;

1803 
__ASM
 vﬁ©ûê("uqsub16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1804 (
ªsu…
);

1805 
	}
}

1807 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__UHSUB16
(
uöt32_t
 
›1
, uöt32_à
›2
)

1809 
uöt32_t
 
ªsu…
;

1811 
__ASM
 vﬁ©ûê("uhsub16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1812 (
ªsu…
);

1813 
	}
}

1815 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__SASX
(
uöt32_t
 
›1
, uöt32_à
›2
)

1817 
uöt32_t
 
ªsu…
;

1819 
__ASM
 vﬁ©ûê("ßsx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1820 (
ªsu…
);

1821 
	}
}

1823 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__QASX
(
uöt32_t
 
›1
, uöt32_à
›2
)

1825 
uöt32_t
 
ªsu…
;

1827 
__ASM
 vﬁ©ûê("qasx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1828 (
ªsu…
);

1829 
	}
}

1831 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__SHASX
(
uöt32_t
 
›1
, uöt32_à
›2
)

1833 
uöt32_t
 
ªsu…
;

1835 
__ASM
 vﬁ©ûê("shasx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1836 (
ªsu…
);

1837 
	}
}

1839 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__UASX
(
uöt32_t
 
›1
, uöt32_à
›2
)

1841 
uöt32_t
 
ªsu…
;

1843 
__ASM
 vﬁ©ûê("uasx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1844 (
ªsu…
);

1845 
	}
}

1847 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__UQASX
(
uöt32_t
 
›1
, uöt32_à
›2
)

1849 
uöt32_t
 
ªsu…
;

1851 
__ASM
 vﬁ©ûê("uqasx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1852 (
ªsu…
);

1853 
	}
}

1855 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__UHASX
(
uöt32_t
 
›1
, uöt32_à
›2
)

1857 
uöt32_t
 
ªsu…
;

1859 
__ASM
 vﬁ©ûê("uhasx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1860 (
ªsu…
);

1861 
	}
}

1863 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__SSAX
(
uöt32_t
 
›1
, uöt32_à
›2
)

1865 
uöt32_t
 
ªsu…
;

1867 
__ASM
 vﬁ©ûê("sßx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1868 (
ªsu…
);

1869 
	}
}

1871 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__QSAX
(
uöt32_t
 
›1
, uöt32_à
›2
)

1873 
uöt32_t
 
ªsu…
;

1875 
__ASM
 vﬁ©ûê("qßx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1876 (
ªsu…
);

1877 
	}
}

1879 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__SHSAX
(
uöt32_t
 
›1
, uöt32_à
›2
)

1881 
uöt32_t
 
ªsu…
;

1883 
__ASM
 vﬁ©ûê("shßx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1884 (
ªsu…
);

1885 
	}
}

1887 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__USAX
(
uöt32_t
 
›1
, uöt32_à
›2
)

1889 
uöt32_t
 
ªsu…
;

1891 
__ASM
 vﬁ©ûê("ußx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1892 (
ªsu…
);

1893 
	}
}

1895 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__UQSAX
(
uöt32_t
 
›1
, uöt32_à
›2
)

1897 
uöt32_t
 
ªsu…
;

1899 
__ASM
 vﬁ©ûê("uqßx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1900 (
ªsu…
);

1901 
	}
}

1903 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__UHSAX
(
uöt32_t
 
›1
, uöt32_à
›2
)

1905 
uöt32_t
 
ªsu…
;

1907 
__ASM
 vﬁ©ûê("uhßx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1908 (
ªsu…
);

1909 
	}
}

1911 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__USAD8
(
uöt32_t
 
›1
, uöt32_à
›2
)

1913 
uöt32_t
 
ªsu…
;

1915 
__ASM
 vﬁ©ûê("ußd8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1916 (
ªsu…
);

1917 
	}
}

1919 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__USADA8
(
uöt32_t
 
›1
, uöt32_à
›2
, uöt32_à
›3
)

1921 
uöt32_t
 
ªsu…
;

1923 
__ASM
 vﬁ©ûê("ußda8 %0, %1, %2, %3" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
), "r" (
›3
) );

1924 (
ªsu…
);

1925 
	}
}

1927 
	#__SSAT16
(
ARG1
,
ARG2
) \

1929 
öt32_t
 
__RES
, 
__ARG1
 = (
ARG1
); \

1930 
	`__ASM
 ("sßt16 %0, %1, %2" : "Ù" (
__RES
Ë: "I" (
ARG2
), "r" (
__ARG1
) ); \

1931 
__RES
; \

1932 })

	)

1934 
	#__USAT16
(
ARG1
,
ARG2
) \

1936 
uöt32_t
 
__RES
, 
__ARG1
 = (
ARG1
); \

1937 
	`__ASM
 ("ußt16 %0, %1, %2" : "Ù" (
__RES
Ë: "I" (
ARG2
), "r" (
__ARG1
) ); \

1938 
__RES
; \

1939 })

	)

1941 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__UXTB16
(
uöt32_t
 
›1
)

1943 
uöt32_t
 
ªsu…
;

1945 
__ASM
 vﬁ©ûê("uxtb16 %0, %1" : "Ù" (
ªsu…
Ë: "r" (
›1
));

1946 (
ªsu…
);

1947 
	}
}

1949 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__UXTAB16
(
uöt32_t
 
›1
, uöt32_à
›2
)

1951 
uöt32_t
 
ªsu…
;

1953 
__ASM
 vﬁ©ûê("uxèb16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1954 (
ªsu…
);

1955 
	}
}

1957 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__SXTB16
(
uöt32_t
 
›1
)

1959 
uöt32_t
 
ªsu…
;

1961 
__ASM
 vﬁ©ûê("sxtb16 %0, %1" : "Ù" (
ªsu…
Ë: "r" (
›1
));

1962 (
ªsu…
);

1963 
	}
}

1965 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__SXTAB16
(
uöt32_t
 
›1
, uöt32_à
›2
)

1967 
uöt32_t
 
ªsu…
;

1969 
__ASM
 vﬁ©ûê("sxèb16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1970 (
ªsu…
);

1971 
	}
}

1973 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__SMUAD
 (
uöt32_t
 
›1
, uöt32_à
›2
)

1975 
uöt32_t
 
ªsu…
;

1977 
__ASM
 vﬁ©ûê("smuad %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1978 (
ªsu…
);

1979 
	}
}

1981 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__SMUADX
 (
uöt32_t
 
›1
, uöt32_à
›2
)

1983 
uöt32_t
 
ªsu…
;

1985 
__ASM
 vﬁ©ûê("smuadx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

1986 (
ªsu…
);

1987 
	}
}

1989 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__SMLAD
 (
uöt32_t
 
›1
, uöt32_à
›2
, uöt32_à
›3
)

1991 
uöt32_t
 
ªsu…
;

1993 
__ASM
 vﬁ©ûê("smœd %0, %1, %2, %3" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
), "r" (
›3
) );

1994 (
ªsu…
);

1995 
	}
}

1997 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__SMLADX
 (
uöt32_t
 
›1
, uöt32_à
›2
, uöt32_à
›3
)

1999 
uöt32_t
 
ªsu…
;

2001 
__ASM
 vﬁ©ûê("smœdx %0, %1, %2, %3" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
), "r" (
›3
) );

2002 (
ªsu…
);

2003 
	}
}

2005 
__STATIC_FORCEINLINE
 
uöt64_t
 
	$__SMLALD
 (
uöt32_t
 
›1
, uöt32_à
›2
, 
uöt64_t
 
acc
)

2007 
	uŒªg_u
{

2008 
uöt32_t
 
w32
[2];

2009 
uöt64_t
 
w64
;

2010 } 
Œr
;

2011 
Œr
.
w64
 = 
acc
;

2013 #i‚de‡
__ARMEB__


2014 
__ASM
 vﬁ©ûê("smœld %0, %1, %2, %3" : "Ù" (
Œr
.
w32
[0]), "Ù" (Œr.w32[1]): "r" (
›1
), "r" (
›2
) , "0" (llr.w32[0]), "1" (llr.w32[1]) );

2016 
__ASM
 vﬁ©ûê("smœld %0, %1, %2, %3" : "Ù" (
Œr
.
w32
[1]), "Ù" (Œr.w32[0]): "r" (
›1
), "r" (
›2
) , "0" (llr.w32[1]), "1" (llr.w32[0]) );

2019 (
Œr
.
w64
);

2020 
	}
}

2022 
__STATIC_FORCEINLINE
 
uöt64_t
 
	$__SMLALDX
 (
uöt32_t
 
›1
, uöt32_à
›2
, 
uöt64_t
 
acc
)

2024 
	uŒªg_u
{

2025 
uöt32_t
 
w32
[2];

2026 
uöt64_t
 
w64
;

2027 } 
Œr
;

2028 
Œr
.
w64
 = 
acc
;

2030 #i‚de‡
__ARMEB__


2031 
__ASM
 vﬁ©ûê("smœldx %0, %1, %2, %3" : "Ù" (
Œr
.
w32
[0]), "Ù" (Œr.w32[1]): "r" (
›1
), "r" (
›2
) , "0" (llr.w32[0]), "1" (llr.w32[1]) );

2033 
__ASM
 vﬁ©ûê("smœldx %0, %1, %2, %3" : "Ù" (
Œr
.
w32
[1]), "Ù" (Œr.w32[0]): "r" (
›1
), "r" (
›2
) , "0" (llr.w32[1]), "1" (llr.w32[0]) );

2036 (
Œr
.
w64
);

2037 
	}
}

2039 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__SMUSD
 (
uöt32_t
 
›1
, uöt32_à
›2
)

2041 
uöt32_t
 
ªsu…
;

2043 
__ASM
 vﬁ©ûê("smusd %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

2044 (
ªsu…
);

2045 
	}
}

2047 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__SMUSDX
 (
uöt32_t
 
›1
, uöt32_à
›2
)

2049 
uöt32_t
 
ªsu…
;

2051 
__ASM
 vﬁ©ûê("smusdx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

2052 (
ªsu…
);

2053 
	}
}

2055 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__SMLSD
 (
uöt32_t
 
›1
, uöt32_à
›2
, uöt32_à
›3
)

2057 
uöt32_t
 
ªsu…
;

2059 
__ASM
 vﬁ©ûê("smlsd %0, %1, %2, %3" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
), "r" (
›3
) );

2060 (
ªsu…
);

2061 
	}
}

2063 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__SMLSDX
 (
uöt32_t
 
›1
, uöt32_à
›2
, uöt32_à
›3
)

2065 
uöt32_t
 
ªsu…
;

2067 
__ASM
 vﬁ©ûê("smlsdx %0, %1, %2, %3" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
), "r" (
›3
) );

2068 (
ªsu…
);

2069 
	}
}

2071 
__STATIC_FORCEINLINE
 
uöt64_t
 
	$__SMLSLD
 (
uöt32_t
 
›1
, uöt32_à
›2
, 
uöt64_t
 
acc
)

2073 
	uŒªg_u
{

2074 
uöt32_t
 
w32
[2];

2075 
uöt64_t
 
w64
;

2076 } 
Œr
;

2077 
Œr
.
w64
 = 
acc
;

2079 #i‚de‡
__ARMEB__


2080 
__ASM
 vﬁ©ûê("sml¶d %0, %1, %2, %3" : "Ù" (
Œr
.
w32
[0]), "Ù" (Œr.w32[1]): "r" (
›1
), "r" (
›2
) , "0" (llr.w32[0]), "1" (llr.w32[1]) );

2082 
__ASM
 vﬁ©ûê("sml¶d %0, %1, %2, %3" : "Ù" (
Œr
.
w32
[1]), "Ù" (Œr.w32[0]): "r" (
›1
), "r" (
›2
) , "0" (llr.w32[1]), "1" (llr.w32[0]) );

2085 (
Œr
.
w64
);

2086 
	}
}

2088 
__STATIC_FORCEINLINE
 
uöt64_t
 
	$__SMLSLDX
 (
uöt32_t
 
›1
, uöt32_à
›2
, 
uöt64_t
 
acc
)

2090 
	uŒªg_u
{

2091 
uöt32_t
 
w32
[2];

2092 
uöt64_t
 
w64
;

2093 } 
Œr
;

2094 
Œr
.
w64
 = 
acc
;

2096 #i‚de‡
__ARMEB__


2097 
__ASM
 vﬁ©ûê("sml¶dx %0, %1, %2, %3" : "Ù" (
Œr
.
w32
[0]), "Ù" (Œr.w32[1]): "r" (
›1
), "r" (
›2
) , "0" (llr.w32[0]), "1" (llr.w32[1]) );

2099 
__ASM
 vﬁ©ûê("sml¶dx %0, %1, %2, %3" : "Ù" (
Œr
.
w32
[1]), "Ù" (Œr.w32[0]): "r" (
›1
), "r" (
›2
) , "0" (llr.w32[1]), "1" (llr.w32[0]) );

2102 (
Œr
.
w64
);

2103 
	}
}

2105 
__STATIC_FORCEINLINE
 
uöt32_t
 
	$__SEL
 (
uöt32_t
 
›1
, uöt32_à
›2
)

2107 
uöt32_t
 
ªsu…
;

2109 
__ASM
 vﬁ©ûê("£»%0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

2110 (
ªsu…
);

2111 
	}
}

2113 
__STATIC_FORCEINLINE
 
öt32_t
 
	$__QADD
–
öt32_t
 
›1
, i¡32_à
›2
)

2115 
öt32_t
 
ªsu…
;

2117 
__ASM
 vﬁ©ûê("qadd %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

2118 (
ªsu…
);

2119 
	}
}

2121 
__STATIC_FORCEINLINE
 
öt32_t
 
	$__QSUB
–
öt32_t
 
›1
, i¡32_à
›2
)

2123 
öt32_t
 
ªsu…
;

2125 
__ASM
 vﬁ©ûê("qsub %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

2126 (
ªsu…
);

2127 
	}
}

2130 
	#__PKHBT
(
ARG1
,
ARG2
,
ARG3
) \

2132 
uöt32_t
 
__RES
, 
__ARG1
 = (
ARG1
), 
__ARG2
 = (
ARG2
); \

2133 
	`__ASM
 ("pkhbà%0, %1, %2,Ü¶ %3" : "Ù" (
__RES
Ë: "r" (
__ARG1
), "r" (
__ARG2
), "I" (
ARG3
) ); \

2134 
__RES
; \

2135 })

	)

2137 
	#__PKHTB
(
ARG1
,
ARG2
,
ARG3
) \

2139 
uöt32_t
 
__RES
, 
__ARG1
 = (
ARG1
), 
__ARG2
 = (
ARG2
); \

2140 i‡(
ARG3
 == 0) \

2141 
	`__ASM
 ("pkhtb %0, %1, %2" : "Ù" (
__RES
Ë: "r" (
__ARG1
), "r" (
__ARG2
) ); \

2143 
	`__ASM
 ("pkhtb %0, %1, %2,á§ %3" : "Ù" (
__RES
Ë: "r" (
__ARG1
), "r" (
__ARG2
), "I" (
ARG3
) ); \

2144 
__RES
; \

2145 })

	)

2148 
	#__PKHBT
(
ARG1
,
ARG2
,
ARG3
Ë–((((
uöt32_t
)(ARG1)) ) & 0x0000FFFFUL) | \

2149 ((((
uöt32_t
)(
ARG2
)Ë<< (
ARG3
)Ë& 0xFFFF0000ULË)

	)

2151 
	#__PKHTB
(
ARG1
,
ARG2
,
ARG3
Ë–((((
uöt32_t
)(ARG1)) ) & 0xFFFF0000UL) | \

2152 ((((
uöt32_t
)(
ARG2
)Ë>> (
ARG3
)Ë& 0x0000FFFFULË)

	)

2154 
__STATIC_FORCEINLINE
 
öt32_t
 
	$__SMMLA
 (
öt32_t
 
›1
, i¡32_à
›2
, i¡32_à
›3
)

2156 
öt32_t
 
ªsu…
;

2158 
__ASM
 vﬁ©ûê("smmœ %0, %1, %2, %3" : "Ù" (
ªsu…
): "r" (
›1
), "r" (
›2
), "r" (
›3
) );

2159 (
ªsu…
);

2160 
	}
}

2166 #¥agm®
GCC
 
dügno°ic
 
p›


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\cmsis\cmsis_version.h

25 #i‡ 
deföed
 ( 
__ICCARM__
 )

26 #¥agm®
sy°em_ö˛ude


27 #ñi‡
deföed
 (
__˛™g__
)

28 #¥agm®
˛™g
 
sy°em_hódî


31 #i‚de‡
__CMSIS_VERSION_H


32 
	#__CMSIS_VERSION_H


	)

35 
	#__CM_CMSIS_VERSION_MAIN
 ( 5UË

	)

36 
	#__CM_CMSIS_VERSION_SUB
 ( 3UË

	)

37 
	#__CM_CMSIS_VERSION
 ((
__CM_CMSIS_VERSION_MAIN
 << 16U) | \

38 
__CM_CMSIS_VERSION_SUB
 )

	)

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\cmsis\core_cm3.h

25 #i‡ 
deföed
 ( 
__ICCARM__
 )

26 #¥agm®
sy°em_ö˛ude


27 #ñi‡
deföed
 (
__˛™g__
)

28 #¥agm®
˛™g
 
sy°em_hódî


31 #i‚de‡
__CORE_CM3_H_GENERIC


32 
	#__CORE_CM3_H_GENERIC


	)

34 
	~<°döt.h
>

36 #ifde‡
__˝lu•lus


63 
	~"cmsis_vîsi⁄.h
"

66 
	#__CM3_CMSIS_VERSION_MAIN
 (
__CM_CMSIS_VERSION_MAIN
Ë

	)

67 
	#__CM3_CMSIS_VERSION_SUB
 (
__CM_CMSIS_VERSION_SUB
Ë

	)

68 
	#__CM3_CMSIS_VERSION
 ((
__CM3_CMSIS_VERSION_MAIN
 << 16U) | \

69 
__CM3_CMSIS_VERSION_SUB
 )

	)

71 
	#__CORTEX_M
 (3UË

	)

76 
	#__FPU_USED
 0U

	)

78 #i‡
deföed
 ( 
__CC_ARM
 )

79 #i‡
deföed
 
__TARGET_FPU_VFP


83 #ñi‡
deföed
 (
__ARMCC_VERSION
) && (__ARMCC_VERSION >= 6010050)

84 #i‡
deföed
 
__ARM_FP


88 #ñi‡
deföed
 ( 
__GNUC__
 )

89 #i‡
deföed
 (
__VFP_FP__
Ë&& !deföed(
__SOFTFP__
)

93 #ñi‡
deföed
 ( 
__ICCARM__
 )

94 #i‡
deföed
 
__ARMVFP__


98 #ñi‡
deföed
 ( 
__TI_ARM__
 )

99 #i‡
deföed
 
__TI_VFP_SUPPORT__


103 #ñi‡
deföed
 ( 
__TASKING__
 )

104 #i‡
deföed
 
__FPU_VFP__


108 #ñi‡
deföed
 ( 
__CSMC__
 )

109 #i‡–
__CSMC__
 & 0x400U)

115 
	~"cmsis_compûî.h
"

118 #ifde‡
__˝lu•lus


124 #i‚de‡
__CMSIS_GENERIC


126 #i‚de‡
__CORE_CM3_H_DEPENDANT


127 
	#__CORE_CM3_H_DEPENDANT


	)

129 #ifde‡
__˝lu•lus


134 #i‡
deföed
 
__CHECK_DEVICE_DEFINES


135 #i‚de‡
__CM3_REV


136 
	#__CM3_REV
 0x0200U

	)

140 #i‚de‡
__MPU_PRESENT


141 
	#__MPU_PRESENT
 0U

	)

145 #i‚de‡
__NVIC_PRIO_BITS


146 
	#__NVIC_PRIO_BITS
 3U

	)

150 #i‚de‡
__Víd‹_SysTickC⁄fig


151 
	#__Víd‹_SysTickC⁄fig
 0U

	)

164 #ifde‡
__˝lu•lus


165 
	#__I
 vﬁ©ûê

	)

167 
	#__I
 vﬁ©ûêc⁄°

	)

169 
	#__O
 vﬁ©ûê

	)

170 
	#__IO
 vﬁ©ûê

	)

173 
	#__IM
 vﬁ©ûêc⁄°

	)

174 
	#__OM
 vﬁ©ûê

	)

175 
	#__IOM
 vﬁ©ûê

	)

210 
uöt32_t
 
_ª£rved0
:27;

211 
uöt32_t
 
Q
:1;

212 
uöt32_t
 
V
:1;

213 
uöt32_t
 
C
:1;

214 
uöt32_t
 
Z
:1;

215 
uöt32_t
 
N
:1;

216 } 
b
;

217 
uöt32_t
 
w
;

218 } 
	tAPSR_Ty≥
;

221 
	#APSR_N_Pos
 31U

	)

222 
	#APSR_N_Msk
 (1UL << 
APSR_N_Pos
Ë

	)

224 
	#APSR_Z_Pos
 30U

	)

225 
	#APSR_Z_Msk
 (1UL << 
APSR_Z_Pos
Ë

	)

227 
	#APSR_C_Pos
 29U

	)

228 
	#APSR_C_Msk
 (1UL << 
APSR_C_Pos
Ë

	)

230 
	#APSR_V_Pos
 28U

	)

231 
	#APSR_V_Msk
 (1UL << 
APSR_V_Pos
Ë

	)

233 
	#APSR_Q_Pos
 27U

	)

234 
	#APSR_Q_Msk
 (1UL << 
APSR_Q_Pos
Ë

	)

244 
uöt32_t
 
ISR
:9;

245 
uöt32_t
 
_ª£rved0
:23;

246 } 
b
;

247 
uöt32_t
 
w
;

248 } 
	tIPSR_Ty≥
;

251 
	#IPSR_ISR_Pos
 0U

	)

252 
	#IPSR_ISR_Msk
 (0x1FFUL )

	)

262 
uöt32_t
 
ISR
:9;

263 
uöt32_t
 
_ª£rved0
:1;

264 
uöt32_t
 
ICI_IT_1
:6;

265 
uöt32_t
 
_ª£rved1
:8;

266 
uöt32_t
 
T
:1;

267 
uöt32_t
 
ICI_IT_2
:2;

268 
uöt32_t
 
Q
:1;

269 
uöt32_t
 
V
:1;

270 
uöt32_t
 
C
:1;

271 
uöt32_t
 
Z
:1;

272 
uöt32_t
 
N
:1;

273 } 
b
;

274 
uöt32_t
 
w
;

275 } 
	txPSR_Ty≥
;

278 
	#xPSR_N_Pos
 31U

	)

279 
	#xPSR_N_Msk
 (1UL << 
xPSR_N_Pos
Ë

	)

281 
	#xPSR_Z_Pos
 30U

	)

282 
	#xPSR_Z_Msk
 (1UL << 
xPSR_Z_Pos
Ë

	)

284 
	#xPSR_C_Pos
 29U

	)

285 
	#xPSR_C_Msk
 (1UL << 
xPSR_C_Pos
Ë

	)

287 
	#xPSR_V_Pos
 28U

	)

288 
	#xPSR_V_Msk
 (1UL << 
xPSR_V_Pos
Ë

	)

290 
	#xPSR_Q_Pos
 27U

	)

291 
	#xPSR_Q_Msk
 (1UL << 
xPSR_Q_Pos
Ë

	)

293 
	#xPSR_ICI_IT_2_Pos
 25U

	)

294 
	#xPSR_ICI_IT_2_Msk
 (3UL << 
xPSR_ICI_IT_2_Pos
Ë

	)

296 
	#xPSR_T_Pos
 24U

	)

297 
	#xPSR_T_Msk
 (1UL << 
xPSR_T_Pos
Ë

	)

299 
	#xPSR_ICI_IT_1_Pos
 10U

	)

300 
	#xPSR_ICI_IT_1_Msk
 (0x3FUL << 
xPSR_ICI_IT_1_Pos
Ë

	)

302 
	#xPSR_ISR_Pos
 0U

	)

303 
	#xPSR_ISR_Msk
 (0x1FFUL )

	)

313 
uöt32_t
 
nPRIV
:1;

314 
uöt32_t
 
SPSEL
:1;

315 
uöt32_t
 
_ª£rved1
:30;

316 } 
b
;

317 
uöt32_t
 
w
;

318 } 
	tCONTROL_Ty≥
;

321 
	#CONTROL_SPSEL_Pos
 1U

	)

322 
	#CONTROL_SPSEL_Msk
 (1UL << 
CONTROL_SPSEL_Pos
Ë

	)

324 
	#CONTROL_nPRIV_Pos
 0U

	)

325 
	#CONTROL_nPRIV_Msk
 (1UL )

	)

342 
__IOM
 
uöt32_t
 
ISER
[8U];

343 
uöt32_t
 
RESERVED0
[24U];

344 
__IOM
 
uöt32_t
 
ICER
[8U];

345 
uöt32_t
 
RESERVED1
[24U];

346 
__IOM
 
uöt32_t
 
ISPR
[8U];

347 
uöt32_t
 
RESERVED2
[24U];

348 
__IOM
 
uöt32_t
 
ICPR
[8U];

349 
uöt32_t
 
RESERVED3
[24U];

350 
__IOM
 
uöt32_t
 
IABR
[8U];

351 
uöt32_t
 
RESERVED4
[56U];

352 
__IOM
 
uöt8_t
 
IP
[240U];

353 
uöt32_t
 
RESERVED5
[644U];

354 
__OM
 
uöt32_t
 
STIR
;

355 } 
	tNVIC_Ty≥
;

358 
	#NVIC_STIR_INTID_Pos
 0U

	)

359 
	#NVIC_STIR_INTID_Msk
 (0x1FFUL )

	)

376 
__IM
 
uöt32_t
 
CPUID
;

377 
__IOM
 
uöt32_t
 
ICSR
;

378 
__IOM
 
uöt32_t
 
VTOR
;

379 
__IOM
 
uöt32_t
 
AIRCR
;

380 
__IOM
 
uöt32_t
 
SCR
;

381 
__IOM
 
uöt32_t
 
CCR
;

382 
__IOM
 
uöt8_t
 
SHP
[12U];

383 
__IOM
 
uöt32_t
 
SHCSR
;

384 
__IOM
 
uöt32_t
 
CFSR
;

385 
__IOM
 
uöt32_t
 
HFSR
;

386 
__IOM
 
uöt32_t
 
DFSR
;

387 
__IOM
 
uöt32_t
 
MMFAR
;

388 
__IOM
 
uöt32_t
 
BFAR
;

389 
__IOM
 
uöt32_t
 
AFSR
;

390 
__IM
 
uöt32_t
 
PFR
[2U];

391 
__IM
 
uöt32_t
 
DFR
;

392 
__IM
 
uöt32_t
 
ADR
;

393 
__IM
 
uöt32_t
 
MMFR
[4U];

394 
__IM
 
uöt32_t
 
ISAR
[5U];

395 
uöt32_t
 
RESERVED0
[5U];

396 
__IOM
 
uöt32_t
 
CPACR
;

397 } 
	tSCB_Ty≥
;

400 
	#SCB_CPUID_IMPLEMENTER_Pos
 24U

	)

401 
	#SCB_CPUID_IMPLEMENTER_Msk
 (0xFFUL << 
SCB_CPUID_IMPLEMENTER_Pos
Ë

	)

403 
	#SCB_CPUID_VARIANT_Pos
 20U

	)

404 
	#SCB_CPUID_VARIANT_Msk
 (0xFUL << 
SCB_CPUID_VARIANT_Pos
Ë

	)

406 
	#SCB_CPUID_ARCHITECTURE_Pos
 16U

	)

407 
	#SCB_CPUID_ARCHITECTURE_Msk
 (0xFUL << 
SCB_CPUID_ARCHITECTURE_Pos
Ë

	)

409 
	#SCB_CPUID_PARTNO_Pos
 4U

	)

410 
	#SCB_CPUID_PARTNO_Msk
 (0xFFFUL << 
SCB_CPUID_PARTNO_Pos
Ë

	)

412 
	#SCB_CPUID_REVISION_Pos
 0U

	)

413 
	#SCB_CPUID_REVISION_Msk
 (0xFUL )

	)

416 
	#SCB_ICSR_NMIPENDSET_Pos
 31U

	)

417 
	#SCB_ICSR_NMIPENDSET_Msk
 (1UL << 
SCB_ICSR_NMIPENDSET_Pos
Ë

	)

419 
	#SCB_ICSR_PENDSVSET_Pos
 28U

	)

420 
	#SCB_ICSR_PENDSVSET_Msk
 (1UL << 
SCB_ICSR_PENDSVSET_Pos
Ë

	)

422 
	#SCB_ICSR_PENDSVCLR_Pos
 27U

	)

423 
	#SCB_ICSR_PENDSVCLR_Msk
 (1UL << 
SCB_ICSR_PENDSVCLR_Pos
Ë

	)

425 
	#SCB_ICSR_PENDSTSET_Pos
 26U

	)

426 
	#SCB_ICSR_PENDSTSET_Msk
 (1UL << 
SCB_ICSR_PENDSTSET_Pos
Ë

	)

428 
	#SCB_ICSR_PENDSTCLR_Pos
 25U

	)

429 
	#SCB_ICSR_PENDSTCLR_Msk
 (1UL << 
SCB_ICSR_PENDSTCLR_Pos
Ë

	)

431 
	#SCB_ICSR_ISRPREEMPT_Pos
 23U

	)

432 
	#SCB_ICSR_ISRPREEMPT_Msk
 (1UL << 
SCB_ICSR_ISRPREEMPT_Pos
Ë

	)

434 
	#SCB_ICSR_ISRPENDING_Pos
 22U

	)

435 
	#SCB_ICSR_ISRPENDING_Msk
 (1UL << 
SCB_ICSR_ISRPENDING_Pos
Ë

	)

437 
	#SCB_ICSR_VECTPENDING_Pos
 12U

	)

438 
	#SCB_ICSR_VECTPENDING_Msk
 (0x1FFUL << 
SCB_ICSR_VECTPENDING_Pos
Ë

	)

440 
	#SCB_ICSR_RETTOBASE_Pos
 11U

	)

441 
	#SCB_ICSR_RETTOBASE_Msk
 (1UL << 
SCB_ICSR_RETTOBASE_Pos
Ë

	)

443 
	#SCB_ICSR_VECTACTIVE_Pos
 0U

	)

444 
	#SCB_ICSR_VECTACTIVE_Msk
 (0x1FFUL )

	)

447 #i‡
deföed
 (
__CM3_REV
) && (__CM3_REV < 0x0201U)

448 
	#SCB_VTOR_TBLBASE_Pos
 29U

	)

449 
	#SCB_VTOR_TBLBASE_Msk
 (1UL << 
SCB_VTOR_TBLBASE_Pos
Ë

	)

451 
	#SCB_VTOR_TBLOFF_Pos
 7U

	)

452 
	#SCB_VTOR_TBLOFF_Msk
 (0x3FFFFFUL << 
SCB_VTOR_TBLOFF_Pos
Ë

	)

454 
	#SCB_VTOR_TBLOFF_Pos
 7U

	)

455 
	#SCB_VTOR_TBLOFF_Msk
 (0x1FFFFFFUL << 
SCB_VTOR_TBLOFF_Pos
Ë

	)

459 
	#SCB_AIRCR_VECTKEY_Pos
 16U

	)

460 
	#SCB_AIRCR_VECTKEY_Msk
 (0xFFFFUL << 
SCB_AIRCR_VECTKEY_Pos
Ë

	)

462 
	#SCB_AIRCR_VECTKEYSTAT_Pos
 16U

	)

463 
	#SCB_AIRCR_VECTKEYSTAT_Msk
 (0xFFFFUL << 
SCB_AIRCR_VECTKEYSTAT_Pos
Ë

	)

465 
	#SCB_AIRCR_ENDIANESS_Pos
 15U

	)

466 
	#SCB_AIRCR_ENDIANESS_Msk
 (1UL << 
SCB_AIRCR_ENDIANESS_Pos
Ë

	)

468 
	#SCB_AIRCR_PRIGROUP_Pos
 8U

	)

469 
	#SCB_AIRCR_PRIGROUP_Msk
 (7UL << 
SCB_AIRCR_PRIGROUP_Pos
Ë

	)

471 
	#SCB_AIRCR_SYSRESETREQ_Pos
 2U

	)

472 
	#SCB_AIRCR_SYSRESETREQ_Msk
 (1UL << 
SCB_AIRCR_SYSRESETREQ_Pos
Ë

	)

474 
	#SCB_AIRCR_VECTCLRACTIVE_Pos
 1U

	)

475 
	#SCB_AIRCR_VECTCLRACTIVE_Msk
 (1UL << 
SCB_AIRCR_VECTCLRACTIVE_Pos
Ë

	)

477 
	#SCB_AIRCR_VECTRESET_Pos
 0U

	)

478 
	#SCB_AIRCR_VECTRESET_Msk
 (1UL )

	)

481 
	#SCB_SCR_SEVONPEND_Pos
 4U

	)

482 
	#SCB_SCR_SEVONPEND_Msk
 (1UL << 
SCB_SCR_SEVONPEND_Pos
Ë

	)

484 
	#SCB_SCR_SLEEPDEEP_Pos
 2U

	)

485 
	#SCB_SCR_SLEEPDEEP_Msk
 (1UL << 
SCB_SCR_SLEEPDEEP_Pos
Ë

	)

487 
	#SCB_SCR_SLEEPONEXIT_Pos
 1U

	)

488 
	#SCB_SCR_SLEEPONEXIT_Msk
 (1UL << 
SCB_SCR_SLEEPONEXIT_Pos
Ë

	)

491 
	#SCB_CCR_STKALIGN_Pos
 9U

	)

492 
	#SCB_CCR_STKALIGN_Msk
 (1UL << 
SCB_CCR_STKALIGN_Pos
Ë

	)

494 
	#SCB_CCR_BFHFNMIGN_Pos
 8U

	)

495 
	#SCB_CCR_BFHFNMIGN_Msk
 (1UL << 
SCB_CCR_BFHFNMIGN_Pos
Ë

	)

497 
	#SCB_CCR_DIV_0_TRP_Pos
 4U

	)

498 
	#SCB_CCR_DIV_0_TRP_Msk
 (1UL << 
SCB_CCR_DIV_0_TRP_Pos
Ë

	)

500 
	#SCB_CCR_UNALIGN_TRP_Pos
 3U

	)

501 
	#SCB_CCR_UNALIGN_TRP_Msk
 (1UL << 
SCB_CCR_UNALIGN_TRP_Pos
Ë

	)

503 
	#SCB_CCR_USERSETMPEND_Pos
 1U

	)

504 
	#SCB_CCR_USERSETMPEND_Msk
 (1UL << 
SCB_CCR_USERSETMPEND_Pos
Ë

	)

506 
	#SCB_CCR_NONBASETHRDENA_Pos
 0U

	)

507 
	#SCB_CCR_NONBASETHRDENA_Msk
 (1UL )

	)

510 
	#SCB_SHCSR_USGFAULTENA_Pos
 18U

	)

511 
	#SCB_SHCSR_USGFAULTENA_Msk
 (1UL << 
SCB_SHCSR_USGFAULTENA_Pos
Ë

	)

513 
	#SCB_SHCSR_BUSFAULTENA_Pos
 17U

	)

514 
	#SCB_SHCSR_BUSFAULTENA_Msk
 (1UL << 
SCB_SHCSR_BUSFAULTENA_Pos
Ë

	)

516 
	#SCB_SHCSR_MEMFAULTENA_Pos
 16U

	)

517 
	#SCB_SHCSR_MEMFAULTENA_Msk
 (1UL << 
SCB_SHCSR_MEMFAULTENA_Pos
Ë

	)

519 
	#SCB_SHCSR_SVCALLPENDED_Pos
 15U

	)

520 
	#SCB_SHCSR_SVCALLPENDED_Msk
 (1UL << 
SCB_SHCSR_SVCALLPENDED_Pos
Ë

	)

522 
	#SCB_SHCSR_BUSFAULTPENDED_Pos
 14U

	)

523 
	#SCB_SHCSR_BUSFAULTPENDED_Msk
 (1UL << 
SCB_SHCSR_BUSFAULTPENDED_Pos
Ë

	)

525 
	#SCB_SHCSR_MEMFAULTPENDED_Pos
 13U

	)

526 
	#SCB_SHCSR_MEMFAULTPENDED_Msk
 (1UL << 
SCB_SHCSR_MEMFAULTPENDED_Pos
Ë

	)

528 
	#SCB_SHCSR_USGFAULTPENDED_Pos
 12U

	)

529 
	#SCB_SHCSR_USGFAULTPENDED_Msk
 (1UL << 
SCB_SHCSR_USGFAULTPENDED_Pos
Ë

	)

531 
	#SCB_SHCSR_SYSTICKACT_Pos
 11U

	)

532 
	#SCB_SHCSR_SYSTICKACT_Msk
 (1UL << 
SCB_SHCSR_SYSTICKACT_Pos
Ë

	)

534 
	#SCB_SHCSR_PENDSVACT_Pos
 10U

	)

535 
	#SCB_SHCSR_PENDSVACT_Msk
 (1UL << 
SCB_SHCSR_PENDSVACT_Pos
Ë

	)

537 
	#SCB_SHCSR_MONITORACT_Pos
 8U

	)

538 
	#SCB_SHCSR_MONITORACT_Msk
 (1UL << 
SCB_SHCSR_MONITORACT_Pos
Ë

	)

540 
	#SCB_SHCSR_SVCALLACT_Pos
 7U

	)

541 
	#SCB_SHCSR_SVCALLACT_Msk
 (1UL << 
SCB_SHCSR_SVCALLACT_Pos
Ë

	)

543 
	#SCB_SHCSR_USGFAULTACT_Pos
 3U

	)

544 
	#SCB_SHCSR_USGFAULTACT_Msk
 (1UL << 
SCB_SHCSR_USGFAULTACT_Pos
Ë

	)

546 
	#SCB_SHCSR_BUSFAULTACT_Pos
 1U

	)

547 
	#SCB_SHCSR_BUSFAULTACT_Msk
 (1UL << 
SCB_SHCSR_BUSFAULTACT_Pos
Ë

	)

549 
	#SCB_SHCSR_MEMFAULTACT_Pos
 0U

	)

550 
	#SCB_SHCSR_MEMFAULTACT_Msk
 (1UL )

	)

553 
	#SCB_CFSR_USGFAULTSR_Pos
 16U

	)

554 
	#SCB_CFSR_USGFAULTSR_Msk
 (0xFFFFUL << 
SCB_CFSR_USGFAULTSR_Pos
Ë

	)

556 
	#SCB_CFSR_BUSFAULTSR_Pos
 8U

	)

557 
	#SCB_CFSR_BUSFAULTSR_Msk
 (0xFFUL << 
SCB_CFSR_BUSFAULTSR_Pos
Ë

	)

559 
	#SCB_CFSR_MEMFAULTSR_Pos
 0U

	)

560 
	#SCB_CFSR_MEMFAULTSR_Msk
 (0xFFUL )

	)

563 
	#SCB_CFSR_MMARVALID_Pos
 (
SCB_SHCSR_MEMFAULTACT_Pos
 + 7UË

	)

564 
	#SCB_CFSR_MMARVALID_Msk
 (1UL << 
SCB_CFSR_MMARVALID_Pos
Ë

	)

566 
	#SCB_CFSR_MSTKERR_Pos
 (
SCB_SHCSR_MEMFAULTACT_Pos
 + 4UË

	)

567 
	#SCB_CFSR_MSTKERR_Msk
 (1UL << 
SCB_CFSR_MSTKERR_Pos
Ë

	)

569 
	#SCB_CFSR_MUNSTKERR_Pos
 (
SCB_SHCSR_MEMFAULTACT_Pos
 + 3UË

	)

570 
	#SCB_CFSR_MUNSTKERR_Msk
 (1UL << 
SCB_CFSR_MUNSTKERR_Pos
Ë

	)

572 
	#SCB_CFSR_DACCVIOL_Pos
 (
SCB_SHCSR_MEMFAULTACT_Pos
 + 1UË

	)

573 
	#SCB_CFSR_DACCVIOL_Msk
 (1UL << 
SCB_CFSR_DACCVIOL_Pos
Ë

	)

575 
	#SCB_CFSR_IACCVIOL_Pos
 (
SCB_SHCSR_MEMFAULTACT_Pos
 + 0UË

	)

576 
	#SCB_CFSR_IACCVIOL_Msk
 (1UL )

	)

579 
	#SCB_CFSR_BFARVALID_Pos
 (
SCB_CFSR_BUSFAULTSR_Pos
 + 7UË

	)

580 
	#SCB_CFSR_BFARVALID_Msk
 (1UL << 
SCB_CFSR_BFARVALID_Pos
Ë

	)

582 
	#SCB_CFSR_STKERR_Pos
 (
SCB_CFSR_BUSFAULTSR_Pos
 + 4UË

	)

583 
	#SCB_CFSR_STKERR_Msk
 (1UL << 
SCB_CFSR_STKERR_Pos
Ë

	)

585 
	#SCB_CFSR_UNSTKERR_Pos
 (
SCB_CFSR_BUSFAULTSR_Pos
 + 3UË

	)

586 
	#SCB_CFSR_UNSTKERR_Msk
 (1UL << 
SCB_CFSR_UNSTKERR_Pos
Ë

	)

588 
	#SCB_CFSR_IMPRECISERR_Pos
 (
SCB_CFSR_BUSFAULTSR_Pos
 + 2UË

	)

589 
	#SCB_CFSR_IMPRECISERR_Msk
 (1UL << 
SCB_CFSR_IMPRECISERR_Pos
Ë

	)

591 
	#SCB_CFSR_PRECISERR_Pos
 (
SCB_CFSR_BUSFAULTSR_Pos
 + 1UË

	)

592 
	#SCB_CFSR_PRECISERR_Msk
 (1UL << 
SCB_CFSR_PRECISERR_Pos
Ë

	)

594 
	#SCB_CFSR_IBUSERR_Pos
 (
SCB_CFSR_BUSFAULTSR_Pos
 + 0UË

	)

595 
	#SCB_CFSR_IBUSERR_Msk
 (1UL << 
SCB_CFSR_IBUSERR_Pos
Ë

	)

598 
	#SCB_CFSR_DIVBYZERO_Pos
 (
SCB_CFSR_USGFAULTSR_Pos
 + 9UË

	)

599 
	#SCB_CFSR_DIVBYZERO_Msk
 (1UL << 
SCB_CFSR_DIVBYZERO_Pos
Ë

	)

601 
	#SCB_CFSR_UNALIGNED_Pos
 (
SCB_CFSR_USGFAULTSR_Pos
 + 8UË

	)

602 
	#SCB_CFSR_UNALIGNED_Msk
 (1UL << 
SCB_CFSR_UNALIGNED_Pos
Ë

	)

604 
	#SCB_CFSR_NOCP_Pos
 (
SCB_CFSR_USGFAULTSR_Pos
 + 3UË

	)

605 
	#SCB_CFSR_NOCP_Msk
 (1UL << 
SCB_CFSR_NOCP_Pos
Ë

	)

607 
	#SCB_CFSR_INVPC_Pos
 (
SCB_CFSR_USGFAULTSR_Pos
 + 2UË

	)

608 
	#SCB_CFSR_INVPC_Msk
 (1UL << 
SCB_CFSR_INVPC_Pos
Ë

	)

610 
	#SCB_CFSR_INVSTATE_Pos
 (
SCB_CFSR_USGFAULTSR_Pos
 + 1UË

	)

611 
	#SCB_CFSR_INVSTATE_Msk
 (1UL << 
SCB_CFSR_INVSTATE_Pos
Ë

	)

613 
	#SCB_CFSR_UNDEFINSTR_Pos
 (
SCB_CFSR_USGFAULTSR_Pos
 + 0UË

	)

614 
	#SCB_CFSR_UNDEFINSTR_Msk
 (1UL << 
SCB_CFSR_UNDEFINSTR_Pos
Ë

	)

617 
	#SCB_HFSR_DEBUGEVT_Pos
 31U

	)

618 
	#SCB_HFSR_DEBUGEVT_Msk
 (1UL << 
SCB_HFSR_DEBUGEVT_Pos
Ë

	)

620 
	#SCB_HFSR_FORCED_Pos
 30U

	)

621 
	#SCB_HFSR_FORCED_Msk
 (1UL << 
SCB_HFSR_FORCED_Pos
Ë

	)

623 
	#SCB_HFSR_VECTTBL_Pos
 1U

	)

624 
	#SCB_HFSR_VECTTBL_Msk
 (1UL << 
SCB_HFSR_VECTTBL_Pos
Ë

	)

627 
	#SCB_DFSR_EXTERNAL_Pos
 4U

	)

628 
	#SCB_DFSR_EXTERNAL_Msk
 (1UL << 
SCB_DFSR_EXTERNAL_Pos
Ë

	)

630 
	#SCB_DFSR_VCATCH_Pos
 3U

	)

631 
	#SCB_DFSR_VCATCH_Msk
 (1UL << 
SCB_DFSR_VCATCH_Pos
Ë

	)

633 
	#SCB_DFSR_DWTTRAP_Pos
 2U

	)

634 
	#SCB_DFSR_DWTTRAP_Msk
 (1UL << 
SCB_DFSR_DWTTRAP_Pos
Ë

	)

636 
	#SCB_DFSR_BKPT_Pos
 1U

	)

637 
	#SCB_DFSR_BKPT_Msk
 (1UL << 
SCB_DFSR_BKPT_Pos
Ë

	)

639 
	#SCB_DFSR_HALTED_Pos
 0U

	)

640 
	#SCB_DFSR_HALTED_Msk
 (1UL )

	)

657 
uöt32_t
 
RESERVED0
[1U];

658 
__IM
 
uöt32_t
 
ICTR
;

659 #i‡
deföed
 (
__CM3_REV
) && (__CM3_REV >= 0x200U)

660 
__IOM
 
uöt32_t
 
ACTLR
;

662 
uöt32_t
 
RESERVED1
[1U];

664 } 
	tSCnSCB_Ty≥
;

667 
	#SCnSCB_ICTR_INTLINESNUM_Pos
 0U

	)

668 
	#SCnSCB_ICTR_INTLINESNUM_Msk
 (0xFUL )

	)

671 #i‡
deföed
 (
__CM3_REV
) && (__CM3_REV >= 0x200U)

672 
	#SCnSCB_ACTLR_DISOOFP_Pos
 9U

	)

673 
	#SCnSCB_ACTLR_DISOOFP_Msk
 (1UL << 
SCnSCB_ACTLR_DISOOFP_Pos
Ë

	)

675 
	#SCnSCB_ACTLR_DISFPCA_Pos
 8U

	)

676 
	#SCnSCB_ACTLR_DISFPCA_Msk
 (1UL << 
SCnSCB_ACTLR_DISFPCA_Pos
Ë

	)

678 
	#SCnSCB_ACTLR_DISFOLD_Pos
 2U

	)

679 
	#SCnSCB_ACTLR_DISFOLD_Msk
 (1UL << 
SCnSCB_ACTLR_DISFOLD_Pos
Ë

	)

681 
	#SCnSCB_ACTLR_DISDEFWBUF_Pos
 1U

	)

682 
	#SCnSCB_ACTLR_DISDEFWBUF_Msk
 (1UL << 
SCnSCB_ACTLR_DISDEFWBUF_Pos
Ë

	)

684 
	#SCnSCB_ACTLR_DISMCYCINT_Pos
 0U

	)

685 
	#SCnSCB_ACTLR_DISMCYCINT_Msk
 (1UL )

	)

703 
__IOM
 
uöt32_t
 
CTRL
;

704 
__IOM
 
uöt32_t
 
LOAD
;

705 
__IOM
 
uöt32_t
 
VAL
;

706 
__IM
 
uöt32_t
 
CALIB
;

707 } 
	tSysTick_Ty≥
;

710 
	#SysTick_CTRL_COUNTFLAG_Pos
 16U

	)

711 
	#SysTick_CTRL_COUNTFLAG_Msk
 (1UL << 
SysTick_CTRL_COUNTFLAG_Pos
Ë

	)

713 
	#SysTick_CTRL_CLKSOURCE_Pos
 2U

	)

714 
	#SysTick_CTRL_CLKSOURCE_Msk
 (1UL << 
SysTick_CTRL_CLKSOURCE_Pos
Ë

	)

716 
	#SysTick_CTRL_TICKINT_Pos
 1U

	)

717 
	#SysTick_CTRL_TICKINT_Msk
 (1UL << 
SysTick_CTRL_TICKINT_Pos
Ë

	)

719 
	#SysTick_CTRL_ENABLE_Pos
 0U

	)

720 
	#SysTick_CTRL_ENABLE_Msk
 (1UL )

	)

723 
	#SysTick_LOAD_RELOAD_Pos
 0U

	)

724 
	#SysTick_LOAD_RELOAD_Msk
 (0xFFFFFFUL )

	)

727 
	#SysTick_VAL_CURRENT_Pos
 0U

	)

728 
	#SysTick_VAL_CURRENT_Msk
 (0xFFFFFFUL )

	)

731 
	#SysTick_CALIB_NOREF_Pos
 31U

	)

732 
	#SysTick_CALIB_NOREF_Msk
 (1UL << 
SysTick_CALIB_NOREF_Pos
Ë

	)

734 
	#SysTick_CALIB_SKEW_Pos
 30U

	)

735 
	#SysTick_CALIB_SKEW_Msk
 (1UL << 
SysTick_CALIB_SKEW_Pos
Ë

	)

737 
	#SysTick_CALIB_TENMS_Pos
 0U

	)

738 
	#SysTick_CALIB_TENMS_Msk
 (0xFFFFFFUL )

	)

755 
__OM
 union

757 
__OM
 
uöt8_t
 
u8
;

758 
__OM
 
uöt16_t
 
u16
;

759 
__OM
 
uöt32_t
 
u32
;

760 } 
PORT
 [32U];

761 
uöt32_t
 
RESERVED0
[864U];

762 
__IOM
 
uöt32_t
 
TER
;

763 
uöt32_t
 
RESERVED1
[15U];

764 
__IOM
 
uöt32_t
 
TPR
;

765 
uöt32_t
 
RESERVED2
[15U];

766 
__IOM
 
uöt32_t
 
TCR
;

767 
uöt32_t
 
RESERVED3
[32U];

768 
uöt32_t
 
RESERVED4
[43U];

769 
__OM
 
uöt32_t
 
LAR
;

770 
__IM
 
uöt32_t
 
LSR
;

771 
uöt32_t
 
RESERVED5
[6U];

772 
__IM
 
uöt32_t
 
PID4
;

773 
__IM
 
uöt32_t
 
PID5
;

774 
__IM
 
uöt32_t
 
PID6
;

775 
__IM
 
uöt32_t
 
PID7
;

776 
__IM
 
uöt32_t
 
PID0
;

777 
__IM
 
uöt32_t
 
PID1
;

778 
__IM
 
uöt32_t
 
PID2
;

779 
__IM
 
uöt32_t
 
PID3
;

780 
__IM
 
uöt32_t
 
CID0
;

781 
__IM
 
uöt32_t
 
CID1
;

782 
__IM
 
uöt32_t
 
CID2
;

783 
__IM
 
uöt32_t
 
CID3
;

784 } 
	tITM_Ty≥
;

787 
	#ITM_TPR_PRIVMASK_Pos
 0U

	)

788 
	#ITM_TPR_PRIVMASK_Msk
 (0xFFFFFFFFUL )

	)

791 
	#ITM_TCR_BUSY_Pos
 23U

	)

792 
	#ITM_TCR_BUSY_Msk
 (1UL << 
ITM_TCR_BUSY_Pos
Ë

	)

794 
	#ITM_TCR_Tø˚BusID_Pos
 16U

	)

795 
	#ITM_TCR_Tø˚BusID_Msk
 (0x7FUL << 
ITM_TCR_Tø˚BusID_Pos
Ë

	)

797 
	#ITM_TCR_GTSFREQ_Pos
 10U

	)

798 
	#ITM_TCR_GTSFREQ_Msk
 (3UL << 
ITM_TCR_GTSFREQ_Pos
Ë

	)

800 
	#ITM_TCR_TSPªsˇÀ_Pos
 8U

	)

801 
	#ITM_TCR_TSPªsˇÀ_Msk
 (3UL << 
ITM_TCR_TSPªsˇÀ_Pos
Ë

	)

803 
	#ITM_TCR_SWOENA_Pos
 4U

	)

804 
	#ITM_TCR_SWOENA_Msk
 (1UL << 
ITM_TCR_SWOENA_Pos
Ë

	)

806 
	#ITM_TCR_DWTENA_Pos
 3U

	)

807 
	#ITM_TCR_DWTENA_Msk
 (1UL << 
ITM_TCR_DWTENA_Pos
Ë

	)

809 
	#ITM_TCR_SYNCENA_Pos
 2U

	)

810 
	#ITM_TCR_SYNCENA_Msk
 (1UL << 
ITM_TCR_SYNCENA_Pos
Ë

	)

812 
	#ITM_TCR_TSENA_Pos
 1U

	)

813 
	#ITM_TCR_TSENA_Msk
 (1UL << 
ITM_TCR_TSENA_Pos
Ë

	)

815 
	#ITM_TCR_ITMENA_Pos
 0U

	)

816 
	#ITM_TCR_ITMENA_Msk
 (1UL )

	)

819 
	#ITM_LSR_ByãAcc_Pos
 2U

	)

820 
	#ITM_LSR_ByãAcc_Msk
 (1UL << 
ITM_LSR_ByãAcc_Pos
Ë

	)

822 
	#ITM_LSR_Ac˚ss_Pos
 1U

	)

823 
	#ITM_LSR_Ac˚ss_Msk
 (1UL << 
ITM_LSR_Ac˚ss_Pos
Ë

	)

825 
	#ITM_LSR_Pª£¡_Pos
 0U

	)

826 
	#ITM_LSR_Pª£¡_Msk
 (1UL )

	)

843 
__IOM
 
uöt32_t
 
CTRL
;

844 
__IOM
 
uöt32_t
 
CYCCNT
;

845 
__IOM
 
uöt32_t
 
CPICNT
;

846 
__IOM
 
uöt32_t
 
EXCCNT
;

847 
__IOM
 
uöt32_t
 
SLEEPCNT
;

848 
__IOM
 
uöt32_t
 
LSUCNT
;

849 
__IOM
 
uöt32_t
 
FOLDCNT
;

850 
__IM
 
uöt32_t
 
PCSR
;

851 
__IOM
 
uöt32_t
 
COMP0
;

852 
__IOM
 
uöt32_t
 
MASK0
;

853 
__IOM
 
uöt32_t
 
FUNCTION0
;

854 
uöt32_t
 
RESERVED0
[1U];

855 
__IOM
 
uöt32_t
 
COMP1
;

856 
__IOM
 
uöt32_t
 
MASK1
;

857 
__IOM
 
uöt32_t
 
FUNCTION1
;

858 
uöt32_t
 
RESERVED1
[1U];

859 
__IOM
 
uöt32_t
 
COMP2
;

860 
__IOM
 
uöt32_t
 
MASK2
;

861 
__IOM
 
uöt32_t
 
FUNCTION2
;

862 
uöt32_t
 
RESERVED2
[1U];

863 
__IOM
 
uöt32_t
 
COMP3
;

864 
__IOM
 
uöt32_t
 
MASK3
;

865 
__IOM
 
uöt32_t
 
FUNCTION3
;

866 } 
	tDWT_Ty≥
;

869 
	#DWT_CTRL_NUMCOMP_Pos
 28U

	)

870 
	#DWT_CTRL_NUMCOMP_Msk
 (0xFUL << 
DWT_CTRL_NUMCOMP_Pos
Ë

	)

872 
	#DWT_CTRL_NOTRCPKT_Pos
 27U

	)

873 
	#DWT_CTRL_NOTRCPKT_Msk
 (0x1UL << 
DWT_CTRL_NOTRCPKT_Pos
Ë

	)

875 
	#DWT_CTRL_NOEXTTRIG_Pos
 26U

	)

876 
	#DWT_CTRL_NOEXTTRIG_Msk
 (0x1UL << 
DWT_CTRL_NOEXTTRIG_Pos
Ë

	)

878 
	#DWT_CTRL_NOCYCCNT_Pos
 25U

	)

879 
	#DWT_CTRL_NOCYCCNT_Msk
 (0x1UL << 
DWT_CTRL_NOCYCCNT_Pos
Ë

	)

881 
	#DWT_CTRL_NOPRFCNT_Pos
 24U

	)

882 
	#DWT_CTRL_NOPRFCNT_Msk
 (0x1UL << 
DWT_CTRL_NOPRFCNT_Pos
Ë

	)

884 
	#DWT_CTRL_CYCEVTENA_Pos
 22U

	)

885 
	#DWT_CTRL_CYCEVTENA_Msk
 (0x1UL << 
DWT_CTRL_CYCEVTENA_Pos
Ë

	)

887 
	#DWT_CTRL_FOLDEVTENA_Pos
 21U

	)

888 
	#DWT_CTRL_FOLDEVTENA_Msk
 (0x1UL << 
DWT_CTRL_FOLDEVTENA_Pos
Ë

	)

890 
	#DWT_CTRL_LSUEVTENA_Pos
 20U

	)

891 
	#DWT_CTRL_LSUEVTENA_Msk
 (0x1UL << 
DWT_CTRL_LSUEVTENA_Pos
Ë

	)

893 
	#DWT_CTRL_SLEEPEVTENA_Pos
 19U

	)

894 
	#DWT_CTRL_SLEEPEVTENA_Msk
 (0x1UL << 
DWT_CTRL_SLEEPEVTENA_Pos
Ë

	)

896 
	#DWT_CTRL_EXCEVTENA_Pos
 18U

	)

897 
	#DWT_CTRL_EXCEVTENA_Msk
 (0x1UL << 
DWT_CTRL_EXCEVTENA_Pos
Ë

	)

899 
	#DWT_CTRL_CPIEVTENA_Pos
 17U

	)

900 
	#DWT_CTRL_CPIEVTENA_Msk
 (0x1UL << 
DWT_CTRL_CPIEVTENA_Pos
Ë

	)

902 
	#DWT_CTRL_EXCTRCENA_Pos
 16U

	)

903 
	#DWT_CTRL_EXCTRCENA_Msk
 (0x1UL << 
DWT_CTRL_EXCTRCENA_Pos
Ë

	)

905 
	#DWT_CTRL_PCSAMPLENA_Pos
 12U

	)

906 
	#DWT_CTRL_PCSAMPLENA_Msk
 (0x1UL << 
DWT_CTRL_PCSAMPLENA_Pos
Ë

	)

908 
	#DWT_CTRL_SYNCTAP_Pos
 10U

	)

909 
	#DWT_CTRL_SYNCTAP_Msk
 (0x3UL << 
DWT_CTRL_SYNCTAP_Pos
Ë

	)

911 
	#DWT_CTRL_CYCTAP_Pos
 9U

	)

912 
	#DWT_CTRL_CYCTAP_Msk
 (0x1UL << 
DWT_CTRL_CYCTAP_Pos
Ë

	)

914 
	#DWT_CTRL_POSTINIT_Pos
 5U

	)

915 
	#DWT_CTRL_POSTINIT_Msk
 (0xFUL << 
DWT_CTRL_POSTINIT_Pos
Ë

	)

917 
	#DWT_CTRL_POSTPRESET_Pos
 1U

	)

918 
	#DWT_CTRL_POSTPRESET_Msk
 (0xFUL << 
DWT_CTRL_POSTPRESET_Pos
Ë

	)

920 
	#DWT_CTRL_CYCCNTENA_Pos
 0U

	)

921 
	#DWT_CTRL_CYCCNTENA_Msk
 (0x1UL )

	)

924 
	#DWT_CPICNT_CPICNT_Pos
 0U

	)

925 
	#DWT_CPICNT_CPICNT_Msk
 (0xFFUL )

	)

928 
	#DWT_EXCCNT_EXCCNT_Pos
 0U

	)

929 
	#DWT_EXCCNT_EXCCNT_Msk
 (0xFFUL )

	)

932 
	#DWT_SLEEPCNT_SLEEPCNT_Pos
 0U

	)

933 
	#DWT_SLEEPCNT_SLEEPCNT_Msk
 (0xFFUL )

	)

936 
	#DWT_LSUCNT_LSUCNT_Pos
 0U

	)

937 
	#DWT_LSUCNT_LSUCNT_Msk
 (0xFFUL )

	)

940 
	#DWT_FOLDCNT_FOLDCNT_Pos
 0U

	)

941 
	#DWT_FOLDCNT_FOLDCNT_Msk
 (0xFFUL )

	)

944 
	#DWT_MASK_MASK_Pos
 0U

	)

945 
	#DWT_MASK_MASK_Msk
 (0x1FUL )

	)

948 
	#DWT_FUNCTION_MATCHED_Pos
 24U

	)

949 
	#DWT_FUNCTION_MATCHED_Msk
 (0x1UL << 
DWT_FUNCTION_MATCHED_Pos
Ë

	)

951 
	#DWT_FUNCTION_DATAVADDR1_Pos
 16U

	)

952 
	#DWT_FUNCTION_DATAVADDR1_Msk
 (0xFUL << 
DWT_FUNCTION_DATAVADDR1_Pos
Ë

	)

954 
	#DWT_FUNCTION_DATAVADDR0_Pos
 12U

	)

955 
	#DWT_FUNCTION_DATAVADDR0_Msk
 (0xFUL << 
DWT_FUNCTION_DATAVADDR0_Pos
Ë

	)

957 
	#DWT_FUNCTION_DATAVSIZE_Pos
 10U

	)

958 
	#DWT_FUNCTION_DATAVSIZE_Msk
 (0x3UL << 
DWT_FUNCTION_DATAVSIZE_Pos
Ë

	)

960 
	#DWT_FUNCTION_LNK1ENA_Pos
 9U

	)

961 
	#DWT_FUNCTION_LNK1ENA_Msk
 (0x1UL << 
DWT_FUNCTION_LNK1ENA_Pos
Ë

	)

963 
	#DWT_FUNCTION_DATAVMATCH_Pos
 8U

	)

964 
	#DWT_FUNCTION_DATAVMATCH_Msk
 (0x1UL << 
DWT_FUNCTION_DATAVMATCH_Pos
Ë

	)

966 
	#DWT_FUNCTION_CYCMATCH_Pos
 7U

	)

967 
	#DWT_FUNCTION_CYCMATCH_Msk
 (0x1UL << 
DWT_FUNCTION_CYCMATCH_Pos
Ë

	)

969 
	#DWT_FUNCTION_EMITRANGE_Pos
 5U

	)

970 
	#DWT_FUNCTION_EMITRANGE_Msk
 (0x1UL << 
DWT_FUNCTION_EMITRANGE_Pos
Ë

	)

972 
	#DWT_FUNCTION_FUNCTION_Pos
 0U

	)

973 
	#DWT_FUNCTION_FUNCTION_Msk
 (0xFUL )

	)

990 
__IM
 
uöt32_t
 
SSPSR
;

991 
__IOM
 
uöt32_t
 
CSPSR
;

992 
uöt32_t
 
RESERVED0
[2U];

993 
__IOM
 
uöt32_t
 
ACPR
;

994 
uöt32_t
 
RESERVED1
[55U];

995 
__IOM
 
uöt32_t
 
SPPR
;

996 
uöt32_t
 
RESERVED2
[131U];

997 
__IM
 
uöt32_t
 
FFSR
;

998 
__IOM
 
uöt32_t
 
FFCR
;

999 
__IM
 
uöt32_t
 
FSCR
;

1000 
uöt32_t
 
RESERVED3
[759U];

1001 
__IM
 
uöt32_t
 
TRIGGER
;

1002 
__IM
 
uöt32_t
 
FIFO0
;

1003 
__IM
 
uöt32_t
 
ITATBCTR2
;

1004 
uöt32_t
 
RESERVED4
[1U];

1005 
__IM
 
uöt32_t
 
ITATBCTR0
;

1006 
__IM
 
uöt32_t
 
FIFO1
;

1007 
__IOM
 
uöt32_t
 
ITCTRL
;

1008 
uöt32_t
 
RESERVED5
[39U];

1009 
__IOM
 
uöt32_t
 
CLAIMSET
;

1010 
__IOM
 
uöt32_t
 
CLAIMCLR
;

1011 
uöt32_t
 
RESERVED7
[8U];

1012 
__IM
 
uöt32_t
 
DEVID
;

1013 
__IM
 
uöt32_t
 
DEVTYPE
;

1014 } 
	tTPI_Ty≥
;

1017 
	#TPI_ACPR_PRESCALER_Pos
 0U

	)

1018 
	#TPI_ACPR_PRESCALER_Msk
 (0x1FFFUL )

	)

1021 
	#TPI_SPPR_TXMODE_Pos
 0U

	)

1022 
	#TPI_SPPR_TXMODE_Msk
 (0x3UL )

	)

1025 
	#TPI_FFSR_FtN⁄St›_Pos
 3U

	)

1026 
	#TPI_FFSR_FtN⁄St›_Msk
 (0x1UL << 
TPI_FFSR_FtN⁄St›_Pos
Ë

	)

1028 
	#TPI_FFSR_TCPª£¡_Pos
 2U

	)

1029 
	#TPI_FFSR_TCPª£¡_Msk
 (0x1UL << 
TPI_FFSR_TCPª£¡_Pos
Ë

	)

1031 
	#TPI_FFSR_FtSt›≥d_Pos
 1U

	)

1032 
	#TPI_FFSR_FtSt›≥d_Msk
 (0x1UL << 
TPI_FFSR_FtSt›≥d_Pos
Ë

	)

1034 
	#TPI_FFSR_FlInProg_Pos
 0U

	)

1035 
	#TPI_FFSR_FlInProg_Msk
 (0x1UL )

	)

1038 
	#TPI_FFCR_TrigIn_Pos
 8U

	)

1039 
	#TPI_FFCR_TrigIn_Msk
 (0x1UL << 
TPI_FFCR_TrigIn_Pos
Ë

	)

1041 
	#TPI_FFCR_EnFC⁄t_Pos
 1U

	)

1042 
	#TPI_FFCR_EnFC⁄t_Msk
 (0x1UL << 
TPI_FFCR_EnFC⁄t_Pos
Ë

	)

1045 
	#TPI_TRIGGER_TRIGGER_Pos
 0U

	)

1046 
	#TPI_TRIGGER_TRIGGER_Msk
 (0x1UL )

	)

1049 
	#TPI_FIFO0_ITM_ATVALID_Pos
 29U

	)

1050 
	#TPI_FIFO0_ITM_ATVALID_Msk
 (0x1UL << 
TPI_FIFO0_ITM_ATVALID_Pos
Ë

	)

1052 
	#TPI_FIFO0_ITM_byãcou¡_Pos
 27U

	)

1053 
	#TPI_FIFO0_ITM_byãcou¡_Msk
 (0x3UL << 
TPI_FIFO0_ITM_byãcou¡_Pos
Ë

	)

1055 
	#TPI_FIFO0_ETM_ATVALID_Pos
 26U

	)

1056 
	#TPI_FIFO0_ETM_ATVALID_Msk
 (0x1UL << 
TPI_FIFO0_ETM_ATVALID_Pos
Ë

	)

1058 
	#TPI_FIFO0_ETM_byãcou¡_Pos
 24U

	)

1059 
	#TPI_FIFO0_ETM_byãcou¡_Msk
 (0x3UL << 
TPI_FIFO0_ETM_byãcou¡_Pos
Ë

	)

1061 
	#TPI_FIFO0_ETM2_Pos
 16U

	)

1062 
	#TPI_FIFO0_ETM2_Msk
 (0xFFUL << 
TPI_FIFO0_ETM2_Pos
Ë

	)

1064 
	#TPI_FIFO0_ETM1_Pos
 8U

	)

1065 
	#TPI_FIFO0_ETM1_Msk
 (0xFFUL << 
TPI_FIFO0_ETM1_Pos
Ë

	)

1067 
	#TPI_FIFO0_ETM0_Pos
 0U

	)

1068 
	#TPI_FIFO0_ETM0_Msk
 (0xFFUL )

	)

1071 
	#TPI_ITATBCTR2_ATREADY2_Pos
 0U

	)

1072 
	#TPI_ITATBCTR2_ATREADY2_Msk
 (0x1UL )

	)

1074 
	#TPI_ITATBCTR2_ATREADY1_Pos
 0U

	)

1075 
	#TPI_ITATBCTR2_ATREADY1_Msk
 (0x1UL )

	)

1078 
	#TPI_FIFO1_ITM_ATVALID_Pos
 29U

	)

1079 
	#TPI_FIFO1_ITM_ATVALID_Msk
 (0x1UL << 
TPI_FIFO1_ITM_ATVALID_Pos
Ë

	)

1081 
	#TPI_FIFO1_ITM_byãcou¡_Pos
 27U

	)

1082 
	#TPI_FIFO1_ITM_byãcou¡_Msk
 (0x3UL << 
TPI_FIFO1_ITM_byãcou¡_Pos
Ë

	)

1084 
	#TPI_FIFO1_ETM_ATVALID_Pos
 26U

	)

1085 
	#TPI_FIFO1_ETM_ATVALID_Msk
 (0x1UL << 
TPI_FIFO1_ETM_ATVALID_Pos
Ë

	)

1087 
	#TPI_FIFO1_ETM_byãcou¡_Pos
 24U

	)

1088 
	#TPI_FIFO1_ETM_byãcou¡_Msk
 (0x3UL << 
TPI_FIFO1_ETM_byãcou¡_Pos
Ë

	)

1090 
	#TPI_FIFO1_ITM2_Pos
 16U

	)

1091 
	#TPI_FIFO1_ITM2_Msk
 (0xFFUL << 
TPI_FIFO1_ITM2_Pos
Ë

	)

1093 
	#TPI_FIFO1_ITM1_Pos
 8U

	)

1094 
	#TPI_FIFO1_ITM1_Msk
 (0xFFUL << 
TPI_FIFO1_ITM1_Pos
Ë

	)

1096 
	#TPI_FIFO1_ITM0_Pos
 0U

	)

1097 
	#TPI_FIFO1_ITM0_Msk
 (0xFFUL )

	)

1100 
	#TPI_ITATBCTR0_ATREADY2_Pos
 0U

	)

1101 
	#TPI_ITATBCTR0_ATREADY2_Msk
 (0x1UL )

	)

1103 
	#TPI_ITATBCTR0_ATREADY1_Pos
 0U

	)

1104 
	#TPI_ITATBCTR0_ATREADY1_Msk
 (0x1UL )

	)

1107 
	#TPI_ITCTRL_Mode_Pos
 0U

	)

1108 
	#TPI_ITCTRL_Mode_Msk
 (0x3UL )

	)

1111 
	#TPI_DEVID_NRZVALID_Pos
 11U

	)

1112 
	#TPI_DEVID_NRZVALID_Msk
 (0x1UL << 
TPI_DEVID_NRZVALID_Pos
Ë

	)

1114 
	#TPI_DEVID_MANCVALID_Pos
 10U

	)

1115 
	#TPI_DEVID_MANCVALID_Msk
 (0x1UL << 
TPI_DEVID_MANCVALID_Pos
Ë

	)

1117 
	#TPI_DEVID_PTINVALID_Pos
 9U

	)

1118 
	#TPI_DEVID_PTINVALID_Msk
 (0x1UL << 
TPI_DEVID_PTINVALID_Pos
Ë

	)

1120 
	#TPI_DEVID_MöBufSz_Pos
 6U

	)

1121 
	#TPI_DEVID_MöBufSz_Msk
 (0x7UL << 
TPI_DEVID_MöBufSz_Pos
Ë

	)

1123 
	#TPI_DEVID_AsynClkIn_Pos
 5U

	)

1124 
	#TPI_DEVID_AsynClkIn_Msk
 (0x1UL << 
TPI_DEVID_AsynClkIn_Pos
Ë

	)

1126 
	#TPI_DEVID_NrTø˚I≈ut_Pos
 0U

	)

1127 
	#TPI_DEVID_NrTø˚I≈ut_Msk
 (0x1FUL )

	)

1130 
	#TPI_DEVTYPE_SubTy≥_Pos
 4U

	)

1131 
	#TPI_DEVTYPE_SubTy≥_Msk
 (0xFUL )

	)

1133 
	#TPI_DEVTYPE_Maj‹Ty≥_Pos
 0U

	)

1134 
	#TPI_DEVTYPE_Maj‹Ty≥_Msk
 (0xFUL << 
TPI_DEVTYPE_Maj‹Ty≥_Pos
Ë

	)

1139 #i‡
deföed
 (
__MPU_PRESENT
) && (__MPU_PRESENT == 1U)

1152 
__IM
 
uöt32_t
 
TYPE
;

1153 
__IOM
 
uöt32_t
 
CTRL
;

1154 
__IOM
 
uöt32_t
 
RNR
;

1155 
__IOM
 
uöt32_t
 
RBAR
;

1156 
__IOM
 
uöt32_t
 
RASR
;

1157 
__IOM
 
uöt32_t
 
RBAR_A1
;

1158 
__IOM
 
uöt32_t
 
RASR_A1
;

1159 
__IOM
 
uöt32_t
 
RBAR_A2
;

1160 
__IOM
 
uöt32_t
 
RASR_A2
;

1161 
__IOM
 
uöt32_t
 
RBAR_A3
;

1162 
__IOM
 
uöt32_t
 
RASR_A3
;

1163 } 
	tMPU_Ty≥
;

1165 
	#MPU_TYPE_RALIASES
 4U

	)

1168 
	#MPU_TYPE_IREGION_Pos
 16U

	)

1169 
	#MPU_TYPE_IREGION_Msk
 (0xFFUL << 
MPU_TYPE_IREGION_Pos
Ë

	)

1171 
	#MPU_TYPE_DREGION_Pos
 8U

	)

1172 
	#MPU_TYPE_DREGION_Msk
 (0xFFUL << 
MPU_TYPE_DREGION_Pos
Ë

	)

1174 
	#MPU_TYPE_SEPARATE_Pos
 0U

	)

1175 
	#MPU_TYPE_SEPARATE_Msk
 (1UL )

	)

1178 
	#MPU_CTRL_PRIVDEFENA_Pos
 2U

	)

1179 
	#MPU_CTRL_PRIVDEFENA_Msk
 (1UL << 
MPU_CTRL_PRIVDEFENA_Pos
Ë

	)

1181 
	#MPU_CTRL_HFNMIENA_Pos
 1U

	)

1182 
	#MPU_CTRL_HFNMIENA_Msk
 (1UL << 
MPU_CTRL_HFNMIENA_Pos
Ë

	)

1184 
	#MPU_CTRL_ENABLE_Pos
 0U

	)

1185 
	#MPU_CTRL_ENABLE_Msk
 (1UL )

	)

1188 
	#MPU_RNR_REGION_Pos
 0U

	)

1189 
	#MPU_RNR_REGION_Msk
 (0xFFUL )

	)

1192 
	#MPU_RBAR_ADDR_Pos
 5U

	)

1193 
	#MPU_RBAR_ADDR_Msk
 (0x7FFFFFFUL << 
MPU_RBAR_ADDR_Pos
Ë

	)

1195 
	#MPU_RBAR_VALID_Pos
 4U

	)

1196 
	#MPU_RBAR_VALID_Msk
 (1UL << 
MPU_RBAR_VALID_Pos
Ë

	)

1198 
	#MPU_RBAR_REGION_Pos
 0U

	)

1199 
	#MPU_RBAR_REGION_Msk
 (0xFUL )

	)

1202 
	#MPU_RASR_ATTRS_Pos
 16U

	)

1203 
	#MPU_RASR_ATTRS_Msk
 (0xFFFFUL << 
MPU_RASR_ATTRS_Pos
Ë

	)

1205 
	#MPU_RASR_XN_Pos
 28U

	)

1206 
	#MPU_RASR_XN_Msk
 (1UL << 
MPU_RASR_XN_Pos
Ë

	)

1208 
	#MPU_RASR_AP_Pos
 24U

	)

1209 
	#MPU_RASR_AP_Msk
 (0x7UL << 
MPU_RASR_AP_Pos
Ë

	)

1211 
	#MPU_RASR_TEX_Pos
 19U

	)

1212 
	#MPU_RASR_TEX_Msk
 (0x7UL << 
MPU_RASR_TEX_Pos
Ë

	)

1214 
	#MPU_RASR_S_Pos
 18U

	)

1215 
	#MPU_RASR_S_Msk
 (1UL << 
MPU_RASR_S_Pos
Ë

	)

1217 
	#MPU_RASR_C_Pos
 17U

	)

1218 
	#MPU_RASR_C_Msk
 (1UL << 
MPU_RASR_C_Pos
Ë

	)

1220 
	#MPU_RASR_B_Pos
 16U

	)

1221 
	#MPU_RASR_B_Msk
 (1UL << 
MPU_RASR_B_Pos
Ë

	)

1223 
	#MPU_RASR_SRD_Pos
 8U

	)

1224 
	#MPU_RASR_SRD_Msk
 (0xFFUL << 
MPU_RASR_SRD_Pos
Ë

	)

1226 
	#MPU_RASR_SIZE_Pos
 1U

	)

1227 
	#MPU_RASR_SIZE_Msk
 (0x1FUL << 
MPU_RASR_SIZE_Pos
Ë

	)

1229 
	#MPU_RASR_ENABLE_Pos
 0U

	)

1230 
	#MPU_RASR_ENABLE_Msk
 (1UL )

	)

1248 
__IOM
 
uöt32_t
 
DHCSR
;

1249 
__OM
 
uöt32_t
 
DCRSR
;

1250 
__IOM
 
uöt32_t
 
DCRDR
;

1251 
__IOM
 
uöt32_t
 
DEMCR
;

1252 } 
	tC‹eDebug_Ty≥
;

1255 
	#C‹eDebug_DHCSR_DBGKEY_Pos
 16U

	)

1256 
	#C‹eDebug_DHCSR_DBGKEY_Msk
 (0xFFFFUL << 
C‹eDebug_DHCSR_DBGKEY_Pos
Ë

	)

1258 
	#C‹eDebug_DHCSR_S_RESET_ST_Pos
 25U

	)

1259 
	#C‹eDebug_DHCSR_S_RESET_ST_Msk
 (1UL << 
C‹eDebug_DHCSR_S_RESET_ST_Pos
Ë

	)

1261 
	#C‹eDebug_DHCSR_S_RETIRE_ST_Pos
 24U

	)

1262 
	#C‹eDebug_DHCSR_S_RETIRE_ST_Msk
 (1UL << 
C‹eDebug_DHCSR_S_RETIRE_ST_Pos
Ë

	)

1264 
	#C‹eDebug_DHCSR_S_LOCKUP_Pos
 19U

	)

1265 
	#C‹eDebug_DHCSR_S_LOCKUP_Msk
 (1UL << 
C‹eDebug_DHCSR_S_LOCKUP_Pos
Ë

	)

1267 
	#C‹eDebug_DHCSR_S_SLEEP_Pos
 18U

	)

1268 
	#C‹eDebug_DHCSR_S_SLEEP_Msk
 (1UL << 
C‹eDebug_DHCSR_S_SLEEP_Pos
Ë

	)

1270 
	#C‹eDebug_DHCSR_S_HALT_Pos
 17U

	)

1271 
	#C‹eDebug_DHCSR_S_HALT_Msk
 (1UL << 
C‹eDebug_DHCSR_S_HALT_Pos
Ë

	)

1273 
	#C‹eDebug_DHCSR_S_REGRDY_Pos
 16U

	)

1274 
	#C‹eDebug_DHCSR_S_REGRDY_Msk
 (1UL << 
C‹eDebug_DHCSR_S_REGRDY_Pos
Ë

	)

1276 
	#C‹eDebug_DHCSR_C_SNAPSTALL_Pos
 5U

	)

1277 
	#C‹eDebug_DHCSR_C_SNAPSTALL_Msk
 (1UL << 
C‹eDebug_DHCSR_C_SNAPSTALL_Pos
Ë

	)

1279 
	#C‹eDebug_DHCSR_C_MASKINTS_Pos
 3U

	)

1280 
	#C‹eDebug_DHCSR_C_MASKINTS_Msk
 (1UL << 
C‹eDebug_DHCSR_C_MASKINTS_Pos
Ë

	)

1282 
	#C‹eDebug_DHCSR_C_STEP_Pos
 2U

	)

1283 
	#C‹eDebug_DHCSR_C_STEP_Msk
 (1UL << 
C‹eDebug_DHCSR_C_STEP_Pos
Ë

	)

1285 
	#C‹eDebug_DHCSR_C_HALT_Pos
 1U

	)

1286 
	#C‹eDebug_DHCSR_C_HALT_Msk
 (1UL << 
C‹eDebug_DHCSR_C_HALT_Pos
Ë

	)

1288 
	#C‹eDebug_DHCSR_C_DEBUGEN_Pos
 0U

	)

1289 
	#C‹eDebug_DHCSR_C_DEBUGEN_Msk
 (1UL )

	)

1292 
	#C‹eDebug_DCRSR_REGWnR_Pos
 16U

	)

1293 
	#C‹eDebug_DCRSR_REGWnR_Msk
 (1UL << 
C‹eDebug_DCRSR_REGWnR_Pos
Ë

	)

1295 
	#C‹eDebug_DCRSR_REGSEL_Pos
 0U

	)

1296 
	#C‹eDebug_DCRSR_REGSEL_Msk
 (0x1FUL )

	)

1299 
	#C‹eDebug_DEMCR_TRCENA_Pos
 24U

	)

1300 
	#C‹eDebug_DEMCR_TRCENA_Msk
 (1UL << 
C‹eDebug_DEMCR_TRCENA_Pos
Ë

	)

1302 
	#C‹eDebug_DEMCR_MON_REQ_Pos
 19U

	)

1303 
	#C‹eDebug_DEMCR_MON_REQ_Msk
 (1UL << 
C‹eDebug_DEMCR_MON_REQ_Pos
Ë

	)

1305 
	#C‹eDebug_DEMCR_MON_STEP_Pos
 18U

	)

1306 
	#C‹eDebug_DEMCR_MON_STEP_Msk
 (1UL << 
C‹eDebug_DEMCR_MON_STEP_Pos
Ë

	)

1308 
	#C‹eDebug_DEMCR_MON_PEND_Pos
 17U

	)

1309 
	#C‹eDebug_DEMCR_MON_PEND_Msk
 (1UL << 
C‹eDebug_DEMCR_MON_PEND_Pos
Ë

	)

1311 
	#C‹eDebug_DEMCR_MON_EN_Pos
 16U

	)

1312 
	#C‹eDebug_DEMCR_MON_EN_Msk
 (1UL << 
C‹eDebug_DEMCR_MON_EN_Pos
Ë

	)

1314 
	#C‹eDebug_DEMCR_VC_HARDERR_Pos
 10U

	)

1315 
	#C‹eDebug_DEMCR_VC_HARDERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_HARDERR_Pos
Ë

	)

1317 
	#C‹eDebug_DEMCR_VC_INTERR_Pos
 9U

	)

1318 
	#C‹eDebug_DEMCR_VC_INTERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_INTERR_Pos
Ë

	)

1320 
	#C‹eDebug_DEMCR_VC_BUSERR_Pos
 8U

	)

1321 
	#C‹eDebug_DEMCR_VC_BUSERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_BUSERR_Pos
Ë

	)

1323 
	#C‹eDebug_DEMCR_VC_STATERR_Pos
 7U

	)

1324 
	#C‹eDebug_DEMCR_VC_STATERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_STATERR_Pos
Ë

	)

1326 
	#C‹eDebug_DEMCR_VC_CHKERR_Pos
 6U

	)

1327 
	#C‹eDebug_DEMCR_VC_CHKERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_CHKERR_Pos
Ë

	)

1329 
	#C‹eDebug_DEMCR_VC_NOCPERR_Pos
 5U

	)

1330 
	#C‹eDebug_DEMCR_VC_NOCPERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_NOCPERR_Pos
Ë

	)

1332 
	#C‹eDebug_DEMCR_VC_MMERR_Pos
 4U

	)

1333 
	#C‹eDebug_DEMCR_VC_MMERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_MMERR_Pos
Ë

	)

1335 
	#C‹eDebug_DEMCR_VC_CORERESET_Pos
 0U

	)

1336 
	#C‹eDebug_DEMCR_VC_CORERESET_Msk
 (1UL )

	)

1354 
	#_VAL2FLD
(
fõld
, 
vÆue
Ë(((
uöt32_t
)(vÆueË<< fõld ## 
_Pos
Ë& fõld ## 
_Msk
)

	)

1362 
	#_FLD2VAL
(
fõld
, 
vÆue
Ë(((
uöt32_t
)(vÆueË& fõld ## 
_Msk
Ë>> fõld ## 
_Pos
)

	)

1375 
	#SCS_BASE
 (0xE000E000ULË

	)

1376 
	#ITM_BASE
 (0xE0000000ULË

	)

1377 
	#DWT_BASE
 (0xE0001000ULË

	)

1378 
	#TPI_BASE
 (0xE0040000ULË

	)

1379 
	#C‹eDebug_BASE
 (0xE000EDF0ULË

	)

1380 
	#SysTick_BASE
 (
SCS_BASE
 + 0x0010ULË

	)

1381 
	#NVIC_BASE
 (
SCS_BASE
 + 0x0100ULË

	)

1382 
	#SCB_BASE
 (
SCS_BASE
 + 0x0D00ULË

	)

1384 
	#SCnSCB
 ((
SCnSCB_Ty≥
 *Ë
SCS_BASE
 )

	)

1385 
	#SCB
 ((
SCB_Ty≥
 *Ë
SCB_BASE
 )

	)

1386 
	#SysTick
 ((
SysTick_Ty≥
 *Ë
SysTick_BASE
 )

	)

1387 
	#NVIC
 ((
NVIC_Ty≥
 *Ë
NVIC_BASE
 )

	)

1388 
	#ITM
 ((
ITM_Ty≥
 *Ë
ITM_BASE
 )

	)

1389 
	#DWT
 ((
DWT_Ty≥
 *Ë
DWT_BASE
 )

	)

1390 
	#TPI
 ((
TPI_Ty≥
 *Ë
TPI_BASE
 )

	)

1391 
	#C‹eDebug
 ((
C‹eDebug_Ty≥
 *Ë
C‹eDebug_BASE
Ë

	)

1393 #i‡
deföed
 (
__MPU_PRESENT
) && (__MPU_PRESENT == 1U)

1394 
	#MPU_BASE
 (
SCS_BASE
 + 0x0D90ULË

	)

1395 
	#MPU
 ((
MPU_Ty≥
 *Ë
MPU_BASE
 )

	)

1424 #ifde‡
CMSIS_NVIC_VIRTUAL


1425 #i‚de‡
CMSIS_NVIC_VIRTUAL_HEADER_FILE


1426 
	#CMSIS_NVIC_VIRTUAL_HEADER_FILE
 "cmsis_nvic_vútuÆ.h"

	)

1428 #ö˛udê
CMSIS_NVIC_VIRTUAL_HEADER_FILE


1430 
	#NVIC_SëPri‹ôyGroupög
 
__NVIC_SëPri‹ôyGroupög


	)

1431 
	#NVIC_GëPri‹ôyGroupög
 
__NVIC_GëPri‹ôyGroupög


	)

1432 
	#NVIC_E«bÀIRQ
 
__NVIC_E«bÀIRQ


	)

1433 
	#NVIC_GëE«bÀIRQ
 
__NVIC_GëE«bÀIRQ


	)

1434 
	#NVIC_DißbÀIRQ
 
__NVIC_DißbÀIRQ


	)

1435 
	#NVIC_GëPídögIRQ
 
__NVIC_GëPídögIRQ


	)

1436 
	#NVIC_SëPídögIRQ
 
__NVIC_SëPídögIRQ


	)

1437 
	#NVIC_CÀ¨PídögIRQ
 
__NVIC_CÀ¨PídögIRQ


	)

1438 
	#NVIC_GëA˘ive
 
__NVIC_GëA˘ive


	)

1439 
	#NVIC_SëPri‹ôy
 
__NVIC_SëPri‹ôy


	)

1440 
	#NVIC_GëPri‹ôy
 
__NVIC_GëPri‹ôy


	)

1441 
	#NVIC_Sy°emRe£t
 
__NVIC_Sy°emRe£t


	)

1444 #ifde‡
CMSIS_VECTAB_VIRTUAL


1445 #i‚de‡
CMSIS_VECTAB_VIRTUAL_HEADER_FILE


1446 
	#CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 "cmsis_ve˘ab_vútuÆ.h"

	)

1448 #ö˛udê
CMSIS_VECTAB_VIRTUAL_HEADER_FILE


1450 
	#NVIC_SëVe˘‹
 
__NVIC_SëVe˘‹


	)

1451 
	#NVIC_GëVe˘‹
 
__NVIC_GëVe˘‹


	)

1454 
	#NVIC_USER_IRQ_OFFSET
 16

	)

1458 
	#EXC_RETURN_HANDLER
 (0xFFFFFFF1ULË

	)

1459 
	#EXC_RETURN_THREAD_MSP
 (0xFFFFFFF9ULË

	)

1460 
	#EXC_RETURN_THREAD_PSP
 (0xFFFFFFFDULË

	)

1472 
__STATIC_INLINE
 
__NVIC_SëPri‹ôyGroupög
(
uöt32_t
 
Pri‹ôyGroup
)

1474 
uöt32_t
 
ªg_vÆue
;

1475 
uöt32_t
 
Pri‹ôyGroupTmp
 = (
Pri‹ôyGroup
 & (uint32_t)0x07UL);

1477 
ªg_vÆue
 = 
SCB
->
AIRCR
;

1478 
ªg_vÆue
 &~((
uöt32_t
)(
SCB_AIRCR_VECTKEY_Msk
 | 
SCB_AIRCR_PRIGROUP_Msk
));

1479 
ªg_vÆue
 = (reg_value |

1480 ((
uöt32_t
)0x5FAUL << 
SCB_AIRCR_VECTKEY_Pos
) |

1481 (
Pri‹ôyGroupTmp
 << 
SCB_AIRCR_PRIGROUP_Pos
) );

1482 
SCB
->
AIRCR
 = 
ªg_vÆue
;

1491 
__STATIC_INLINE
 
uöt32_t
 
__NVIC_GëPri‹ôyGroupög
()

1493  ((
uöt32_t
)((
SCB
->
AIRCR
 & 
SCB_AIRCR_PRIGROUP_Msk
Ë>> 
SCB_AIRCR_PRIGROUP_Pos
));

1503 
__STATIC_INLINE
 
__NVIC_E«bÀIRQ
(
IRQn_Ty≥
 
IRQn
)

1505 i‡((
öt32_t
)(
IRQn
) >= 0)

1507 
__COMPILER_BARRIER
();

1508 
NVIC
->
ISER
[(((
uöt32_t
)
IRQn
) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));

1509 
__COMPILER_BARRIER
();

1522 
__STATIC_INLINE
 
uöt32_t
 
__NVIC_GëE«bÀIRQ
(
IRQn_Ty≥
 
IRQn
)

1524 i‡((
öt32_t
)(
IRQn
) >= 0)

1526 ((
uöt32_t
)(((
NVIC
->
ISER
[(((uöt32_t)
IRQn
) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL));

1541 
__STATIC_INLINE
 
__NVIC_DißbÀIRQ
(
IRQn_Ty≥
 
IRQn
)

1543 i‡((
öt32_t
)(
IRQn
) >= 0)

1545 
NVIC
->
ICER
[(((
uöt32_t
)
IRQn
) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));

1546 
__DSB
();

1547 
__ISB
();

1560 
__STATIC_INLINE
 
uöt32_t
 
__NVIC_GëPídögIRQ
(
IRQn_Ty≥
 
IRQn
)

1562 i‡((
öt32_t
)(
IRQn
) >= 0)

1564 ((
uöt32_t
)(((
NVIC
->
ISPR
[(((uöt32_t)
IRQn
) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL));

1579 
__STATIC_INLINE
 
__NVIC_SëPídögIRQ
(
IRQn_Ty≥
 
IRQn
)

1581 i‡((
öt32_t
)(
IRQn
) >= 0)

1583 
NVIC
->
ISPR
[(((
uöt32_t
)
IRQn
) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));

1594 
__STATIC_INLINE
 
__NVIC_CÀ¨PídögIRQ
(
IRQn_Ty≥
 
IRQn
)

1596 i‡((
öt32_t
)(
IRQn
) >= 0)

1598 
NVIC
->
ICPR
[(((
uöt32_t
)
IRQn
) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));

1611 
__STATIC_INLINE
 
uöt32_t
 
__NVIC_GëA˘ive
(
IRQn_Ty≥
 
IRQn
)

1613 i‡((
öt32_t
)(
IRQn
) >= 0)

1615 ((
uöt32_t
)(((
NVIC
->
IABR
[(((uöt32_t)
IRQn
) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL));

1633 
__STATIC_INLINE
 
__NVIC_SëPri‹ôy
(
IRQn_Ty≥
 
IRQn
, 
uöt32_t
 
¥i‹ôy
)

1635 i‡((
öt32_t
)(
IRQn
) >= 0)

1637 
NVIC
->
IP
[((
uöt32_t
)
IRQn
)] = (
uöt8_t
)((
¥i‹ôy
 << (8U - 
__NVIC_PRIO_BITS
)) & (uint32_t)0xFFUL);

1641 
SCB
->
SHP
[(((
uöt32_t
)
IRQn
Ë& 0xFUL)-4UL] = (
uöt8_t
)((
¥i‹ôy
 << (8U - 
__NVIC_PRIO_BITS
)) & (uint32_t)0xFFUL);

1655 
__STATIC_INLINE
 
uöt32_t
 
__NVIC_GëPri‹ôy
(
IRQn_Ty≥
 
IRQn
)

1658 i‡((
öt32_t
)(
IRQn
) >= 0)

1660 (((
uöt32_t
)
NVIC
->
IP
[((uöt32_t)
IRQn
)] >> (8U - 
__NVIC_PRIO_BITS
)));

1664 (((
uöt32_t
)
SCB
->
SHP
[(((uöt32_t)
IRQn
Ë& 0xFUL)-4UL] >> (8U - 
__NVIC_PRIO_BITS
)));

1680 
__STATIC_INLINE
 
uöt32_t
 
NVIC_EncodePri‹ôy
 (uöt32_à
Pri‹ôyGroup
, uöt32_à
Pªem±Pri‹ôy
, uöt32_à
SubPri‹ôy
)

1682 
uöt32_t
 
Pri‹ôyGroupTmp
 = (
Pri‹ôyGroup
 & (uint32_t)0x07UL);

1683 
uöt32_t
 
Pªem±Pri‹ôyBôs
;

1684 
uöt32_t
 
SubPri‹ôyBôs
;

1686 
Pªem±Pri‹ôyBôs
 = ((7UL - 
Pri‹ôyGroupTmp
Ë> (
uöt32_t
)(
__NVIC_PRIO_BITS
)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);

1687 
SubPri‹ôyBôs
 = ((
Pri‹ôyGroupTmp
 + (
uöt32_t
)(
__NVIC_PRIO_BITS
)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));

1690 ((
Pªem±Pri‹ôy
 & (
uöt32_t
)((1UL << (
Pªem±Pri‹ôyBôs
)Ë- 1UL)Ë<< 
SubPri‹ôyBôs
) |

1691 ((
SubPri‹ôy
 & (
uöt32_t
)((1UL << (
SubPri‹ôyBôs
 )) - 1UL)))

1707 
__STATIC_INLINE
 
NVIC_DecodePri‹ôy
 (
uöt32_t
 
Pri‹ôy
, uöt32_à
Pri‹ôyGroup
, uöt32_t* c⁄° 
pPªem±Pri‹ôy
, uöt32_t* c⁄° 
pSubPri‹ôy
)

1709 
uöt32_t
 
Pri‹ôyGroupTmp
 = (
Pri‹ôyGroup
 & (uint32_t)0x07UL);

1710 
uöt32_t
 
Pªem±Pri‹ôyBôs
;

1711 
uöt32_t
 
SubPri‹ôyBôs
;

1713 
Pªem±Pri‹ôyBôs
 = ((7UL - 
Pri‹ôyGroupTmp
Ë> (
uöt32_t
)(
__NVIC_PRIO_BITS
)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);

1714 
SubPri‹ôyBôs
 = ((
Pri‹ôyGroupTmp
 + (
uöt32_t
)(
__NVIC_PRIO_BITS
)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));

1716 *
pPªem±Pri‹ôy
 = (
Pri‹ôy
 >> 
SubPri‹ôyBôs
Ë& (
uöt32_t
)((1UL << (
Pªem±Pri‹ôyBôs
)) - 1UL);

1717 *
pSubPri‹ôy
 = (
Pri‹ôy
 ) & (
uöt32_t
)((1UL << (
SubPri‹ôyBôs
 )) - 1UL);

1730 
__STATIC_INLINE
 
__NVIC_SëVe˘‹
(
IRQn_Ty≥
 
IRQn
, 
uöt32_t
 
ve˘‹
)

1732 
uöt32_t
 
ve˘‹s
 = (uöt32_à)
SCB
->
VTOR
;

1733 (* (*Ë(
ve˘‹s
 + ((
öt32_t
)
IRQn
 + 
NVIC_USER_IRQ_OFFSET
Ë* 4)Ë
ve˘‹
;

1746 
__STATIC_INLINE
 
uöt32_t
 
__NVIC_GëVe˘‹
(
IRQn_Ty≥
 
IRQn
)

1748 
uöt32_t
 
ve˘‹s
 = (uöt32_à)
SCB
->
VTOR
;

1749  (
uöt32_t
)(* (*Ë(
ve˘‹s
 + ((
öt32_t
)
IRQn
 + 
NVIC_USER_IRQ_OFFSET
) * 4));

1757 
__NO_RETURN
 
__STATIC_INLINE
 
__NVIC_Sy°emRe£t
()

1759 
__DSB
();

1761 
SCB
->
AIRCR
 = (
uöt32_t
)((0x5FAUL << 
SCB_AIRCR_VECTKEY_Pos
) |

1762 (
SCB
->
AIRCR
 & 
SCB_AIRCR_PRIGROUP_Msk
) |

1763 
SCB_AIRCR_SYSRESETREQ_Msk
 );

1764 
__DSB
();

1768 
__NOP
();

1776 #i‡
deföed
 (
__MPU_PRESENT
) && (__MPU_PRESENT == 1U)

1778 
	~"mpu_¨mv7.h
"

1799 
__STATIC_INLINE
 
uöt32_t
 
SCB_GëFPUTy≥
()

1817 #i‡
deföed
 (
__Víd‹_SysTickC⁄fig
) && (__Vendor_SysTickConfig == 0U)

1830 
__STATIC_INLINE
 
uöt32_t
 
SysTick_C⁄fig
(uöt32_à
ticks
)

1832 i‡((
ticks
 - 1ULË> 
SysTick_LOAD_RELOAD_Msk
)

1837 
SysTick
->
LOAD
 = (
uöt32_t
)(
ticks
 - 1UL);

1838 
NVIC_SëPri‹ôy
 (
SysTick_IRQn
, (1UL << 
__NVIC_PRIO_BITS
) - 1UL);

1839 
SysTick
->
VAL
 = 0UL;

1840 
SysTick
->
CTRL
 = 
SysTick_CTRL_CLKSOURCE_Msk
 |

1841 
SysTick_CTRL_TICKINT_Msk
 |

1842 
SysTick_CTRL_ENABLE_Msk
;

1860 vﬁ©ûê
öt32_t
 
ITM_RxBuf„r
;

1861 
	#ITM_RXBUFFER_EMPTY
 ((
öt32_t
)0x5AA55AA5UË

	)

1872 
__STATIC_INLINE
 
uöt32_t
 
ITM_SídCh¨
 (uöt32_à
ch
)

1874 i‡(((
	gITM
->
	gTCR
 & 
	gITM_TCR_ITMENA_Msk
) != 0UL) &&

1875 ((
ITM
->
TER
 & 1UL ) != 0UL) )

1877 
ITM
->
PORT
[0U].
u32
 == 0UL)

1879 
__NOP
();

1881 
	gITM
->
	gPORT
[0U].
	gu8
 = (
uöt8_t
)
ch
;

1883  (
	gch
);

1893 
__STATIC_INLINE
 
öt32_t
 
ITM_Re˚iveCh¨
 ()

1895 
öt32_t
 
	gch
 = -1;

1897 i‡(
	gITM_RxBuf„r
 !
ITM_RXBUFFER_EMPTY
)

1899 
ch
 = 
ITM_RxBuf„r
;

1900 
	gITM_RxBuf„r
 = 
ITM_RXBUFFER_EMPTY
;

1903  (
	gch
);

1913 
__STATIC_INLINE
 
öt32_t
 
ITM_CheckCh¨
 ()

1916 i‡(
	gITM_RxBuf„r
 =
ITM_RXBUFFER_EMPTY
)

1931 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\cmsis\mpu_armv7.h

25 #i‡ 
deföed
 ( 
__ICCARM__
 )

26 #¥agm®
sy°em_ö˛ude


27 #ñi‡
deföed
 (
__˛™g__
)

28 #¥agm®
˛™g
 
sy°em_hódî


31 #i‚de‡
ARM_MPU_ARMV7_H


32 
	#ARM_MPU_ARMV7_H


	)

34 
	#ARM_MPU_REGION_SIZE_32B
 ((
uöt8_t
)0x04U)

35 
	#ARM_MPU_REGION_SIZE_64B
 ((
uöt8_t
)0x05U)

36 
	#ARM_MPU_REGION_SIZE_128B
 ((
uöt8_t
)0x06U)

37 
	#ARM_MPU_REGION_SIZE_256B
 ((
uöt8_t
)0x07U)

38 
	#ARM_MPU_REGION_SIZE_512B
 ((
uöt8_t
)0x08U)

39 
	#ARM_MPU_REGION_SIZE_1KB
 ((
uöt8_t
)0x09U)

40 
	#ARM_MPU_REGION_SIZE_2KB
 ((
uöt8_t
)0x0AU)

41 
	#ARM_MPU_REGION_SIZE_4KB
 ((
uöt8_t
)0x0BU)

42 
	#ARM_MPU_REGION_SIZE_8KB
 ((
uöt8_t
)0x0CU)

43 
	#ARM_MPU_REGION_SIZE_16KB
 ((
uöt8_t
)0x0DU)

44 
	#ARM_MPU_REGION_SIZE_32KB
 ((
uöt8_t
)0x0EU)

45 
	#ARM_MPU_REGION_SIZE_64KB
 ((
uöt8_t
)0x0FU)

46 
	#ARM_MPU_REGION_SIZE_128KB
 ((
uöt8_t
)0x10U)

47 
	#ARM_MPU_REGION_SIZE_256KB
 ((
uöt8_t
)0x11U)

48 
	#ARM_MPU_REGION_SIZE_512KB
 ((
uöt8_t
)0x12U)

49 
	#ARM_MPU_REGION_SIZE_1MB
 ((
uöt8_t
)0x13U)

50 
	#ARM_MPU_REGION_SIZE_2MB
 ((
uöt8_t
)0x14U)

51 
	#ARM_MPU_REGION_SIZE_4MB
 ((
uöt8_t
)0x15U)

52 
	#ARM_MPU_REGION_SIZE_8MB
 ((
uöt8_t
)0x16U)

53 
	#ARM_MPU_REGION_SIZE_16MB
 ((
uöt8_t
)0x17U)

54 
	#ARM_MPU_REGION_SIZE_32MB
 ((
uöt8_t
)0x18U)

55 
	#ARM_MPU_REGION_SIZE_64MB
 ((
uöt8_t
)0x19U)

56 
	#ARM_MPU_REGION_SIZE_128MB
 ((
uöt8_t
)0x1AU)

57 
	#ARM_MPU_REGION_SIZE_256MB
 ((
uöt8_t
)0x1BU)

58 
	#ARM_MPU_REGION_SIZE_512MB
 ((
uöt8_t
)0x1CU)

59 
	#ARM_MPU_REGION_SIZE_1GB
 ((
uöt8_t
)0x1DU)

60 
	#ARM_MPU_REGION_SIZE_2GB
 ((
uöt8_t
)0x1EU)

61 
	#ARM_MPU_REGION_SIZE_4GB
 ((
uöt8_t
)0x1FU)

62 

	)

63 
	#ARM_MPU_AP_NONE
 0U

64 
	#ARM_MPU_AP_PRIV
 1U

65 
	#ARM_MPU_AP_URO
 2U

66 
	#ARM_MPU_AP_FULL
 3U

67 
	#ARM_MPU_AP_PRO
 5U

68 
	#ARM_MPU_AP_RO
 6U

69 

	)

75 
	#ARM_MPU_RBAR
(
Regi⁄
, 
Ba£Addªss
) \

76 (((
Ba£Addªss
Ë& 
MPU_RBAR_ADDR_Msk
) | \

77 ((
Regi⁄
Ë& 
MPU_RBAR_REGION_Msk
) | \

78 (
MPU_RBAR_VALID_Msk
))

	)

88 
	#ARM_MPU_ACCESS_
(
Ty≥ExtFõld
, 
IsSh¨óbÀ
, 
IsCachóbÀ
, 
IsBuf„øbÀ
) \

89 ((((
Ty≥ExtFõld
Ë<< 
MPU_RASR_TEX_Pos
Ë& 
MPU_RASR_TEX_Msk
) | \

90 (((
IsSh¨óbÀ
Ë<< 
MPU_RASR_S_Pos
Ë& 
MPU_RASR_S_Msk
) | \

91 (((
IsCachóbÀ
Ë<< 
MPU_RASR_C_Pos
Ë& 
MPU_RASR_C_Msk
) | \

92 (((
IsBuf„øbÀ
Ë<< 
MPU_RASR_B_Pos
Ë& 
MPU_RASR_B_Msk
))

	)

103 
	#ARM_MPU_RASR_EX
(
DißbÀExec
, 
Ac˚ssPîmissi⁄
, 
Ac˚ssAâribuãs
, 
SubRegi⁄DißbÀ
, 
Size
) \

104 ((((
DißbÀExec
Ë<< 
MPU_RASR_XN_Pos
Ë& 
MPU_RASR_XN_Msk
) | \

105 (((
Ac˚ssPîmissi⁄
Ë<< 
MPU_RASR_AP_Pos
Ë& 
MPU_RASR_AP_Msk
) | \

106 (((
Ac˚ssAâribuãs
Ë& (
MPU_RASR_TEX_Msk
 | 
MPU_RASR_S_Msk
 | 
MPU_RASR_C_Msk
 | 
MPU_RASR_B_Msk
))) | \

107 (((
SubRegi⁄DißbÀ
Ë<< 
MPU_RASR_SRD_Pos
Ë& 
MPU_RASR_SRD_Msk
) | \

108 (((
Size
Ë<< 
MPU_RASR_SIZE_Pos
Ë& 
MPU_RASR_SIZE_Msk
) | \

109 (((
MPU_RASR_ENABLE_Msk
))))

	)

123 
	#ARM_MPU_RASR
(
DißbÀExec
, 
Ac˚ssPîmissi⁄
, 
Ty≥ExtFõld
, 
IsSh¨óbÀ
, 
IsCachóbÀ
, 
IsBuf„øbÀ
, 
SubRegi⁄DißbÀ
, 
Size
) \

124 
	`ARM_MPU_RASR_EX
(
DißbÀExec
, 
Ac˚ssPîmissi⁄
, 
	`ARM_MPU_ACCESS_
(
Ty≥ExtFõld
, 
IsSh¨óbÀ
, 
IsCachóbÀ
, 
IsBuf„øbÀ
), 
SubRegi⁄DißbÀ
, 
Size
)

	)

133 
	#ARM_MPU_ACCESS_ORDERED
 
	`ARM_MPU_ACCESS_
(0U, 1U, 0U, 0U)

	)

144 
	#ARM_MPU_ACCESS_DEVICE
(
IsSh¨óbÀ
Ë((IsSh¨óbÀË? 
	`ARM_MPU_ACCESS_
(0U, 1U, 0U, 1UË: ARM_MPU_ACCESS_(2U, 0U, 0U, 0U))

	)

157 
	#ARM_MPU_ACCESS_NORMAL
(
OuãrCp
, 
I¬îCp
, 
IsSh¨óbÀ
Ë
	`ARM_MPU_ACCESS_
((4U | (OuãrCp)), IsSh¨óbÀ, ((I¬îCpË& 2U), ((I¬îCpË& 1U))

	)

162 
	#ARM_MPU_CACHEP_NOCACHE
 0U

	)

167 
	#ARM_MPU_CACHEP_WB_WRA
 1U

	)

172 
	#ARM_MPU_CACHEP_WT_NWA
 2U

	)

177 
	#ARM_MPU_CACHEP_WB_NWA
 3U

	)

184 
uöt32_t
 
	mRBAR
;

185 
uöt32_t
 
	mRASR
;

186 } 
	tARM_MPU_Regi⁄_t
;

191 
__STATIC_INLINE
 
	$ARM_MPU_E«bÀ
(
uöt32_t
 
MPU_C⁄åﬁ
)

193 
MPU
->
CTRL
 = 
MPU_C⁄åﬁ
 | 
MPU_CTRL_ENABLE_Msk
;

194 #ifde‡
SCB_SHCSR_MEMFAULTENA_Msk


195 
SCB
->
SHCSR
 |
SCB_SHCSR_MEMFAULTENA_Msk
;

197 
	`__DSB
();

198 
	`__ISB
();

199 
	}
}

203 
__STATIC_INLINE
 
	$ARM_MPU_DißbÀ
()

205 
	`__DMB
();

206 #ifde‡
SCB_SHCSR_MEMFAULTENA_Msk


207 
SCB
->
SHCSR
 &~
SCB_SHCSR_MEMFAULTENA_Msk
;

209 
MPU
->
CTRL
 &~
MPU_CTRL_ENABLE_Msk
;

210 
	}
}

215 
__STATIC_INLINE
 
	$ARM_MPU_CÃRegi⁄
(
uöt32_t
 
∫r
)

217 
MPU
->
RNR
 = 
∫r
;

218 
MPU
->
RASR
 = 0U;

219 
	}
}

225 
__STATIC_INLINE
 
	$ARM_MPU_SëRegi⁄
(
uöt32_t
 
rb¨
, uöt32_à
ø§
)

227 
MPU
->
RBAR
 = 
rb¨
;

228 
MPU
->
RASR
 = 
ø§
;

229 
	}
}

236 
__STATIC_INLINE
 
	$ARM_MPU_SëRegi⁄Ex
(
uöt32_t
 
∫r
, uöt32_à
rb¨
, uöt32_à
ø§
)

238 
MPU
->
RNR
 = 
∫r
;

239 
MPU
->
RBAR
 = 
rb¨
;

240 
MPU
->
RASR
 = 
ø§
;

241 
	}
}

248 
__STATIC_INLINE
 
	$ARM_MPU_OrdîedMem˝y
(vﬁ©ûê
uöt32_t
* 
d°
, c⁄° uöt32_t* 
__RESTRICT
 
§c
, uöt32_à
Àn
)

250 
uöt32_t
 
i
;

251 
i
 = 0U; i < 
Àn
; ++i)

253 
d°
[
i
] = 
§c
[i];

255 
	}
}

261 
__STATIC_INLINE
 
	$ARM_MPU_Lﬂd
(
ARM_MPU_Regi⁄_t
 c⁄°* 
èbÀ
, 
uöt32_t
 
˙t
)

263 c⁄° 
uöt32_t
 
rowW‹dSize
 = (
ARM_MPU_Regi⁄_t
)/4U;

264 
˙t
 > 
MPU_TYPE_RALIASES
) {

265 
	`ARM_MPU_OrdîedMem˝y
(&(
MPU
->
RBAR
), &(
èbÀ
->RBAR), 
MPU_TYPE_RALIASES
*
rowW‹dSize
);

266 
èbÀ
 +
MPU_TYPE_RALIASES
;

267 
˙t
 -
MPU_TYPE_RALIASES
;

269 
	`ARM_MPU_OrdîedMem˝y
(&(
MPU
->
RBAR
), &(
èbÀ
->RBAR), 
˙t
*
rowW‹dSize
);

270 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\cmsis\mpu_armv8.h

25 #i‡ 
deföed
 ( 
__ICCARM__
 )

26 #¥agm®
sy°em_ö˛ude


27 #ñi‡
deföed
 (
__˛™g__
)

28 #¥agm®
˛™g
 
sy°em_hódî


31 #i‚de‡
ARM_MPU_ARMV8_H


32 
	#ARM_MPU_ARMV8_H


	)

35 
	#ARM_MPU_ATTR_DEVICE
 ( 0U )

	)

38 
	#ARM_MPU_ATTR_NON_CACHEABLE
 ( 4U )

	)

46 
	#ARM_MPU_ATTR_MEMORY_
(
NT
, 
WB
, 
RA
, 
WA
) \

47 (((
NT
 & 1UË<< 3UË| ((
WB
 & 1UË<< 2UË| ((
RA
 & 1UË<< 1UË| (
WA
 & 1U))

	)

50 
	#ARM_MPU_ATTR_DEVICE_nGnRnE
 (0U)

	)

53 
	#ARM_MPU_ATTR_DEVICE_nGnRE
 (1U)

	)

56 
	#ARM_MPU_ATTR_DEVICE_nGRE
 (2U)

	)

59 
	#ARM_MPU_ATTR_DEVICE_GRE
 (3U)

	)

65 
	#ARM_MPU_ATTR
(
O
, 
I
Ë(((O & 0xFUË<< 4UË| (((O & 0xFUË!0UË? (I & 0xFUË: ((I & 0x3UË<< 2U)))

	)

68 
	#ARM_MPU_SH_NON
 (0U)

	)

71 
	#ARM_MPU_SH_OUTER
 (2U)

	)

74 
	#ARM_MPU_SH_INNER
 (3U)

	)

80 
	#ARM_MPU_AP_
(
RO
, 
NP
Ë(((RO & 1UË<< 1UË| (NP & 1U))

	)

89 
	#ARM_MPU_RBAR
(
BASE
, 
SH
, 
RO
, 
NP
, 
XN
) \

90 ((
BASE
 & 
MPU_RBAR_BASE_Msk
) | \

91 ((
SH
 << 
MPU_RBAR_SH_Pos
Ë& 
MPU_RBAR_SH_Msk
) | \

92 ((
	`ARM_MPU_AP_
(
RO
, 
NP
Ë<< 
MPU_RBAR_AP_Pos
Ë& 
MPU_RBAR_AP_Msk
) | \

93 ((
XN
 << 
MPU_RBAR_XN_Pos
Ë& 
MPU_RBAR_XN_Msk
))

	)

99 
	#ARM_MPU_RLAR
(
LIMIT
, 
IDX
) \

100 ((
LIMIT
 & 
MPU_RLAR_LIMIT_Msk
) | \

101 ((
IDX
 << 
MPU_RLAR_AârIndx_Pos
Ë& 
MPU_RLAR_AârIndx_Msk
) | \

102 (
MPU_RLAR_EN_Msk
))

	)

104 #i‡
deföed
(
MPU_RLAR_PXN_Pos
)

111 
	#ARM_MPU_RLAR_PXN
(
LIMIT
, 
PXN
, 
IDX
) \

112 ((
LIMIT
 & 
MPU_RLAR_LIMIT_Msk
) | \

113 ((
PXN
 << 
MPU_RLAR_PXN_Pos
Ë& 
MPU_RLAR_PXN_Msk
) | \

114 ((
IDX
 << 
MPU_RLAR_AârIndx_Pos
Ë& 
MPU_RLAR_AârIndx_Msk
) | \

115 (
MPU_RLAR_EN_Msk
))

	)

123 
uöt32_t
 
	mRBAR
;

124 
uöt32_t
 
	mRLAR
;

125 } 
	tARM_MPU_Regi⁄_t
;

130 
__STATIC_INLINE
 
	$ARM_MPU_E«bÀ
(
uöt32_t
 
MPU_C⁄åﬁ
)

132 
MPU
->
CTRL
 = 
MPU_C⁄åﬁ
 | 
MPU_CTRL_ENABLE_Msk
;

133 #ifde‡
SCB_SHCSR_MEMFAULTENA_Msk


134 
SCB
->
SHCSR
 |
SCB_SHCSR_MEMFAULTENA_Msk
;

136 
	`__DSB
();

137 
	`__ISB
();

138 
	}
}

142 
__STATIC_INLINE
 
	$ARM_MPU_DißbÀ
()

144 
	`__DMB
();

145 #ifde‡
SCB_SHCSR_MEMFAULTENA_Msk


146 
SCB
->
SHCSR
 &~
SCB_SHCSR_MEMFAULTENA_Msk
;

148 
MPU
->
CTRL
 &~
MPU_CTRL_ENABLE_Msk
;

149 
	}
}

151 #ifde‡
MPU_NS


155 
__STATIC_INLINE
 
	$ARM_MPU_E«bÀ_NS
(
uöt32_t
 
MPU_C⁄åﬁ
)

157 
MPU_NS
->
CTRL
 = 
MPU_C⁄åﬁ
 | 
MPU_CTRL_ENABLE_Msk
;

158 #ifde‡
SCB_SHCSR_MEMFAULTENA_Msk


159 
SCB_NS
->
SHCSR
 |
SCB_SHCSR_MEMFAULTENA_Msk
;

161 
	`__DSB
();

162 
	`__ISB
();

163 
	}
}

167 
__STATIC_INLINE
 
	$ARM_MPU_DißbÀ_NS
()

169 
	`__DMB
();

170 #ifde‡
SCB_SHCSR_MEMFAULTENA_Msk


171 
SCB_NS
->
SHCSR
 &~
SCB_SHCSR_MEMFAULTENA_Msk
;

173 
MPU_NS
->
CTRL
 &~
MPU_CTRL_ENABLE_Msk
;

174 
	}
}

182 
__STATIC_INLINE
 
	$ARM_MPU_SëMemAârEx
(
MPU_Ty≥
* 
mpu
, 
uöt8_t
 
idx
, uöt8_à
©å
)

184 c⁄° 
uöt8_t
 
ªg
 = 
idx
 / 4U;

185 c⁄° 
uöt32_t
 
pos
 = ((
idx
 % 4U) * 8U);

186 c⁄° 
uöt32_t
 
mask
 = 0xFFU << 
pos
;

188 i‡(
ªg
 >((
mpu
->
MAIR
) / (mpu->MAIR[0]))) {

192 
mpu
->
MAIR
[
ªg
] = ((mpu->MAIR[ªg] & ~
mask
Ë| ((
©å
 << 
pos
) & mask));

193 
	}
}

199 
__STATIC_INLINE
 
	$ARM_MPU_SëMemAâr
(
uöt8_t
 
idx
, uöt8_à
©å
)

201 
	`ARM_MPU_SëMemAârEx
(
MPU
, 
idx
, 
©å
);

202 
	}
}

204 #ifde‡
MPU_NS


209 
__STATIC_INLINE
 
	$ARM_MPU_SëMemAâr_NS
(
uöt8_t
 
idx
, uöt8_à
©å
)

211 
	`ARM_MPU_SëMemAârEx
(
MPU_NS
, 
idx
, 
©å
);

212 
	}
}

219 
__STATIC_INLINE
 
	$ARM_MPU_CÃRegi⁄Ex
(
MPU_Ty≥
* 
mpu
, 
uöt32_t
 
∫r
)

221 
mpu
->
RNR
 = 
∫r
;

222 
mpu
->
RLAR
 = 0U;

223 
	}
}

228 
__STATIC_INLINE
 
	$ARM_MPU_CÃRegi⁄
(
uöt32_t
 
∫r
)

230 
	`ARM_MPU_CÃRegi⁄Ex
(
MPU
, 
∫r
);

231 
	}
}

233 #ifde‡
MPU_NS


237 
__STATIC_INLINE
 
	$ARM_MPU_CÃRegi⁄_NS
(
uöt32_t
 
∫r
)

239 
	`ARM_MPU_CÃRegi⁄Ex
(
MPU_NS
, 
∫r
);

240 
	}
}

249 
__STATIC_INLINE
 
	$ARM_MPU_SëRegi⁄Ex
(
MPU_Ty≥
* 
mpu
, 
uöt32_t
 
∫r
, uöt32_à
rb¨
, uöt32_à
æ¨
)

251 
mpu
->
RNR
 = 
∫r
;

252 
mpu
->
RBAR
 = 
rb¨
;

253 
mpu
->
RLAR
 = 
æ¨
;

254 
	}
}

261 
__STATIC_INLINE
 
	$ARM_MPU_SëRegi⁄
(
uöt32_t
 
∫r
, uöt32_à
rb¨
, uöt32_à
æ¨
)

263 
	`ARM_MPU_SëRegi⁄Ex
(
MPU
, 
∫r
, 
rb¨
, 
æ¨
);

264 
	}
}

266 #ifde‡
MPU_NS


272 
__STATIC_INLINE
 
	$ARM_MPU_SëRegi⁄_NS
(
uöt32_t
 
∫r
, uöt32_à
rb¨
, uöt32_à
æ¨
)

274 
	`ARM_MPU_SëRegi⁄Ex
(
MPU_NS
, 
∫r
, 
rb¨
, 
æ¨
);

275 
	}
}

283 
__STATIC_INLINE
 
	$ARM_MPU_OrdîedMem˝y
(vﬁ©ûê
uöt32_t
* 
d°
, c⁄° uöt32_t* 
__RESTRICT
 
§c
, uöt32_à
Àn
)

285 
uöt32_t
 
i
;

286 
i
 = 0U; i < 
Àn
; ++i)

288 
d°
[
i
] = 
§c
[i];

290 
	}
}

298 
__STATIC_INLINE
 
	$ARM_MPU_LﬂdEx
(
MPU_Ty≥
* 
mpu
, 
uöt32_t
 
∫r
, 
ARM_MPU_Regi⁄_t
 c⁄°* 
èbÀ
, uöt32_à
˙t
)

300 c⁄° 
uöt32_t
 
rowW‹dSize
 = (
ARM_MPU_Regi⁄_t
)/4U;

301 i‡(
˙t
 == 1U) {

302 
mpu
->
RNR
 = 
∫r
;

303 
	`ARM_MPU_OrdîedMem˝y
(&(
mpu
->
RBAR
), &(
èbÀ
->RBAR), 
rowW‹dSize
);

305 
uöt32_t
 
∫rBa£
 = 
∫r
 & ~(
MPU_TYPE_RALIASES
-1U);

306 
uöt32_t
 
∫rOff£t
 = 
∫r
 % 
MPU_TYPE_RALIASES
;

308 
mpu
->
RNR
 = 
∫rBa£
;

309 (
∫rOff£t
 + 
˙t
Ë> 
MPU_TYPE_RALIASES
) {

310 
uöt32_t
 
c
 = 
MPU_TYPE_RALIASES
 - 
∫rOff£t
;

311 
	`ARM_MPU_OrdîedMem˝y
(&(
mpu
->
RBAR
)+(
∫rOff£t
*2U), &(
èbÀ
->RBAR), 
c
*
rowW‹dSize
);

312 
èbÀ
 +
c
;

313 
˙t
 -
c
;

314 
∫rOff£t
 = 0U;

315 
∫rBa£
 +
MPU_TYPE_RALIASES
;

316 
mpu
->
RNR
 = 
∫rBa£
;

319 
	`ARM_MPU_OrdîedMem˝y
(&(
mpu
->
RBAR
)+(
∫rOff£t
*2U), &(
èbÀ
->RBAR), 
˙t
*
rowW‹dSize
);

321 
	}
}

328 
__STATIC_INLINE
 
	$ARM_MPU_Lﬂd
(
uöt32_t
 
∫r
, 
ARM_MPU_Regi⁄_t
 c⁄°* 
èbÀ
, uöt32_à
˙t
)

330 
	`ARM_MPU_LﬂdEx
(
MPU
, 
∫r
, 
èbÀ
, 
˙t
);

331 
	}
}

333 #ifde‡
MPU_NS


339 
__STATIC_INLINE
 
	$ARM_MPU_Lﬂd_NS
(
uöt32_t
 
∫r
, 
ARM_MPU_Regi⁄_t
 c⁄°* 
èbÀ
, uöt32_à
˙t
)

341 
	`ARM_MPU_LﬂdEx
(
MPU_NS
, 
∫r
, 
èbÀ
, 
˙t
);

342 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\cmsis\tz_context.h

25 #i‡ 
deföed
 ( 
__ICCARM__
 )

26 #¥agm®
sy°em_ö˛ude


27 #ñi‡
deföed
 (
__˛™g__
)

28 #¥agm®
˛™g
 
sy°em_hódî


31 #i‚de‡
TZ_CONTEXT_H


32 
	#TZ_CONTEXT_H


	)

34 
	~<°döt.h
>

36 #i‚de‡
TZ_MODULEID_T


37 
	#TZ_MODULEID_T


	)

39 
uöt32_t
 
	tTZ_ModuÀId_t
;

43 
uöt32_t
 
	tTZ_Mem‹yId_t
;

47 
uöt32_t
 
TZ_InôC⁄ãxtSy°em_S
 ();

53 
TZ_Mem‹yId_t
 
TZ_AŒocModuÀC⁄ãxt_S
 (
TZ_ModuÀId_t
 
moduÀ
);

58 
uöt32_t
 
TZ_FªeModuÀC⁄ãxt_S
 (
TZ_Mem‹yId_t
 
id
);

63 
uöt32_t
 
TZ_LﬂdC⁄ãxt_S
 (
TZ_Mem‹yId_t
 
id
);

68 
uöt32_t
 
TZ_St‹eC⁄ãxt_S
 (
TZ_Mem‹yId_t
 
id
);

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\inc\stm32f103xb.h

37 #i‚de‡
__STM32F103xB_H


38 
	#__STM32F103xB_H


	)

40 #ifde‡
__˝lu•lus


50 
	#__CM3_REV
 0x0200U

	)

51 
	#__MPU_PRESENT
 0U

	)

52 
	#__NVIC_PRIO_BITS
 4U

	)

53 
	#__Víd‹_SysTickC⁄fig
 0U

	)

72 
N⁄MaskabÀI¡_IRQn
 = -14,

73 
H¨dFau…_IRQn
 = -13,

74 
Mem‹yM™agemít_IRQn
 = -12,

75 
BusFau…_IRQn
 = -11,

76 
UßgeFau…_IRQn
 = -10,

77 
SVCÆl_IRQn
 = -5,

78 
DebugM⁄ô‹_IRQn
 = -4,

79 
PídSV_IRQn
 = -2,

80 
SysTick_IRQn
 = -1,

83 
WWDG_IRQn
 = 0,

84 
PVD_IRQn
 = 1,

85 
TAMPER_IRQn
 = 2,

86 
RTC_IRQn
 = 3,

87 
FLASH_IRQn
 = 4,

88 
RCC_IRQn
 = 5,

89 
EXTI0_IRQn
 = 6,

90 
EXTI1_IRQn
 = 7,

91 
EXTI2_IRQn
 = 8,

92 
EXTI3_IRQn
 = 9,

93 
EXTI4_IRQn
 = 10,

94 
DMA1_Ch™√l1_IRQn
 = 11,

95 
DMA1_Ch™√l2_IRQn
 = 12,

96 
DMA1_Ch™√l3_IRQn
 = 13,

97 
DMA1_Ch™√l4_IRQn
 = 14,

98 
DMA1_Ch™√l5_IRQn
 = 15,

99 
DMA1_Ch™√l6_IRQn
 = 16,

100 
DMA1_Ch™√l7_IRQn
 = 17,

101 
ADC1_2_IRQn
 = 18,

102 
USB_HP_CAN1_TX_IRQn
 = 19,

103 
USB_LP_CAN1_RX0_IRQn
 = 20,

104 
CAN1_RX1_IRQn
 = 21,

105 
CAN1_SCE_IRQn
 = 22,

106 
EXTI9_5_IRQn
 = 23,

107 
TIM1_BRK_IRQn
 = 24,

108 
TIM1_UP_IRQn
 = 25,

109 
TIM1_TRG_COM_IRQn
 = 26,

110 
TIM1_CC_IRQn
 = 27,

111 
TIM2_IRQn
 = 28,

112 
TIM3_IRQn
 = 29,

113 
TIM4_IRQn
 = 30,

114 
I2C1_EV_IRQn
 = 31,

115 
I2C1_ER_IRQn
 = 32,

116 
I2C2_EV_IRQn
 = 33,

117 
I2C2_ER_IRQn
 = 34,

118 
SPI1_IRQn
 = 35,

119 
SPI2_IRQn
 = 36,

120 
USART1_IRQn
 = 37,

121 
USART2_IRQn
 = 38,

122 
USART3_IRQn
 = 39,

123 
EXTI15_10_IRQn
 = 40,

124 
RTC_Aœrm_IRQn
 = 41,

125 
USBWakeUp_IRQn
 = 42,

126 } 
	tIRQn_Ty≥
;

132 
	~"c‹e_cm3.h
"

133 
	~"sy°em_°m32f1xx.h
"

134 
	~<°döt.h
>

146 
__IO
 
uöt32_t
 
SR
;

147 
__IO
 
uöt32_t
 
CR1
;

148 
__IO
 
uöt32_t
 
CR2
;

149 
__IO
 
uöt32_t
 
SMPR1
;

150 
__IO
 
uöt32_t
 
SMPR2
;

151 
__IO
 
uöt32_t
 
JOFR1
;

152 
__IO
 
uöt32_t
 
JOFR2
;

153 
__IO
 
uöt32_t
 
JOFR3
;

154 
__IO
 
uöt32_t
 
JOFR4
;

155 
__IO
 
uöt32_t
 
HTR
;

156 
__IO
 
uöt32_t
 
LTR
;

157 
__IO
 
uöt32_t
 
SQR1
;

158 
__IO
 
uöt32_t
 
SQR2
;

159 
__IO
 
uöt32_t
 
SQR3
;

160 
__IO
 
uöt32_t
 
JSQR
;

161 
__IO
 
uöt32_t
 
JDR1
;

162 
__IO
 
uöt32_t
 
JDR2
;

163 
__IO
 
uöt32_t
 
JDR3
;

164 
__IO
 
uöt32_t
 
JDR4
;

165 
__IO
 
uöt32_t
 
DR
;

166 } 
	tADC_Ty≥Def
;

170 
__IO
 
uöt32_t
 
SR
;

171 
__IO
 
uöt32_t
 
CR1
;

172 
__IO
 
uöt32_t
 
CR2
;

173 
uöt32_t
 
RESERVED
[16];

174 
__IO
 
uöt32_t
 
DR
;

175 } 
	tADC_Comm⁄_Ty≥Def
;

183 
uöt32_t
 
RESERVED0
;

184 
__IO
 
uöt32_t
 
DR1
;

185 
__IO
 
uöt32_t
 
DR2
;

186 
__IO
 
uöt32_t
 
DR3
;

187 
__IO
 
uöt32_t
 
DR4
;

188 
__IO
 
uöt32_t
 
DR5
;

189 
__IO
 
uöt32_t
 
DR6
;

190 
__IO
 
uöt32_t
 
DR7
;

191 
__IO
 
uöt32_t
 
DR8
;

192 
__IO
 
uöt32_t
 
DR9
;

193 
__IO
 
uöt32_t
 
DR10
;

194 
__IO
 
uöt32_t
 
RTCCR
;

195 
__IO
 
uöt32_t
 
CR
;

196 
__IO
 
uöt32_t
 
CSR
;

197 } 
	tBKP_Ty≥Def
;

205 
__IO
 
uöt32_t
 
TIR
;

206 
__IO
 
uöt32_t
 
TDTR
;

207 
__IO
 
uöt32_t
 
TDLR
;

208 
__IO
 
uöt32_t
 
TDHR
;

209 } 
	tCAN_TxMaûBox_Ty≥Def
;

217 
__IO
 
uöt32_t
 
RIR
;

218 
__IO
 
uöt32_t
 
RDTR
;

219 
__IO
 
uöt32_t
 
RDLR
;

220 
__IO
 
uöt32_t
 
RDHR
;

221 } 
	tCAN_FIFOMaûBox_Ty≥Def
;

229 
__IO
 
uöt32_t
 
FR1
;

230 
__IO
 
uöt32_t
 
FR2
;

231 } 
	tCAN_FûãrRegi°î_Ty≥Def
;

239 
__IO
 
uöt32_t
 
MCR
;

240 
__IO
 
uöt32_t
 
MSR
;

241 
__IO
 
uöt32_t
 
TSR
;

242 
__IO
 
uöt32_t
 
RF0R
;

243 
__IO
 
uöt32_t
 
RF1R
;

244 
__IO
 
uöt32_t
 
IER
;

245 
__IO
 
uöt32_t
 
ESR
;

246 
__IO
 
uöt32_t
 
BTR
;

247 
uöt32_t
 
RESERVED0
[88];

248 
CAN_TxMaûBox_Ty≥Def
 
sTxMaûBox
[3];

249 
CAN_FIFOMaûBox_Ty≥Def
 
sFIFOMaûBox
[2];

250 
uöt32_t
 
RESERVED1
[12];

251 
__IO
 
uöt32_t
 
FMR
;

252 
__IO
 
uöt32_t
 
FM1R
;

253 
uöt32_t
 
RESERVED2
;

254 
__IO
 
uöt32_t
 
FS1R
;

255 
uöt32_t
 
RESERVED3
;

256 
__IO
 
uöt32_t
 
FFA1R
;

257 
uöt32_t
 
RESERVED4
;

258 
__IO
 
uöt32_t
 
FA1R
;

259 
uöt32_t
 
RESERVED5
[8];

260 
CAN_FûãrRegi°î_Ty≥Def
 
sFûãrRegi°î
[14];

261 } 
	tCAN_Ty≥Def
;

269 
__IO
 
uöt32_t
 
DR
;

270 
__IO
 
uöt8_t
 
IDR
;

271 
uöt8_t
 
RESERVED0
;

272 
uöt16_t
 
RESERVED1
;

273 
__IO
 
uöt32_t
 
CR
;

274 } 
	tCRC_Ty≥Def
;

283 
__IO
 
uöt32_t
 
IDCODE
;

284 
__IO
 
uöt32_t
 
CR
;

285 }
	tDBGMCU_Ty≥Def
;

293 
__IO
 
uöt32_t
 
CCR
;

294 
__IO
 
uöt32_t
 
CNDTR
;

295 
__IO
 
uöt32_t
 
CPAR
;

296 
__IO
 
uöt32_t
 
CMAR
;

297 } 
	tDMA_Ch™√l_Ty≥Def
;

301 
__IO
 
uöt32_t
 
ISR
;

302 
__IO
 
uöt32_t
 
IFCR
;

303 } 
	tDMA_Ty≥Def
;

313 
__IO
 
uöt32_t
 
IMR
;

314 
__IO
 
uöt32_t
 
EMR
;

315 
__IO
 
uöt32_t
 
RTSR
;

316 
__IO
 
uöt32_t
 
FTSR
;

317 
__IO
 
uöt32_t
 
SWIER
;

318 
__IO
 
uöt32_t
 
PR
;

319 } 
	tEXTI_Ty≥Def
;

327 
__IO
 
uöt32_t
 
ACR
;

328 
__IO
 
uöt32_t
 
KEYR
;

329 
__IO
 
uöt32_t
 
OPTKEYR
;

330 
__IO
 
uöt32_t
 
SR
;

331 
__IO
 
uöt32_t
 
CR
;

332 
__IO
 
uöt32_t
 
AR
;

333 
__IO
 
uöt32_t
 
RESERVED
;

334 
__IO
 
uöt32_t
 
OBR
;

335 
__IO
 
uöt32_t
 
WRPR
;

336 } 
	tFLASH_Ty≥Def
;

344 
__IO
 
uöt16_t
 
RDP
;

345 
__IO
 
uöt16_t
 
USER
;

346 
__IO
 
uöt16_t
 
D©a0
;

347 
__IO
 
uöt16_t
 
D©a1
;

348 
__IO
 
uöt16_t
 
WRP0
;

349 
__IO
 
uöt16_t
 
WRP1
;

350 
__IO
 
uöt16_t
 
WRP2
;

351 
__IO
 
uöt16_t
 
WRP3
;

352 } 
	tOB_Ty≥Def
;

360 
__IO
 
uöt32_t
 
CRL
;

361 
__IO
 
uöt32_t
 
CRH
;

362 
__IO
 
uöt32_t
 
IDR
;

363 
__IO
 
uöt32_t
 
ODR
;

364 
__IO
 
uöt32_t
 
BSRR
;

365 
__IO
 
uöt32_t
 
BRR
;

366 
__IO
 
uöt32_t
 
LCKR
;

367 } 
	tGPIO_Ty≥Def
;

375 
__IO
 
uöt32_t
 
EVCR
;

376 
__IO
 
uöt32_t
 
MAPR
;

377 
__IO
 
uöt32_t
 
EXTICR
[4];

378 
uöt32_t
 
RESERVED0
;

379 
__IO
 
uöt32_t
 
MAPR2
;

380 } 
	tAFIO_Ty≥Def
;

387 
__IO
 
uöt32_t
 
CR1
;

388 
__IO
 
uöt32_t
 
CR2
;

389 
__IO
 
uöt32_t
 
OAR1
;

390 
__IO
 
uöt32_t
 
OAR2
;

391 
__IO
 
uöt32_t
 
DR
;

392 
__IO
 
uöt32_t
 
SR1
;

393 
__IO
 
uöt32_t
 
SR2
;

394 
__IO
 
uöt32_t
 
CCR
;

395 
__IO
 
uöt32_t
 
TRISE
;

396 } 
	tI2C_Ty≥Def
;

404 
__IO
 
uöt32_t
 
KR
;

405 
__IO
 
uöt32_t
 
PR
;

406 
__IO
 
uöt32_t
 
RLR
;

407 
__IO
 
uöt32_t
 
SR
;

408 } 
	tIWDG_Ty≥Def
;

416 
__IO
 
uöt32_t
 
CR
;

417 
__IO
 
uöt32_t
 
CSR
;

418 } 
	tPWR_Ty≥Def
;

426 
__IO
 
uöt32_t
 
CR
;

427 
__IO
 
uöt32_t
 
CFGR
;

428 
__IO
 
uöt32_t
 
CIR
;

429 
__IO
 
uöt32_t
 
APB2RSTR
;

430 
__IO
 
uöt32_t
 
APB1RSTR
;

431 
__IO
 
uöt32_t
 
AHBENR
;

432 
__IO
 
uöt32_t
 
APB2ENR
;

433 
__IO
 
uöt32_t
 
APB1ENR
;

434 
__IO
 
uöt32_t
 
BDCR
;

435 
__IO
 
uöt32_t
 
CSR
;

438 } 
	tRCC_Ty≥Def
;

446 
__IO
 
uöt32_t
 
CRH
;

447 
__IO
 
uöt32_t
 
CRL
;

448 
__IO
 
uöt32_t
 
PRLH
;

449 
__IO
 
uöt32_t
 
PRLL
;

450 
__IO
 
uöt32_t
 
DIVH
;

451 
__IO
 
uöt32_t
 
DIVL
;

452 
__IO
 
uöt32_t
 
CNTH
;

453 
__IO
 
uöt32_t
 
CNTL
;

454 
__IO
 
uöt32_t
 
ALRH
;

455 
__IO
 
uöt32_t
 
ALRL
;

456 } 
	tRTC_Ty≥Def
;

464 
__IO
 
uöt32_t
 
CR1
;

465 
__IO
 
uöt32_t
 
CR2
;

466 
__IO
 
uöt32_t
 
SR
;

467 
__IO
 
uöt32_t
 
DR
;

468 
__IO
 
uöt32_t
 
CRCPR
;

469 
__IO
 
uöt32_t
 
RXCRCR
;

470 
__IO
 
uöt32_t
 
TXCRCR
;

471 
__IO
 
uöt32_t
 
I2SCFGR
;

472 } 
	tSPI_Ty≥Def
;

479 
__IO
 
uöt32_t
 
CR1
;

480 
__IO
 
uöt32_t
 
CR2
;

481 
__IO
 
uöt32_t
 
SMCR
;

482 
__IO
 
uöt32_t
 
DIER
;

483 
__IO
 
uöt32_t
 
SR
;

484 
__IO
 
uöt32_t
 
EGR
;

485 
__IO
 
uöt32_t
 
CCMR1
;

486 
__IO
 
uöt32_t
 
CCMR2
;

487 
__IO
 
uöt32_t
 
CCER
;

488 
__IO
 
uöt32_t
 
CNT
;

489 
__IO
 
uöt32_t
 
PSC
;

490 
__IO
 
uöt32_t
 
ARR
;

491 
__IO
 
uöt32_t
 
RCR
;

492 
__IO
 
uöt32_t
 
CCR1
;

493 
__IO
 
uöt32_t
 
CCR2
;

494 
__IO
 
uöt32_t
 
CCR3
;

495 
__IO
 
uöt32_t
 
CCR4
;

496 
__IO
 
uöt32_t
 
BDTR
;

497 
__IO
 
uöt32_t
 
DCR
;

498 
__IO
 
uöt32_t
 
DMAR
;

499 
__IO
 
uöt32_t
 
OR
;

500 }
	tTIM_Ty≥Def
;

509 
__IO
 
uöt32_t
 
SR
;

510 
__IO
 
uöt32_t
 
DR
;

511 
__IO
 
uöt32_t
 
BRR
;

512 
__IO
 
uöt32_t
 
CR1
;

513 
__IO
 
uöt32_t
 
CR2
;

514 
__IO
 
uöt32_t
 
CR3
;

515 
__IO
 
uöt32_t
 
GTPR
;

516 } 
	tUSART_Ty≥Def
;

524 
__IO
 
uöt16_t
 
EP0R
;

525 
__IO
 
uöt16_t
 
RESERVED0
;

526 
__IO
 
uöt16_t
 
EP1R
;

527 
__IO
 
uöt16_t
 
RESERVED1
;

528 
__IO
 
uöt16_t
 
EP2R
;

529 
__IO
 
uöt16_t
 
RESERVED2
;

530 
__IO
 
uöt16_t
 
EP3R
;

531 
__IO
 
uöt16_t
 
RESERVED3
;

532 
__IO
 
uöt16_t
 
EP4R
;

533 
__IO
 
uöt16_t
 
RESERVED4
;

534 
__IO
 
uöt16_t
 
EP5R
;

535 
__IO
 
uöt16_t
 
RESERVED5
;

536 
__IO
 
uöt16_t
 
EP6R
;

537 
__IO
 
uöt16_t
 
RESERVED6
;

538 
__IO
 
uöt16_t
 
EP7R
;

539 
__IO
 
uöt16_t
 
RESERVED7
[17];

540 
__IO
 
uöt16_t
 
CNTR
;

541 
__IO
 
uöt16_t
 
RESERVED8
;

542 
__IO
 
uöt16_t
 
ISTR
;

543 
__IO
 
uöt16_t
 
RESERVED9
;

544 
__IO
 
uöt16_t
 
FNR
;

545 
__IO
 
uöt16_t
 
RESERVEDA
;

546 
__IO
 
uöt16_t
 
DADDR
;

547 
__IO
 
uöt16_t
 
RESERVEDB
;

548 
__IO
 
uöt16_t
 
BTABLE
;

549 
__IO
 
uöt16_t
 
RESERVEDC
;

550 } 
	tUSB_Ty≥Def
;

559 
__IO
 
uöt32_t
 
CR
;

560 
__IO
 
uöt32_t
 
CFR
;

561 
__IO
 
uöt32_t
 
SR
;

562 } 
	tWWDG_Ty≥Def
;

573 
	#FLASH_BASE
 0x08000000UL

	)

574 
	#FLASH_BANK1_END
 0x0801FFFFUL

	)

575 
	#SRAM_BASE
 0x20000000UL

	)

576 
	#PERIPH_BASE
 0x40000000UL

	)

578 
	#SRAM_BB_BASE
 0x22000000UL

	)

579 
	#PERIPH_BB_BASE
 0x42000000UL

	)

583 
	#APB1PERIPH_BASE
 
PERIPH_BASE


	)

584 
	#APB2PERIPH_BASE
 (
PERIPH_BASE
 + 0x00010000UL)

	)

585 
	#AHBPERIPH_BASE
 (
PERIPH_BASE
 + 0x00020000UL)

	)

587 
	#TIM2_BASE
 (
APB1PERIPH_BASE
 + 0x00000000UL)

	)

588 
	#TIM3_BASE
 (
APB1PERIPH_BASE
 + 0x00000400UL)

	)

589 
	#TIM4_BASE
 (
APB1PERIPH_BASE
 + 0x00000800UL)

	)

590 
	#RTC_BASE
 (
APB1PERIPH_BASE
 + 0x00002800UL)

	)

591 
	#WWDG_BASE
 (
APB1PERIPH_BASE
 + 0x00002C00UL)

	)

592 
	#IWDG_BASE
 (
APB1PERIPH_BASE
 + 0x00003000UL)

	)

593 
	#SPI2_BASE
 (
APB1PERIPH_BASE
 + 0x00003800UL)

	)

594 
	#USART2_BASE
 (
APB1PERIPH_BASE
 + 0x00004400UL)

	)

595 
	#USART3_BASE
 (
APB1PERIPH_BASE
 + 0x00004800UL)

	)

596 
	#I2C1_BASE
 (
APB1PERIPH_BASE
 + 0x00005400UL)

	)

597 
	#I2C2_BASE
 (
APB1PERIPH_BASE
 + 0x00005800UL)

	)

598 
	#CAN1_BASE
 (
APB1PERIPH_BASE
 + 0x00006400UL)

	)

599 
	#BKP_BASE
 (
APB1PERIPH_BASE
 + 0x00006C00UL)

	)

600 
	#PWR_BASE
 (
APB1PERIPH_BASE
 + 0x00007000UL)

	)

601 
	#AFIO_BASE
 (
APB2PERIPH_BASE
 + 0x00000000UL)

	)

602 
	#EXTI_BASE
 (
APB2PERIPH_BASE
 + 0x00000400UL)

	)

603 
	#GPIOA_BASE
 (
APB2PERIPH_BASE
 + 0x00000800UL)

	)

604 
	#GPIOB_BASE
 (
APB2PERIPH_BASE
 + 0x00000C00UL)

	)

605 
	#GPIOC_BASE
 (
APB2PERIPH_BASE
 + 0x00001000UL)

	)

606 
	#GPIOD_BASE
 (
APB2PERIPH_BASE
 + 0x00001400UL)

	)

607 
	#GPIOE_BASE
 (
APB2PERIPH_BASE
 + 0x00001800UL)

	)

608 
	#ADC1_BASE
 (
APB2PERIPH_BASE
 + 0x00002400UL)

	)

609 
	#ADC2_BASE
 (
APB2PERIPH_BASE
 + 0x00002800UL)

	)

610 
	#TIM1_BASE
 (
APB2PERIPH_BASE
 + 0x00002C00UL)

	)

611 
	#SPI1_BASE
 (
APB2PERIPH_BASE
 + 0x00003000UL)

	)

612 
	#USART1_BASE
 (
APB2PERIPH_BASE
 + 0x00003800UL)

	)

615 
	#DMA1_BASE
 (
AHBPERIPH_BASE
 + 0x00000000UL)

	)

616 
	#DMA1_Ch™√l1_BASE
 (
AHBPERIPH_BASE
 + 0x00000008UL)

	)

617 
	#DMA1_Ch™√l2_BASE
 (
AHBPERIPH_BASE
 + 0x0000001CUL)

	)

618 
	#DMA1_Ch™√l3_BASE
 (
AHBPERIPH_BASE
 + 0x00000030UL)

	)

619 
	#DMA1_Ch™√l4_BASE
 (
AHBPERIPH_BASE
 + 0x00000044UL)

	)

620 
	#DMA1_Ch™√l5_BASE
 (
AHBPERIPH_BASE
 + 0x00000058UL)

	)

621 
	#DMA1_Ch™√l6_BASE
 (
AHBPERIPH_BASE
 + 0x0000006CUL)

	)

622 
	#DMA1_Ch™√l7_BASE
 (
AHBPERIPH_BASE
 + 0x00000080UL)

	)

623 
	#RCC_BASE
 (
AHBPERIPH_BASE
 + 0x00001000UL)

	)

624 
	#CRC_BASE
 (
AHBPERIPH_BASE
 + 0x00003000UL)

	)

626 
	#FLASH_R_BASE
 (
AHBPERIPH_BASE
 + 0x00002000ULË

	)

627 
	#FLASHSIZE_BASE
 0x1FFFF7E0UL

	)

628 
	#UID_BASE
 0x1FFFF7E8UL

	)

629 
	#OB_BASE
 0x1FFFF800UL

	)

633 
	#DBGMCU_BASE
 0xE0042000UL

	)

636 
	#USB_BASE
 (
APB1PERIPH_BASE
 + 0x00005C00ULË

	)

637 
	#USB_PMAADDR
 (
APB1PERIPH_BASE
 + 0x00006000ULË

	)

648 
	#TIM2
 ((
TIM_Ty≥Def
 *)
TIM2_BASE
)

	)

649 
	#TIM3
 ((
TIM_Ty≥Def
 *)
TIM3_BASE
)

	)

650 
	#TIM4
 ((
TIM_Ty≥Def
 *)
TIM4_BASE
)

	)

651 
	#RTC
 ((
RTC_Ty≥Def
 *)
RTC_BASE
)

	)

652 
	#WWDG
 ((
WWDG_Ty≥Def
 *)
WWDG_BASE
)

	)

653 
	#IWDG
 ((
IWDG_Ty≥Def
 *)
IWDG_BASE
)

	)

654 
	#SPI2
 ((
SPI_Ty≥Def
 *)
SPI2_BASE
)

	)

655 
	#USART2
 ((
USART_Ty≥Def
 *)
USART2_BASE
)

	)

656 
	#USART3
 ((
USART_Ty≥Def
 *)
USART3_BASE
)

	)

657 
	#I2C1
 ((
I2C_Ty≥Def
 *)
I2C1_BASE
)

	)

658 
	#I2C2
 ((
I2C_Ty≥Def
 *)
I2C2_BASE
)

	)

659 
	#USB
 ((
USB_Ty≥Def
 *)
USB_BASE
)

	)

660 
	#CAN1
 ((
CAN_Ty≥Def
 *)
CAN1_BASE
)

	)

661 
	#BKP
 ((
BKP_Ty≥Def
 *)
BKP_BASE
)

	)

662 
	#PWR
 ((
PWR_Ty≥Def
 *)
PWR_BASE
)

	)

663 
	#AFIO
 ((
AFIO_Ty≥Def
 *)
AFIO_BASE
)

	)

664 
	#EXTI
 ((
EXTI_Ty≥Def
 *)
EXTI_BASE
)

	)

665 
	#GPIOA
 ((
GPIO_Ty≥Def
 *)
GPIOA_BASE
)

	)

666 
	#GPIOB
 ((
GPIO_Ty≥Def
 *)
GPIOB_BASE
)

	)

667 
	#GPIOC
 ((
GPIO_Ty≥Def
 *)
GPIOC_BASE
)

	)

668 
	#GPIOD
 ((
GPIO_Ty≥Def
 *)
GPIOD_BASE
)

	)

669 
	#GPIOE
 ((
GPIO_Ty≥Def
 *)
GPIOE_BASE
)

	)

670 
	#ADC1
 ((
ADC_Ty≥Def
 *)
ADC1_BASE
)

	)

671 
	#ADC2
 ((
ADC_Ty≥Def
 *)
ADC2_BASE
)

	)

672 
	#ADC12_COMMON
 ((
ADC_Comm⁄_Ty≥Def
 *)
ADC1_BASE
)

	)

673 
	#TIM1
 ((
TIM_Ty≥Def
 *)
TIM1_BASE
)

	)

674 
	#SPI1
 ((
SPI_Ty≥Def
 *)
SPI1_BASE
)

	)

675 
	#USART1
 ((
USART_Ty≥Def
 *)
USART1_BASE
)

	)

676 
	#DMA1
 ((
DMA_Ty≥Def
 *)
DMA1_BASE
)

	)

677 
	#DMA1_Ch™√l1
 ((
DMA_Ch™√l_Ty≥Def
 *)
DMA1_Ch™√l1_BASE
)

	)

678 
	#DMA1_Ch™√l2
 ((
DMA_Ch™√l_Ty≥Def
 *)
DMA1_Ch™√l2_BASE
)

	)

679 
	#DMA1_Ch™√l3
 ((
DMA_Ch™√l_Ty≥Def
 *)
DMA1_Ch™√l3_BASE
)

	)

680 
	#DMA1_Ch™√l4
 ((
DMA_Ch™√l_Ty≥Def
 *)
DMA1_Ch™√l4_BASE
)

	)

681 
	#DMA1_Ch™√l5
 ((
DMA_Ch™√l_Ty≥Def
 *)
DMA1_Ch™√l5_BASE
)

	)

682 
	#DMA1_Ch™√l6
 ((
DMA_Ch™√l_Ty≥Def
 *)
DMA1_Ch™√l6_BASE
)

	)

683 
	#DMA1_Ch™√l7
 ((
DMA_Ch™√l_Ty≥Def
 *)
DMA1_Ch™√l7_BASE
)

	)

684 
	#RCC
 ((
RCC_Ty≥Def
 *)
RCC_BASE
)

	)

685 
	#CRC
 ((
CRC_Ty≥Def
 *)
CRC_BASE
)

	)

686 
	#FLASH
 ((
FLASH_Ty≥Def
 *)
FLASH_R_BASE
)

	)

687 
	#OB
 ((
OB_Ty≥Def
 *)
OB_BASE
)

	)

688 
	#DBGMCU
 ((
DBGMCU_Ty≥Def
 *)
DBGMCU_BASE
)

	)

714 
	#CRC_DR_DR_Pos
 (0U)

	)

715 
	#CRC_DR_DR_Msk
 (0xFFFFFFFFUL << 
CRC_DR_DR_Pos
Ë

	)

716 
	#CRC_DR_DR
 
CRC_DR_DR_Msk


	)

719 
	#CRC_IDR_IDR_Pos
 (0U)

	)

720 
	#CRC_IDR_IDR_Msk
 (0xFFUL << 
CRC_IDR_IDR_Pos
Ë

	)

721 
	#CRC_IDR_IDR
 
CRC_IDR_IDR_Msk


	)

724 
	#CRC_CR_RESET_Pos
 (0U)

	)

725 
	#CRC_CR_RESET_Msk
 (0x1UL << 
CRC_CR_RESET_Pos
Ë

	)

726 
	#CRC_CR_RESET
 
CRC_CR_RESET_Msk


	)

735 
	#PWR_CR_LPDS_Pos
 (0U)

	)

736 
	#PWR_CR_LPDS_Msk
 (0x1UL << 
PWR_CR_LPDS_Pos
Ë

	)

737 
	#PWR_CR_LPDS
 
PWR_CR_LPDS_Msk


	)

738 
	#PWR_CR_PDDS_Pos
 (1U)

	)

739 
	#PWR_CR_PDDS_Msk
 (0x1UL << 
PWR_CR_PDDS_Pos
Ë

	)

740 
	#PWR_CR_PDDS
 
PWR_CR_PDDS_Msk


	)

741 
	#PWR_CR_CWUF_Pos
 (2U)

	)

742 
	#PWR_CR_CWUF_Msk
 (0x1UL << 
PWR_CR_CWUF_Pos
Ë

	)

743 
	#PWR_CR_CWUF
 
PWR_CR_CWUF_Msk


	)

744 
	#PWR_CR_CSBF_Pos
 (3U)

	)

745 
	#PWR_CR_CSBF_Msk
 (0x1UL << 
PWR_CR_CSBF_Pos
Ë

	)

746 
	#PWR_CR_CSBF
 
PWR_CR_CSBF_Msk


	)

747 
	#PWR_CR_PVDE_Pos
 (4U)

	)

748 
	#PWR_CR_PVDE_Msk
 (0x1UL << 
PWR_CR_PVDE_Pos
Ë

	)

749 
	#PWR_CR_PVDE
 
PWR_CR_PVDE_Msk


	)

751 
	#PWR_CR_PLS_Pos
 (5U)

	)

752 
	#PWR_CR_PLS_Msk
 (0x7UL << 
PWR_CR_PLS_Pos
Ë

	)

753 
	#PWR_CR_PLS
 
PWR_CR_PLS_Msk


	)

754 
	#PWR_CR_PLS_0
 (0x1UL << 
PWR_CR_PLS_Pos
Ë

	)

755 
	#PWR_CR_PLS_1
 (0x2UL << 
PWR_CR_PLS_Pos
Ë

	)

756 
	#PWR_CR_PLS_2
 (0x4UL << 
PWR_CR_PLS_Pos
Ë

	)

759 
	#PWR_CR_PLS_LEV0
 0x00000000U

	)

760 
	#PWR_CR_PLS_LEV1
 0x00000020U

	)

761 
	#PWR_CR_PLS_LEV2
 0x00000040U

	)

762 
	#PWR_CR_PLS_LEV3
 0x00000060U

	)

763 
	#PWR_CR_PLS_LEV4
 0x00000080U

	)

764 
	#PWR_CR_PLS_LEV5
 0x000000A0U

	)

765 
	#PWR_CR_PLS_LEV6
 0x000000C0U

	)

766 
	#PWR_CR_PLS_LEV7
 0x000000E0U

	)

769 
	#PWR_CR_PLS_2V2
 
PWR_CR_PLS_LEV0


	)

770 
	#PWR_CR_PLS_2V3
 
PWR_CR_PLS_LEV1


	)

771 
	#PWR_CR_PLS_2V4
 
PWR_CR_PLS_LEV2


	)

772 
	#PWR_CR_PLS_2V5
 
PWR_CR_PLS_LEV3


	)

773 
	#PWR_CR_PLS_2V6
 
PWR_CR_PLS_LEV4


	)

774 
	#PWR_CR_PLS_2V7
 
PWR_CR_PLS_LEV5


	)

775 
	#PWR_CR_PLS_2V8
 
PWR_CR_PLS_LEV6


	)

776 
	#PWR_CR_PLS_2V9
 
PWR_CR_PLS_LEV7


	)

778 
	#PWR_CR_DBP_Pos
 (8U)

	)

779 
	#PWR_CR_DBP_Msk
 (0x1UL << 
PWR_CR_DBP_Pos
Ë

	)

780 
	#PWR_CR_DBP
 
PWR_CR_DBP_Msk


	)

784 
	#PWR_CSR_WUF_Pos
 (0U)

	)

785 
	#PWR_CSR_WUF_Msk
 (0x1UL << 
PWR_CSR_WUF_Pos
Ë

	)

786 
	#PWR_CSR_WUF
 
PWR_CSR_WUF_Msk


	)

787 
	#PWR_CSR_SBF_Pos
 (1U)

	)

788 
	#PWR_CSR_SBF_Msk
 (0x1UL << 
PWR_CSR_SBF_Pos
Ë

	)

789 
	#PWR_CSR_SBF
 
PWR_CSR_SBF_Msk


	)

790 
	#PWR_CSR_PVDO_Pos
 (2U)

	)

791 
	#PWR_CSR_PVDO_Msk
 (0x1UL << 
PWR_CSR_PVDO_Pos
Ë

	)

792 
	#PWR_CSR_PVDO
 
PWR_CSR_PVDO_Msk


	)

793 
	#PWR_CSR_EWUP_Pos
 (8U)

	)

794 
	#PWR_CSR_EWUP_Msk
 (0x1UL << 
PWR_CSR_EWUP_Pos
Ë

	)

795 
	#PWR_CSR_EWUP
 
PWR_CSR_EWUP_Msk


	)

804 
	#BKP_DR1_D_Pos
 (0U)

	)

805 
	#BKP_DR1_D_Msk
 (0xFFFFUL << 
BKP_DR1_D_Pos
Ë

	)

806 
	#BKP_DR1_D
 
BKP_DR1_D_Msk


	)

809 
	#BKP_DR2_D_Pos
 (0U)

	)

810 
	#BKP_DR2_D_Msk
 (0xFFFFUL << 
BKP_DR2_D_Pos
Ë

	)

811 
	#BKP_DR2_D
 
BKP_DR2_D_Msk


	)

814 
	#BKP_DR3_D_Pos
 (0U)

	)

815 
	#BKP_DR3_D_Msk
 (0xFFFFUL << 
BKP_DR3_D_Pos
Ë

	)

816 
	#BKP_DR3_D
 
BKP_DR3_D_Msk


	)

819 
	#BKP_DR4_D_Pos
 (0U)

	)

820 
	#BKP_DR4_D_Msk
 (0xFFFFUL << 
BKP_DR4_D_Pos
Ë

	)

821 
	#BKP_DR4_D
 
BKP_DR4_D_Msk


	)

824 
	#BKP_DR5_D_Pos
 (0U)

	)

825 
	#BKP_DR5_D_Msk
 (0xFFFFUL << 
BKP_DR5_D_Pos
Ë

	)

826 
	#BKP_DR5_D
 
BKP_DR5_D_Msk


	)

829 
	#BKP_DR6_D_Pos
 (0U)

	)

830 
	#BKP_DR6_D_Msk
 (0xFFFFUL << 
BKP_DR6_D_Pos
Ë

	)

831 
	#BKP_DR6_D
 
BKP_DR6_D_Msk


	)

834 
	#BKP_DR7_D_Pos
 (0U)

	)

835 
	#BKP_DR7_D_Msk
 (0xFFFFUL << 
BKP_DR7_D_Pos
Ë

	)

836 
	#BKP_DR7_D
 
BKP_DR7_D_Msk


	)

839 
	#BKP_DR8_D_Pos
 (0U)

	)

840 
	#BKP_DR8_D_Msk
 (0xFFFFUL << 
BKP_DR8_D_Pos
Ë

	)

841 
	#BKP_DR8_D
 
BKP_DR8_D_Msk


	)

844 
	#BKP_DR9_D_Pos
 (0U)

	)

845 
	#BKP_DR9_D_Msk
 (0xFFFFUL << 
BKP_DR9_D_Pos
Ë

	)

846 
	#BKP_DR9_D
 
BKP_DR9_D_Msk


	)

849 
	#BKP_DR10_D_Pos
 (0U)

	)

850 
	#BKP_DR10_D_Msk
 (0xFFFFUL << 
BKP_DR10_D_Pos
Ë

	)

851 
	#BKP_DR10_D
 
BKP_DR10_D_Msk


	)

853 
	#RTC_BKP_NUMBER
 10

	)

856 
	#BKP_RTCCR_CAL_Pos
 (0U)

	)

857 
	#BKP_RTCCR_CAL_Msk
 (0x7FUL << 
BKP_RTCCR_CAL_Pos
Ë

	)

858 
	#BKP_RTCCR_CAL
 
BKP_RTCCR_CAL_Msk


	)

859 
	#BKP_RTCCR_CCO_Pos
 (7U)

	)

860 
	#BKP_RTCCR_CCO_Msk
 (0x1UL << 
BKP_RTCCR_CCO_Pos
Ë

	)

861 
	#BKP_RTCCR_CCO
 
BKP_RTCCR_CCO_Msk


	)

862 
	#BKP_RTCCR_ASOE_Pos
 (8U)

	)

863 
	#BKP_RTCCR_ASOE_Msk
 (0x1UL << 
BKP_RTCCR_ASOE_Pos
Ë

	)

864 
	#BKP_RTCCR_ASOE
 
BKP_RTCCR_ASOE_Msk


	)

865 
	#BKP_RTCCR_ASOS_Pos
 (9U)

	)

866 
	#BKP_RTCCR_ASOS_Msk
 (0x1UL << 
BKP_RTCCR_ASOS_Pos
Ë

	)

867 
	#BKP_RTCCR_ASOS
 
BKP_RTCCR_ASOS_Msk


	)

870 
	#BKP_CR_TPE_Pos
 (0U)

	)

871 
	#BKP_CR_TPE_Msk
 (0x1UL << 
BKP_CR_TPE_Pos
Ë

	)

872 
	#BKP_CR_TPE
 
BKP_CR_TPE_Msk


	)

873 
	#BKP_CR_TPAL_Pos
 (1U)

	)

874 
	#BKP_CR_TPAL_Msk
 (0x1UL << 
BKP_CR_TPAL_Pos
Ë

	)

875 
	#BKP_CR_TPAL
 
BKP_CR_TPAL_Msk


	)

878 
	#BKP_CSR_CTE_Pos
 (0U)

	)

879 
	#BKP_CSR_CTE_Msk
 (0x1UL << 
BKP_CSR_CTE_Pos
Ë

	)

880 
	#BKP_CSR_CTE
 
BKP_CSR_CTE_Msk


	)

881 
	#BKP_CSR_CTI_Pos
 (1U)

	)

882 
	#BKP_CSR_CTI_Msk
 (0x1UL << 
BKP_CSR_CTI_Pos
Ë

	)

883 
	#BKP_CSR_CTI
 
BKP_CSR_CTI_Msk


	)

884 
	#BKP_CSR_TPIE_Pos
 (2U)

	)

885 
	#BKP_CSR_TPIE_Msk
 (0x1UL << 
BKP_CSR_TPIE_Pos
Ë

	)

886 
	#BKP_CSR_TPIE
 
BKP_CSR_TPIE_Msk


	)

887 
	#BKP_CSR_TEF_Pos
 (8U)

	)

888 
	#BKP_CSR_TEF_Msk
 (0x1UL << 
BKP_CSR_TEF_Pos
Ë

	)

889 
	#BKP_CSR_TEF
 
BKP_CSR_TEF_Msk


	)

890 
	#BKP_CSR_TIF_Pos
 (9U)

	)

891 
	#BKP_CSR_TIF_Msk
 (0x1UL << 
BKP_CSR_TIF_Pos
Ë

	)

892 
	#BKP_CSR_TIF
 
BKP_CSR_TIF_Msk


	)

901 
	#RCC_CR_HSION_Pos
 (0U)

	)

902 
	#RCC_CR_HSION_Msk
 (0x1UL << 
RCC_CR_HSION_Pos
Ë

	)

903 
	#RCC_CR_HSION
 
RCC_CR_HSION_Msk


	)

904 
	#RCC_CR_HSIRDY_Pos
 (1U)

	)

905 
	#RCC_CR_HSIRDY_Msk
 (0x1UL << 
RCC_CR_HSIRDY_Pos
Ë

	)

906 
	#RCC_CR_HSIRDY
 
RCC_CR_HSIRDY_Msk


	)

907 
	#RCC_CR_HSITRIM_Pos
 (3U)

	)

908 
	#RCC_CR_HSITRIM_Msk
 (0x1FUL << 
RCC_CR_HSITRIM_Pos
Ë

	)

909 
	#RCC_CR_HSITRIM
 
RCC_CR_HSITRIM_Msk


	)

910 
	#RCC_CR_HSICAL_Pos
 (8U)

	)

911 
	#RCC_CR_HSICAL_Msk
 (0xFFUL << 
RCC_CR_HSICAL_Pos
Ë

	)

912 
	#RCC_CR_HSICAL
 
RCC_CR_HSICAL_Msk


	)

913 
	#RCC_CR_HSEON_Pos
 (16U)

	)

914 
	#RCC_CR_HSEON_Msk
 (0x1UL << 
RCC_CR_HSEON_Pos
Ë

	)

915 
	#RCC_CR_HSEON
 
RCC_CR_HSEON_Msk


	)

916 
	#RCC_CR_HSERDY_Pos
 (17U)

	)

917 
	#RCC_CR_HSERDY_Msk
 (0x1UL << 
RCC_CR_HSERDY_Pos
Ë

	)

918 
	#RCC_CR_HSERDY
 
RCC_CR_HSERDY_Msk


	)

919 
	#RCC_CR_HSEBYP_Pos
 (18U)

	)

920 
	#RCC_CR_HSEBYP_Msk
 (0x1UL << 
RCC_CR_HSEBYP_Pos
Ë

	)

921 
	#RCC_CR_HSEBYP
 
RCC_CR_HSEBYP_Msk


	)

922 
	#RCC_CR_CSSON_Pos
 (19U)

	)

923 
	#RCC_CR_CSSON_Msk
 (0x1UL << 
RCC_CR_CSSON_Pos
Ë

	)

924 
	#RCC_CR_CSSON
 
RCC_CR_CSSON_Msk


	)

925 
	#RCC_CR_PLLON_Pos
 (24U)

	)

926 
	#RCC_CR_PLLON_Msk
 (0x1UL << 
RCC_CR_PLLON_Pos
Ë

	)

927 
	#RCC_CR_PLLON
 
RCC_CR_PLLON_Msk


	)

928 
	#RCC_CR_PLLRDY_Pos
 (25U)

	)

929 
	#RCC_CR_PLLRDY_Msk
 (0x1UL << 
RCC_CR_PLLRDY_Pos
Ë

	)

930 
	#RCC_CR_PLLRDY
 
RCC_CR_PLLRDY_Msk


	)

935 
	#RCC_CFGR_SW_Pos
 (0U)

	)

936 
	#RCC_CFGR_SW_Msk
 (0x3UL << 
RCC_CFGR_SW_Pos
Ë

	)

937 
	#RCC_CFGR_SW
 
RCC_CFGR_SW_Msk


	)

938 
	#RCC_CFGR_SW_0
 (0x1UL << 
RCC_CFGR_SW_Pos
Ë

	)

939 
	#RCC_CFGR_SW_1
 (0x2UL << 
RCC_CFGR_SW_Pos
Ë

	)

941 
	#RCC_CFGR_SW_HSI
 0x00000000U

	)

942 
	#RCC_CFGR_SW_HSE
 0x00000001U

	)

943 
	#RCC_CFGR_SW_PLL
 0x00000002U

	)

946 
	#RCC_CFGR_SWS_Pos
 (2U)

	)

947 
	#RCC_CFGR_SWS_Msk
 (0x3UL << 
RCC_CFGR_SWS_Pos
Ë

	)

948 
	#RCC_CFGR_SWS
 
RCC_CFGR_SWS_Msk


	)

949 
	#RCC_CFGR_SWS_0
 (0x1UL << 
RCC_CFGR_SWS_Pos
Ë

	)

950 
	#RCC_CFGR_SWS_1
 (0x2UL << 
RCC_CFGR_SWS_Pos
Ë

	)

952 
	#RCC_CFGR_SWS_HSI
 0x00000000U

	)

953 
	#RCC_CFGR_SWS_HSE
 0x00000004U

	)

954 
	#RCC_CFGR_SWS_PLL
 0x00000008U

	)

957 
	#RCC_CFGR_HPRE_Pos
 (4U)

	)

958 
	#RCC_CFGR_HPRE_Msk
 (0xFUL << 
RCC_CFGR_HPRE_Pos
Ë

	)

959 
	#RCC_CFGR_HPRE
 
RCC_CFGR_HPRE_Msk


	)

960 
	#RCC_CFGR_HPRE_0
 (0x1UL << 
RCC_CFGR_HPRE_Pos
Ë

	)

961 
	#RCC_CFGR_HPRE_1
 (0x2UL << 
RCC_CFGR_HPRE_Pos
Ë

	)

962 
	#RCC_CFGR_HPRE_2
 (0x4UL << 
RCC_CFGR_HPRE_Pos
Ë

	)

963 
	#RCC_CFGR_HPRE_3
 (0x8UL << 
RCC_CFGR_HPRE_Pos
Ë

	)

965 
	#RCC_CFGR_HPRE_DIV1
 0x00000000U

	)

966 
	#RCC_CFGR_HPRE_DIV2
 0x00000080U

	)

967 
	#RCC_CFGR_HPRE_DIV4
 0x00000090U

	)

968 
	#RCC_CFGR_HPRE_DIV8
 0x000000A0U

	)

969 
	#RCC_CFGR_HPRE_DIV16
 0x000000B0U

	)

970 
	#RCC_CFGR_HPRE_DIV64
 0x000000C0U

	)

971 
	#RCC_CFGR_HPRE_DIV128
 0x000000D0U

	)

972 
	#RCC_CFGR_HPRE_DIV256
 0x000000E0U

	)

973 
	#RCC_CFGR_HPRE_DIV512
 0x000000F0U

	)

976 
	#RCC_CFGR_PPRE1_Pos
 (8U)

	)

977 
	#RCC_CFGR_PPRE1_Msk
 (0x7UL << 
RCC_CFGR_PPRE1_Pos
Ë

	)

978 
	#RCC_CFGR_PPRE1
 
RCC_CFGR_PPRE1_Msk


	)

979 
	#RCC_CFGR_PPRE1_0
 (0x1UL << 
RCC_CFGR_PPRE1_Pos
Ë

	)

980 
	#RCC_CFGR_PPRE1_1
 (0x2UL << 
RCC_CFGR_PPRE1_Pos
Ë

	)

981 
	#RCC_CFGR_PPRE1_2
 (0x4UL << 
RCC_CFGR_PPRE1_Pos
Ë

	)

983 
	#RCC_CFGR_PPRE1_DIV1
 0x00000000U

	)

984 
	#RCC_CFGR_PPRE1_DIV2
 0x00000400U

	)

985 
	#RCC_CFGR_PPRE1_DIV4
 0x00000500U

	)

986 
	#RCC_CFGR_PPRE1_DIV8
 0x00000600U

	)

987 
	#RCC_CFGR_PPRE1_DIV16
 0x00000700U

	)

990 
	#RCC_CFGR_PPRE2_Pos
 (11U)

	)

991 
	#RCC_CFGR_PPRE2_Msk
 (0x7UL << 
RCC_CFGR_PPRE2_Pos
Ë

	)

992 
	#RCC_CFGR_PPRE2
 
RCC_CFGR_PPRE2_Msk


	)

993 
	#RCC_CFGR_PPRE2_0
 (0x1UL << 
RCC_CFGR_PPRE2_Pos
Ë

	)

994 
	#RCC_CFGR_PPRE2_1
 (0x2UL << 
RCC_CFGR_PPRE2_Pos
Ë

	)

995 
	#RCC_CFGR_PPRE2_2
 (0x4UL << 
RCC_CFGR_PPRE2_Pos
Ë

	)

997 
	#RCC_CFGR_PPRE2_DIV1
 0x00000000U

	)

998 
	#RCC_CFGR_PPRE2_DIV2
 0x00002000U

	)

999 
	#RCC_CFGR_PPRE2_DIV4
 0x00002800U

	)

1000 
	#RCC_CFGR_PPRE2_DIV8
 0x00003000U

	)

1001 
	#RCC_CFGR_PPRE2_DIV16
 0x00003800U

	)

1004 
	#RCC_CFGR_ADCPRE_Pos
 (14U)

	)

1005 
	#RCC_CFGR_ADCPRE_Msk
 (0x3UL << 
RCC_CFGR_ADCPRE_Pos
Ë

	)

1006 
	#RCC_CFGR_ADCPRE
 
RCC_CFGR_ADCPRE_Msk


	)

1007 
	#RCC_CFGR_ADCPRE_0
 (0x1UL << 
RCC_CFGR_ADCPRE_Pos
Ë

	)

1008 
	#RCC_CFGR_ADCPRE_1
 (0x2UL << 
RCC_CFGR_ADCPRE_Pos
Ë

	)

1010 
	#RCC_CFGR_ADCPRE_DIV2
 0x00000000U

	)

1011 
	#RCC_CFGR_ADCPRE_DIV4
 0x00004000U

	)

1012 
	#RCC_CFGR_ADCPRE_DIV6
 0x00008000U

	)

1013 
	#RCC_CFGR_ADCPRE_DIV8
 0x0000C000U

	)

1015 
	#RCC_CFGR_PLLSRC_Pos
 (16U)

	)

1016 
	#RCC_CFGR_PLLSRC_Msk
 (0x1UL << 
RCC_CFGR_PLLSRC_Pos
Ë

	)

1017 
	#RCC_CFGR_PLLSRC
 
RCC_CFGR_PLLSRC_Msk


	)

1019 
	#RCC_CFGR_PLLXTPRE_Pos
 (17U)

	)

1020 
	#RCC_CFGR_PLLXTPRE_Msk
 (0x1UL << 
RCC_CFGR_PLLXTPRE_Pos
Ë

	)

1021 
	#RCC_CFGR_PLLXTPRE
 
RCC_CFGR_PLLXTPRE_Msk


	)

1024 
	#RCC_CFGR_PLLMULL_Pos
 (18U)

	)

1025 
	#RCC_CFGR_PLLMULL_Msk
 (0xFUL << 
RCC_CFGR_PLLMULL_Pos
Ë

	)

1026 
	#RCC_CFGR_PLLMULL
 
RCC_CFGR_PLLMULL_Msk


	)

1027 
	#RCC_CFGR_PLLMULL_0
 (0x1UL << 
RCC_CFGR_PLLMULL_Pos
Ë

	)

1028 
	#RCC_CFGR_PLLMULL_1
 (0x2UL << 
RCC_CFGR_PLLMULL_Pos
Ë

	)

1029 
	#RCC_CFGR_PLLMULL_2
 (0x4UL << 
RCC_CFGR_PLLMULL_Pos
Ë

	)

1030 
	#RCC_CFGR_PLLMULL_3
 (0x8UL << 
RCC_CFGR_PLLMULL_Pos
Ë

	)

1032 
	#RCC_CFGR_PLLXTPRE_HSE
 0x00000000U

	)

1033 
	#RCC_CFGR_PLLXTPRE_HSE_DIV2
 0x00020000U

	)

1035 
	#RCC_CFGR_PLLMULL2
 0x00000000U

	)

1036 
	#RCC_CFGR_PLLMULL3_Pos
 (18U)

	)

1037 
	#RCC_CFGR_PLLMULL3_Msk
 (0x1UL << 
RCC_CFGR_PLLMULL3_Pos
Ë

	)

1038 
	#RCC_CFGR_PLLMULL3
 
RCC_CFGR_PLLMULL3_Msk


	)

1039 
	#RCC_CFGR_PLLMULL4_Pos
 (19U)

	)

1040 
	#RCC_CFGR_PLLMULL4_Msk
 (0x1UL << 
RCC_CFGR_PLLMULL4_Pos
Ë

	)

1041 
	#RCC_CFGR_PLLMULL4
 
RCC_CFGR_PLLMULL4_Msk


	)

1042 
	#RCC_CFGR_PLLMULL5_Pos
 (18U)

	)

1043 
	#RCC_CFGR_PLLMULL5_Msk
 (0x3UL << 
RCC_CFGR_PLLMULL5_Pos
Ë

	)

1044 
	#RCC_CFGR_PLLMULL5
 
RCC_CFGR_PLLMULL5_Msk


	)

1045 
	#RCC_CFGR_PLLMULL6_Pos
 (20U)

	)

1046 
	#RCC_CFGR_PLLMULL6_Msk
 (0x1UL << 
RCC_CFGR_PLLMULL6_Pos
Ë

	)

1047 
	#RCC_CFGR_PLLMULL6
 
RCC_CFGR_PLLMULL6_Msk


	)

1048 
	#RCC_CFGR_PLLMULL7_Pos
 (18U)

	)

1049 
	#RCC_CFGR_PLLMULL7_Msk
 (0x5UL << 
RCC_CFGR_PLLMULL7_Pos
Ë

	)

1050 
	#RCC_CFGR_PLLMULL7
 
RCC_CFGR_PLLMULL7_Msk


	)

1051 
	#RCC_CFGR_PLLMULL8_Pos
 (19U)

	)

1052 
	#RCC_CFGR_PLLMULL8_Msk
 (0x3UL << 
RCC_CFGR_PLLMULL8_Pos
Ë

	)

1053 
	#RCC_CFGR_PLLMULL8
 
RCC_CFGR_PLLMULL8_Msk


	)

1054 
	#RCC_CFGR_PLLMULL9_Pos
 (18U)

	)

1055 
	#RCC_CFGR_PLLMULL9_Msk
 (0x7UL << 
RCC_CFGR_PLLMULL9_Pos
Ë

	)

1056 
	#RCC_CFGR_PLLMULL9
 
RCC_CFGR_PLLMULL9_Msk


	)

1057 
	#RCC_CFGR_PLLMULL10_Pos
 (21U)

	)

1058 
	#RCC_CFGR_PLLMULL10_Msk
 (0x1UL << 
RCC_CFGR_PLLMULL10_Pos
Ë

	)

1059 
	#RCC_CFGR_PLLMULL10
 
RCC_CFGR_PLLMULL10_Msk


	)

1060 
	#RCC_CFGR_PLLMULL11_Pos
 (18U)

	)

1061 
	#RCC_CFGR_PLLMULL11_Msk
 (0x9UL << 
RCC_CFGR_PLLMULL11_Pos
Ë

	)

1062 
	#RCC_CFGR_PLLMULL11
 
RCC_CFGR_PLLMULL11_Msk


	)

1063 
	#RCC_CFGR_PLLMULL12_Pos
 (19U)

	)

1064 
	#RCC_CFGR_PLLMULL12_Msk
 (0x5UL << 
RCC_CFGR_PLLMULL12_Pos
Ë

	)

1065 
	#RCC_CFGR_PLLMULL12
 
RCC_CFGR_PLLMULL12_Msk


	)

1066 
	#RCC_CFGR_PLLMULL13_Pos
 (18U)

	)

1067 
	#RCC_CFGR_PLLMULL13_Msk
 (0xBUL << 
RCC_CFGR_PLLMULL13_Pos
Ë

	)

1068 
	#RCC_CFGR_PLLMULL13
 
RCC_CFGR_PLLMULL13_Msk


	)

1069 
	#RCC_CFGR_PLLMULL14_Pos
 (20U)

	)

1070 
	#RCC_CFGR_PLLMULL14_Msk
 (0x3UL << 
RCC_CFGR_PLLMULL14_Pos
Ë

	)

1071 
	#RCC_CFGR_PLLMULL14
 
RCC_CFGR_PLLMULL14_Msk


	)

1072 
	#RCC_CFGR_PLLMULL15_Pos
 (18U)

	)

1073 
	#RCC_CFGR_PLLMULL15_Msk
 (0xDUL << 
RCC_CFGR_PLLMULL15_Pos
Ë

	)

1074 
	#RCC_CFGR_PLLMULL15
 
RCC_CFGR_PLLMULL15_Msk


	)

1075 
	#RCC_CFGR_PLLMULL16_Pos
 (19U)

	)

1076 
	#RCC_CFGR_PLLMULL16_Msk
 (0x7UL << 
RCC_CFGR_PLLMULL16_Pos
Ë

	)

1077 
	#RCC_CFGR_PLLMULL16
 
RCC_CFGR_PLLMULL16_Msk


	)

1078 
	#RCC_CFGR_USBPRE_Pos
 (22U)

	)

1079 
	#RCC_CFGR_USBPRE_Msk
 (0x1UL << 
RCC_CFGR_USBPRE_Pos
Ë

	)

1080 
	#RCC_CFGR_USBPRE
 
RCC_CFGR_USBPRE_Msk


	)

1083 
	#RCC_CFGR_MCO_Pos
 (24U)

	)

1084 
	#RCC_CFGR_MCO_Msk
 (0x7UL << 
RCC_CFGR_MCO_Pos
Ë

	)

1085 
	#RCC_CFGR_MCO
 
RCC_CFGR_MCO_Msk


	)

1086 
	#RCC_CFGR_MCO_0
 (0x1UL << 
RCC_CFGR_MCO_Pos
Ë

	)

1087 
	#RCC_CFGR_MCO_1
 (0x2UL << 
RCC_CFGR_MCO_Pos
Ë

	)

1088 
	#RCC_CFGR_MCO_2
 (0x4UL << 
RCC_CFGR_MCO_Pos
Ë

	)

1090 
	#RCC_CFGR_MCO_NOCLOCK
 0x00000000U

	)

1091 
	#RCC_CFGR_MCO_SYSCLK
 0x04000000U

	)

1092 
	#RCC_CFGR_MCO_HSI
 0x05000000U

	)

1093 
	#RCC_CFGR_MCO_HSE
 0x06000000U

	)

1094 
	#RCC_CFGR_MCO_PLLCLK_DIV2
 0x07000000U

	)

1097 
	#RCC_CFGR_MCOSEL
 
RCC_CFGR_MCO


	)

1098 
	#RCC_CFGR_MCOSEL_0
 
RCC_CFGR_MCO_0


	)

1099 
	#RCC_CFGR_MCOSEL_1
 
RCC_CFGR_MCO_1


	)

1100 
	#RCC_CFGR_MCOSEL_2
 
RCC_CFGR_MCO_2


	)

1101 
	#RCC_CFGR_MCOSEL_NOCLOCK
 
RCC_CFGR_MCO_NOCLOCK


	)

1102 
	#RCC_CFGR_MCOSEL_SYSCLK
 
RCC_CFGR_MCO_SYSCLK


	)

1103 
	#RCC_CFGR_MCOSEL_HSI
 
RCC_CFGR_MCO_HSI


	)

1104 
	#RCC_CFGR_MCOSEL_HSE
 
RCC_CFGR_MCO_HSE


	)

1105 
	#RCC_CFGR_MCOSEL_PLL_DIV2
 
RCC_CFGR_MCO_PLLCLK_DIV2


	)

1108 
	#RCC_CIR_LSIRDYF_Pos
 (0U)

	)

1109 
	#RCC_CIR_LSIRDYF_Msk
 (0x1UL << 
RCC_CIR_LSIRDYF_Pos
Ë

	)

1110 
	#RCC_CIR_LSIRDYF
 
RCC_CIR_LSIRDYF_Msk


	)

1111 
	#RCC_CIR_LSERDYF_Pos
 (1U)

	)

1112 
	#RCC_CIR_LSERDYF_Msk
 (0x1UL << 
RCC_CIR_LSERDYF_Pos
Ë

	)

1113 
	#RCC_CIR_LSERDYF
 
RCC_CIR_LSERDYF_Msk


	)

1114 
	#RCC_CIR_HSIRDYF_Pos
 (2U)

	)

1115 
	#RCC_CIR_HSIRDYF_Msk
 (0x1UL << 
RCC_CIR_HSIRDYF_Pos
Ë

	)

1116 
	#RCC_CIR_HSIRDYF
 
RCC_CIR_HSIRDYF_Msk


	)

1117 
	#RCC_CIR_HSERDYF_Pos
 (3U)

	)

1118 
	#RCC_CIR_HSERDYF_Msk
 (0x1UL << 
RCC_CIR_HSERDYF_Pos
Ë

	)

1119 
	#RCC_CIR_HSERDYF
 
RCC_CIR_HSERDYF_Msk


	)

1120 
	#RCC_CIR_PLLRDYF_Pos
 (4U)

	)

1121 
	#RCC_CIR_PLLRDYF_Msk
 (0x1UL << 
RCC_CIR_PLLRDYF_Pos
Ë

	)

1122 
	#RCC_CIR_PLLRDYF
 
RCC_CIR_PLLRDYF_Msk


	)

1123 
	#RCC_CIR_CSSF_Pos
 (7U)

	)

1124 
	#RCC_CIR_CSSF_Msk
 (0x1UL << 
RCC_CIR_CSSF_Pos
Ë

	)

1125 
	#RCC_CIR_CSSF
 
RCC_CIR_CSSF_Msk


	)

1126 
	#RCC_CIR_LSIRDYIE_Pos
 (8U)

	)

1127 
	#RCC_CIR_LSIRDYIE_Msk
 (0x1UL << 
RCC_CIR_LSIRDYIE_Pos
Ë

	)

1128 
	#RCC_CIR_LSIRDYIE
 
RCC_CIR_LSIRDYIE_Msk


	)

1129 
	#RCC_CIR_LSERDYIE_Pos
 (9U)

	)

1130 
	#RCC_CIR_LSERDYIE_Msk
 (0x1UL << 
RCC_CIR_LSERDYIE_Pos
Ë

	)

1131 
	#RCC_CIR_LSERDYIE
 
RCC_CIR_LSERDYIE_Msk


	)

1132 
	#RCC_CIR_HSIRDYIE_Pos
 (10U)

	)

1133 
	#RCC_CIR_HSIRDYIE_Msk
 (0x1UL << 
RCC_CIR_HSIRDYIE_Pos
Ë

	)

1134 
	#RCC_CIR_HSIRDYIE
 
RCC_CIR_HSIRDYIE_Msk


	)

1135 
	#RCC_CIR_HSERDYIE_Pos
 (11U)

	)

1136 
	#RCC_CIR_HSERDYIE_Msk
 (0x1UL << 
RCC_CIR_HSERDYIE_Pos
Ë

	)

1137 
	#RCC_CIR_HSERDYIE
 
RCC_CIR_HSERDYIE_Msk


	)

1138 
	#RCC_CIR_PLLRDYIE_Pos
 (12U)

	)

1139 
	#RCC_CIR_PLLRDYIE_Msk
 (0x1UL << 
RCC_CIR_PLLRDYIE_Pos
Ë

	)

1140 
	#RCC_CIR_PLLRDYIE
 
RCC_CIR_PLLRDYIE_Msk


	)

1141 
	#RCC_CIR_LSIRDYC_Pos
 (16U)

	)

1142 
	#RCC_CIR_LSIRDYC_Msk
 (0x1UL << 
RCC_CIR_LSIRDYC_Pos
Ë

	)

1143 
	#RCC_CIR_LSIRDYC
 
RCC_CIR_LSIRDYC_Msk


	)

1144 
	#RCC_CIR_LSERDYC_Pos
 (17U)

	)

1145 
	#RCC_CIR_LSERDYC_Msk
 (0x1UL << 
RCC_CIR_LSERDYC_Pos
Ë

	)

1146 
	#RCC_CIR_LSERDYC
 
RCC_CIR_LSERDYC_Msk


	)

1147 
	#RCC_CIR_HSIRDYC_Pos
 (18U)

	)

1148 
	#RCC_CIR_HSIRDYC_Msk
 (0x1UL << 
RCC_CIR_HSIRDYC_Pos
Ë

	)

1149 
	#RCC_CIR_HSIRDYC
 
RCC_CIR_HSIRDYC_Msk


	)

1150 
	#RCC_CIR_HSERDYC_Pos
 (19U)

	)

1151 
	#RCC_CIR_HSERDYC_Msk
 (0x1UL << 
RCC_CIR_HSERDYC_Pos
Ë

	)

1152 
	#RCC_CIR_HSERDYC
 
RCC_CIR_HSERDYC_Msk


	)

1153 
	#RCC_CIR_PLLRDYC_Pos
 (20U)

	)

1154 
	#RCC_CIR_PLLRDYC_Msk
 (0x1UL << 
RCC_CIR_PLLRDYC_Pos
Ë

	)

1155 
	#RCC_CIR_PLLRDYC
 
RCC_CIR_PLLRDYC_Msk


	)

1156 
	#RCC_CIR_CSSC_Pos
 (23U)

	)

1157 
	#RCC_CIR_CSSC_Msk
 (0x1UL << 
RCC_CIR_CSSC_Pos
Ë

	)

1158 
	#RCC_CIR_CSSC
 
RCC_CIR_CSSC_Msk


	)

1162 
	#RCC_APB2RSTR_AFIORST_Pos
 (0U)

	)

1163 
	#RCC_APB2RSTR_AFIORST_Msk
 (0x1UL << 
RCC_APB2RSTR_AFIORST_Pos
Ë

	)

1164 
	#RCC_APB2RSTR_AFIORST
 
RCC_APB2RSTR_AFIORST_Msk


	)

1165 
	#RCC_APB2RSTR_IOPARST_Pos
 (2U)

	)

1166 
	#RCC_APB2RSTR_IOPARST_Msk
 (0x1UL << 
RCC_APB2RSTR_IOPARST_Pos
Ë

	)

1167 
	#RCC_APB2RSTR_IOPARST
 
RCC_APB2RSTR_IOPARST_Msk


	)

1168 
	#RCC_APB2RSTR_IOPBRST_Pos
 (3U)

	)

1169 
	#RCC_APB2RSTR_IOPBRST_Msk
 (0x1UL << 
RCC_APB2RSTR_IOPBRST_Pos
Ë

	)

1170 
	#RCC_APB2RSTR_IOPBRST
 
RCC_APB2RSTR_IOPBRST_Msk


	)

1171 
	#RCC_APB2RSTR_IOPCRST_Pos
 (4U)

	)

1172 
	#RCC_APB2RSTR_IOPCRST_Msk
 (0x1UL << 
RCC_APB2RSTR_IOPCRST_Pos
Ë

	)

1173 
	#RCC_APB2RSTR_IOPCRST
 
RCC_APB2RSTR_IOPCRST_Msk


	)

1174 
	#RCC_APB2RSTR_IOPDRST_Pos
 (5U)

	)

1175 
	#RCC_APB2RSTR_IOPDRST_Msk
 (0x1UL << 
RCC_APB2RSTR_IOPDRST_Pos
Ë

	)

1176 
	#RCC_APB2RSTR_IOPDRST
 
RCC_APB2RSTR_IOPDRST_Msk


	)

1177 
	#RCC_APB2RSTR_ADC1RST_Pos
 (9U)

	)

1178 
	#RCC_APB2RSTR_ADC1RST_Msk
 (0x1UL << 
RCC_APB2RSTR_ADC1RST_Pos
Ë

	)

1179 
	#RCC_APB2RSTR_ADC1RST
 
RCC_APB2RSTR_ADC1RST_Msk


	)

1181 
	#RCC_APB2RSTR_ADC2RST_Pos
 (10U)

	)

1182 
	#RCC_APB2RSTR_ADC2RST_Msk
 (0x1UL << 
RCC_APB2RSTR_ADC2RST_Pos
Ë

	)

1183 
	#RCC_APB2RSTR_ADC2RST
 
RCC_APB2RSTR_ADC2RST_Msk


	)

1185 
	#RCC_APB2RSTR_TIM1RST_Pos
 (11U)

	)

1186 
	#RCC_APB2RSTR_TIM1RST_Msk
 (0x1UL << 
RCC_APB2RSTR_TIM1RST_Pos
Ë

	)

1187 
	#RCC_APB2RSTR_TIM1RST
 
RCC_APB2RSTR_TIM1RST_Msk


	)

1188 
	#RCC_APB2RSTR_SPI1RST_Pos
 (12U)

	)

1189 
	#RCC_APB2RSTR_SPI1RST_Msk
 (0x1UL << 
RCC_APB2RSTR_SPI1RST_Pos
Ë

	)

1190 
	#RCC_APB2RSTR_SPI1RST
 
RCC_APB2RSTR_SPI1RST_Msk


	)

1191 
	#RCC_APB2RSTR_USART1RST_Pos
 (14U)

	)

1192 
	#RCC_APB2RSTR_USART1RST_Msk
 (0x1UL << 
RCC_APB2RSTR_USART1RST_Pos
Ë

	)

1193 
	#RCC_APB2RSTR_USART1RST
 
RCC_APB2RSTR_USART1RST_Msk


	)

1196 
	#RCC_APB2RSTR_IOPERST_Pos
 (6U)

	)

1197 
	#RCC_APB2RSTR_IOPERST_Msk
 (0x1UL << 
RCC_APB2RSTR_IOPERST_Pos
Ë

	)

1198 
	#RCC_APB2RSTR_IOPERST
 
RCC_APB2RSTR_IOPERST_Msk


	)

1204 
	#RCC_APB1RSTR_TIM2RST_Pos
 (0U)

	)

1205 
	#RCC_APB1RSTR_TIM2RST_Msk
 (0x1UL << 
RCC_APB1RSTR_TIM2RST_Pos
Ë

	)

1206 
	#RCC_APB1RSTR_TIM2RST
 
RCC_APB1RSTR_TIM2RST_Msk


	)

1207 
	#RCC_APB1RSTR_TIM3RST_Pos
 (1U)

	)

1208 
	#RCC_APB1RSTR_TIM3RST_Msk
 (0x1UL << 
RCC_APB1RSTR_TIM3RST_Pos
Ë

	)

1209 
	#RCC_APB1RSTR_TIM3RST
 
RCC_APB1RSTR_TIM3RST_Msk


	)

1210 
	#RCC_APB1RSTR_WWDGRST_Pos
 (11U)

	)

1211 
	#RCC_APB1RSTR_WWDGRST_Msk
 (0x1UL << 
RCC_APB1RSTR_WWDGRST_Pos
Ë

	)

1212 
	#RCC_APB1RSTR_WWDGRST
 
RCC_APB1RSTR_WWDGRST_Msk


	)

1213 
	#RCC_APB1RSTR_USART2RST_Pos
 (17U)

	)

1214 
	#RCC_APB1RSTR_USART2RST_Msk
 (0x1UL << 
RCC_APB1RSTR_USART2RST_Pos
Ë

	)

1215 
	#RCC_APB1RSTR_USART2RST
 
RCC_APB1RSTR_USART2RST_Msk


	)

1216 
	#RCC_APB1RSTR_I2C1RST_Pos
 (21U)

	)

1217 
	#RCC_APB1RSTR_I2C1RST_Msk
 (0x1UL << 
RCC_APB1RSTR_I2C1RST_Pos
Ë

	)

1218 
	#RCC_APB1RSTR_I2C1RST
 
RCC_APB1RSTR_I2C1RST_Msk


	)

1220 
	#RCC_APB1RSTR_CAN1RST_Pos
 (25U)

	)

1221 
	#RCC_APB1RSTR_CAN1RST_Msk
 (0x1UL << 
RCC_APB1RSTR_CAN1RST_Pos
Ë

	)

1222 
	#RCC_APB1RSTR_CAN1RST
 
RCC_APB1RSTR_CAN1RST_Msk


	)

1224 
	#RCC_APB1RSTR_BKPRST_Pos
 (27U)

	)

1225 
	#RCC_APB1RSTR_BKPRST_Msk
 (0x1UL << 
RCC_APB1RSTR_BKPRST_Pos
Ë

	)

1226 
	#RCC_APB1RSTR_BKPRST
 
RCC_APB1RSTR_BKPRST_Msk


	)

1227 
	#RCC_APB1RSTR_PWRRST_Pos
 (28U)

	)

1228 
	#RCC_APB1RSTR_PWRRST_Msk
 (0x1UL << 
RCC_APB1RSTR_PWRRST_Pos
Ë

	)

1229 
	#RCC_APB1RSTR_PWRRST
 
RCC_APB1RSTR_PWRRST_Msk


	)

1231 
	#RCC_APB1RSTR_TIM4RST_Pos
 (2U)

	)

1232 
	#RCC_APB1RSTR_TIM4RST_Msk
 (0x1UL << 
RCC_APB1RSTR_TIM4RST_Pos
Ë

	)

1233 
	#RCC_APB1RSTR_TIM4RST
 
RCC_APB1RSTR_TIM4RST_Msk


	)

1234 
	#RCC_APB1RSTR_SPI2RST_Pos
 (14U)

	)

1235 
	#RCC_APB1RSTR_SPI2RST_Msk
 (0x1UL << 
RCC_APB1RSTR_SPI2RST_Pos
Ë

	)

1236 
	#RCC_APB1RSTR_SPI2RST
 
RCC_APB1RSTR_SPI2RST_Msk


	)

1237 
	#RCC_APB1RSTR_USART3RST_Pos
 (18U)

	)

1238 
	#RCC_APB1RSTR_USART3RST_Msk
 (0x1UL << 
RCC_APB1RSTR_USART3RST_Pos
Ë

	)

1239 
	#RCC_APB1RSTR_USART3RST
 
RCC_APB1RSTR_USART3RST_Msk


	)

1240 
	#RCC_APB1RSTR_I2C2RST_Pos
 (22U)

	)

1241 
	#RCC_APB1RSTR_I2C2RST_Msk
 (0x1UL << 
RCC_APB1RSTR_I2C2RST_Pos
Ë

	)

1242 
	#RCC_APB1RSTR_I2C2RST
 
RCC_APB1RSTR_I2C2RST_Msk


	)

1244 
	#RCC_APB1RSTR_USBRST_Pos
 (23U)

	)

1245 
	#RCC_APB1RSTR_USBRST_Msk
 (0x1UL << 
RCC_APB1RSTR_USBRST_Pos
Ë

	)

1246 
	#RCC_APB1RSTR_USBRST
 
RCC_APB1RSTR_USBRST_Msk


	)

1254 
	#RCC_AHBENR_DMA1EN_Pos
 (0U)

	)

1255 
	#RCC_AHBENR_DMA1EN_Msk
 (0x1UL << 
RCC_AHBENR_DMA1EN_Pos
Ë

	)

1256 
	#RCC_AHBENR_DMA1EN
 
RCC_AHBENR_DMA1EN_Msk


	)

1257 
	#RCC_AHBENR_SRAMEN_Pos
 (2U)

	)

1258 
	#RCC_AHBENR_SRAMEN_Msk
 (0x1UL << 
RCC_AHBENR_SRAMEN_Pos
Ë

	)

1259 
	#RCC_AHBENR_SRAMEN
 
RCC_AHBENR_SRAMEN_Msk


	)

1260 
	#RCC_AHBENR_FLITFEN_Pos
 (4U)

	)

1261 
	#RCC_AHBENR_FLITFEN_Msk
 (0x1UL << 
RCC_AHBENR_FLITFEN_Pos
Ë

	)

1262 
	#RCC_AHBENR_FLITFEN
 
RCC_AHBENR_FLITFEN_Msk


	)

1263 
	#RCC_AHBENR_CRCEN_Pos
 (6U)

	)

1264 
	#RCC_AHBENR_CRCEN_Msk
 (0x1UL << 
RCC_AHBENR_CRCEN_Pos
Ë

	)

1265 
	#RCC_AHBENR_CRCEN
 
RCC_AHBENR_CRCEN_Msk


	)

1271 
	#RCC_APB2ENR_AFIOEN_Pos
 (0U)

	)

1272 
	#RCC_APB2ENR_AFIOEN_Msk
 (0x1UL << 
RCC_APB2ENR_AFIOEN_Pos
Ë

	)

1273 
	#RCC_APB2ENR_AFIOEN
 
RCC_APB2ENR_AFIOEN_Msk


	)

1274 
	#RCC_APB2ENR_IOPAEN_Pos
 (2U)

	)

1275 
	#RCC_APB2ENR_IOPAEN_Msk
 (0x1UL << 
RCC_APB2ENR_IOPAEN_Pos
Ë

	)

1276 
	#RCC_APB2ENR_IOPAEN
 
RCC_APB2ENR_IOPAEN_Msk


	)

1277 
	#RCC_APB2ENR_IOPBEN_Pos
 (3U)

	)

1278 
	#RCC_APB2ENR_IOPBEN_Msk
 (0x1UL << 
RCC_APB2ENR_IOPBEN_Pos
Ë

	)

1279 
	#RCC_APB2ENR_IOPBEN
 
RCC_APB2ENR_IOPBEN_Msk


	)

1280 
	#RCC_APB2ENR_IOPCEN_Pos
 (4U)

	)

1281 
	#RCC_APB2ENR_IOPCEN_Msk
 (0x1UL << 
RCC_APB2ENR_IOPCEN_Pos
Ë

	)

1282 
	#RCC_APB2ENR_IOPCEN
 
RCC_APB2ENR_IOPCEN_Msk


	)

1283 
	#RCC_APB2ENR_IOPDEN_Pos
 (5U)

	)

1284 
	#RCC_APB2ENR_IOPDEN_Msk
 (0x1UL << 
RCC_APB2ENR_IOPDEN_Pos
Ë

	)

1285 
	#RCC_APB2ENR_IOPDEN
 
RCC_APB2ENR_IOPDEN_Msk


	)

1286 
	#RCC_APB2ENR_ADC1EN_Pos
 (9U)

	)

1287 
	#RCC_APB2ENR_ADC1EN_Msk
 (0x1UL << 
RCC_APB2ENR_ADC1EN_Pos
Ë

	)

1288 
	#RCC_APB2ENR_ADC1EN
 
RCC_APB2ENR_ADC1EN_Msk


	)

1290 
	#RCC_APB2ENR_ADC2EN_Pos
 (10U)

	)

1291 
	#RCC_APB2ENR_ADC2EN_Msk
 (0x1UL << 
RCC_APB2ENR_ADC2EN_Pos
Ë

	)

1292 
	#RCC_APB2ENR_ADC2EN
 
RCC_APB2ENR_ADC2EN_Msk


	)

1294 
	#RCC_APB2ENR_TIM1EN_Pos
 (11U)

	)

1295 
	#RCC_APB2ENR_TIM1EN_Msk
 (0x1UL << 
RCC_APB2ENR_TIM1EN_Pos
Ë

	)

1296 
	#RCC_APB2ENR_TIM1EN
 
RCC_APB2ENR_TIM1EN_Msk


	)

1297 
	#RCC_APB2ENR_SPI1EN_Pos
 (12U)

	)

1298 
	#RCC_APB2ENR_SPI1EN_Msk
 (0x1UL << 
RCC_APB2ENR_SPI1EN_Pos
Ë

	)

1299 
	#RCC_APB2ENR_SPI1EN
 
RCC_APB2ENR_SPI1EN_Msk


	)

1300 
	#RCC_APB2ENR_USART1EN_Pos
 (14U)

	)

1301 
	#RCC_APB2ENR_USART1EN_Msk
 (0x1UL << 
RCC_APB2ENR_USART1EN_Pos
Ë

	)

1302 
	#RCC_APB2ENR_USART1EN
 
RCC_APB2ENR_USART1EN_Msk


	)

1305 
	#RCC_APB2ENR_IOPEEN_Pos
 (6U)

	)

1306 
	#RCC_APB2ENR_IOPEEN_Msk
 (0x1UL << 
RCC_APB2ENR_IOPEEN_Pos
Ë

	)

1307 
	#RCC_APB2ENR_IOPEEN
 
RCC_APB2ENR_IOPEEN_Msk


	)

1313 
	#RCC_APB1ENR_TIM2EN_Pos
 (0U)

	)

1314 
	#RCC_APB1ENR_TIM2EN_Msk
 (0x1UL << 
RCC_APB1ENR_TIM2EN_Pos
Ë

	)

1315 
	#RCC_APB1ENR_TIM2EN
 
RCC_APB1ENR_TIM2EN_Msk


	)

1316 
	#RCC_APB1ENR_TIM3EN_Pos
 (1U)

	)

1317 
	#RCC_APB1ENR_TIM3EN_Msk
 (0x1UL << 
RCC_APB1ENR_TIM3EN_Pos
Ë

	)

1318 
	#RCC_APB1ENR_TIM3EN
 
RCC_APB1ENR_TIM3EN_Msk


	)

1319 
	#RCC_APB1ENR_WWDGEN_Pos
 (11U)

	)

1320 
	#RCC_APB1ENR_WWDGEN_Msk
 (0x1UL << 
RCC_APB1ENR_WWDGEN_Pos
Ë

	)

1321 
	#RCC_APB1ENR_WWDGEN
 
RCC_APB1ENR_WWDGEN_Msk


	)

1322 
	#RCC_APB1ENR_USART2EN_Pos
 (17U)

	)

1323 
	#RCC_APB1ENR_USART2EN_Msk
 (0x1UL << 
RCC_APB1ENR_USART2EN_Pos
Ë

	)

1324 
	#RCC_APB1ENR_USART2EN
 
RCC_APB1ENR_USART2EN_Msk


	)

1325 
	#RCC_APB1ENR_I2C1EN_Pos
 (21U)

	)

1326 
	#RCC_APB1ENR_I2C1EN_Msk
 (0x1UL << 
RCC_APB1ENR_I2C1EN_Pos
Ë

	)

1327 
	#RCC_APB1ENR_I2C1EN
 
RCC_APB1ENR_I2C1EN_Msk


	)

1329 
	#RCC_APB1ENR_CAN1EN_Pos
 (25U)

	)

1330 
	#RCC_APB1ENR_CAN1EN_Msk
 (0x1UL << 
RCC_APB1ENR_CAN1EN_Pos
Ë

	)

1331 
	#RCC_APB1ENR_CAN1EN
 
RCC_APB1ENR_CAN1EN_Msk


	)

1333 
	#RCC_APB1ENR_BKPEN_Pos
 (27U)

	)

1334 
	#RCC_APB1ENR_BKPEN_Msk
 (0x1UL << 
RCC_APB1ENR_BKPEN_Pos
Ë

	)

1335 
	#RCC_APB1ENR_BKPEN
 
RCC_APB1ENR_BKPEN_Msk


	)

1336 
	#RCC_APB1ENR_PWREN_Pos
 (28U)

	)

1337 
	#RCC_APB1ENR_PWREN_Msk
 (0x1UL << 
RCC_APB1ENR_PWREN_Pos
Ë

	)

1338 
	#RCC_APB1ENR_PWREN
 
RCC_APB1ENR_PWREN_Msk


	)

1340 
	#RCC_APB1ENR_TIM4EN_Pos
 (2U)

	)

1341 
	#RCC_APB1ENR_TIM4EN_Msk
 (0x1UL << 
RCC_APB1ENR_TIM4EN_Pos
Ë

	)

1342 
	#RCC_APB1ENR_TIM4EN
 
RCC_APB1ENR_TIM4EN_Msk


	)

1343 
	#RCC_APB1ENR_SPI2EN_Pos
 (14U)

	)

1344 
	#RCC_APB1ENR_SPI2EN_Msk
 (0x1UL << 
RCC_APB1ENR_SPI2EN_Pos
Ë

	)

1345 
	#RCC_APB1ENR_SPI2EN
 
RCC_APB1ENR_SPI2EN_Msk


	)

1346 
	#RCC_APB1ENR_USART3EN_Pos
 (18U)

	)

1347 
	#RCC_APB1ENR_USART3EN_Msk
 (0x1UL << 
RCC_APB1ENR_USART3EN_Pos
Ë

	)

1348 
	#RCC_APB1ENR_USART3EN
 
RCC_APB1ENR_USART3EN_Msk


	)

1349 
	#RCC_APB1ENR_I2C2EN_Pos
 (22U)

	)

1350 
	#RCC_APB1ENR_I2C2EN_Msk
 (0x1UL << 
RCC_APB1ENR_I2C2EN_Pos
Ë

	)

1351 
	#RCC_APB1ENR_I2C2EN
 
RCC_APB1ENR_I2C2EN_Msk


	)

1353 
	#RCC_APB1ENR_USBEN_Pos
 (23U)

	)

1354 
	#RCC_APB1ENR_USBEN_Msk
 (0x1UL << 
RCC_APB1ENR_USBEN_Pos
Ë

	)

1355 
	#RCC_APB1ENR_USBEN
 
RCC_APB1ENR_USBEN_Msk


	)

1363 
	#RCC_BDCR_LSEON_Pos
 (0U)

	)

1364 
	#RCC_BDCR_LSEON_Msk
 (0x1UL << 
RCC_BDCR_LSEON_Pos
Ë

	)

1365 
	#RCC_BDCR_LSEON
 
RCC_BDCR_LSEON_Msk


	)

1366 
	#RCC_BDCR_LSERDY_Pos
 (1U)

	)

1367 
	#RCC_BDCR_LSERDY_Msk
 (0x1UL << 
RCC_BDCR_LSERDY_Pos
Ë

	)

1368 
	#RCC_BDCR_LSERDY
 
RCC_BDCR_LSERDY_Msk


	)

1369 
	#RCC_BDCR_LSEBYP_Pos
 (2U)

	)

1370 
	#RCC_BDCR_LSEBYP_Msk
 (0x1UL << 
RCC_BDCR_LSEBYP_Pos
Ë

	)

1371 
	#RCC_BDCR_LSEBYP
 
RCC_BDCR_LSEBYP_Msk


	)

1373 
	#RCC_BDCR_RTCSEL_Pos
 (8U)

	)

1374 
	#RCC_BDCR_RTCSEL_Msk
 (0x3UL << 
RCC_BDCR_RTCSEL_Pos
Ë

	)

1375 
	#RCC_BDCR_RTCSEL
 
RCC_BDCR_RTCSEL_Msk


	)

1376 
	#RCC_BDCR_RTCSEL_0
 (0x1UL << 
RCC_BDCR_RTCSEL_Pos
Ë

	)

1377 
	#RCC_BDCR_RTCSEL_1
 (0x2UL << 
RCC_BDCR_RTCSEL_Pos
Ë

	)

1380 
	#RCC_BDCR_RTCSEL_NOCLOCK
 0x00000000U

	)

1381 
	#RCC_BDCR_RTCSEL_LSE
 0x00000100U

	)

1382 
	#RCC_BDCR_RTCSEL_LSI
 0x00000200U

	)

1383 
	#RCC_BDCR_RTCSEL_HSE
 0x00000300U

	)

1385 
	#RCC_BDCR_RTCEN_Pos
 (15U)

	)

1386 
	#RCC_BDCR_RTCEN_Msk
 (0x1UL << 
RCC_BDCR_RTCEN_Pos
Ë

	)

1387 
	#RCC_BDCR_RTCEN
 
RCC_BDCR_RTCEN_Msk


	)

1388 
	#RCC_BDCR_BDRST_Pos
 (16U)

	)

1389 
	#RCC_BDCR_BDRST_Msk
 (0x1UL << 
RCC_BDCR_BDRST_Pos
Ë

	)

1390 
	#RCC_BDCR_BDRST
 
RCC_BDCR_BDRST_Msk


	)

1393 
	#RCC_CSR_LSION_Pos
 (0U)

	)

1394 
	#RCC_CSR_LSION_Msk
 (0x1UL << 
RCC_CSR_LSION_Pos
Ë

	)

1395 
	#RCC_CSR_LSION
 
RCC_CSR_LSION_Msk


	)

1396 
	#RCC_CSR_LSIRDY_Pos
 (1U)

	)

1397 
	#RCC_CSR_LSIRDY_Msk
 (0x1UL << 
RCC_CSR_LSIRDY_Pos
Ë

	)

1398 
	#RCC_CSR_LSIRDY
 
RCC_CSR_LSIRDY_Msk


	)

1399 
	#RCC_CSR_RMVF_Pos
 (24U)

	)

1400 
	#RCC_CSR_RMVF_Msk
 (0x1UL << 
RCC_CSR_RMVF_Pos
Ë

	)

1401 
	#RCC_CSR_RMVF
 
RCC_CSR_RMVF_Msk


	)

1402 
	#RCC_CSR_PINRSTF_Pos
 (26U)

	)

1403 
	#RCC_CSR_PINRSTF_Msk
 (0x1UL << 
RCC_CSR_PINRSTF_Pos
Ë

	)

1404 
	#RCC_CSR_PINRSTF
 
RCC_CSR_PINRSTF_Msk


	)

1405 
	#RCC_CSR_PORRSTF_Pos
 (27U)

	)

1406 
	#RCC_CSR_PORRSTF_Msk
 (0x1UL << 
RCC_CSR_PORRSTF_Pos
Ë

	)

1407 
	#RCC_CSR_PORRSTF
 
RCC_CSR_PORRSTF_Msk


	)

1408 
	#RCC_CSR_SFTRSTF_Pos
 (28U)

	)

1409 
	#RCC_CSR_SFTRSTF_Msk
 (0x1UL << 
RCC_CSR_SFTRSTF_Pos
Ë

	)

1410 
	#RCC_CSR_SFTRSTF
 
RCC_CSR_SFTRSTF_Msk


	)

1411 
	#RCC_CSR_IWDGRSTF_Pos
 (29U)

	)

1412 
	#RCC_CSR_IWDGRSTF_Msk
 (0x1UL << 
RCC_CSR_IWDGRSTF_Pos
Ë

	)

1413 
	#RCC_CSR_IWDGRSTF
 
RCC_CSR_IWDGRSTF_Msk


	)

1414 
	#RCC_CSR_WWDGRSTF_Pos
 (30U)

	)

1415 
	#RCC_CSR_WWDGRSTF_Msk
 (0x1UL << 
RCC_CSR_WWDGRSTF_Pos
Ë

	)

1416 
	#RCC_CSR_WWDGRSTF
 
RCC_CSR_WWDGRSTF_Msk


	)

1417 
	#RCC_CSR_LPWRRSTF_Pos
 (31U)

	)

1418 
	#RCC_CSR_LPWRRSTF_Msk
 (0x1UL << 
RCC_CSR_LPWRRSTF_Pos
Ë

	)

1419 
	#RCC_CSR_LPWRRSTF
 
RCC_CSR_LPWRRSTF_Msk


	)

1430 
	#GPIO_CRL_MODE_Pos
 (0U)

	)

1431 
	#GPIO_CRL_MODE_Msk
 (0x33333333UL << 
GPIO_CRL_MODE_Pos
Ë

	)

1432 
	#GPIO_CRL_MODE
 
GPIO_CRL_MODE_Msk


	)

1434 
	#GPIO_CRL_MODE0_Pos
 (0U)

	)

1435 
	#GPIO_CRL_MODE0_Msk
 (0x3UL << 
GPIO_CRL_MODE0_Pos
Ë

	)

1436 
	#GPIO_CRL_MODE0
 
GPIO_CRL_MODE0_Msk


	)

1437 
	#GPIO_CRL_MODE0_0
 (0x1UL << 
GPIO_CRL_MODE0_Pos
Ë

	)

1438 
	#GPIO_CRL_MODE0_1
 (0x2UL << 
GPIO_CRL_MODE0_Pos
Ë

	)

1440 
	#GPIO_CRL_MODE1_Pos
 (4U)

	)

1441 
	#GPIO_CRL_MODE1_Msk
 (0x3UL << 
GPIO_CRL_MODE1_Pos
Ë

	)

1442 
	#GPIO_CRL_MODE1
 
GPIO_CRL_MODE1_Msk


	)

1443 
	#GPIO_CRL_MODE1_0
 (0x1UL << 
GPIO_CRL_MODE1_Pos
Ë

	)

1444 
	#GPIO_CRL_MODE1_1
 (0x2UL << 
GPIO_CRL_MODE1_Pos
Ë

	)

1446 
	#GPIO_CRL_MODE2_Pos
 (8U)

	)

1447 
	#GPIO_CRL_MODE2_Msk
 (0x3UL << 
GPIO_CRL_MODE2_Pos
Ë

	)

1448 
	#GPIO_CRL_MODE2
 
GPIO_CRL_MODE2_Msk


	)

1449 
	#GPIO_CRL_MODE2_0
 (0x1UL << 
GPIO_CRL_MODE2_Pos
Ë

	)

1450 
	#GPIO_CRL_MODE2_1
 (0x2UL << 
GPIO_CRL_MODE2_Pos
Ë

	)

1452 
	#GPIO_CRL_MODE3_Pos
 (12U)

	)

1453 
	#GPIO_CRL_MODE3_Msk
 (0x3UL << 
GPIO_CRL_MODE3_Pos
Ë

	)

1454 
	#GPIO_CRL_MODE3
 
GPIO_CRL_MODE3_Msk


	)

1455 
	#GPIO_CRL_MODE3_0
 (0x1UL << 
GPIO_CRL_MODE3_Pos
Ë

	)

1456 
	#GPIO_CRL_MODE3_1
 (0x2UL << 
GPIO_CRL_MODE3_Pos
Ë

	)

1458 
	#GPIO_CRL_MODE4_Pos
 (16U)

	)

1459 
	#GPIO_CRL_MODE4_Msk
 (0x3UL << 
GPIO_CRL_MODE4_Pos
Ë

	)

1460 
	#GPIO_CRL_MODE4
 
GPIO_CRL_MODE4_Msk


	)

1461 
	#GPIO_CRL_MODE4_0
 (0x1UL << 
GPIO_CRL_MODE4_Pos
Ë

	)

1462 
	#GPIO_CRL_MODE4_1
 (0x2UL << 
GPIO_CRL_MODE4_Pos
Ë

	)

1464 
	#GPIO_CRL_MODE5_Pos
 (20U)

	)

1465 
	#GPIO_CRL_MODE5_Msk
 (0x3UL << 
GPIO_CRL_MODE5_Pos
Ë

	)

1466 
	#GPIO_CRL_MODE5
 
GPIO_CRL_MODE5_Msk


	)

1467 
	#GPIO_CRL_MODE5_0
 (0x1UL << 
GPIO_CRL_MODE5_Pos
Ë

	)

1468 
	#GPIO_CRL_MODE5_1
 (0x2UL << 
GPIO_CRL_MODE5_Pos
Ë

	)

1470 
	#GPIO_CRL_MODE6_Pos
 (24U)

	)

1471 
	#GPIO_CRL_MODE6_Msk
 (0x3UL << 
GPIO_CRL_MODE6_Pos
Ë

	)

1472 
	#GPIO_CRL_MODE6
 
GPIO_CRL_MODE6_Msk


	)

1473 
	#GPIO_CRL_MODE6_0
 (0x1UL << 
GPIO_CRL_MODE6_Pos
Ë

	)

1474 
	#GPIO_CRL_MODE6_1
 (0x2UL << 
GPIO_CRL_MODE6_Pos
Ë

	)

1476 
	#GPIO_CRL_MODE7_Pos
 (28U)

	)

1477 
	#GPIO_CRL_MODE7_Msk
 (0x3UL << 
GPIO_CRL_MODE7_Pos
Ë

	)

1478 
	#GPIO_CRL_MODE7
 
GPIO_CRL_MODE7_Msk


	)

1479 
	#GPIO_CRL_MODE7_0
 (0x1UL << 
GPIO_CRL_MODE7_Pos
Ë

	)

1480 
	#GPIO_CRL_MODE7_1
 (0x2UL << 
GPIO_CRL_MODE7_Pos
Ë

	)

1482 
	#GPIO_CRL_CNF_Pos
 (2U)

	)

1483 
	#GPIO_CRL_CNF_Msk
 (0x33333333UL << 
GPIO_CRL_CNF_Pos
Ë

	)

1484 
	#GPIO_CRL_CNF
 
GPIO_CRL_CNF_Msk


	)

1486 
	#GPIO_CRL_CNF0_Pos
 (2U)

	)

1487 
	#GPIO_CRL_CNF0_Msk
 (0x3UL << 
GPIO_CRL_CNF0_Pos
Ë

	)

1488 
	#GPIO_CRL_CNF0
 
GPIO_CRL_CNF0_Msk


	)

1489 
	#GPIO_CRL_CNF0_0
 (0x1UL << 
GPIO_CRL_CNF0_Pos
Ë

	)

1490 
	#GPIO_CRL_CNF0_1
 (0x2UL << 
GPIO_CRL_CNF0_Pos
Ë

	)

1492 
	#GPIO_CRL_CNF1_Pos
 (6U)

	)

1493 
	#GPIO_CRL_CNF1_Msk
 (0x3UL << 
GPIO_CRL_CNF1_Pos
Ë

	)

1494 
	#GPIO_CRL_CNF1
 
GPIO_CRL_CNF1_Msk


	)

1495 
	#GPIO_CRL_CNF1_0
 (0x1UL << 
GPIO_CRL_CNF1_Pos
Ë

	)

1496 
	#GPIO_CRL_CNF1_1
 (0x2UL << 
GPIO_CRL_CNF1_Pos
Ë

	)

1498 
	#GPIO_CRL_CNF2_Pos
 (10U)

	)

1499 
	#GPIO_CRL_CNF2_Msk
 (0x3UL << 
GPIO_CRL_CNF2_Pos
Ë

	)

1500 
	#GPIO_CRL_CNF2
 
GPIO_CRL_CNF2_Msk


	)

1501 
	#GPIO_CRL_CNF2_0
 (0x1UL << 
GPIO_CRL_CNF2_Pos
Ë

	)

1502 
	#GPIO_CRL_CNF2_1
 (0x2UL << 
GPIO_CRL_CNF2_Pos
Ë

	)

1504 
	#GPIO_CRL_CNF3_Pos
 (14U)

	)

1505 
	#GPIO_CRL_CNF3_Msk
 (0x3UL << 
GPIO_CRL_CNF3_Pos
Ë

	)

1506 
	#GPIO_CRL_CNF3
 
GPIO_CRL_CNF3_Msk


	)

1507 
	#GPIO_CRL_CNF3_0
 (0x1UL << 
GPIO_CRL_CNF3_Pos
Ë

	)

1508 
	#GPIO_CRL_CNF3_1
 (0x2UL << 
GPIO_CRL_CNF3_Pos
Ë

	)

1510 
	#GPIO_CRL_CNF4_Pos
 (18U)

	)

1511 
	#GPIO_CRL_CNF4_Msk
 (0x3UL << 
GPIO_CRL_CNF4_Pos
Ë

	)

1512 
	#GPIO_CRL_CNF4
 
GPIO_CRL_CNF4_Msk


	)

1513 
	#GPIO_CRL_CNF4_0
 (0x1UL << 
GPIO_CRL_CNF4_Pos
Ë

	)

1514 
	#GPIO_CRL_CNF4_1
 (0x2UL << 
GPIO_CRL_CNF4_Pos
Ë

	)

1516 
	#GPIO_CRL_CNF5_Pos
 (22U)

	)

1517 
	#GPIO_CRL_CNF5_Msk
 (0x3UL << 
GPIO_CRL_CNF5_Pos
Ë

	)

1518 
	#GPIO_CRL_CNF5
 
GPIO_CRL_CNF5_Msk


	)

1519 
	#GPIO_CRL_CNF5_0
 (0x1UL << 
GPIO_CRL_CNF5_Pos
Ë

	)

1520 
	#GPIO_CRL_CNF5_1
 (0x2UL << 
GPIO_CRL_CNF5_Pos
Ë

	)

1522 
	#GPIO_CRL_CNF6_Pos
 (26U)

	)

1523 
	#GPIO_CRL_CNF6_Msk
 (0x3UL << 
GPIO_CRL_CNF6_Pos
Ë

	)

1524 
	#GPIO_CRL_CNF6
 
GPIO_CRL_CNF6_Msk


	)

1525 
	#GPIO_CRL_CNF6_0
 (0x1UL << 
GPIO_CRL_CNF6_Pos
Ë

	)

1526 
	#GPIO_CRL_CNF6_1
 (0x2UL << 
GPIO_CRL_CNF6_Pos
Ë

	)

1528 
	#GPIO_CRL_CNF7_Pos
 (30U)

	)

1529 
	#GPIO_CRL_CNF7_Msk
 (0x3UL << 
GPIO_CRL_CNF7_Pos
Ë

	)

1530 
	#GPIO_CRL_CNF7
 
GPIO_CRL_CNF7_Msk


	)

1531 
	#GPIO_CRL_CNF7_0
 (0x1UL << 
GPIO_CRL_CNF7_Pos
Ë

	)

1532 
	#GPIO_CRL_CNF7_1
 (0x2UL << 
GPIO_CRL_CNF7_Pos
Ë

	)

1535 
	#GPIO_CRH_MODE_Pos
 (0U)

	)

1536 
	#GPIO_CRH_MODE_Msk
 (0x33333333UL << 
GPIO_CRH_MODE_Pos
Ë

	)

1537 
	#GPIO_CRH_MODE
 
GPIO_CRH_MODE_Msk


	)

1539 
	#GPIO_CRH_MODE8_Pos
 (0U)

	)

1540 
	#GPIO_CRH_MODE8_Msk
 (0x3UL << 
GPIO_CRH_MODE8_Pos
Ë

	)

1541 
	#GPIO_CRH_MODE8
 
GPIO_CRH_MODE8_Msk


	)

1542 
	#GPIO_CRH_MODE8_0
 (0x1UL << 
GPIO_CRH_MODE8_Pos
Ë

	)

1543 
	#GPIO_CRH_MODE8_1
 (0x2UL << 
GPIO_CRH_MODE8_Pos
Ë

	)

1545 
	#GPIO_CRH_MODE9_Pos
 (4U)

	)

1546 
	#GPIO_CRH_MODE9_Msk
 (0x3UL << 
GPIO_CRH_MODE9_Pos
Ë

	)

1547 
	#GPIO_CRH_MODE9
 
GPIO_CRH_MODE9_Msk


	)

1548 
	#GPIO_CRH_MODE9_0
 (0x1UL << 
GPIO_CRH_MODE9_Pos
Ë

	)

1549 
	#GPIO_CRH_MODE9_1
 (0x2UL << 
GPIO_CRH_MODE9_Pos
Ë

	)

1551 
	#GPIO_CRH_MODE10_Pos
 (8U)

	)

1552 
	#GPIO_CRH_MODE10_Msk
 (0x3UL << 
GPIO_CRH_MODE10_Pos
Ë

	)

1553 
	#GPIO_CRH_MODE10
 
GPIO_CRH_MODE10_Msk


	)

1554 
	#GPIO_CRH_MODE10_0
 (0x1UL << 
GPIO_CRH_MODE10_Pos
Ë

	)

1555 
	#GPIO_CRH_MODE10_1
 (0x2UL << 
GPIO_CRH_MODE10_Pos
Ë

	)

1557 
	#GPIO_CRH_MODE11_Pos
 (12U)

	)

1558 
	#GPIO_CRH_MODE11_Msk
 (0x3UL << 
GPIO_CRH_MODE11_Pos
Ë

	)

1559 
	#GPIO_CRH_MODE11
 
GPIO_CRH_MODE11_Msk


	)

1560 
	#GPIO_CRH_MODE11_0
 (0x1UL << 
GPIO_CRH_MODE11_Pos
Ë

	)

1561 
	#GPIO_CRH_MODE11_1
 (0x2UL << 
GPIO_CRH_MODE11_Pos
Ë

	)

1563 
	#GPIO_CRH_MODE12_Pos
 (16U)

	)

1564 
	#GPIO_CRH_MODE12_Msk
 (0x3UL << 
GPIO_CRH_MODE12_Pos
Ë

	)

1565 
	#GPIO_CRH_MODE12
 
GPIO_CRH_MODE12_Msk


	)

1566 
	#GPIO_CRH_MODE12_0
 (0x1UL << 
GPIO_CRH_MODE12_Pos
Ë

	)

1567 
	#GPIO_CRH_MODE12_1
 (0x2UL << 
GPIO_CRH_MODE12_Pos
Ë

	)

1569 
	#GPIO_CRH_MODE13_Pos
 (20U)

	)

1570 
	#GPIO_CRH_MODE13_Msk
 (0x3UL << 
GPIO_CRH_MODE13_Pos
Ë

	)

1571 
	#GPIO_CRH_MODE13
 
GPIO_CRH_MODE13_Msk


	)

1572 
	#GPIO_CRH_MODE13_0
 (0x1UL << 
GPIO_CRH_MODE13_Pos
Ë

	)

1573 
	#GPIO_CRH_MODE13_1
 (0x2UL << 
GPIO_CRH_MODE13_Pos
Ë

	)

1575 
	#GPIO_CRH_MODE14_Pos
 (24U)

	)

1576 
	#GPIO_CRH_MODE14_Msk
 (0x3UL << 
GPIO_CRH_MODE14_Pos
Ë

	)

1577 
	#GPIO_CRH_MODE14
 
GPIO_CRH_MODE14_Msk


	)

1578 
	#GPIO_CRH_MODE14_0
 (0x1UL << 
GPIO_CRH_MODE14_Pos
Ë

	)

1579 
	#GPIO_CRH_MODE14_1
 (0x2UL << 
GPIO_CRH_MODE14_Pos
Ë

	)

1581 
	#GPIO_CRH_MODE15_Pos
 (28U)

	)

1582 
	#GPIO_CRH_MODE15_Msk
 (0x3UL << 
GPIO_CRH_MODE15_Pos
Ë

	)

1583 
	#GPIO_CRH_MODE15
 
GPIO_CRH_MODE15_Msk


	)

1584 
	#GPIO_CRH_MODE15_0
 (0x1UL << 
GPIO_CRH_MODE15_Pos
Ë

	)

1585 
	#GPIO_CRH_MODE15_1
 (0x2UL << 
GPIO_CRH_MODE15_Pos
Ë

	)

1587 
	#GPIO_CRH_CNF_Pos
 (2U)

	)

1588 
	#GPIO_CRH_CNF_Msk
 (0x33333333UL << 
GPIO_CRH_CNF_Pos
Ë

	)

1589 
	#GPIO_CRH_CNF
 
GPIO_CRH_CNF_Msk


	)

1591 
	#GPIO_CRH_CNF8_Pos
 (2U)

	)

1592 
	#GPIO_CRH_CNF8_Msk
 (0x3UL << 
GPIO_CRH_CNF8_Pos
Ë

	)

1593 
	#GPIO_CRH_CNF8
 
GPIO_CRH_CNF8_Msk


	)

1594 
	#GPIO_CRH_CNF8_0
 (0x1UL << 
GPIO_CRH_CNF8_Pos
Ë

	)

1595 
	#GPIO_CRH_CNF8_1
 (0x2UL << 
GPIO_CRH_CNF8_Pos
Ë

	)

1597 
	#GPIO_CRH_CNF9_Pos
 (6U)

	)

1598 
	#GPIO_CRH_CNF9_Msk
 (0x3UL << 
GPIO_CRH_CNF9_Pos
Ë

	)

1599 
	#GPIO_CRH_CNF9
 
GPIO_CRH_CNF9_Msk


	)

1600 
	#GPIO_CRH_CNF9_0
 (0x1UL << 
GPIO_CRH_CNF9_Pos
Ë

	)

1601 
	#GPIO_CRH_CNF9_1
 (0x2UL << 
GPIO_CRH_CNF9_Pos
Ë

	)

1603 
	#GPIO_CRH_CNF10_Pos
 (10U)

	)

1604 
	#GPIO_CRH_CNF10_Msk
 (0x3UL << 
GPIO_CRH_CNF10_Pos
Ë

	)

1605 
	#GPIO_CRH_CNF10
 
GPIO_CRH_CNF10_Msk


	)

1606 
	#GPIO_CRH_CNF10_0
 (0x1UL << 
GPIO_CRH_CNF10_Pos
Ë

	)

1607 
	#GPIO_CRH_CNF10_1
 (0x2UL << 
GPIO_CRH_CNF10_Pos
Ë

	)

1609 
	#GPIO_CRH_CNF11_Pos
 (14U)

	)

1610 
	#GPIO_CRH_CNF11_Msk
 (0x3UL << 
GPIO_CRH_CNF11_Pos
Ë

	)

1611 
	#GPIO_CRH_CNF11
 
GPIO_CRH_CNF11_Msk


	)

1612 
	#GPIO_CRH_CNF11_0
 (0x1UL << 
GPIO_CRH_CNF11_Pos
Ë

	)

1613 
	#GPIO_CRH_CNF11_1
 (0x2UL << 
GPIO_CRH_CNF11_Pos
Ë

	)

1615 
	#GPIO_CRH_CNF12_Pos
 (18U)

	)

1616 
	#GPIO_CRH_CNF12_Msk
 (0x3UL << 
GPIO_CRH_CNF12_Pos
Ë

	)

1617 
	#GPIO_CRH_CNF12
 
GPIO_CRH_CNF12_Msk


	)

1618 
	#GPIO_CRH_CNF12_0
 (0x1UL << 
GPIO_CRH_CNF12_Pos
Ë

	)

1619 
	#GPIO_CRH_CNF12_1
 (0x2UL << 
GPIO_CRH_CNF12_Pos
Ë

	)

1621 
	#GPIO_CRH_CNF13_Pos
 (22U)

	)

1622 
	#GPIO_CRH_CNF13_Msk
 (0x3UL << 
GPIO_CRH_CNF13_Pos
Ë

	)

1623 
	#GPIO_CRH_CNF13
 
GPIO_CRH_CNF13_Msk


	)

1624 
	#GPIO_CRH_CNF13_0
 (0x1UL << 
GPIO_CRH_CNF13_Pos
Ë

	)

1625 
	#GPIO_CRH_CNF13_1
 (0x2UL << 
GPIO_CRH_CNF13_Pos
Ë

	)

1627 
	#GPIO_CRH_CNF14_Pos
 (26U)

	)

1628 
	#GPIO_CRH_CNF14_Msk
 (0x3UL << 
GPIO_CRH_CNF14_Pos
Ë

	)

1629 
	#GPIO_CRH_CNF14
 
GPIO_CRH_CNF14_Msk


	)

1630 
	#GPIO_CRH_CNF14_0
 (0x1UL << 
GPIO_CRH_CNF14_Pos
Ë

	)

1631 
	#GPIO_CRH_CNF14_1
 (0x2UL << 
GPIO_CRH_CNF14_Pos
Ë

	)

1633 
	#GPIO_CRH_CNF15_Pos
 (30U)

	)

1634 
	#GPIO_CRH_CNF15_Msk
 (0x3UL << 
GPIO_CRH_CNF15_Pos
Ë

	)

1635 
	#GPIO_CRH_CNF15
 
GPIO_CRH_CNF15_Msk


	)

1636 
	#GPIO_CRH_CNF15_0
 (0x1UL << 
GPIO_CRH_CNF15_Pos
Ë

	)

1637 
	#GPIO_CRH_CNF15_1
 (0x2UL << 
GPIO_CRH_CNF15_Pos
Ë

	)

1640 
	#GPIO_IDR_IDR0_Pos
 (0U)

	)

1641 
	#GPIO_IDR_IDR0_Msk
 (0x1UL << 
GPIO_IDR_IDR0_Pos
Ë

	)

1642 
	#GPIO_IDR_IDR0
 
GPIO_IDR_IDR0_Msk


	)

1643 
	#GPIO_IDR_IDR1_Pos
 (1U)

	)

1644 
	#GPIO_IDR_IDR1_Msk
 (0x1UL << 
GPIO_IDR_IDR1_Pos
Ë

	)

1645 
	#GPIO_IDR_IDR1
 
GPIO_IDR_IDR1_Msk


	)

1646 
	#GPIO_IDR_IDR2_Pos
 (2U)

	)

1647 
	#GPIO_IDR_IDR2_Msk
 (0x1UL << 
GPIO_IDR_IDR2_Pos
Ë

	)

1648 
	#GPIO_IDR_IDR2
 
GPIO_IDR_IDR2_Msk


	)

1649 
	#GPIO_IDR_IDR3_Pos
 (3U)

	)

1650 
	#GPIO_IDR_IDR3_Msk
 (0x1UL << 
GPIO_IDR_IDR3_Pos
Ë

	)

1651 
	#GPIO_IDR_IDR3
 
GPIO_IDR_IDR3_Msk


	)

1652 
	#GPIO_IDR_IDR4_Pos
 (4U)

	)

1653 
	#GPIO_IDR_IDR4_Msk
 (0x1UL << 
GPIO_IDR_IDR4_Pos
Ë

	)

1654 
	#GPIO_IDR_IDR4
 
GPIO_IDR_IDR4_Msk


	)

1655 
	#GPIO_IDR_IDR5_Pos
 (5U)

	)

1656 
	#GPIO_IDR_IDR5_Msk
 (0x1UL << 
GPIO_IDR_IDR5_Pos
Ë

	)

1657 
	#GPIO_IDR_IDR5
 
GPIO_IDR_IDR5_Msk


	)

1658 
	#GPIO_IDR_IDR6_Pos
 (6U)

	)

1659 
	#GPIO_IDR_IDR6_Msk
 (0x1UL << 
GPIO_IDR_IDR6_Pos
Ë

	)

1660 
	#GPIO_IDR_IDR6
 
GPIO_IDR_IDR6_Msk


	)

1661 
	#GPIO_IDR_IDR7_Pos
 (7U)

	)

1662 
	#GPIO_IDR_IDR7_Msk
 (0x1UL << 
GPIO_IDR_IDR7_Pos
Ë

	)

1663 
	#GPIO_IDR_IDR7
 
GPIO_IDR_IDR7_Msk


	)

1664 
	#GPIO_IDR_IDR8_Pos
 (8U)

	)

1665 
	#GPIO_IDR_IDR8_Msk
 (0x1UL << 
GPIO_IDR_IDR8_Pos
Ë

	)

1666 
	#GPIO_IDR_IDR8
 
GPIO_IDR_IDR8_Msk


	)

1667 
	#GPIO_IDR_IDR9_Pos
 (9U)

	)

1668 
	#GPIO_IDR_IDR9_Msk
 (0x1UL << 
GPIO_IDR_IDR9_Pos
Ë

	)

1669 
	#GPIO_IDR_IDR9
 
GPIO_IDR_IDR9_Msk


	)

1670 
	#GPIO_IDR_IDR10_Pos
 (10U)

	)

1671 
	#GPIO_IDR_IDR10_Msk
 (0x1UL << 
GPIO_IDR_IDR10_Pos
Ë

	)

1672 
	#GPIO_IDR_IDR10
 
GPIO_IDR_IDR10_Msk


	)

1673 
	#GPIO_IDR_IDR11_Pos
 (11U)

	)

1674 
	#GPIO_IDR_IDR11_Msk
 (0x1UL << 
GPIO_IDR_IDR11_Pos
Ë

	)

1675 
	#GPIO_IDR_IDR11
 
GPIO_IDR_IDR11_Msk


	)

1676 
	#GPIO_IDR_IDR12_Pos
 (12U)

	)

1677 
	#GPIO_IDR_IDR12_Msk
 (0x1UL << 
GPIO_IDR_IDR12_Pos
Ë

	)

1678 
	#GPIO_IDR_IDR12
 
GPIO_IDR_IDR12_Msk


	)

1679 
	#GPIO_IDR_IDR13_Pos
 (13U)

	)

1680 
	#GPIO_IDR_IDR13_Msk
 (0x1UL << 
GPIO_IDR_IDR13_Pos
Ë

	)

1681 
	#GPIO_IDR_IDR13
 
GPIO_IDR_IDR13_Msk


	)

1682 
	#GPIO_IDR_IDR14_Pos
 (14U)

	)

1683 
	#GPIO_IDR_IDR14_Msk
 (0x1UL << 
GPIO_IDR_IDR14_Pos
Ë

	)

1684 
	#GPIO_IDR_IDR14
 
GPIO_IDR_IDR14_Msk


	)

1685 
	#GPIO_IDR_IDR15_Pos
 (15U)

	)

1686 
	#GPIO_IDR_IDR15_Msk
 (0x1UL << 
GPIO_IDR_IDR15_Pos
Ë

	)

1687 
	#GPIO_IDR_IDR15
 
GPIO_IDR_IDR15_Msk


	)

1690 
	#GPIO_ODR_ODR0_Pos
 (0U)

	)

1691 
	#GPIO_ODR_ODR0_Msk
 (0x1UL << 
GPIO_ODR_ODR0_Pos
Ë

	)

1692 
	#GPIO_ODR_ODR0
 
GPIO_ODR_ODR0_Msk


	)

1693 
	#GPIO_ODR_ODR1_Pos
 (1U)

	)

1694 
	#GPIO_ODR_ODR1_Msk
 (0x1UL << 
GPIO_ODR_ODR1_Pos
Ë

	)

1695 
	#GPIO_ODR_ODR1
 
GPIO_ODR_ODR1_Msk


	)

1696 
	#GPIO_ODR_ODR2_Pos
 (2U)

	)

1697 
	#GPIO_ODR_ODR2_Msk
 (0x1UL << 
GPIO_ODR_ODR2_Pos
Ë

	)

1698 
	#GPIO_ODR_ODR2
 
GPIO_ODR_ODR2_Msk


	)

1699 
	#GPIO_ODR_ODR3_Pos
 (3U)

	)

1700 
	#GPIO_ODR_ODR3_Msk
 (0x1UL << 
GPIO_ODR_ODR3_Pos
Ë

	)

1701 
	#GPIO_ODR_ODR3
 
GPIO_ODR_ODR3_Msk


	)

1702 
	#GPIO_ODR_ODR4_Pos
 (4U)

	)

1703 
	#GPIO_ODR_ODR4_Msk
 (0x1UL << 
GPIO_ODR_ODR4_Pos
Ë

	)

1704 
	#GPIO_ODR_ODR4
 
GPIO_ODR_ODR4_Msk


	)

1705 
	#GPIO_ODR_ODR5_Pos
 (5U)

	)

1706 
	#GPIO_ODR_ODR5_Msk
 (0x1UL << 
GPIO_ODR_ODR5_Pos
Ë

	)

1707 
	#GPIO_ODR_ODR5
 
GPIO_ODR_ODR5_Msk


	)

1708 
	#GPIO_ODR_ODR6_Pos
 (6U)

	)

1709 
	#GPIO_ODR_ODR6_Msk
 (0x1UL << 
GPIO_ODR_ODR6_Pos
Ë

	)

1710 
	#GPIO_ODR_ODR6
 
GPIO_ODR_ODR6_Msk


	)

1711 
	#GPIO_ODR_ODR7_Pos
 (7U)

	)

1712 
	#GPIO_ODR_ODR7_Msk
 (0x1UL << 
GPIO_ODR_ODR7_Pos
Ë

	)

1713 
	#GPIO_ODR_ODR7
 
GPIO_ODR_ODR7_Msk


	)

1714 
	#GPIO_ODR_ODR8_Pos
 (8U)

	)

1715 
	#GPIO_ODR_ODR8_Msk
 (0x1UL << 
GPIO_ODR_ODR8_Pos
Ë

	)

1716 
	#GPIO_ODR_ODR8
 
GPIO_ODR_ODR8_Msk


	)

1717 
	#GPIO_ODR_ODR9_Pos
 (9U)

	)

1718 
	#GPIO_ODR_ODR9_Msk
 (0x1UL << 
GPIO_ODR_ODR9_Pos
Ë

	)

1719 
	#GPIO_ODR_ODR9
 
GPIO_ODR_ODR9_Msk


	)

1720 
	#GPIO_ODR_ODR10_Pos
 (10U)

	)

1721 
	#GPIO_ODR_ODR10_Msk
 (0x1UL << 
GPIO_ODR_ODR10_Pos
Ë

	)

1722 
	#GPIO_ODR_ODR10
 
GPIO_ODR_ODR10_Msk


	)

1723 
	#GPIO_ODR_ODR11_Pos
 (11U)

	)

1724 
	#GPIO_ODR_ODR11_Msk
 (0x1UL << 
GPIO_ODR_ODR11_Pos
Ë

	)

1725 
	#GPIO_ODR_ODR11
 
GPIO_ODR_ODR11_Msk


	)

1726 
	#GPIO_ODR_ODR12_Pos
 (12U)

	)

1727 
	#GPIO_ODR_ODR12_Msk
 (0x1UL << 
GPIO_ODR_ODR12_Pos
Ë

	)

1728 
	#GPIO_ODR_ODR12
 
GPIO_ODR_ODR12_Msk


	)

1729 
	#GPIO_ODR_ODR13_Pos
 (13U)

	)

1730 
	#GPIO_ODR_ODR13_Msk
 (0x1UL << 
GPIO_ODR_ODR13_Pos
Ë

	)

1731 
	#GPIO_ODR_ODR13
 
GPIO_ODR_ODR13_Msk


	)

1732 
	#GPIO_ODR_ODR14_Pos
 (14U)

	)

1733 
	#GPIO_ODR_ODR14_Msk
 (0x1UL << 
GPIO_ODR_ODR14_Pos
Ë

	)

1734 
	#GPIO_ODR_ODR14
 
GPIO_ODR_ODR14_Msk


	)

1735 
	#GPIO_ODR_ODR15_Pos
 (15U)

	)

1736 
	#GPIO_ODR_ODR15_Msk
 (0x1UL << 
GPIO_ODR_ODR15_Pos
Ë

	)

1737 
	#GPIO_ODR_ODR15
 
GPIO_ODR_ODR15_Msk


	)

1740 
	#GPIO_BSRR_BS0_Pos
 (0U)

	)

1741 
	#GPIO_BSRR_BS0_Msk
 (0x1UL << 
GPIO_BSRR_BS0_Pos
Ë

	)

1742 
	#GPIO_BSRR_BS0
 
GPIO_BSRR_BS0_Msk


	)

1743 
	#GPIO_BSRR_BS1_Pos
 (1U)

	)

1744 
	#GPIO_BSRR_BS1_Msk
 (0x1UL << 
GPIO_BSRR_BS1_Pos
Ë

	)

1745 
	#GPIO_BSRR_BS1
 
GPIO_BSRR_BS1_Msk


	)

1746 
	#GPIO_BSRR_BS2_Pos
 (2U)

	)

1747 
	#GPIO_BSRR_BS2_Msk
 (0x1UL << 
GPIO_BSRR_BS2_Pos
Ë

	)

1748 
	#GPIO_BSRR_BS2
 
GPIO_BSRR_BS2_Msk


	)

1749 
	#GPIO_BSRR_BS3_Pos
 (3U)

	)

1750 
	#GPIO_BSRR_BS3_Msk
 (0x1UL << 
GPIO_BSRR_BS3_Pos
Ë

	)

1751 
	#GPIO_BSRR_BS3
 
GPIO_BSRR_BS3_Msk


	)

1752 
	#GPIO_BSRR_BS4_Pos
 (4U)

	)

1753 
	#GPIO_BSRR_BS4_Msk
 (0x1UL << 
GPIO_BSRR_BS4_Pos
Ë

	)

1754 
	#GPIO_BSRR_BS4
 
GPIO_BSRR_BS4_Msk


	)

1755 
	#GPIO_BSRR_BS5_Pos
 (5U)

	)

1756 
	#GPIO_BSRR_BS5_Msk
 (0x1UL << 
GPIO_BSRR_BS5_Pos
Ë

	)

1757 
	#GPIO_BSRR_BS5
 
GPIO_BSRR_BS5_Msk


	)

1758 
	#GPIO_BSRR_BS6_Pos
 (6U)

	)

1759 
	#GPIO_BSRR_BS6_Msk
 (0x1UL << 
GPIO_BSRR_BS6_Pos
Ë

	)

1760 
	#GPIO_BSRR_BS6
 
GPIO_BSRR_BS6_Msk


	)

1761 
	#GPIO_BSRR_BS7_Pos
 (7U)

	)

1762 
	#GPIO_BSRR_BS7_Msk
 (0x1UL << 
GPIO_BSRR_BS7_Pos
Ë

	)

1763 
	#GPIO_BSRR_BS7
 
GPIO_BSRR_BS7_Msk


	)

1764 
	#GPIO_BSRR_BS8_Pos
 (8U)

	)

1765 
	#GPIO_BSRR_BS8_Msk
 (0x1UL << 
GPIO_BSRR_BS8_Pos
Ë

	)

1766 
	#GPIO_BSRR_BS8
 
GPIO_BSRR_BS8_Msk


	)

1767 
	#GPIO_BSRR_BS9_Pos
 (9U)

	)

1768 
	#GPIO_BSRR_BS9_Msk
 (0x1UL << 
GPIO_BSRR_BS9_Pos
Ë

	)

1769 
	#GPIO_BSRR_BS9
 
GPIO_BSRR_BS9_Msk


	)

1770 
	#GPIO_BSRR_BS10_Pos
 (10U)

	)

1771 
	#GPIO_BSRR_BS10_Msk
 (0x1UL << 
GPIO_BSRR_BS10_Pos
Ë

	)

1772 
	#GPIO_BSRR_BS10
 
GPIO_BSRR_BS10_Msk


	)

1773 
	#GPIO_BSRR_BS11_Pos
 (11U)

	)

1774 
	#GPIO_BSRR_BS11_Msk
 (0x1UL << 
GPIO_BSRR_BS11_Pos
Ë

	)

1775 
	#GPIO_BSRR_BS11
 
GPIO_BSRR_BS11_Msk


	)

1776 
	#GPIO_BSRR_BS12_Pos
 (12U)

	)

1777 
	#GPIO_BSRR_BS12_Msk
 (0x1UL << 
GPIO_BSRR_BS12_Pos
Ë

	)

1778 
	#GPIO_BSRR_BS12
 
GPIO_BSRR_BS12_Msk


	)

1779 
	#GPIO_BSRR_BS13_Pos
 (13U)

	)

1780 
	#GPIO_BSRR_BS13_Msk
 (0x1UL << 
GPIO_BSRR_BS13_Pos
Ë

	)

1781 
	#GPIO_BSRR_BS13
 
GPIO_BSRR_BS13_Msk


	)

1782 
	#GPIO_BSRR_BS14_Pos
 (14U)

	)

1783 
	#GPIO_BSRR_BS14_Msk
 (0x1UL << 
GPIO_BSRR_BS14_Pos
Ë

	)

1784 
	#GPIO_BSRR_BS14
 
GPIO_BSRR_BS14_Msk


	)

1785 
	#GPIO_BSRR_BS15_Pos
 (15U)

	)

1786 
	#GPIO_BSRR_BS15_Msk
 (0x1UL << 
GPIO_BSRR_BS15_Pos
Ë

	)

1787 
	#GPIO_BSRR_BS15
 
GPIO_BSRR_BS15_Msk


	)

1789 
	#GPIO_BSRR_BR0_Pos
 (16U)

	)

1790 
	#GPIO_BSRR_BR0_Msk
 (0x1UL << 
GPIO_BSRR_BR0_Pos
Ë

	)

1791 
	#GPIO_BSRR_BR0
 
GPIO_BSRR_BR0_Msk


	)

1792 
	#GPIO_BSRR_BR1_Pos
 (17U)

	)

1793 
	#GPIO_BSRR_BR1_Msk
 (0x1UL << 
GPIO_BSRR_BR1_Pos
Ë

	)

1794 
	#GPIO_BSRR_BR1
 
GPIO_BSRR_BR1_Msk


	)

1795 
	#GPIO_BSRR_BR2_Pos
 (18U)

	)

1796 
	#GPIO_BSRR_BR2_Msk
 (0x1UL << 
GPIO_BSRR_BR2_Pos
Ë

	)

1797 
	#GPIO_BSRR_BR2
 
GPIO_BSRR_BR2_Msk


	)

1798 
	#GPIO_BSRR_BR3_Pos
 (19U)

	)

1799 
	#GPIO_BSRR_BR3_Msk
 (0x1UL << 
GPIO_BSRR_BR3_Pos
Ë

	)

1800 
	#GPIO_BSRR_BR3
 
GPIO_BSRR_BR3_Msk


	)

1801 
	#GPIO_BSRR_BR4_Pos
 (20U)

	)

1802 
	#GPIO_BSRR_BR4_Msk
 (0x1UL << 
GPIO_BSRR_BR4_Pos
Ë

	)

1803 
	#GPIO_BSRR_BR4
 
GPIO_BSRR_BR4_Msk


	)

1804 
	#GPIO_BSRR_BR5_Pos
 (21U)

	)

1805 
	#GPIO_BSRR_BR5_Msk
 (0x1UL << 
GPIO_BSRR_BR5_Pos
Ë

	)

1806 
	#GPIO_BSRR_BR5
 
GPIO_BSRR_BR5_Msk


	)

1807 
	#GPIO_BSRR_BR6_Pos
 (22U)

	)

1808 
	#GPIO_BSRR_BR6_Msk
 (0x1UL << 
GPIO_BSRR_BR6_Pos
Ë

	)

1809 
	#GPIO_BSRR_BR6
 
GPIO_BSRR_BR6_Msk


	)

1810 
	#GPIO_BSRR_BR7_Pos
 (23U)

	)

1811 
	#GPIO_BSRR_BR7_Msk
 (0x1UL << 
GPIO_BSRR_BR7_Pos
Ë

	)

1812 
	#GPIO_BSRR_BR7
 
GPIO_BSRR_BR7_Msk


	)

1813 
	#GPIO_BSRR_BR8_Pos
 (24U)

	)

1814 
	#GPIO_BSRR_BR8_Msk
 (0x1UL << 
GPIO_BSRR_BR8_Pos
Ë

	)

1815 
	#GPIO_BSRR_BR8
 
GPIO_BSRR_BR8_Msk


	)

1816 
	#GPIO_BSRR_BR9_Pos
 (25U)

	)

1817 
	#GPIO_BSRR_BR9_Msk
 (0x1UL << 
GPIO_BSRR_BR9_Pos
Ë

	)

1818 
	#GPIO_BSRR_BR9
 
GPIO_BSRR_BR9_Msk


	)

1819 
	#GPIO_BSRR_BR10_Pos
 (26U)

	)

1820 
	#GPIO_BSRR_BR10_Msk
 (0x1UL << 
GPIO_BSRR_BR10_Pos
Ë

	)

1821 
	#GPIO_BSRR_BR10
 
GPIO_BSRR_BR10_Msk


	)

1822 
	#GPIO_BSRR_BR11_Pos
 (27U)

	)

1823 
	#GPIO_BSRR_BR11_Msk
 (0x1UL << 
GPIO_BSRR_BR11_Pos
Ë

	)

1824 
	#GPIO_BSRR_BR11
 
GPIO_BSRR_BR11_Msk


	)

1825 
	#GPIO_BSRR_BR12_Pos
 (28U)

	)

1826 
	#GPIO_BSRR_BR12_Msk
 (0x1UL << 
GPIO_BSRR_BR12_Pos
Ë

	)

1827 
	#GPIO_BSRR_BR12
 
GPIO_BSRR_BR12_Msk


	)

1828 
	#GPIO_BSRR_BR13_Pos
 (29U)

	)

1829 
	#GPIO_BSRR_BR13_Msk
 (0x1UL << 
GPIO_BSRR_BR13_Pos
Ë

	)

1830 
	#GPIO_BSRR_BR13
 
GPIO_BSRR_BR13_Msk


	)

1831 
	#GPIO_BSRR_BR14_Pos
 (30U)

	)

1832 
	#GPIO_BSRR_BR14_Msk
 (0x1UL << 
GPIO_BSRR_BR14_Pos
Ë

	)

1833 
	#GPIO_BSRR_BR14
 
GPIO_BSRR_BR14_Msk


	)

1834 
	#GPIO_BSRR_BR15_Pos
 (31U)

	)

1835 
	#GPIO_BSRR_BR15_Msk
 (0x1UL << 
GPIO_BSRR_BR15_Pos
Ë

	)

1836 
	#GPIO_BSRR_BR15
 
GPIO_BSRR_BR15_Msk


	)

1839 
	#GPIO_BRR_BR0_Pos
 (0U)

	)

1840 
	#GPIO_BRR_BR0_Msk
 (0x1UL << 
GPIO_BRR_BR0_Pos
Ë

	)

1841 
	#GPIO_BRR_BR0
 
GPIO_BRR_BR0_Msk


	)

1842 
	#GPIO_BRR_BR1_Pos
 (1U)

	)

1843 
	#GPIO_BRR_BR1_Msk
 (0x1UL << 
GPIO_BRR_BR1_Pos
Ë

	)

1844 
	#GPIO_BRR_BR1
 
GPIO_BRR_BR1_Msk


	)

1845 
	#GPIO_BRR_BR2_Pos
 (2U)

	)

1846 
	#GPIO_BRR_BR2_Msk
 (0x1UL << 
GPIO_BRR_BR2_Pos
Ë

	)

1847 
	#GPIO_BRR_BR2
 
GPIO_BRR_BR2_Msk


	)

1848 
	#GPIO_BRR_BR3_Pos
 (3U)

	)

1849 
	#GPIO_BRR_BR3_Msk
 (0x1UL << 
GPIO_BRR_BR3_Pos
Ë

	)

1850 
	#GPIO_BRR_BR3
 
GPIO_BRR_BR3_Msk


	)

1851 
	#GPIO_BRR_BR4_Pos
 (4U)

	)

1852 
	#GPIO_BRR_BR4_Msk
 (0x1UL << 
GPIO_BRR_BR4_Pos
Ë

	)

1853 
	#GPIO_BRR_BR4
 
GPIO_BRR_BR4_Msk


	)

1854 
	#GPIO_BRR_BR5_Pos
 (5U)

	)

1855 
	#GPIO_BRR_BR5_Msk
 (0x1UL << 
GPIO_BRR_BR5_Pos
Ë

	)

1856 
	#GPIO_BRR_BR5
 
GPIO_BRR_BR5_Msk


	)

1857 
	#GPIO_BRR_BR6_Pos
 (6U)

	)

1858 
	#GPIO_BRR_BR6_Msk
 (0x1UL << 
GPIO_BRR_BR6_Pos
Ë

	)

1859 
	#GPIO_BRR_BR6
 
GPIO_BRR_BR6_Msk


	)

1860 
	#GPIO_BRR_BR7_Pos
 (7U)

	)

1861 
	#GPIO_BRR_BR7_Msk
 (0x1UL << 
GPIO_BRR_BR7_Pos
Ë

	)

1862 
	#GPIO_BRR_BR7
 
GPIO_BRR_BR7_Msk


	)

1863 
	#GPIO_BRR_BR8_Pos
 (8U)

	)

1864 
	#GPIO_BRR_BR8_Msk
 (0x1UL << 
GPIO_BRR_BR8_Pos
Ë

	)

1865 
	#GPIO_BRR_BR8
 
GPIO_BRR_BR8_Msk


	)

1866 
	#GPIO_BRR_BR9_Pos
 (9U)

	)

1867 
	#GPIO_BRR_BR9_Msk
 (0x1UL << 
GPIO_BRR_BR9_Pos
Ë

	)

1868 
	#GPIO_BRR_BR9
 
GPIO_BRR_BR9_Msk


	)

1869 
	#GPIO_BRR_BR10_Pos
 (10U)

	)

1870 
	#GPIO_BRR_BR10_Msk
 (0x1UL << 
GPIO_BRR_BR10_Pos
Ë

	)

1871 
	#GPIO_BRR_BR10
 
GPIO_BRR_BR10_Msk


	)

1872 
	#GPIO_BRR_BR11_Pos
 (11U)

	)

1873 
	#GPIO_BRR_BR11_Msk
 (0x1UL << 
GPIO_BRR_BR11_Pos
Ë

	)

1874 
	#GPIO_BRR_BR11
 
GPIO_BRR_BR11_Msk


	)

1875 
	#GPIO_BRR_BR12_Pos
 (12U)

	)

1876 
	#GPIO_BRR_BR12_Msk
 (0x1UL << 
GPIO_BRR_BR12_Pos
Ë

	)

1877 
	#GPIO_BRR_BR12
 
GPIO_BRR_BR12_Msk


	)

1878 
	#GPIO_BRR_BR13_Pos
 (13U)

	)

1879 
	#GPIO_BRR_BR13_Msk
 (0x1UL << 
GPIO_BRR_BR13_Pos
Ë

	)

1880 
	#GPIO_BRR_BR13
 
GPIO_BRR_BR13_Msk


	)

1881 
	#GPIO_BRR_BR14_Pos
 (14U)

	)

1882 
	#GPIO_BRR_BR14_Msk
 (0x1UL << 
GPIO_BRR_BR14_Pos
Ë

	)

1883 
	#GPIO_BRR_BR14
 
GPIO_BRR_BR14_Msk


	)

1884 
	#GPIO_BRR_BR15_Pos
 (15U)

	)

1885 
	#GPIO_BRR_BR15_Msk
 (0x1UL << 
GPIO_BRR_BR15_Pos
Ë

	)

1886 
	#GPIO_BRR_BR15
 
GPIO_BRR_BR15_Msk


	)

1889 
	#GPIO_LCKR_LCK0_Pos
 (0U)

	)

1890 
	#GPIO_LCKR_LCK0_Msk
 (0x1UL << 
GPIO_LCKR_LCK0_Pos
Ë

	)

1891 
	#GPIO_LCKR_LCK0
 
GPIO_LCKR_LCK0_Msk


	)

1892 
	#GPIO_LCKR_LCK1_Pos
 (1U)

	)

1893 
	#GPIO_LCKR_LCK1_Msk
 (0x1UL << 
GPIO_LCKR_LCK1_Pos
Ë

	)

1894 
	#GPIO_LCKR_LCK1
 
GPIO_LCKR_LCK1_Msk


	)

1895 
	#GPIO_LCKR_LCK2_Pos
 (2U)

	)

1896 
	#GPIO_LCKR_LCK2_Msk
 (0x1UL << 
GPIO_LCKR_LCK2_Pos
Ë

	)

1897 
	#GPIO_LCKR_LCK2
 
GPIO_LCKR_LCK2_Msk


	)

1898 
	#GPIO_LCKR_LCK3_Pos
 (3U)

	)

1899 
	#GPIO_LCKR_LCK3_Msk
 (0x1UL << 
GPIO_LCKR_LCK3_Pos
Ë

	)

1900 
	#GPIO_LCKR_LCK3
 
GPIO_LCKR_LCK3_Msk


	)

1901 
	#GPIO_LCKR_LCK4_Pos
 (4U)

	)

1902 
	#GPIO_LCKR_LCK4_Msk
 (0x1UL << 
GPIO_LCKR_LCK4_Pos
Ë

	)

1903 
	#GPIO_LCKR_LCK4
 
GPIO_LCKR_LCK4_Msk


	)

1904 
	#GPIO_LCKR_LCK5_Pos
 (5U)

	)

1905 
	#GPIO_LCKR_LCK5_Msk
 (0x1UL << 
GPIO_LCKR_LCK5_Pos
Ë

	)

1906 
	#GPIO_LCKR_LCK5
 
GPIO_LCKR_LCK5_Msk


	)

1907 
	#GPIO_LCKR_LCK6_Pos
 (6U)

	)

1908 
	#GPIO_LCKR_LCK6_Msk
 (0x1UL << 
GPIO_LCKR_LCK6_Pos
Ë

	)

1909 
	#GPIO_LCKR_LCK6
 
GPIO_LCKR_LCK6_Msk


	)

1910 
	#GPIO_LCKR_LCK7_Pos
 (7U)

	)

1911 
	#GPIO_LCKR_LCK7_Msk
 (0x1UL << 
GPIO_LCKR_LCK7_Pos
Ë

	)

1912 
	#GPIO_LCKR_LCK7
 
GPIO_LCKR_LCK7_Msk


	)

1913 
	#GPIO_LCKR_LCK8_Pos
 (8U)

	)

1914 
	#GPIO_LCKR_LCK8_Msk
 (0x1UL << 
GPIO_LCKR_LCK8_Pos
Ë

	)

1915 
	#GPIO_LCKR_LCK8
 
GPIO_LCKR_LCK8_Msk


	)

1916 
	#GPIO_LCKR_LCK9_Pos
 (9U)

	)

1917 
	#GPIO_LCKR_LCK9_Msk
 (0x1UL << 
GPIO_LCKR_LCK9_Pos
Ë

	)

1918 
	#GPIO_LCKR_LCK9
 
GPIO_LCKR_LCK9_Msk


	)

1919 
	#GPIO_LCKR_LCK10_Pos
 (10U)

	)

1920 
	#GPIO_LCKR_LCK10_Msk
 (0x1UL << 
GPIO_LCKR_LCK10_Pos
Ë

	)

1921 
	#GPIO_LCKR_LCK10
 
GPIO_LCKR_LCK10_Msk


	)

1922 
	#GPIO_LCKR_LCK11_Pos
 (11U)

	)

1923 
	#GPIO_LCKR_LCK11_Msk
 (0x1UL << 
GPIO_LCKR_LCK11_Pos
Ë

	)

1924 
	#GPIO_LCKR_LCK11
 
GPIO_LCKR_LCK11_Msk


	)

1925 
	#GPIO_LCKR_LCK12_Pos
 (12U)

	)

1926 
	#GPIO_LCKR_LCK12_Msk
 (0x1UL << 
GPIO_LCKR_LCK12_Pos
Ë

	)

1927 
	#GPIO_LCKR_LCK12
 
GPIO_LCKR_LCK12_Msk


	)

1928 
	#GPIO_LCKR_LCK13_Pos
 (13U)

	)

1929 
	#GPIO_LCKR_LCK13_Msk
 (0x1UL << 
GPIO_LCKR_LCK13_Pos
Ë

	)

1930 
	#GPIO_LCKR_LCK13
 
GPIO_LCKR_LCK13_Msk


	)

1931 
	#GPIO_LCKR_LCK14_Pos
 (14U)

	)

1932 
	#GPIO_LCKR_LCK14_Msk
 (0x1UL << 
GPIO_LCKR_LCK14_Pos
Ë

	)

1933 
	#GPIO_LCKR_LCK14
 
GPIO_LCKR_LCK14_Msk


	)

1934 
	#GPIO_LCKR_LCK15_Pos
 (15U)

	)

1935 
	#GPIO_LCKR_LCK15_Msk
 (0x1UL << 
GPIO_LCKR_LCK15_Pos
Ë

	)

1936 
	#GPIO_LCKR_LCK15
 
GPIO_LCKR_LCK15_Msk


	)

1937 
	#GPIO_LCKR_LCKK_Pos
 (16U)

	)

1938 
	#GPIO_LCKR_LCKK_Msk
 (0x1UL << 
GPIO_LCKR_LCKK_Pos
Ë

	)

1939 
	#GPIO_LCKR_LCKK
 
GPIO_LCKR_LCKK_Msk


	)

1944 
	#AFIO_EVCR_PIN_Pos
 (0U)

	)

1945 
	#AFIO_EVCR_PIN_Msk
 (0xFUL << 
AFIO_EVCR_PIN_Pos
Ë

	)

1946 
	#AFIO_EVCR_PIN
 
AFIO_EVCR_PIN_Msk


	)

1947 
	#AFIO_EVCR_PIN_0
 (0x1UL << 
AFIO_EVCR_PIN_Pos
Ë

	)

1948 
	#AFIO_EVCR_PIN_1
 (0x2UL << 
AFIO_EVCR_PIN_Pos
Ë

	)

1949 
	#AFIO_EVCR_PIN_2
 (0x4UL << 
AFIO_EVCR_PIN_Pos
Ë

	)

1950 
	#AFIO_EVCR_PIN_3
 (0x8UL << 
AFIO_EVCR_PIN_Pos
Ë

	)

1953 
	#AFIO_EVCR_PIN_PX0
 0x00000000U

	)

1954 
	#AFIO_EVCR_PIN_PX1_Pos
 (0U)

	)

1955 
	#AFIO_EVCR_PIN_PX1_Msk
 (0x1UL << 
AFIO_EVCR_PIN_PX1_Pos
Ë

	)

1956 
	#AFIO_EVCR_PIN_PX1
 
AFIO_EVCR_PIN_PX1_Msk


	)

1957 
	#AFIO_EVCR_PIN_PX2_Pos
 (1U)

	)

1958 
	#AFIO_EVCR_PIN_PX2_Msk
 (0x1UL << 
AFIO_EVCR_PIN_PX2_Pos
Ë

	)

1959 
	#AFIO_EVCR_PIN_PX2
 
AFIO_EVCR_PIN_PX2_Msk


	)

1960 
	#AFIO_EVCR_PIN_PX3_Pos
 (0U)

	)

1961 
	#AFIO_EVCR_PIN_PX3_Msk
 (0x3UL << 
AFIO_EVCR_PIN_PX3_Pos
Ë

	)

1962 
	#AFIO_EVCR_PIN_PX3
 
AFIO_EVCR_PIN_PX3_Msk


	)

1963 
	#AFIO_EVCR_PIN_PX4_Pos
 (2U)

	)

1964 
	#AFIO_EVCR_PIN_PX4_Msk
 (0x1UL << 
AFIO_EVCR_PIN_PX4_Pos
Ë

	)

1965 
	#AFIO_EVCR_PIN_PX4
 
AFIO_EVCR_PIN_PX4_Msk


	)

1966 
	#AFIO_EVCR_PIN_PX5_Pos
 (0U)

	)

1967 
	#AFIO_EVCR_PIN_PX5_Msk
 (0x5UL << 
AFIO_EVCR_PIN_PX5_Pos
Ë

	)

1968 
	#AFIO_EVCR_PIN_PX5
 
AFIO_EVCR_PIN_PX5_Msk


	)

1969 
	#AFIO_EVCR_PIN_PX6_Pos
 (1U)

	)

1970 
	#AFIO_EVCR_PIN_PX6_Msk
 (0x3UL << 
AFIO_EVCR_PIN_PX6_Pos
Ë

	)

1971 
	#AFIO_EVCR_PIN_PX6
 
AFIO_EVCR_PIN_PX6_Msk


	)

1972 
	#AFIO_EVCR_PIN_PX7_Pos
 (0U)

	)

1973 
	#AFIO_EVCR_PIN_PX7_Msk
 (0x7UL << 
AFIO_EVCR_PIN_PX7_Pos
Ë

	)

1974 
	#AFIO_EVCR_PIN_PX7
 
AFIO_EVCR_PIN_PX7_Msk


	)

1975 
	#AFIO_EVCR_PIN_PX8_Pos
 (3U)

	)

1976 
	#AFIO_EVCR_PIN_PX8_Msk
 (0x1UL << 
AFIO_EVCR_PIN_PX8_Pos
Ë

	)

1977 
	#AFIO_EVCR_PIN_PX8
 
AFIO_EVCR_PIN_PX8_Msk


	)

1978 
	#AFIO_EVCR_PIN_PX9_Pos
 (0U)

	)

1979 
	#AFIO_EVCR_PIN_PX9_Msk
 (0x9UL << 
AFIO_EVCR_PIN_PX9_Pos
Ë

	)

1980 
	#AFIO_EVCR_PIN_PX9
 
AFIO_EVCR_PIN_PX9_Msk


	)

1981 
	#AFIO_EVCR_PIN_PX10_Pos
 (1U)

	)

1982 
	#AFIO_EVCR_PIN_PX10_Msk
 (0x5UL << 
AFIO_EVCR_PIN_PX10_Pos
Ë

	)

1983 
	#AFIO_EVCR_PIN_PX10
 
AFIO_EVCR_PIN_PX10_Msk


	)

1984 
	#AFIO_EVCR_PIN_PX11_Pos
 (0U)

	)

1985 
	#AFIO_EVCR_PIN_PX11_Msk
 (0xBUL << 
AFIO_EVCR_PIN_PX11_Pos
Ë

	)

1986 
	#AFIO_EVCR_PIN_PX11
 
AFIO_EVCR_PIN_PX11_Msk


	)

1987 
	#AFIO_EVCR_PIN_PX12_Pos
 (2U)

	)

1988 
	#AFIO_EVCR_PIN_PX12_Msk
 (0x3UL << 
AFIO_EVCR_PIN_PX12_Pos
Ë

	)

1989 
	#AFIO_EVCR_PIN_PX12
 
AFIO_EVCR_PIN_PX12_Msk


	)

1990 
	#AFIO_EVCR_PIN_PX13_Pos
 (0U)

	)

1991 
	#AFIO_EVCR_PIN_PX13_Msk
 (0xDUL << 
AFIO_EVCR_PIN_PX13_Pos
Ë

	)

1992 
	#AFIO_EVCR_PIN_PX13
 
AFIO_EVCR_PIN_PX13_Msk


	)

1993 
	#AFIO_EVCR_PIN_PX14_Pos
 (1U)

	)

1994 
	#AFIO_EVCR_PIN_PX14_Msk
 (0x7UL << 
AFIO_EVCR_PIN_PX14_Pos
Ë

	)

1995 
	#AFIO_EVCR_PIN_PX14
 
AFIO_EVCR_PIN_PX14_Msk


	)

1996 
	#AFIO_EVCR_PIN_PX15_Pos
 (0U)

	)

1997 
	#AFIO_EVCR_PIN_PX15_Msk
 (0xFUL << 
AFIO_EVCR_PIN_PX15_Pos
Ë

	)

1998 
	#AFIO_EVCR_PIN_PX15
 
AFIO_EVCR_PIN_PX15_Msk


	)

2000 
	#AFIO_EVCR_PORT_Pos
 (4U)

	)

2001 
	#AFIO_EVCR_PORT_Msk
 (0x7UL << 
AFIO_EVCR_PORT_Pos
Ë

	)

2002 
	#AFIO_EVCR_PORT
 
AFIO_EVCR_PORT_Msk


	)

2003 
	#AFIO_EVCR_PORT_0
 (0x1UL << 
AFIO_EVCR_PORT_Pos
Ë

	)

2004 
	#AFIO_EVCR_PORT_1
 (0x2UL << 
AFIO_EVCR_PORT_Pos
Ë

	)

2005 
	#AFIO_EVCR_PORT_2
 (0x4UL << 
AFIO_EVCR_PORT_Pos
Ë

	)

2008 
	#AFIO_EVCR_PORT_PA
 0x00000000

	)

2009 
	#AFIO_EVCR_PORT_PB_Pos
 (4U)

	)

2010 
	#AFIO_EVCR_PORT_PB_Msk
 (0x1UL << 
AFIO_EVCR_PORT_PB_Pos
Ë

	)

2011 
	#AFIO_EVCR_PORT_PB
 
AFIO_EVCR_PORT_PB_Msk


	)

2012 
	#AFIO_EVCR_PORT_PC_Pos
 (5U)

	)

2013 
	#AFIO_EVCR_PORT_PC_Msk
 (0x1UL << 
AFIO_EVCR_PORT_PC_Pos
Ë

	)

2014 
	#AFIO_EVCR_PORT_PC
 
AFIO_EVCR_PORT_PC_Msk


	)

2015 
	#AFIO_EVCR_PORT_PD_Pos
 (4U)

	)

2016 
	#AFIO_EVCR_PORT_PD_Msk
 (0x3UL << 
AFIO_EVCR_PORT_PD_Pos
Ë

	)

2017 
	#AFIO_EVCR_PORT_PD
 
AFIO_EVCR_PORT_PD_Msk


	)

2018 
	#AFIO_EVCR_PORT_PE_Pos
 (6U)

	)

2019 
	#AFIO_EVCR_PORT_PE_Msk
 (0x1UL << 
AFIO_EVCR_PORT_PE_Pos
Ë

	)

2020 
	#AFIO_EVCR_PORT_PE
 
AFIO_EVCR_PORT_PE_Msk


	)

2022 
	#AFIO_EVCR_EVOE_Pos
 (7U)

	)

2023 
	#AFIO_EVCR_EVOE_Msk
 (0x1UL << 
AFIO_EVCR_EVOE_Pos
Ë

	)

2024 
	#AFIO_EVCR_EVOE
 
AFIO_EVCR_EVOE_Msk


	)

2027 
	#AFIO_MAPR_SPI1_REMAP_Pos
 (0U)

	)

2028 
	#AFIO_MAPR_SPI1_REMAP_Msk
 (0x1UL << 
AFIO_MAPR_SPI1_REMAP_Pos
Ë

	)

2029 
	#AFIO_MAPR_SPI1_REMAP
 
AFIO_MAPR_SPI1_REMAP_Msk


	)

2030 
	#AFIO_MAPR_I2C1_REMAP_Pos
 (1U)

	)

2031 
	#AFIO_MAPR_I2C1_REMAP_Msk
 (0x1UL << 
AFIO_MAPR_I2C1_REMAP_Pos
Ë

	)

2032 
	#AFIO_MAPR_I2C1_REMAP
 
AFIO_MAPR_I2C1_REMAP_Msk


	)

2033 
	#AFIO_MAPR_USART1_REMAP_Pos
 (2U)

	)

2034 
	#AFIO_MAPR_USART1_REMAP_Msk
 (0x1UL << 
AFIO_MAPR_USART1_REMAP_Pos
Ë

	)

2035 
	#AFIO_MAPR_USART1_REMAP
 
AFIO_MAPR_USART1_REMAP_Msk


	)

2036 
	#AFIO_MAPR_USART2_REMAP_Pos
 (3U)

	)

2037 
	#AFIO_MAPR_USART2_REMAP_Msk
 (0x1UL << 
AFIO_MAPR_USART2_REMAP_Pos
Ë

	)

2038 
	#AFIO_MAPR_USART2_REMAP
 
AFIO_MAPR_USART2_REMAP_Msk


	)

2040 
	#AFIO_MAPR_USART3_REMAP_Pos
 (4U)

	)

2041 
	#AFIO_MAPR_USART3_REMAP_Msk
 (0x3UL << 
AFIO_MAPR_USART3_REMAP_Pos
Ë

	)

2042 
	#AFIO_MAPR_USART3_REMAP
 
AFIO_MAPR_USART3_REMAP_Msk


	)

2043 
	#AFIO_MAPR_USART3_REMAP_0
 (0x1UL << 
AFIO_MAPR_USART3_REMAP_Pos
Ë

	)

2044 
	#AFIO_MAPR_USART3_REMAP_1
 (0x2UL << 
AFIO_MAPR_USART3_REMAP_Pos
Ë

	)

2047 
	#AFIO_MAPR_USART3_REMAP_NOREMAP
 0x00000000U

	)

2048 
	#AFIO_MAPR_USART3_REMAP_PARTIALREMAP_Pos
 (4U)

	)

2049 
	#AFIO_MAPR_USART3_REMAP_PARTIALREMAP_Msk
 (0x1UL << 
AFIO_MAPR_USART3_REMAP_PARTIALREMAP_Pos
Ë

	)

2050 
	#AFIO_MAPR_USART3_REMAP_PARTIALREMAP
 
AFIO_MAPR_USART3_REMAP_PARTIALREMAP_Msk


	)

2051 
	#AFIO_MAPR_USART3_REMAP_FULLREMAP_Pos
 (4U)

	)

2052 
	#AFIO_MAPR_USART3_REMAP_FULLREMAP_Msk
 (0x3UL << 
AFIO_MAPR_USART3_REMAP_FULLREMAP_Pos
Ë

	)

2053 
	#AFIO_MAPR_USART3_REMAP_FULLREMAP
 
AFIO_MAPR_USART3_REMAP_FULLREMAP_Msk


	)

2055 
	#AFIO_MAPR_TIM1_REMAP_Pos
 (6U)

	)

2056 
	#AFIO_MAPR_TIM1_REMAP_Msk
 (0x3UL << 
AFIO_MAPR_TIM1_REMAP_Pos
Ë

	)

2057 
	#AFIO_MAPR_TIM1_REMAP
 
AFIO_MAPR_TIM1_REMAP_Msk


	)

2058 
	#AFIO_MAPR_TIM1_REMAP_0
 (0x1UL << 
AFIO_MAPR_TIM1_REMAP_Pos
Ë

	)

2059 
	#AFIO_MAPR_TIM1_REMAP_1
 (0x2UL << 
AFIO_MAPR_TIM1_REMAP_Pos
Ë

	)

2062 
	#AFIO_MAPR_TIM1_REMAP_NOREMAP
 0x00000000U

	)

2063 
	#AFIO_MAPR_TIM1_REMAP_PARTIALREMAP_Pos
 (6U)

	)

2064 
	#AFIO_MAPR_TIM1_REMAP_PARTIALREMAP_Msk
 (0x1UL << 
AFIO_MAPR_TIM1_REMAP_PARTIALREMAP_Pos
Ë

	)

2065 
	#AFIO_MAPR_TIM1_REMAP_PARTIALREMAP
 
AFIO_MAPR_TIM1_REMAP_PARTIALREMAP_Msk


	)

2066 
	#AFIO_MAPR_TIM1_REMAP_FULLREMAP_Pos
 (6U)

	)

2067 
	#AFIO_MAPR_TIM1_REMAP_FULLREMAP_Msk
 (0x3UL << 
AFIO_MAPR_TIM1_REMAP_FULLREMAP_Pos
Ë

	)

2068 
	#AFIO_MAPR_TIM1_REMAP_FULLREMAP
 
AFIO_MAPR_TIM1_REMAP_FULLREMAP_Msk


	)

2070 
	#AFIO_MAPR_TIM2_REMAP_Pos
 (8U)

	)

2071 
	#AFIO_MAPR_TIM2_REMAP_Msk
 (0x3UL << 
AFIO_MAPR_TIM2_REMAP_Pos
Ë

	)

2072 
	#AFIO_MAPR_TIM2_REMAP
 
AFIO_MAPR_TIM2_REMAP_Msk


	)

2073 
	#AFIO_MAPR_TIM2_REMAP_0
 (0x1UL << 
AFIO_MAPR_TIM2_REMAP_Pos
Ë

	)

2074 
	#AFIO_MAPR_TIM2_REMAP_1
 (0x2UL << 
AFIO_MAPR_TIM2_REMAP_Pos
Ë

	)

2077 
	#AFIO_MAPR_TIM2_REMAP_NOREMAP
 0x00000000U

	)

2078 
	#AFIO_MAPR_TIM2_REMAP_PARTIALREMAP1_Pos
 (8U)

	)

2079 
	#AFIO_MAPR_TIM2_REMAP_PARTIALREMAP1_Msk
 (0x1UL << 
AFIO_MAPR_TIM2_REMAP_PARTIALREMAP1_Pos
Ë

	)

2080 
	#AFIO_MAPR_TIM2_REMAP_PARTIALREMAP1
 
AFIO_MAPR_TIM2_REMAP_PARTIALREMAP1_Msk


	)

2081 
	#AFIO_MAPR_TIM2_REMAP_PARTIALREMAP2_Pos
 (9U)

	)

2082 
	#AFIO_MAPR_TIM2_REMAP_PARTIALREMAP2_Msk
 (0x1UL << 
AFIO_MAPR_TIM2_REMAP_PARTIALREMAP2_Pos
Ë

	)

2083 
	#AFIO_MAPR_TIM2_REMAP_PARTIALREMAP2
 
AFIO_MAPR_TIM2_REMAP_PARTIALREMAP2_Msk


	)

2084 
	#AFIO_MAPR_TIM2_REMAP_FULLREMAP_Pos
 (8U)

	)

2085 
	#AFIO_MAPR_TIM2_REMAP_FULLREMAP_Msk
 (0x3UL << 
AFIO_MAPR_TIM2_REMAP_FULLREMAP_Pos
Ë

	)

2086 
	#AFIO_MAPR_TIM2_REMAP_FULLREMAP
 
AFIO_MAPR_TIM2_REMAP_FULLREMAP_Msk


	)

2088 
	#AFIO_MAPR_TIM3_REMAP_Pos
 (10U)

	)

2089 
	#AFIO_MAPR_TIM3_REMAP_Msk
 (0x3UL << 
AFIO_MAPR_TIM3_REMAP_Pos
Ë

	)

2090 
	#AFIO_MAPR_TIM3_REMAP
 
AFIO_MAPR_TIM3_REMAP_Msk


	)

2091 
	#AFIO_MAPR_TIM3_REMAP_0
 (0x1UL << 
AFIO_MAPR_TIM3_REMAP_Pos
Ë

	)

2092 
	#AFIO_MAPR_TIM3_REMAP_1
 (0x2UL << 
AFIO_MAPR_TIM3_REMAP_Pos
Ë

	)

2095 
	#AFIO_MAPR_TIM3_REMAP_NOREMAP
 0x00000000U

	)

2096 
	#AFIO_MAPR_TIM3_REMAP_PARTIALREMAP_Pos
 (11U)

	)

2097 
	#AFIO_MAPR_TIM3_REMAP_PARTIALREMAP_Msk
 (0x1UL << 
AFIO_MAPR_TIM3_REMAP_PARTIALREMAP_Pos
Ë

	)

2098 
	#AFIO_MAPR_TIM3_REMAP_PARTIALREMAP
 
AFIO_MAPR_TIM3_REMAP_PARTIALREMAP_Msk


	)

2099 
	#AFIO_MAPR_TIM3_REMAP_FULLREMAP_Pos
 (10U)

	)

2100 
	#AFIO_MAPR_TIM3_REMAP_FULLREMAP_Msk
 (0x3UL << 
AFIO_MAPR_TIM3_REMAP_FULLREMAP_Pos
Ë

	)

2101 
	#AFIO_MAPR_TIM3_REMAP_FULLREMAP
 
AFIO_MAPR_TIM3_REMAP_FULLREMAP_Msk


	)

2103 
	#AFIO_MAPR_TIM4_REMAP_Pos
 (12U)

	)

2104 
	#AFIO_MAPR_TIM4_REMAP_Msk
 (0x1UL << 
AFIO_MAPR_TIM4_REMAP_Pos
Ë

	)

2105 
	#AFIO_MAPR_TIM4_REMAP
 
AFIO_MAPR_TIM4_REMAP_Msk


	)

2107 
	#AFIO_MAPR_CAN_REMAP_Pos
 (13U)

	)

2108 
	#AFIO_MAPR_CAN_REMAP_Msk
 (0x3UL << 
AFIO_MAPR_CAN_REMAP_Pos
Ë

	)

2109 
	#AFIO_MAPR_CAN_REMAP
 
AFIO_MAPR_CAN_REMAP_Msk


	)

2110 
	#AFIO_MAPR_CAN_REMAP_0
 (0x1UL << 
AFIO_MAPR_CAN_REMAP_Pos
Ë

	)

2111 
	#AFIO_MAPR_CAN_REMAP_1
 (0x2UL << 
AFIO_MAPR_CAN_REMAP_Pos
Ë

	)

2114 
	#AFIO_MAPR_CAN_REMAP_REMAP1
 0x00000000U

	)

2115 
	#AFIO_MAPR_CAN_REMAP_REMAP2_Pos
 (14U)

	)

2116 
	#AFIO_MAPR_CAN_REMAP_REMAP2_Msk
 (0x1UL << 
AFIO_MAPR_CAN_REMAP_REMAP2_Pos
Ë

	)

2117 
	#AFIO_MAPR_CAN_REMAP_REMAP2
 
AFIO_MAPR_CAN_REMAP_REMAP2_Msk


	)

2118 
	#AFIO_MAPR_CAN_REMAP_REMAP3_Pos
 (13U)

	)

2119 
	#AFIO_MAPR_CAN_REMAP_REMAP3_Msk
 (0x3UL << 
AFIO_MAPR_CAN_REMAP_REMAP3_Pos
Ë

	)

2120 
	#AFIO_MAPR_CAN_REMAP_REMAP3
 
AFIO_MAPR_CAN_REMAP_REMAP3_Msk


	)

2122 
	#AFIO_MAPR_PD01_REMAP_Pos
 (15U)

	)

2123 
	#AFIO_MAPR_PD01_REMAP_Msk
 (0x1UL << 
AFIO_MAPR_PD01_REMAP_Pos
Ë

	)

2124 
	#AFIO_MAPR_PD01_REMAP
 
AFIO_MAPR_PD01_REMAP_Msk


	)

2127 
	#AFIO_MAPR_SWJ_CFG_Pos
 (24U)

	)

2128 
	#AFIO_MAPR_SWJ_CFG_Msk
 (0x7UL << 
AFIO_MAPR_SWJ_CFG_Pos
Ë

	)

2129 
	#AFIO_MAPR_SWJ_CFG
 
AFIO_MAPR_SWJ_CFG_Msk


	)

2130 
	#AFIO_MAPR_SWJ_CFG_0
 (0x1UL << 
AFIO_MAPR_SWJ_CFG_Pos
Ë

	)

2131 
	#AFIO_MAPR_SWJ_CFG_1
 (0x2UL << 
AFIO_MAPR_SWJ_CFG_Pos
Ë

	)

2132 
	#AFIO_MAPR_SWJ_CFG_2
 (0x4UL << 
AFIO_MAPR_SWJ_CFG_Pos
Ë

	)

2134 
	#AFIO_MAPR_SWJ_CFG_RESET
 0x00000000U

	)

2135 
	#AFIO_MAPR_SWJ_CFG_NOJNTRST_Pos
 (24U)

	)

2136 
	#AFIO_MAPR_SWJ_CFG_NOJNTRST_Msk
 (0x1UL << 
AFIO_MAPR_SWJ_CFG_NOJNTRST_Pos
Ë

	)

2137 
	#AFIO_MAPR_SWJ_CFG_NOJNTRST
 
AFIO_MAPR_SWJ_CFG_NOJNTRST_Msk


	)

2138 
	#AFIO_MAPR_SWJ_CFG_JTAGDISABLE_Pos
 (25U)

	)

2139 
	#AFIO_MAPR_SWJ_CFG_JTAGDISABLE_Msk
 (0x1UL << 
AFIO_MAPR_SWJ_CFG_JTAGDISABLE_Pos
Ë

	)

2140 
	#AFIO_MAPR_SWJ_CFG_JTAGDISABLE
 
AFIO_MAPR_SWJ_CFG_JTAGDISABLE_Msk


	)

2141 
	#AFIO_MAPR_SWJ_CFG_DISABLE_Pos
 (26U)

	)

2142 
	#AFIO_MAPR_SWJ_CFG_DISABLE_Msk
 (0x1UL << 
AFIO_MAPR_SWJ_CFG_DISABLE_Pos
Ë

	)

2143 
	#AFIO_MAPR_SWJ_CFG_DISABLE
 
AFIO_MAPR_SWJ_CFG_DISABLE_Msk


	)

2147 
	#AFIO_EXTICR1_EXTI0_Pos
 (0U)

	)

2148 
	#AFIO_EXTICR1_EXTI0_Msk
 (0xFUL << 
AFIO_EXTICR1_EXTI0_Pos
Ë

	)

2149 
	#AFIO_EXTICR1_EXTI0
 
AFIO_EXTICR1_EXTI0_Msk


	)

2150 
	#AFIO_EXTICR1_EXTI1_Pos
 (4U)

	)

2151 
	#AFIO_EXTICR1_EXTI1_Msk
 (0xFUL << 
AFIO_EXTICR1_EXTI1_Pos
Ë

	)

2152 
	#AFIO_EXTICR1_EXTI1
 
AFIO_EXTICR1_EXTI1_Msk


	)

2153 
	#AFIO_EXTICR1_EXTI2_Pos
 (8U)

	)

2154 
	#AFIO_EXTICR1_EXTI2_Msk
 (0xFUL << 
AFIO_EXTICR1_EXTI2_Pos
Ë

	)

2155 
	#AFIO_EXTICR1_EXTI2
 
AFIO_EXTICR1_EXTI2_Msk


	)

2156 
	#AFIO_EXTICR1_EXTI3_Pos
 (12U)

	)

2157 
	#AFIO_EXTICR1_EXTI3_Msk
 (0xFUL << 
AFIO_EXTICR1_EXTI3_Pos
Ë

	)

2158 
	#AFIO_EXTICR1_EXTI3
 
AFIO_EXTICR1_EXTI3_Msk


	)

2161 
	#AFIO_EXTICR1_EXTI0_PA
 0x00000000U

	)

2162 
	#AFIO_EXTICR1_EXTI0_PB_Pos
 (0U)

	)

2163 
	#AFIO_EXTICR1_EXTI0_PB_Msk
 (0x1UL << 
AFIO_EXTICR1_EXTI0_PB_Pos
Ë

	)

2164 
	#AFIO_EXTICR1_EXTI0_PB
 
AFIO_EXTICR1_EXTI0_PB_Msk


	)

2165 
	#AFIO_EXTICR1_EXTI0_PC_Pos
 (1U)

	)

2166 
	#AFIO_EXTICR1_EXTI0_PC_Msk
 (0x1UL << 
AFIO_EXTICR1_EXTI0_PC_Pos
Ë

	)

2167 
	#AFIO_EXTICR1_EXTI0_PC
 
AFIO_EXTICR1_EXTI0_PC_Msk


	)

2168 
	#AFIO_EXTICR1_EXTI0_PD_Pos
 (0U)

	)

2169 
	#AFIO_EXTICR1_EXTI0_PD_Msk
 (0x3UL << 
AFIO_EXTICR1_EXTI0_PD_Pos
Ë

	)

2170 
	#AFIO_EXTICR1_EXTI0_PD
 
AFIO_EXTICR1_EXTI0_PD_Msk


	)

2171 
	#AFIO_EXTICR1_EXTI0_PE_Pos
 (2U)

	)

2172 
	#AFIO_EXTICR1_EXTI0_PE_Msk
 (0x1UL << 
AFIO_EXTICR1_EXTI0_PE_Pos
Ë

	)

2173 
	#AFIO_EXTICR1_EXTI0_PE
 
AFIO_EXTICR1_EXTI0_PE_Msk


	)

2174 
	#AFIO_EXTICR1_EXTI0_PF_Pos
 (0U)

	)

2175 
	#AFIO_EXTICR1_EXTI0_PF_Msk
 (0x5UL << 
AFIO_EXTICR1_EXTI0_PF_Pos
Ë

	)

2176 
	#AFIO_EXTICR1_EXTI0_PF
 
AFIO_EXTICR1_EXTI0_PF_Msk


	)

2177 
	#AFIO_EXTICR1_EXTI0_PG_Pos
 (1U)

	)

2178 
	#AFIO_EXTICR1_EXTI0_PG_Msk
 (0x3UL << 
AFIO_EXTICR1_EXTI0_PG_Pos
Ë

	)

2179 
	#AFIO_EXTICR1_EXTI0_PG
 
AFIO_EXTICR1_EXTI0_PG_Msk


	)

2182 
	#AFIO_EXTICR1_EXTI1_PA
 0x00000000U

	)

2183 
	#AFIO_EXTICR1_EXTI1_PB_Pos
 (4U)

	)

2184 
	#AFIO_EXTICR1_EXTI1_PB_Msk
 (0x1UL << 
AFIO_EXTICR1_EXTI1_PB_Pos
Ë

	)

2185 
	#AFIO_EXTICR1_EXTI1_PB
 
AFIO_EXTICR1_EXTI1_PB_Msk


	)

2186 
	#AFIO_EXTICR1_EXTI1_PC_Pos
 (5U)

	)

2187 
	#AFIO_EXTICR1_EXTI1_PC_Msk
 (0x1UL << 
AFIO_EXTICR1_EXTI1_PC_Pos
Ë

	)

2188 
	#AFIO_EXTICR1_EXTI1_PC
 
AFIO_EXTICR1_EXTI1_PC_Msk


	)

2189 
	#AFIO_EXTICR1_EXTI1_PD_Pos
 (4U)

	)

2190 
	#AFIO_EXTICR1_EXTI1_PD_Msk
 (0x3UL << 
AFIO_EXTICR1_EXTI1_PD_Pos
Ë

	)

2191 
	#AFIO_EXTICR1_EXTI1_PD
 
AFIO_EXTICR1_EXTI1_PD_Msk


	)

2192 
	#AFIO_EXTICR1_EXTI1_PE_Pos
 (6U)

	)

2193 
	#AFIO_EXTICR1_EXTI1_PE_Msk
 (0x1UL << 
AFIO_EXTICR1_EXTI1_PE_Pos
Ë

	)

2194 
	#AFIO_EXTICR1_EXTI1_PE
 
AFIO_EXTICR1_EXTI1_PE_Msk


	)

2195 
	#AFIO_EXTICR1_EXTI1_PF_Pos
 (4U)

	)

2196 
	#AFIO_EXTICR1_EXTI1_PF_Msk
 (0x5UL << 
AFIO_EXTICR1_EXTI1_PF_Pos
Ë

	)

2197 
	#AFIO_EXTICR1_EXTI1_PF
 
AFIO_EXTICR1_EXTI1_PF_Msk


	)

2198 
	#AFIO_EXTICR1_EXTI1_PG_Pos
 (5U)

	)

2199 
	#AFIO_EXTICR1_EXTI1_PG_Msk
 (0x3UL << 
AFIO_EXTICR1_EXTI1_PG_Pos
Ë

	)

2200 
	#AFIO_EXTICR1_EXTI1_PG
 
AFIO_EXTICR1_EXTI1_PG_Msk


	)

2203 
	#AFIO_EXTICR1_EXTI2_PA
 0x00000000U

	)

2204 
	#AFIO_EXTICR1_EXTI2_PB_Pos
 (8U)

	)

2205 
	#AFIO_EXTICR1_EXTI2_PB_Msk
 (0x1UL << 
AFIO_EXTICR1_EXTI2_PB_Pos
Ë

	)

2206 
	#AFIO_EXTICR1_EXTI2_PB
 
AFIO_EXTICR1_EXTI2_PB_Msk


	)

2207 
	#AFIO_EXTICR1_EXTI2_PC_Pos
 (9U)

	)

2208 
	#AFIO_EXTICR1_EXTI2_PC_Msk
 (0x1UL << 
AFIO_EXTICR1_EXTI2_PC_Pos
Ë

	)

2209 
	#AFIO_EXTICR1_EXTI2_PC
 
AFIO_EXTICR1_EXTI2_PC_Msk


	)

2210 
	#AFIO_EXTICR1_EXTI2_PD_Pos
 (8U)

	)

2211 
	#AFIO_EXTICR1_EXTI2_PD_Msk
 (0x3UL << 
AFIO_EXTICR1_EXTI2_PD_Pos
Ë

	)

2212 
	#AFIO_EXTICR1_EXTI2_PD
 
AFIO_EXTICR1_EXTI2_PD_Msk


	)

2213 
	#AFIO_EXTICR1_EXTI2_PE_Pos
 (10U)

	)

2214 
	#AFIO_EXTICR1_EXTI2_PE_Msk
 (0x1UL << 
AFIO_EXTICR1_EXTI2_PE_Pos
Ë

	)

2215 
	#AFIO_EXTICR1_EXTI2_PE
 
AFIO_EXTICR1_EXTI2_PE_Msk


	)

2216 
	#AFIO_EXTICR1_EXTI2_PF_Pos
 (8U)

	)

2217 
	#AFIO_EXTICR1_EXTI2_PF_Msk
 (0x5UL << 
AFIO_EXTICR1_EXTI2_PF_Pos
Ë

	)

2218 
	#AFIO_EXTICR1_EXTI2_PF
 
AFIO_EXTICR1_EXTI2_PF_Msk


	)

2219 
	#AFIO_EXTICR1_EXTI2_PG_Pos
 (9U)

	)

2220 
	#AFIO_EXTICR1_EXTI2_PG_Msk
 (0x3UL << 
AFIO_EXTICR1_EXTI2_PG_Pos
Ë

	)

2221 
	#AFIO_EXTICR1_EXTI2_PG
 
AFIO_EXTICR1_EXTI2_PG_Msk


	)

2224 
	#AFIO_EXTICR1_EXTI3_PA
 0x00000000U

	)

2225 
	#AFIO_EXTICR1_EXTI3_PB_Pos
 (12U)

	)

2226 
	#AFIO_EXTICR1_EXTI3_PB_Msk
 (0x1UL << 
AFIO_EXTICR1_EXTI3_PB_Pos
Ë

	)

2227 
	#AFIO_EXTICR1_EXTI3_PB
 
AFIO_EXTICR1_EXTI3_PB_Msk


	)

2228 
	#AFIO_EXTICR1_EXTI3_PC_Pos
 (13U)

	)

2229 
	#AFIO_EXTICR1_EXTI3_PC_Msk
 (0x1UL << 
AFIO_EXTICR1_EXTI3_PC_Pos
Ë

	)

2230 
	#AFIO_EXTICR1_EXTI3_PC
 
AFIO_EXTICR1_EXTI3_PC_Msk


	)

2231 
	#AFIO_EXTICR1_EXTI3_PD_Pos
 (12U)

	)

2232 
	#AFIO_EXTICR1_EXTI3_PD_Msk
 (0x3UL << 
AFIO_EXTICR1_EXTI3_PD_Pos
Ë

	)

2233 
	#AFIO_EXTICR1_EXTI3_PD
 
AFIO_EXTICR1_EXTI3_PD_Msk


	)

2234 
	#AFIO_EXTICR1_EXTI3_PE_Pos
 (14U)

	)

2235 
	#AFIO_EXTICR1_EXTI3_PE_Msk
 (0x1UL << 
AFIO_EXTICR1_EXTI3_PE_Pos
Ë

	)

2236 
	#AFIO_EXTICR1_EXTI3_PE
 
AFIO_EXTICR1_EXTI3_PE_Msk


	)

2237 
	#AFIO_EXTICR1_EXTI3_PF_Pos
 (12U)

	)

2238 
	#AFIO_EXTICR1_EXTI3_PF_Msk
 (0x5UL << 
AFIO_EXTICR1_EXTI3_PF_Pos
Ë

	)

2239 
	#AFIO_EXTICR1_EXTI3_PF
 
AFIO_EXTICR1_EXTI3_PF_Msk


	)

2240 
	#AFIO_EXTICR1_EXTI3_PG_Pos
 (13U)

	)

2241 
	#AFIO_EXTICR1_EXTI3_PG_Msk
 (0x3UL << 
AFIO_EXTICR1_EXTI3_PG_Pos
Ë

	)

2242 
	#AFIO_EXTICR1_EXTI3_PG
 
AFIO_EXTICR1_EXTI3_PG_Msk


	)

2245 
	#AFIO_EXTICR2_EXTI4_Pos
 (0U)

	)

2246 
	#AFIO_EXTICR2_EXTI4_Msk
 (0xFUL << 
AFIO_EXTICR2_EXTI4_Pos
Ë

	)

2247 
	#AFIO_EXTICR2_EXTI4
 
AFIO_EXTICR2_EXTI4_Msk


	)

2248 
	#AFIO_EXTICR2_EXTI5_Pos
 (4U)

	)

2249 
	#AFIO_EXTICR2_EXTI5_Msk
 (0xFUL << 
AFIO_EXTICR2_EXTI5_Pos
Ë

	)

2250 
	#AFIO_EXTICR2_EXTI5
 
AFIO_EXTICR2_EXTI5_Msk


	)

2251 
	#AFIO_EXTICR2_EXTI6_Pos
 (8U)

	)

2252 
	#AFIO_EXTICR2_EXTI6_Msk
 (0xFUL << 
AFIO_EXTICR2_EXTI6_Pos
Ë

	)

2253 
	#AFIO_EXTICR2_EXTI6
 
AFIO_EXTICR2_EXTI6_Msk


	)

2254 
	#AFIO_EXTICR2_EXTI7_Pos
 (12U)

	)

2255 
	#AFIO_EXTICR2_EXTI7_Msk
 (0xFUL << 
AFIO_EXTICR2_EXTI7_Pos
Ë

	)

2256 
	#AFIO_EXTICR2_EXTI7
 
AFIO_EXTICR2_EXTI7_Msk


	)

2259 
	#AFIO_EXTICR2_EXTI4_PA
 0x00000000U

	)

2260 
	#AFIO_EXTICR2_EXTI4_PB_Pos
 (0U)

	)

2261 
	#AFIO_EXTICR2_EXTI4_PB_Msk
 (0x1UL << 
AFIO_EXTICR2_EXTI4_PB_Pos
Ë

	)

2262 
	#AFIO_EXTICR2_EXTI4_PB
 
AFIO_EXTICR2_EXTI4_PB_Msk


	)

2263 
	#AFIO_EXTICR2_EXTI4_PC_Pos
 (1U)

	)

2264 
	#AFIO_EXTICR2_EXTI4_PC_Msk
 (0x1UL << 
AFIO_EXTICR2_EXTI4_PC_Pos
Ë

	)

2265 
	#AFIO_EXTICR2_EXTI4_PC
 
AFIO_EXTICR2_EXTI4_PC_Msk


	)

2266 
	#AFIO_EXTICR2_EXTI4_PD_Pos
 (0U)

	)

2267 
	#AFIO_EXTICR2_EXTI4_PD_Msk
 (0x3UL << 
AFIO_EXTICR2_EXTI4_PD_Pos
Ë

	)

2268 
	#AFIO_EXTICR2_EXTI4_PD
 
AFIO_EXTICR2_EXTI4_PD_Msk


	)

2269 
	#AFIO_EXTICR2_EXTI4_PE_Pos
 (2U)

	)

2270 
	#AFIO_EXTICR2_EXTI4_PE_Msk
 (0x1UL << 
AFIO_EXTICR2_EXTI4_PE_Pos
Ë

	)

2271 
	#AFIO_EXTICR2_EXTI4_PE
 
AFIO_EXTICR2_EXTI4_PE_Msk


	)

2272 
	#AFIO_EXTICR2_EXTI4_PF_Pos
 (0U)

	)

2273 
	#AFIO_EXTICR2_EXTI4_PF_Msk
 (0x5UL << 
AFIO_EXTICR2_EXTI4_PF_Pos
Ë

	)

2274 
	#AFIO_EXTICR2_EXTI4_PF
 
AFIO_EXTICR2_EXTI4_PF_Msk


	)

2275 
	#AFIO_EXTICR2_EXTI4_PG_Pos
 (1U)

	)

2276 
	#AFIO_EXTICR2_EXTI4_PG_Msk
 (0x3UL << 
AFIO_EXTICR2_EXTI4_PG_Pos
Ë

	)

2277 
	#AFIO_EXTICR2_EXTI4_PG
 
AFIO_EXTICR2_EXTI4_PG_Msk


	)

2280 
	#AFIO_EXTICR2_EXTI5_PA
 0x00000000U

	)

2281 
	#AFIO_EXTICR2_EXTI5_PB_Pos
 (4U)

	)

2282 
	#AFIO_EXTICR2_EXTI5_PB_Msk
 (0x1UL << 
AFIO_EXTICR2_EXTI5_PB_Pos
Ë

	)

2283 
	#AFIO_EXTICR2_EXTI5_PB
 
AFIO_EXTICR2_EXTI5_PB_Msk


	)

2284 
	#AFIO_EXTICR2_EXTI5_PC_Pos
 (5U)

	)

2285 
	#AFIO_EXTICR2_EXTI5_PC_Msk
 (0x1UL << 
AFIO_EXTICR2_EXTI5_PC_Pos
Ë

	)

2286 
	#AFIO_EXTICR2_EXTI5_PC
 
AFIO_EXTICR2_EXTI5_PC_Msk


	)

2287 
	#AFIO_EXTICR2_EXTI5_PD_Pos
 (4U)

	)

2288 
	#AFIO_EXTICR2_EXTI5_PD_Msk
 (0x3UL << 
AFIO_EXTICR2_EXTI5_PD_Pos
Ë

	)

2289 
	#AFIO_EXTICR2_EXTI5_PD
 
AFIO_EXTICR2_EXTI5_PD_Msk


	)

2290 
	#AFIO_EXTICR2_EXTI5_PE_Pos
 (6U)

	)

2291 
	#AFIO_EXTICR2_EXTI5_PE_Msk
 (0x1UL << 
AFIO_EXTICR2_EXTI5_PE_Pos
Ë

	)

2292 
	#AFIO_EXTICR2_EXTI5_PE
 
AFIO_EXTICR2_EXTI5_PE_Msk


	)

2293 
	#AFIO_EXTICR2_EXTI5_PF_Pos
 (4U)

	)

2294 
	#AFIO_EXTICR2_EXTI5_PF_Msk
 (0x5UL << 
AFIO_EXTICR2_EXTI5_PF_Pos
Ë

	)

2295 
	#AFIO_EXTICR2_EXTI5_PF
 
AFIO_EXTICR2_EXTI5_PF_Msk


	)

2296 
	#AFIO_EXTICR2_EXTI5_PG_Pos
 (5U)

	)

2297 
	#AFIO_EXTICR2_EXTI5_PG_Msk
 (0x3UL << 
AFIO_EXTICR2_EXTI5_PG_Pos
Ë

	)

2298 
	#AFIO_EXTICR2_EXTI5_PG
 
AFIO_EXTICR2_EXTI5_PG_Msk


	)

2301 
	#AFIO_EXTICR2_EXTI6_PA
 0x00000000U

	)

2302 
	#AFIO_EXTICR2_EXTI6_PB_Pos
 (8U)

	)

2303 
	#AFIO_EXTICR2_EXTI6_PB_Msk
 (0x1UL << 
AFIO_EXTICR2_EXTI6_PB_Pos
Ë

	)

2304 
	#AFIO_EXTICR2_EXTI6_PB
 
AFIO_EXTICR2_EXTI6_PB_Msk


	)

2305 
	#AFIO_EXTICR2_EXTI6_PC_Pos
 (9U)

	)

2306 
	#AFIO_EXTICR2_EXTI6_PC_Msk
 (0x1UL << 
AFIO_EXTICR2_EXTI6_PC_Pos
Ë

	)

2307 
	#AFIO_EXTICR2_EXTI6_PC
 
AFIO_EXTICR2_EXTI6_PC_Msk


	)

2308 
	#AFIO_EXTICR2_EXTI6_PD_Pos
 (8U)

	)

2309 
	#AFIO_EXTICR2_EXTI6_PD_Msk
 (0x3UL << 
AFIO_EXTICR2_EXTI6_PD_Pos
Ë

	)

2310 
	#AFIO_EXTICR2_EXTI6_PD
 
AFIO_EXTICR2_EXTI6_PD_Msk


	)

2311 
	#AFIO_EXTICR2_EXTI6_PE_Pos
 (10U)

	)

2312 
	#AFIO_EXTICR2_EXTI6_PE_Msk
 (0x1UL << 
AFIO_EXTICR2_EXTI6_PE_Pos
Ë

	)

2313 
	#AFIO_EXTICR2_EXTI6_PE
 
AFIO_EXTICR2_EXTI6_PE_Msk


	)

2314 
	#AFIO_EXTICR2_EXTI6_PF_Pos
 (8U)

	)

2315 
	#AFIO_EXTICR2_EXTI6_PF_Msk
 (0x5UL << 
AFIO_EXTICR2_EXTI6_PF_Pos
Ë

	)

2316 
	#AFIO_EXTICR2_EXTI6_PF
 
AFIO_EXTICR2_EXTI6_PF_Msk


	)

2317 
	#AFIO_EXTICR2_EXTI6_PG_Pos
 (9U)

	)

2318 
	#AFIO_EXTICR2_EXTI6_PG_Msk
 (0x3UL << 
AFIO_EXTICR2_EXTI6_PG_Pos
Ë

	)

2319 
	#AFIO_EXTICR2_EXTI6_PG
 
AFIO_EXTICR2_EXTI6_PG_Msk


	)

2322 
	#AFIO_EXTICR2_EXTI7_PA
 0x00000000U

	)

2323 
	#AFIO_EXTICR2_EXTI7_PB_Pos
 (12U)

	)

2324 
	#AFIO_EXTICR2_EXTI7_PB_Msk
 (0x1UL << 
AFIO_EXTICR2_EXTI7_PB_Pos
Ë

	)

2325 
	#AFIO_EXTICR2_EXTI7_PB
 
AFIO_EXTICR2_EXTI7_PB_Msk


	)

2326 
	#AFIO_EXTICR2_EXTI7_PC_Pos
 (13U)

	)

2327 
	#AFIO_EXTICR2_EXTI7_PC_Msk
 (0x1UL << 
AFIO_EXTICR2_EXTI7_PC_Pos
Ë

	)

2328 
	#AFIO_EXTICR2_EXTI7_PC
 
AFIO_EXTICR2_EXTI7_PC_Msk


	)

2329 
	#AFIO_EXTICR2_EXTI7_PD_Pos
 (12U)

	)

2330 
	#AFIO_EXTICR2_EXTI7_PD_Msk
 (0x3UL << 
AFIO_EXTICR2_EXTI7_PD_Pos
Ë

	)

2331 
	#AFIO_EXTICR2_EXTI7_PD
 
AFIO_EXTICR2_EXTI7_PD_Msk


	)

2332 
	#AFIO_EXTICR2_EXTI7_PE_Pos
 (14U)

	)

2333 
	#AFIO_EXTICR2_EXTI7_PE_Msk
 (0x1UL << 
AFIO_EXTICR2_EXTI7_PE_Pos
Ë

	)

2334 
	#AFIO_EXTICR2_EXTI7_PE
 
AFIO_EXTICR2_EXTI7_PE_Msk


	)

2335 
	#AFIO_EXTICR2_EXTI7_PF_Pos
 (12U)

	)

2336 
	#AFIO_EXTICR2_EXTI7_PF_Msk
 (0x5UL << 
AFIO_EXTICR2_EXTI7_PF_Pos
Ë

	)

2337 
	#AFIO_EXTICR2_EXTI7_PF
 
AFIO_EXTICR2_EXTI7_PF_Msk


	)

2338 
	#AFIO_EXTICR2_EXTI7_PG_Pos
 (13U)

	)

2339 
	#AFIO_EXTICR2_EXTI7_PG_Msk
 (0x3UL << 
AFIO_EXTICR2_EXTI7_PG_Pos
Ë

	)

2340 
	#AFIO_EXTICR2_EXTI7_PG
 
AFIO_EXTICR2_EXTI7_PG_Msk


	)

2343 
	#AFIO_EXTICR3_EXTI8_Pos
 (0U)

	)

2344 
	#AFIO_EXTICR3_EXTI8_Msk
 (0xFUL << 
AFIO_EXTICR3_EXTI8_Pos
Ë

	)

2345 
	#AFIO_EXTICR3_EXTI8
 
AFIO_EXTICR3_EXTI8_Msk


	)

2346 
	#AFIO_EXTICR3_EXTI9_Pos
 (4U)

	)

2347 
	#AFIO_EXTICR3_EXTI9_Msk
 (0xFUL << 
AFIO_EXTICR3_EXTI9_Pos
Ë

	)

2348 
	#AFIO_EXTICR3_EXTI9
 
AFIO_EXTICR3_EXTI9_Msk


	)

2349 
	#AFIO_EXTICR3_EXTI10_Pos
 (8U)

	)

2350 
	#AFIO_EXTICR3_EXTI10_Msk
 (0xFUL << 
AFIO_EXTICR3_EXTI10_Pos
Ë

	)

2351 
	#AFIO_EXTICR3_EXTI10
 
AFIO_EXTICR3_EXTI10_Msk


	)

2352 
	#AFIO_EXTICR3_EXTI11_Pos
 (12U)

	)

2353 
	#AFIO_EXTICR3_EXTI11_Msk
 (0xFUL << 
AFIO_EXTICR3_EXTI11_Pos
Ë

	)

2354 
	#AFIO_EXTICR3_EXTI11
 
AFIO_EXTICR3_EXTI11_Msk


	)

2357 
	#AFIO_EXTICR3_EXTI8_PA
 0x00000000U

	)

2358 
	#AFIO_EXTICR3_EXTI8_PB_Pos
 (0U)

	)

2359 
	#AFIO_EXTICR3_EXTI8_PB_Msk
 (0x1UL << 
AFIO_EXTICR3_EXTI8_PB_Pos
Ë

	)

2360 
	#AFIO_EXTICR3_EXTI8_PB
 
AFIO_EXTICR3_EXTI8_PB_Msk


	)

2361 
	#AFIO_EXTICR3_EXTI8_PC_Pos
 (1U)

	)

2362 
	#AFIO_EXTICR3_EXTI8_PC_Msk
 (0x1UL << 
AFIO_EXTICR3_EXTI8_PC_Pos
Ë

	)

2363 
	#AFIO_EXTICR3_EXTI8_PC
 
AFIO_EXTICR3_EXTI8_PC_Msk


	)

2364 
	#AFIO_EXTICR3_EXTI8_PD_Pos
 (0U)

	)

2365 
	#AFIO_EXTICR3_EXTI8_PD_Msk
 (0x3UL << 
AFIO_EXTICR3_EXTI8_PD_Pos
Ë

	)

2366 
	#AFIO_EXTICR3_EXTI8_PD
 
AFIO_EXTICR3_EXTI8_PD_Msk


	)

2367 
	#AFIO_EXTICR3_EXTI8_PE_Pos
 (2U)

	)

2368 
	#AFIO_EXTICR3_EXTI8_PE_Msk
 (0x1UL << 
AFIO_EXTICR3_EXTI8_PE_Pos
Ë

	)

2369 
	#AFIO_EXTICR3_EXTI8_PE
 
AFIO_EXTICR3_EXTI8_PE_Msk


	)

2370 
	#AFIO_EXTICR3_EXTI8_PF_Pos
 (0U)

	)

2371 
	#AFIO_EXTICR3_EXTI8_PF_Msk
 (0x5UL << 
AFIO_EXTICR3_EXTI8_PF_Pos
Ë

	)

2372 
	#AFIO_EXTICR3_EXTI8_PF
 
AFIO_EXTICR3_EXTI8_PF_Msk


	)

2373 
	#AFIO_EXTICR3_EXTI8_PG_Pos
 (1U)

	)

2374 
	#AFIO_EXTICR3_EXTI8_PG_Msk
 (0x3UL << 
AFIO_EXTICR3_EXTI8_PG_Pos
Ë

	)

2375 
	#AFIO_EXTICR3_EXTI8_PG
 
AFIO_EXTICR3_EXTI8_PG_Msk


	)

2378 
	#AFIO_EXTICR3_EXTI9_PA
 0x00000000U

	)

2379 
	#AFIO_EXTICR3_EXTI9_PB_Pos
 (4U)

	)

2380 
	#AFIO_EXTICR3_EXTI9_PB_Msk
 (0x1UL << 
AFIO_EXTICR3_EXTI9_PB_Pos
Ë

	)

2381 
	#AFIO_EXTICR3_EXTI9_PB
 
AFIO_EXTICR3_EXTI9_PB_Msk


	)

2382 
	#AFIO_EXTICR3_EXTI9_PC_Pos
 (5U)

	)

2383 
	#AFIO_EXTICR3_EXTI9_PC_Msk
 (0x1UL << 
AFIO_EXTICR3_EXTI9_PC_Pos
Ë

	)

2384 
	#AFIO_EXTICR3_EXTI9_PC
 
AFIO_EXTICR3_EXTI9_PC_Msk


	)

2385 
	#AFIO_EXTICR3_EXTI9_PD_Pos
 (4U)

	)

2386 
	#AFIO_EXTICR3_EXTI9_PD_Msk
 (0x3UL << 
AFIO_EXTICR3_EXTI9_PD_Pos
Ë

	)

2387 
	#AFIO_EXTICR3_EXTI9_PD
 
AFIO_EXTICR3_EXTI9_PD_Msk


	)

2388 
	#AFIO_EXTICR3_EXTI9_PE_Pos
 (6U)

	)

2389 
	#AFIO_EXTICR3_EXTI9_PE_Msk
 (0x1UL << 
AFIO_EXTICR3_EXTI9_PE_Pos
Ë

	)

2390 
	#AFIO_EXTICR3_EXTI9_PE
 
AFIO_EXTICR3_EXTI9_PE_Msk


	)

2391 
	#AFIO_EXTICR3_EXTI9_PF_Pos
 (4U)

	)

2392 
	#AFIO_EXTICR3_EXTI9_PF_Msk
 (0x5UL << 
AFIO_EXTICR3_EXTI9_PF_Pos
Ë

	)

2393 
	#AFIO_EXTICR3_EXTI9_PF
 
AFIO_EXTICR3_EXTI9_PF_Msk


	)

2394 
	#AFIO_EXTICR3_EXTI9_PG_Pos
 (5U)

	)

2395 
	#AFIO_EXTICR3_EXTI9_PG_Msk
 (0x3UL << 
AFIO_EXTICR3_EXTI9_PG_Pos
Ë

	)

2396 
	#AFIO_EXTICR3_EXTI9_PG
 
AFIO_EXTICR3_EXTI9_PG_Msk


	)

2399 
	#AFIO_EXTICR3_EXTI10_PA
 0x00000000U

	)

2400 
	#AFIO_EXTICR3_EXTI10_PB_Pos
 (8U)

	)

2401 
	#AFIO_EXTICR3_EXTI10_PB_Msk
 (0x1UL << 
AFIO_EXTICR3_EXTI10_PB_Pos
Ë

	)

2402 
	#AFIO_EXTICR3_EXTI10_PB
 
AFIO_EXTICR3_EXTI10_PB_Msk


	)

2403 
	#AFIO_EXTICR3_EXTI10_PC_Pos
 (9U)

	)

2404 
	#AFIO_EXTICR3_EXTI10_PC_Msk
 (0x1UL << 
AFIO_EXTICR3_EXTI10_PC_Pos
Ë

	)

2405 
	#AFIO_EXTICR3_EXTI10_PC
 
AFIO_EXTICR3_EXTI10_PC_Msk


	)

2406 
	#AFIO_EXTICR3_EXTI10_PD_Pos
 (8U)

	)

2407 
	#AFIO_EXTICR3_EXTI10_PD_Msk
 (0x3UL << 
AFIO_EXTICR3_EXTI10_PD_Pos
Ë

	)

2408 
	#AFIO_EXTICR3_EXTI10_PD
 
AFIO_EXTICR3_EXTI10_PD_Msk


	)

2409 
	#AFIO_EXTICR3_EXTI10_PE_Pos
 (10U)

	)

2410 
	#AFIO_EXTICR3_EXTI10_PE_Msk
 (0x1UL << 
AFIO_EXTICR3_EXTI10_PE_Pos
Ë

	)

2411 
	#AFIO_EXTICR3_EXTI10_PE
 
AFIO_EXTICR3_EXTI10_PE_Msk


	)

2412 
	#AFIO_EXTICR3_EXTI10_PF_Pos
 (8U)

	)

2413 
	#AFIO_EXTICR3_EXTI10_PF_Msk
 (0x5UL << 
AFIO_EXTICR3_EXTI10_PF_Pos
Ë

	)

2414 
	#AFIO_EXTICR3_EXTI10_PF
 
AFIO_EXTICR3_EXTI10_PF_Msk


	)

2415 
	#AFIO_EXTICR3_EXTI10_PG_Pos
 (9U)

	)

2416 
	#AFIO_EXTICR3_EXTI10_PG_Msk
 (0x3UL << 
AFIO_EXTICR3_EXTI10_PG_Pos
Ë

	)

2417 
	#AFIO_EXTICR3_EXTI10_PG
 
AFIO_EXTICR3_EXTI10_PG_Msk


	)

2420 
	#AFIO_EXTICR3_EXTI11_PA
 0x00000000U

	)

2421 
	#AFIO_EXTICR3_EXTI11_PB_Pos
 (12U)

	)

2422 
	#AFIO_EXTICR3_EXTI11_PB_Msk
 (0x1UL << 
AFIO_EXTICR3_EXTI11_PB_Pos
Ë

	)

2423 
	#AFIO_EXTICR3_EXTI11_PB
 
AFIO_EXTICR3_EXTI11_PB_Msk


	)

2424 
	#AFIO_EXTICR3_EXTI11_PC_Pos
 (13U)

	)

2425 
	#AFIO_EXTICR3_EXTI11_PC_Msk
 (0x1UL << 
AFIO_EXTICR3_EXTI11_PC_Pos
Ë

	)

2426 
	#AFIO_EXTICR3_EXTI11_PC
 
AFIO_EXTICR3_EXTI11_PC_Msk


	)

2427 
	#AFIO_EXTICR3_EXTI11_PD_Pos
 (12U)

	)

2428 
	#AFIO_EXTICR3_EXTI11_PD_Msk
 (0x3UL << 
AFIO_EXTICR3_EXTI11_PD_Pos
Ë

	)

2429 
	#AFIO_EXTICR3_EXTI11_PD
 
AFIO_EXTICR3_EXTI11_PD_Msk


	)

2430 
	#AFIO_EXTICR3_EXTI11_PE_Pos
 (14U)

	)

2431 
	#AFIO_EXTICR3_EXTI11_PE_Msk
 (0x1UL << 
AFIO_EXTICR3_EXTI11_PE_Pos
Ë

	)

2432 
	#AFIO_EXTICR3_EXTI11_PE
 
AFIO_EXTICR3_EXTI11_PE_Msk


	)

2433 
	#AFIO_EXTICR3_EXTI11_PF_Pos
 (12U)

	)

2434 
	#AFIO_EXTICR3_EXTI11_PF_Msk
 (0x5UL << 
AFIO_EXTICR3_EXTI11_PF_Pos
Ë

	)

2435 
	#AFIO_EXTICR3_EXTI11_PF
 
AFIO_EXTICR3_EXTI11_PF_Msk


	)

2436 
	#AFIO_EXTICR3_EXTI11_PG_Pos
 (13U)

	)

2437 
	#AFIO_EXTICR3_EXTI11_PG_Msk
 (0x3UL << 
AFIO_EXTICR3_EXTI11_PG_Pos
Ë

	)

2438 
	#AFIO_EXTICR3_EXTI11_PG
 
AFIO_EXTICR3_EXTI11_PG_Msk


	)

2441 
	#AFIO_EXTICR4_EXTI12_Pos
 (0U)

	)

2442 
	#AFIO_EXTICR4_EXTI12_Msk
 (0xFUL << 
AFIO_EXTICR4_EXTI12_Pos
Ë

	)

2443 
	#AFIO_EXTICR4_EXTI12
 
AFIO_EXTICR4_EXTI12_Msk


	)

2444 
	#AFIO_EXTICR4_EXTI13_Pos
 (4U)

	)

2445 
	#AFIO_EXTICR4_EXTI13_Msk
 (0xFUL << 
AFIO_EXTICR4_EXTI13_Pos
Ë

	)

2446 
	#AFIO_EXTICR4_EXTI13
 
AFIO_EXTICR4_EXTI13_Msk


	)

2447 
	#AFIO_EXTICR4_EXTI14_Pos
 (8U)

	)

2448 
	#AFIO_EXTICR4_EXTI14_Msk
 (0xFUL << 
AFIO_EXTICR4_EXTI14_Pos
Ë

	)

2449 
	#AFIO_EXTICR4_EXTI14
 
AFIO_EXTICR4_EXTI14_Msk


	)

2450 
	#AFIO_EXTICR4_EXTI15_Pos
 (12U)

	)

2451 
	#AFIO_EXTICR4_EXTI15_Msk
 (0xFUL << 
AFIO_EXTICR4_EXTI15_Pos
Ë

	)

2452 
	#AFIO_EXTICR4_EXTI15
 
AFIO_EXTICR4_EXTI15_Msk


	)

2455 
	#AFIO_EXTICR4_EXTI12_PA
 0x00000000U

	)

2456 
	#AFIO_EXTICR4_EXTI12_PB_Pos
 (0U)

	)

2457 
	#AFIO_EXTICR4_EXTI12_PB_Msk
 (0x1UL << 
AFIO_EXTICR4_EXTI12_PB_Pos
Ë

	)

2458 
	#AFIO_EXTICR4_EXTI12_PB
 
AFIO_EXTICR4_EXTI12_PB_Msk


	)

2459 
	#AFIO_EXTICR4_EXTI12_PC_Pos
 (1U)

	)

2460 
	#AFIO_EXTICR4_EXTI12_PC_Msk
 (0x1UL << 
AFIO_EXTICR4_EXTI12_PC_Pos
Ë

	)

2461 
	#AFIO_EXTICR4_EXTI12_PC
 
AFIO_EXTICR4_EXTI12_PC_Msk


	)

2462 
	#AFIO_EXTICR4_EXTI12_PD_Pos
 (0U)

	)

2463 
	#AFIO_EXTICR4_EXTI12_PD_Msk
 (0x3UL << 
AFIO_EXTICR4_EXTI12_PD_Pos
Ë

	)

2464 
	#AFIO_EXTICR4_EXTI12_PD
 
AFIO_EXTICR4_EXTI12_PD_Msk


	)

2465 
	#AFIO_EXTICR4_EXTI12_PE_Pos
 (2U)

	)

2466 
	#AFIO_EXTICR4_EXTI12_PE_Msk
 (0x1UL << 
AFIO_EXTICR4_EXTI12_PE_Pos
Ë

	)

2467 
	#AFIO_EXTICR4_EXTI12_PE
 
AFIO_EXTICR4_EXTI12_PE_Msk


	)

2468 
	#AFIO_EXTICR4_EXTI12_PF_Pos
 (0U)

	)

2469 
	#AFIO_EXTICR4_EXTI12_PF_Msk
 (0x5UL << 
AFIO_EXTICR4_EXTI12_PF_Pos
Ë

	)

2470 
	#AFIO_EXTICR4_EXTI12_PF
 
AFIO_EXTICR4_EXTI12_PF_Msk


	)

2471 
	#AFIO_EXTICR4_EXTI12_PG_Pos
 (1U)

	)

2472 
	#AFIO_EXTICR4_EXTI12_PG_Msk
 (0x3UL << 
AFIO_EXTICR4_EXTI12_PG_Pos
Ë

	)

2473 
	#AFIO_EXTICR4_EXTI12_PG
 
AFIO_EXTICR4_EXTI12_PG_Msk


	)

2476 
	#AFIO_EXTICR4_EXTI13_PA
 0x00000000U

	)

2477 
	#AFIO_EXTICR4_EXTI13_PB_Pos
 (4U)

	)

2478 
	#AFIO_EXTICR4_EXTI13_PB_Msk
 (0x1UL << 
AFIO_EXTICR4_EXTI13_PB_Pos
Ë

	)

2479 
	#AFIO_EXTICR4_EXTI13_PB
 
AFIO_EXTICR4_EXTI13_PB_Msk


	)

2480 
	#AFIO_EXTICR4_EXTI13_PC_Pos
 (5U)

	)

2481 
	#AFIO_EXTICR4_EXTI13_PC_Msk
 (0x1UL << 
AFIO_EXTICR4_EXTI13_PC_Pos
Ë

	)

2482 
	#AFIO_EXTICR4_EXTI13_PC
 
AFIO_EXTICR4_EXTI13_PC_Msk


	)

2483 
	#AFIO_EXTICR4_EXTI13_PD_Pos
 (4U)

	)

2484 
	#AFIO_EXTICR4_EXTI13_PD_Msk
 (0x3UL << 
AFIO_EXTICR4_EXTI13_PD_Pos
Ë

	)

2485 
	#AFIO_EXTICR4_EXTI13_PD
 
AFIO_EXTICR4_EXTI13_PD_Msk


	)

2486 
	#AFIO_EXTICR4_EXTI13_PE_Pos
 (6U)

	)

2487 
	#AFIO_EXTICR4_EXTI13_PE_Msk
 (0x1UL << 
AFIO_EXTICR4_EXTI13_PE_Pos
Ë

	)

2488 
	#AFIO_EXTICR4_EXTI13_PE
 
AFIO_EXTICR4_EXTI13_PE_Msk


	)

2489 
	#AFIO_EXTICR4_EXTI13_PF_Pos
 (4U)

	)

2490 
	#AFIO_EXTICR4_EXTI13_PF_Msk
 (0x5UL << 
AFIO_EXTICR4_EXTI13_PF_Pos
Ë

	)

2491 
	#AFIO_EXTICR4_EXTI13_PF
 
AFIO_EXTICR4_EXTI13_PF_Msk


	)

2492 
	#AFIO_EXTICR4_EXTI13_PG_Pos
 (5U)

	)

2493 
	#AFIO_EXTICR4_EXTI13_PG_Msk
 (0x3UL << 
AFIO_EXTICR4_EXTI13_PG_Pos
Ë

	)

2494 
	#AFIO_EXTICR4_EXTI13_PG
 
AFIO_EXTICR4_EXTI13_PG_Msk


	)

2497 
	#AFIO_EXTICR4_EXTI14_PA
 0x00000000U

	)

2498 
	#AFIO_EXTICR4_EXTI14_PB_Pos
 (8U)

	)

2499 
	#AFIO_EXTICR4_EXTI14_PB_Msk
 (0x1UL << 
AFIO_EXTICR4_EXTI14_PB_Pos
Ë

	)

2500 
	#AFIO_EXTICR4_EXTI14_PB
 
AFIO_EXTICR4_EXTI14_PB_Msk


	)

2501 
	#AFIO_EXTICR4_EXTI14_PC_Pos
 (9U)

	)

2502 
	#AFIO_EXTICR4_EXTI14_PC_Msk
 (0x1UL << 
AFIO_EXTICR4_EXTI14_PC_Pos
Ë

	)

2503 
	#AFIO_EXTICR4_EXTI14_PC
 
AFIO_EXTICR4_EXTI14_PC_Msk


	)

2504 
	#AFIO_EXTICR4_EXTI14_PD_Pos
 (8U)

	)

2505 
	#AFIO_EXTICR4_EXTI14_PD_Msk
 (0x3UL << 
AFIO_EXTICR4_EXTI14_PD_Pos
Ë

	)

2506 
	#AFIO_EXTICR4_EXTI14_PD
 
AFIO_EXTICR4_EXTI14_PD_Msk


	)

2507 
	#AFIO_EXTICR4_EXTI14_PE_Pos
 (10U)

	)

2508 
	#AFIO_EXTICR4_EXTI14_PE_Msk
 (0x1UL << 
AFIO_EXTICR4_EXTI14_PE_Pos
Ë

	)

2509 
	#AFIO_EXTICR4_EXTI14_PE
 
AFIO_EXTICR4_EXTI14_PE_Msk


	)

2510 
	#AFIO_EXTICR4_EXTI14_PF_Pos
 (8U)

	)

2511 
	#AFIO_EXTICR4_EXTI14_PF_Msk
 (0x5UL << 
AFIO_EXTICR4_EXTI14_PF_Pos
Ë

	)

2512 
	#AFIO_EXTICR4_EXTI14_PF
 
AFIO_EXTICR4_EXTI14_PF_Msk


	)

2513 
	#AFIO_EXTICR4_EXTI14_PG_Pos
 (9U)

	)

2514 
	#AFIO_EXTICR4_EXTI14_PG_Msk
 (0x3UL << 
AFIO_EXTICR4_EXTI14_PG_Pos
Ë

	)

2515 
	#AFIO_EXTICR4_EXTI14_PG
 
AFIO_EXTICR4_EXTI14_PG_Msk


	)

2518 
	#AFIO_EXTICR4_EXTI15_PA
 0x00000000U

	)

2519 
	#AFIO_EXTICR4_EXTI15_PB_Pos
 (12U)

	)

2520 
	#AFIO_EXTICR4_EXTI15_PB_Msk
 (0x1UL << 
AFIO_EXTICR4_EXTI15_PB_Pos
Ë

	)

2521 
	#AFIO_EXTICR4_EXTI15_PB
 
AFIO_EXTICR4_EXTI15_PB_Msk


	)

2522 
	#AFIO_EXTICR4_EXTI15_PC_Pos
 (13U)

	)

2523 
	#AFIO_EXTICR4_EXTI15_PC_Msk
 (0x1UL << 
AFIO_EXTICR4_EXTI15_PC_Pos
Ë

	)

2524 
	#AFIO_EXTICR4_EXTI15_PC
 
AFIO_EXTICR4_EXTI15_PC_Msk


	)

2525 
	#AFIO_EXTICR4_EXTI15_PD_Pos
 (12U)

	)

2526 
	#AFIO_EXTICR4_EXTI15_PD_Msk
 (0x3UL << 
AFIO_EXTICR4_EXTI15_PD_Pos
Ë

	)

2527 
	#AFIO_EXTICR4_EXTI15_PD
 
AFIO_EXTICR4_EXTI15_PD_Msk


	)

2528 
	#AFIO_EXTICR4_EXTI15_PE_Pos
 (14U)

	)

2529 
	#AFIO_EXTICR4_EXTI15_PE_Msk
 (0x1UL << 
AFIO_EXTICR4_EXTI15_PE_Pos
Ë

	)

2530 
	#AFIO_EXTICR4_EXTI15_PE
 
AFIO_EXTICR4_EXTI15_PE_Msk


	)

2531 
	#AFIO_EXTICR4_EXTI15_PF_Pos
 (12U)

	)

2532 
	#AFIO_EXTICR4_EXTI15_PF_Msk
 (0x5UL << 
AFIO_EXTICR4_EXTI15_PF_Pos
Ë

	)

2533 
	#AFIO_EXTICR4_EXTI15_PF
 
AFIO_EXTICR4_EXTI15_PF_Msk


	)

2534 
	#AFIO_EXTICR4_EXTI15_PG_Pos
 (13U)

	)

2535 
	#AFIO_EXTICR4_EXTI15_PG_Msk
 (0x3UL << 
AFIO_EXTICR4_EXTI15_PG_Pos
Ë

	)

2536 
	#AFIO_EXTICR4_EXTI15_PG
 
AFIO_EXTICR4_EXTI15_PG_Msk


	)

2549 
	#EXTI_IMR_MR0_Pos
 (0U)

	)

2550 
	#EXTI_IMR_MR0_Msk
 (0x1UL << 
EXTI_IMR_MR0_Pos
Ë

	)

2551 
	#EXTI_IMR_MR0
 
EXTI_IMR_MR0_Msk


	)

2552 
	#EXTI_IMR_MR1_Pos
 (1U)

	)

2553 
	#EXTI_IMR_MR1_Msk
 (0x1UL << 
EXTI_IMR_MR1_Pos
Ë

	)

2554 
	#EXTI_IMR_MR1
 
EXTI_IMR_MR1_Msk


	)

2555 
	#EXTI_IMR_MR2_Pos
 (2U)

	)

2556 
	#EXTI_IMR_MR2_Msk
 (0x1UL << 
EXTI_IMR_MR2_Pos
Ë

	)

2557 
	#EXTI_IMR_MR2
 
EXTI_IMR_MR2_Msk


	)

2558 
	#EXTI_IMR_MR3_Pos
 (3U)

	)

2559 
	#EXTI_IMR_MR3_Msk
 (0x1UL << 
EXTI_IMR_MR3_Pos
Ë

	)

2560 
	#EXTI_IMR_MR3
 
EXTI_IMR_MR3_Msk


	)

2561 
	#EXTI_IMR_MR4_Pos
 (4U)

	)

2562 
	#EXTI_IMR_MR4_Msk
 (0x1UL << 
EXTI_IMR_MR4_Pos
Ë

	)

2563 
	#EXTI_IMR_MR4
 
EXTI_IMR_MR4_Msk


	)

2564 
	#EXTI_IMR_MR5_Pos
 (5U)

	)

2565 
	#EXTI_IMR_MR5_Msk
 (0x1UL << 
EXTI_IMR_MR5_Pos
Ë

	)

2566 
	#EXTI_IMR_MR5
 
EXTI_IMR_MR5_Msk


	)

2567 
	#EXTI_IMR_MR6_Pos
 (6U)

	)

2568 
	#EXTI_IMR_MR6_Msk
 (0x1UL << 
EXTI_IMR_MR6_Pos
Ë

	)

2569 
	#EXTI_IMR_MR6
 
EXTI_IMR_MR6_Msk


	)

2570 
	#EXTI_IMR_MR7_Pos
 (7U)

	)

2571 
	#EXTI_IMR_MR7_Msk
 (0x1UL << 
EXTI_IMR_MR7_Pos
Ë

	)

2572 
	#EXTI_IMR_MR7
 
EXTI_IMR_MR7_Msk


	)

2573 
	#EXTI_IMR_MR8_Pos
 (8U)

	)

2574 
	#EXTI_IMR_MR8_Msk
 (0x1UL << 
EXTI_IMR_MR8_Pos
Ë

	)

2575 
	#EXTI_IMR_MR8
 
EXTI_IMR_MR8_Msk


	)

2576 
	#EXTI_IMR_MR9_Pos
 (9U)

	)

2577 
	#EXTI_IMR_MR9_Msk
 (0x1UL << 
EXTI_IMR_MR9_Pos
Ë

	)

2578 
	#EXTI_IMR_MR9
 
EXTI_IMR_MR9_Msk


	)

2579 
	#EXTI_IMR_MR10_Pos
 (10U)

	)

2580 
	#EXTI_IMR_MR10_Msk
 (0x1UL << 
EXTI_IMR_MR10_Pos
Ë

	)

2581 
	#EXTI_IMR_MR10
 
EXTI_IMR_MR10_Msk


	)

2582 
	#EXTI_IMR_MR11_Pos
 (11U)

	)

2583 
	#EXTI_IMR_MR11_Msk
 (0x1UL << 
EXTI_IMR_MR11_Pos
Ë

	)

2584 
	#EXTI_IMR_MR11
 
EXTI_IMR_MR11_Msk


	)

2585 
	#EXTI_IMR_MR12_Pos
 (12U)

	)

2586 
	#EXTI_IMR_MR12_Msk
 (0x1UL << 
EXTI_IMR_MR12_Pos
Ë

	)

2587 
	#EXTI_IMR_MR12
 
EXTI_IMR_MR12_Msk


	)

2588 
	#EXTI_IMR_MR13_Pos
 (13U)

	)

2589 
	#EXTI_IMR_MR13_Msk
 (0x1UL << 
EXTI_IMR_MR13_Pos
Ë

	)

2590 
	#EXTI_IMR_MR13
 
EXTI_IMR_MR13_Msk


	)

2591 
	#EXTI_IMR_MR14_Pos
 (14U)

	)

2592 
	#EXTI_IMR_MR14_Msk
 (0x1UL << 
EXTI_IMR_MR14_Pos
Ë

	)

2593 
	#EXTI_IMR_MR14
 
EXTI_IMR_MR14_Msk


	)

2594 
	#EXTI_IMR_MR15_Pos
 (15U)

	)

2595 
	#EXTI_IMR_MR15_Msk
 (0x1UL << 
EXTI_IMR_MR15_Pos
Ë

	)

2596 
	#EXTI_IMR_MR15
 
EXTI_IMR_MR15_Msk


	)

2597 
	#EXTI_IMR_MR16_Pos
 (16U)

	)

2598 
	#EXTI_IMR_MR16_Msk
 (0x1UL << 
EXTI_IMR_MR16_Pos
Ë

	)

2599 
	#EXTI_IMR_MR16
 
EXTI_IMR_MR16_Msk


	)

2600 
	#EXTI_IMR_MR17_Pos
 (17U)

	)

2601 
	#EXTI_IMR_MR17_Msk
 (0x1UL << 
EXTI_IMR_MR17_Pos
Ë

	)

2602 
	#EXTI_IMR_MR17
 
EXTI_IMR_MR17_Msk


	)

2603 
	#EXTI_IMR_MR18_Pos
 (18U)

	)

2604 
	#EXTI_IMR_MR18_Msk
 (0x1UL << 
EXTI_IMR_MR18_Pos
Ë

	)

2605 
	#EXTI_IMR_MR18
 
EXTI_IMR_MR18_Msk


	)

2608 
	#EXTI_IMR_IM0
 
EXTI_IMR_MR0


	)

2609 
	#EXTI_IMR_IM1
 
EXTI_IMR_MR1


	)

2610 
	#EXTI_IMR_IM2
 
EXTI_IMR_MR2


	)

2611 
	#EXTI_IMR_IM3
 
EXTI_IMR_MR3


	)

2612 
	#EXTI_IMR_IM4
 
EXTI_IMR_MR4


	)

2613 
	#EXTI_IMR_IM5
 
EXTI_IMR_MR5


	)

2614 
	#EXTI_IMR_IM6
 
EXTI_IMR_MR6


	)

2615 
	#EXTI_IMR_IM7
 
EXTI_IMR_MR7


	)

2616 
	#EXTI_IMR_IM8
 
EXTI_IMR_MR8


	)

2617 
	#EXTI_IMR_IM9
 
EXTI_IMR_MR9


	)

2618 
	#EXTI_IMR_IM10
 
EXTI_IMR_MR10


	)

2619 
	#EXTI_IMR_IM11
 
EXTI_IMR_MR11


	)

2620 
	#EXTI_IMR_IM12
 
EXTI_IMR_MR12


	)

2621 
	#EXTI_IMR_IM13
 
EXTI_IMR_MR13


	)

2622 
	#EXTI_IMR_IM14
 
EXTI_IMR_MR14


	)

2623 
	#EXTI_IMR_IM15
 
EXTI_IMR_MR15


	)

2624 
	#EXTI_IMR_IM16
 
EXTI_IMR_MR16


	)

2625 
	#EXTI_IMR_IM17
 
EXTI_IMR_MR17


	)

2626 
	#EXTI_IMR_IM18
 
EXTI_IMR_MR18


	)

2627 
	#EXTI_IMR_IM
 0x0007FFFFU

	)

2630 
	#EXTI_EMR_MR0_Pos
 (0U)

	)

2631 
	#EXTI_EMR_MR0_Msk
 (0x1UL << 
EXTI_EMR_MR0_Pos
Ë

	)

2632 
	#EXTI_EMR_MR0
 
EXTI_EMR_MR0_Msk


	)

2633 
	#EXTI_EMR_MR1_Pos
 (1U)

	)

2634 
	#EXTI_EMR_MR1_Msk
 (0x1UL << 
EXTI_EMR_MR1_Pos
Ë

	)

2635 
	#EXTI_EMR_MR1
 
EXTI_EMR_MR1_Msk


	)

2636 
	#EXTI_EMR_MR2_Pos
 (2U)

	)

2637 
	#EXTI_EMR_MR2_Msk
 (0x1UL << 
EXTI_EMR_MR2_Pos
Ë

	)

2638 
	#EXTI_EMR_MR2
 
EXTI_EMR_MR2_Msk


	)

2639 
	#EXTI_EMR_MR3_Pos
 (3U)

	)

2640 
	#EXTI_EMR_MR3_Msk
 (0x1UL << 
EXTI_EMR_MR3_Pos
Ë

	)

2641 
	#EXTI_EMR_MR3
 
EXTI_EMR_MR3_Msk


	)

2642 
	#EXTI_EMR_MR4_Pos
 (4U)

	)

2643 
	#EXTI_EMR_MR4_Msk
 (0x1UL << 
EXTI_EMR_MR4_Pos
Ë

	)

2644 
	#EXTI_EMR_MR4
 
EXTI_EMR_MR4_Msk


	)

2645 
	#EXTI_EMR_MR5_Pos
 (5U)

	)

2646 
	#EXTI_EMR_MR5_Msk
 (0x1UL << 
EXTI_EMR_MR5_Pos
Ë

	)

2647 
	#EXTI_EMR_MR5
 
EXTI_EMR_MR5_Msk


	)

2648 
	#EXTI_EMR_MR6_Pos
 (6U)

	)

2649 
	#EXTI_EMR_MR6_Msk
 (0x1UL << 
EXTI_EMR_MR6_Pos
Ë

	)

2650 
	#EXTI_EMR_MR6
 
EXTI_EMR_MR6_Msk


	)

2651 
	#EXTI_EMR_MR7_Pos
 (7U)

	)

2652 
	#EXTI_EMR_MR7_Msk
 (0x1UL << 
EXTI_EMR_MR7_Pos
Ë

	)

2653 
	#EXTI_EMR_MR7
 
EXTI_EMR_MR7_Msk


	)

2654 
	#EXTI_EMR_MR8_Pos
 (8U)

	)

2655 
	#EXTI_EMR_MR8_Msk
 (0x1UL << 
EXTI_EMR_MR8_Pos
Ë

	)

2656 
	#EXTI_EMR_MR8
 
EXTI_EMR_MR8_Msk


	)

2657 
	#EXTI_EMR_MR9_Pos
 (9U)

	)

2658 
	#EXTI_EMR_MR9_Msk
 (0x1UL << 
EXTI_EMR_MR9_Pos
Ë

	)

2659 
	#EXTI_EMR_MR9
 
EXTI_EMR_MR9_Msk


	)

2660 
	#EXTI_EMR_MR10_Pos
 (10U)

	)

2661 
	#EXTI_EMR_MR10_Msk
 (0x1UL << 
EXTI_EMR_MR10_Pos
Ë

	)

2662 
	#EXTI_EMR_MR10
 
EXTI_EMR_MR10_Msk


	)

2663 
	#EXTI_EMR_MR11_Pos
 (11U)

	)

2664 
	#EXTI_EMR_MR11_Msk
 (0x1UL << 
EXTI_EMR_MR11_Pos
Ë

	)

2665 
	#EXTI_EMR_MR11
 
EXTI_EMR_MR11_Msk


	)

2666 
	#EXTI_EMR_MR12_Pos
 (12U)

	)

2667 
	#EXTI_EMR_MR12_Msk
 (0x1UL << 
EXTI_EMR_MR12_Pos
Ë

	)

2668 
	#EXTI_EMR_MR12
 
EXTI_EMR_MR12_Msk


	)

2669 
	#EXTI_EMR_MR13_Pos
 (13U)

	)

2670 
	#EXTI_EMR_MR13_Msk
 (0x1UL << 
EXTI_EMR_MR13_Pos
Ë

	)

2671 
	#EXTI_EMR_MR13
 
EXTI_EMR_MR13_Msk


	)

2672 
	#EXTI_EMR_MR14_Pos
 (14U)

	)

2673 
	#EXTI_EMR_MR14_Msk
 (0x1UL << 
EXTI_EMR_MR14_Pos
Ë

	)

2674 
	#EXTI_EMR_MR14
 
EXTI_EMR_MR14_Msk


	)

2675 
	#EXTI_EMR_MR15_Pos
 (15U)

	)

2676 
	#EXTI_EMR_MR15_Msk
 (0x1UL << 
EXTI_EMR_MR15_Pos
Ë

	)

2677 
	#EXTI_EMR_MR15
 
EXTI_EMR_MR15_Msk


	)

2678 
	#EXTI_EMR_MR16_Pos
 (16U)

	)

2679 
	#EXTI_EMR_MR16_Msk
 (0x1UL << 
EXTI_EMR_MR16_Pos
Ë

	)

2680 
	#EXTI_EMR_MR16
 
EXTI_EMR_MR16_Msk


	)

2681 
	#EXTI_EMR_MR17_Pos
 (17U)

	)

2682 
	#EXTI_EMR_MR17_Msk
 (0x1UL << 
EXTI_EMR_MR17_Pos
Ë

	)

2683 
	#EXTI_EMR_MR17
 
EXTI_EMR_MR17_Msk


	)

2684 
	#EXTI_EMR_MR18_Pos
 (18U)

	)

2685 
	#EXTI_EMR_MR18_Msk
 (0x1UL << 
EXTI_EMR_MR18_Pos
Ë

	)

2686 
	#EXTI_EMR_MR18
 
EXTI_EMR_MR18_Msk


	)

2689 
	#EXTI_EMR_EM0
 
EXTI_EMR_MR0


	)

2690 
	#EXTI_EMR_EM1
 
EXTI_EMR_MR1


	)

2691 
	#EXTI_EMR_EM2
 
EXTI_EMR_MR2


	)

2692 
	#EXTI_EMR_EM3
 
EXTI_EMR_MR3


	)

2693 
	#EXTI_EMR_EM4
 
EXTI_EMR_MR4


	)

2694 
	#EXTI_EMR_EM5
 
EXTI_EMR_MR5


	)

2695 
	#EXTI_EMR_EM6
 
EXTI_EMR_MR6


	)

2696 
	#EXTI_EMR_EM7
 
EXTI_EMR_MR7


	)

2697 
	#EXTI_EMR_EM8
 
EXTI_EMR_MR8


	)

2698 
	#EXTI_EMR_EM9
 
EXTI_EMR_MR9


	)

2699 
	#EXTI_EMR_EM10
 
EXTI_EMR_MR10


	)

2700 
	#EXTI_EMR_EM11
 
EXTI_EMR_MR11


	)

2701 
	#EXTI_EMR_EM12
 
EXTI_EMR_MR12


	)

2702 
	#EXTI_EMR_EM13
 
EXTI_EMR_MR13


	)

2703 
	#EXTI_EMR_EM14
 
EXTI_EMR_MR14


	)

2704 
	#EXTI_EMR_EM15
 
EXTI_EMR_MR15


	)

2705 
	#EXTI_EMR_EM16
 
EXTI_EMR_MR16


	)

2706 
	#EXTI_EMR_EM17
 
EXTI_EMR_MR17


	)

2707 
	#EXTI_EMR_EM18
 
EXTI_EMR_MR18


	)

2710 
	#EXTI_RTSR_TR0_Pos
 (0U)

	)

2711 
	#EXTI_RTSR_TR0_Msk
 (0x1UL << 
EXTI_RTSR_TR0_Pos
Ë

	)

2712 
	#EXTI_RTSR_TR0
 
EXTI_RTSR_TR0_Msk


	)

2713 
	#EXTI_RTSR_TR1_Pos
 (1U)

	)

2714 
	#EXTI_RTSR_TR1_Msk
 (0x1UL << 
EXTI_RTSR_TR1_Pos
Ë

	)

2715 
	#EXTI_RTSR_TR1
 
EXTI_RTSR_TR1_Msk


	)

2716 
	#EXTI_RTSR_TR2_Pos
 (2U)

	)

2717 
	#EXTI_RTSR_TR2_Msk
 (0x1UL << 
EXTI_RTSR_TR2_Pos
Ë

	)

2718 
	#EXTI_RTSR_TR2
 
EXTI_RTSR_TR2_Msk


	)

2719 
	#EXTI_RTSR_TR3_Pos
 (3U)

	)

2720 
	#EXTI_RTSR_TR3_Msk
 (0x1UL << 
EXTI_RTSR_TR3_Pos
Ë

	)

2721 
	#EXTI_RTSR_TR3
 
EXTI_RTSR_TR3_Msk


	)

2722 
	#EXTI_RTSR_TR4_Pos
 (4U)

	)

2723 
	#EXTI_RTSR_TR4_Msk
 (0x1UL << 
EXTI_RTSR_TR4_Pos
Ë

	)

2724 
	#EXTI_RTSR_TR4
 
EXTI_RTSR_TR4_Msk


	)

2725 
	#EXTI_RTSR_TR5_Pos
 (5U)

	)

2726 
	#EXTI_RTSR_TR5_Msk
 (0x1UL << 
EXTI_RTSR_TR5_Pos
Ë

	)

2727 
	#EXTI_RTSR_TR5
 
EXTI_RTSR_TR5_Msk


	)

2728 
	#EXTI_RTSR_TR6_Pos
 (6U)

	)

2729 
	#EXTI_RTSR_TR6_Msk
 (0x1UL << 
EXTI_RTSR_TR6_Pos
Ë

	)

2730 
	#EXTI_RTSR_TR6
 
EXTI_RTSR_TR6_Msk


	)

2731 
	#EXTI_RTSR_TR7_Pos
 (7U)

	)

2732 
	#EXTI_RTSR_TR7_Msk
 (0x1UL << 
EXTI_RTSR_TR7_Pos
Ë

	)

2733 
	#EXTI_RTSR_TR7
 
EXTI_RTSR_TR7_Msk


	)

2734 
	#EXTI_RTSR_TR8_Pos
 (8U)

	)

2735 
	#EXTI_RTSR_TR8_Msk
 (0x1UL << 
EXTI_RTSR_TR8_Pos
Ë

	)

2736 
	#EXTI_RTSR_TR8
 
EXTI_RTSR_TR8_Msk


	)

2737 
	#EXTI_RTSR_TR9_Pos
 (9U)

	)

2738 
	#EXTI_RTSR_TR9_Msk
 (0x1UL << 
EXTI_RTSR_TR9_Pos
Ë

	)

2739 
	#EXTI_RTSR_TR9
 
EXTI_RTSR_TR9_Msk


	)

2740 
	#EXTI_RTSR_TR10_Pos
 (10U)

	)

2741 
	#EXTI_RTSR_TR10_Msk
 (0x1UL << 
EXTI_RTSR_TR10_Pos
Ë

	)

2742 
	#EXTI_RTSR_TR10
 
EXTI_RTSR_TR10_Msk


	)

2743 
	#EXTI_RTSR_TR11_Pos
 (11U)

	)

2744 
	#EXTI_RTSR_TR11_Msk
 (0x1UL << 
EXTI_RTSR_TR11_Pos
Ë

	)

2745 
	#EXTI_RTSR_TR11
 
EXTI_RTSR_TR11_Msk


	)

2746 
	#EXTI_RTSR_TR12_Pos
 (12U)

	)

2747 
	#EXTI_RTSR_TR12_Msk
 (0x1UL << 
EXTI_RTSR_TR12_Pos
Ë

	)

2748 
	#EXTI_RTSR_TR12
 
EXTI_RTSR_TR12_Msk


	)

2749 
	#EXTI_RTSR_TR13_Pos
 (13U)

	)

2750 
	#EXTI_RTSR_TR13_Msk
 (0x1UL << 
EXTI_RTSR_TR13_Pos
Ë

	)

2751 
	#EXTI_RTSR_TR13
 
EXTI_RTSR_TR13_Msk


	)

2752 
	#EXTI_RTSR_TR14_Pos
 (14U)

	)

2753 
	#EXTI_RTSR_TR14_Msk
 (0x1UL << 
EXTI_RTSR_TR14_Pos
Ë

	)

2754 
	#EXTI_RTSR_TR14
 
EXTI_RTSR_TR14_Msk


	)

2755 
	#EXTI_RTSR_TR15_Pos
 (15U)

	)

2756 
	#EXTI_RTSR_TR15_Msk
 (0x1UL << 
EXTI_RTSR_TR15_Pos
Ë

	)

2757 
	#EXTI_RTSR_TR15
 
EXTI_RTSR_TR15_Msk


	)

2758 
	#EXTI_RTSR_TR16_Pos
 (16U)

	)

2759 
	#EXTI_RTSR_TR16_Msk
 (0x1UL << 
EXTI_RTSR_TR16_Pos
Ë

	)

2760 
	#EXTI_RTSR_TR16
 
EXTI_RTSR_TR16_Msk


	)

2761 
	#EXTI_RTSR_TR17_Pos
 (17U)

	)

2762 
	#EXTI_RTSR_TR17_Msk
 (0x1UL << 
EXTI_RTSR_TR17_Pos
Ë

	)

2763 
	#EXTI_RTSR_TR17
 
EXTI_RTSR_TR17_Msk


	)

2764 
	#EXTI_RTSR_TR18_Pos
 (18U)

	)

2765 
	#EXTI_RTSR_TR18_Msk
 (0x1UL << 
EXTI_RTSR_TR18_Pos
Ë

	)

2766 
	#EXTI_RTSR_TR18
 
EXTI_RTSR_TR18_Msk


	)

2769 
	#EXTI_RTSR_RT0
 
EXTI_RTSR_TR0


	)

2770 
	#EXTI_RTSR_RT1
 
EXTI_RTSR_TR1


	)

2771 
	#EXTI_RTSR_RT2
 
EXTI_RTSR_TR2


	)

2772 
	#EXTI_RTSR_RT3
 
EXTI_RTSR_TR3


	)

2773 
	#EXTI_RTSR_RT4
 
EXTI_RTSR_TR4


	)

2774 
	#EXTI_RTSR_RT5
 
EXTI_RTSR_TR5


	)

2775 
	#EXTI_RTSR_RT6
 
EXTI_RTSR_TR6


	)

2776 
	#EXTI_RTSR_RT7
 
EXTI_RTSR_TR7


	)

2777 
	#EXTI_RTSR_RT8
 
EXTI_RTSR_TR8


	)

2778 
	#EXTI_RTSR_RT9
 
EXTI_RTSR_TR9


	)

2779 
	#EXTI_RTSR_RT10
 
EXTI_RTSR_TR10


	)

2780 
	#EXTI_RTSR_RT11
 
EXTI_RTSR_TR11


	)

2781 
	#EXTI_RTSR_RT12
 
EXTI_RTSR_TR12


	)

2782 
	#EXTI_RTSR_RT13
 
EXTI_RTSR_TR13


	)

2783 
	#EXTI_RTSR_RT14
 
EXTI_RTSR_TR14


	)

2784 
	#EXTI_RTSR_RT15
 
EXTI_RTSR_TR15


	)

2785 
	#EXTI_RTSR_RT16
 
EXTI_RTSR_TR16


	)

2786 
	#EXTI_RTSR_RT17
 
EXTI_RTSR_TR17


	)

2787 
	#EXTI_RTSR_RT18
 
EXTI_RTSR_TR18


	)

2790 
	#EXTI_FTSR_TR0_Pos
 (0U)

	)

2791 
	#EXTI_FTSR_TR0_Msk
 (0x1UL << 
EXTI_FTSR_TR0_Pos
Ë

	)

2792 
	#EXTI_FTSR_TR0
 
EXTI_FTSR_TR0_Msk


	)

2793 
	#EXTI_FTSR_TR1_Pos
 (1U)

	)

2794 
	#EXTI_FTSR_TR1_Msk
 (0x1UL << 
EXTI_FTSR_TR1_Pos
Ë

	)

2795 
	#EXTI_FTSR_TR1
 
EXTI_FTSR_TR1_Msk


	)

2796 
	#EXTI_FTSR_TR2_Pos
 (2U)

	)

2797 
	#EXTI_FTSR_TR2_Msk
 (0x1UL << 
EXTI_FTSR_TR2_Pos
Ë

	)

2798 
	#EXTI_FTSR_TR2
 
EXTI_FTSR_TR2_Msk


	)

2799 
	#EXTI_FTSR_TR3_Pos
 (3U)

	)

2800 
	#EXTI_FTSR_TR3_Msk
 (0x1UL << 
EXTI_FTSR_TR3_Pos
Ë

	)

2801 
	#EXTI_FTSR_TR3
 
EXTI_FTSR_TR3_Msk


	)

2802 
	#EXTI_FTSR_TR4_Pos
 (4U)

	)

2803 
	#EXTI_FTSR_TR4_Msk
 (0x1UL << 
EXTI_FTSR_TR4_Pos
Ë

	)

2804 
	#EXTI_FTSR_TR4
 
EXTI_FTSR_TR4_Msk


	)

2805 
	#EXTI_FTSR_TR5_Pos
 (5U)

	)

2806 
	#EXTI_FTSR_TR5_Msk
 (0x1UL << 
EXTI_FTSR_TR5_Pos
Ë

	)

2807 
	#EXTI_FTSR_TR5
 
EXTI_FTSR_TR5_Msk


	)

2808 
	#EXTI_FTSR_TR6_Pos
 (6U)

	)

2809 
	#EXTI_FTSR_TR6_Msk
 (0x1UL << 
EXTI_FTSR_TR6_Pos
Ë

	)

2810 
	#EXTI_FTSR_TR6
 
EXTI_FTSR_TR6_Msk


	)

2811 
	#EXTI_FTSR_TR7_Pos
 (7U)

	)

2812 
	#EXTI_FTSR_TR7_Msk
 (0x1UL << 
EXTI_FTSR_TR7_Pos
Ë

	)

2813 
	#EXTI_FTSR_TR7
 
EXTI_FTSR_TR7_Msk


	)

2814 
	#EXTI_FTSR_TR8_Pos
 (8U)

	)

2815 
	#EXTI_FTSR_TR8_Msk
 (0x1UL << 
EXTI_FTSR_TR8_Pos
Ë

	)

2816 
	#EXTI_FTSR_TR8
 
EXTI_FTSR_TR8_Msk


	)

2817 
	#EXTI_FTSR_TR9_Pos
 (9U)

	)

2818 
	#EXTI_FTSR_TR9_Msk
 (0x1UL << 
EXTI_FTSR_TR9_Pos
Ë

	)

2819 
	#EXTI_FTSR_TR9
 
EXTI_FTSR_TR9_Msk


	)

2820 
	#EXTI_FTSR_TR10_Pos
 (10U)

	)

2821 
	#EXTI_FTSR_TR10_Msk
 (0x1UL << 
EXTI_FTSR_TR10_Pos
Ë

	)

2822 
	#EXTI_FTSR_TR10
 
EXTI_FTSR_TR10_Msk


	)

2823 
	#EXTI_FTSR_TR11_Pos
 (11U)

	)

2824 
	#EXTI_FTSR_TR11_Msk
 (0x1UL << 
EXTI_FTSR_TR11_Pos
Ë

	)

2825 
	#EXTI_FTSR_TR11
 
EXTI_FTSR_TR11_Msk


	)

2826 
	#EXTI_FTSR_TR12_Pos
 (12U)

	)

2827 
	#EXTI_FTSR_TR12_Msk
 (0x1UL << 
EXTI_FTSR_TR12_Pos
Ë

	)

2828 
	#EXTI_FTSR_TR12
 
EXTI_FTSR_TR12_Msk


	)

2829 
	#EXTI_FTSR_TR13_Pos
 (13U)

	)

2830 
	#EXTI_FTSR_TR13_Msk
 (0x1UL << 
EXTI_FTSR_TR13_Pos
Ë

	)

2831 
	#EXTI_FTSR_TR13
 
EXTI_FTSR_TR13_Msk


	)

2832 
	#EXTI_FTSR_TR14_Pos
 (14U)

	)

2833 
	#EXTI_FTSR_TR14_Msk
 (0x1UL << 
EXTI_FTSR_TR14_Pos
Ë

	)

2834 
	#EXTI_FTSR_TR14
 
EXTI_FTSR_TR14_Msk


	)

2835 
	#EXTI_FTSR_TR15_Pos
 (15U)

	)

2836 
	#EXTI_FTSR_TR15_Msk
 (0x1UL << 
EXTI_FTSR_TR15_Pos
Ë

	)

2837 
	#EXTI_FTSR_TR15
 
EXTI_FTSR_TR15_Msk


	)

2838 
	#EXTI_FTSR_TR16_Pos
 (16U)

	)

2839 
	#EXTI_FTSR_TR16_Msk
 (0x1UL << 
EXTI_FTSR_TR16_Pos
Ë

	)

2840 
	#EXTI_FTSR_TR16
 
EXTI_FTSR_TR16_Msk


	)

2841 
	#EXTI_FTSR_TR17_Pos
 (17U)

	)

2842 
	#EXTI_FTSR_TR17_Msk
 (0x1UL << 
EXTI_FTSR_TR17_Pos
Ë

	)

2843 
	#EXTI_FTSR_TR17
 
EXTI_FTSR_TR17_Msk


	)

2844 
	#EXTI_FTSR_TR18_Pos
 (18U)

	)

2845 
	#EXTI_FTSR_TR18_Msk
 (0x1UL << 
EXTI_FTSR_TR18_Pos
Ë

	)

2846 
	#EXTI_FTSR_TR18
 
EXTI_FTSR_TR18_Msk


	)

2849 
	#EXTI_FTSR_FT0
 
EXTI_FTSR_TR0


	)

2850 
	#EXTI_FTSR_FT1
 
EXTI_FTSR_TR1


	)

2851 
	#EXTI_FTSR_FT2
 
EXTI_FTSR_TR2


	)

2852 
	#EXTI_FTSR_FT3
 
EXTI_FTSR_TR3


	)

2853 
	#EXTI_FTSR_FT4
 
EXTI_FTSR_TR4


	)

2854 
	#EXTI_FTSR_FT5
 
EXTI_FTSR_TR5


	)

2855 
	#EXTI_FTSR_FT6
 
EXTI_FTSR_TR6


	)

2856 
	#EXTI_FTSR_FT7
 
EXTI_FTSR_TR7


	)

2857 
	#EXTI_FTSR_FT8
 
EXTI_FTSR_TR8


	)

2858 
	#EXTI_FTSR_FT9
 
EXTI_FTSR_TR9


	)

2859 
	#EXTI_FTSR_FT10
 
EXTI_FTSR_TR10


	)

2860 
	#EXTI_FTSR_FT11
 
EXTI_FTSR_TR11


	)

2861 
	#EXTI_FTSR_FT12
 
EXTI_FTSR_TR12


	)

2862 
	#EXTI_FTSR_FT13
 
EXTI_FTSR_TR13


	)

2863 
	#EXTI_FTSR_FT14
 
EXTI_FTSR_TR14


	)

2864 
	#EXTI_FTSR_FT15
 
EXTI_FTSR_TR15


	)

2865 
	#EXTI_FTSR_FT16
 
EXTI_FTSR_TR16


	)

2866 
	#EXTI_FTSR_FT17
 
EXTI_FTSR_TR17


	)

2867 
	#EXTI_FTSR_FT18
 
EXTI_FTSR_TR18


	)

2870 
	#EXTI_SWIER_SWIER0_Pos
 (0U)

	)

2871 
	#EXTI_SWIER_SWIER0_Msk
 (0x1UL << 
EXTI_SWIER_SWIER0_Pos
Ë

	)

2872 
	#EXTI_SWIER_SWIER0
 
EXTI_SWIER_SWIER0_Msk


	)

2873 
	#EXTI_SWIER_SWIER1_Pos
 (1U)

	)

2874 
	#EXTI_SWIER_SWIER1_Msk
 (0x1UL << 
EXTI_SWIER_SWIER1_Pos
Ë

	)

2875 
	#EXTI_SWIER_SWIER1
 
EXTI_SWIER_SWIER1_Msk


	)

2876 
	#EXTI_SWIER_SWIER2_Pos
 (2U)

	)

2877 
	#EXTI_SWIER_SWIER2_Msk
 (0x1UL << 
EXTI_SWIER_SWIER2_Pos
Ë

	)

2878 
	#EXTI_SWIER_SWIER2
 
EXTI_SWIER_SWIER2_Msk


	)

2879 
	#EXTI_SWIER_SWIER3_Pos
 (3U)

	)

2880 
	#EXTI_SWIER_SWIER3_Msk
 (0x1UL << 
EXTI_SWIER_SWIER3_Pos
Ë

	)

2881 
	#EXTI_SWIER_SWIER3
 
EXTI_SWIER_SWIER3_Msk


	)

2882 
	#EXTI_SWIER_SWIER4_Pos
 (4U)

	)

2883 
	#EXTI_SWIER_SWIER4_Msk
 (0x1UL << 
EXTI_SWIER_SWIER4_Pos
Ë

	)

2884 
	#EXTI_SWIER_SWIER4
 
EXTI_SWIER_SWIER4_Msk


	)

2885 
	#EXTI_SWIER_SWIER5_Pos
 (5U)

	)

2886 
	#EXTI_SWIER_SWIER5_Msk
 (0x1UL << 
EXTI_SWIER_SWIER5_Pos
Ë

	)

2887 
	#EXTI_SWIER_SWIER5
 
EXTI_SWIER_SWIER5_Msk


	)

2888 
	#EXTI_SWIER_SWIER6_Pos
 (6U)

	)

2889 
	#EXTI_SWIER_SWIER6_Msk
 (0x1UL << 
EXTI_SWIER_SWIER6_Pos
Ë

	)

2890 
	#EXTI_SWIER_SWIER6
 
EXTI_SWIER_SWIER6_Msk


	)

2891 
	#EXTI_SWIER_SWIER7_Pos
 (7U)

	)

2892 
	#EXTI_SWIER_SWIER7_Msk
 (0x1UL << 
EXTI_SWIER_SWIER7_Pos
Ë

	)

2893 
	#EXTI_SWIER_SWIER7
 
EXTI_SWIER_SWIER7_Msk


	)

2894 
	#EXTI_SWIER_SWIER8_Pos
 (8U)

	)

2895 
	#EXTI_SWIER_SWIER8_Msk
 (0x1UL << 
EXTI_SWIER_SWIER8_Pos
Ë

	)

2896 
	#EXTI_SWIER_SWIER8
 
EXTI_SWIER_SWIER8_Msk


	)

2897 
	#EXTI_SWIER_SWIER9_Pos
 (9U)

	)

2898 
	#EXTI_SWIER_SWIER9_Msk
 (0x1UL << 
EXTI_SWIER_SWIER9_Pos
Ë

	)

2899 
	#EXTI_SWIER_SWIER9
 
EXTI_SWIER_SWIER9_Msk


	)

2900 
	#EXTI_SWIER_SWIER10_Pos
 (10U)

	)

2901 
	#EXTI_SWIER_SWIER10_Msk
 (0x1UL << 
EXTI_SWIER_SWIER10_Pos
Ë

	)

2902 
	#EXTI_SWIER_SWIER10
 
EXTI_SWIER_SWIER10_Msk


	)

2903 
	#EXTI_SWIER_SWIER11_Pos
 (11U)

	)

2904 
	#EXTI_SWIER_SWIER11_Msk
 (0x1UL << 
EXTI_SWIER_SWIER11_Pos
Ë

	)

2905 
	#EXTI_SWIER_SWIER11
 
EXTI_SWIER_SWIER11_Msk


	)

2906 
	#EXTI_SWIER_SWIER12_Pos
 (12U)

	)

2907 
	#EXTI_SWIER_SWIER12_Msk
 (0x1UL << 
EXTI_SWIER_SWIER12_Pos
Ë

	)

2908 
	#EXTI_SWIER_SWIER12
 
EXTI_SWIER_SWIER12_Msk


	)

2909 
	#EXTI_SWIER_SWIER13_Pos
 (13U)

	)

2910 
	#EXTI_SWIER_SWIER13_Msk
 (0x1UL << 
EXTI_SWIER_SWIER13_Pos
Ë

	)

2911 
	#EXTI_SWIER_SWIER13
 
EXTI_SWIER_SWIER13_Msk


	)

2912 
	#EXTI_SWIER_SWIER14_Pos
 (14U)

	)

2913 
	#EXTI_SWIER_SWIER14_Msk
 (0x1UL << 
EXTI_SWIER_SWIER14_Pos
Ë

	)

2914 
	#EXTI_SWIER_SWIER14
 
EXTI_SWIER_SWIER14_Msk


	)

2915 
	#EXTI_SWIER_SWIER15_Pos
 (15U)

	)

2916 
	#EXTI_SWIER_SWIER15_Msk
 (0x1UL << 
EXTI_SWIER_SWIER15_Pos
Ë

	)

2917 
	#EXTI_SWIER_SWIER15
 
EXTI_SWIER_SWIER15_Msk


	)

2918 
	#EXTI_SWIER_SWIER16_Pos
 (16U)

	)

2919 
	#EXTI_SWIER_SWIER16_Msk
 (0x1UL << 
EXTI_SWIER_SWIER16_Pos
Ë

	)

2920 
	#EXTI_SWIER_SWIER16
 
EXTI_SWIER_SWIER16_Msk


	)

2921 
	#EXTI_SWIER_SWIER17_Pos
 (17U)

	)

2922 
	#EXTI_SWIER_SWIER17_Msk
 (0x1UL << 
EXTI_SWIER_SWIER17_Pos
Ë

	)

2923 
	#EXTI_SWIER_SWIER17
 
EXTI_SWIER_SWIER17_Msk


	)

2924 
	#EXTI_SWIER_SWIER18_Pos
 (18U)

	)

2925 
	#EXTI_SWIER_SWIER18_Msk
 (0x1UL << 
EXTI_SWIER_SWIER18_Pos
Ë

	)

2926 
	#EXTI_SWIER_SWIER18
 
EXTI_SWIER_SWIER18_Msk


	)

2929 
	#EXTI_SWIER_SWI0
 
EXTI_SWIER_SWIER0


	)

2930 
	#EXTI_SWIER_SWI1
 
EXTI_SWIER_SWIER1


	)

2931 
	#EXTI_SWIER_SWI2
 
EXTI_SWIER_SWIER2


	)

2932 
	#EXTI_SWIER_SWI3
 
EXTI_SWIER_SWIER3


	)

2933 
	#EXTI_SWIER_SWI4
 
EXTI_SWIER_SWIER4


	)

2934 
	#EXTI_SWIER_SWI5
 
EXTI_SWIER_SWIER5


	)

2935 
	#EXTI_SWIER_SWI6
 
EXTI_SWIER_SWIER6


	)

2936 
	#EXTI_SWIER_SWI7
 
EXTI_SWIER_SWIER7


	)

2937 
	#EXTI_SWIER_SWI8
 
EXTI_SWIER_SWIER8


	)

2938 
	#EXTI_SWIER_SWI9
 
EXTI_SWIER_SWIER9


	)

2939 
	#EXTI_SWIER_SWI10
 
EXTI_SWIER_SWIER10


	)

2940 
	#EXTI_SWIER_SWI11
 
EXTI_SWIER_SWIER11


	)

2941 
	#EXTI_SWIER_SWI12
 
EXTI_SWIER_SWIER12


	)

2942 
	#EXTI_SWIER_SWI13
 
EXTI_SWIER_SWIER13


	)

2943 
	#EXTI_SWIER_SWI14
 
EXTI_SWIER_SWIER14


	)

2944 
	#EXTI_SWIER_SWI15
 
EXTI_SWIER_SWIER15


	)

2945 
	#EXTI_SWIER_SWI16
 
EXTI_SWIER_SWIER16


	)

2946 
	#EXTI_SWIER_SWI17
 
EXTI_SWIER_SWIER17


	)

2947 
	#EXTI_SWIER_SWI18
 
EXTI_SWIER_SWIER18


	)

2950 
	#EXTI_PR_PR0_Pos
 (0U)

	)

2951 
	#EXTI_PR_PR0_Msk
 (0x1UL << 
EXTI_PR_PR0_Pos
Ë

	)

2952 
	#EXTI_PR_PR0
 
EXTI_PR_PR0_Msk


	)

2953 
	#EXTI_PR_PR1_Pos
 (1U)

	)

2954 
	#EXTI_PR_PR1_Msk
 (0x1UL << 
EXTI_PR_PR1_Pos
Ë

	)

2955 
	#EXTI_PR_PR1
 
EXTI_PR_PR1_Msk


	)

2956 
	#EXTI_PR_PR2_Pos
 (2U)

	)

2957 
	#EXTI_PR_PR2_Msk
 (0x1UL << 
EXTI_PR_PR2_Pos
Ë

	)

2958 
	#EXTI_PR_PR2
 
EXTI_PR_PR2_Msk


	)

2959 
	#EXTI_PR_PR3_Pos
 (3U)

	)

2960 
	#EXTI_PR_PR3_Msk
 (0x1UL << 
EXTI_PR_PR3_Pos
Ë

	)

2961 
	#EXTI_PR_PR3
 
EXTI_PR_PR3_Msk


	)

2962 
	#EXTI_PR_PR4_Pos
 (4U)

	)

2963 
	#EXTI_PR_PR4_Msk
 (0x1UL << 
EXTI_PR_PR4_Pos
Ë

	)

2964 
	#EXTI_PR_PR4
 
EXTI_PR_PR4_Msk


	)

2965 
	#EXTI_PR_PR5_Pos
 (5U)

	)

2966 
	#EXTI_PR_PR5_Msk
 (0x1UL << 
EXTI_PR_PR5_Pos
Ë

	)

2967 
	#EXTI_PR_PR5
 
EXTI_PR_PR5_Msk


	)

2968 
	#EXTI_PR_PR6_Pos
 (6U)

	)

2969 
	#EXTI_PR_PR6_Msk
 (0x1UL << 
EXTI_PR_PR6_Pos
Ë

	)

2970 
	#EXTI_PR_PR6
 
EXTI_PR_PR6_Msk


	)

2971 
	#EXTI_PR_PR7_Pos
 (7U)

	)

2972 
	#EXTI_PR_PR7_Msk
 (0x1UL << 
EXTI_PR_PR7_Pos
Ë

	)

2973 
	#EXTI_PR_PR7
 
EXTI_PR_PR7_Msk


	)

2974 
	#EXTI_PR_PR8_Pos
 (8U)

	)

2975 
	#EXTI_PR_PR8_Msk
 (0x1UL << 
EXTI_PR_PR8_Pos
Ë

	)

2976 
	#EXTI_PR_PR8
 
EXTI_PR_PR8_Msk


	)

2977 
	#EXTI_PR_PR9_Pos
 (9U)

	)

2978 
	#EXTI_PR_PR9_Msk
 (0x1UL << 
EXTI_PR_PR9_Pos
Ë

	)

2979 
	#EXTI_PR_PR9
 
EXTI_PR_PR9_Msk


	)

2980 
	#EXTI_PR_PR10_Pos
 (10U)

	)

2981 
	#EXTI_PR_PR10_Msk
 (0x1UL << 
EXTI_PR_PR10_Pos
Ë

	)

2982 
	#EXTI_PR_PR10
 
EXTI_PR_PR10_Msk


	)

2983 
	#EXTI_PR_PR11_Pos
 (11U)

	)

2984 
	#EXTI_PR_PR11_Msk
 (0x1UL << 
EXTI_PR_PR11_Pos
Ë

	)

2985 
	#EXTI_PR_PR11
 
EXTI_PR_PR11_Msk


	)

2986 
	#EXTI_PR_PR12_Pos
 (12U)

	)

2987 
	#EXTI_PR_PR12_Msk
 (0x1UL << 
EXTI_PR_PR12_Pos
Ë

	)

2988 
	#EXTI_PR_PR12
 
EXTI_PR_PR12_Msk


	)

2989 
	#EXTI_PR_PR13_Pos
 (13U)

	)

2990 
	#EXTI_PR_PR13_Msk
 (0x1UL << 
EXTI_PR_PR13_Pos
Ë

	)

2991 
	#EXTI_PR_PR13
 
EXTI_PR_PR13_Msk


	)

2992 
	#EXTI_PR_PR14_Pos
 (14U)

	)

2993 
	#EXTI_PR_PR14_Msk
 (0x1UL << 
EXTI_PR_PR14_Pos
Ë

	)

2994 
	#EXTI_PR_PR14
 
EXTI_PR_PR14_Msk


	)

2995 
	#EXTI_PR_PR15_Pos
 (15U)

	)

2996 
	#EXTI_PR_PR15_Msk
 (0x1UL << 
EXTI_PR_PR15_Pos
Ë

	)

2997 
	#EXTI_PR_PR15
 
EXTI_PR_PR15_Msk


	)

2998 
	#EXTI_PR_PR16_Pos
 (16U)

	)

2999 
	#EXTI_PR_PR16_Msk
 (0x1UL << 
EXTI_PR_PR16_Pos
Ë

	)

3000 
	#EXTI_PR_PR16
 
EXTI_PR_PR16_Msk


	)

3001 
	#EXTI_PR_PR17_Pos
 (17U)

	)

3002 
	#EXTI_PR_PR17_Msk
 (0x1UL << 
EXTI_PR_PR17_Pos
Ë

	)

3003 
	#EXTI_PR_PR17
 
EXTI_PR_PR17_Msk


	)

3004 
	#EXTI_PR_PR18_Pos
 (18U)

	)

3005 
	#EXTI_PR_PR18_Msk
 (0x1UL << 
EXTI_PR_PR18_Pos
Ë

	)

3006 
	#EXTI_PR_PR18
 
EXTI_PR_PR18_Msk


	)

3009 
	#EXTI_PR_PIF0
 
EXTI_PR_PR0


	)

3010 
	#EXTI_PR_PIF1
 
EXTI_PR_PR1


	)

3011 
	#EXTI_PR_PIF2
 
EXTI_PR_PR2


	)

3012 
	#EXTI_PR_PIF3
 
EXTI_PR_PR3


	)

3013 
	#EXTI_PR_PIF4
 
EXTI_PR_PR4


	)

3014 
	#EXTI_PR_PIF5
 
EXTI_PR_PR5


	)

3015 
	#EXTI_PR_PIF6
 
EXTI_PR_PR6


	)

3016 
	#EXTI_PR_PIF7
 
EXTI_PR_PR7


	)

3017 
	#EXTI_PR_PIF8
 
EXTI_PR_PR8


	)

3018 
	#EXTI_PR_PIF9
 
EXTI_PR_PR9


	)

3019 
	#EXTI_PR_PIF10
 
EXTI_PR_PR10


	)

3020 
	#EXTI_PR_PIF11
 
EXTI_PR_PR11


	)

3021 
	#EXTI_PR_PIF12
 
EXTI_PR_PR12


	)

3022 
	#EXTI_PR_PIF13
 
EXTI_PR_PR13


	)

3023 
	#EXTI_PR_PIF14
 
EXTI_PR_PR14


	)

3024 
	#EXTI_PR_PIF15
 
EXTI_PR_PR15


	)

3025 
	#EXTI_PR_PIF16
 
EXTI_PR_PR16


	)

3026 
	#EXTI_PR_PIF17
 
EXTI_PR_PR17


	)

3027 
	#EXTI_PR_PIF18
 
EXTI_PR_PR18


	)

3036 
	#DMA_ISR_GIF1_Pos
 (0U)

	)

3037 
	#DMA_ISR_GIF1_Msk
 (0x1UL << 
DMA_ISR_GIF1_Pos
Ë

	)

3038 
	#DMA_ISR_GIF1
 
DMA_ISR_GIF1_Msk


	)

3039 
	#DMA_ISR_TCIF1_Pos
 (1U)

	)

3040 
	#DMA_ISR_TCIF1_Msk
 (0x1UL << 
DMA_ISR_TCIF1_Pos
Ë

	)

3041 
	#DMA_ISR_TCIF1
 
DMA_ISR_TCIF1_Msk


	)

3042 
	#DMA_ISR_HTIF1_Pos
 (2U)

	)

3043 
	#DMA_ISR_HTIF1_Msk
 (0x1UL << 
DMA_ISR_HTIF1_Pos
Ë

	)

3044 
	#DMA_ISR_HTIF1
 
DMA_ISR_HTIF1_Msk


	)

3045 
	#DMA_ISR_TEIF1_Pos
 (3U)

	)

3046 
	#DMA_ISR_TEIF1_Msk
 (0x1UL << 
DMA_ISR_TEIF1_Pos
Ë

	)

3047 
	#DMA_ISR_TEIF1
 
DMA_ISR_TEIF1_Msk


	)

3048 
	#DMA_ISR_GIF2_Pos
 (4U)

	)

3049 
	#DMA_ISR_GIF2_Msk
 (0x1UL << 
DMA_ISR_GIF2_Pos
Ë

	)

3050 
	#DMA_ISR_GIF2
 
DMA_ISR_GIF2_Msk


	)

3051 
	#DMA_ISR_TCIF2_Pos
 (5U)

	)

3052 
	#DMA_ISR_TCIF2_Msk
 (0x1UL << 
DMA_ISR_TCIF2_Pos
Ë

	)

3053 
	#DMA_ISR_TCIF2
 
DMA_ISR_TCIF2_Msk


	)

3054 
	#DMA_ISR_HTIF2_Pos
 (6U)

	)

3055 
	#DMA_ISR_HTIF2_Msk
 (0x1UL << 
DMA_ISR_HTIF2_Pos
Ë

	)

3056 
	#DMA_ISR_HTIF2
 
DMA_ISR_HTIF2_Msk


	)

3057 
	#DMA_ISR_TEIF2_Pos
 (7U)

	)

3058 
	#DMA_ISR_TEIF2_Msk
 (0x1UL << 
DMA_ISR_TEIF2_Pos
Ë

	)

3059 
	#DMA_ISR_TEIF2
 
DMA_ISR_TEIF2_Msk


	)

3060 
	#DMA_ISR_GIF3_Pos
 (8U)

	)

3061 
	#DMA_ISR_GIF3_Msk
 (0x1UL << 
DMA_ISR_GIF3_Pos
Ë

	)

3062 
	#DMA_ISR_GIF3
 
DMA_ISR_GIF3_Msk


	)

3063 
	#DMA_ISR_TCIF3_Pos
 (9U)

	)

3064 
	#DMA_ISR_TCIF3_Msk
 (0x1UL << 
DMA_ISR_TCIF3_Pos
Ë

	)

3065 
	#DMA_ISR_TCIF3
 
DMA_ISR_TCIF3_Msk


	)

3066 
	#DMA_ISR_HTIF3_Pos
 (10U)

	)

3067 
	#DMA_ISR_HTIF3_Msk
 (0x1UL << 
DMA_ISR_HTIF3_Pos
Ë

	)

3068 
	#DMA_ISR_HTIF3
 
DMA_ISR_HTIF3_Msk


	)

3069 
	#DMA_ISR_TEIF3_Pos
 (11U)

	)

3070 
	#DMA_ISR_TEIF3_Msk
 (0x1UL << 
DMA_ISR_TEIF3_Pos
Ë

	)

3071 
	#DMA_ISR_TEIF3
 
DMA_ISR_TEIF3_Msk


	)

3072 
	#DMA_ISR_GIF4_Pos
 (12U)

	)

3073 
	#DMA_ISR_GIF4_Msk
 (0x1UL << 
DMA_ISR_GIF4_Pos
Ë

	)

3074 
	#DMA_ISR_GIF4
 
DMA_ISR_GIF4_Msk


	)

3075 
	#DMA_ISR_TCIF4_Pos
 (13U)

	)

3076 
	#DMA_ISR_TCIF4_Msk
 (0x1UL << 
DMA_ISR_TCIF4_Pos
Ë

	)

3077 
	#DMA_ISR_TCIF4
 
DMA_ISR_TCIF4_Msk


	)

3078 
	#DMA_ISR_HTIF4_Pos
 (14U)

	)

3079 
	#DMA_ISR_HTIF4_Msk
 (0x1UL << 
DMA_ISR_HTIF4_Pos
Ë

	)

3080 
	#DMA_ISR_HTIF4
 
DMA_ISR_HTIF4_Msk


	)

3081 
	#DMA_ISR_TEIF4_Pos
 (15U)

	)

3082 
	#DMA_ISR_TEIF4_Msk
 (0x1UL << 
DMA_ISR_TEIF4_Pos
Ë

	)

3083 
	#DMA_ISR_TEIF4
 
DMA_ISR_TEIF4_Msk


	)

3084 
	#DMA_ISR_GIF5_Pos
 (16U)

	)

3085 
	#DMA_ISR_GIF5_Msk
 (0x1UL << 
DMA_ISR_GIF5_Pos
Ë

	)

3086 
	#DMA_ISR_GIF5
 
DMA_ISR_GIF5_Msk


	)

3087 
	#DMA_ISR_TCIF5_Pos
 (17U)

	)

3088 
	#DMA_ISR_TCIF5_Msk
 (0x1UL << 
DMA_ISR_TCIF5_Pos
Ë

	)

3089 
	#DMA_ISR_TCIF5
 
DMA_ISR_TCIF5_Msk


	)

3090 
	#DMA_ISR_HTIF5_Pos
 (18U)

	)

3091 
	#DMA_ISR_HTIF5_Msk
 (0x1UL << 
DMA_ISR_HTIF5_Pos
Ë

	)

3092 
	#DMA_ISR_HTIF5
 
DMA_ISR_HTIF5_Msk


	)

3093 
	#DMA_ISR_TEIF5_Pos
 (19U)

	)

3094 
	#DMA_ISR_TEIF5_Msk
 (0x1UL << 
DMA_ISR_TEIF5_Pos
Ë

	)

3095 
	#DMA_ISR_TEIF5
 
DMA_ISR_TEIF5_Msk


	)

3096 
	#DMA_ISR_GIF6_Pos
 (20U)

	)

3097 
	#DMA_ISR_GIF6_Msk
 (0x1UL << 
DMA_ISR_GIF6_Pos
Ë

	)

3098 
	#DMA_ISR_GIF6
 
DMA_ISR_GIF6_Msk


	)

3099 
	#DMA_ISR_TCIF6_Pos
 (21U)

	)

3100 
	#DMA_ISR_TCIF6_Msk
 (0x1UL << 
DMA_ISR_TCIF6_Pos
Ë

	)

3101 
	#DMA_ISR_TCIF6
 
DMA_ISR_TCIF6_Msk


	)

3102 
	#DMA_ISR_HTIF6_Pos
 (22U)

	)

3103 
	#DMA_ISR_HTIF6_Msk
 (0x1UL << 
DMA_ISR_HTIF6_Pos
Ë

	)

3104 
	#DMA_ISR_HTIF6
 
DMA_ISR_HTIF6_Msk


	)

3105 
	#DMA_ISR_TEIF6_Pos
 (23U)

	)

3106 
	#DMA_ISR_TEIF6_Msk
 (0x1UL << 
DMA_ISR_TEIF6_Pos
Ë

	)

3107 
	#DMA_ISR_TEIF6
 
DMA_ISR_TEIF6_Msk


	)

3108 
	#DMA_ISR_GIF7_Pos
 (24U)

	)

3109 
	#DMA_ISR_GIF7_Msk
 (0x1UL << 
DMA_ISR_GIF7_Pos
Ë

	)

3110 
	#DMA_ISR_GIF7
 
DMA_ISR_GIF7_Msk


	)

3111 
	#DMA_ISR_TCIF7_Pos
 (25U)

	)

3112 
	#DMA_ISR_TCIF7_Msk
 (0x1UL << 
DMA_ISR_TCIF7_Pos
Ë

	)

3113 
	#DMA_ISR_TCIF7
 
DMA_ISR_TCIF7_Msk


	)

3114 
	#DMA_ISR_HTIF7_Pos
 (26U)

	)

3115 
	#DMA_ISR_HTIF7_Msk
 (0x1UL << 
DMA_ISR_HTIF7_Pos
Ë

	)

3116 
	#DMA_ISR_HTIF7
 
DMA_ISR_HTIF7_Msk


	)

3117 
	#DMA_ISR_TEIF7_Pos
 (27U)

	)

3118 
	#DMA_ISR_TEIF7_Msk
 (0x1UL << 
DMA_ISR_TEIF7_Pos
Ë

	)

3119 
	#DMA_ISR_TEIF7
 
DMA_ISR_TEIF7_Msk


	)

3122 
	#DMA_IFCR_CGIF1_Pos
 (0U)

	)

3123 
	#DMA_IFCR_CGIF1_Msk
 (0x1UL << 
DMA_IFCR_CGIF1_Pos
Ë

	)

3124 
	#DMA_IFCR_CGIF1
 
DMA_IFCR_CGIF1_Msk


	)

3125 
	#DMA_IFCR_CTCIF1_Pos
 (1U)

	)

3126 
	#DMA_IFCR_CTCIF1_Msk
 (0x1UL << 
DMA_IFCR_CTCIF1_Pos
Ë

	)

3127 
	#DMA_IFCR_CTCIF1
 
DMA_IFCR_CTCIF1_Msk


	)

3128 
	#DMA_IFCR_CHTIF1_Pos
 (2U)

	)

3129 
	#DMA_IFCR_CHTIF1_Msk
 (0x1UL << 
DMA_IFCR_CHTIF1_Pos
Ë

	)

3130 
	#DMA_IFCR_CHTIF1
 
DMA_IFCR_CHTIF1_Msk


	)

3131 
	#DMA_IFCR_CTEIF1_Pos
 (3U)

	)

3132 
	#DMA_IFCR_CTEIF1_Msk
 (0x1UL << 
DMA_IFCR_CTEIF1_Pos
Ë

	)

3133 
	#DMA_IFCR_CTEIF1
 
DMA_IFCR_CTEIF1_Msk


	)

3134 
	#DMA_IFCR_CGIF2_Pos
 (4U)

	)

3135 
	#DMA_IFCR_CGIF2_Msk
 (0x1UL << 
DMA_IFCR_CGIF2_Pos
Ë

	)

3136 
	#DMA_IFCR_CGIF2
 
DMA_IFCR_CGIF2_Msk


	)

3137 
	#DMA_IFCR_CTCIF2_Pos
 (5U)

	)

3138 
	#DMA_IFCR_CTCIF2_Msk
 (0x1UL << 
DMA_IFCR_CTCIF2_Pos
Ë

	)

3139 
	#DMA_IFCR_CTCIF2
 
DMA_IFCR_CTCIF2_Msk


	)

3140 
	#DMA_IFCR_CHTIF2_Pos
 (6U)

	)

3141 
	#DMA_IFCR_CHTIF2_Msk
 (0x1UL << 
DMA_IFCR_CHTIF2_Pos
Ë

	)

3142 
	#DMA_IFCR_CHTIF2
 
DMA_IFCR_CHTIF2_Msk


	)

3143 
	#DMA_IFCR_CTEIF2_Pos
 (7U)

	)

3144 
	#DMA_IFCR_CTEIF2_Msk
 (0x1UL << 
DMA_IFCR_CTEIF2_Pos
Ë

	)

3145 
	#DMA_IFCR_CTEIF2
 
DMA_IFCR_CTEIF2_Msk


	)

3146 
	#DMA_IFCR_CGIF3_Pos
 (8U)

	)

3147 
	#DMA_IFCR_CGIF3_Msk
 (0x1UL << 
DMA_IFCR_CGIF3_Pos
Ë

	)

3148 
	#DMA_IFCR_CGIF3
 
DMA_IFCR_CGIF3_Msk


	)

3149 
	#DMA_IFCR_CTCIF3_Pos
 (9U)

	)

3150 
	#DMA_IFCR_CTCIF3_Msk
 (0x1UL << 
DMA_IFCR_CTCIF3_Pos
Ë

	)

3151 
	#DMA_IFCR_CTCIF3
 
DMA_IFCR_CTCIF3_Msk


	)

3152 
	#DMA_IFCR_CHTIF3_Pos
 (10U)

	)

3153 
	#DMA_IFCR_CHTIF3_Msk
 (0x1UL << 
DMA_IFCR_CHTIF3_Pos
Ë

	)

3154 
	#DMA_IFCR_CHTIF3
 
DMA_IFCR_CHTIF3_Msk


	)

3155 
	#DMA_IFCR_CTEIF3_Pos
 (11U)

	)

3156 
	#DMA_IFCR_CTEIF3_Msk
 (0x1UL << 
DMA_IFCR_CTEIF3_Pos
Ë

	)

3157 
	#DMA_IFCR_CTEIF3
 
DMA_IFCR_CTEIF3_Msk


	)

3158 
	#DMA_IFCR_CGIF4_Pos
 (12U)

	)

3159 
	#DMA_IFCR_CGIF4_Msk
 (0x1UL << 
DMA_IFCR_CGIF4_Pos
Ë

	)

3160 
	#DMA_IFCR_CGIF4
 
DMA_IFCR_CGIF4_Msk


	)

3161 
	#DMA_IFCR_CTCIF4_Pos
 (13U)

	)

3162 
	#DMA_IFCR_CTCIF4_Msk
 (0x1UL << 
DMA_IFCR_CTCIF4_Pos
Ë

	)

3163 
	#DMA_IFCR_CTCIF4
 
DMA_IFCR_CTCIF4_Msk


	)

3164 
	#DMA_IFCR_CHTIF4_Pos
 (14U)

	)

3165 
	#DMA_IFCR_CHTIF4_Msk
 (0x1UL << 
DMA_IFCR_CHTIF4_Pos
Ë

	)

3166 
	#DMA_IFCR_CHTIF4
 
DMA_IFCR_CHTIF4_Msk


	)

3167 
	#DMA_IFCR_CTEIF4_Pos
 (15U)

	)

3168 
	#DMA_IFCR_CTEIF4_Msk
 (0x1UL << 
DMA_IFCR_CTEIF4_Pos
Ë

	)

3169 
	#DMA_IFCR_CTEIF4
 
DMA_IFCR_CTEIF4_Msk


	)

3170 
	#DMA_IFCR_CGIF5_Pos
 (16U)

	)

3171 
	#DMA_IFCR_CGIF5_Msk
 (0x1UL << 
DMA_IFCR_CGIF5_Pos
Ë

	)

3172 
	#DMA_IFCR_CGIF5
 
DMA_IFCR_CGIF5_Msk


	)

3173 
	#DMA_IFCR_CTCIF5_Pos
 (17U)

	)

3174 
	#DMA_IFCR_CTCIF5_Msk
 (0x1UL << 
DMA_IFCR_CTCIF5_Pos
Ë

	)

3175 
	#DMA_IFCR_CTCIF5
 
DMA_IFCR_CTCIF5_Msk


	)

3176 
	#DMA_IFCR_CHTIF5_Pos
 (18U)

	)

3177 
	#DMA_IFCR_CHTIF5_Msk
 (0x1UL << 
DMA_IFCR_CHTIF5_Pos
Ë

	)

3178 
	#DMA_IFCR_CHTIF5
 
DMA_IFCR_CHTIF5_Msk


	)

3179 
	#DMA_IFCR_CTEIF5_Pos
 (19U)

	)

3180 
	#DMA_IFCR_CTEIF5_Msk
 (0x1UL << 
DMA_IFCR_CTEIF5_Pos
Ë

	)

3181 
	#DMA_IFCR_CTEIF5
 
DMA_IFCR_CTEIF5_Msk


	)

3182 
	#DMA_IFCR_CGIF6_Pos
 (20U)

	)

3183 
	#DMA_IFCR_CGIF6_Msk
 (0x1UL << 
DMA_IFCR_CGIF6_Pos
Ë

	)

3184 
	#DMA_IFCR_CGIF6
 
DMA_IFCR_CGIF6_Msk


	)

3185 
	#DMA_IFCR_CTCIF6_Pos
 (21U)

	)

3186 
	#DMA_IFCR_CTCIF6_Msk
 (0x1UL << 
DMA_IFCR_CTCIF6_Pos
Ë

	)

3187 
	#DMA_IFCR_CTCIF6
 
DMA_IFCR_CTCIF6_Msk


	)

3188 
	#DMA_IFCR_CHTIF6_Pos
 (22U)

	)

3189 
	#DMA_IFCR_CHTIF6_Msk
 (0x1UL << 
DMA_IFCR_CHTIF6_Pos
Ë

	)

3190 
	#DMA_IFCR_CHTIF6
 
DMA_IFCR_CHTIF6_Msk


	)

3191 
	#DMA_IFCR_CTEIF6_Pos
 (23U)

	)

3192 
	#DMA_IFCR_CTEIF6_Msk
 (0x1UL << 
DMA_IFCR_CTEIF6_Pos
Ë

	)

3193 
	#DMA_IFCR_CTEIF6
 
DMA_IFCR_CTEIF6_Msk


	)

3194 
	#DMA_IFCR_CGIF7_Pos
 (24U)

	)

3195 
	#DMA_IFCR_CGIF7_Msk
 (0x1UL << 
DMA_IFCR_CGIF7_Pos
Ë

	)

3196 
	#DMA_IFCR_CGIF7
 
DMA_IFCR_CGIF7_Msk


	)

3197 
	#DMA_IFCR_CTCIF7_Pos
 (25U)

	)

3198 
	#DMA_IFCR_CTCIF7_Msk
 (0x1UL << 
DMA_IFCR_CTCIF7_Pos
Ë

	)

3199 
	#DMA_IFCR_CTCIF7
 
DMA_IFCR_CTCIF7_Msk


	)

3200 
	#DMA_IFCR_CHTIF7_Pos
 (26U)

	)

3201 
	#DMA_IFCR_CHTIF7_Msk
 (0x1UL << 
DMA_IFCR_CHTIF7_Pos
Ë

	)

3202 
	#DMA_IFCR_CHTIF7
 
DMA_IFCR_CHTIF7_Msk


	)

3203 
	#DMA_IFCR_CTEIF7_Pos
 (27U)

	)

3204 
	#DMA_IFCR_CTEIF7_Msk
 (0x1UL << 
DMA_IFCR_CTEIF7_Pos
Ë

	)

3205 
	#DMA_IFCR_CTEIF7
 
DMA_IFCR_CTEIF7_Msk


	)

3208 
	#DMA_CCR_EN_Pos
 (0U)

	)

3209 
	#DMA_CCR_EN_Msk
 (0x1UL << 
DMA_CCR_EN_Pos
Ë

	)

3210 
	#DMA_CCR_EN
 
DMA_CCR_EN_Msk


	)

3211 
	#DMA_CCR_TCIE_Pos
 (1U)

	)

3212 
	#DMA_CCR_TCIE_Msk
 (0x1UL << 
DMA_CCR_TCIE_Pos
Ë

	)

3213 
	#DMA_CCR_TCIE
 
DMA_CCR_TCIE_Msk


	)

3214 
	#DMA_CCR_HTIE_Pos
 (2U)

	)

3215 
	#DMA_CCR_HTIE_Msk
 (0x1UL << 
DMA_CCR_HTIE_Pos
Ë

	)

3216 
	#DMA_CCR_HTIE
 
DMA_CCR_HTIE_Msk


	)

3217 
	#DMA_CCR_TEIE_Pos
 (3U)

	)

3218 
	#DMA_CCR_TEIE_Msk
 (0x1UL << 
DMA_CCR_TEIE_Pos
Ë

	)

3219 
	#DMA_CCR_TEIE
 
DMA_CCR_TEIE_Msk


	)

3220 
	#DMA_CCR_DIR_Pos
 (4U)

	)

3221 
	#DMA_CCR_DIR_Msk
 (0x1UL << 
DMA_CCR_DIR_Pos
Ë

	)

3222 
	#DMA_CCR_DIR
 
DMA_CCR_DIR_Msk


	)

3223 
	#DMA_CCR_CIRC_Pos
 (5U)

	)

3224 
	#DMA_CCR_CIRC_Msk
 (0x1UL << 
DMA_CCR_CIRC_Pos
Ë

	)

3225 
	#DMA_CCR_CIRC
 
DMA_CCR_CIRC_Msk


	)

3226 
	#DMA_CCR_PINC_Pos
 (6U)

	)

3227 
	#DMA_CCR_PINC_Msk
 (0x1UL << 
DMA_CCR_PINC_Pos
Ë

	)

3228 
	#DMA_CCR_PINC
 
DMA_CCR_PINC_Msk


	)

3229 
	#DMA_CCR_MINC_Pos
 (7U)

	)

3230 
	#DMA_CCR_MINC_Msk
 (0x1UL << 
DMA_CCR_MINC_Pos
Ë

	)

3231 
	#DMA_CCR_MINC
 
DMA_CCR_MINC_Msk


	)

3233 
	#DMA_CCR_PSIZE_Pos
 (8U)

	)

3234 
	#DMA_CCR_PSIZE_Msk
 (0x3UL << 
DMA_CCR_PSIZE_Pos
Ë

	)

3235 
	#DMA_CCR_PSIZE
 
DMA_CCR_PSIZE_Msk


	)

3236 
	#DMA_CCR_PSIZE_0
 (0x1UL << 
DMA_CCR_PSIZE_Pos
Ë

	)

3237 
	#DMA_CCR_PSIZE_1
 (0x2UL << 
DMA_CCR_PSIZE_Pos
Ë

	)

3239 
	#DMA_CCR_MSIZE_Pos
 (10U)

	)

3240 
	#DMA_CCR_MSIZE_Msk
 (0x3UL << 
DMA_CCR_MSIZE_Pos
Ë

	)

3241 
	#DMA_CCR_MSIZE
 
DMA_CCR_MSIZE_Msk


	)

3242 
	#DMA_CCR_MSIZE_0
 (0x1UL << 
DMA_CCR_MSIZE_Pos
Ë

	)

3243 
	#DMA_CCR_MSIZE_1
 (0x2UL << 
DMA_CCR_MSIZE_Pos
Ë

	)

3245 
	#DMA_CCR_PL_Pos
 (12U)

	)

3246 
	#DMA_CCR_PL_Msk
 (0x3UL << 
DMA_CCR_PL_Pos
Ë

	)

3247 
	#DMA_CCR_PL
 
DMA_CCR_PL_Msk


	)

3248 
	#DMA_CCR_PL_0
 (0x1UL << 
DMA_CCR_PL_Pos
Ë

	)

3249 
	#DMA_CCR_PL_1
 (0x2UL << 
DMA_CCR_PL_Pos
Ë

	)

3251 
	#DMA_CCR_MEM2MEM_Pos
 (14U)

	)

3252 
	#DMA_CCR_MEM2MEM_Msk
 (0x1UL << 
DMA_CCR_MEM2MEM_Pos
Ë

	)

3253 
	#DMA_CCR_MEM2MEM
 
DMA_CCR_MEM2MEM_Msk


	)

3256 
	#DMA_CNDTR_NDT_Pos
 (0U)

	)

3257 
	#DMA_CNDTR_NDT_Msk
 (0xFFFFUL << 
DMA_CNDTR_NDT_Pos
Ë

	)

3258 
	#DMA_CNDTR_NDT
 
DMA_CNDTR_NDT_Msk


	)

3261 
	#DMA_CPAR_PA_Pos
 (0U)

	)

3262 
	#DMA_CPAR_PA_Msk
 (0xFFFFFFFFUL << 
DMA_CPAR_PA_Pos
Ë

	)

3263 
	#DMA_CPAR_PA
 
DMA_CPAR_PA_Msk


	)

3266 
	#DMA_CMAR_MA_Pos
 (0U)

	)

3267 
	#DMA_CMAR_MA_Msk
 (0xFFFFFFFFUL << 
DMA_CMAR_MA_Pos
Ë

	)

3268 
	#DMA_CMAR_MA
 
DMA_CMAR_MA_Msk


	)

3279 
	#ADC_MULTIMODE_SUPPORT


	)

3282 
	#ADC_SR_AWD_Pos
 (0U)

	)

3283 
	#ADC_SR_AWD_Msk
 (0x1UL << 
ADC_SR_AWD_Pos
Ë

	)

3284 
	#ADC_SR_AWD
 
ADC_SR_AWD_Msk


	)

3285 
	#ADC_SR_EOS_Pos
 (1U)

	)

3286 
	#ADC_SR_EOS_Msk
 (0x1UL << 
ADC_SR_EOS_Pos
Ë

	)

3287 
	#ADC_SR_EOS
 
ADC_SR_EOS_Msk


	)

3288 
	#ADC_SR_JEOS_Pos
 (2U)

	)

3289 
	#ADC_SR_JEOS_Msk
 (0x1UL << 
ADC_SR_JEOS_Pos
Ë

	)

3290 
	#ADC_SR_JEOS
 
ADC_SR_JEOS_Msk


	)

3291 
	#ADC_SR_JSTRT_Pos
 (3U)

	)

3292 
	#ADC_SR_JSTRT_Msk
 (0x1UL << 
ADC_SR_JSTRT_Pos
Ë

	)

3293 
	#ADC_SR_JSTRT
 
ADC_SR_JSTRT_Msk


	)

3294 
	#ADC_SR_STRT_Pos
 (4U)

	)

3295 
	#ADC_SR_STRT_Msk
 (0x1UL << 
ADC_SR_STRT_Pos
Ë

	)

3296 
	#ADC_SR_STRT
 
ADC_SR_STRT_Msk


	)

3299 
	#ADC_SR_EOC
 (
ADC_SR_EOS
)

	)

3300 
	#ADC_SR_JEOC
 (
ADC_SR_JEOS
)

	)

3303 
	#ADC_CR1_AWDCH_Pos
 (0U)

	)

3304 
	#ADC_CR1_AWDCH_Msk
 (0x1FUL << 
ADC_CR1_AWDCH_Pos
Ë

	)

3305 
	#ADC_CR1_AWDCH
 
ADC_CR1_AWDCH_Msk


	)

3306 
	#ADC_CR1_AWDCH_0
 (0x01UL << 
ADC_CR1_AWDCH_Pos
Ë

	)

3307 
	#ADC_CR1_AWDCH_1
 (0x02UL << 
ADC_CR1_AWDCH_Pos
Ë

	)

3308 
	#ADC_CR1_AWDCH_2
 (0x04UL << 
ADC_CR1_AWDCH_Pos
Ë

	)

3309 
	#ADC_CR1_AWDCH_3
 (0x08UL << 
ADC_CR1_AWDCH_Pos
Ë

	)

3310 
	#ADC_CR1_AWDCH_4
 (0x10UL << 
ADC_CR1_AWDCH_Pos
Ë

	)

3312 
	#ADC_CR1_EOSIE_Pos
 (5U)

	)

3313 
	#ADC_CR1_EOSIE_Msk
 (0x1UL << 
ADC_CR1_EOSIE_Pos
Ë

	)

3314 
	#ADC_CR1_EOSIE
 
ADC_CR1_EOSIE_Msk


	)

3315 
	#ADC_CR1_AWDIE_Pos
 (6U)

	)

3316 
	#ADC_CR1_AWDIE_Msk
 (0x1UL << 
ADC_CR1_AWDIE_Pos
Ë

	)

3317 
	#ADC_CR1_AWDIE
 
ADC_CR1_AWDIE_Msk


	)

3318 
	#ADC_CR1_JEOSIE_Pos
 (7U)

	)

3319 
	#ADC_CR1_JEOSIE_Msk
 (0x1UL << 
ADC_CR1_JEOSIE_Pos
Ë

	)

3320 
	#ADC_CR1_JEOSIE
 
ADC_CR1_JEOSIE_Msk


	)

3321 
	#ADC_CR1_SCAN_Pos
 (8U)

	)

3322 
	#ADC_CR1_SCAN_Msk
 (0x1UL << 
ADC_CR1_SCAN_Pos
Ë

	)

3323 
	#ADC_CR1_SCAN
 
ADC_CR1_SCAN_Msk


	)

3324 
	#ADC_CR1_AWDSGL_Pos
 (9U)

	)

3325 
	#ADC_CR1_AWDSGL_Msk
 (0x1UL << 
ADC_CR1_AWDSGL_Pos
Ë

	)

3326 
	#ADC_CR1_AWDSGL
 
ADC_CR1_AWDSGL_Msk


	)

3327 
	#ADC_CR1_JAUTO_Pos
 (10U)

	)

3328 
	#ADC_CR1_JAUTO_Msk
 (0x1UL << 
ADC_CR1_JAUTO_Pos
Ë

	)

3329 
	#ADC_CR1_JAUTO
 
ADC_CR1_JAUTO_Msk


	)

3330 
	#ADC_CR1_DISCEN_Pos
 (11U)

	)

3331 
	#ADC_CR1_DISCEN_Msk
 (0x1UL << 
ADC_CR1_DISCEN_Pos
Ë

	)

3332 
	#ADC_CR1_DISCEN
 
ADC_CR1_DISCEN_Msk


	)

3333 
	#ADC_CR1_JDISCEN_Pos
 (12U)

	)

3334 
	#ADC_CR1_JDISCEN_Msk
 (0x1UL << 
ADC_CR1_JDISCEN_Pos
Ë

	)

3335 
	#ADC_CR1_JDISCEN
 
ADC_CR1_JDISCEN_Msk


	)

3337 
	#ADC_CR1_DISCNUM_Pos
 (13U)

	)

3338 
	#ADC_CR1_DISCNUM_Msk
 (0x7UL << 
ADC_CR1_DISCNUM_Pos
Ë

	)

3339 
	#ADC_CR1_DISCNUM
 
ADC_CR1_DISCNUM_Msk


	)

3340 
	#ADC_CR1_DISCNUM_0
 (0x1UL << 
ADC_CR1_DISCNUM_Pos
Ë

	)

3341 
	#ADC_CR1_DISCNUM_1
 (0x2UL << 
ADC_CR1_DISCNUM_Pos
Ë

	)

3342 
	#ADC_CR1_DISCNUM_2
 (0x4UL << 
ADC_CR1_DISCNUM_Pos
Ë

	)

3344 
	#ADC_CR1_DUALMOD_Pos
 (16U)

	)

3345 
	#ADC_CR1_DUALMOD_Msk
 (0xFUL << 
ADC_CR1_DUALMOD_Pos
Ë

	)

3346 
	#ADC_CR1_DUALMOD
 
ADC_CR1_DUALMOD_Msk


	)

3347 
	#ADC_CR1_DUALMOD_0
 (0x1UL << 
ADC_CR1_DUALMOD_Pos
Ë

	)

3348 
	#ADC_CR1_DUALMOD_1
 (0x2UL << 
ADC_CR1_DUALMOD_Pos
Ë

	)

3349 
	#ADC_CR1_DUALMOD_2
 (0x4UL << 
ADC_CR1_DUALMOD_Pos
Ë

	)

3350 
	#ADC_CR1_DUALMOD_3
 (0x8UL << 
ADC_CR1_DUALMOD_Pos
Ë

	)

3352 
	#ADC_CR1_JAWDEN_Pos
 (22U)

	)

3353 
	#ADC_CR1_JAWDEN_Msk
 (0x1UL << 
ADC_CR1_JAWDEN_Pos
Ë

	)

3354 
	#ADC_CR1_JAWDEN
 
ADC_CR1_JAWDEN_Msk


	)

3355 
	#ADC_CR1_AWDEN_Pos
 (23U)

	)

3356 
	#ADC_CR1_AWDEN_Msk
 (0x1UL << 
ADC_CR1_AWDEN_Pos
Ë

	)

3357 
	#ADC_CR1_AWDEN
 
ADC_CR1_AWDEN_Msk


	)

3360 
	#ADC_CR1_EOCIE
 (
ADC_CR1_EOSIE
)

	)

3361 
	#ADC_CR1_JEOCIE
 (
ADC_CR1_JEOSIE
)

	)

3364 
	#ADC_CR2_ADON_Pos
 (0U)

	)

3365 
	#ADC_CR2_ADON_Msk
 (0x1UL << 
ADC_CR2_ADON_Pos
Ë

	)

3366 
	#ADC_CR2_ADON
 
ADC_CR2_ADON_Msk


	)

3367 
	#ADC_CR2_CONT_Pos
 (1U)

	)

3368 
	#ADC_CR2_CONT_Msk
 (0x1UL << 
ADC_CR2_CONT_Pos
Ë

	)

3369 
	#ADC_CR2_CONT
 
ADC_CR2_CONT_Msk


	)

3370 
	#ADC_CR2_CAL_Pos
 (2U)

	)

3371 
	#ADC_CR2_CAL_Msk
 (0x1UL << 
ADC_CR2_CAL_Pos
Ë

	)

3372 
	#ADC_CR2_CAL
 
ADC_CR2_CAL_Msk


	)

3373 
	#ADC_CR2_RSTCAL_Pos
 (3U)

	)

3374 
	#ADC_CR2_RSTCAL_Msk
 (0x1UL << 
ADC_CR2_RSTCAL_Pos
Ë

	)

3375 
	#ADC_CR2_RSTCAL
 
ADC_CR2_RSTCAL_Msk


	)

3376 
	#ADC_CR2_DMA_Pos
 (8U)

	)

3377 
	#ADC_CR2_DMA_Msk
 (0x1UL << 
ADC_CR2_DMA_Pos
Ë

	)

3378 
	#ADC_CR2_DMA
 
ADC_CR2_DMA_Msk


	)

3379 
	#ADC_CR2_ALIGN_Pos
 (11U)

	)

3380 
	#ADC_CR2_ALIGN_Msk
 (0x1UL << 
ADC_CR2_ALIGN_Pos
Ë

	)

3381 
	#ADC_CR2_ALIGN
 
ADC_CR2_ALIGN_Msk


	)

3383 
	#ADC_CR2_JEXTSEL_Pos
 (12U)

	)

3384 
	#ADC_CR2_JEXTSEL_Msk
 (0x7UL << 
ADC_CR2_JEXTSEL_Pos
Ë

	)

3385 
	#ADC_CR2_JEXTSEL
 
ADC_CR2_JEXTSEL_Msk


	)

3386 
	#ADC_CR2_JEXTSEL_0
 (0x1UL << 
ADC_CR2_JEXTSEL_Pos
Ë

	)

3387 
	#ADC_CR2_JEXTSEL_1
 (0x2UL << 
ADC_CR2_JEXTSEL_Pos
Ë

	)

3388 
	#ADC_CR2_JEXTSEL_2
 (0x4UL << 
ADC_CR2_JEXTSEL_Pos
Ë

	)

3390 
	#ADC_CR2_JEXTTRIG_Pos
 (15U)

	)

3391 
	#ADC_CR2_JEXTTRIG_Msk
 (0x1UL << 
ADC_CR2_JEXTTRIG_Pos
Ë

	)

3392 
	#ADC_CR2_JEXTTRIG
 
ADC_CR2_JEXTTRIG_Msk


	)

3394 
	#ADC_CR2_EXTSEL_Pos
 (17U)

	)

3395 
	#ADC_CR2_EXTSEL_Msk
 (0x7UL << 
ADC_CR2_EXTSEL_Pos
Ë

	)

3396 
	#ADC_CR2_EXTSEL
 
ADC_CR2_EXTSEL_Msk


	)

3397 
	#ADC_CR2_EXTSEL_0
 (0x1UL << 
ADC_CR2_EXTSEL_Pos
Ë

	)

3398 
	#ADC_CR2_EXTSEL_1
 (0x2UL << 
ADC_CR2_EXTSEL_Pos
Ë

	)

3399 
	#ADC_CR2_EXTSEL_2
 (0x4UL << 
ADC_CR2_EXTSEL_Pos
Ë

	)

3401 
	#ADC_CR2_EXTTRIG_Pos
 (20U)

	)

3402 
	#ADC_CR2_EXTTRIG_Msk
 (0x1UL << 
ADC_CR2_EXTTRIG_Pos
Ë

	)

3403 
	#ADC_CR2_EXTTRIG
 
ADC_CR2_EXTTRIG_Msk


	)

3404 
	#ADC_CR2_JSWSTART_Pos
 (21U)

	)

3405 
	#ADC_CR2_JSWSTART_Msk
 (0x1UL << 
ADC_CR2_JSWSTART_Pos
Ë

	)

3406 
	#ADC_CR2_JSWSTART
 
ADC_CR2_JSWSTART_Msk


	)

3407 
	#ADC_CR2_SWSTART_Pos
 (22U)

	)

3408 
	#ADC_CR2_SWSTART_Msk
 (0x1UL << 
ADC_CR2_SWSTART_Pos
Ë

	)

3409 
	#ADC_CR2_SWSTART
 
ADC_CR2_SWSTART_Msk


	)

3410 
	#ADC_CR2_TSVREFE_Pos
 (23U)

	)

3411 
	#ADC_CR2_TSVREFE_Msk
 (0x1UL << 
ADC_CR2_TSVREFE_Pos
Ë

	)

3412 
	#ADC_CR2_TSVREFE
 
ADC_CR2_TSVREFE_Msk


	)

3415 
	#ADC_SMPR1_SMP10_Pos
 (0U)

	)

3416 
	#ADC_SMPR1_SMP10_Msk
 (0x7UL << 
ADC_SMPR1_SMP10_Pos
Ë

	)

3417 
	#ADC_SMPR1_SMP10
 
ADC_SMPR1_SMP10_Msk


	)

3418 
	#ADC_SMPR1_SMP10_0
 (0x1UL << 
ADC_SMPR1_SMP10_Pos
Ë

	)

3419 
	#ADC_SMPR1_SMP10_1
 (0x2UL << 
ADC_SMPR1_SMP10_Pos
Ë

	)

3420 
	#ADC_SMPR1_SMP10_2
 (0x4UL << 
ADC_SMPR1_SMP10_Pos
Ë

	)

3422 
	#ADC_SMPR1_SMP11_Pos
 (3U)

	)

3423 
	#ADC_SMPR1_SMP11_Msk
 (0x7UL << 
ADC_SMPR1_SMP11_Pos
Ë

	)

3424 
	#ADC_SMPR1_SMP11
 
ADC_SMPR1_SMP11_Msk


	)

3425 
	#ADC_SMPR1_SMP11_0
 (0x1UL << 
ADC_SMPR1_SMP11_Pos
Ë

	)

3426 
	#ADC_SMPR1_SMP11_1
 (0x2UL << 
ADC_SMPR1_SMP11_Pos
Ë

	)

3427 
	#ADC_SMPR1_SMP11_2
 (0x4UL << 
ADC_SMPR1_SMP11_Pos
Ë

	)

3429 
	#ADC_SMPR1_SMP12_Pos
 (6U)

	)

3430 
	#ADC_SMPR1_SMP12_Msk
 (0x7UL << 
ADC_SMPR1_SMP12_Pos
Ë

	)

3431 
	#ADC_SMPR1_SMP12
 
ADC_SMPR1_SMP12_Msk


	)

3432 
	#ADC_SMPR1_SMP12_0
 (0x1UL << 
ADC_SMPR1_SMP12_Pos
Ë

	)

3433 
	#ADC_SMPR1_SMP12_1
 (0x2UL << 
ADC_SMPR1_SMP12_Pos
Ë

	)

3434 
	#ADC_SMPR1_SMP12_2
 (0x4UL << 
ADC_SMPR1_SMP12_Pos
Ë

	)

3436 
	#ADC_SMPR1_SMP13_Pos
 (9U)

	)

3437 
	#ADC_SMPR1_SMP13_Msk
 (0x7UL << 
ADC_SMPR1_SMP13_Pos
Ë

	)

3438 
	#ADC_SMPR1_SMP13
 
ADC_SMPR1_SMP13_Msk


	)

3439 
	#ADC_SMPR1_SMP13_0
 (0x1UL << 
ADC_SMPR1_SMP13_Pos
Ë

	)

3440 
	#ADC_SMPR1_SMP13_1
 (0x2UL << 
ADC_SMPR1_SMP13_Pos
Ë

	)

3441 
	#ADC_SMPR1_SMP13_2
 (0x4UL << 
ADC_SMPR1_SMP13_Pos
Ë

	)

3443 
	#ADC_SMPR1_SMP14_Pos
 (12U)

	)

3444 
	#ADC_SMPR1_SMP14_Msk
 (0x7UL << 
ADC_SMPR1_SMP14_Pos
Ë

	)

3445 
	#ADC_SMPR1_SMP14
 
ADC_SMPR1_SMP14_Msk


	)

3446 
	#ADC_SMPR1_SMP14_0
 (0x1UL << 
ADC_SMPR1_SMP14_Pos
Ë

	)

3447 
	#ADC_SMPR1_SMP14_1
 (0x2UL << 
ADC_SMPR1_SMP14_Pos
Ë

	)

3448 
	#ADC_SMPR1_SMP14_2
 (0x4UL << 
ADC_SMPR1_SMP14_Pos
Ë

	)

3450 
	#ADC_SMPR1_SMP15_Pos
 (15U)

	)

3451 
	#ADC_SMPR1_SMP15_Msk
 (0x7UL << 
ADC_SMPR1_SMP15_Pos
Ë

	)

3452 
	#ADC_SMPR1_SMP15
 
ADC_SMPR1_SMP15_Msk


	)

3453 
	#ADC_SMPR1_SMP15_0
 (0x1UL << 
ADC_SMPR1_SMP15_Pos
Ë

	)

3454 
	#ADC_SMPR1_SMP15_1
 (0x2UL << 
ADC_SMPR1_SMP15_Pos
Ë

	)

3455 
	#ADC_SMPR1_SMP15_2
 (0x4UL << 
ADC_SMPR1_SMP15_Pos
Ë

	)

3457 
	#ADC_SMPR1_SMP16_Pos
 (18U)

	)

3458 
	#ADC_SMPR1_SMP16_Msk
 (0x7UL << 
ADC_SMPR1_SMP16_Pos
Ë

	)

3459 
	#ADC_SMPR1_SMP16
 
ADC_SMPR1_SMP16_Msk


	)

3460 
	#ADC_SMPR1_SMP16_0
 (0x1UL << 
ADC_SMPR1_SMP16_Pos
Ë

	)

3461 
	#ADC_SMPR1_SMP16_1
 (0x2UL << 
ADC_SMPR1_SMP16_Pos
Ë

	)

3462 
	#ADC_SMPR1_SMP16_2
 (0x4UL << 
ADC_SMPR1_SMP16_Pos
Ë

	)

3464 
	#ADC_SMPR1_SMP17_Pos
 (21U)

	)

3465 
	#ADC_SMPR1_SMP17_Msk
 (0x7UL << 
ADC_SMPR1_SMP17_Pos
Ë

	)

3466 
	#ADC_SMPR1_SMP17
 
ADC_SMPR1_SMP17_Msk


	)

3467 
	#ADC_SMPR1_SMP17_0
 (0x1UL << 
ADC_SMPR1_SMP17_Pos
Ë

	)

3468 
	#ADC_SMPR1_SMP17_1
 (0x2UL << 
ADC_SMPR1_SMP17_Pos
Ë

	)

3469 
	#ADC_SMPR1_SMP17_2
 (0x4UL << 
ADC_SMPR1_SMP17_Pos
Ë

	)

3472 
	#ADC_SMPR2_SMP0_Pos
 (0U)

	)

3473 
	#ADC_SMPR2_SMP0_Msk
 (0x7UL << 
ADC_SMPR2_SMP0_Pos
Ë

	)

3474 
	#ADC_SMPR2_SMP0
 
ADC_SMPR2_SMP0_Msk


	)

3475 
	#ADC_SMPR2_SMP0_0
 (0x1UL << 
ADC_SMPR2_SMP0_Pos
Ë

	)

3476 
	#ADC_SMPR2_SMP0_1
 (0x2UL << 
ADC_SMPR2_SMP0_Pos
Ë

	)

3477 
	#ADC_SMPR2_SMP0_2
 (0x4UL << 
ADC_SMPR2_SMP0_Pos
Ë

	)

3479 
	#ADC_SMPR2_SMP1_Pos
 (3U)

	)

3480 
	#ADC_SMPR2_SMP1_Msk
 (0x7UL << 
ADC_SMPR2_SMP1_Pos
Ë

	)

3481 
	#ADC_SMPR2_SMP1
 
ADC_SMPR2_SMP1_Msk


	)

3482 
	#ADC_SMPR2_SMP1_0
 (0x1UL << 
ADC_SMPR2_SMP1_Pos
Ë

	)

3483 
	#ADC_SMPR2_SMP1_1
 (0x2UL << 
ADC_SMPR2_SMP1_Pos
Ë

	)

3484 
	#ADC_SMPR2_SMP1_2
 (0x4UL << 
ADC_SMPR2_SMP1_Pos
Ë

	)

3486 
	#ADC_SMPR2_SMP2_Pos
 (6U)

	)

3487 
	#ADC_SMPR2_SMP2_Msk
 (0x7UL << 
ADC_SMPR2_SMP2_Pos
Ë

	)

3488 
	#ADC_SMPR2_SMP2
 
ADC_SMPR2_SMP2_Msk


	)

3489 
	#ADC_SMPR2_SMP2_0
 (0x1UL << 
ADC_SMPR2_SMP2_Pos
Ë

	)

3490 
	#ADC_SMPR2_SMP2_1
 (0x2UL << 
ADC_SMPR2_SMP2_Pos
Ë

	)

3491 
	#ADC_SMPR2_SMP2_2
 (0x4UL << 
ADC_SMPR2_SMP2_Pos
Ë

	)

3493 
	#ADC_SMPR2_SMP3_Pos
 (9U)

	)

3494 
	#ADC_SMPR2_SMP3_Msk
 (0x7UL << 
ADC_SMPR2_SMP3_Pos
Ë

	)

3495 
	#ADC_SMPR2_SMP3
 
ADC_SMPR2_SMP3_Msk


	)

3496 
	#ADC_SMPR2_SMP3_0
 (0x1UL << 
ADC_SMPR2_SMP3_Pos
Ë

	)

3497 
	#ADC_SMPR2_SMP3_1
 (0x2UL << 
ADC_SMPR2_SMP3_Pos
Ë

	)

3498 
	#ADC_SMPR2_SMP3_2
 (0x4UL << 
ADC_SMPR2_SMP3_Pos
Ë

	)

3500 
	#ADC_SMPR2_SMP4_Pos
 (12U)

	)

3501 
	#ADC_SMPR2_SMP4_Msk
 (0x7UL << 
ADC_SMPR2_SMP4_Pos
Ë

	)

3502 
	#ADC_SMPR2_SMP4
 
ADC_SMPR2_SMP4_Msk


	)

3503 
	#ADC_SMPR2_SMP4_0
 (0x1UL << 
ADC_SMPR2_SMP4_Pos
Ë

	)

3504 
	#ADC_SMPR2_SMP4_1
 (0x2UL << 
ADC_SMPR2_SMP4_Pos
Ë

	)

3505 
	#ADC_SMPR2_SMP4_2
 (0x4UL << 
ADC_SMPR2_SMP4_Pos
Ë

	)

3507 
	#ADC_SMPR2_SMP5_Pos
 (15U)

	)

3508 
	#ADC_SMPR2_SMP5_Msk
 (0x7UL << 
ADC_SMPR2_SMP5_Pos
Ë

	)

3509 
	#ADC_SMPR2_SMP5
 
ADC_SMPR2_SMP5_Msk


	)

3510 
	#ADC_SMPR2_SMP5_0
 (0x1UL << 
ADC_SMPR2_SMP5_Pos
Ë

	)

3511 
	#ADC_SMPR2_SMP5_1
 (0x2UL << 
ADC_SMPR2_SMP5_Pos
Ë

	)

3512 
	#ADC_SMPR2_SMP5_2
 (0x4UL << 
ADC_SMPR2_SMP5_Pos
Ë

	)

3514 
	#ADC_SMPR2_SMP6_Pos
 (18U)

	)

3515 
	#ADC_SMPR2_SMP6_Msk
 (0x7UL << 
ADC_SMPR2_SMP6_Pos
Ë

	)

3516 
	#ADC_SMPR2_SMP6
 
ADC_SMPR2_SMP6_Msk


	)

3517 
	#ADC_SMPR2_SMP6_0
 (0x1UL << 
ADC_SMPR2_SMP6_Pos
Ë

	)

3518 
	#ADC_SMPR2_SMP6_1
 (0x2UL << 
ADC_SMPR2_SMP6_Pos
Ë

	)

3519 
	#ADC_SMPR2_SMP6_2
 (0x4UL << 
ADC_SMPR2_SMP6_Pos
Ë

	)

3521 
	#ADC_SMPR2_SMP7_Pos
 (21U)

	)

3522 
	#ADC_SMPR2_SMP7_Msk
 (0x7UL << 
ADC_SMPR2_SMP7_Pos
Ë

	)

3523 
	#ADC_SMPR2_SMP7
 
ADC_SMPR2_SMP7_Msk


	)

3524 
	#ADC_SMPR2_SMP7_0
 (0x1UL << 
ADC_SMPR2_SMP7_Pos
Ë

	)

3525 
	#ADC_SMPR2_SMP7_1
 (0x2UL << 
ADC_SMPR2_SMP7_Pos
Ë

	)

3526 
	#ADC_SMPR2_SMP7_2
 (0x4UL << 
ADC_SMPR2_SMP7_Pos
Ë

	)

3528 
	#ADC_SMPR2_SMP8_Pos
 (24U)

	)

3529 
	#ADC_SMPR2_SMP8_Msk
 (0x7UL << 
ADC_SMPR2_SMP8_Pos
Ë

	)

3530 
	#ADC_SMPR2_SMP8
 
ADC_SMPR2_SMP8_Msk


	)

3531 
	#ADC_SMPR2_SMP8_0
 (0x1UL << 
ADC_SMPR2_SMP8_Pos
Ë

	)

3532 
	#ADC_SMPR2_SMP8_1
 (0x2UL << 
ADC_SMPR2_SMP8_Pos
Ë

	)

3533 
	#ADC_SMPR2_SMP8_2
 (0x4UL << 
ADC_SMPR2_SMP8_Pos
Ë

	)

3535 
	#ADC_SMPR2_SMP9_Pos
 (27U)

	)

3536 
	#ADC_SMPR2_SMP9_Msk
 (0x7UL << 
ADC_SMPR2_SMP9_Pos
Ë

	)

3537 
	#ADC_SMPR2_SMP9
 
ADC_SMPR2_SMP9_Msk


	)

3538 
	#ADC_SMPR2_SMP9_0
 (0x1UL << 
ADC_SMPR2_SMP9_Pos
Ë

	)

3539 
	#ADC_SMPR2_SMP9_1
 (0x2UL << 
ADC_SMPR2_SMP9_Pos
Ë

	)

3540 
	#ADC_SMPR2_SMP9_2
 (0x4UL << 
ADC_SMPR2_SMP9_Pos
Ë

	)

3543 
	#ADC_JOFR1_JOFFSET1_Pos
 (0U)

	)

3544 
	#ADC_JOFR1_JOFFSET1_Msk
 (0xFFFUL << 
ADC_JOFR1_JOFFSET1_Pos
Ë

	)

3545 
	#ADC_JOFR1_JOFFSET1
 
ADC_JOFR1_JOFFSET1_Msk


	)

3548 
	#ADC_JOFR2_JOFFSET2_Pos
 (0U)

	)

3549 
	#ADC_JOFR2_JOFFSET2_Msk
 (0xFFFUL << 
ADC_JOFR2_JOFFSET2_Pos
Ë

	)

3550 
	#ADC_JOFR2_JOFFSET2
 
ADC_JOFR2_JOFFSET2_Msk


	)

3553 
	#ADC_JOFR3_JOFFSET3_Pos
 (0U)

	)

3554 
	#ADC_JOFR3_JOFFSET3_Msk
 (0xFFFUL << 
ADC_JOFR3_JOFFSET3_Pos
Ë

	)

3555 
	#ADC_JOFR3_JOFFSET3
 
ADC_JOFR3_JOFFSET3_Msk


	)

3558 
	#ADC_JOFR4_JOFFSET4_Pos
 (0U)

	)

3559 
	#ADC_JOFR4_JOFFSET4_Msk
 (0xFFFUL << 
ADC_JOFR4_JOFFSET4_Pos
Ë

	)

3560 
	#ADC_JOFR4_JOFFSET4
 
ADC_JOFR4_JOFFSET4_Msk


	)

3563 
	#ADC_HTR_HT_Pos
 (0U)

	)

3564 
	#ADC_HTR_HT_Msk
 (0xFFFUL << 
ADC_HTR_HT_Pos
Ë

	)

3565 
	#ADC_HTR_HT
 
ADC_HTR_HT_Msk


	)

3568 
	#ADC_LTR_LT_Pos
 (0U)

	)

3569 
	#ADC_LTR_LT_Msk
 (0xFFFUL << 
ADC_LTR_LT_Pos
Ë

	)

3570 
	#ADC_LTR_LT
 
ADC_LTR_LT_Msk


	)

3573 
	#ADC_SQR1_SQ13_Pos
 (0U)

	)

3574 
	#ADC_SQR1_SQ13_Msk
 (0x1FUL << 
ADC_SQR1_SQ13_Pos
Ë

	)

3575 
	#ADC_SQR1_SQ13
 
ADC_SQR1_SQ13_Msk


	)

3576 
	#ADC_SQR1_SQ13_0
 (0x01UL << 
ADC_SQR1_SQ13_Pos
Ë

	)

3577 
	#ADC_SQR1_SQ13_1
 (0x02UL << 
ADC_SQR1_SQ13_Pos
Ë

	)

3578 
	#ADC_SQR1_SQ13_2
 (0x04UL << 
ADC_SQR1_SQ13_Pos
Ë

	)

3579 
	#ADC_SQR1_SQ13_3
 (0x08UL << 
ADC_SQR1_SQ13_Pos
Ë

	)

3580 
	#ADC_SQR1_SQ13_4
 (0x10UL << 
ADC_SQR1_SQ13_Pos
Ë

	)

3582 
	#ADC_SQR1_SQ14_Pos
 (5U)

	)

3583 
	#ADC_SQR1_SQ14_Msk
 (0x1FUL << 
ADC_SQR1_SQ14_Pos
Ë

	)

3584 
	#ADC_SQR1_SQ14
 
ADC_SQR1_SQ14_Msk


	)

3585 
	#ADC_SQR1_SQ14_0
 (0x01UL << 
ADC_SQR1_SQ14_Pos
Ë

	)

3586 
	#ADC_SQR1_SQ14_1
 (0x02UL << 
ADC_SQR1_SQ14_Pos
Ë

	)

3587 
	#ADC_SQR1_SQ14_2
 (0x04UL << 
ADC_SQR1_SQ14_Pos
Ë

	)

3588 
	#ADC_SQR1_SQ14_3
 (0x08UL << 
ADC_SQR1_SQ14_Pos
Ë

	)

3589 
	#ADC_SQR1_SQ14_4
 (0x10UL << 
ADC_SQR1_SQ14_Pos
Ë

	)

3591 
	#ADC_SQR1_SQ15_Pos
 (10U)

	)

3592 
	#ADC_SQR1_SQ15_Msk
 (0x1FUL << 
ADC_SQR1_SQ15_Pos
Ë

	)

3593 
	#ADC_SQR1_SQ15
 
ADC_SQR1_SQ15_Msk


	)

3594 
	#ADC_SQR1_SQ15_0
 (0x01UL << 
ADC_SQR1_SQ15_Pos
Ë

	)

3595 
	#ADC_SQR1_SQ15_1
 (0x02UL << 
ADC_SQR1_SQ15_Pos
Ë

	)

3596 
	#ADC_SQR1_SQ15_2
 (0x04UL << 
ADC_SQR1_SQ15_Pos
Ë

	)

3597 
	#ADC_SQR1_SQ15_3
 (0x08UL << 
ADC_SQR1_SQ15_Pos
Ë

	)

3598 
	#ADC_SQR1_SQ15_4
 (0x10UL << 
ADC_SQR1_SQ15_Pos
Ë

	)

3600 
	#ADC_SQR1_SQ16_Pos
 (15U)

	)

3601 
	#ADC_SQR1_SQ16_Msk
 (0x1FUL << 
ADC_SQR1_SQ16_Pos
Ë

	)

3602 
	#ADC_SQR1_SQ16
 
ADC_SQR1_SQ16_Msk


	)

3603 
	#ADC_SQR1_SQ16_0
 (0x01UL << 
ADC_SQR1_SQ16_Pos
Ë

	)

3604 
	#ADC_SQR1_SQ16_1
 (0x02UL << 
ADC_SQR1_SQ16_Pos
Ë

	)

3605 
	#ADC_SQR1_SQ16_2
 (0x04UL << 
ADC_SQR1_SQ16_Pos
Ë

	)

3606 
	#ADC_SQR1_SQ16_3
 (0x08UL << 
ADC_SQR1_SQ16_Pos
Ë

	)

3607 
	#ADC_SQR1_SQ16_4
 (0x10UL << 
ADC_SQR1_SQ16_Pos
Ë

	)

3609 
	#ADC_SQR1_L_Pos
 (20U)

	)

3610 
	#ADC_SQR1_L_Msk
 (0xFUL << 
ADC_SQR1_L_Pos
Ë

	)

3611 
	#ADC_SQR1_L
 
ADC_SQR1_L_Msk


	)

3612 
	#ADC_SQR1_L_0
 (0x1UL << 
ADC_SQR1_L_Pos
Ë

	)

3613 
	#ADC_SQR1_L_1
 (0x2UL << 
ADC_SQR1_L_Pos
Ë

	)

3614 
	#ADC_SQR1_L_2
 (0x4UL << 
ADC_SQR1_L_Pos
Ë

	)

3615 
	#ADC_SQR1_L_3
 (0x8UL << 
ADC_SQR1_L_Pos
Ë

	)

3618 
	#ADC_SQR2_SQ7_Pos
 (0U)

	)

3619 
	#ADC_SQR2_SQ7_Msk
 (0x1FUL << 
ADC_SQR2_SQ7_Pos
Ë

	)

3620 
	#ADC_SQR2_SQ7
 
ADC_SQR2_SQ7_Msk


	)

3621 
	#ADC_SQR2_SQ7_0
 (0x01UL << 
ADC_SQR2_SQ7_Pos
Ë

	)

3622 
	#ADC_SQR2_SQ7_1
 (0x02UL << 
ADC_SQR2_SQ7_Pos
Ë

	)

3623 
	#ADC_SQR2_SQ7_2
 (0x04UL << 
ADC_SQR2_SQ7_Pos
Ë

	)

3624 
	#ADC_SQR2_SQ7_3
 (0x08UL << 
ADC_SQR2_SQ7_Pos
Ë

	)

3625 
	#ADC_SQR2_SQ7_4
 (0x10UL << 
ADC_SQR2_SQ7_Pos
Ë

	)

3627 
	#ADC_SQR2_SQ8_Pos
 (5U)

	)

3628 
	#ADC_SQR2_SQ8_Msk
 (0x1FUL << 
ADC_SQR2_SQ8_Pos
Ë

	)

3629 
	#ADC_SQR2_SQ8
 
ADC_SQR2_SQ8_Msk


	)

3630 
	#ADC_SQR2_SQ8_0
 (0x01UL << 
ADC_SQR2_SQ8_Pos
Ë

	)

3631 
	#ADC_SQR2_SQ8_1
 (0x02UL << 
ADC_SQR2_SQ8_Pos
Ë

	)

3632 
	#ADC_SQR2_SQ8_2
 (0x04UL << 
ADC_SQR2_SQ8_Pos
Ë

	)

3633 
	#ADC_SQR2_SQ8_3
 (0x08UL << 
ADC_SQR2_SQ8_Pos
Ë

	)

3634 
	#ADC_SQR2_SQ8_4
 (0x10UL << 
ADC_SQR2_SQ8_Pos
Ë

	)

3636 
	#ADC_SQR2_SQ9_Pos
 (10U)

	)

3637 
	#ADC_SQR2_SQ9_Msk
 (0x1FUL << 
ADC_SQR2_SQ9_Pos
Ë

	)

3638 
	#ADC_SQR2_SQ9
 
ADC_SQR2_SQ9_Msk


	)

3639 
	#ADC_SQR2_SQ9_0
 (0x01UL << 
ADC_SQR2_SQ9_Pos
Ë

	)

3640 
	#ADC_SQR2_SQ9_1
 (0x02UL << 
ADC_SQR2_SQ9_Pos
Ë

	)

3641 
	#ADC_SQR2_SQ9_2
 (0x04UL << 
ADC_SQR2_SQ9_Pos
Ë

	)

3642 
	#ADC_SQR2_SQ9_3
 (0x08UL << 
ADC_SQR2_SQ9_Pos
Ë

	)

3643 
	#ADC_SQR2_SQ9_4
 (0x10UL << 
ADC_SQR2_SQ9_Pos
Ë

	)

3645 
	#ADC_SQR2_SQ10_Pos
 (15U)

	)

3646 
	#ADC_SQR2_SQ10_Msk
 (0x1FUL << 
ADC_SQR2_SQ10_Pos
Ë

	)

3647 
	#ADC_SQR2_SQ10
 
ADC_SQR2_SQ10_Msk


	)

3648 
	#ADC_SQR2_SQ10_0
 (0x01UL << 
ADC_SQR2_SQ10_Pos
Ë

	)

3649 
	#ADC_SQR2_SQ10_1
 (0x02UL << 
ADC_SQR2_SQ10_Pos
Ë

	)

3650 
	#ADC_SQR2_SQ10_2
 (0x04UL << 
ADC_SQR2_SQ10_Pos
Ë

	)

3651 
	#ADC_SQR2_SQ10_3
 (0x08UL << 
ADC_SQR2_SQ10_Pos
Ë

	)

3652 
	#ADC_SQR2_SQ10_4
 (0x10UL << 
ADC_SQR2_SQ10_Pos
Ë

	)

3654 
	#ADC_SQR2_SQ11_Pos
 (20U)

	)

3655 
	#ADC_SQR2_SQ11_Msk
 (0x1FUL << 
ADC_SQR2_SQ11_Pos
Ë

	)

3656 
	#ADC_SQR2_SQ11
 
ADC_SQR2_SQ11_Msk


	)

3657 
	#ADC_SQR2_SQ11_0
 (0x01UL << 
ADC_SQR2_SQ11_Pos
Ë

	)

3658 
	#ADC_SQR2_SQ11_1
 (0x02UL << 
ADC_SQR2_SQ11_Pos
Ë

	)

3659 
	#ADC_SQR2_SQ11_2
 (0x04UL << 
ADC_SQR2_SQ11_Pos
Ë

	)

3660 
	#ADC_SQR2_SQ11_3
 (0x08UL << 
ADC_SQR2_SQ11_Pos
Ë

	)

3661 
	#ADC_SQR2_SQ11_4
 (0x10UL << 
ADC_SQR2_SQ11_Pos
Ë

	)

3663 
	#ADC_SQR2_SQ12_Pos
 (25U)

	)

3664 
	#ADC_SQR2_SQ12_Msk
 (0x1FUL << 
ADC_SQR2_SQ12_Pos
Ë

	)

3665 
	#ADC_SQR2_SQ12
 
ADC_SQR2_SQ12_Msk


	)

3666 
	#ADC_SQR2_SQ12_0
 (0x01UL << 
ADC_SQR2_SQ12_Pos
Ë

	)

3667 
	#ADC_SQR2_SQ12_1
 (0x02UL << 
ADC_SQR2_SQ12_Pos
Ë

	)

3668 
	#ADC_SQR2_SQ12_2
 (0x04UL << 
ADC_SQR2_SQ12_Pos
Ë

	)

3669 
	#ADC_SQR2_SQ12_3
 (0x08UL << 
ADC_SQR2_SQ12_Pos
Ë

	)

3670 
	#ADC_SQR2_SQ12_4
 (0x10UL << 
ADC_SQR2_SQ12_Pos
Ë

	)

3673 
	#ADC_SQR3_SQ1_Pos
 (0U)

	)

3674 
	#ADC_SQR3_SQ1_Msk
 (0x1FUL << 
ADC_SQR3_SQ1_Pos
Ë

	)

3675 
	#ADC_SQR3_SQ1
 
ADC_SQR3_SQ1_Msk


	)

3676 
	#ADC_SQR3_SQ1_0
 (0x01UL << 
ADC_SQR3_SQ1_Pos
Ë

	)

3677 
	#ADC_SQR3_SQ1_1
 (0x02UL << 
ADC_SQR3_SQ1_Pos
Ë

	)

3678 
	#ADC_SQR3_SQ1_2
 (0x04UL << 
ADC_SQR3_SQ1_Pos
Ë

	)

3679 
	#ADC_SQR3_SQ1_3
 (0x08UL << 
ADC_SQR3_SQ1_Pos
Ë

	)

3680 
	#ADC_SQR3_SQ1_4
 (0x10UL << 
ADC_SQR3_SQ1_Pos
Ë

	)

3682 
	#ADC_SQR3_SQ2_Pos
 (5U)

	)

3683 
	#ADC_SQR3_SQ2_Msk
 (0x1FUL << 
ADC_SQR3_SQ2_Pos
Ë

	)

3684 
	#ADC_SQR3_SQ2
 
ADC_SQR3_SQ2_Msk


	)

3685 
	#ADC_SQR3_SQ2_0
 (0x01UL << 
ADC_SQR3_SQ2_Pos
Ë

	)

3686 
	#ADC_SQR3_SQ2_1
 (0x02UL << 
ADC_SQR3_SQ2_Pos
Ë

	)

3687 
	#ADC_SQR3_SQ2_2
 (0x04UL << 
ADC_SQR3_SQ2_Pos
Ë

	)

3688 
	#ADC_SQR3_SQ2_3
 (0x08UL << 
ADC_SQR3_SQ2_Pos
Ë

	)

3689 
	#ADC_SQR3_SQ2_4
 (0x10UL << 
ADC_SQR3_SQ2_Pos
Ë

	)

3691 
	#ADC_SQR3_SQ3_Pos
 (10U)

	)

3692 
	#ADC_SQR3_SQ3_Msk
 (0x1FUL << 
ADC_SQR3_SQ3_Pos
Ë

	)

3693 
	#ADC_SQR3_SQ3
 
ADC_SQR3_SQ3_Msk


	)

3694 
	#ADC_SQR3_SQ3_0
 (0x01UL << 
ADC_SQR3_SQ3_Pos
Ë

	)

3695 
	#ADC_SQR3_SQ3_1
 (0x02UL << 
ADC_SQR3_SQ3_Pos
Ë

	)

3696 
	#ADC_SQR3_SQ3_2
 (0x04UL << 
ADC_SQR3_SQ3_Pos
Ë

	)

3697 
	#ADC_SQR3_SQ3_3
 (0x08UL << 
ADC_SQR3_SQ3_Pos
Ë

	)

3698 
	#ADC_SQR3_SQ3_4
 (0x10UL << 
ADC_SQR3_SQ3_Pos
Ë

	)

3700 
	#ADC_SQR3_SQ4_Pos
 (15U)

	)

3701 
	#ADC_SQR3_SQ4_Msk
 (0x1FUL << 
ADC_SQR3_SQ4_Pos
Ë

	)

3702 
	#ADC_SQR3_SQ4
 
ADC_SQR3_SQ4_Msk


	)

3703 
	#ADC_SQR3_SQ4_0
 (0x01UL << 
ADC_SQR3_SQ4_Pos
Ë

	)

3704 
	#ADC_SQR3_SQ4_1
 (0x02UL << 
ADC_SQR3_SQ4_Pos
Ë

	)

3705 
	#ADC_SQR3_SQ4_2
 (0x04UL << 
ADC_SQR3_SQ4_Pos
Ë

	)

3706 
	#ADC_SQR3_SQ4_3
 (0x08UL << 
ADC_SQR3_SQ4_Pos
Ë

	)

3707 
	#ADC_SQR3_SQ4_4
 (0x10UL << 
ADC_SQR3_SQ4_Pos
Ë

	)

3709 
	#ADC_SQR3_SQ5_Pos
 (20U)

	)

3710 
	#ADC_SQR3_SQ5_Msk
 (0x1FUL << 
ADC_SQR3_SQ5_Pos
Ë

	)

3711 
	#ADC_SQR3_SQ5
 
ADC_SQR3_SQ5_Msk


	)

3712 
	#ADC_SQR3_SQ5_0
 (0x01UL << 
ADC_SQR3_SQ5_Pos
Ë

	)

3713 
	#ADC_SQR3_SQ5_1
 (0x02UL << 
ADC_SQR3_SQ5_Pos
Ë

	)

3714 
	#ADC_SQR3_SQ5_2
 (0x04UL << 
ADC_SQR3_SQ5_Pos
Ë

	)

3715 
	#ADC_SQR3_SQ5_3
 (0x08UL << 
ADC_SQR3_SQ5_Pos
Ë

	)

3716 
	#ADC_SQR3_SQ5_4
 (0x10UL << 
ADC_SQR3_SQ5_Pos
Ë

	)

3718 
	#ADC_SQR3_SQ6_Pos
 (25U)

	)

3719 
	#ADC_SQR3_SQ6_Msk
 (0x1FUL << 
ADC_SQR3_SQ6_Pos
Ë

	)

3720 
	#ADC_SQR3_SQ6
 
ADC_SQR3_SQ6_Msk


	)

3721 
	#ADC_SQR3_SQ6_0
 (0x01UL << 
ADC_SQR3_SQ6_Pos
Ë

	)

3722 
	#ADC_SQR3_SQ6_1
 (0x02UL << 
ADC_SQR3_SQ6_Pos
Ë

	)

3723 
	#ADC_SQR3_SQ6_2
 (0x04UL << 
ADC_SQR3_SQ6_Pos
Ë

	)

3724 
	#ADC_SQR3_SQ6_3
 (0x08UL << 
ADC_SQR3_SQ6_Pos
Ë

	)

3725 
	#ADC_SQR3_SQ6_4
 (0x10UL << 
ADC_SQR3_SQ6_Pos
Ë

	)

3728 
	#ADC_JSQR_JSQ1_Pos
 (0U)

	)

3729 
	#ADC_JSQR_JSQ1_Msk
 (0x1FUL << 
ADC_JSQR_JSQ1_Pos
Ë

	)

3730 
	#ADC_JSQR_JSQ1
 
ADC_JSQR_JSQ1_Msk


	)

3731 
	#ADC_JSQR_JSQ1_0
 (0x01UL << 
ADC_JSQR_JSQ1_Pos
Ë

	)

3732 
	#ADC_JSQR_JSQ1_1
 (0x02UL << 
ADC_JSQR_JSQ1_Pos
Ë

	)

3733 
	#ADC_JSQR_JSQ1_2
 (0x04UL << 
ADC_JSQR_JSQ1_Pos
Ë

	)

3734 
	#ADC_JSQR_JSQ1_3
 (0x08UL << 
ADC_JSQR_JSQ1_Pos
Ë

	)

3735 
	#ADC_JSQR_JSQ1_4
 (0x10UL << 
ADC_JSQR_JSQ1_Pos
Ë

	)

3737 
	#ADC_JSQR_JSQ2_Pos
 (5U)

	)

3738 
	#ADC_JSQR_JSQ2_Msk
 (0x1FUL << 
ADC_JSQR_JSQ2_Pos
Ë

	)

3739 
	#ADC_JSQR_JSQ2
 
ADC_JSQR_JSQ2_Msk


	)

3740 
	#ADC_JSQR_JSQ2_0
 (0x01UL << 
ADC_JSQR_JSQ2_Pos
Ë

	)

3741 
	#ADC_JSQR_JSQ2_1
 (0x02UL << 
ADC_JSQR_JSQ2_Pos
Ë

	)

3742 
	#ADC_JSQR_JSQ2_2
 (0x04UL << 
ADC_JSQR_JSQ2_Pos
Ë

	)

3743 
	#ADC_JSQR_JSQ2_3
 (0x08UL << 
ADC_JSQR_JSQ2_Pos
Ë

	)

3744 
	#ADC_JSQR_JSQ2_4
 (0x10UL << 
ADC_JSQR_JSQ2_Pos
Ë

	)

3746 
	#ADC_JSQR_JSQ3_Pos
 (10U)

	)

3747 
	#ADC_JSQR_JSQ3_Msk
 (0x1FUL << 
ADC_JSQR_JSQ3_Pos
Ë

	)

3748 
	#ADC_JSQR_JSQ3
 
ADC_JSQR_JSQ3_Msk


	)

3749 
	#ADC_JSQR_JSQ3_0
 (0x01UL << 
ADC_JSQR_JSQ3_Pos
Ë

	)

3750 
	#ADC_JSQR_JSQ3_1
 (0x02UL << 
ADC_JSQR_JSQ3_Pos
Ë

	)

3751 
	#ADC_JSQR_JSQ3_2
 (0x04UL << 
ADC_JSQR_JSQ3_Pos
Ë

	)

3752 
	#ADC_JSQR_JSQ3_3
 (0x08UL << 
ADC_JSQR_JSQ3_Pos
Ë

	)

3753 
	#ADC_JSQR_JSQ3_4
 (0x10UL << 
ADC_JSQR_JSQ3_Pos
Ë

	)

3755 
	#ADC_JSQR_JSQ4_Pos
 (15U)

	)

3756 
	#ADC_JSQR_JSQ4_Msk
 (0x1FUL << 
ADC_JSQR_JSQ4_Pos
Ë

	)

3757 
	#ADC_JSQR_JSQ4
 
ADC_JSQR_JSQ4_Msk


	)

3758 
	#ADC_JSQR_JSQ4_0
 (0x01UL << 
ADC_JSQR_JSQ4_Pos
Ë

	)

3759 
	#ADC_JSQR_JSQ4_1
 (0x02UL << 
ADC_JSQR_JSQ4_Pos
Ë

	)

3760 
	#ADC_JSQR_JSQ4_2
 (0x04UL << 
ADC_JSQR_JSQ4_Pos
Ë

	)

3761 
	#ADC_JSQR_JSQ4_3
 (0x08UL << 
ADC_JSQR_JSQ4_Pos
Ë

	)

3762 
	#ADC_JSQR_JSQ4_4
 (0x10UL << 
ADC_JSQR_JSQ4_Pos
Ë

	)

3764 
	#ADC_JSQR_JL_Pos
 (20U)

	)

3765 
	#ADC_JSQR_JL_Msk
 (0x3UL << 
ADC_JSQR_JL_Pos
Ë

	)

3766 
	#ADC_JSQR_JL
 
ADC_JSQR_JL_Msk


	)

3767 
	#ADC_JSQR_JL_0
 (0x1UL << 
ADC_JSQR_JL_Pos
Ë

	)

3768 
	#ADC_JSQR_JL_1
 (0x2UL << 
ADC_JSQR_JL_Pos
Ë

	)

3771 
	#ADC_JDR1_JDATA_Pos
 (0U)

	)

3772 
	#ADC_JDR1_JDATA_Msk
 (0xFFFFUL << 
ADC_JDR1_JDATA_Pos
Ë

	)

3773 
	#ADC_JDR1_JDATA
 
ADC_JDR1_JDATA_Msk


	)

3776 
	#ADC_JDR2_JDATA_Pos
 (0U)

	)

3777 
	#ADC_JDR2_JDATA_Msk
 (0xFFFFUL << 
ADC_JDR2_JDATA_Pos
Ë

	)

3778 
	#ADC_JDR2_JDATA
 
ADC_JDR2_JDATA_Msk


	)

3781 
	#ADC_JDR3_JDATA_Pos
 (0U)

	)

3782 
	#ADC_JDR3_JDATA_Msk
 (0xFFFFUL << 
ADC_JDR3_JDATA_Pos
Ë

	)

3783 
	#ADC_JDR3_JDATA
 
ADC_JDR3_JDATA_Msk


	)

3786 
	#ADC_JDR4_JDATA_Pos
 (0U)

	)

3787 
	#ADC_JDR4_JDATA_Msk
 (0xFFFFUL << 
ADC_JDR4_JDATA_Pos
Ë

	)

3788 
	#ADC_JDR4_JDATA
 
ADC_JDR4_JDATA_Msk


	)

3791 
	#ADC_DR_DATA_Pos
 (0U)

	)

3792 
	#ADC_DR_DATA_Msk
 (0xFFFFUL << 
ADC_DR_DATA_Pos
Ë

	)

3793 
	#ADC_DR_DATA
 
ADC_DR_DATA_Msk


	)

3794 
	#ADC_DR_ADC2DATA_Pos
 (16U)

	)

3795 
	#ADC_DR_ADC2DATA_Msk
 (0xFFFFUL << 
ADC_DR_ADC2DATA_Pos
Ë

	)

3796 
	#ADC_DR_ADC2DATA
 
ADC_DR_ADC2DATA_Msk


	)

3805 
	#TIM_CR1_CEN_Pos
 (0U)

	)

3806 
	#TIM_CR1_CEN_Msk
 (0x1UL << 
TIM_CR1_CEN_Pos
Ë

	)

3807 
	#TIM_CR1_CEN
 
TIM_CR1_CEN_Msk


	)

3808 
	#TIM_CR1_UDIS_Pos
 (1U)

	)

3809 
	#TIM_CR1_UDIS_Msk
 (0x1UL << 
TIM_CR1_UDIS_Pos
Ë

	)

3810 
	#TIM_CR1_UDIS
 
TIM_CR1_UDIS_Msk


	)

3811 
	#TIM_CR1_URS_Pos
 (2U)

	)

3812 
	#TIM_CR1_URS_Msk
 (0x1UL << 
TIM_CR1_URS_Pos
Ë

	)

3813 
	#TIM_CR1_URS
 
TIM_CR1_URS_Msk


	)

3814 
	#TIM_CR1_OPM_Pos
 (3U)

	)

3815 
	#TIM_CR1_OPM_Msk
 (0x1UL << 
TIM_CR1_OPM_Pos
Ë

	)

3816 
	#TIM_CR1_OPM
 
TIM_CR1_OPM_Msk


	)

3817 
	#TIM_CR1_DIR_Pos
 (4U)

	)

3818 
	#TIM_CR1_DIR_Msk
 (0x1UL << 
TIM_CR1_DIR_Pos
Ë

	)

3819 
	#TIM_CR1_DIR
 
TIM_CR1_DIR_Msk


	)

3821 
	#TIM_CR1_CMS_Pos
 (5U)

	)

3822 
	#TIM_CR1_CMS_Msk
 (0x3UL << 
TIM_CR1_CMS_Pos
Ë

	)

3823 
	#TIM_CR1_CMS
 
TIM_CR1_CMS_Msk


	)

3824 
	#TIM_CR1_CMS_0
 (0x1UL << 
TIM_CR1_CMS_Pos
Ë

	)

3825 
	#TIM_CR1_CMS_1
 (0x2UL << 
TIM_CR1_CMS_Pos
Ë

	)

3827 
	#TIM_CR1_ARPE_Pos
 (7U)

	)

3828 
	#TIM_CR1_ARPE_Msk
 (0x1UL << 
TIM_CR1_ARPE_Pos
Ë

	)

3829 
	#TIM_CR1_ARPE
 
TIM_CR1_ARPE_Msk


	)

3831 
	#TIM_CR1_CKD_Pos
 (8U)

	)

3832 
	#TIM_CR1_CKD_Msk
 (0x3UL << 
TIM_CR1_CKD_Pos
Ë

	)

3833 
	#TIM_CR1_CKD
 
TIM_CR1_CKD_Msk


	)

3834 
	#TIM_CR1_CKD_0
 (0x1UL << 
TIM_CR1_CKD_Pos
Ë

	)

3835 
	#TIM_CR1_CKD_1
 (0x2UL << 
TIM_CR1_CKD_Pos
Ë

	)

3838 
	#TIM_CR2_CCPC_Pos
 (0U)

	)

3839 
	#TIM_CR2_CCPC_Msk
 (0x1UL << 
TIM_CR2_CCPC_Pos
Ë

	)

3840 
	#TIM_CR2_CCPC
 
TIM_CR2_CCPC_Msk


	)

3841 
	#TIM_CR2_CCUS_Pos
 (2U)

	)

3842 
	#TIM_CR2_CCUS_Msk
 (0x1UL << 
TIM_CR2_CCUS_Pos
Ë

	)

3843 
	#TIM_CR2_CCUS
 
TIM_CR2_CCUS_Msk


	)

3844 
	#TIM_CR2_CCDS_Pos
 (3U)

	)

3845 
	#TIM_CR2_CCDS_Msk
 (0x1UL << 
TIM_CR2_CCDS_Pos
Ë

	)

3846 
	#TIM_CR2_CCDS
 
TIM_CR2_CCDS_Msk


	)

3848 
	#TIM_CR2_MMS_Pos
 (4U)

	)

3849 
	#TIM_CR2_MMS_Msk
 (0x7UL << 
TIM_CR2_MMS_Pos
Ë

	)

3850 
	#TIM_CR2_MMS
 
TIM_CR2_MMS_Msk


	)

3851 
	#TIM_CR2_MMS_0
 (0x1UL << 
TIM_CR2_MMS_Pos
Ë

	)

3852 
	#TIM_CR2_MMS_1
 (0x2UL << 
TIM_CR2_MMS_Pos
Ë

	)

3853 
	#TIM_CR2_MMS_2
 (0x4UL << 
TIM_CR2_MMS_Pos
Ë

	)

3855 
	#TIM_CR2_TI1S_Pos
 (7U)

	)

3856 
	#TIM_CR2_TI1S_Msk
 (0x1UL << 
TIM_CR2_TI1S_Pos
Ë

	)

3857 
	#TIM_CR2_TI1S
 
TIM_CR2_TI1S_Msk


	)

3858 
	#TIM_CR2_OIS1_Pos
 (8U)

	)

3859 
	#TIM_CR2_OIS1_Msk
 (0x1UL << 
TIM_CR2_OIS1_Pos
Ë

	)

3860 
	#TIM_CR2_OIS1
 
TIM_CR2_OIS1_Msk


	)

3861 
	#TIM_CR2_OIS1N_Pos
 (9U)

	)

3862 
	#TIM_CR2_OIS1N_Msk
 (0x1UL << 
TIM_CR2_OIS1N_Pos
Ë

	)

3863 
	#TIM_CR2_OIS1N
 
TIM_CR2_OIS1N_Msk


	)

3864 
	#TIM_CR2_OIS2_Pos
 (10U)

	)

3865 
	#TIM_CR2_OIS2_Msk
 (0x1UL << 
TIM_CR2_OIS2_Pos
Ë

	)

3866 
	#TIM_CR2_OIS2
 
TIM_CR2_OIS2_Msk


	)

3867 
	#TIM_CR2_OIS2N_Pos
 (11U)

	)

3868 
	#TIM_CR2_OIS2N_Msk
 (0x1UL << 
TIM_CR2_OIS2N_Pos
Ë

	)

3869 
	#TIM_CR2_OIS2N
 
TIM_CR2_OIS2N_Msk


	)

3870 
	#TIM_CR2_OIS3_Pos
 (12U)

	)

3871 
	#TIM_CR2_OIS3_Msk
 (0x1UL << 
TIM_CR2_OIS3_Pos
Ë

	)

3872 
	#TIM_CR2_OIS3
 
TIM_CR2_OIS3_Msk


	)

3873 
	#TIM_CR2_OIS3N_Pos
 (13U)

	)

3874 
	#TIM_CR2_OIS3N_Msk
 (0x1UL << 
TIM_CR2_OIS3N_Pos
Ë

	)

3875 
	#TIM_CR2_OIS3N
 
TIM_CR2_OIS3N_Msk


	)

3876 
	#TIM_CR2_OIS4_Pos
 (14U)

	)

3877 
	#TIM_CR2_OIS4_Msk
 (0x1UL << 
TIM_CR2_OIS4_Pos
Ë

	)

3878 
	#TIM_CR2_OIS4
 
TIM_CR2_OIS4_Msk


	)

3881 
	#TIM_SMCR_SMS_Pos
 (0U)

	)

3882 
	#TIM_SMCR_SMS_Msk
 (0x7UL << 
TIM_SMCR_SMS_Pos
Ë

	)

3883 
	#TIM_SMCR_SMS
 
TIM_SMCR_SMS_Msk


	)

3884 
	#TIM_SMCR_SMS_0
 (0x1UL << 
TIM_SMCR_SMS_Pos
Ë

	)

3885 
	#TIM_SMCR_SMS_1
 (0x2UL << 
TIM_SMCR_SMS_Pos
Ë

	)

3886 
	#TIM_SMCR_SMS_2
 (0x4UL << 
TIM_SMCR_SMS_Pos
Ë

	)

3888 
	#TIM_SMCR_TS_Pos
 (4U)

	)

3889 
	#TIM_SMCR_TS_Msk
 (0x7UL << 
TIM_SMCR_TS_Pos
Ë

	)

3890 
	#TIM_SMCR_TS
 
TIM_SMCR_TS_Msk


	)

3891 
	#TIM_SMCR_TS_0
 (0x1UL << 
TIM_SMCR_TS_Pos
Ë

	)

3892 
	#TIM_SMCR_TS_1
 (0x2UL << 
TIM_SMCR_TS_Pos
Ë

	)

3893 
	#TIM_SMCR_TS_2
 (0x4UL << 
TIM_SMCR_TS_Pos
Ë

	)

3895 
	#TIM_SMCR_MSM_Pos
 (7U)

	)

3896 
	#TIM_SMCR_MSM_Msk
 (0x1UL << 
TIM_SMCR_MSM_Pos
Ë

	)

3897 
	#TIM_SMCR_MSM
 
TIM_SMCR_MSM_Msk


	)

3899 
	#TIM_SMCR_ETF_Pos
 (8U)

	)

3900 
	#TIM_SMCR_ETF_Msk
 (0xFUL << 
TIM_SMCR_ETF_Pos
Ë

	)

3901 
	#TIM_SMCR_ETF
 
TIM_SMCR_ETF_Msk


	)

3902 
	#TIM_SMCR_ETF_0
 (0x1UL << 
TIM_SMCR_ETF_Pos
Ë

	)

3903 
	#TIM_SMCR_ETF_1
 (0x2UL << 
TIM_SMCR_ETF_Pos
Ë

	)

3904 
	#TIM_SMCR_ETF_2
 (0x4UL << 
TIM_SMCR_ETF_Pos
Ë

	)

3905 
	#TIM_SMCR_ETF_3
 (0x8UL << 
TIM_SMCR_ETF_Pos
Ë

	)

3907 
	#TIM_SMCR_ETPS_Pos
 (12U)

	)

3908 
	#TIM_SMCR_ETPS_Msk
 (0x3UL << 
TIM_SMCR_ETPS_Pos
Ë

	)

3909 
	#TIM_SMCR_ETPS
 
TIM_SMCR_ETPS_Msk


	)

3910 
	#TIM_SMCR_ETPS_0
 (0x1UL << 
TIM_SMCR_ETPS_Pos
Ë

	)

3911 
	#TIM_SMCR_ETPS_1
 (0x2UL << 
TIM_SMCR_ETPS_Pos
Ë

	)

3913 
	#TIM_SMCR_ECE_Pos
 (14U)

	)

3914 
	#TIM_SMCR_ECE_Msk
 (0x1UL << 
TIM_SMCR_ECE_Pos
Ë

	)

3915 
	#TIM_SMCR_ECE
 
TIM_SMCR_ECE_Msk


	)

3916 
	#TIM_SMCR_ETP_Pos
 (15U)

	)

3917 
	#TIM_SMCR_ETP_Msk
 (0x1UL << 
TIM_SMCR_ETP_Pos
Ë

	)

3918 
	#TIM_SMCR_ETP
 
TIM_SMCR_ETP_Msk


	)

3921 
	#TIM_DIER_UIE_Pos
 (0U)

	)

3922 
	#TIM_DIER_UIE_Msk
 (0x1UL << 
TIM_DIER_UIE_Pos
Ë

	)

3923 
	#TIM_DIER_UIE
 
TIM_DIER_UIE_Msk


	)

3924 
	#TIM_DIER_CC1IE_Pos
 (1U)

	)

3925 
	#TIM_DIER_CC1IE_Msk
 (0x1UL << 
TIM_DIER_CC1IE_Pos
Ë

	)

3926 
	#TIM_DIER_CC1IE
 
TIM_DIER_CC1IE_Msk


	)

3927 
	#TIM_DIER_CC2IE_Pos
 (2U)

	)

3928 
	#TIM_DIER_CC2IE_Msk
 (0x1UL << 
TIM_DIER_CC2IE_Pos
Ë

	)

3929 
	#TIM_DIER_CC2IE
 
TIM_DIER_CC2IE_Msk


	)

3930 
	#TIM_DIER_CC3IE_Pos
 (3U)

	)

3931 
	#TIM_DIER_CC3IE_Msk
 (0x1UL << 
TIM_DIER_CC3IE_Pos
Ë

	)

3932 
	#TIM_DIER_CC3IE
 
TIM_DIER_CC3IE_Msk


	)

3933 
	#TIM_DIER_CC4IE_Pos
 (4U)

	)

3934 
	#TIM_DIER_CC4IE_Msk
 (0x1UL << 
TIM_DIER_CC4IE_Pos
Ë

	)

3935 
	#TIM_DIER_CC4IE
 
TIM_DIER_CC4IE_Msk


	)

3936 
	#TIM_DIER_COMIE_Pos
 (5U)

	)

3937 
	#TIM_DIER_COMIE_Msk
 (0x1UL << 
TIM_DIER_COMIE_Pos
Ë

	)

3938 
	#TIM_DIER_COMIE
 
TIM_DIER_COMIE_Msk


	)

3939 
	#TIM_DIER_TIE_Pos
 (6U)

	)

3940 
	#TIM_DIER_TIE_Msk
 (0x1UL << 
TIM_DIER_TIE_Pos
Ë

	)

3941 
	#TIM_DIER_TIE
 
TIM_DIER_TIE_Msk


	)

3942 
	#TIM_DIER_BIE_Pos
 (7U)

	)

3943 
	#TIM_DIER_BIE_Msk
 (0x1UL << 
TIM_DIER_BIE_Pos
Ë

	)

3944 
	#TIM_DIER_BIE
 
TIM_DIER_BIE_Msk


	)

3945 
	#TIM_DIER_UDE_Pos
 (8U)

	)

3946 
	#TIM_DIER_UDE_Msk
 (0x1UL << 
TIM_DIER_UDE_Pos
Ë

	)

3947 
	#TIM_DIER_UDE
 
TIM_DIER_UDE_Msk


	)

3948 
	#TIM_DIER_CC1DE_Pos
 (9U)

	)

3949 
	#TIM_DIER_CC1DE_Msk
 (0x1UL << 
TIM_DIER_CC1DE_Pos
Ë

	)

3950 
	#TIM_DIER_CC1DE
 
TIM_DIER_CC1DE_Msk


	)

3951 
	#TIM_DIER_CC2DE_Pos
 (10U)

	)

3952 
	#TIM_DIER_CC2DE_Msk
 (0x1UL << 
TIM_DIER_CC2DE_Pos
Ë

	)

3953 
	#TIM_DIER_CC2DE
 
TIM_DIER_CC2DE_Msk


	)

3954 
	#TIM_DIER_CC3DE_Pos
 (11U)

	)

3955 
	#TIM_DIER_CC3DE_Msk
 (0x1UL << 
TIM_DIER_CC3DE_Pos
Ë

	)

3956 
	#TIM_DIER_CC3DE
 
TIM_DIER_CC3DE_Msk


	)

3957 
	#TIM_DIER_CC4DE_Pos
 (12U)

	)

3958 
	#TIM_DIER_CC4DE_Msk
 (0x1UL << 
TIM_DIER_CC4DE_Pos
Ë

	)

3959 
	#TIM_DIER_CC4DE
 
TIM_DIER_CC4DE_Msk


	)

3960 
	#TIM_DIER_COMDE_Pos
 (13U)

	)

3961 
	#TIM_DIER_COMDE_Msk
 (0x1UL << 
TIM_DIER_COMDE_Pos
Ë

	)

3962 
	#TIM_DIER_COMDE
 
TIM_DIER_COMDE_Msk


	)

3963 
	#TIM_DIER_TDE_Pos
 (14U)

	)

3964 
	#TIM_DIER_TDE_Msk
 (0x1UL << 
TIM_DIER_TDE_Pos
Ë

	)

3965 
	#TIM_DIER_TDE
 
TIM_DIER_TDE_Msk


	)

3968 
	#TIM_SR_UIF_Pos
 (0U)

	)

3969 
	#TIM_SR_UIF_Msk
 (0x1UL << 
TIM_SR_UIF_Pos
Ë

	)

3970 
	#TIM_SR_UIF
 
TIM_SR_UIF_Msk


	)

3971 
	#TIM_SR_CC1IF_Pos
 (1U)

	)

3972 
	#TIM_SR_CC1IF_Msk
 (0x1UL << 
TIM_SR_CC1IF_Pos
Ë

	)

3973 
	#TIM_SR_CC1IF
 
TIM_SR_CC1IF_Msk


	)

3974 
	#TIM_SR_CC2IF_Pos
 (2U)

	)

3975 
	#TIM_SR_CC2IF_Msk
 (0x1UL << 
TIM_SR_CC2IF_Pos
Ë

	)

3976 
	#TIM_SR_CC2IF
 
TIM_SR_CC2IF_Msk


	)

3977 
	#TIM_SR_CC3IF_Pos
 (3U)

	)

3978 
	#TIM_SR_CC3IF_Msk
 (0x1UL << 
TIM_SR_CC3IF_Pos
Ë

	)

3979 
	#TIM_SR_CC3IF
 
TIM_SR_CC3IF_Msk


	)

3980 
	#TIM_SR_CC4IF_Pos
 (4U)

	)

3981 
	#TIM_SR_CC4IF_Msk
 (0x1UL << 
TIM_SR_CC4IF_Pos
Ë

	)

3982 
	#TIM_SR_CC4IF
 
TIM_SR_CC4IF_Msk


	)

3983 
	#TIM_SR_COMIF_Pos
 (5U)

	)

3984 
	#TIM_SR_COMIF_Msk
 (0x1UL << 
TIM_SR_COMIF_Pos
Ë

	)

3985 
	#TIM_SR_COMIF
 
TIM_SR_COMIF_Msk


	)

3986 
	#TIM_SR_TIF_Pos
 (6U)

	)

3987 
	#TIM_SR_TIF_Msk
 (0x1UL << 
TIM_SR_TIF_Pos
Ë

	)

3988 
	#TIM_SR_TIF
 
TIM_SR_TIF_Msk


	)

3989 
	#TIM_SR_BIF_Pos
 (7U)

	)

3990 
	#TIM_SR_BIF_Msk
 (0x1UL << 
TIM_SR_BIF_Pos
Ë

	)

3991 
	#TIM_SR_BIF
 
TIM_SR_BIF_Msk


	)

3992 
	#TIM_SR_CC1OF_Pos
 (9U)

	)

3993 
	#TIM_SR_CC1OF_Msk
 (0x1UL << 
TIM_SR_CC1OF_Pos
Ë

	)

3994 
	#TIM_SR_CC1OF
 
TIM_SR_CC1OF_Msk


	)

3995 
	#TIM_SR_CC2OF_Pos
 (10U)

	)

3996 
	#TIM_SR_CC2OF_Msk
 (0x1UL << 
TIM_SR_CC2OF_Pos
Ë

	)

3997 
	#TIM_SR_CC2OF
 
TIM_SR_CC2OF_Msk


	)

3998 
	#TIM_SR_CC3OF_Pos
 (11U)

	)

3999 
	#TIM_SR_CC3OF_Msk
 (0x1UL << 
TIM_SR_CC3OF_Pos
Ë

	)

4000 
	#TIM_SR_CC3OF
 
TIM_SR_CC3OF_Msk


	)

4001 
	#TIM_SR_CC4OF_Pos
 (12U)

	)

4002 
	#TIM_SR_CC4OF_Msk
 (0x1UL << 
TIM_SR_CC4OF_Pos
Ë

	)

4003 
	#TIM_SR_CC4OF
 
TIM_SR_CC4OF_Msk


	)

4006 
	#TIM_EGR_UG_Pos
 (0U)

	)

4007 
	#TIM_EGR_UG_Msk
 (0x1UL << 
TIM_EGR_UG_Pos
Ë

	)

4008 
	#TIM_EGR_UG
 
TIM_EGR_UG_Msk


	)

4009 
	#TIM_EGR_CC1G_Pos
 (1U)

	)

4010 
	#TIM_EGR_CC1G_Msk
 (0x1UL << 
TIM_EGR_CC1G_Pos
Ë

	)

4011 
	#TIM_EGR_CC1G
 
TIM_EGR_CC1G_Msk


	)

4012 
	#TIM_EGR_CC2G_Pos
 (2U)

	)

4013 
	#TIM_EGR_CC2G_Msk
 (0x1UL << 
TIM_EGR_CC2G_Pos
Ë

	)

4014 
	#TIM_EGR_CC2G
 
TIM_EGR_CC2G_Msk


	)

4015 
	#TIM_EGR_CC3G_Pos
 (3U)

	)

4016 
	#TIM_EGR_CC3G_Msk
 (0x1UL << 
TIM_EGR_CC3G_Pos
Ë

	)

4017 
	#TIM_EGR_CC3G
 
TIM_EGR_CC3G_Msk


	)

4018 
	#TIM_EGR_CC4G_Pos
 (4U)

	)

4019 
	#TIM_EGR_CC4G_Msk
 (0x1UL << 
TIM_EGR_CC4G_Pos
Ë

	)

4020 
	#TIM_EGR_CC4G
 
TIM_EGR_CC4G_Msk


	)

4021 
	#TIM_EGR_COMG_Pos
 (5U)

	)

4022 
	#TIM_EGR_COMG_Msk
 (0x1UL << 
TIM_EGR_COMG_Pos
Ë

	)

4023 
	#TIM_EGR_COMG
 
TIM_EGR_COMG_Msk


	)

4024 
	#TIM_EGR_TG_Pos
 (6U)

	)

4025 
	#TIM_EGR_TG_Msk
 (0x1UL << 
TIM_EGR_TG_Pos
Ë

	)

4026 
	#TIM_EGR_TG
 
TIM_EGR_TG_Msk


	)

4027 
	#TIM_EGR_BG_Pos
 (7U)

	)

4028 
	#TIM_EGR_BG_Msk
 (0x1UL << 
TIM_EGR_BG_Pos
Ë

	)

4029 
	#TIM_EGR_BG
 
TIM_EGR_BG_Msk


	)

4032 
	#TIM_CCMR1_CC1S_Pos
 (0U)

	)

4033 
	#TIM_CCMR1_CC1S_Msk
 (0x3UL << 
TIM_CCMR1_CC1S_Pos
Ë

	)

4034 
	#TIM_CCMR1_CC1S
 
TIM_CCMR1_CC1S_Msk


	)

4035 
	#TIM_CCMR1_CC1S_0
 (0x1UL << 
TIM_CCMR1_CC1S_Pos
Ë

	)

4036 
	#TIM_CCMR1_CC1S_1
 (0x2UL << 
TIM_CCMR1_CC1S_Pos
Ë

	)

4038 
	#TIM_CCMR1_OC1FE_Pos
 (2U)

	)

4039 
	#TIM_CCMR1_OC1FE_Msk
 (0x1UL << 
TIM_CCMR1_OC1FE_Pos
Ë

	)

4040 
	#TIM_CCMR1_OC1FE
 
TIM_CCMR1_OC1FE_Msk


	)

4041 
	#TIM_CCMR1_OC1PE_Pos
 (3U)

	)

4042 
	#TIM_CCMR1_OC1PE_Msk
 (0x1UL << 
TIM_CCMR1_OC1PE_Pos
Ë

	)

4043 
	#TIM_CCMR1_OC1PE
 
TIM_CCMR1_OC1PE_Msk


	)

4045 
	#TIM_CCMR1_OC1M_Pos
 (4U)

	)

4046 
	#TIM_CCMR1_OC1M_Msk
 (0x7UL << 
TIM_CCMR1_OC1M_Pos
Ë

	)

4047 
	#TIM_CCMR1_OC1M
 
TIM_CCMR1_OC1M_Msk


	)

4048 
	#TIM_CCMR1_OC1M_0
 (0x1UL << 
TIM_CCMR1_OC1M_Pos
Ë

	)

4049 
	#TIM_CCMR1_OC1M_1
 (0x2UL << 
TIM_CCMR1_OC1M_Pos
Ë

	)

4050 
	#TIM_CCMR1_OC1M_2
 (0x4UL << 
TIM_CCMR1_OC1M_Pos
Ë

	)

4052 
	#TIM_CCMR1_OC1CE_Pos
 (7U)

	)

4053 
	#TIM_CCMR1_OC1CE_Msk
 (0x1UL << 
TIM_CCMR1_OC1CE_Pos
Ë

	)

4054 
	#TIM_CCMR1_OC1CE
 
TIM_CCMR1_OC1CE_Msk


	)

4056 
	#TIM_CCMR1_CC2S_Pos
 (8U)

	)

4057 
	#TIM_CCMR1_CC2S_Msk
 (0x3UL << 
TIM_CCMR1_CC2S_Pos
Ë

	)

4058 
	#TIM_CCMR1_CC2S
 
TIM_CCMR1_CC2S_Msk


	)

4059 
	#TIM_CCMR1_CC2S_0
 (0x1UL << 
TIM_CCMR1_CC2S_Pos
Ë

	)

4060 
	#TIM_CCMR1_CC2S_1
 (0x2UL << 
TIM_CCMR1_CC2S_Pos
Ë

	)

4062 
	#TIM_CCMR1_OC2FE_Pos
 (10U)

	)

4063 
	#TIM_CCMR1_OC2FE_Msk
 (0x1UL << 
TIM_CCMR1_OC2FE_Pos
Ë

	)

4064 
	#TIM_CCMR1_OC2FE
 
TIM_CCMR1_OC2FE_Msk


	)

4065 
	#TIM_CCMR1_OC2PE_Pos
 (11U)

	)

4066 
	#TIM_CCMR1_OC2PE_Msk
 (0x1UL << 
TIM_CCMR1_OC2PE_Pos
Ë

	)

4067 
	#TIM_CCMR1_OC2PE
 
TIM_CCMR1_OC2PE_Msk


	)

4069 
	#TIM_CCMR1_OC2M_Pos
 (12U)

	)

4070 
	#TIM_CCMR1_OC2M_Msk
 (0x7UL << 
TIM_CCMR1_OC2M_Pos
Ë

	)

4071 
	#TIM_CCMR1_OC2M
 
TIM_CCMR1_OC2M_Msk


	)

4072 
	#TIM_CCMR1_OC2M_0
 (0x1UL << 
TIM_CCMR1_OC2M_Pos
Ë

	)

4073 
	#TIM_CCMR1_OC2M_1
 (0x2UL << 
TIM_CCMR1_OC2M_Pos
Ë

	)

4074 
	#TIM_CCMR1_OC2M_2
 (0x4UL << 
TIM_CCMR1_OC2M_Pos
Ë

	)

4076 
	#TIM_CCMR1_OC2CE_Pos
 (15U)

	)

4077 
	#TIM_CCMR1_OC2CE_Msk
 (0x1UL << 
TIM_CCMR1_OC2CE_Pos
Ë

	)

4078 
	#TIM_CCMR1_OC2CE
 
TIM_CCMR1_OC2CE_Msk


	)

4082 
	#TIM_CCMR1_IC1PSC_Pos
 (2U)

	)

4083 
	#TIM_CCMR1_IC1PSC_Msk
 (0x3UL << 
TIM_CCMR1_IC1PSC_Pos
Ë

	)

4084 
	#TIM_CCMR1_IC1PSC
 
TIM_CCMR1_IC1PSC_Msk


	)

4085 
	#TIM_CCMR1_IC1PSC_0
 (0x1UL << 
TIM_CCMR1_IC1PSC_Pos
Ë

	)

4086 
	#TIM_CCMR1_IC1PSC_1
 (0x2UL << 
TIM_CCMR1_IC1PSC_Pos
Ë

	)

4088 
	#TIM_CCMR1_IC1F_Pos
 (4U)

	)

4089 
	#TIM_CCMR1_IC1F_Msk
 (0xFUL << 
TIM_CCMR1_IC1F_Pos
Ë

	)

4090 
	#TIM_CCMR1_IC1F
 
TIM_CCMR1_IC1F_Msk


	)

4091 
	#TIM_CCMR1_IC1F_0
 (0x1UL << 
TIM_CCMR1_IC1F_Pos
Ë

	)

4092 
	#TIM_CCMR1_IC1F_1
 (0x2UL << 
TIM_CCMR1_IC1F_Pos
Ë

	)

4093 
	#TIM_CCMR1_IC1F_2
 (0x4UL << 
TIM_CCMR1_IC1F_Pos
Ë

	)

4094 
	#TIM_CCMR1_IC1F_3
 (0x8UL << 
TIM_CCMR1_IC1F_Pos
Ë

	)

4096 
	#TIM_CCMR1_IC2PSC_Pos
 (10U)

	)

4097 
	#TIM_CCMR1_IC2PSC_Msk
 (0x3UL << 
TIM_CCMR1_IC2PSC_Pos
Ë

	)

4098 
	#TIM_CCMR1_IC2PSC
 
TIM_CCMR1_IC2PSC_Msk


	)

4099 
	#TIM_CCMR1_IC2PSC_0
 (0x1UL << 
TIM_CCMR1_IC2PSC_Pos
Ë

	)

4100 
	#TIM_CCMR1_IC2PSC_1
 (0x2UL << 
TIM_CCMR1_IC2PSC_Pos
Ë

	)

4102 
	#TIM_CCMR1_IC2F_Pos
 (12U)

	)

4103 
	#TIM_CCMR1_IC2F_Msk
 (0xFUL << 
TIM_CCMR1_IC2F_Pos
Ë

	)

4104 
	#TIM_CCMR1_IC2F
 
TIM_CCMR1_IC2F_Msk


	)

4105 
	#TIM_CCMR1_IC2F_0
 (0x1UL << 
TIM_CCMR1_IC2F_Pos
Ë

	)

4106 
	#TIM_CCMR1_IC2F_1
 (0x2UL << 
TIM_CCMR1_IC2F_Pos
Ë

	)

4107 
	#TIM_CCMR1_IC2F_2
 (0x4UL << 
TIM_CCMR1_IC2F_Pos
Ë

	)

4108 
	#TIM_CCMR1_IC2F_3
 (0x8UL << 
TIM_CCMR1_IC2F_Pos
Ë

	)

4111 
	#TIM_CCMR2_CC3S_Pos
 (0U)

	)

4112 
	#TIM_CCMR2_CC3S_Msk
 (0x3UL << 
TIM_CCMR2_CC3S_Pos
Ë

	)

4113 
	#TIM_CCMR2_CC3S
 
TIM_CCMR2_CC3S_Msk


	)

4114 
	#TIM_CCMR2_CC3S_0
 (0x1UL << 
TIM_CCMR2_CC3S_Pos
Ë

	)

4115 
	#TIM_CCMR2_CC3S_1
 (0x2UL << 
TIM_CCMR2_CC3S_Pos
Ë

	)

4117 
	#TIM_CCMR2_OC3FE_Pos
 (2U)

	)

4118 
	#TIM_CCMR2_OC3FE_Msk
 (0x1UL << 
TIM_CCMR2_OC3FE_Pos
Ë

	)

4119 
	#TIM_CCMR2_OC3FE
 
TIM_CCMR2_OC3FE_Msk


	)

4120 
	#TIM_CCMR2_OC3PE_Pos
 (3U)

	)

4121 
	#TIM_CCMR2_OC3PE_Msk
 (0x1UL << 
TIM_CCMR2_OC3PE_Pos
Ë

	)

4122 
	#TIM_CCMR2_OC3PE
 
TIM_CCMR2_OC3PE_Msk


	)

4124 
	#TIM_CCMR2_OC3M_Pos
 (4U)

	)

4125 
	#TIM_CCMR2_OC3M_Msk
 (0x7UL << 
TIM_CCMR2_OC3M_Pos
Ë

	)

4126 
	#TIM_CCMR2_OC3M
 
TIM_CCMR2_OC3M_Msk


	)

4127 
	#TIM_CCMR2_OC3M_0
 (0x1UL << 
TIM_CCMR2_OC3M_Pos
Ë

	)

4128 
	#TIM_CCMR2_OC3M_1
 (0x2UL << 
TIM_CCMR2_OC3M_Pos
Ë

	)

4129 
	#TIM_CCMR2_OC3M_2
 (0x4UL << 
TIM_CCMR2_OC3M_Pos
Ë

	)

4131 
	#TIM_CCMR2_OC3CE_Pos
 (7U)

	)

4132 
	#TIM_CCMR2_OC3CE_Msk
 (0x1UL << 
TIM_CCMR2_OC3CE_Pos
Ë

	)

4133 
	#TIM_CCMR2_OC3CE
 
TIM_CCMR2_OC3CE_Msk


	)

4135 
	#TIM_CCMR2_CC4S_Pos
 (8U)

	)

4136 
	#TIM_CCMR2_CC4S_Msk
 (0x3UL << 
TIM_CCMR2_CC4S_Pos
Ë

	)

4137 
	#TIM_CCMR2_CC4S
 
TIM_CCMR2_CC4S_Msk


	)

4138 
	#TIM_CCMR2_CC4S_0
 (0x1UL << 
TIM_CCMR2_CC4S_Pos
Ë

	)

4139 
	#TIM_CCMR2_CC4S_1
 (0x2UL << 
TIM_CCMR2_CC4S_Pos
Ë

	)

4141 
	#TIM_CCMR2_OC4FE_Pos
 (10U)

	)

4142 
	#TIM_CCMR2_OC4FE_Msk
 (0x1UL << 
TIM_CCMR2_OC4FE_Pos
Ë

	)

4143 
	#TIM_CCMR2_OC4FE
 
TIM_CCMR2_OC4FE_Msk


	)

4144 
	#TIM_CCMR2_OC4PE_Pos
 (11U)

	)

4145 
	#TIM_CCMR2_OC4PE_Msk
 (0x1UL << 
TIM_CCMR2_OC4PE_Pos
Ë

	)

4146 
	#TIM_CCMR2_OC4PE
 
TIM_CCMR2_OC4PE_Msk


	)

4148 
	#TIM_CCMR2_OC4M_Pos
 (12U)

	)

4149 
	#TIM_CCMR2_OC4M_Msk
 (0x7UL << 
TIM_CCMR2_OC4M_Pos
Ë

	)

4150 
	#TIM_CCMR2_OC4M
 
TIM_CCMR2_OC4M_Msk


	)

4151 
	#TIM_CCMR2_OC4M_0
 (0x1UL << 
TIM_CCMR2_OC4M_Pos
Ë

	)

4152 
	#TIM_CCMR2_OC4M_1
 (0x2UL << 
TIM_CCMR2_OC4M_Pos
Ë

	)

4153 
	#TIM_CCMR2_OC4M_2
 (0x4UL << 
TIM_CCMR2_OC4M_Pos
Ë

	)

4155 
	#TIM_CCMR2_OC4CE_Pos
 (15U)

	)

4156 
	#TIM_CCMR2_OC4CE_Msk
 (0x1UL << 
TIM_CCMR2_OC4CE_Pos
Ë

	)

4157 
	#TIM_CCMR2_OC4CE
 
TIM_CCMR2_OC4CE_Msk


	)

4161 
	#TIM_CCMR2_IC3PSC_Pos
 (2U)

	)

4162 
	#TIM_CCMR2_IC3PSC_Msk
 (0x3UL << 
TIM_CCMR2_IC3PSC_Pos
Ë

	)

4163 
	#TIM_CCMR2_IC3PSC
 
TIM_CCMR2_IC3PSC_Msk


	)

4164 
	#TIM_CCMR2_IC3PSC_0
 (0x1UL << 
TIM_CCMR2_IC3PSC_Pos
Ë

	)

4165 
	#TIM_CCMR2_IC3PSC_1
 (0x2UL << 
TIM_CCMR2_IC3PSC_Pos
Ë

	)

4167 
	#TIM_CCMR2_IC3F_Pos
 (4U)

	)

4168 
	#TIM_CCMR2_IC3F_Msk
 (0xFUL << 
TIM_CCMR2_IC3F_Pos
Ë

	)

4169 
	#TIM_CCMR2_IC3F
 
TIM_CCMR2_IC3F_Msk


	)

4170 
	#TIM_CCMR2_IC3F_0
 (0x1UL << 
TIM_CCMR2_IC3F_Pos
Ë

	)

4171 
	#TIM_CCMR2_IC3F_1
 (0x2UL << 
TIM_CCMR2_IC3F_Pos
Ë

	)

4172 
	#TIM_CCMR2_IC3F_2
 (0x4UL << 
TIM_CCMR2_IC3F_Pos
Ë

	)

4173 
	#TIM_CCMR2_IC3F_3
 (0x8UL << 
TIM_CCMR2_IC3F_Pos
Ë

	)

4175 
	#TIM_CCMR2_IC4PSC_Pos
 (10U)

	)

4176 
	#TIM_CCMR2_IC4PSC_Msk
 (0x3UL << 
TIM_CCMR2_IC4PSC_Pos
Ë

	)

4177 
	#TIM_CCMR2_IC4PSC
 
TIM_CCMR2_IC4PSC_Msk


	)

4178 
	#TIM_CCMR2_IC4PSC_0
 (0x1UL << 
TIM_CCMR2_IC4PSC_Pos
Ë

	)

4179 
	#TIM_CCMR2_IC4PSC_1
 (0x2UL << 
TIM_CCMR2_IC4PSC_Pos
Ë

	)

4181 
	#TIM_CCMR2_IC4F_Pos
 (12U)

	)

4182 
	#TIM_CCMR2_IC4F_Msk
 (0xFUL << 
TIM_CCMR2_IC4F_Pos
Ë

	)

4183 
	#TIM_CCMR2_IC4F
 
TIM_CCMR2_IC4F_Msk


	)

4184 
	#TIM_CCMR2_IC4F_0
 (0x1UL << 
TIM_CCMR2_IC4F_Pos
Ë

	)

4185 
	#TIM_CCMR2_IC4F_1
 (0x2UL << 
TIM_CCMR2_IC4F_Pos
Ë

	)

4186 
	#TIM_CCMR2_IC4F_2
 (0x4UL << 
TIM_CCMR2_IC4F_Pos
Ë

	)

4187 
	#TIM_CCMR2_IC4F_3
 (0x8UL << 
TIM_CCMR2_IC4F_Pos
Ë

	)

4190 
	#TIM_CCER_CC1E_Pos
 (0U)

	)

4191 
	#TIM_CCER_CC1E_Msk
 (0x1UL << 
TIM_CCER_CC1E_Pos
Ë

	)

4192 
	#TIM_CCER_CC1E
 
TIM_CCER_CC1E_Msk


	)

4193 
	#TIM_CCER_CC1P_Pos
 (1U)

	)

4194 
	#TIM_CCER_CC1P_Msk
 (0x1UL << 
TIM_CCER_CC1P_Pos
Ë

	)

4195 
	#TIM_CCER_CC1P
 
TIM_CCER_CC1P_Msk


	)

4196 
	#TIM_CCER_CC1NE_Pos
 (2U)

	)

4197 
	#TIM_CCER_CC1NE_Msk
 (0x1UL << 
TIM_CCER_CC1NE_Pos
Ë

	)

4198 
	#TIM_CCER_CC1NE
 
TIM_CCER_CC1NE_Msk


	)

4199 
	#TIM_CCER_CC1NP_Pos
 (3U)

	)

4200 
	#TIM_CCER_CC1NP_Msk
 (0x1UL << 
TIM_CCER_CC1NP_Pos
Ë

	)

4201 
	#TIM_CCER_CC1NP
 
TIM_CCER_CC1NP_Msk


	)

4202 
	#TIM_CCER_CC2E_Pos
 (4U)

	)

4203 
	#TIM_CCER_CC2E_Msk
 (0x1UL << 
TIM_CCER_CC2E_Pos
Ë

	)

4204 
	#TIM_CCER_CC2E
 
TIM_CCER_CC2E_Msk


	)

4205 
	#TIM_CCER_CC2P_Pos
 (5U)

	)

4206 
	#TIM_CCER_CC2P_Msk
 (0x1UL << 
TIM_CCER_CC2P_Pos
Ë

	)

4207 
	#TIM_CCER_CC2P
 
TIM_CCER_CC2P_Msk


	)

4208 
	#TIM_CCER_CC2NE_Pos
 (6U)

	)

4209 
	#TIM_CCER_CC2NE_Msk
 (0x1UL << 
TIM_CCER_CC2NE_Pos
Ë

	)

4210 
	#TIM_CCER_CC2NE
 
TIM_CCER_CC2NE_Msk


	)

4211 
	#TIM_CCER_CC2NP_Pos
 (7U)

	)

4212 
	#TIM_CCER_CC2NP_Msk
 (0x1UL << 
TIM_CCER_CC2NP_Pos
Ë

	)

4213 
	#TIM_CCER_CC2NP
 
TIM_CCER_CC2NP_Msk


	)

4214 
	#TIM_CCER_CC3E_Pos
 (8U)

	)

4215 
	#TIM_CCER_CC3E_Msk
 (0x1UL << 
TIM_CCER_CC3E_Pos
Ë

	)

4216 
	#TIM_CCER_CC3E
 
TIM_CCER_CC3E_Msk


	)

4217 
	#TIM_CCER_CC3P_Pos
 (9U)

	)

4218 
	#TIM_CCER_CC3P_Msk
 (0x1UL << 
TIM_CCER_CC3P_Pos
Ë

	)

4219 
	#TIM_CCER_CC3P
 
TIM_CCER_CC3P_Msk


	)

4220 
	#TIM_CCER_CC3NE_Pos
 (10U)

	)

4221 
	#TIM_CCER_CC3NE_Msk
 (0x1UL << 
TIM_CCER_CC3NE_Pos
Ë

	)

4222 
	#TIM_CCER_CC3NE
 
TIM_CCER_CC3NE_Msk


	)

4223 
	#TIM_CCER_CC3NP_Pos
 (11U)

	)

4224 
	#TIM_CCER_CC3NP_Msk
 (0x1UL << 
TIM_CCER_CC3NP_Pos
Ë

	)

4225 
	#TIM_CCER_CC3NP
 
TIM_CCER_CC3NP_Msk


	)

4226 
	#TIM_CCER_CC4E_Pos
 (12U)

	)

4227 
	#TIM_CCER_CC4E_Msk
 (0x1UL << 
TIM_CCER_CC4E_Pos
Ë

	)

4228 
	#TIM_CCER_CC4E
 
TIM_CCER_CC4E_Msk


	)

4229 
	#TIM_CCER_CC4P_Pos
 (13U)

	)

4230 
	#TIM_CCER_CC4P_Msk
 (0x1UL << 
TIM_CCER_CC4P_Pos
Ë

	)

4231 
	#TIM_CCER_CC4P
 
TIM_CCER_CC4P_Msk


	)

4234 
	#TIM_CNT_CNT_Pos
 (0U)

	)

4235 
	#TIM_CNT_CNT_Msk
 (0xFFFFFFFFUL << 
TIM_CNT_CNT_Pos
Ë

	)

4236 
	#TIM_CNT_CNT
 
TIM_CNT_CNT_Msk


	)

4239 
	#TIM_PSC_PSC_Pos
 (0U)

	)

4240 
	#TIM_PSC_PSC_Msk
 (0xFFFFUL << 
TIM_PSC_PSC_Pos
Ë

	)

4241 
	#TIM_PSC_PSC
 
TIM_PSC_PSC_Msk


	)

4244 
	#TIM_ARR_ARR_Pos
 (0U)

	)

4245 
	#TIM_ARR_ARR_Msk
 (0xFFFFFFFFUL << 
TIM_ARR_ARR_Pos
Ë

	)

4246 
	#TIM_ARR_ARR
 
TIM_ARR_ARR_Msk


	)

4249 
	#TIM_RCR_REP_Pos
 (0U)

	)

4250 
	#TIM_RCR_REP_Msk
 (0xFFUL << 
TIM_RCR_REP_Pos
Ë

	)

4251 
	#TIM_RCR_REP
 
TIM_RCR_REP_Msk


	)

4254 
	#TIM_CCR1_CCR1_Pos
 (0U)

	)

4255 
	#TIM_CCR1_CCR1_Msk
 (0xFFFFUL << 
TIM_CCR1_CCR1_Pos
Ë

	)

4256 
	#TIM_CCR1_CCR1
 
TIM_CCR1_CCR1_Msk


	)

4259 
	#TIM_CCR2_CCR2_Pos
 (0U)

	)

4260 
	#TIM_CCR2_CCR2_Msk
 (0xFFFFUL << 
TIM_CCR2_CCR2_Pos
Ë

	)

4261 
	#TIM_CCR2_CCR2
 
TIM_CCR2_CCR2_Msk


	)

4264 
	#TIM_CCR3_CCR3_Pos
 (0U)

	)

4265 
	#TIM_CCR3_CCR3_Msk
 (0xFFFFUL << 
TIM_CCR3_CCR3_Pos
Ë

	)

4266 
	#TIM_CCR3_CCR3
 
TIM_CCR3_CCR3_Msk


	)

4269 
	#TIM_CCR4_CCR4_Pos
 (0U)

	)

4270 
	#TIM_CCR4_CCR4_Msk
 (0xFFFFUL << 
TIM_CCR4_CCR4_Pos
Ë

	)

4271 
	#TIM_CCR4_CCR4
 
TIM_CCR4_CCR4_Msk


	)

4274 
	#TIM_BDTR_DTG_Pos
 (0U)

	)

4275 
	#TIM_BDTR_DTG_Msk
 (0xFFUL << 
TIM_BDTR_DTG_Pos
Ë

	)

4276 
	#TIM_BDTR_DTG
 
TIM_BDTR_DTG_Msk


	)

4277 
	#TIM_BDTR_DTG_0
 (0x01UL << 
TIM_BDTR_DTG_Pos
Ë

	)

4278 
	#TIM_BDTR_DTG_1
 (0x02UL << 
TIM_BDTR_DTG_Pos
Ë

	)

4279 
	#TIM_BDTR_DTG_2
 (0x04UL << 
TIM_BDTR_DTG_Pos
Ë

	)

4280 
	#TIM_BDTR_DTG_3
 (0x08UL << 
TIM_BDTR_DTG_Pos
Ë

	)

4281 
	#TIM_BDTR_DTG_4
 (0x10UL << 
TIM_BDTR_DTG_Pos
Ë

	)

4282 
	#TIM_BDTR_DTG_5
 (0x20UL << 
TIM_BDTR_DTG_Pos
Ë

	)

4283 
	#TIM_BDTR_DTG_6
 (0x40UL << 
TIM_BDTR_DTG_Pos
Ë

	)

4284 
	#TIM_BDTR_DTG_7
 (0x80UL << 
TIM_BDTR_DTG_Pos
Ë

	)

4286 
	#TIM_BDTR_LOCK_Pos
 (8U)

	)

4287 
	#TIM_BDTR_LOCK_Msk
 (0x3UL << 
TIM_BDTR_LOCK_Pos
Ë

	)

4288 
	#TIM_BDTR_LOCK
 
TIM_BDTR_LOCK_Msk


	)

4289 
	#TIM_BDTR_LOCK_0
 (0x1UL << 
TIM_BDTR_LOCK_Pos
Ë

	)

4290 
	#TIM_BDTR_LOCK_1
 (0x2UL << 
TIM_BDTR_LOCK_Pos
Ë

	)

4292 
	#TIM_BDTR_OSSI_Pos
 (10U)

	)

4293 
	#TIM_BDTR_OSSI_Msk
 (0x1UL << 
TIM_BDTR_OSSI_Pos
Ë

	)

4294 
	#TIM_BDTR_OSSI
 
TIM_BDTR_OSSI_Msk


	)

4295 
	#TIM_BDTR_OSSR_Pos
 (11U)

	)

4296 
	#TIM_BDTR_OSSR_Msk
 (0x1UL << 
TIM_BDTR_OSSR_Pos
Ë

	)

4297 
	#TIM_BDTR_OSSR
 
TIM_BDTR_OSSR_Msk


	)

4298 
	#TIM_BDTR_BKE_Pos
 (12U)

	)

4299 
	#TIM_BDTR_BKE_Msk
 (0x1UL << 
TIM_BDTR_BKE_Pos
Ë

	)

4300 
	#TIM_BDTR_BKE
 
TIM_BDTR_BKE_Msk


	)

4301 
	#TIM_BDTR_BKP_Pos
 (13U)

	)

4302 
	#TIM_BDTR_BKP_Msk
 (0x1UL << 
TIM_BDTR_BKP_Pos
Ë

	)

4303 
	#TIM_BDTR_BKP
 
TIM_BDTR_BKP_Msk


	)

4304 
	#TIM_BDTR_AOE_Pos
 (14U)

	)

4305 
	#TIM_BDTR_AOE_Msk
 (0x1UL << 
TIM_BDTR_AOE_Pos
Ë

	)

4306 
	#TIM_BDTR_AOE
 
TIM_BDTR_AOE_Msk


	)

4307 
	#TIM_BDTR_MOE_Pos
 (15U)

	)

4308 
	#TIM_BDTR_MOE_Msk
 (0x1UL << 
TIM_BDTR_MOE_Pos
Ë

	)

4309 
	#TIM_BDTR_MOE
 
TIM_BDTR_MOE_Msk


	)

4312 
	#TIM_DCR_DBA_Pos
 (0U)

	)

4313 
	#TIM_DCR_DBA_Msk
 (0x1FUL << 
TIM_DCR_DBA_Pos
Ë

	)

4314 
	#TIM_DCR_DBA
 
TIM_DCR_DBA_Msk


	)

4315 
	#TIM_DCR_DBA_0
 (0x01UL << 
TIM_DCR_DBA_Pos
Ë

	)

4316 
	#TIM_DCR_DBA_1
 (0x02UL << 
TIM_DCR_DBA_Pos
Ë

	)

4317 
	#TIM_DCR_DBA_2
 (0x04UL << 
TIM_DCR_DBA_Pos
Ë

	)

4318 
	#TIM_DCR_DBA_3
 (0x08UL << 
TIM_DCR_DBA_Pos
Ë

	)

4319 
	#TIM_DCR_DBA_4
 (0x10UL << 
TIM_DCR_DBA_Pos
Ë

	)

4321 
	#TIM_DCR_DBL_Pos
 (8U)

	)

4322 
	#TIM_DCR_DBL_Msk
 (0x1FUL << 
TIM_DCR_DBL_Pos
Ë

	)

4323 
	#TIM_DCR_DBL
 
TIM_DCR_DBL_Msk


	)

4324 
	#TIM_DCR_DBL_0
 (0x01UL << 
TIM_DCR_DBL_Pos
Ë

	)

4325 
	#TIM_DCR_DBL_1
 (0x02UL << 
TIM_DCR_DBL_Pos
Ë

	)

4326 
	#TIM_DCR_DBL_2
 (0x04UL << 
TIM_DCR_DBL_Pos
Ë

	)

4327 
	#TIM_DCR_DBL_3
 (0x08UL << 
TIM_DCR_DBL_Pos
Ë

	)

4328 
	#TIM_DCR_DBL_4
 (0x10UL << 
TIM_DCR_DBL_Pos
Ë

	)

4331 
	#TIM_DMAR_DMAB_Pos
 (0U)

	)

4332 
	#TIM_DMAR_DMAB_Msk
 (0xFFFFUL << 
TIM_DMAR_DMAB_Pos
Ë

	)

4333 
	#TIM_DMAR_DMAB
 
TIM_DMAR_DMAB_Msk


	)

4342 
	#RTC_CRH_SECIE_Pos
 (0U)

	)

4343 
	#RTC_CRH_SECIE_Msk
 (0x1UL << 
RTC_CRH_SECIE_Pos
Ë

	)

4344 
	#RTC_CRH_SECIE
 
RTC_CRH_SECIE_Msk


	)

4345 
	#RTC_CRH_ALRIE_Pos
 (1U)

	)

4346 
	#RTC_CRH_ALRIE_Msk
 (0x1UL << 
RTC_CRH_ALRIE_Pos
Ë

	)

4347 
	#RTC_CRH_ALRIE
 
RTC_CRH_ALRIE_Msk


	)

4348 
	#RTC_CRH_OWIE_Pos
 (2U)

	)

4349 
	#RTC_CRH_OWIE_Msk
 (0x1UL << 
RTC_CRH_OWIE_Pos
Ë

	)

4350 
	#RTC_CRH_OWIE
 
RTC_CRH_OWIE_Msk


	)

4353 
	#RTC_CRL_SECF_Pos
 (0U)

	)

4354 
	#RTC_CRL_SECF_Msk
 (0x1UL << 
RTC_CRL_SECF_Pos
Ë

	)

4355 
	#RTC_CRL_SECF
 
RTC_CRL_SECF_Msk


	)

4356 
	#RTC_CRL_ALRF_Pos
 (1U)

	)

4357 
	#RTC_CRL_ALRF_Msk
 (0x1UL << 
RTC_CRL_ALRF_Pos
Ë

	)

4358 
	#RTC_CRL_ALRF
 
RTC_CRL_ALRF_Msk


	)

4359 
	#RTC_CRL_OWF_Pos
 (2U)

	)

4360 
	#RTC_CRL_OWF_Msk
 (0x1UL << 
RTC_CRL_OWF_Pos
Ë

	)

4361 
	#RTC_CRL_OWF
 
RTC_CRL_OWF_Msk


	)

4362 
	#RTC_CRL_RSF_Pos
 (3U)

	)

4363 
	#RTC_CRL_RSF_Msk
 (0x1UL << 
RTC_CRL_RSF_Pos
Ë

	)

4364 
	#RTC_CRL_RSF
 
RTC_CRL_RSF_Msk


	)

4365 
	#RTC_CRL_CNF_Pos
 (4U)

	)

4366 
	#RTC_CRL_CNF_Msk
 (0x1UL << 
RTC_CRL_CNF_Pos
Ë

	)

4367 
	#RTC_CRL_CNF
 
RTC_CRL_CNF_Msk


	)

4368 
	#RTC_CRL_RTOFF_Pos
 (5U)

	)

4369 
	#RTC_CRL_RTOFF_Msk
 (0x1UL << 
RTC_CRL_RTOFF_Pos
Ë

	)

4370 
	#RTC_CRL_RTOFF
 
RTC_CRL_RTOFF_Msk


	)

4373 
	#RTC_PRLH_PRL_Pos
 (0U)

	)

4374 
	#RTC_PRLH_PRL_Msk
 (0xFUL << 
RTC_PRLH_PRL_Pos
Ë

	)

4375 
	#RTC_PRLH_PRL
 
RTC_PRLH_PRL_Msk


	)

4378 
	#RTC_PRLL_PRL_Pos
 (0U)

	)

4379 
	#RTC_PRLL_PRL_Msk
 (0xFFFFUL << 
RTC_PRLL_PRL_Pos
Ë

	)

4380 
	#RTC_PRLL_PRL
 
RTC_PRLL_PRL_Msk


	)

4383 
	#RTC_DIVH_RTC_DIV_Pos
 (0U)

	)

4384 
	#RTC_DIVH_RTC_DIV_Msk
 (0xFUL << 
RTC_DIVH_RTC_DIV_Pos
Ë

	)

4385 
	#RTC_DIVH_RTC_DIV
 
RTC_DIVH_RTC_DIV_Msk


	)

4388 
	#RTC_DIVL_RTC_DIV_Pos
 (0U)

	)

4389 
	#RTC_DIVL_RTC_DIV_Msk
 (0xFFFFUL << 
RTC_DIVL_RTC_DIV_Pos
Ë

	)

4390 
	#RTC_DIVL_RTC_DIV
 
RTC_DIVL_RTC_DIV_Msk


	)

4393 
	#RTC_CNTH_RTC_CNT_Pos
 (0U)

	)

4394 
	#RTC_CNTH_RTC_CNT_Msk
 (0xFFFFUL << 
RTC_CNTH_RTC_CNT_Pos
Ë

	)

4395 
	#RTC_CNTH_RTC_CNT
 
RTC_CNTH_RTC_CNT_Msk


	)

4398 
	#RTC_CNTL_RTC_CNT_Pos
 (0U)

	)

4399 
	#RTC_CNTL_RTC_CNT_Msk
 (0xFFFFUL << 
RTC_CNTL_RTC_CNT_Pos
Ë

	)

4400 
	#RTC_CNTL_RTC_CNT
 
RTC_CNTL_RTC_CNT_Msk


	)

4403 
	#RTC_ALRH_RTC_ALR_Pos
 (0U)

	)

4404 
	#RTC_ALRH_RTC_ALR_Msk
 (0xFFFFUL << 
RTC_ALRH_RTC_ALR_Pos
Ë

	)

4405 
	#RTC_ALRH_RTC_ALR
 
RTC_ALRH_RTC_ALR_Msk


	)

4408 
	#RTC_ALRL_RTC_ALR_Pos
 (0U)

	)

4409 
	#RTC_ALRL_RTC_ALR_Msk
 (0xFFFFUL << 
RTC_ALRL_RTC_ALR_Pos
Ë

	)

4410 
	#RTC_ALRL_RTC_ALR
 
RTC_ALRL_RTC_ALR_Msk


	)

4419 
	#IWDG_KR_KEY_Pos
 (0U)

	)

4420 
	#IWDG_KR_KEY_Msk
 (0xFFFFUL << 
IWDG_KR_KEY_Pos
Ë

	)

4421 
	#IWDG_KR_KEY
 
IWDG_KR_KEY_Msk


	)

4424 
	#IWDG_PR_PR_Pos
 (0U)

	)

4425 
	#IWDG_PR_PR_Msk
 (0x7UL << 
IWDG_PR_PR_Pos
Ë

	)

4426 
	#IWDG_PR_PR
 
IWDG_PR_PR_Msk


	)

4427 
	#IWDG_PR_PR_0
 (0x1UL << 
IWDG_PR_PR_Pos
Ë

	)

4428 
	#IWDG_PR_PR_1
 (0x2UL << 
IWDG_PR_PR_Pos
Ë

	)

4429 
	#IWDG_PR_PR_2
 (0x4UL << 
IWDG_PR_PR_Pos
Ë

	)

4432 
	#IWDG_RLR_RL_Pos
 (0U)

	)

4433 
	#IWDG_RLR_RL_Msk
 (0xFFFUL << 
IWDG_RLR_RL_Pos
Ë

	)

4434 
	#IWDG_RLR_RL
 
IWDG_RLR_RL_Msk


	)

4437 
	#IWDG_SR_PVU_Pos
 (0U)

	)

4438 
	#IWDG_SR_PVU_Msk
 (0x1UL << 
IWDG_SR_PVU_Pos
Ë

	)

4439 
	#IWDG_SR_PVU
 
IWDG_SR_PVU_Msk


	)

4440 
	#IWDG_SR_RVU_Pos
 (1U)

	)

4441 
	#IWDG_SR_RVU_Msk
 (0x1UL << 
IWDG_SR_RVU_Pos
Ë

	)

4442 
	#IWDG_SR_RVU
 
IWDG_SR_RVU_Msk


	)

4451 
	#WWDG_CR_T_Pos
 (0U)

	)

4452 
	#WWDG_CR_T_Msk
 (0x7FUL << 
WWDG_CR_T_Pos
Ë

	)

4453 
	#WWDG_CR_T
 
WWDG_CR_T_Msk


	)

4454 
	#WWDG_CR_T_0
 (0x01UL << 
WWDG_CR_T_Pos
Ë

	)

4455 
	#WWDG_CR_T_1
 (0x02UL << 
WWDG_CR_T_Pos
Ë

	)

4456 
	#WWDG_CR_T_2
 (0x04UL << 
WWDG_CR_T_Pos
Ë

	)

4457 
	#WWDG_CR_T_3
 (0x08UL << 
WWDG_CR_T_Pos
Ë

	)

4458 
	#WWDG_CR_T_4
 (0x10UL << 
WWDG_CR_T_Pos
Ë

	)

4459 
	#WWDG_CR_T_5
 (0x20UL << 
WWDG_CR_T_Pos
Ë

	)

4460 
	#WWDG_CR_T_6
 (0x40UL << 
WWDG_CR_T_Pos
Ë

	)

4463 
	#WWDG_CR_T0
 
WWDG_CR_T_0


	)

4464 
	#WWDG_CR_T1
 
WWDG_CR_T_1


	)

4465 
	#WWDG_CR_T2
 
WWDG_CR_T_2


	)

4466 
	#WWDG_CR_T3
 
WWDG_CR_T_3


	)

4467 
	#WWDG_CR_T4
 
WWDG_CR_T_4


	)

4468 
	#WWDG_CR_T5
 
WWDG_CR_T_5


	)

4469 
	#WWDG_CR_T6
 
WWDG_CR_T_6


	)

4471 
	#WWDG_CR_WDGA_Pos
 (7U)

	)

4472 
	#WWDG_CR_WDGA_Msk
 (0x1UL << 
WWDG_CR_WDGA_Pos
Ë

	)

4473 
	#WWDG_CR_WDGA
 
WWDG_CR_WDGA_Msk


	)

4476 
	#WWDG_CFR_W_Pos
 (0U)

	)

4477 
	#WWDG_CFR_W_Msk
 (0x7FUL << 
WWDG_CFR_W_Pos
Ë

	)

4478 
	#WWDG_CFR_W
 
WWDG_CFR_W_Msk


	)

4479 
	#WWDG_CFR_W_0
 (0x01UL << 
WWDG_CFR_W_Pos
Ë

	)

4480 
	#WWDG_CFR_W_1
 (0x02UL << 
WWDG_CFR_W_Pos
Ë

	)

4481 
	#WWDG_CFR_W_2
 (0x04UL << 
WWDG_CFR_W_Pos
Ë

	)

4482 
	#WWDG_CFR_W_3
 (0x08UL << 
WWDG_CFR_W_Pos
Ë

	)

4483 
	#WWDG_CFR_W_4
 (0x10UL << 
WWDG_CFR_W_Pos
Ë

	)

4484 
	#WWDG_CFR_W_5
 (0x20UL << 
WWDG_CFR_W_Pos
Ë

	)

4485 
	#WWDG_CFR_W_6
 (0x40UL << 
WWDG_CFR_W_Pos
Ë

	)

4488 
	#WWDG_CFR_W0
 
WWDG_CFR_W_0


	)

4489 
	#WWDG_CFR_W1
 
WWDG_CFR_W_1


	)

4490 
	#WWDG_CFR_W2
 
WWDG_CFR_W_2


	)

4491 
	#WWDG_CFR_W3
 
WWDG_CFR_W_3


	)

4492 
	#WWDG_CFR_W4
 
WWDG_CFR_W_4


	)

4493 
	#WWDG_CFR_W5
 
WWDG_CFR_W_5


	)

4494 
	#WWDG_CFR_W6
 
WWDG_CFR_W_6


	)

4496 
	#WWDG_CFR_WDGTB_Pos
 (7U)

	)

4497 
	#WWDG_CFR_WDGTB_Msk
 (0x3UL << 
WWDG_CFR_WDGTB_Pos
Ë

	)

4498 
	#WWDG_CFR_WDGTB
 
WWDG_CFR_WDGTB_Msk


	)

4499 
	#WWDG_CFR_WDGTB_0
 (0x1UL << 
WWDG_CFR_WDGTB_Pos
Ë

	)

4500 
	#WWDG_CFR_WDGTB_1
 (0x2UL << 
WWDG_CFR_WDGTB_Pos
Ë

	)

4503 
	#WWDG_CFR_WDGTB0
 
WWDG_CFR_WDGTB_0


	)

4504 
	#WWDG_CFR_WDGTB1
 
WWDG_CFR_WDGTB_1


	)

4506 
	#WWDG_CFR_EWI_Pos
 (9U)

	)

4507 
	#WWDG_CFR_EWI_Msk
 (0x1UL << 
WWDG_CFR_EWI_Pos
Ë

	)

4508 
	#WWDG_CFR_EWI
 
WWDG_CFR_EWI_Msk


	)

4511 
	#WWDG_SR_EWIF_Pos
 (0U)

	)

4512 
	#WWDG_SR_EWIF_Msk
 (0x1UL << 
WWDG_SR_EWIF_Pos
Ë

	)

4513 
	#WWDG_SR_EWIF
 
WWDG_SR_EWIF_Msk


	)

4522 
	#USB_EP0R
 
USB_BASE


	)

4523 
	#USB_EP1R
 (
USB_BASE
 + 0x00000004Ë

	)

4524 
	#USB_EP2R
 (
USB_BASE
 + 0x00000008Ë

	)

4525 
	#USB_EP3R
 (
USB_BASE
 + 0x0000000CË

	)

4526 
	#USB_EP4R
 (
USB_BASE
 + 0x00000010Ë

	)

4527 
	#USB_EP5R
 (
USB_BASE
 + 0x00000014Ë

	)

4528 
	#USB_EP6R
 (
USB_BASE
 + 0x00000018Ë

	)

4529 
	#USB_EP7R
 (
USB_BASE
 + 0x0000001CË

	)

4532 
	#USB_EP_CTR_RX_Pos
 (15U)

	)

4533 
	#USB_EP_CTR_RX_Msk
 (0x1UL << 
USB_EP_CTR_RX_Pos
Ë

	)

4534 
	#USB_EP_CTR_RX
 
USB_EP_CTR_RX_Msk


	)

4535 
	#USB_EP_DTOG_RX_Pos
 (14U)

	)

4536 
	#USB_EP_DTOG_RX_Msk
 (0x1UL << 
USB_EP_DTOG_RX_Pos
Ë

	)

4537 
	#USB_EP_DTOG_RX
 
USB_EP_DTOG_RX_Msk


	)

4538 
	#USB_EPRX_STAT_Pos
 (12U)

	)

4539 
	#USB_EPRX_STAT_Msk
 (0x3UL << 
USB_EPRX_STAT_Pos
Ë

	)

4540 
	#USB_EPRX_STAT
 
USB_EPRX_STAT_Msk


	)

4541 
	#USB_EP_SETUP_Pos
 (11U)

	)

4542 
	#USB_EP_SETUP_Msk
 (0x1UL << 
USB_EP_SETUP_Pos
Ë

	)

4543 
	#USB_EP_SETUP
 
USB_EP_SETUP_Msk


	)

4544 
	#USB_EP_T_FIELD_Pos
 (9U)

	)

4545 
	#USB_EP_T_FIELD_Msk
 (0x3UL << 
USB_EP_T_FIELD_Pos
Ë

	)

4546 
	#USB_EP_T_FIELD
 
USB_EP_T_FIELD_Msk


	)

4547 
	#USB_EP_KIND_Pos
 (8U)

	)

4548 
	#USB_EP_KIND_Msk
 (0x1UL << 
USB_EP_KIND_Pos
Ë

	)

4549 
	#USB_EP_KIND
 
USB_EP_KIND_Msk


	)

4550 
	#USB_EP_CTR_TX_Pos
 (7U)

	)

4551 
	#USB_EP_CTR_TX_Msk
 (0x1UL << 
USB_EP_CTR_TX_Pos
Ë

	)

4552 
	#USB_EP_CTR_TX
 
USB_EP_CTR_TX_Msk


	)

4553 
	#USB_EP_DTOG_TX_Pos
 (6U)

	)

4554 
	#USB_EP_DTOG_TX_Msk
 (0x1UL << 
USB_EP_DTOG_TX_Pos
Ë

	)

4555 
	#USB_EP_DTOG_TX
 
USB_EP_DTOG_TX_Msk


	)

4556 
	#USB_EPTX_STAT_Pos
 (4U)

	)

4557 
	#USB_EPTX_STAT_Msk
 (0x3UL << 
USB_EPTX_STAT_Pos
Ë

	)

4558 
	#USB_EPTX_STAT
 
USB_EPTX_STAT_Msk


	)

4559 
	#USB_EPADDR_FIELD_Pos
 (0U)

	)

4560 
	#USB_EPADDR_FIELD_Msk
 (0xFUL << 
USB_EPADDR_FIELD_Pos
Ë

	)

4561 
	#USB_EPADDR_FIELD
 
USB_EPADDR_FIELD_Msk


	)

4564 
	#USB_EPREG_MASK
 (
USB_EP_CTR_RX
|
USB_EP_SETUP
|
USB_EP_T_FIELD
|
USB_EP_KIND
|
USB_EP_CTR_TX
|
USB_EPADDR_FIELD
)

	)

4566 
	#USB_EP_TYPE_MASK_Pos
 (9U)

	)

4567 
	#USB_EP_TYPE_MASK_Msk
 (0x3UL << 
USB_EP_TYPE_MASK_Pos
Ë

	)

4568 
	#USB_EP_TYPE_MASK
 
USB_EP_TYPE_MASK_Msk


	)

4569 
	#USB_EP_BULK
 0x00000000U

	)

4570 
	#USB_EP_CONTROL
 0x00000200U

	)

4571 
	#USB_EP_ISOCHRONOUS
 0x00000400U

	)

4572 
	#USB_EP_INTERRUPT
 0x00000600U

	)

4573 
	#USB_EP_T_MASK
 (~
USB_EP_T_FIELD
 & 
USB_EPREG_MASK
)

	)

4575 
	#USB_EPKIND_MASK
 (~
USB_EP_KIND
 & 
USB_EPREG_MASK
Ë

	)

4577 
	#USB_EP_TX_DIS
 0x00000000U

	)

4578 
	#USB_EP_TX_STALL
 0x00000010U

	)

4579 
	#USB_EP_TX_NAK
 0x00000020U

	)

4580 
	#USB_EP_TX_VALID
 0x00000030U

	)

4581 
	#USB_EPTX_DTOG1
 0x00000010U

	)

4582 
	#USB_EPTX_DTOG2
 0x00000020U

	)

4583 
	#USB_EPTX_DTOGMASK
 (
USB_EPTX_STAT
|
USB_EPREG_MASK
)

	)

4585 
	#USB_EP_RX_DIS
 0x00000000U

	)

4586 
	#USB_EP_RX_STALL
 0x00001000U

	)

4587 
	#USB_EP_RX_NAK
 0x00002000U

	)

4588 
	#USB_EP_RX_VALID
 0x00003000U

	)

4589 
	#USB_EPRX_DTOG1
 0x00001000U

	)

4590 
	#USB_EPRX_DTOG2
 0x00002000U

	)

4591 
	#USB_EPRX_DTOGMASK
 (
USB_EPRX_STAT
|
USB_EPREG_MASK
)

	)

4594 
	#USB_EP0R_EA_Pos
 (0U)

	)

4595 
	#USB_EP0R_EA_Msk
 (0xFUL << 
USB_EP0R_EA_Pos
Ë

	)

4596 
	#USB_EP0R_EA
 
USB_EP0R_EA_Msk


	)

4598 
	#USB_EP0R_STAT_TX_Pos
 (4U)

	)

4599 
	#USB_EP0R_STAT_TX_Msk
 (0x3UL << 
USB_EP0R_STAT_TX_Pos
Ë

	)

4600 
	#USB_EP0R_STAT_TX
 
USB_EP0R_STAT_TX_Msk


	)

4601 
	#USB_EP0R_STAT_TX_0
 (0x1UL << 
USB_EP0R_STAT_TX_Pos
Ë

	)

4602 
	#USB_EP0R_STAT_TX_1
 (0x2UL << 
USB_EP0R_STAT_TX_Pos
Ë

	)

4604 
	#USB_EP0R_DTOG_TX_Pos
 (6U)

	)

4605 
	#USB_EP0R_DTOG_TX_Msk
 (0x1UL << 
USB_EP0R_DTOG_TX_Pos
Ë

	)

4606 
	#USB_EP0R_DTOG_TX
 
USB_EP0R_DTOG_TX_Msk


	)

4607 
	#USB_EP0R_CTR_TX_Pos
 (7U)

	)

4608 
	#USB_EP0R_CTR_TX_Msk
 (0x1UL << 
USB_EP0R_CTR_TX_Pos
Ë

	)

4609 
	#USB_EP0R_CTR_TX
 
USB_EP0R_CTR_TX_Msk


	)

4610 
	#USB_EP0R_EP_KIND_Pos
 (8U)

	)

4611 
	#USB_EP0R_EP_KIND_Msk
 (0x1UL << 
USB_EP0R_EP_KIND_Pos
Ë

	)

4612 
	#USB_EP0R_EP_KIND
 
USB_EP0R_EP_KIND_Msk


	)

4614 
	#USB_EP0R_EP_TYPE_Pos
 (9U)

	)

4615 
	#USB_EP0R_EP_TYPE_Msk
 (0x3UL << 
USB_EP0R_EP_TYPE_Pos
Ë

	)

4616 
	#USB_EP0R_EP_TYPE
 
USB_EP0R_EP_TYPE_Msk


	)

4617 
	#USB_EP0R_EP_TYPE_0
 (0x1UL << 
USB_EP0R_EP_TYPE_Pos
Ë

	)

4618 
	#USB_EP0R_EP_TYPE_1
 (0x2UL << 
USB_EP0R_EP_TYPE_Pos
Ë

	)

4620 
	#USB_EP0R_SETUP_Pos
 (11U)

	)

4621 
	#USB_EP0R_SETUP_Msk
 (0x1UL << 
USB_EP0R_SETUP_Pos
Ë

	)

4622 
	#USB_EP0R_SETUP
 
USB_EP0R_SETUP_Msk


	)

4624 
	#USB_EP0R_STAT_RX_Pos
 (12U)

	)

4625 
	#USB_EP0R_STAT_RX_Msk
 (0x3UL << 
USB_EP0R_STAT_RX_Pos
Ë

	)

4626 
	#USB_EP0R_STAT_RX
 
USB_EP0R_STAT_RX_Msk


	)

4627 
	#USB_EP0R_STAT_RX_0
 (0x1UL << 
USB_EP0R_STAT_RX_Pos
Ë

	)

4628 
	#USB_EP0R_STAT_RX_1
 (0x2UL << 
USB_EP0R_STAT_RX_Pos
Ë

	)

4630 
	#USB_EP0R_DTOG_RX_Pos
 (14U)

	)

4631 
	#USB_EP0R_DTOG_RX_Msk
 (0x1UL << 
USB_EP0R_DTOG_RX_Pos
Ë

	)

4632 
	#USB_EP0R_DTOG_RX
 
USB_EP0R_DTOG_RX_Msk


	)

4633 
	#USB_EP0R_CTR_RX_Pos
 (15U)

	)

4634 
	#USB_EP0R_CTR_RX_Msk
 (0x1UL << 
USB_EP0R_CTR_RX_Pos
Ë

	)

4635 
	#USB_EP0R_CTR_RX
 
USB_EP0R_CTR_RX_Msk


	)

4638 
	#USB_EP1R_EA_Pos
 (0U)

	)

4639 
	#USB_EP1R_EA_Msk
 (0xFUL << 
USB_EP1R_EA_Pos
Ë

	)

4640 
	#USB_EP1R_EA
 
USB_EP1R_EA_Msk


	)

4642 
	#USB_EP1R_STAT_TX_Pos
 (4U)

	)

4643 
	#USB_EP1R_STAT_TX_Msk
 (0x3UL << 
USB_EP1R_STAT_TX_Pos
Ë

	)

4644 
	#USB_EP1R_STAT_TX
 
USB_EP1R_STAT_TX_Msk


	)

4645 
	#USB_EP1R_STAT_TX_0
 (0x1UL << 
USB_EP1R_STAT_TX_Pos
Ë

	)

4646 
	#USB_EP1R_STAT_TX_1
 (0x2UL << 
USB_EP1R_STAT_TX_Pos
Ë

	)

4648 
	#USB_EP1R_DTOG_TX_Pos
 (6U)

	)

4649 
	#USB_EP1R_DTOG_TX_Msk
 (0x1UL << 
USB_EP1R_DTOG_TX_Pos
Ë

	)

4650 
	#USB_EP1R_DTOG_TX
 
USB_EP1R_DTOG_TX_Msk


	)

4651 
	#USB_EP1R_CTR_TX_Pos
 (7U)

	)

4652 
	#USB_EP1R_CTR_TX_Msk
 (0x1UL << 
USB_EP1R_CTR_TX_Pos
Ë

	)

4653 
	#USB_EP1R_CTR_TX
 
USB_EP1R_CTR_TX_Msk


	)

4654 
	#USB_EP1R_EP_KIND_Pos
 (8U)

	)

4655 
	#USB_EP1R_EP_KIND_Msk
 (0x1UL << 
USB_EP1R_EP_KIND_Pos
Ë

	)

4656 
	#USB_EP1R_EP_KIND
 
USB_EP1R_EP_KIND_Msk


	)

4658 
	#USB_EP1R_EP_TYPE_Pos
 (9U)

	)

4659 
	#USB_EP1R_EP_TYPE_Msk
 (0x3UL << 
USB_EP1R_EP_TYPE_Pos
Ë

	)

4660 
	#USB_EP1R_EP_TYPE
 
USB_EP1R_EP_TYPE_Msk


	)

4661 
	#USB_EP1R_EP_TYPE_0
 (0x1UL << 
USB_EP1R_EP_TYPE_Pos
Ë

	)

4662 
	#USB_EP1R_EP_TYPE_1
 (0x2UL << 
USB_EP1R_EP_TYPE_Pos
Ë

	)

4664 
	#USB_EP1R_SETUP_Pos
 (11U)

	)

4665 
	#USB_EP1R_SETUP_Msk
 (0x1UL << 
USB_EP1R_SETUP_Pos
Ë

	)

4666 
	#USB_EP1R_SETUP
 
USB_EP1R_SETUP_Msk


	)

4668 
	#USB_EP1R_STAT_RX_Pos
 (12U)

	)

4669 
	#USB_EP1R_STAT_RX_Msk
 (0x3UL << 
USB_EP1R_STAT_RX_Pos
Ë

	)

4670 
	#USB_EP1R_STAT_RX
 
USB_EP1R_STAT_RX_Msk


	)

4671 
	#USB_EP1R_STAT_RX_0
 (0x1UL << 
USB_EP1R_STAT_RX_Pos
Ë

	)

4672 
	#USB_EP1R_STAT_RX_1
 (0x2UL << 
USB_EP1R_STAT_RX_Pos
Ë

	)

4674 
	#USB_EP1R_DTOG_RX_Pos
 (14U)

	)

4675 
	#USB_EP1R_DTOG_RX_Msk
 (0x1UL << 
USB_EP1R_DTOG_RX_Pos
Ë

	)

4676 
	#USB_EP1R_DTOG_RX
 
USB_EP1R_DTOG_RX_Msk


	)

4677 
	#USB_EP1R_CTR_RX_Pos
 (15U)

	)

4678 
	#USB_EP1R_CTR_RX_Msk
 (0x1UL << 
USB_EP1R_CTR_RX_Pos
Ë

	)

4679 
	#USB_EP1R_CTR_RX
 
USB_EP1R_CTR_RX_Msk


	)

4682 
	#USB_EP2R_EA_Pos
 (0U)

	)

4683 
	#USB_EP2R_EA_Msk
 (0xFUL << 
USB_EP2R_EA_Pos
Ë

	)

4684 
	#USB_EP2R_EA
 
USB_EP2R_EA_Msk


	)

4686 
	#USB_EP2R_STAT_TX_Pos
 (4U)

	)

4687 
	#USB_EP2R_STAT_TX_Msk
 (0x3UL << 
USB_EP2R_STAT_TX_Pos
Ë

	)

4688 
	#USB_EP2R_STAT_TX
 
USB_EP2R_STAT_TX_Msk


	)

4689 
	#USB_EP2R_STAT_TX_0
 (0x1UL << 
USB_EP2R_STAT_TX_Pos
Ë

	)

4690 
	#USB_EP2R_STAT_TX_1
 (0x2UL << 
USB_EP2R_STAT_TX_Pos
Ë

	)

4692 
	#USB_EP2R_DTOG_TX_Pos
 (6U)

	)

4693 
	#USB_EP2R_DTOG_TX_Msk
 (0x1UL << 
USB_EP2R_DTOG_TX_Pos
Ë

	)

4694 
	#USB_EP2R_DTOG_TX
 
USB_EP2R_DTOG_TX_Msk


	)

4695 
	#USB_EP2R_CTR_TX_Pos
 (7U)

	)

4696 
	#USB_EP2R_CTR_TX_Msk
 (0x1UL << 
USB_EP2R_CTR_TX_Pos
Ë

	)

4697 
	#USB_EP2R_CTR_TX
 
USB_EP2R_CTR_TX_Msk


	)

4698 
	#USB_EP2R_EP_KIND_Pos
 (8U)

	)

4699 
	#USB_EP2R_EP_KIND_Msk
 (0x1UL << 
USB_EP2R_EP_KIND_Pos
Ë

	)

4700 
	#USB_EP2R_EP_KIND
 
USB_EP2R_EP_KIND_Msk


	)

4702 
	#USB_EP2R_EP_TYPE_Pos
 (9U)

	)

4703 
	#USB_EP2R_EP_TYPE_Msk
 (0x3UL << 
USB_EP2R_EP_TYPE_Pos
Ë

	)

4704 
	#USB_EP2R_EP_TYPE
 
USB_EP2R_EP_TYPE_Msk


	)

4705 
	#USB_EP2R_EP_TYPE_0
 (0x1UL << 
USB_EP2R_EP_TYPE_Pos
Ë

	)

4706 
	#USB_EP2R_EP_TYPE_1
 (0x2UL << 
USB_EP2R_EP_TYPE_Pos
Ë

	)

4708 
	#USB_EP2R_SETUP_Pos
 (11U)

	)

4709 
	#USB_EP2R_SETUP_Msk
 (0x1UL << 
USB_EP2R_SETUP_Pos
Ë

	)

4710 
	#USB_EP2R_SETUP
 
USB_EP2R_SETUP_Msk


	)

4712 
	#USB_EP2R_STAT_RX_Pos
 (12U)

	)

4713 
	#USB_EP2R_STAT_RX_Msk
 (0x3UL << 
USB_EP2R_STAT_RX_Pos
Ë

	)

4714 
	#USB_EP2R_STAT_RX
 
USB_EP2R_STAT_RX_Msk


	)

4715 
	#USB_EP2R_STAT_RX_0
 (0x1UL << 
USB_EP2R_STAT_RX_Pos
Ë

	)

4716 
	#USB_EP2R_STAT_RX_1
 (0x2UL << 
USB_EP2R_STAT_RX_Pos
Ë

	)

4718 
	#USB_EP2R_DTOG_RX_Pos
 (14U)

	)

4719 
	#USB_EP2R_DTOG_RX_Msk
 (0x1UL << 
USB_EP2R_DTOG_RX_Pos
Ë

	)

4720 
	#USB_EP2R_DTOG_RX
 
USB_EP2R_DTOG_RX_Msk


	)

4721 
	#USB_EP2R_CTR_RX_Pos
 (15U)

	)

4722 
	#USB_EP2R_CTR_RX_Msk
 (0x1UL << 
USB_EP2R_CTR_RX_Pos
Ë

	)

4723 
	#USB_EP2R_CTR_RX
 
USB_EP2R_CTR_RX_Msk


	)

4726 
	#USB_EP3R_EA_Pos
 (0U)

	)

4727 
	#USB_EP3R_EA_Msk
 (0xFUL << 
USB_EP3R_EA_Pos
Ë

	)

4728 
	#USB_EP3R_EA
 
USB_EP3R_EA_Msk


	)

4730 
	#USB_EP3R_STAT_TX_Pos
 (4U)

	)

4731 
	#USB_EP3R_STAT_TX_Msk
 (0x3UL << 
USB_EP3R_STAT_TX_Pos
Ë

	)

4732 
	#USB_EP3R_STAT_TX
 
USB_EP3R_STAT_TX_Msk


	)

4733 
	#USB_EP3R_STAT_TX_0
 (0x1UL << 
USB_EP3R_STAT_TX_Pos
Ë

	)

4734 
	#USB_EP3R_STAT_TX_1
 (0x2UL << 
USB_EP3R_STAT_TX_Pos
Ë

	)

4736 
	#USB_EP3R_DTOG_TX_Pos
 (6U)

	)

4737 
	#USB_EP3R_DTOG_TX_Msk
 (0x1UL << 
USB_EP3R_DTOG_TX_Pos
Ë

	)

4738 
	#USB_EP3R_DTOG_TX
 
USB_EP3R_DTOG_TX_Msk


	)

4739 
	#USB_EP3R_CTR_TX_Pos
 (7U)

	)

4740 
	#USB_EP3R_CTR_TX_Msk
 (0x1UL << 
USB_EP3R_CTR_TX_Pos
Ë

	)

4741 
	#USB_EP3R_CTR_TX
 
USB_EP3R_CTR_TX_Msk


	)

4742 
	#USB_EP3R_EP_KIND_Pos
 (8U)

	)

4743 
	#USB_EP3R_EP_KIND_Msk
 (0x1UL << 
USB_EP3R_EP_KIND_Pos
Ë

	)

4744 
	#USB_EP3R_EP_KIND
 
USB_EP3R_EP_KIND_Msk


	)

4746 
	#USB_EP3R_EP_TYPE_Pos
 (9U)

	)

4747 
	#USB_EP3R_EP_TYPE_Msk
 (0x3UL << 
USB_EP3R_EP_TYPE_Pos
Ë

	)

4748 
	#USB_EP3R_EP_TYPE
 
USB_EP3R_EP_TYPE_Msk


	)

4749 
	#USB_EP3R_EP_TYPE_0
 (0x1UL << 
USB_EP3R_EP_TYPE_Pos
Ë

	)

4750 
	#USB_EP3R_EP_TYPE_1
 (0x2UL << 
USB_EP3R_EP_TYPE_Pos
Ë

	)

4752 
	#USB_EP3R_SETUP_Pos
 (11U)

	)

4753 
	#USB_EP3R_SETUP_Msk
 (0x1UL << 
USB_EP3R_SETUP_Pos
Ë

	)

4754 
	#USB_EP3R_SETUP
 
USB_EP3R_SETUP_Msk


	)

4756 
	#USB_EP3R_STAT_RX_Pos
 (12U)

	)

4757 
	#USB_EP3R_STAT_RX_Msk
 (0x3UL << 
USB_EP3R_STAT_RX_Pos
Ë

	)

4758 
	#USB_EP3R_STAT_RX
 
USB_EP3R_STAT_RX_Msk


	)

4759 
	#USB_EP3R_STAT_RX_0
 (0x1UL << 
USB_EP3R_STAT_RX_Pos
Ë

	)

4760 
	#USB_EP3R_STAT_RX_1
 (0x2UL << 
USB_EP3R_STAT_RX_Pos
Ë

	)

4762 
	#USB_EP3R_DTOG_RX_Pos
 (14U)

	)

4763 
	#USB_EP3R_DTOG_RX_Msk
 (0x1UL << 
USB_EP3R_DTOG_RX_Pos
Ë

	)

4764 
	#USB_EP3R_DTOG_RX
 
USB_EP3R_DTOG_RX_Msk


	)

4765 
	#USB_EP3R_CTR_RX_Pos
 (15U)

	)

4766 
	#USB_EP3R_CTR_RX_Msk
 (0x1UL << 
USB_EP3R_CTR_RX_Pos
Ë

	)

4767 
	#USB_EP3R_CTR_RX
 
USB_EP3R_CTR_RX_Msk


	)

4770 
	#USB_EP4R_EA_Pos
 (0U)

	)

4771 
	#USB_EP4R_EA_Msk
 (0xFUL << 
USB_EP4R_EA_Pos
Ë

	)

4772 
	#USB_EP4R_EA
 
USB_EP4R_EA_Msk


	)

4774 
	#USB_EP4R_STAT_TX_Pos
 (4U)

	)

4775 
	#USB_EP4R_STAT_TX_Msk
 (0x3UL << 
USB_EP4R_STAT_TX_Pos
Ë

	)

4776 
	#USB_EP4R_STAT_TX
 
USB_EP4R_STAT_TX_Msk


	)

4777 
	#USB_EP4R_STAT_TX_0
 (0x1UL << 
USB_EP4R_STAT_TX_Pos
Ë

	)

4778 
	#USB_EP4R_STAT_TX_1
 (0x2UL << 
USB_EP4R_STAT_TX_Pos
Ë

	)

4780 
	#USB_EP4R_DTOG_TX_Pos
 (6U)

	)

4781 
	#USB_EP4R_DTOG_TX_Msk
 (0x1UL << 
USB_EP4R_DTOG_TX_Pos
Ë

	)

4782 
	#USB_EP4R_DTOG_TX
 
USB_EP4R_DTOG_TX_Msk


	)

4783 
	#USB_EP4R_CTR_TX_Pos
 (7U)

	)

4784 
	#USB_EP4R_CTR_TX_Msk
 (0x1UL << 
USB_EP4R_CTR_TX_Pos
Ë

	)

4785 
	#USB_EP4R_CTR_TX
 
USB_EP4R_CTR_TX_Msk


	)

4786 
	#USB_EP4R_EP_KIND_Pos
 (8U)

	)

4787 
	#USB_EP4R_EP_KIND_Msk
 (0x1UL << 
USB_EP4R_EP_KIND_Pos
Ë

	)

4788 
	#USB_EP4R_EP_KIND
 
USB_EP4R_EP_KIND_Msk


	)

4790 
	#USB_EP4R_EP_TYPE_Pos
 (9U)

	)

4791 
	#USB_EP4R_EP_TYPE_Msk
 (0x3UL << 
USB_EP4R_EP_TYPE_Pos
Ë

	)

4792 
	#USB_EP4R_EP_TYPE
 
USB_EP4R_EP_TYPE_Msk


	)

4793 
	#USB_EP4R_EP_TYPE_0
 (0x1UL << 
USB_EP4R_EP_TYPE_Pos
Ë

	)

4794 
	#USB_EP4R_EP_TYPE_1
 (0x2UL << 
USB_EP4R_EP_TYPE_Pos
Ë

	)

4796 
	#USB_EP4R_SETUP_Pos
 (11U)

	)

4797 
	#USB_EP4R_SETUP_Msk
 (0x1UL << 
USB_EP4R_SETUP_Pos
Ë

	)

4798 
	#USB_EP4R_SETUP
 
USB_EP4R_SETUP_Msk


	)

4800 
	#USB_EP4R_STAT_RX_Pos
 (12U)

	)

4801 
	#USB_EP4R_STAT_RX_Msk
 (0x3UL << 
USB_EP4R_STAT_RX_Pos
Ë

	)

4802 
	#USB_EP4R_STAT_RX
 
USB_EP4R_STAT_RX_Msk


	)

4803 
	#USB_EP4R_STAT_RX_0
 (0x1UL << 
USB_EP4R_STAT_RX_Pos
Ë

	)

4804 
	#USB_EP4R_STAT_RX_1
 (0x2UL << 
USB_EP4R_STAT_RX_Pos
Ë

	)

4806 
	#USB_EP4R_DTOG_RX_Pos
 (14U)

	)

4807 
	#USB_EP4R_DTOG_RX_Msk
 (0x1UL << 
USB_EP4R_DTOG_RX_Pos
Ë

	)

4808 
	#USB_EP4R_DTOG_RX
 
USB_EP4R_DTOG_RX_Msk


	)

4809 
	#USB_EP4R_CTR_RX_Pos
 (15U)

	)

4810 
	#USB_EP4R_CTR_RX_Msk
 (0x1UL << 
USB_EP4R_CTR_RX_Pos
Ë

	)

4811 
	#USB_EP4R_CTR_RX
 
USB_EP4R_CTR_RX_Msk


	)

4814 
	#USB_EP5R_EA_Pos
 (0U)

	)

4815 
	#USB_EP5R_EA_Msk
 (0xFUL << 
USB_EP5R_EA_Pos
Ë

	)

4816 
	#USB_EP5R_EA
 
USB_EP5R_EA_Msk


	)

4818 
	#USB_EP5R_STAT_TX_Pos
 (4U)

	)

4819 
	#USB_EP5R_STAT_TX_Msk
 (0x3UL << 
USB_EP5R_STAT_TX_Pos
Ë

	)

4820 
	#USB_EP5R_STAT_TX
 
USB_EP5R_STAT_TX_Msk


	)

4821 
	#USB_EP5R_STAT_TX_0
 (0x1UL << 
USB_EP5R_STAT_TX_Pos
Ë

	)

4822 
	#USB_EP5R_STAT_TX_1
 (0x2UL << 
USB_EP5R_STAT_TX_Pos
Ë

	)

4824 
	#USB_EP5R_DTOG_TX_Pos
 (6U)

	)

4825 
	#USB_EP5R_DTOG_TX_Msk
 (0x1UL << 
USB_EP5R_DTOG_TX_Pos
Ë

	)

4826 
	#USB_EP5R_DTOG_TX
 
USB_EP5R_DTOG_TX_Msk


	)

4827 
	#USB_EP5R_CTR_TX_Pos
 (7U)

	)

4828 
	#USB_EP5R_CTR_TX_Msk
 (0x1UL << 
USB_EP5R_CTR_TX_Pos
Ë

	)

4829 
	#USB_EP5R_CTR_TX
 
USB_EP5R_CTR_TX_Msk


	)

4830 
	#USB_EP5R_EP_KIND_Pos
 (8U)

	)

4831 
	#USB_EP5R_EP_KIND_Msk
 (0x1UL << 
USB_EP5R_EP_KIND_Pos
Ë

	)

4832 
	#USB_EP5R_EP_KIND
 
USB_EP5R_EP_KIND_Msk


	)

4834 
	#USB_EP5R_EP_TYPE_Pos
 (9U)

	)

4835 
	#USB_EP5R_EP_TYPE_Msk
 (0x3UL << 
USB_EP5R_EP_TYPE_Pos
Ë

	)

4836 
	#USB_EP5R_EP_TYPE
 
USB_EP5R_EP_TYPE_Msk


	)

4837 
	#USB_EP5R_EP_TYPE_0
 (0x1UL << 
USB_EP5R_EP_TYPE_Pos
Ë

	)

4838 
	#USB_EP5R_EP_TYPE_1
 (0x2UL << 
USB_EP5R_EP_TYPE_Pos
Ë

	)

4840 
	#USB_EP5R_SETUP_Pos
 (11U)

	)

4841 
	#USB_EP5R_SETUP_Msk
 (0x1UL << 
USB_EP5R_SETUP_Pos
Ë

	)

4842 
	#USB_EP5R_SETUP
 
USB_EP5R_SETUP_Msk


	)

4844 
	#USB_EP5R_STAT_RX_Pos
 (12U)

	)

4845 
	#USB_EP5R_STAT_RX_Msk
 (0x3UL << 
USB_EP5R_STAT_RX_Pos
Ë

	)

4846 
	#USB_EP5R_STAT_RX
 
USB_EP5R_STAT_RX_Msk


	)

4847 
	#USB_EP5R_STAT_RX_0
 (0x1UL << 
USB_EP5R_STAT_RX_Pos
Ë

	)

4848 
	#USB_EP5R_STAT_RX_1
 (0x2UL << 
USB_EP5R_STAT_RX_Pos
Ë

	)

4850 
	#USB_EP5R_DTOG_RX_Pos
 (14U)

	)

4851 
	#USB_EP5R_DTOG_RX_Msk
 (0x1UL << 
USB_EP5R_DTOG_RX_Pos
Ë

	)

4852 
	#USB_EP5R_DTOG_RX
 
USB_EP5R_DTOG_RX_Msk


	)

4853 
	#USB_EP5R_CTR_RX_Pos
 (15U)

	)

4854 
	#USB_EP5R_CTR_RX_Msk
 (0x1UL << 
USB_EP5R_CTR_RX_Pos
Ë

	)

4855 
	#USB_EP5R_CTR_RX
 
USB_EP5R_CTR_RX_Msk


	)

4858 
	#USB_EP6R_EA_Pos
 (0U)

	)

4859 
	#USB_EP6R_EA_Msk
 (0xFUL << 
USB_EP6R_EA_Pos
Ë

	)

4860 
	#USB_EP6R_EA
 
USB_EP6R_EA_Msk


	)

4862 
	#USB_EP6R_STAT_TX_Pos
 (4U)

	)

4863 
	#USB_EP6R_STAT_TX_Msk
 (0x3UL << 
USB_EP6R_STAT_TX_Pos
Ë

	)

4864 
	#USB_EP6R_STAT_TX
 
USB_EP6R_STAT_TX_Msk


	)

4865 
	#USB_EP6R_STAT_TX_0
 (0x1UL << 
USB_EP6R_STAT_TX_Pos
Ë

	)

4866 
	#USB_EP6R_STAT_TX_1
 (0x2UL << 
USB_EP6R_STAT_TX_Pos
Ë

	)

4868 
	#USB_EP6R_DTOG_TX_Pos
 (6U)

	)

4869 
	#USB_EP6R_DTOG_TX_Msk
 (0x1UL << 
USB_EP6R_DTOG_TX_Pos
Ë

	)

4870 
	#USB_EP6R_DTOG_TX
 
USB_EP6R_DTOG_TX_Msk


	)

4871 
	#USB_EP6R_CTR_TX_Pos
 (7U)

	)

4872 
	#USB_EP6R_CTR_TX_Msk
 (0x1UL << 
USB_EP6R_CTR_TX_Pos
Ë

	)

4873 
	#USB_EP6R_CTR_TX
 
USB_EP6R_CTR_TX_Msk


	)

4874 
	#USB_EP6R_EP_KIND_Pos
 (8U)

	)

4875 
	#USB_EP6R_EP_KIND_Msk
 (0x1UL << 
USB_EP6R_EP_KIND_Pos
Ë

	)

4876 
	#USB_EP6R_EP_KIND
 
USB_EP6R_EP_KIND_Msk


	)

4878 
	#USB_EP6R_EP_TYPE_Pos
 (9U)

	)

4879 
	#USB_EP6R_EP_TYPE_Msk
 (0x3UL << 
USB_EP6R_EP_TYPE_Pos
Ë

	)

4880 
	#USB_EP6R_EP_TYPE
 
USB_EP6R_EP_TYPE_Msk


	)

4881 
	#USB_EP6R_EP_TYPE_0
 (0x1UL << 
USB_EP6R_EP_TYPE_Pos
Ë

	)

4882 
	#USB_EP6R_EP_TYPE_1
 (0x2UL << 
USB_EP6R_EP_TYPE_Pos
Ë

	)

4884 
	#USB_EP6R_SETUP_Pos
 (11U)

	)

4885 
	#USB_EP6R_SETUP_Msk
 (0x1UL << 
USB_EP6R_SETUP_Pos
Ë

	)

4886 
	#USB_EP6R_SETUP
 
USB_EP6R_SETUP_Msk


	)

4888 
	#USB_EP6R_STAT_RX_Pos
 (12U)

	)

4889 
	#USB_EP6R_STAT_RX_Msk
 (0x3UL << 
USB_EP6R_STAT_RX_Pos
Ë

	)

4890 
	#USB_EP6R_STAT_RX
 
USB_EP6R_STAT_RX_Msk


	)

4891 
	#USB_EP6R_STAT_RX_0
 (0x1UL << 
USB_EP6R_STAT_RX_Pos
Ë

	)

4892 
	#USB_EP6R_STAT_RX_1
 (0x2UL << 
USB_EP6R_STAT_RX_Pos
Ë

	)

4894 
	#USB_EP6R_DTOG_RX_Pos
 (14U)

	)

4895 
	#USB_EP6R_DTOG_RX_Msk
 (0x1UL << 
USB_EP6R_DTOG_RX_Pos
Ë

	)

4896 
	#USB_EP6R_DTOG_RX
 
USB_EP6R_DTOG_RX_Msk


	)

4897 
	#USB_EP6R_CTR_RX_Pos
 (15U)

	)

4898 
	#USB_EP6R_CTR_RX_Msk
 (0x1UL << 
USB_EP6R_CTR_RX_Pos
Ë

	)

4899 
	#USB_EP6R_CTR_RX
 
USB_EP6R_CTR_RX_Msk


	)

4902 
	#USB_EP7R_EA_Pos
 (0U)

	)

4903 
	#USB_EP7R_EA_Msk
 (0xFUL << 
USB_EP7R_EA_Pos
Ë

	)

4904 
	#USB_EP7R_EA
 
USB_EP7R_EA_Msk


	)

4906 
	#USB_EP7R_STAT_TX_Pos
 (4U)

	)

4907 
	#USB_EP7R_STAT_TX_Msk
 (0x3UL << 
USB_EP7R_STAT_TX_Pos
Ë

	)

4908 
	#USB_EP7R_STAT_TX
 
USB_EP7R_STAT_TX_Msk


	)

4909 
	#USB_EP7R_STAT_TX_0
 (0x1UL << 
USB_EP7R_STAT_TX_Pos
Ë

	)

4910 
	#USB_EP7R_STAT_TX_1
 (0x2UL << 
USB_EP7R_STAT_TX_Pos
Ë

	)

4912 
	#USB_EP7R_DTOG_TX_Pos
 (6U)

	)

4913 
	#USB_EP7R_DTOG_TX_Msk
 (0x1UL << 
USB_EP7R_DTOG_TX_Pos
Ë

	)

4914 
	#USB_EP7R_DTOG_TX
 
USB_EP7R_DTOG_TX_Msk


	)

4915 
	#USB_EP7R_CTR_TX_Pos
 (7U)

	)

4916 
	#USB_EP7R_CTR_TX_Msk
 (0x1UL << 
USB_EP7R_CTR_TX_Pos
Ë

	)

4917 
	#USB_EP7R_CTR_TX
 
USB_EP7R_CTR_TX_Msk


	)

4918 
	#USB_EP7R_EP_KIND_Pos
 (8U)

	)

4919 
	#USB_EP7R_EP_KIND_Msk
 (0x1UL << 
USB_EP7R_EP_KIND_Pos
Ë

	)

4920 
	#USB_EP7R_EP_KIND
 
USB_EP7R_EP_KIND_Msk


	)

4922 
	#USB_EP7R_EP_TYPE_Pos
 (9U)

	)

4923 
	#USB_EP7R_EP_TYPE_Msk
 (0x3UL << 
USB_EP7R_EP_TYPE_Pos
Ë

	)

4924 
	#USB_EP7R_EP_TYPE
 
USB_EP7R_EP_TYPE_Msk


	)

4925 
	#USB_EP7R_EP_TYPE_0
 (0x1UL << 
USB_EP7R_EP_TYPE_Pos
Ë

	)

4926 
	#USB_EP7R_EP_TYPE_1
 (0x2UL << 
USB_EP7R_EP_TYPE_Pos
Ë

	)

4928 
	#USB_EP7R_SETUP_Pos
 (11U)

	)

4929 
	#USB_EP7R_SETUP_Msk
 (0x1UL << 
USB_EP7R_SETUP_Pos
Ë

	)

4930 
	#USB_EP7R_SETUP
 
USB_EP7R_SETUP_Msk


	)

4932 
	#USB_EP7R_STAT_RX_Pos
 (12U)

	)

4933 
	#USB_EP7R_STAT_RX_Msk
 (0x3UL << 
USB_EP7R_STAT_RX_Pos
Ë

	)

4934 
	#USB_EP7R_STAT_RX
 
USB_EP7R_STAT_RX_Msk


	)

4935 
	#USB_EP7R_STAT_RX_0
 (0x1UL << 
USB_EP7R_STAT_RX_Pos
Ë

	)

4936 
	#USB_EP7R_STAT_RX_1
 (0x2UL << 
USB_EP7R_STAT_RX_Pos
Ë

	)

4938 
	#USB_EP7R_DTOG_RX_Pos
 (14U)

	)

4939 
	#USB_EP7R_DTOG_RX_Msk
 (0x1UL << 
USB_EP7R_DTOG_RX_Pos
Ë

	)

4940 
	#USB_EP7R_DTOG_RX
 
USB_EP7R_DTOG_RX_Msk


	)

4941 
	#USB_EP7R_CTR_RX_Pos
 (15U)

	)

4942 
	#USB_EP7R_CTR_RX_Msk
 (0x1UL << 
USB_EP7R_CTR_RX_Pos
Ë

	)

4943 
	#USB_EP7R_CTR_RX
 
USB_EP7R_CTR_RX_Msk


	)

4947 
	#USB_CNTR_FRES_Pos
 (0U)

	)

4948 
	#USB_CNTR_FRES_Msk
 (0x1UL << 
USB_CNTR_FRES_Pos
Ë

	)

4949 
	#USB_CNTR_FRES
 
USB_CNTR_FRES_Msk


	)

4950 
	#USB_CNTR_PDWN_Pos
 (1U)

	)

4951 
	#USB_CNTR_PDWN_Msk
 (0x1UL << 
USB_CNTR_PDWN_Pos
Ë

	)

4952 
	#USB_CNTR_PDWN
 
USB_CNTR_PDWN_Msk


	)

4953 
	#USB_CNTR_LP_MODE_Pos
 (2U)

	)

4954 
	#USB_CNTR_LP_MODE_Msk
 (0x1UL << 
USB_CNTR_LP_MODE_Pos
Ë

	)

4955 
	#USB_CNTR_LP_MODE
 
USB_CNTR_LP_MODE_Msk


	)

4956 
	#USB_CNTR_FSUSP_Pos
 (3U)

	)

4957 
	#USB_CNTR_FSUSP_Msk
 (0x1UL << 
USB_CNTR_FSUSP_Pos
Ë

	)

4958 
	#USB_CNTR_FSUSP
 
USB_CNTR_FSUSP_Msk


	)

4959 
	#USB_CNTR_RESUME_Pos
 (4U)

	)

4960 
	#USB_CNTR_RESUME_Msk
 (0x1UL << 
USB_CNTR_RESUME_Pos
Ë

	)

4961 
	#USB_CNTR_RESUME
 
USB_CNTR_RESUME_Msk


	)

4962 
	#USB_CNTR_ESOFM_Pos
 (8U)

	)

4963 
	#USB_CNTR_ESOFM_Msk
 (0x1UL << 
USB_CNTR_ESOFM_Pos
Ë

	)

4964 
	#USB_CNTR_ESOFM
 
USB_CNTR_ESOFM_Msk


	)

4965 
	#USB_CNTR_SOFM_Pos
 (9U)

	)

4966 
	#USB_CNTR_SOFM_Msk
 (0x1UL << 
USB_CNTR_SOFM_Pos
Ë

	)

4967 
	#USB_CNTR_SOFM
 
USB_CNTR_SOFM_Msk


	)

4968 
	#USB_CNTR_RESETM_Pos
 (10U)

	)

4969 
	#USB_CNTR_RESETM_Msk
 (0x1UL << 
USB_CNTR_RESETM_Pos
Ë

	)

4970 
	#USB_CNTR_RESETM
 
USB_CNTR_RESETM_Msk


	)

4971 
	#USB_CNTR_SUSPM_Pos
 (11U)

	)

4972 
	#USB_CNTR_SUSPM_Msk
 (0x1UL << 
USB_CNTR_SUSPM_Pos
Ë

	)

4973 
	#USB_CNTR_SUSPM
 
USB_CNTR_SUSPM_Msk


	)

4974 
	#USB_CNTR_WKUPM_Pos
 (12U)

	)

4975 
	#USB_CNTR_WKUPM_Msk
 (0x1UL << 
USB_CNTR_WKUPM_Pos
Ë

	)

4976 
	#USB_CNTR_WKUPM
 
USB_CNTR_WKUPM_Msk


	)

4977 
	#USB_CNTR_ERRM_Pos
 (13U)

	)

4978 
	#USB_CNTR_ERRM_Msk
 (0x1UL << 
USB_CNTR_ERRM_Pos
Ë

	)

4979 
	#USB_CNTR_ERRM
 
USB_CNTR_ERRM_Msk


	)

4980 
	#USB_CNTR_PMAOVRM_Pos
 (14U)

	)

4981 
	#USB_CNTR_PMAOVRM_Msk
 (0x1UL << 
USB_CNTR_PMAOVRM_Pos
Ë

	)

4982 
	#USB_CNTR_PMAOVRM
 
USB_CNTR_PMAOVRM_Msk


	)

4983 
	#USB_CNTR_CTRM_Pos
 (15U)

	)

4984 
	#USB_CNTR_CTRM_Msk
 (0x1UL << 
USB_CNTR_CTRM_Pos
Ë

	)

4985 
	#USB_CNTR_CTRM
 
USB_CNTR_CTRM_Msk


	)

4988 
	#USB_ISTR_EP_ID_Pos
 (0U)

	)

4989 
	#USB_ISTR_EP_ID_Msk
 (0xFUL << 
USB_ISTR_EP_ID_Pos
Ë

	)

4990 
	#USB_ISTR_EP_ID
 
USB_ISTR_EP_ID_Msk


	)

4991 
	#USB_ISTR_DIR_Pos
 (4U)

	)

4992 
	#USB_ISTR_DIR_Msk
 (0x1UL << 
USB_ISTR_DIR_Pos
Ë

	)

4993 
	#USB_ISTR_DIR
 
USB_ISTR_DIR_Msk


	)

4994 
	#USB_ISTR_ESOF_Pos
 (8U)

	)

4995 
	#USB_ISTR_ESOF_Msk
 (0x1UL << 
USB_ISTR_ESOF_Pos
Ë

	)

4996 
	#USB_ISTR_ESOF
 
USB_ISTR_ESOF_Msk


	)

4997 
	#USB_ISTR_SOF_Pos
 (9U)

	)

4998 
	#USB_ISTR_SOF_Msk
 (0x1UL << 
USB_ISTR_SOF_Pos
Ë

	)

4999 
	#USB_ISTR_SOF
 
USB_ISTR_SOF_Msk


	)

5000 
	#USB_ISTR_RESET_Pos
 (10U)

	)

5001 
	#USB_ISTR_RESET_Msk
 (0x1UL << 
USB_ISTR_RESET_Pos
Ë

	)

5002 
	#USB_ISTR_RESET
 
USB_ISTR_RESET_Msk


	)

5003 
	#USB_ISTR_SUSP_Pos
 (11U)

	)

5004 
	#USB_ISTR_SUSP_Msk
 (0x1UL << 
USB_ISTR_SUSP_Pos
Ë

	)

5005 
	#USB_ISTR_SUSP
 
USB_ISTR_SUSP_Msk


	)

5006 
	#USB_ISTR_WKUP_Pos
 (12U)

	)

5007 
	#USB_ISTR_WKUP_Msk
 (0x1UL << 
USB_ISTR_WKUP_Pos
Ë

	)

5008 
	#USB_ISTR_WKUP
 
USB_ISTR_WKUP_Msk


	)

5009 
	#USB_ISTR_ERR_Pos
 (13U)

	)

5010 
	#USB_ISTR_ERR_Msk
 (0x1UL << 
USB_ISTR_ERR_Pos
Ë

	)

5011 
	#USB_ISTR_ERR
 
USB_ISTR_ERR_Msk


	)

5012 
	#USB_ISTR_PMAOVR_Pos
 (14U)

	)

5013 
	#USB_ISTR_PMAOVR_Msk
 (0x1UL << 
USB_ISTR_PMAOVR_Pos
Ë

	)

5014 
	#USB_ISTR_PMAOVR
 
USB_ISTR_PMAOVR_Msk


	)

5015 
	#USB_ISTR_CTR_Pos
 (15U)

	)

5016 
	#USB_ISTR_CTR_Msk
 (0x1UL << 
USB_ISTR_CTR_Pos
Ë

	)

5017 
	#USB_ISTR_CTR
 
USB_ISTR_CTR_Msk


	)

5020 
	#USB_FNR_FN_Pos
 (0U)

	)

5021 
	#USB_FNR_FN_Msk
 (0x7FFUL << 
USB_FNR_FN_Pos
Ë

	)

5022 
	#USB_FNR_FN
 
USB_FNR_FN_Msk


	)

5023 
	#USB_FNR_LSOF_Pos
 (11U)

	)

5024 
	#USB_FNR_LSOF_Msk
 (0x3UL << 
USB_FNR_LSOF_Pos
Ë

	)

5025 
	#USB_FNR_LSOF
 
USB_FNR_LSOF_Msk


	)

5026 
	#USB_FNR_LCK_Pos
 (13U)

	)

5027 
	#USB_FNR_LCK_Msk
 (0x1UL << 
USB_FNR_LCK_Pos
Ë

	)

5028 
	#USB_FNR_LCK
 
USB_FNR_LCK_Msk


	)

5029 
	#USB_FNR_RXDM_Pos
 (14U)

	)

5030 
	#USB_FNR_RXDM_Msk
 (0x1UL << 
USB_FNR_RXDM_Pos
Ë

	)

5031 
	#USB_FNR_RXDM
 
USB_FNR_RXDM_Msk


	)

5032 
	#USB_FNR_RXDP_Pos
 (15U)

	)

5033 
	#USB_FNR_RXDP_Msk
 (0x1UL << 
USB_FNR_RXDP_Pos
Ë

	)

5034 
	#USB_FNR_RXDP
 
USB_FNR_RXDP_Msk


	)

5037 
	#USB_DADDR_ADD_Pos
 (0U)

	)

5038 
	#USB_DADDR_ADD_Msk
 (0x7FUL << 
USB_DADDR_ADD_Pos
Ë

	)

5039 
	#USB_DADDR_ADD
 
USB_DADDR_ADD_Msk


	)

5040 
	#USB_DADDR_ADD0_Pos
 (0U)

	)

5041 
	#USB_DADDR_ADD0_Msk
 (0x1UL << 
USB_DADDR_ADD0_Pos
Ë

	)

5042 
	#USB_DADDR_ADD0
 
USB_DADDR_ADD0_Msk


	)

5043 
	#USB_DADDR_ADD1_Pos
 (1U)

	)

5044 
	#USB_DADDR_ADD1_Msk
 (0x1UL << 
USB_DADDR_ADD1_Pos
Ë

	)

5045 
	#USB_DADDR_ADD1
 
USB_DADDR_ADD1_Msk


	)

5046 
	#USB_DADDR_ADD2_Pos
 (2U)

	)

5047 
	#USB_DADDR_ADD2_Msk
 (0x1UL << 
USB_DADDR_ADD2_Pos
Ë

	)

5048 
	#USB_DADDR_ADD2
 
USB_DADDR_ADD2_Msk


	)

5049 
	#USB_DADDR_ADD3_Pos
 (3U)

	)

5050 
	#USB_DADDR_ADD3_Msk
 (0x1UL << 
USB_DADDR_ADD3_Pos
Ë

	)

5051 
	#USB_DADDR_ADD3
 
USB_DADDR_ADD3_Msk


	)

5052 
	#USB_DADDR_ADD4_Pos
 (4U)

	)

5053 
	#USB_DADDR_ADD4_Msk
 (0x1UL << 
USB_DADDR_ADD4_Pos
Ë

	)

5054 
	#USB_DADDR_ADD4
 
USB_DADDR_ADD4_Msk


	)

5055 
	#USB_DADDR_ADD5_Pos
 (5U)

	)

5056 
	#USB_DADDR_ADD5_Msk
 (0x1UL << 
USB_DADDR_ADD5_Pos
Ë

	)

5057 
	#USB_DADDR_ADD5
 
USB_DADDR_ADD5_Msk


	)

5058 
	#USB_DADDR_ADD6_Pos
 (6U)

	)

5059 
	#USB_DADDR_ADD6_Msk
 (0x1UL << 
USB_DADDR_ADD6_Pos
Ë

	)

5060 
	#USB_DADDR_ADD6
 
USB_DADDR_ADD6_Msk


	)

5062 
	#USB_DADDR_EF_Pos
 (7U)

	)

5063 
	#USB_DADDR_EF_Msk
 (0x1UL << 
USB_DADDR_EF_Pos
Ë

	)

5064 
	#USB_DADDR_EF
 
USB_DADDR_EF_Msk


	)

5067 
	#USB_BTABLE_BTABLE_Pos
 (3U)

	)

5068 
	#USB_BTABLE_BTABLE_Msk
 (0x1FFFUL << 
USB_BTABLE_BTABLE_Pos
Ë

	)

5069 
	#USB_BTABLE_BTABLE
 
USB_BTABLE_BTABLE_Msk


	)

5073 
	#USB_ADDR0_TX_ADDR0_TX_Pos
 (1U)

	)

5074 
	#USB_ADDR0_TX_ADDR0_TX_Msk
 (0x7FFFUL << 
USB_ADDR0_TX_ADDR0_TX_Pos
Ë

	)

5075 
	#USB_ADDR0_TX_ADDR0_TX
 
USB_ADDR0_TX_ADDR0_TX_Msk


	)

5078 
	#USB_ADDR1_TX_ADDR1_TX_Pos
 (1U)

	)

5079 
	#USB_ADDR1_TX_ADDR1_TX_Msk
 (0x7FFFUL << 
USB_ADDR1_TX_ADDR1_TX_Pos
Ë

	)

5080 
	#USB_ADDR1_TX_ADDR1_TX
 
USB_ADDR1_TX_ADDR1_TX_Msk


	)

5083 
	#USB_ADDR2_TX_ADDR2_TX_Pos
 (1U)

	)

5084 
	#USB_ADDR2_TX_ADDR2_TX_Msk
 (0x7FFFUL << 
USB_ADDR2_TX_ADDR2_TX_Pos
Ë

	)

5085 
	#USB_ADDR2_TX_ADDR2_TX
 
USB_ADDR2_TX_ADDR2_TX_Msk


	)

5088 
	#USB_ADDR3_TX_ADDR3_TX_Pos
 (1U)

	)

5089 
	#USB_ADDR3_TX_ADDR3_TX_Msk
 (0x7FFFUL << 
USB_ADDR3_TX_ADDR3_TX_Pos
Ë

	)

5090 
	#USB_ADDR3_TX_ADDR3_TX
 
USB_ADDR3_TX_ADDR3_TX_Msk


	)

5093 
	#USB_ADDR4_TX_ADDR4_TX_Pos
 (1U)

	)

5094 
	#USB_ADDR4_TX_ADDR4_TX_Msk
 (0x7FFFUL << 
USB_ADDR4_TX_ADDR4_TX_Pos
Ë

	)

5095 
	#USB_ADDR4_TX_ADDR4_TX
 
USB_ADDR4_TX_ADDR4_TX_Msk


	)

5098 
	#USB_ADDR5_TX_ADDR5_TX_Pos
 (1U)

	)

5099 
	#USB_ADDR5_TX_ADDR5_TX_Msk
 (0x7FFFUL << 
USB_ADDR5_TX_ADDR5_TX_Pos
Ë

	)

5100 
	#USB_ADDR5_TX_ADDR5_TX
 
USB_ADDR5_TX_ADDR5_TX_Msk


	)

5103 
	#USB_ADDR6_TX_ADDR6_TX_Pos
 (1U)

	)

5104 
	#USB_ADDR6_TX_ADDR6_TX_Msk
 (0x7FFFUL << 
USB_ADDR6_TX_ADDR6_TX_Pos
Ë

	)

5105 
	#USB_ADDR6_TX_ADDR6_TX
 
USB_ADDR6_TX_ADDR6_TX_Msk


	)

5108 
	#USB_ADDR7_TX_ADDR7_TX_Pos
 (1U)

	)

5109 
	#USB_ADDR7_TX_ADDR7_TX_Msk
 (0x7FFFUL << 
USB_ADDR7_TX_ADDR7_TX_Pos
Ë

	)

5110 
	#USB_ADDR7_TX_ADDR7_TX
 
USB_ADDR7_TX_ADDR7_TX_Msk


	)

5115 
	#USB_COUNT0_TX_COUNT0_TX_Pos
 (0U)

	)

5116 
	#USB_COUNT0_TX_COUNT0_TX_Msk
 (0x3FFUL << 
USB_COUNT0_TX_COUNT0_TX_Pos
Ë

	)

5117 
	#USB_COUNT0_TX_COUNT0_TX
 
USB_COUNT0_TX_COUNT0_TX_Msk


	)

5120 
	#USB_COUNT1_TX_COUNT1_TX_Pos
 (0U)

	)

5121 
	#USB_COUNT1_TX_COUNT1_TX_Msk
 (0x3FFUL << 
USB_COUNT1_TX_COUNT1_TX_Pos
Ë

	)

5122 
	#USB_COUNT1_TX_COUNT1_TX
 
USB_COUNT1_TX_COUNT1_TX_Msk


	)

5125 
	#USB_COUNT2_TX_COUNT2_TX_Pos
 (0U)

	)

5126 
	#USB_COUNT2_TX_COUNT2_TX_Msk
 (0x3FFUL << 
USB_COUNT2_TX_COUNT2_TX_Pos
Ë

	)

5127 
	#USB_COUNT2_TX_COUNT2_TX
 
USB_COUNT2_TX_COUNT2_TX_Msk


	)

5130 
	#USB_COUNT3_TX_COUNT3_TX_Pos
 (0U)

	)

5131 
	#USB_COUNT3_TX_COUNT3_TX_Msk
 (0x3FFUL << 
USB_COUNT3_TX_COUNT3_TX_Pos
Ë

	)

5132 
	#USB_COUNT3_TX_COUNT3_TX
 
USB_COUNT3_TX_COUNT3_TX_Msk


	)

5135 
	#USB_COUNT4_TX_COUNT4_TX_Pos
 (0U)

	)

5136 
	#USB_COUNT4_TX_COUNT4_TX_Msk
 (0x3FFUL << 
USB_COUNT4_TX_COUNT4_TX_Pos
Ë

	)

5137 
	#USB_COUNT4_TX_COUNT4_TX
 
USB_COUNT4_TX_COUNT4_TX_Msk


	)

5140 
	#USB_COUNT5_TX_COUNT5_TX_Pos
 (0U)

	)

5141 
	#USB_COUNT5_TX_COUNT5_TX_Msk
 (0x3FFUL << 
USB_COUNT5_TX_COUNT5_TX_Pos
Ë

	)

5142 
	#USB_COUNT5_TX_COUNT5_TX
 
USB_COUNT5_TX_COUNT5_TX_Msk


	)

5145 
	#USB_COUNT6_TX_COUNT6_TX_Pos
 (0U)

	)

5146 
	#USB_COUNT6_TX_COUNT6_TX_Msk
 (0x3FFUL << 
USB_COUNT6_TX_COUNT6_TX_Pos
Ë

	)

5147 
	#USB_COUNT6_TX_COUNT6_TX
 
USB_COUNT6_TX_COUNT6_TX_Msk


	)

5150 
	#USB_COUNT7_TX_COUNT7_TX_Pos
 (0U)

	)

5151 
	#USB_COUNT7_TX_COUNT7_TX_Msk
 (0x3FFUL << 
USB_COUNT7_TX_COUNT7_TX_Pos
Ë

	)

5152 
	#USB_COUNT7_TX_COUNT7_TX
 
USB_COUNT7_TX_COUNT7_TX_Msk


	)

5157 
	#USB_COUNT0_TX_0_COUNT0_TX_0
 0x000003FFU

	)

5160 
	#USB_COUNT0_TX_1_COUNT0_TX_1
 0x03FF0000U

	)

5163 
	#USB_COUNT1_TX_0_COUNT1_TX_0
 0x000003FFU

	)

5166 
	#USB_COUNT1_TX_1_COUNT1_TX_1
 0x03FF0000U

	)

5169 
	#USB_COUNT2_TX_0_COUNT2_TX_0
 0x000003FFU

	)

5172 
	#USB_COUNT2_TX_1_COUNT2_TX_1
 0x03FF0000U

	)

5175 
	#USB_COUNT3_TX_0_COUNT3_TX_0
 0x000003FFU

	)

5178 
	#USB_COUNT3_TX_1_COUNT3_TX_1
 0x03FF0000U

	)

5181 
	#USB_COUNT4_TX_0_COUNT4_TX_0
 0x000003FFU

	)

5184 
	#USB_COUNT4_TX_1_COUNT4_TX_1
 0x03FF0000U

	)

5187 
	#USB_COUNT5_TX_0_COUNT5_TX_0
 0x000003FFU

	)

5190 
	#USB_COUNT5_TX_1_COUNT5_TX_1
 0x03FF0000U

	)

5193 
	#USB_COUNT6_TX_0_COUNT6_TX_0
 0x000003FFU

	)

5196 
	#USB_COUNT6_TX_1_COUNT6_TX_1
 0x03FF0000U

	)

5199 
	#USB_COUNT7_TX_0_COUNT7_TX_0
 0x000003FFU

	)

5202 
	#USB_COUNT7_TX_1_COUNT7_TX_1
 0x03FF0000U

	)

5207 
	#USB_ADDR0_RX_ADDR0_RX_Pos
 (1U)

	)

5208 
	#USB_ADDR0_RX_ADDR0_RX_Msk
 (0x7FFFUL << 
USB_ADDR0_RX_ADDR0_RX_Pos
Ë

	)

5209 
	#USB_ADDR0_RX_ADDR0_RX
 
USB_ADDR0_RX_ADDR0_RX_Msk


	)

5212 
	#USB_ADDR1_RX_ADDR1_RX_Pos
 (1U)

	)

5213 
	#USB_ADDR1_RX_ADDR1_RX_Msk
 (0x7FFFUL << 
USB_ADDR1_RX_ADDR1_RX_Pos
Ë

	)

5214 
	#USB_ADDR1_RX_ADDR1_RX
 
USB_ADDR1_RX_ADDR1_RX_Msk


	)

5217 
	#USB_ADDR2_RX_ADDR2_RX_Pos
 (1U)

	)

5218 
	#USB_ADDR2_RX_ADDR2_RX_Msk
 (0x7FFFUL << 
USB_ADDR2_RX_ADDR2_RX_Pos
Ë

	)

5219 
	#USB_ADDR2_RX_ADDR2_RX
 
USB_ADDR2_RX_ADDR2_RX_Msk


	)

5222 
	#USB_ADDR3_RX_ADDR3_RX_Pos
 (1U)

	)

5223 
	#USB_ADDR3_RX_ADDR3_RX_Msk
 (0x7FFFUL << 
USB_ADDR3_RX_ADDR3_RX_Pos
Ë

	)

5224 
	#USB_ADDR3_RX_ADDR3_RX
 
USB_ADDR3_RX_ADDR3_RX_Msk


	)

5227 
	#USB_ADDR4_RX_ADDR4_RX_Pos
 (1U)

	)

5228 
	#USB_ADDR4_RX_ADDR4_RX_Msk
 (0x7FFFUL << 
USB_ADDR4_RX_ADDR4_RX_Pos
Ë

	)

5229 
	#USB_ADDR4_RX_ADDR4_RX
 
USB_ADDR4_RX_ADDR4_RX_Msk


	)

5232 
	#USB_ADDR5_RX_ADDR5_RX_Pos
 (1U)

	)

5233 
	#USB_ADDR5_RX_ADDR5_RX_Msk
 (0x7FFFUL << 
USB_ADDR5_RX_ADDR5_RX_Pos
Ë

	)

5234 
	#USB_ADDR5_RX_ADDR5_RX
 
USB_ADDR5_RX_ADDR5_RX_Msk


	)

5237 
	#USB_ADDR6_RX_ADDR6_RX_Pos
 (1U)

	)

5238 
	#USB_ADDR6_RX_ADDR6_RX_Msk
 (0x7FFFUL << 
USB_ADDR6_RX_ADDR6_RX_Pos
Ë

	)

5239 
	#USB_ADDR6_RX_ADDR6_RX
 
USB_ADDR6_RX_ADDR6_RX_Msk


	)

5242 
	#USB_ADDR7_RX_ADDR7_RX_Pos
 (1U)

	)

5243 
	#USB_ADDR7_RX_ADDR7_RX_Msk
 (0x7FFFUL << 
USB_ADDR7_RX_ADDR7_RX_Pos
Ë

	)

5244 
	#USB_ADDR7_RX_ADDR7_RX
 
USB_ADDR7_RX_ADDR7_RX_Msk


	)

5249 
	#USB_COUNT0_RX_COUNT0_RX_Pos
 (0U)

	)

5250 
	#USB_COUNT0_RX_COUNT0_RX_Msk
 (0x3FFUL << 
USB_COUNT0_RX_COUNT0_RX_Pos
Ë

	)

5251 
	#USB_COUNT0_RX_COUNT0_RX
 
USB_COUNT0_RX_COUNT0_RX_Msk


	)

5253 
	#USB_COUNT0_RX_NUM_BLOCK_Pos
 (10U)

	)

5254 
	#USB_COUNT0_RX_NUM_BLOCK_Msk
 (0x1FUL << 
USB_COUNT0_RX_NUM_BLOCK_Pos
Ë

	)

5255 
	#USB_COUNT0_RX_NUM_BLOCK
 
USB_COUNT0_RX_NUM_BLOCK_Msk


	)

5256 
	#USB_COUNT0_RX_NUM_BLOCK_0
 (0x01UL << 
USB_COUNT0_RX_NUM_BLOCK_Pos
Ë

	)

5257 
	#USB_COUNT0_RX_NUM_BLOCK_1
 (0x02UL << 
USB_COUNT0_RX_NUM_BLOCK_Pos
Ë

	)

5258 
	#USB_COUNT0_RX_NUM_BLOCK_2
 (0x04UL << 
USB_COUNT0_RX_NUM_BLOCK_Pos
Ë

	)

5259 
	#USB_COUNT0_RX_NUM_BLOCK_3
 (0x08UL << 
USB_COUNT0_RX_NUM_BLOCK_Pos
Ë

	)

5260 
	#USB_COUNT0_RX_NUM_BLOCK_4
 (0x10UL << 
USB_COUNT0_RX_NUM_BLOCK_Pos
Ë

	)

5262 
	#USB_COUNT0_RX_BLSIZE_Pos
 (15U)

	)

5263 
	#USB_COUNT0_RX_BLSIZE_Msk
 (0x1UL << 
USB_COUNT0_RX_BLSIZE_Pos
Ë

	)

5264 
	#USB_COUNT0_RX_BLSIZE
 
USB_COUNT0_RX_BLSIZE_Msk


	)

5267 
	#USB_COUNT1_RX_COUNT1_RX_Pos
 (0U)

	)

5268 
	#USB_COUNT1_RX_COUNT1_RX_Msk
 (0x3FFUL << 
USB_COUNT1_RX_COUNT1_RX_Pos
Ë

	)

5269 
	#USB_COUNT1_RX_COUNT1_RX
 
USB_COUNT1_RX_COUNT1_RX_Msk


	)

5271 
	#USB_COUNT1_RX_NUM_BLOCK_Pos
 (10U)

	)

5272 
	#USB_COUNT1_RX_NUM_BLOCK_Msk
 (0x1FUL << 
USB_COUNT1_RX_NUM_BLOCK_Pos
Ë

	)

5273 
	#USB_COUNT1_RX_NUM_BLOCK
 
USB_COUNT1_RX_NUM_BLOCK_Msk


	)

5274 
	#USB_COUNT1_RX_NUM_BLOCK_0
 (0x01UL << 
USB_COUNT1_RX_NUM_BLOCK_Pos
Ë

	)

5275 
	#USB_COUNT1_RX_NUM_BLOCK_1
 (0x02UL << 
USB_COUNT1_RX_NUM_BLOCK_Pos
Ë

	)

5276 
	#USB_COUNT1_RX_NUM_BLOCK_2
 (0x04UL << 
USB_COUNT1_RX_NUM_BLOCK_Pos
Ë

	)

5277 
	#USB_COUNT1_RX_NUM_BLOCK_3
 (0x08UL << 
USB_COUNT1_RX_NUM_BLOCK_Pos
Ë

	)

5278 
	#USB_COUNT1_RX_NUM_BLOCK_4
 (0x10UL << 
USB_COUNT1_RX_NUM_BLOCK_Pos
Ë

	)

5280 
	#USB_COUNT1_RX_BLSIZE_Pos
 (15U)

	)

5281 
	#USB_COUNT1_RX_BLSIZE_Msk
 (0x1UL << 
USB_COUNT1_RX_BLSIZE_Pos
Ë

	)

5282 
	#USB_COUNT1_RX_BLSIZE
 
USB_COUNT1_RX_BLSIZE_Msk


	)

5285 
	#USB_COUNT2_RX_COUNT2_RX_Pos
 (0U)

	)

5286 
	#USB_COUNT2_RX_COUNT2_RX_Msk
 (0x3FFUL << 
USB_COUNT2_RX_COUNT2_RX_Pos
Ë

	)

5287 
	#USB_COUNT2_RX_COUNT2_RX
 
USB_COUNT2_RX_COUNT2_RX_Msk


	)

5289 
	#USB_COUNT2_RX_NUM_BLOCK_Pos
 (10U)

	)

5290 
	#USB_COUNT2_RX_NUM_BLOCK_Msk
 (0x1FUL << 
USB_COUNT2_RX_NUM_BLOCK_Pos
Ë

	)

5291 
	#USB_COUNT2_RX_NUM_BLOCK
 
USB_COUNT2_RX_NUM_BLOCK_Msk


	)

5292 
	#USB_COUNT2_RX_NUM_BLOCK_0
 (0x01UL << 
USB_COUNT2_RX_NUM_BLOCK_Pos
Ë

	)

5293 
	#USB_COUNT2_RX_NUM_BLOCK_1
 (0x02UL << 
USB_COUNT2_RX_NUM_BLOCK_Pos
Ë

	)

5294 
	#USB_COUNT2_RX_NUM_BLOCK_2
 (0x04UL << 
USB_COUNT2_RX_NUM_BLOCK_Pos
Ë

	)

5295 
	#USB_COUNT2_RX_NUM_BLOCK_3
 (0x08UL << 
USB_COUNT2_RX_NUM_BLOCK_Pos
Ë

	)

5296 
	#USB_COUNT2_RX_NUM_BLOCK_4
 (0x10UL << 
USB_COUNT2_RX_NUM_BLOCK_Pos
Ë

	)

5298 
	#USB_COUNT2_RX_BLSIZE_Pos
 (15U)

	)

5299 
	#USB_COUNT2_RX_BLSIZE_Msk
 (0x1UL << 
USB_COUNT2_RX_BLSIZE_Pos
Ë

	)

5300 
	#USB_COUNT2_RX_BLSIZE
 
USB_COUNT2_RX_BLSIZE_Msk


	)

5303 
	#USB_COUNT3_RX_COUNT3_RX_Pos
 (0U)

	)

5304 
	#USB_COUNT3_RX_COUNT3_RX_Msk
 (0x3FFUL << 
USB_COUNT3_RX_COUNT3_RX_Pos
Ë

	)

5305 
	#USB_COUNT3_RX_COUNT3_RX
 
USB_COUNT3_RX_COUNT3_RX_Msk


	)

5307 
	#USB_COUNT3_RX_NUM_BLOCK_Pos
 (10U)

	)

5308 
	#USB_COUNT3_RX_NUM_BLOCK_Msk
 (0x1FUL << 
USB_COUNT3_RX_NUM_BLOCK_Pos
Ë

	)

5309 
	#USB_COUNT3_RX_NUM_BLOCK
 
USB_COUNT3_RX_NUM_BLOCK_Msk


	)

5310 
	#USB_COUNT3_RX_NUM_BLOCK_0
 (0x01UL << 
USB_COUNT3_RX_NUM_BLOCK_Pos
Ë

	)

5311 
	#USB_COUNT3_RX_NUM_BLOCK_1
 (0x02UL << 
USB_COUNT3_RX_NUM_BLOCK_Pos
Ë

	)

5312 
	#USB_COUNT3_RX_NUM_BLOCK_2
 (0x04UL << 
USB_COUNT3_RX_NUM_BLOCK_Pos
Ë

	)

5313 
	#USB_COUNT3_RX_NUM_BLOCK_3
 (0x08UL << 
USB_COUNT3_RX_NUM_BLOCK_Pos
Ë

	)

5314 
	#USB_COUNT3_RX_NUM_BLOCK_4
 (0x10UL << 
USB_COUNT3_RX_NUM_BLOCK_Pos
Ë

	)

5316 
	#USB_COUNT3_RX_BLSIZE_Pos
 (15U)

	)

5317 
	#USB_COUNT3_RX_BLSIZE_Msk
 (0x1UL << 
USB_COUNT3_RX_BLSIZE_Pos
Ë

	)

5318 
	#USB_COUNT3_RX_BLSIZE
 
USB_COUNT3_RX_BLSIZE_Msk


	)

5321 
	#USB_COUNT4_RX_COUNT4_RX_Pos
 (0U)

	)

5322 
	#USB_COUNT4_RX_COUNT4_RX_Msk
 (0x3FFUL << 
USB_COUNT4_RX_COUNT4_RX_Pos
Ë

	)

5323 
	#USB_COUNT4_RX_COUNT4_RX
 
USB_COUNT4_RX_COUNT4_RX_Msk


	)

5325 
	#USB_COUNT4_RX_NUM_BLOCK_Pos
 (10U)

	)

5326 
	#USB_COUNT4_RX_NUM_BLOCK_Msk
 (0x1FUL << 
USB_COUNT4_RX_NUM_BLOCK_Pos
Ë

	)

5327 
	#USB_COUNT4_RX_NUM_BLOCK
 
USB_COUNT4_RX_NUM_BLOCK_Msk


	)

5328 
	#USB_COUNT4_RX_NUM_BLOCK_0
 (0x01UL << 
USB_COUNT4_RX_NUM_BLOCK_Pos
Ë

	)

5329 
	#USB_COUNT4_RX_NUM_BLOCK_1
 (0x02UL << 
USB_COUNT4_RX_NUM_BLOCK_Pos
Ë

	)

5330 
	#USB_COUNT4_RX_NUM_BLOCK_2
 (0x04UL << 
USB_COUNT4_RX_NUM_BLOCK_Pos
Ë

	)

5331 
	#USB_COUNT4_RX_NUM_BLOCK_3
 (0x08UL << 
USB_COUNT4_RX_NUM_BLOCK_Pos
Ë

	)

5332 
	#USB_COUNT4_RX_NUM_BLOCK_4
 (0x10UL << 
USB_COUNT4_RX_NUM_BLOCK_Pos
Ë

	)

5334 
	#USB_COUNT4_RX_BLSIZE_Pos
 (15U)

	)

5335 
	#USB_COUNT4_RX_BLSIZE_Msk
 (0x1UL << 
USB_COUNT4_RX_BLSIZE_Pos
Ë

	)

5336 
	#USB_COUNT4_RX_BLSIZE
 
USB_COUNT4_RX_BLSIZE_Msk


	)

5339 
	#USB_COUNT5_RX_COUNT5_RX_Pos
 (0U)

	)

5340 
	#USB_COUNT5_RX_COUNT5_RX_Msk
 (0x3FFUL << 
USB_COUNT5_RX_COUNT5_RX_Pos
Ë

	)

5341 
	#USB_COUNT5_RX_COUNT5_RX
 
USB_COUNT5_RX_COUNT5_RX_Msk


	)

5343 
	#USB_COUNT5_RX_NUM_BLOCK_Pos
 (10U)

	)

5344 
	#USB_COUNT5_RX_NUM_BLOCK_Msk
 (0x1FUL << 
USB_COUNT5_RX_NUM_BLOCK_Pos
Ë

	)

5345 
	#USB_COUNT5_RX_NUM_BLOCK
 
USB_COUNT5_RX_NUM_BLOCK_Msk


	)

5346 
	#USB_COUNT5_RX_NUM_BLOCK_0
 (0x01UL << 
USB_COUNT5_RX_NUM_BLOCK_Pos
Ë

	)

5347 
	#USB_COUNT5_RX_NUM_BLOCK_1
 (0x02UL << 
USB_COUNT5_RX_NUM_BLOCK_Pos
Ë

	)

5348 
	#USB_COUNT5_RX_NUM_BLOCK_2
 (0x04UL << 
USB_COUNT5_RX_NUM_BLOCK_Pos
Ë

	)

5349 
	#USB_COUNT5_RX_NUM_BLOCK_3
 (0x08UL << 
USB_COUNT5_RX_NUM_BLOCK_Pos
Ë

	)

5350 
	#USB_COUNT5_RX_NUM_BLOCK_4
 (0x10UL << 
USB_COUNT5_RX_NUM_BLOCK_Pos
Ë

	)

5352 
	#USB_COUNT5_RX_BLSIZE_Pos
 (15U)

	)

5353 
	#USB_COUNT5_RX_BLSIZE_Msk
 (0x1UL << 
USB_COUNT5_RX_BLSIZE_Pos
Ë

	)

5354 
	#USB_COUNT5_RX_BLSIZE
 
USB_COUNT5_RX_BLSIZE_Msk


	)

5357 
	#USB_COUNT6_RX_COUNT6_RX_Pos
 (0U)

	)

5358 
	#USB_COUNT6_RX_COUNT6_RX_Msk
 (0x3FFUL << 
USB_COUNT6_RX_COUNT6_RX_Pos
Ë

	)

5359 
	#USB_COUNT6_RX_COUNT6_RX
 
USB_COUNT6_RX_COUNT6_RX_Msk


	)

5361 
	#USB_COUNT6_RX_NUM_BLOCK_Pos
 (10U)

	)

5362 
	#USB_COUNT6_RX_NUM_BLOCK_Msk
 (0x1FUL << 
USB_COUNT6_RX_NUM_BLOCK_Pos
Ë

	)

5363 
	#USB_COUNT6_RX_NUM_BLOCK
 
USB_COUNT6_RX_NUM_BLOCK_Msk


	)

5364 
	#USB_COUNT6_RX_NUM_BLOCK_0
 (0x01UL << 
USB_COUNT6_RX_NUM_BLOCK_Pos
Ë

	)

5365 
	#USB_COUNT6_RX_NUM_BLOCK_1
 (0x02UL << 
USB_COUNT6_RX_NUM_BLOCK_Pos
Ë

	)

5366 
	#USB_COUNT6_RX_NUM_BLOCK_2
 (0x04UL << 
USB_COUNT6_RX_NUM_BLOCK_Pos
Ë

	)

5367 
	#USB_COUNT6_RX_NUM_BLOCK_3
 (0x08UL << 
USB_COUNT6_RX_NUM_BLOCK_Pos
Ë

	)

5368 
	#USB_COUNT6_RX_NUM_BLOCK_4
 (0x10UL << 
USB_COUNT6_RX_NUM_BLOCK_Pos
Ë

	)

5370 
	#USB_COUNT6_RX_BLSIZE_Pos
 (15U)

	)

5371 
	#USB_COUNT6_RX_BLSIZE_Msk
 (0x1UL << 
USB_COUNT6_RX_BLSIZE_Pos
Ë

	)

5372 
	#USB_COUNT6_RX_BLSIZE
 
USB_COUNT6_RX_BLSIZE_Msk


	)

5375 
	#USB_COUNT7_RX_COUNT7_RX_Pos
 (0U)

	)

5376 
	#USB_COUNT7_RX_COUNT7_RX_Msk
 (0x3FFUL << 
USB_COUNT7_RX_COUNT7_RX_Pos
Ë

	)

5377 
	#USB_COUNT7_RX_COUNT7_RX
 
USB_COUNT7_RX_COUNT7_RX_Msk


	)

5379 
	#USB_COUNT7_RX_NUM_BLOCK_Pos
 (10U)

	)

5380 
	#USB_COUNT7_RX_NUM_BLOCK_Msk
 (0x1FUL << 
USB_COUNT7_RX_NUM_BLOCK_Pos
Ë

	)

5381 
	#USB_COUNT7_RX_NUM_BLOCK
 
USB_COUNT7_RX_NUM_BLOCK_Msk


	)

5382 
	#USB_COUNT7_RX_NUM_BLOCK_0
 (0x01UL << 
USB_COUNT7_RX_NUM_BLOCK_Pos
Ë

	)

5383 
	#USB_COUNT7_RX_NUM_BLOCK_1
 (0x02UL << 
USB_COUNT7_RX_NUM_BLOCK_Pos
Ë

	)

5384 
	#USB_COUNT7_RX_NUM_BLOCK_2
 (0x04UL << 
USB_COUNT7_RX_NUM_BLOCK_Pos
Ë

	)

5385 
	#USB_COUNT7_RX_NUM_BLOCK_3
 (0x08UL << 
USB_COUNT7_RX_NUM_BLOCK_Pos
Ë

	)

5386 
	#USB_COUNT7_RX_NUM_BLOCK_4
 (0x10UL << 
USB_COUNT7_RX_NUM_BLOCK_Pos
Ë

	)

5388 
	#USB_COUNT7_RX_BLSIZE_Pos
 (15U)

	)

5389 
	#USB_COUNT7_RX_BLSIZE_Msk
 (0x1UL << 
USB_COUNT7_RX_BLSIZE_Pos
Ë

	)

5390 
	#USB_COUNT7_RX_BLSIZE
 
USB_COUNT7_RX_BLSIZE_Msk


	)

5395 
	#USB_COUNT0_RX_0_COUNT0_RX_0
 0x000003FFU

	)

5397 
	#USB_COUNT0_RX_0_NUM_BLOCK_0
 0x00007C00U

	)

5398 
	#USB_COUNT0_RX_0_NUM_BLOCK_0_0
 0x00000400U

	)

5399 
	#USB_COUNT0_RX_0_NUM_BLOCK_0_1
 0x00000800U

	)

5400 
	#USB_COUNT0_RX_0_NUM_BLOCK_0_2
 0x00001000U

	)

5401 
	#USB_COUNT0_RX_0_NUM_BLOCK_0_3
 0x00002000U

	)

5402 
	#USB_COUNT0_RX_0_NUM_BLOCK_0_4
 0x00004000U

	)

5404 
	#USB_COUNT0_RX_0_BLSIZE_0
 0x00008000U

	)

5407 
	#USB_COUNT0_RX_1_COUNT0_RX_1
 0x03FF0000U

	)

5409 
	#USB_COUNT0_RX_1_NUM_BLOCK_1
 0x7C000000U

	)

5410 
	#USB_COUNT0_RX_1_NUM_BLOCK_1_0
 0x04000000U

	)

5411 
	#USB_COUNT0_RX_1_NUM_BLOCK_1_1
 0x08000000U

	)

5412 
	#USB_COUNT0_RX_1_NUM_BLOCK_1_2
 0x10000000U

	)

5413 
	#USB_COUNT0_RX_1_NUM_BLOCK_1_3
 0x20000000U

	)

5414 
	#USB_COUNT0_RX_1_NUM_BLOCK_1_4
 0x40000000U

	)

5416 
	#USB_COUNT0_RX_1_BLSIZE_1
 0x80000000U

	)

5419 
	#USB_COUNT1_RX_0_COUNT1_RX_0
 0x000003FFU

	)

5421 
	#USB_COUNT1_RX_0_NUM_BLOCK_0
 0x00007C00U

	)

5422 
	#USB_COUNT1_RX_0_NUM_BLOCK_0_0
 0x00000400U

	)

5423 
	#USB_COUNT1_RX_0_NUM_BLOCK_0_1
 0x00000800U

	)

5424 
	#USB_COUNT1_RX_0_NUM_BLOCK_0_2
 0x00001000U

	)

5425 
	#USB_COUNT1_RX_0_NUM_BLOCK_0_3
 0x00002000U

	)

5426 
	#USB_COUNT1_RX_0_NUM_BLOCK_0_4
 0x00004000U

	)

5428 
	#USB_COUNT1_RX_0_BLSIZE_0
 0x00008000U

	)

5431 
	#USB_COUNT1_RX_1_COUNT1_RX_1
 0x03FF0000U

	)

5433 
	#USB_COUNT1_RX_1_NUM_BLOCK_1
 0x7C000000U

	)

5434 
	#USB_COUNT1_RX_1_NUM_BLOCK_1_0
 0x04000000U

	)

5435 
	#USB_COUNT1_RX_1_NUM_BLOCK_1_1
 0x08000000U

	)

5436 
	#USB_COUNT1_RX_1_NUM_BLOCK_1_2
 0x10000000U

	)

5437 
	#USB_COUNT1_RX_1_NUM_BLOCK_1_3
 0x20000000U

	)

5438 
	#USB_COUNT1_RX_1_NUM_BLOCK_1_4
 0x40000000U

	)

5440 
	#USB_COUNT1_RX_1_BLSIZE_1
 0x80000000U

	)

5443 
	#USB_COUNT2_RX_0_COUNT2_RX_0
 0x000003FFU

	)

5445 
	#USB_COUNT2_RX_0_NUM_BLOCK_0
 0x00007C00U

	)

5446 
	#USB_COUNT2_RX_0_NUM_BLOCK_0_0
 0x00000400U

	)

5447 
	#USB_COUNT2_RX_0_NUM_BLOCK_0_1
 0x00000800U

	)

5448 
	#USB_COUNT2_RX_0_NUM_BLOCK_0_2
 0x00001000U

	)

5449 
	#USB_COUNT2_RX_0_NUM_BLOCK_0_3
 0x00002000U

	)

5450 
	#USB_COUNT2_RX_0_NUM_BLOCK_0_4
 0x00004000U

	)

5452 
	#USB_COUNT2_RX_0_BLSIZE_0
 0x00008000U

	)

5455 
	#USB_COUNT2_RX_1_COUNT2_RX_1
 0x03FF0000U

	)

5457 
	#USB_COUNT2_RX_1_NUM_BLOCK_1
 0x7C000000U

	)

5458 
	#USB_COUNT2_RX_1_NUM_BLOCK_1_0
 0x04000000U

	)

5459 
	#USB_COUNT2_RX_1_NUM_BLOCK_1_1
 0x08000000U

	)

5460 
	#USB_COUNT2_RX_1_NUM_BLOCK_1_2
 0x10000000U

	)

5461 
	#USB_COUNT2_RX_1_NUM_BLOCK_1_3
 0x20000000U

	)

5462 
	#USB_COUNT2_RX_1_NUM_BLOCK_1_4
 0x40000000U

	)

5464 
	#USB_COUNT2_RX_1_BLSIZE_1
 0x80000000U

	)

5467 
	#USB_COUNT3_RX_0_COUNT3_RX_0
 0x000003FFU

	)

5469 
	#USB_COUNT3_RX_0_NUM_BLOCK_0
 0x00007C00U

	)

5470 
	#USB_COUNT3_RX_0_NUM_BLOCK_0_0
 0x00000400U

	)

5471 
	#USB_COUNT3_RX_0_NUM_BLOCK_0_1
 0x00000800U

	)

5472 
	#USB_COUNT3_RX_0_NUM_BLOCK_0_2
 0x00001000U

	)

5473 
	#USB_COUNT3_RX_0_NUM_BLOCK_0_3
 0x00002000U

	)

5474 
	#USB_COUNT3_RX_0_NUM_BLOCK_0_4
 0x00004000U

	)

5476 
	#USB_COUNT3_RX_0_BLSIZE_0
 0x00008000U

	)

5479 
	#USB_COUNT3_RX_1_COUNT3_RX_1
 0x03FF0000U

	)

5481 
	#USB_COUNT3_RX_1_NUM_BLOCK_1
 0x7C000000U

	)

5482 
	#USB_COUNT3_RX_1_NUM_BLOCK_1_0
 0x04000000U

	)

5483 
	#USB_COUNT3_RX_1_NUM_BLOCK_1_1
 0x08000000U

	)

5484 
	#USB_COUNT3_RX_1_NUM_BLOCK_1_2
 0x10000000U

	)

5485 
	#USB_COUNT3_RX_1_NUM_BLOCK_1_3
 0x20000000U

	)

5486 
	#USB_COUNT3_RX_1_NUM_BLOCK_1_4
 0x40000000U

	)

5488 
	#USB_COUNT3_RX_1_BLSIZE_1
 0x80000000U

	)

5491 
	#USB_COUNT4_RX_0_COUNT4_RX_0
 0x000003FFU

	)

5493 
	#USB_COUNT4_RX_0_NUM_BLOCK_0
 0x00007C00U

	)

5494 
	#USB_COUNT4_RX_0_NUM_BLOCK_0_0
 0x00000400U

	)

5495 
	#USB_COUNT4_RX_0_NUM_BLOCK_0_1
 0x00000800U

	)

5496 
	#USB_COUNT4_RX_0_NUM_BLOCK_0_2
 0x00001000U

	)

5497 
	#USB_COUNT4_RX_0_NUM_BLOCK_0_3
 0x00002000U

	)

5498 
	#USB_COUNT4_RX_0_NUM_BLOCK_0_4
 0x00004000U

	)

5500 
	#USB_COUNT4_RX_0_BLSIZE_0
 0x00008000U

	)

5503 
	#USB_COUNT4_RX_1_COUNT4_RX_1
 0x03FF0000U

	)

5505 
	#USB_COUNT4_RX_1_NUM_BLOCK_1
 0x7C000000U

	)

5506 
	#USB_COUNT4_RX_1_NUM_BLOCK_1_0
 0x04000000U

	)

5507 
	#USB_COUNT4_RX_1_NUM_BLOCK_1_1
 0x08000000U

	)

5508 
	#USB_COUNT4_RX_1_NUM_BLOCK_1_2
 0x10000000U

	)

5509 
	#USB_COUNT4_RX_1_NUM_BLOCK_1_3
 0x20000000U

	)

5510 
	#USB_COUNT4_RX_1_NUM_BLOCK_1_4
 0x40000000U

	)

5512 
	#USB_COUNT4_RX_1_BLSIZE_1
 0x80000000U

	)

5515 
	#USB_COUNT5_RX_0_COUNT5_RX_0
 0x000003FFU

	)

5517 
	#USB_COUNT5_RX_0_NUM_BLOCK_0
 0x00007C00U

	)

5518 
	#USB_COUNT5_RX_0_NUM_BLOCK_0_0
 0x00000400U

	)

5519 
	#USB_COUNT5_RX_0_NUM_BLOCK_0_1
 0x00000800U

	)

5520 
	#USB_COUNT5_RX_0_NUM_BLOCK_0_2
 0x00001000U

	)

5521 
	#USB_COUNT5_RX_0_NUM_BLOCK_0_3
 0x00002000U

	)

5522 
	#USB_COUNT5_RX_0_NUM_BLOCK_0_4
 0x00004000U

	)

5524 
	#USB_COUNT5_RX_0_BLSIZE_0
 0x00008000U

	)

5527 
	#USB_COUNT5_RX_1_COUNT5_RX_1
 0x03FF0000U

	)

5529 
	#USB_COUNT5_RX_1_NUM_BLOCK_1
 0x7C000000U

	)

5530 
	#USB_COUNT5_RX_1_NUM_BLOCK_1_0
 0x04000000U

	)

5531 
	#USB_COUNT5_RX_1_NUM_BLOCK_1_1
 0x08000000U

	)

5532 
	#USB_COUNT5_RX_1_NUM_BLOCK_1_2
 0x10000000U

	)

5533 
	#USB_COUNT5_RX_1_NUM_BLOCK_1_3
 0x20000000U

	)

5534 
	#USB_COUNT5_RX_1_NUM_BLOCK_1_4
 0x40000000U

	)

5536 
	#USB_COUNT5_RX_1_BLSIZE_1
 0x80000000U

	)

5539 
	#USB_COUNT6_RX_0_COUNT6_RX_0
 0x000003FFU

	)

5541 
	#USB_COUNT6_RX_0_NUM_BLOCK_0
 0x00007C00U

	)

5542 
	#USB_COUNT6_RX_0_NUM_BLOCK_0_0
 0x00000400U

	)

5543 
	#USB_COUNT6_RX_0_NUM_BLOCK_0_1
 0x00000800U

	)

5544 
	#USB_COUNT6_RX_0_NUM_BLOCK_0_2
 0x00001000U

	)

5545 
	#USB_COUNT6_RX_0_NUM_BLOCK_0_3
 0x00002000U

	)

5546 
	#USB_COUNT6_RX_0_NUM_BLOCK_0_4
 0x00004000U

	)

5548 
	#USB_COUNT6_RX_0_BLSIZE_0
 0x00008000U

	)

5551 
	#USB_COUNT6_RX_1_COUNT6_RX_1
 0x03FF0000U

	)

5553 
	#USB_COUNT6_RX_1_NUM_BLOCK_1
 0x7C000000U

	)

5554 
	#USB_COUNT6_RX_1_NUM_BLOCK_1_0
 0x04000000U

	)

5555 
	#USB_COUNT6_RX_1_NUM_BLOCK_1_1
 0x08000000U

	)

5556 
	#USB_COUNT6_RX_1_NUM_BLOCK_1_2
 0x10000000U

	)

5557 
	#USB_COUNT6_RX_1_NUM_BLOCK_1_3
 0x20000000U

	)

5558 
	#USB_COUNT6_RX_1_NUM_BLOCK_1_4
 0x40000000U

	)

5560 
	#USB_COUNT6_RX_1_BLSIZE_1
 0x80000000U

	)

5563 
	#USB_COUNT7_RX_0_COUNT7_RX_0
 0x000003FFU

	)

5565 
	#USB_COUNT7_RX_0_NUM_BLOCK_0
 0x00007C00U

	)

5566 
	#USB_COUNT7_RX_0_NUM_BLOCK_0_0
 0x00000400U

	)

5567 
	#USB_COUNT7_RX_0_NUM_BLOCK_0_1
 0x00000800U

	)

5568 
	#USB_COUNT7_RX_0_NUM_BLOCK_0_2
 0x00001000U

	)

5569 
	#USB_COUNT7_RX_0_NUM_BLOCK_0_3
 0x00002000U

	)

5570 
	#USB_COUNT7_RX_0_NUM_BLOCK_0_4
 0x00004000U

	)

5572 
	#USB_COUNT7_RX_0_BLSIZE_0
 0x00008000U

	)

5575 
	#USB_COUNT7_RX_1_COUNT7_RX_1
 0x03FF0000U

	)

5577 
	#USB_COUNT7_RX_1_NUM_BLOCK_1
 0x7C000000U

	)

5578 
	#USB_COUNT7_RX_1_NUM_BLOCK_1_0
 0x04000000U

	)

5579 
	#USB_COUNT7_RX_1_NUM_BLOCK_1_1
 0x08000000U

	)

5580 
	#USB_COUNT7_RX_1_NUM_BLOCK_1_2
 0x10000000U

	)

5581 
	#USB_COUNT7_RX_1_NUM_BLOCK_1_3
 0x20000000U

	)

5582 
	#USB_COUNT7_RX_1_NUM_BLOCK_1_4
 0x40000000U

	)

5584 
	#USB_COUNT7_RX_1_BLSIZE_1
 0x80000000U

	)

5594 
	#CAN_MCR_INRQ_Pos
 (0U)

	)

5595 
	#CAN_MCR_INRQ_Msk
 (0x1UL << 
CAN_MCR_INRQ_Pos
Ë

	)

5596 
	#CAN_MCR_INRQ
 
CAN_MCR_INRQ_Msk


	)

5597 
	#CAN_MCR_SLEEP_Pos
 (1U)

	)

5598 
	#CAN_MCR_SLEEP_Msk
 (0x1UL << 
CAN_MCR_SLEEP_Pos
Ë

	)

5599 
	#CAN_MCR_SLEEP
 
CAN_MCR_SLEEP_Msk


	)

5600 
	#CAN_MCR_TXFP_Pos
 (2U)

	)

5601 
	#CAN_MCR_TXFP_Msk
 (0x1UL << 
CAN_MCR_TXFP_Pos
Ë

	)

5602 
	#CAN_MCR_TXFP
 
CAN_MCR_TXFP_Msk


	)

5603 
	#CAN_MCR_RFLM_Pos
 (3U)

	)

5604 
	#CAN_MCR_RFLM_Msk
 (0x1UL << 
CAN_MCR_RFLM_Pos
Ë

	)

5605 
	#CAN_MCR_RFLM
 
CAN_MCR_RFLM_Msk


	)

5606 
	#CAN_MCR_NART_Pos
 (4U)

	)

5607 
	#CAN_MCR_NART_Msk
 (0x1UL << 
CAN_MCR_NART_Pos
Ë

	)

5608 
	#CAN_MCR_NART
 
CAN_MCR_NART_Msk


	)

5609 
	#CAN_MCR_AWUM_Pos
 (5U)

	)

5610 
	#CAN_MCR_AWUM_Msk
 (0x1UL << 
CAN_MCR_AWUM_Pos
Ë

	)

5611 
	#CAN_MCR_AWUM
 
CAN_MCR_AWUM_Msk


	)

5612 
	#CAN_MCR_ABOM_Pos
 (6U)

	)

5613 
	#CAN_MCR_ABOM_Msk
 (0x1UL << 
CAN_MCR_ABOM_Pos
Ë

	)

5614 
	#CAN_MCR_ABOM
 
CAN_MCR_ABOM_Msk


	)

5615 
	#CAN_MCR_TTCM_Pos
 (7U)

	)

5616 
	#CAN_MCR_TTCM_Msk
 (0x1UL << 
CAN_MCR_TTCM_Pos
Ë

	)

5617 
	#CAN_MCR_TTCM
 
CAN_MCR_TTCM_Msk


	)

5618 
	#CAN_MCR_RESET_Pos
 (15U)

	)

5619 
	#CAN_MCR_RESET_Msk
 (0x1UL << 
CAN_MCR_RESET_Pos
Ë

	)

5620 
	#CAN_MCR_RESET
 
CAN_MCR_RESET_Msk


	)

5621 
	#CAN_MCR_DBF_Pos
 (16U)

	)

5622 
	#CAN_MCR_DBF_Msk
 (0x1UL << 
CAN_MCR_DBF_Pos
Ë

	)

5623 
	#CAN_MCR_DBF
 
CAN_MCR_DBF_Msk


	)

5626 
	#CAN_MSR_INAK_Pos
 (0U)

	)

5627 
	#CAN_MSR_INAK_Msk
 (0x1UL << 
CAN_MSR_INAK_Pos
Ë

	)

5628 
	#CAN_MSR_INAK
 
CAN_MSR_INAK_Msk


	)

5629 
	#CAN_MSR_SLAK_Pos
 (1U)

	)

5630 
	#CAN_MSR_SLAK_Msk
 (0x1UL << 
CAN_MSR_SLAK_Pos
Ë

	)

5631 
	#CAN_MSR_SLAK
 
CAN_MSR_SLAK_Msk


	)

5632 
	#CAN_MSR_ERRI_Pos
 (2U)

	)

5633 
	#CAN_MSR_ERRI_Msk
 (0x1UL << 
CAN_MSR_ERRI_Pos
Ë

	)

5634 
	#CAN_MSR_ERRI
 
CAN_MSR_ERRI_Msk


	)

5635 
	#CAN_MSR_WKUI_Pos
 (3U)

	)

5636 
	#CAN_MSR_WKUI_Msk
 (0x1UL << 
CAN_MSR_WKUI_Pos
Ë

	)

5637 
	#CAN_MSR_WKUI
 
CAN_MSR_WKUI_Msk


	)

5638 
	#CAN_MSR_SLAKI_Pos
 (4U)

	)

5639 
	#CAN_MSR_SLAKI_Msk
 (0x1UL << 
CAN_MSR_SLAKI_Pos
Ë

	)

5640 
	#CAN_MSR_SLAKI
 
CAN_MSR_SLAKI_Msk


	)

5641 
	#CAN_MSR_TXM_Pos
 (8U)

	)

5642 
	#CAN_MSR_TXM_Msk
 (0x1UL << 
CAN_MSR_TXM_Pos
Ë

	)

5643 
	#CAN_MSR_TXM
 
CAN_MSR_TXM_Msk


	)

5644 
	#CAN_MSR_RXM_Pos
 (9U)

	)

5645 
	#CAN_MSR_RXM_Msk
 (0x1UL << 
CAN_MSR_RXM_Pos
Ë

	)

5646 
	#CAN_MSR_RXM
 
CAN_MSR_RXM_Msk


	)

5647 
	#CAN_MSR_SAMP_Pos
 (10U)

	)

5648 
	#CAN_MSR_SAMP_Msk
 (0x1UL << 
CAN_MSR_SAMP_Pos
Ë

	)

5649 
	#CAN_MSR_SAMP
 
CAN_MSR_SAMP_Msk


	)

5650 
	#CAN_MSR_RX_Pos
 (11U)

	)

5651 
	#CAN_MSR_RX_Msk
 (0x1UL << 
CAN_MSR_RX_Pos
Ë

	)

5652 
	#CAN_MSR_RX
 
CAN_MSR_RX_Msk


	)

5655 
	#CAN_TSR_RQCP0_Pos
 (0U)

	)

5656 
	#CAN_TSR_RQCP0_Msk
 (0x1UL << 
CAN_TSR_RQCP0_Pos
Ë

	)

5657 
	#CAN_TSR_RQCP0
 
CAN_TSR_RQCP0_Msk


	)

5658 
	#CAN_TSR_TXOK0_Pos
 (1U)

	)

5659 
	#CAN_TSR_TXOK0_Msk
 (0x1UL << 
CAN_TSR_TXOK0_Pos
Ë

	)

5660 
	#CAN_TSR_TXOK0
 
CAN_TSR_TXOK0_Msk


	)

5661 
	#CAN_TSR_ALST0_Pos
 (2U)

	)

5662 
	#CAN_TSR_ALST0_Msk
 (0x1UL << 
CAN_TSR_ALST0_Pos
Ë

	)

5663 
	#CAN_TSR_ALST0
 
CAN_TSR_ALST0_Msk


	)

5664 
	#CAN_TSR_TERR0_Pos
 (3U)

	)

5665 
	#CAN_TSR_TERR0_Msk
 (0x1UL << 
CAN_TSR_TERR0_Pos
Ë

	)

5666 
	#CAN_TSR_TERR0
 
CAN_TSR_TERR0_Msk


	)

5667 
	#CAN_TSR_ABRQ0_Pos
 (7U)

	)

5668 
	#CAN_TSR_ABRQ0_Msk
 (0x1UL << 
CAN_TSR_ABRQ0_Pos
Ë

	)

5669 
	#CAN_TSR_ABRQ0
 
CAN_TSR_ABRQ0_Msk


	)

5670 
	#CAN_TSR_RQCP1_Pos
 (8U)

	)

5671 
	#CAN_TSR_RQCP1_Msk
 (0x1UL << 
CAN_TSR_RQCP1_Pos
Ë

	)

5672 
	#CAN_TSR_RQCP1
 
CAN_TSR_RQCP1_Msk


	)

5673 
	#CAN_TSR_TXOK1_Pos
 (9U)

	)

5674 
	#CAN_TSR_TXOK1_Msk
 (0x1UL << 
CAN_TSR_TXOK1_Pos
Ë

	)

5675 
	#CAN_TSR_TXOK1
 
CAN_TSR_TXOK1_Msk


	)

5676 
	#CAN_TSR_ALST1_Pos
 (10U)

	)

5677 
	#CAN_TSR_ALST1_Msk
 (0x1UL << 
CAN_TSR_ALST1_Pos
Ë

	)

5678 
	#CAN_TSR_ALST1
 
CAN_TSR_ALST1_Msk


	)

5679 
	#CAN_TSR_TERR1_Pos
 (11U)

	)

5680 
	#CAN_TSR_TERR1_Msk
 (0x1UL << 
CAN_TSR_TERR1_Pos
Ë

	)

5681 
	#CAN_TSR_TERR1
 
CAN_TSR_TERR1_Msk


	)

5682 
	#CAN_TSR_ABRQ1_Pos
 (15U)

	)

5683 
	#CAN_TSR_ABRQ1_Msk
 (0x1UL << 
CAN_TSR_ABRQ1_Pos
Ë

	)

5684 
	#CAN_TSR_ABRQ1
 
CAN_TSR_ABRQ1_Msk


	)

5685 
	#CAN_TSR_RQCP2_Pos
 (16U)

	)

5686 
	#CAN_TSR_RQCP2_Msk
 (0x1UL << 
CAN_TSR_RQCP2_Pos
Ë

	)

5687 
	#CAN_TSR_RQCP2
 
CAN_TSR_RQCP2_Msk


	)

5688 
	#CAN_TSR_TXOK2_Pos
 (17U)

	)

5689 
	#CAN_TSR_TXOK2_Msk
 (0x1UL << 
CAN_TSR_TXOK2_Pos
Ë

	)

5690 
	#CAN_TSR_TXOK2
 
CAN_TSR_TXOK2_Msk


	)

5691 
	#CAN_TSR_ALST2_Pos
 (18U)

	)

5692 
	#CAN_TSR_ALST2_Msk
 (0x1UL << 
CAN_TSR_ALST2_Pos
Ë

	)

5693 
	#CAN_TSR_ALST2
 
CAN_TSR_ALST2_Msk


	)

5694 
	#CAN_TSR_TERR2_Pos
 (19U)

	)

5695 
	#CAN_TSR_TERR2_Msk
 (0x1UL << 
CAN_TSR_TERR2_Pos
Ë

	)

5696 
	#CAN_TSR_TERR2
 
CAN_TSR_TERR2_Msk


	)

5697 
	#CAN_TSR_ABRQ2_Pos
 (23U)

	)

5698 
	#CAN_TSR_ABRQ2_Msk
 (0x1UL << 
CAN_TSR_ABRQ2_Pos
Ë

	)

5699 
	#CAN_TSR_ABRQ2
 
CAN_TSR_ABRQ2_Msk


	)

5700 
	#CAN_TSR_CODE_Pos
 (24U)

	)

5701 
	#CAN_TSR_CODE_Msk
 (0x3UL << 
CAN_TSR_CODE_Pos
Ë

	)

5702 
	#CAN_TSR_CODE
 
CAN_TSR_CODE_Msk


	)

5704 
	#CAN_TSR_TME_Pos
 (26U)

	)

5705 
	#CAN_TSR_TME_Msk
 (0x7UL << 
CAN_TSR_TME_Pos
Ë

	)

5706 
	#CAN_TSR_TME
 
CAN_TSR_TME_Msk


	)

5707 
	#CAN_TSR_TME0_Pos
 (26U)

	)

5708 
	#CAN_TSR_TME0_Msk
 (0x1UL << 
CAN_TSR_TME0_Pos
Ë

	)

5709 
	#CAN_TSR_TME0
 
CAN_TSR_TME0_Msk


	)

5710 
	#CAN_TSR_TME1_Pos
 (27U)

	)

5711 
	#CAN_TSR_TME1_Msk
 (0x1UL << 
CAN_TSR_TME1_Pos
Ë

	)

5712 
	#CAN_TSR_TME1
 
CAN_TSR_TME1_Msk


	)

5713 
	#CAN_TSR_TME2_Pos
 (28U)

	)

5714 
	#CAN_TSR_TME2_Msk
 (0x1UL << 
CAN_TSR_TME2_Pos
Ë

	)

5715 
	#CAN_TSR_TME2
 
CAN_TSR_TME2_Msk


	)

5717 
	#CAN_TSR_LOW_Pos
 (29U)

	)

5718 
	#CAN_TSR_LOW_Msk
 (0x7UL << 
CAN_TSR_LOW_Pos
Ë

	)

5719 
	#CAN_TSR_LOW
 
CAN_TSR_LOW_Msk


	)

5720 
	#CAN_TSR_LOW0_Pos
 (29U)

	)

5721 
	#CAN_TSR_LOW0_Msk
 (0x1UL << 
CAN_TSR_LOW0_Pos
Ë

	)

5722 
	#CAN_TSR_LOW0
 
CAN_TSR_LOW0_Msk


	)

5723 
	#CAN_TSR_LOW1_Pos
 (30U)

	)

5724 
	#CAN_TSR_LOW1_Msk
 (0x1UL << 
CAN_TSR_LOW1_Pos
Ë

	)

5725 
	#CAN_TSR_LOW1
 
CAN_TSR_LOW1_Msk


	)

5726 
	#CAN_TSR_LOW2_Pos
 (31U)

	)

5727 
	#CAN_TSR_LOW2_Msk
 (0x1UL << 
CAN_TSR_LOW2_Pos
Ë

	)

5728 
	#CAN_TSR_LOW2
 
CAN_TSR_LOW2_Msk


	)

5731 
	#CAN_RF0R_FMP0_Pos
 (0U)

	)

5732 
	#CAN_RF0R_FMP0_Msk
 (0x3UL << 
CAN_RF0R_FMP0_Pos
Ë

	)

5733 
	#CAN_RF0R_FMP0
 
CAN_RF0R_FMP0_Msk


	)

5734 
	#CAN_RF0R_FULL0_Pos
 (3U)

	)

5735 
	#CAN_RF0R_FULL0_Msk
 (0x1UL << 
CAN_RF0R_FULL0_Pos
Ë

	)

5736 
	#CAN_RF0R_FULL0
 
CAN_RF0R_FULL0_Msk


	)

5737 
	#CAN_RF0R_FOVR0_Pos
 (4U)

	)

5738 
	#CAN_RF0R_FOVR0_Msk
 (0x1UL << 
CAN_RF0R_FOVR0_Pos
Ë

	)

5739 
	#CAN_RF0R_FOVR0
 
CAN_RF0R_FOVR0_Msk


	)

5740 
	#CAN_RF0R_RFOM0_Pos
 (5U)

	)

5741 
	#CAN_RF0R_RFOM0_Msk
 (0x1UL << 
CAN_RF0R_RFOM0_Pos
Ë

	)

5742 
	#CAN_RF0R_RFOM0
 
CAN_RF0R_RFOM0_Msk


	)

5745 
	#CAN_RF1R_FMP1_Pos
 (0U)

	)

5746 
	#CAN_RF1R_FMP1_Msk
 (0x3UL << 
CAN_RF1R_FMP1_Pos
Ë

	)

5747 
	#CAN_RF1R_FMP1
 
CAN_RF1R_FMP1_Msk


	)

5748 
	#CAN_RF1R_FULL1_Pos
 (3U)

	)

5749 
	#CAN_RF1R_FULL1_Msk
 (0x1UL << 
CAN_RF1R_FULL1_Pos
Ë

	)

5750 
	#CAN_RF1R_FULL1
 
CAN_RF1R_FULL1_Msk


	)

5751 
	#CAN_RF1R_FOVR1_Pos
 (4U)

	)

5752 
	#CAN_RF1R_FOVR1_Msk
 (0x1UL << 
CAN_RF1R_FOVR1_Pos
Ë

	)

5753 
	#CAN_RF1R_FOVR1
 
CAN_RF1R_FOVR1_Msk


	)

5754 
	#CAN_RF1R_RFOM1_Pos
 (5U)

	)

5755 
	#CAN_RF1R_RFOM1_Msk
 (0x1UL << 
CAN_RF1R_RFOM1_Pos
Ë

	)

5756 
	#CAN_RF1R_RFOM1
 
CAN_RF1R_RFOM1_Msk


	)

5759 
	#CAN_IER_TMEIE_Pos
 (0U)

	)

5760 
	#CAN_IER_TMEIE_Msk
 (0x1UL << 
CAN_IER_TMEIE_Pos
Ë

	)

5761 
	#CAN_IER_TMEIE
 
CAN_IER_TMEIE_Msk


	)

5762 
	#CAN_IER_FMPIE0_Pos
 (1U)

	)

5763 
	#CAN_IER_FMPIE0_Msk
 (0x1UL << 
CAN_IER_FMPIE0_Pos
Ë

	)

5764 
	#CAN_IER_FMPIE0
 
CAN_IER_FMPIE0_Msk


	)

5765 
	#CAN_IER_FFIE0_Pos
 (2U)

	)

5766 
	#CAN_IER_FFIE0_Msk
 (0x1UL << 
CAN_IER_FFIE0_Pos
Ë

	)

5767 
	#CAN_IER_FFIE0
 
CAN_IER_FFIE0_Msk


	)

5768 
	#CAN_IER_FOVIE0_Pos
 (3U)

	)

5769 
	#CAN_IER_FOVIE0_Msk
 (0x1UL << 
CAN_IER_FOVIE0_Pos
Ë

	)

5770 
	#CAN_IER_FOVIE0
 
CAN_IER_FOVIE0_Msk


	)

5771 
	#CAN_IER_FMPIE1_Pos
 (4U)

	)

5772 
	#CAN_IER_FMPIE1_Msk
 (0x1UL << 
CAN_IER_FMPIE1_Pos
Ë

	)

5773 
	#CAN_IER_FMPIE1
 
CAN_IER_FMPIE1_Msk


	)

5774 
	#CAN_IER_FFIE1_Pos
 (5U)

	)

5775 
	#CAN_IER_FFIE1_Msk
 (0x1UL << 
CAN_IER_FFIE1_Pos
Ë

	)

5776 
	#CAN_IER_FFIE1
 
CAN_IER_FFIE1_Msk


	)

5777 
	#CAN_IER_FOVIE1_Pos
 (6U)

	)

5778 
	#CAN_IER_FOVIE1_Msk
 (0x1UL << 
CAN_IER_FOVIE1_Pos
Ë

	)

5779 
	#CAN_IER_FOVIE1
 
CAN_IER_FOVIE1_Msk


	)

5780 
	#CAN_IER_EWGIE_Pos
 (8U)

	)

5781 
	#CAN_IER_EWGIE_Msk
 (0x1UL << 
CAN_IER_EWGIE_Pos
Ë

	)

5782 
	#CAN_IER_EWGIE
 
CAN_IER_EWGIE_Msk


	)

5783 
	#CAN_IER_EPVIE_Pos
 (9U)

	)

5784 
	#CAN_IER_EPVIE_Msk
 (0x1UL << 
CAN_IER_EPVIE_Pos
Ë

	)

5785 
	#CAN_IER_EPVIE
 
CAN_IER_EPVIE_Msk


	)

5786 
	#CAN_IER_BOFIE_Pos
 (10U)

	)

5787 
	#CAN_IER_BOFIE_Msk
 (0x1UL << 
CAN_IER_BOFIE_Pos
Ë

	)

5788 
	#CAN_IER_BOFIE
 
CAN_IER_BOFIE_Msk


	)

5789 
	#CAN_IER_LECIE_Pos
 (11U)

	)

5790 
	#CAN_IER_LECIE_Msk
 (0x1UL << 
CAN_IER_LECIE_Pos
Ë

	)

5791 
	#CAN_IER_LECIE
 
CAN_IER_LECIE_Msk


	)

5792 
	#CAN_IER_ERRIE_Pos
 (15U)

	)

5793 
	#CAN_IER_ERRIE_Msk
 (0x1UL << 
CAN_IER_ERRIE_Pos
Ë

	)

5794 
	#CAN_IER_ERRIE
 
CAN_IER_ERRIE_Msk


	)

5795 
	#CAN_IER_WKUIE_Pos
 (16U)

	)

5796 
	#CAN_IER_WKUIE_Msk
 (0x1UL << 
CAN_IER_WKUIE_Pos
Ë

	)

5797 
	#CAN_IER_WKUIE
 
CAN_IER_WKUIE_Msk


	)

5798 
	#CAN_IER_SLKIE_Pos
 (17U)

	)

5799 
	#CAN_IER_SLKIE_Msk
 (0x1UL << 
CAN_IER_SLKIE_Pos
Ë

	)

5800 
	#CAN_IER_SLKIE
 
CAN_IER_SLKIE_Msk


	)

5803 
	#CAN_ESR_EWGF_Pos
 (0U)

	)

5804 
	#CAN_ESR_EWGF_Msk
 (0x1UL << 
CAN_ESR_EWGF_Pos
Ë

	)

5805 
	#CAN_ESR_EWGF
 
CAN_ESR_EWGF_Msk


	)

5806 
	#CAN_ESR_EPVF_Pos
 (1U)

	)

5807 
	#CAN_ESR_EPVF_Msk
 (0x1UL << 
CAN_ESR_EPVF_Pos
Ë

	)

5808 
	#CAN_ESR_EPVF
 
CAN_ESR_EPVF_Msk


	)

5809 
	#CAN_ESR_BOFF_Pos
 (2U)

	)

5810 
	#CAN_ESR_BOFF_Msk
 (0x1UL << 
CAN_ESR_BOFF_Pos
Ë

	)

5811 
	#CAN_ESR_BOFF
 
CAN_ESR_BOFF_Msk


	)

5813 
	#CAN_ESR_LEC_Pos
 (4U)

	)

5814 
	#CAN_ESR_LEC_Msk
 (0x7UL << 
CAN_ESR_LEC_Pos
Ë

	)

5815 
	#CAN_ESR_LEC
 
CAN_ESR_LEC_Msk


	)

5816 
	#CAN_ESR_LEC_0
 (0x1UL << 
CAN_ESR_LEC_Pos
Ë

	)

5817 
	#CAN_ESR_LEC_1
 (0x2UL << 
CAN_ESR_LEC_Pos
Ë

	)

5818 
	#CAN_ESR_LEC_2
 (0x4UL << 
CAN_ESR_LEC_Pos
Ë

	)

5820 
	#CAN_ESR_TEC_Pos
 (16U)

	)

5821 
	#CAN_ESR_TEC_Msk
 (0xFFUL << 
CAN_ESR_TEC_Pos
Ë

	)

5822 
	#CAN_ESR_TEC
 
CAN_ESR_TEC_Msk


	)

5823 
	#CAN_ESR_REC_Pos
 (24U)

	)

5824 
	#CAN_ESR_REC_Msk
 (0xFFUL << 
CAN_ESR_REC_Pos
Ë

	)

5825 
	#CAN_ESR_REC
 
CAN_ESR_REC_Msk


	)

5828 
	#CAN_BTR_BRP_Pos
 (0U)

	)

5829 
	#CAN_BTR_BRP_Msk
 (0x3FFUL << 
CAN_BTR_BRP_Pos
Ë

	)

5830 
	#CAN_BTR_BRP
 
CAN_BTR_BRP_Msk


	)

5831 
	#CAN_BTR_TS1_Pos
 (16U)

	)

5832 
	#CAN_BTR_TS1_Msk
 (0xFUL << 
CAN_BTR_TS1_Pos
Ë

	)

5833 
	#CAN_BTR_TS1
 
CAN_BTR_TS1_Msk


	)

5834 
	#CAN_BTR_TS1_0
 (0x1UL << 
CAN_BTR_TS1_Pos
Ë

	)

5835 
	#CAN_BTR_TS1_1
 (0x2UL << 
CAN_BTR_TS1_Pos
Ë

	)

5836 
	#CAN_BTR_TS1_2
 (0x4UL << 
CAN_BTR_TS1_Pos
Ë

	)

5837 
	#CAN_BTR_TS1_3
 (0x8UL << 
CAN_BTR_TS1_Pos
Ë

	)

5838 
	#CAN_BTR_TS2_Pos
 (20U)

	)

5839 
	#CAN_BTR_TS2_Msk
 (0x7UL << 
CAN_BTR_TS2_Pos
Ë

	)

5840 
	#CAN_BTR_TS2
 
CAN_BTR_TS2_Msk


	)

5841 
	#CAN_BTR_TS2_0
 (0x1UL << 
CAN_BTR_TS2_Pos
Ë

	)

5842 
	#CAN_BTR_TS2_1
 (0x2UL << 
CAN_BTR_TS2_Pos
Ë

	)

5843 
	#CAN_BTR_TS2_2
 (0x4UL << 
CAN_BTR_TS2_Pos
Ë

	)

5844 
	#CAN_BTR_SJW_Pos
 (24U)

	)

5845 
	#CAN_BTR_SJW_Msk
 (0x3UL << 
CAN_BTR_SJW_Pos
Ë

	)

5846 
	#CAN_BTR_SJW
 
CAN_BTR_SJW_Msk


	)

5847 
	#CAN_BTR_SJW_0
 (0x1UL << 
CAN_BTR_SJW_Pos
Ë

	)

5848 
	#CAN_BTR_SJW_1
 (0x2UL << 
CAN_BTR_SJW_Pos
Ë

	)

5849 
	#CAN_BTR_LBKM_Pos
 (30U)

	)

5850 
	#CAN_BTR_LBKM_Msk
 (0x1UL << 
CAN_BTR_LBKM_Pos
Ë

	)

5851 
	#CAN_BTR_LBKM
 
CAN_BTR_LBKM_Msk


	)

5852 
	#CAN_BTR_SILM_Pos
 (31U)

	)

5853 
	#CAN_BTR_SILM_Msk
 (0x1UL << 
CAN_BTR_SILM_Pos
Ë

	)

5854 
	#CAN_BTR_SILM
 
CAN_BTR_SILM_Msk


	)

5858 
	#CAN_TI0R_TXRQ_Pos
 (0U)

	)

5859 
	#CAN_TI0R_TXRQ_Msk
 (0x1UL << 
CAN_TI0R_TXRQ_Pos
Ë

	)

5860 
	#CAN_TI0R_TXRQ
 
CAN_TI0R_TXRQ_Msk


	)

5861 
	#CAN_TI0R_RTR_Pos
 (1U)

	)

5862 
	#CAN_TI0R_RTR_Msk
 (0x1UL << 
CAN_TI0R_RTR_Pos
Ë

	)

5863 
	#CAN_TI0R_RTR
 
CAN_TI0R_RTR_Msk


	)

5864 
	#CAN_TI0R_IDE_Pos
 (2U)

	)

5865 
	#CAN_TI0R_IDE_Msk
 (0x1UL << 
CAN_TI0R_IDE_Pos
Ë

	)

5866 
	#CAN_TI0R_IDE
 
CAN_TI0R_IDE_Msk


	)

5867 
	#CAN_TI0R_EXID_Pos
 (3U)

	)

5868 
	#CAN_TI0R_EXID_Msk
 (0x3FFFFUL << 
CAN_TI0R_EXID_Pos
Ë

	)

5869 
	#CAN_TI0R_EXID
 
CAN_TI0R_EXID_Msk


	)

5870 
	#CAN_TI0R_STID_Pos
 (21U)

	)

5871 
	#CAN_TI0R_STID_Msk
 (0x7FFUL << 
CAN_TI0R_STID_Pos
Ë

	)

5872 
	#CAN_TI0R_STID
 
CAN_TI0R_STID_Msk


	)

5875 
	#CAN_TDT0R_DLC_Pos
 (0U)

	)

5876 
	#CAN_TDT0R_DLC_Msk
 (0xFUL << 
CAN_TDT0R_DLC_Pos
Ë

	)

5877 
	#CAN_TDT0R_DLC
 
CAN_TDT0R_DLC_Msk


	)

5878 
	#CAN_TDT0R_TGT_Pos
 (8U)

	)

5879 
	#CAN_TDT0R_TGT_Msk
 (0x1UL << 
CAN_TDT0R_TGT_Pos
Ë

	)

5880 
	#CAN_TDT0R_TGT
 
CAN_TDT0R_TGT_Msk


	)

5881 
	#CAN_TDT0R_TIME_Pos
 (16U)

	)

5882 
	#CAN_TDT0R_TIME_Msk
 (0xFFFFUL << 
CAN_TDT0R_TIME_Pos
Ë

	)

5883 
	#CAN_TDT0R_TIME
 
CAN_TDT0R_TIME_Msk


	)

5886 
	#CAN_TDL0R_DATA0_Pos
 (0U)

	)

5887 
	#CAN_TDL0R_DATA0_Msk
 (0xFFUL << 
CAN_TDL0R_DATA0_Pos
Ë

	)

5888 
	#CAN_TDL0R_DATA0
 
CAN_TDL0R_DATA0_Msk


	)

5889 
	#CAN_TDL0R_DATA1_Pos
 (8U)

	)

5890 
	#CAN_TDL0R_DATA1_Msk
 (0xFFUL << 
CAN_TDL0R_DATA1_Pos
Ë

	)

5891 
	#CAN_TDL0R_DATA1
 
CAN_TDL0R_DATA1_Msk


	)

5892 
	#CAN_TDL0R_DATA2_Pos
 (16U)

	)

5893 
	#CAN_TDL0R_DATA2_Msk
 (0xFFUL << 
CAN_TDL0R_DATA2_Pos
Ë

	)

5894 
	#CAN_TDL0R_DATA2
 
CAN_TDL0R_DATA2_Msk


	)

5895 
	#CAN_TDL0R_DATA3_Pos
 (24U)

	)

5896 
	#CAN_TDL0R_DATA3_Msk
 (0xFFUL << 
CAN_TDL0R_DATA3_Pos
Ë

	)

5897 
	#CAN_TDL0R_DATA3
 
CAN_TDL0R_DATA3_Msk


	)

5900 
	#CAN_TDH0R_DATA4_Pos
 (0U)

	)

5901 
	#CAN_TDH0R_DATA4_Msk
 (0xFFUL << 
CAN_TDH0R_DATA4_Pos
Ë

	)

5902 
	#CAN_TDH0R_DATA4
 
CAN_TDH0R_DATA4_Msk


	)

5903 
	#CAN_TDH0R_DATA5_Pos
 (8U)

	)

5904 
	#CAN_TDH0R_DATA5_Msk
 (0xFFUL << 
CAN_TDH0R_DATA5_Pos
Ë

	)

5905 
	#CAN_TDH0R_DATA5
 
CAN_TDH0R_DATA5_Msk


	)

5906 
	#CAN_TDH0R_DATA6_Pos
 (16U)

	)

5907 
	#CAN_TDH0R_DATA6_Msk
 (0xFFUL << 
CAN_TDH0R_DATA6_Pos
Ë

	)

5908 
	#CAN_TDH0R_DATA6
 
CAN_TDH0R_DATA6_Msk


	)

5909 
	#CAN_TDH0R_DATA7_Pos
 (24U)

	)

5910 
	#CAN_TDH0R_DATA7_Msk
 (0xFFUL << 
CAN_TDH0R_DATA7_Pos
Ë

	)

5911 
	#CAN_TDH0R_DATA7
 
CAN_TDH0R_DATA7_Msk


	)

5914 
	#CAN_TI1R_TXRQ_Pos
 (0U)

	)

5915 
	#CAN_TI1R_TXRQ_Msk
 (0x1UL << 
CAN_TI1R_TXRQ_Pos
Ë

	)

5916 
	#CAN_TI1R_TXRQ
 
CAN_TI1R_TXRQ_Msk


	)

5917 
	#CAN_TI1R_RTR_Pos
 (1U)

	)

5918 
	#CAN_TI1R_RTR_Msk
 (0x1UL << 
CAN_TI1R_RTR_Pos
Ë

	)

5919 
	#CAN_TI1R_RTR
 
CAN_TI1R_RTR_Msk


	)

5920 
	#CAN_TI1R_IDE_Pos
 (2U)

	)

5921 
	#CAN_TI1R_IDE_Msk
 (0x1UL << 
CAN_TI1R_IDE_Pos
Ë

	)

5922 
	#CAN_TI1R_IDE
 
CAN_TI1R_IDE_Msk


	)

5923 
	#CAN_TI1R_EXID_Pos
 (3U)

	)

5924 
	#CAN_TI1R_EXID_Msk
 (0x3FFFFUL << 
CAN_TI1R_EXID_Pos
Ë

	)

5925 
	#CAN_TI1R_EXID
 
CAN_TI1R_EXID_Msk


	)

5926 
	#CAN_TI1R_STID_Pos
 (21U)

	)

5927 
	#CAN_TI1R_STID_Msk
 (0x7FFUL << 
CAN_TI1R_STID_Pos
Ë

	)

5928 
	#CAN_TI1R_STID
 
CAN_TI1R_STID_Msk


	)

5931 
	#CAN_TDT1R_DLC_Pos
 (0U)

	)

5932 
	#CAN_TDT1R_DLC_Msk
 (0xFUL << 
CAN_TDT1R_DLC_Pos
Ë

	)

5933 
	#CAN_TDT1R_DLC
 
CAN_TDT1R_DLC_Msk


	)

5934 
	#CAN_TDT1R_TGT_Pos
 (8U)

	)

5935 
	#CAN_TDT1R_TGT_Msk
 (0x1UL << 
CAN_TDT1R_TGT_Pos
Ë

	)

5936 
	#CAN_TDT1R_TGT
 
CAN_TDT1R_TGT_Msk


	)

5937 
	#CAN_TDT1R_TIME_Pos
 (16U)

	)

5938 
	#CAN_TDT1R_TIME_Msk
 (0xFFFFUL << 
CAN_TDT1R_TIME_Pos
Ë

	)

5939 
	#CAN_TDT1R_TIME
 
CAN_TDT1R_TIME_Msk


	)

5942 
	#CAN_TDL1R_DATA0_Pos
 (0U)

	)

5943 
	#CAN_TDL1R_DATA0_Msk
 (0xFFUL << 
CAN_TDL1R_DATA0_Pos
Ë

	)

5944 
	#CAN_TDL1R_DATA0
 
CAN_TDL1R_DATA0_Msk


	)

5945 
	#CAN_TDL1R_DATA1_Pos
 (8U)

	)

5946 
	#CAN_TDL1R_DATA1_Msk
 (0xFFUL << 
CAN_TDL1R_DATA1_Pos
Ë

	)

5947 
	#CAN_TDL1R_DATA1
 
CAN_TDL1R_DATA1_Msk


	)

5948 
	#CAN_TDL1R_DATA2_Pos
 (16U)

	)

5949 
	#CAN_TDL1R_DATA2_Msk
 (0xFFUL << 
CAN_TDL1R_DATA2_Pos
Ë

	)

5950 
	#CAN_TDL1R_DATA2
 
CAN_TDL1R_DATA2_Msk


	)

5951 
	#CAN_TDL1R_DATA3_Pos
 (24U)

	)

5952 
	#CAN_TDL1R_DATA3_Msk
 (0xFFUL << 
CAN_TDL1R_DATA3_Pos
Ë

	)

5953 
	#CAN_TDL1R_DATA3
 
CAN_TDL1R_DATA3_Msk


	)

5956 
	#CAN_TDH1R_DATA4_Pos
 (0U)

	)

5957 
	#CAN_TDH1R_DATA4_Msk
 (0xFFUL << 
CAN_TDH1R_DATA4_Pos
Ë

	)

5958 
	#CAN_TDH1R_DATA4
 
CAN_TDH1R_DATA4_Msk


	)

5959 
	#CAN_TDH1R_DATA5_Pos
 (8U)

	)

5960 
	#CAN_TDH1R_DATA5_Msk
 (0xFFUL << 
CAN_TDH1R_DATA5_Pos
Ë

	)

5961 
	#CAN_TDH1R_DATA5
 
CAN_TDH1R_DATA5_Msk


	)

5962 
	#CAN_TDH1R_DATA6_Pos
 (16U)

	)

5963 
	#CAN_TDH1R_DATA6_Msk
 (0xFFUL << 
CAN_TDH1R_DATA6_Pos
Ë

	)

5964 
	#CAN_TDH1R_DATA6
 
CAN_TDH1R_DATA6_Msk


	)

5965 
	#CAN_TDH1R_DATA7_Pos
 (24U)

	)

5966 
	#CAN_TDH1R_DATA7_Msk
 (0xFFUL << 
CAN_TDH1R_DATA7_Pos
Ë

	)

5967 
	#CAN_TDH1R_DATA7
 
CAN_TDH1R_DATA7_Msk


	)

5970 
	#CAN_TI2R_TXRQ_Pos
 (0U)

	)

5971 
	#CAN_TI2R_TXRQ_Msk
 (0x1UL << 
CAN_TI2R_TXRQ_Pos
Ë

	)

5972 
	#CAN_TI2R_TXRQ
 
CAN_TI2R_TXRQ_Msk


	)

5973 
	#CAN_TI2R_RTR_Pos
 (1U)

	)

5974 
	#CAN_TI2R_RTR_Msk
 (0x1UL << 
CAN_TI2R_RTR_Pos
Ë

	)

5975 
	#CAN_TI2R_RTR
 
CAN_TI2R_RTR_Msk


	)

5976 
	#CAN_TI2R_IDE_Pos
 (2U)

	)

5977 
	#CAN_TI2R_IDE_Msk
 (0x1UL << 
CAN_TI2R_IDE_Pos
Ë

	)

5978 
	#CAN_TI2R_IDE
 
CAN_TI2R_IDE_Msk


	)

5979 
	#CAN_TI2R_EXID_Pos
 (3U)

	)

5980 
	#CAN_TI2R_EXID_Msk
 (0x3FFFFUL << 
CAN_TI2R_EXID_Pos
Ë

	)

5981 
	#CAN_TI2R_EXID
 
CAN_TI2R_EXID_Msk


	)

5982 
	#CAN_TI2R_STID_Pos
 (21U)

	)

5983 
	#CAN_TI2R_STID_Msk
 (0x7FFUL << 
CAN_TI2R_STID_Pos
Ë

	)

5984 
	#CAN_TI2R_STID
 
CAN_TI2R_STID_Msk


	)

5987 
	#CAN_TDT2R_DLC_Pos
 (0U)

	)

5988 
	#CAN_TDT2R_DLC_Msk
 (0xFUL << 
CAN_TDT2R_DLC_Pos
Ë

	)

5989 
	#CAN_TDT2R_DLC
 
CAN_TDT2R_DLC_Msk


	)

5990 
	#CAN_TDT2R_TGT_Pos
 (8U)

	)

5991 
	#CAN_TDT2R_TGT_Msk
 (0x1UL << 
CAN_TDT2R_TGT_Pos
Ë

	)

5992 
	#CAN_TDT2R_TGT
 
CAN_TDT2R_TGT_Msk


	)

5993 
	#CAN_TDT2R_TIME_Pos
 (16U)

	)

5994 
	#CAN_TDT2R_TIME_Msk
 (0xFFFFUL << 
CAN_TDT2R_TIME_Pos
Ë

	)

5995 
	#CAN_TDT2R_TIME
 
CAN_TDT2R_TIME_Msk


	)

5998 
	#CAN_TDL2R_DATA0_Pos
 (0U)

	)

5999 
	#CAN_TDL2R_DATA0_Msk
 (0xFFUL << 
CAN_TDL2R_DATA0_Pos
Ë

	)

6000 
	#CAN_TDL2R_DATA0
 
CAN_TDL2R_DATA0_Msk


	)

6001 
	#CAN_TDL2R_DATA1_Pos
 (8U)

	)

6002 
	#CAN_TDL2R_DATA1_Msk
 (0xFFUL << 
CAN_TDL2R_DATA1_Pos
Ë

	)

6003 
	#CAN_TDL2R_DATA1
 
CAN_TDL2R_DATA1_Msk


	)

6004 
	#CAN_TDL2R_DATA2_Pos
 (16U)

	)

6005 
	#CAN_TDL2R_DATA2_Msk
 (0xFFUL << 
CAN_TDL2R_DATA2_Pos
Ë

	)

6006 
	#CAN_TDL2R_DATA2
 
CAN_TDL2R_DATA2_Msk


	)

6007 
	#CAN_TDL2R_DATA3_Pos
 (24U)

	)

6008 
	#CAN_TDL2R_DATA3_Msk
 (0xFFUL << 
CAN_TDL2R_DATA3_Pos
Ë

	)

6009 
	#CAN_TDL2R_DATA3
 
CAN_TDL2R_DATA3_Msk


	)

6012 
	#CAN_TDH2R_DATA4_Pos
 (0U)

	)

6013 
	#CAN_TDH2R_DATA4_Msk
 (0xFFUL << 
CAN_TDH2R_DATA4_Pos
Ë

	)

6014 
	#CAN_TDH2R_DATA4
 
CAN_TDH2R_DATA4_Msk


	)

6015 
	#CAN_TDH2R_DATA5_Pos
 (8U)

	)

6016 
	#CAN_TDH2R_DATA5_Msk
 (0xFFUL << 
CAN_TDH2R_DATA5_Pos
Ë

	)

6017 
	#CAN_TDH2R_DATA5
 
CAN_TDH2R_DATA5_Msk


	)

6018 
	#CAN_TDH2R_DATA6_Pos
 (16U)

	)

6019 
	#CAN_TDH2R_DATA6_Msk
 (0xFFUL << 
CAN_TDH2R_DATA6_Pos
Ë

	)

6020 
	#CAN_TDH2R_DATA6
 
CAN_TDH2R_DATA6_Msk


	)

6021 
	#CAN_TDH2R_DATA7_Pos
 (24U)

	)

6022 
	#CAN_TDH2R_DATA7_Msk
 (0xFFUL << 
CAN_TDH2R_DATA7_Pos
Ë

	)

6023 
	#CAN_TDH2R_DATA7
 
CAN_TDH2R_DATA7_Msk


	)

6026 
	#CAN_RI0R_RTR_Pos
 (1U)

	)

6027 
	#CAN_RI0R_RTR_Msk
 (0x1UL << 
CAN_RI0R_RTR_Pos
Ë

	)

6028 
	#CAN_RI0R_RTR
 
CAN_RI0R_RTR_Msk


	)

6029 
	#CAN_RI0R_IDE_Pos
 (2U)

	)

6030 
	#CAN_RI0R_IDE_Msk
 (0x1UL << 
CAN_RI0R_IDE_Pos
Ë

	)

6031 
	#CAN_RI0R_IDE
 
CAN_RI0R_IDE_Msk


	)

6032 
	#CAN_RI0R_EXID_Pos
 (3U)

	)

6033 
	#CAN_RI0R_EXID_Msk
 (0x3FFFFUL << 
CAN_RI0R_EXID_Pos
Ë

	)

6034 
	#CAN_RI0R_EXID
 
CAN_RI0R_EXID_Msk


	)

6035 
	#CAN_RI0R_STID_Pos
 (21U)

	)

6036 
	#CAN_RI0R_STID_Msk
 (0x7FFUL << 
CAN_RI0R_STID_Pos
Ë

	)

6037 
	#CAN_RI0R_STID
 
CAN_RI0R_STID_Msk


	)

6040 
	#CAN_RDT0R_DLC_Pos
 (0U)

	)

6041 
	#CAN_RDT0R_DLC_Msk
 (0xFUL << 
CAN_RDT0R_DLC_Pos
Ë

	)

6042 
	#CAN_RDT0R_DLC
 
CAN_RDT0R_DLC_Msk


	)

6043 
	#CAN_RDT0R_FMI_Pos
 (8U)

	)

6044 
	#CAN_RDT0R_FMI_Msk
 (0xFFUL << 
CAN_RDT0R_FMI_Pos
Ë

	)

6045 
	#CAN_RDT0R_FMI
 
CAN_RDT0R_FMI_Msk


	)

6046 
	#CAN_RDT0R_TIME_Pos
 (16U)

	)

6047 
	#CAN_RDT0R_TIME_Msk
 (0xFFFFUL << 
CAN_RDT0R_TIME_Pos
Ë

	)

6048 
	#CAN_RDT0R_TIME
 
CAN_RDT0R_TIME_Msk


	)

6051 
	#CAN_RDL0R_DATA0_Pos
 (0U)

	)

6052 
	#CAN_RDL0R_DATA0_Msk
 (0xFFUL << 
CAN_RDL0R_DATA0_Pos
Ë

	)

6053 
	#CAN_RDL0R_DATA0
 
CAN_RDL0R_DATA0_Msk


	)

6054 
	#CAN_RDL0R_DATA1_Pos
 (8U)

	)

6055 
	#CAN_RDL0R_DATA1_Msk
 (0xFFUL << 
CAN_RDL0R_DATA1_Pos
Ë

	)

6056 
	#CAN_RDL0R_DATA1
 
CAN_RDL0R_DATA1_Msk


	)

6057 
	#CAN_RDL0R_DATA2_Pos
 (16U)

	)

6058 
	#CAN_RDL0R_DATA2_Msk
 (0xFFUL << 
CAN_RDL0R_DATA2_Pos
Ë

	)

6059 
	#CAN_RDL0R_DATA2
 
CAN_RDL0R_DATA2_Msk


	)

6060 
	#CAN_RDL0R_DATA3_Pos
 (24U)

	)

6061 
	#CAN_RDL0R_DATA3_Msk
 (0xFFUL << 
CAN_RDL0R_DATA3_Pos
Ë

	)

6062 
	#CAN_RDL0R_DATA3
 
CAN_RDL0R_DATA3_Msk


	)

6065 
	#CAN_RDH0R_DATA4_Pos
 (0U)

	)

6066 
	#CAN_RDH0R_DATA4_Msk
 (0xFFUL << 
CAN_RDH0R_DATA4_Pos
Ë

	)

6067 
	#CAN_RDH0R_DATA4
 
CAN_RDH0R_DATA4_Msk


	)

6068 
	#CAN_RDH0R_DATA5_Pos
 (8U)

	)

6069 
	#CAN_RDH0R_DATA5_Msk
 (0xFFUL << 
CAN_RDH0R_DATA5_Pos
Ë

	)

6070 
	#CAN_RDH0R_DATA5
 
CAN_RDH0R_DATA5_Msk


	)

6071 
	#CAN_RDH0R_DATA6_Pos
 (16U)

	)

6072 
	#CAN_RDH0R_DATA6_Msk
 (0xFFUL << 
CAN_RDH0R_DATA6_Pos
Ë

	)

6073 
	#CAN_RDH0R_DATA6
 
CAN_RDH0R_DATA6_Msk


	)

6074 
	#CAN_RDH0R_DATA7_Pos
 (24U)

	)

6075 
	#CAN_RDH0R_DATA7_Msk
 (0xFFUL << 
CAN_RDH0R_DATA7_Pos
Ë

	)

6076 
	#CAN_RDH0R_DATA7
 
CAN_RDH0R_DATA7_Msk


	)

6079 
	#CAN_RI1R_RTR_Pos
 (1U)

	)

6080 
	#CAN_RI1R_RTR_Msk
 (0x1UL << 
CAN_RI1R_RTR_Pos
Ë

	)

6081 
	#CAN_RI1R_RTR
 
CAN_RI1R_RTR_Msk


	)

6082 
	#CAN_RI1R_IDE_Pos
 (2U)

	)

6083 
	#CAN_RI1R_IDE_Msk
 (0x1UL << 
CAN_RI1R_IDE_Pos
Ë

	)

6084 
	#CAN_RI1R_IDE
 
CAN_RI1R_IDE_Msk


	)

6085 
	#CAN_RI1R_EXID_Pos
 (3U)

	)

6086 
	#CAN_RI1R_EXID_Msk
 (0x3FFFFUL << 
CAN_RI1R_EXID_Pos
Ë

	)

6087 
	#CAN_RI1R_EXID
 
CAN_RI1R_EXID_Msk


	)

6088 
	#CAN_RI1R_STID_Pos
 (21U)

	)

6089 
	#CAN_RI1R_STID_Msk
 (0x7FFUL << 
CAN_RI1R_STID_Pos
Ë

	)

6090 
	#CAN_RI1R_STID
 
CAN_RI1R_STID_Msk


	)

6093 
	#CAN_RDT1R_DLC_Pos
 (0U)

	)

6094 
	#CAN_RDT1R_DLC_Msk
 (0xFUL << 
CAN_RDT1R_DLC_Pos
Ë

	)

6095 
	#CAN_RDT1R_DLC
 
CAN_RDT1R_DLC_Msk


	)

6096 
	#CAN_RDT1R_FMI_Pos
 (8U)

	)

6097 
	#CAN_RDT1R_FMI_Msk
 (0xFFUL << 
CAN_RDT1R_FMI_Pos
Ë

	)

6098 
	#CAN_RDT1R_FMI
 
CAN_RDT1R_FMI_Msk


	)

6099 
	#CAN_RDT1R_TIME_Pos
 (16U)

	)

6100 
	#CAN_RDT1R_TIME_Msk
 (0xFFFFUL << 
CAN_RDT1R_TIME_Pos
Ë

	)

6101 
	#CAN_RDT1R_TIME
 
CAN_RDT1R_TIME_Msk


	)

6104 
	#CAN_RDL1R_DATA0_Pos
 (0U)

	)

6105 
	#CAN_RDL1R_DATA0_Msk
 (0xFFUL << 
CAN_RDL1R_DATA0_Pos
Ë

	)

6106 
	#CAN_RDL1R_DATA0
 
CAN_RDL1R_DATA0_Msk


	)

6107 
	#CAN_RDL1R_DATA1_Pos
 (8U)

	)

6108 
	#CAN_RDL1R_DATA1_Msk
 (0xFFUL << 
CAN_RDL1R_DATA1_Pos
Ë

	)

6109 
	#CAN_RDL1R_DATA1
 
CAN_RDL1R_DATA1_Msk


	)

6110 
	#CAN_RDL1R_DATA2_Pos
 (16U)

	)

6111 
	#CAN_RDL1R_DATA2_Msk
 (0xFFUL << 
CAN_RDL1R_DATA2_Pos
Ë

	)

6112 
	#CAN_RDL1R_DATA2
 
CAN_RDL1R_DATA2_Msk


	)

6113 
	#CAN_RDL1R_DATA3_Pos
 (24U)

	)

6114 
	#CAN_RDL1R_DATA3_Msk
 (0xFFUL << 
CAN_RDL1R_DATA3_Pos
Ë

	)

6115 
	#CAN_RDL1R_DATA3
 
CAN_RDL1R_DATA3_Msk


	)

6118 
	#CAN_RDH1R_DATA4_Pos
 (0U)

	)

6119 
	#CAN_RDH1R_DATA4_Msk
 (0xFFUL << 
CAN_RDH1R_DATA4_Pos
Ë

	)

6120 
	#CAN_RDH1R_DATA4
 
CAN_RDH1R_DATA4_Msk


	)

6121 
	#CAN_RDH1R_DATA5_Pos
 (8U)

	)

6122 
	#CAN_RDH1R_DATA5_Msk
 (0xFFUL << 
CAN_RDH1R_DATA5_Pos
Ë

	)

6123 
	#CAN_RDH1R_DATA5
 
CAN_RDH1R_DATA5_Msk


	)

6124 
	#CAN_RDH1R_DATA6_Pos
 (16U)

	)

6125 
	#CAN_RDH1R_DATA6_Msk
 (0xFFUL << 
CAN_RDH1R_DATA6_Pos
Ë

	)

6126 
	#CAN_RDH1R_DATA6
 
CAN_RDH1R_DATA6_Msk


	)

6127 
	#CAN_RDH1R_DATA7_Pos
 (24U)

	)

6128 
	#CAN_RDH1R_DATA7_Msk
 (0xFFUL << 
CAN_RDH1R_DATA7_Pos
Ë

	)

6129 
	#CAN_RDH1R_DATA7
 
CAN_RDH1R_DATA7_Msk


	)

6133 
	#CAN_FMR_FINIT_Pos
 (0U)

	)

6134 
	#CAN_FMR_FINIT_Msk
 (0x1UL << 
CAN_FMR_FINIT_Pos
Ë

	)

6135 
	#CAN_FMR_FINIT
 
CAN_FMR_FINIT_Msk


	)

6136 
	#CAN_FMR_CAN2SB_Pos
 (8U)

	)

6137 
	#CAN_FMR_CAN2SB_Msk
 (0x3FUL << 
CAN_FMR_CAN2SB_Pos
Ë

	)

6138 
	#CAN_FMR_CAN2SB
 
CAN_FMR_CAN2SB_Msk


	)

6141 
	#CAN_FM1R_FBM_Pos
 (0U)

	)

6142 
	#CAN_FM1R_FBM_Msk
 (0x3FFFUL << 
CAN_FM1R_FBM_Pos
Ë

	)

6143 
	#CAN_FM1R_FBM
 
CAN_FM1R_FBM_Msk


	)

6144 
	#CAN_FM1R_FBM0_Pos
 (0U)

	)

6145 
	#CAN_FM1R_FBM0_Msk
 (0x1UL << 
CAN_FM1R_FBM0_Pos
Ë

	)

6146 
	#CAN_FM1R_FBM0
 
CAN_FM1R_FBM0_Msk


	)

6147 
	#CAN_FM1R_FBM1_Pos
 (1U)

	)

6148 
	#CAN_FM1R_FBM1_Msk
 (0x1UL << 
CAN_FM1R_FBM1_Pos
Ë

	)

6149 
	#CAN_FM1R_FBM1
 
CAN_FM1R_FBM1_Msk


	)

6150 
	#CAN_FM1R_FBM2_Pos
 (2U)

	)

6151 
	#CAN_FM1R_FBM2_Msk
 (0x1UL << 
CAN_FM1R_FBM2_Pos
Ë

	)

6152 
	#CAN_FM1R_FBM2
 
CAN_FM1R_FBM2_Msk


	)

6153 
	#CAN_FM1R_FBM3_Pos
 (3U)

	)

6154 
	#CAN_FM1R_FBM3_Msk
 (0x1UL << 
CAN_FM1R_FBM3_Pos
Ë

	)

6155 
	#CAN_FM1R_FBM3
 
CAN_FM1R_FBM3_Msk


	)

6156 
	#CAN_FM1R_FBM4_Pos
 (4U)

	)

6157 
	#CAN_FM1R_FBM4_Msk
 (0x1UL << 
CAN_FM1R_FBM4_Pos
Ë

	)

6158 
	#CAN_FM1R_FBM4
 
CAN_FM1R_FBM4_Msk


	)

6159 
	#CAN_FM1R_FBM5_Pos
 (5U)

	)

6160 
	#CAN_FM1R_FBM5_Msk
 (0x1UL << 
CAN_FM1R_FBM5_Pos
Ë

	)

6161 
	#CAN_FM1R_FBM5
 
CAN_FM1R_FBM5_Msk


	)

6162 
	#CAN_FM1R_FBM6_Pos
 (6U)

	)

6163 
	#CAN_FM1R_FBM6_Msk
 (0x1UL << 
CAN_FM1R_FBM6_Pos
Ë

	)

6164 
	#CAN_FM1R_FBM6
 
CAN_FM1R_FBM6_Msk


	)

6165 
	#CAN_FM1R_FBM7_Pos
 (7U)

	)

6166 
	#CAN_FM1R_FBM7_Msk
 (0x1UL << 
CAN_FM1R_FBM7_Pos
Ë

	)

6167 
	#CAN_FM1R_FBM7
 
CAN_FM1R_FBM7_Msk


	)

6168 
	#CAN_FM1R_FBM8_Pos
 (8U)

	)

6169 
	#CAN_FM1R_FBM8_Msk
 (0x1UL << 
CAN_FM1R_FBM8_Pos
Ë

	)

6170 
	#CAN_FM1R_FBM8
 
CAN_FM1R_FBM8_Msk


	)

6171 
	#CAN_FM1R_FBM9_Pos
 (9U)

	)

6172 
	#CAN_FM1R_FBM9_Msk
 (0x1UL << 
CAN_FM1R_FBM9_Pos
Ë

	)

6173 
	#CAN_FM1R_FBM9
 
CAN_FM1R_FBM9_Msk


	)

6174 
	#CAN_FM1R_FBM10_Pos
 (10U)

	)

6175 
	#CAN_FM1R_FBM10_Msk
 (0x1UL << 
CAN_FM1R_FBM10_Pos
Ë

	)

6176 
	#CAN_FM1R_FBM10
 
CAN_FM1R_FBM10_Msk


	)

6177 
	#CAN_FM1R_FBM11_Pos
 (11U)

	)

6178 
	#CAN_FM1R_FBM11_Msk
 (0x1UL << 
CAN_FM1R_FBM11_Pos
Ë

	)

6179 
	#CAN_FM1R_FBM11
 
CAN_FM1R_FBM11_Msk


	)

6180 
	#CAN_FM1R_FBM12_Pos
 (12U)

	)

6181 
	#CAN_FM1R_FBM12_Msk
 (0x1UL << 
CAN_FM1R_FBM12_Pos
Ë

	)

6182 
	#CAN_FM1R_FBM12
 
CAN_FM1R_FBM12_Msk


	)

6183 
	#CAN_FM1R_FBM13_Pos
 (13U)

	)

6184 
	#CAN_FM1R_FBM13_Msk
 (0x1UL << 
CAN_FM1R_FBM13_Pos
Ë

	)

6185 
	#CAN_FM1R_FBM13
 
CAN_FM1R_FBM13_Msk


	)

6188 
	#CAN_FS1R_FSC_Pos
 (0U)

	)

6189 
	#CAN_FS1R_FSC_Msk
 (0x3FFFUL << 
CAN_FS1R_FSC_Pos
Ë

	)

6190 
	#CAN_FS1R_FSC
 
CAN_FS1R_FSC_Msk


	)

6191 
	#CAN_FS1R_FSC0_Pos
 (0U)

	)

6192 
	#CAN_FS1R_FSC0_Msk
 (0x1UL << 
CAN_FS1R_FSC0_Pos
Ë

	)

6193 
	#CAN_FS1R_FSC0
 
CAN_FS1R_FSC0_Msk


	)

6194 
	#CAN_FS1R_FSC1_Pos
 (1U)

	)

6195 
	#CAN_FS1R_FSC1_Msk
 (0x1UL << 
CAN_FS1R_FSC1_Pos
Ë

	)

6196 
	#CAN_FS1R_FSC1
 
CAN_FS1R_FSC1_Msk


	)

6197 
	#CAN_FS1R_FSC2_Pos
 (2U)

	)

6198 
	#CAN_FS1R_FSC2_Msk
 (0x1UL << 
CAN_FS1R_FSC2_Pos
Ë

	)

6199 
	#CAN_FS1R_FSC2
 
CAN_FS1R_FSC2_Msk


	)

6200 
	#CAN_FS1R_FSC3_Pos
 (3U)

	)

6201 
	#CAN_FS1R_FSC3_Msk
 (0x1UL << 
CAN_FS1R_FSC3_Pos
Ë

	)

6202 
	#CAN_FS1R_FSC3
 
CAN_FS1R_FSC3_Msk


	)

6203 
	#CAN_FS1R_FSC4_Pos
 (4U)

	)

6204 
	#CAN_FS1R_FSC4_Msk
 (0x1UL << 
CAN_FS1R_FSC4_Pos
Ë

	)

6205 
	#CAN_FS1R_FSC4
 
CAN_FS1R_FSC4_Msk


	)

6206 
	#CAN_FS1R_FSC5_Pos
 (5U)

	)

6207 
	#CAN_FS1R_FSC5_Msk
 (0x1UL << 
CAN_FS1R_FSC5_Pos
Ë

	)

6208 
	#CAN_FS1R_FSC5
 
CAN_FS1R_FSC5_Msk


	)

6209 
	#CAN_FS1R_FSC6_Pos
 (6U)

	)

6210 
	#CAN_FS1R_FSC6_Msk
 (0x1UL << 
CAN_FS1R_FSC6_Pos
Ë

	)

6211 
	#CAN_FS1R_FSC6
 
CAN_FS1R_FSC6_Msk


	)

6212 
	#CAN_FS1R_FSC7_Pos
 (7U)

	)

6213 
	#CAN_FS1R_FSC7_Msk
 (0x1UL << 
CAN_FS1R_FSC7_Pos
Ë

	)

6214 
	#CAN_FS1R_FSC7
 
CAN_FS1R_FSC7_Msk


	)

6215 
	#CAN_FS1R_FSC8_Pos
 (8U)

	)

6216 
	#CAN_FS1R_FSC8_Msk
 (0x1UL << 
CAN_FS1R_FSC8_Pos
Ë

	)

6217 
	#CAN_FS1R_FSC8
 
CAN_FS1R_FSC8_Msk


	)

6218 
	#CAN_FS1R_FSC9_Pos
 (9U)

	)

6219 
	#CAN_FS1R_FSC9_Msk
 (0x1UL << 
CAN_FS1R_FSC9_Pos
Ë

	)

6220 
	#CAN_FS1R_FSC9
 
CAN_FS1R_FSC9_Msk


	)

6221 
	#CAN_FS1R_FSC10_Pos
 (10U)

	)

6222 
	#CAN_FS1R_FSC10_Msk
 (0x1UL << 
CAN_FS1R_FSC10_Pos
Ë

	)

6223 
	#CAN_FS1R_FSC10
 
CAN_FS1R_FSC10_Msk


	)

6224 
	#CAN_FS1R_FSC11_Pos
 (11U)

	)

6225 
	#CAN_FS1R_FSC11_Msk
 (0x1UL << 
CAN_FS1R_FSC11_Pos
Ë

	)

6226 
	#CAN_FS1R_FSC11
 
CAN_FS1R_FSC11_Msk


	)

6227 
	#CAN_FS1R_FSC12_Pos
 (12U)

	)

6228 
	#CAN_FS1R_FSC12_Msk
 (0x1UL << 
CAN_FS1R_FSC12_Pos
Ë

	)

6229 
	#CAN_FS1R_FSC12
 
CAN_FS1R_FSC12_Msk


	)

6230 
	#CAN_FS1R_FSC13_Pos
 (13U)

	)

6231 
	#CAN_FS1R_FSC13_Msk
 (0x1UL << 
CAN_FS1R_FSC13_Pos
Ë

	)

6232 
	#CAN_FS1R_FSC13
 
CAN_FS1R_FSC13_Msk


	)

6235 
	#CAN_FFA1R_FFA_Pos
 (0U)

	)

6236 
	#CAN_FFA1R_FFA_Msk
 (0x3FFFUL << 
CAN_FFA1R_FFA_Pos
Ë

	)

6237 
	#CAN_FFA1R_FFA
 
CAN_FFA1R_FFA_Msk


	)

6238 
	#CAN_FFA1R_FFA0_Pos
 (0U)

	)

6239 
	#CAN_FFA1R_FFA0_Msk
 (0x1UL << 
CAN_FFA1R_FFA0_Pos
Ë

	)

6240 
	#CAN_FFA1R_FFA0
 
CAN_FFA1R_FFA0_Msk


	)

6241 
	#CAN_FFA1R_FFA1_Pos
 (1U)

	)

6242 
	#CAN_FFA1R_FFA1_Msk
 (0x1UL << 
CAN_FFA1R_FFA1_Pos
Ë

	)

6243 
	#CAN_FFA1R_FFA1
 
CAN_FFA1R_FFA1_Msk


	)

6244 
	#CAN_FFA1R_FFA2_Pos
 (2U)

	)

6245 
	#CAN_FFA1R_FFA2_Msk
 (0x1UL << 
CAN_FFA1R_FFA2_Pos
Ë

	)

6246 
	#CAN_FFA1R_FFA2
 
CAN_FFA1R_FFA2_Msk


	)

6247 
	#CAN_FFA1R_FFA3_Pos
 (3U)

	)

6248 
	#CAN_FFA1R_FFA3_Msk
 (0x1UL << 
CAN_FFA1R_FFA3_Pos
Ë

	)

6249 
	#CAN_FFA1R_FFA3
 
CAN_FFA1R_FFA3_Msk


	)

6250 
	#CAN_FFA1R_FFA4_Pos
 (4U)

	)

6251 
	#CAN_FFA1R_FFA4_Msk
 (0x1UL << 
CAN_FFA1R_FFA4_Pos
Ë

	)

6252 
	#CAN_FFA1R_FFA4
 
CAN_FFA1R_FFA4_Msk


	)

6253 
	#CAN_FFA1R_FFA5_Pos
 (5U)

	)

6254 
	#CAN_FFA1R_FFA5_Msk
 (0x1UL << 
CAN_FFA1R_FFA5_Pos
Ë

	)

6255 
	#CAN_FFA1R_FFA5
 
CAN_FFA1R_FFA5_Msk


	)

6256 
	#CAN_FFA1R_FFA6_Pos
 (6U)

	)

6257 
	#CAN_FFA1R_FFA6_Msk
 (0x1UL << 
CAN_FFA1R_FFA6_Pos
Ë

	)

6258 
	#CAN_FFA1R_FFA6
 
CAN_FFA1R_FFA6_Msk


	)

6259 
	#CAN_FFA1R_FFA7_Pos
 (7U)

	)

6260 
	#CAN_FFA1R_FFA7_Msk
 (0x1UL << 
CAN_FFA1R_FFA7_Pos
Ë

	)

6261 
	#CAN_FFA1R_FFA7
 
CAN_FFA1R_FFA7_Msk


	)

6262 
	#CAN_FFA1R_FFA8_Pos
 (8U)

	)

6263 
	#CAN_FFA1R_FFA8_Msk
 (0x1UL << 
CAN_FFA1R_FFA8_Pos
Ë

	)

6264 
	#CAN_FFA1R_FFA8
 
CAN_FFA1R_FFA8_Msk


	)

6265 
	#CAN_FFA1R_FFA9_Pos
 (9U)

	)

6266 
	#CAN_FFA1R_FFA9_Msk
 (0x1UL << 
CAN_FFA1R_FFA9_Pos
Ë

	)

6267 
	#CAN_FFA1R_FFA9
 
CAN_FFA1R_FFA9_Msk


	)

6268 
	#CAN_FFA1R_FFA10_Pos
 (10U)

	)

6269 
	#CAN_FFA1R_FFA10_Msk
 (0x1UL << 
CAN_FFA1R_FFA10_Pos
Ë

	)

6270 
	#CAN_FFA1R_FFA10
 
CAN_FFA1R_FFA10_Msk


	)

6271 
	#CAN_FFA1R_FFA11_Pos
 (11U)

	)

6272 
	#CAN_FFA1R_FFA11_Msk
 (0x1UL << 
CAN_FFA1R_FFA11_Pos
Ë

	)

6273 
	#CAN_FFA1R_FFA11
 
CAN_FFA1R_FFA11_Msk


	)

6274 
	#CAN_FFA1R_FFA12_Pos
 (12U)

	)

6275 
	#CAN_FFA1R_FFA12_Msk
 (0x1UL << 
CAN_FFA1R_FFA12_Pos
Ë

	)

6276 
	#CAN_FFA1R_FFA12
 
CAN_FFA1R_FFA12_Msk


	)

6277 
	#CAN_FFA1R_FFA13_Pos
 (13U)

	)

6278 
	#CAN_FFA1R_FFA13_Msk
 (0x1UL << 
CAN_FFA1R_FFA13_Pos
Ë

	)

6279 
	#CAN_FFA1R_FFA13
 
CAN_FFA1R_FFA13_Msk


	)

6282 
	#CAN_FA1R_FACT_Pos
 (0U)

	)

6283 
	#CAN_FA1R_FACT_Msk
 (0x3FFFUL << 
CAN_FA1R_FACT_Pos
Ë

	)

6284 
	#CAN_FA1R_FACT
 
CAN_FA1R_FACT_Msk


	)

6285 
	#CAN_FA1R_FACT0_Pos
 (0U)

	)

6286 
	#CAN_FA1R_FACT0_Msk
 (0x1UL << 
CAN_FA1R_FACT0_Pos
Ë

	)

6287 
	#CAN_FA1R_FACT0
 
CAN_FA1R_FACT0_Msk


	)

6288 
	#CAN_FA1R_FACT1_Pos
 (1U)

	)

6289 
	#CAN_FA1R_FACT1_Msk
 (0x1UL << 
CAN_FA1R_FACT1_Pos
Ë

	)

6290 
	#CAN_FA1R_FACT1
 
CAN_FA1R_FACT1_Msk


	)

6291 
	#CAN_FA1R_FACT2_Pos
 (2U)

	)

6292 
	#CAN_FA1R_FACT2_Msk
 (0x1UL << 
CAN_FA1R_FACT2_Pos
Ë

	)

6293 
	#CAN_FA1R_FACT2
 
CAN_FA1R_FACT2_Msk


	)

6294 
	#CAN_FA1R_FACT3_Pos
 (3U)

	)

6295 
	#CAN_FA1R_FACT3_Msk
 (0x1UL << 
CAN_FA1R_FACT3_Pos
Ë

	)

6296 
	#CAN_FA1R_FACT3
 
CAN_FA1R_FACT3_Msk


	)

6297 
	#CAN_FA1R_FACT4_Pos
 (4U)

	)

6298 
	#CAN_FA1R_FACT4_Msk
 (0x1UL << 
CAN_FA1R_FACT4_Pos
Ë

	)

6299 
	#CAN_FA1R_FACT4
 
CAN_FA1R_FACT4_Msk


	)

6300 
	#CAN_FA1R_FACT5_Pos
 (5U)

	)

6301 
	#CAN_FA1R_FACT5_Msk
 (0x1UL << 
CAN_FA1R_FACT5_Pos
Ë

	)

6302 
	#CAN_FA1R_FACT5
 
CAN_FA1R_FACT5_Msk


	)

6303 
	#CAN_FA1R_FACT6_Pos
 (6U)

	)

6304 
	#CAN_FA1R_FACT6_Msk
 (0x1UL << 
CAN_FA1R_FACT6_Pos
Ë

	)

6305 
	#CAN_FA1R_FACT6
 
CAN_FA1R_FACT6_Msk


	)

6306 
	#CAN_FA1R_FACT7_Pos
 (7U)

	)

6307 
	#CAN_FA1R_FACT7_Msk
 (0x1UL << 
CAN_FA1R_FACT7_Pos
Ë

	)

6308 
	#CAN_FA1R_FACT7
 
CAN_FA1R_FACT7_Msk


	)

6309 
	#CAN_FA1R_FACT8_Pos
 (8U)

	)

6310 
	#CAN_FA1R_FACT8_Msk
 (0x1UL << 
CAN_FA1R_FACT8_Pos
Ë

	)

6311 
	#CAN_FA1R_FACT8
 
CAN_FA1R_FACT8_Msk


	)

6312 
	#CAN_FA1R_FACT9_Pos
 (9U)

	)

6313 
	#CAN_FA1R_FACT9_Msk
 (0x1UL << 
CAN_FA1R_FACT9_Pos
Ë

	)

6314 
	#CAN_FA1R_FACT9
 
CAN_FA1R_FACT9_Msk


	)

6315 
	#CAN_FA1R_FACT10_Pos
 (10U)

	)

6316 
	#CAN_FA1R_FACT10_Msk
 (0x1UL << 
CAN_FA1R_FACT10_Pos
Ë

	)

6317 
	#CAN_FA1R_FACT10
 
CAN_FA1R_FACT10_Msk


	)

6318 
	#CAN_FA1R_FACT11_Pos
 (11U)

	)

6319 
	#CAN_FA1R_FACT11_Msk
 (0x1UL << 
CAN_FA1R_FACT11_Pos
Ë

	)

6320 
	#CAN_FA1R_FACT11
 
CAN_FA1R_FACT11_Msk


	)

6321 
	#CAN_FA1R_FACT12_Pos
 (12U)

	)

6322 
	#CAN_FA1R_FACT12_Msk
 (0x1UL << 
CAN_FA1R_FACT12_Pos
Ë

	)

6323 
	#CAN_FA1R_FACT12
 
CAN_FA1R_FACT12_Msk


	)

6324 
	#CAN_FA1R_FACT13_Pos
 (13U)

	)

6325 
	#CAN_FA1R_FACT13_Msk
 (0x1UL << 
CAN_FA1R_FACT13_Pos
Ë

	)

6326 
	#CAN_FA1R_FACT13
 
CAN_FA1R_FACT13_Msk


	)

6329 
	#CAN_F0R1_FB0_Pos
 (0U)

	)

6330 
	#CAN_F0R1_FB0_Msk
 (0x1UL << 
CAN_F0R1_FB0_Pos
Ë

	)

6331 
	#CAN_F0R1_FB0
 
CAN_F0R1_FB0_Msk


	)

6332 
	#CAN_F0R1_FB1_Pos
 (1U)

	)

6333 
	#CAN_F0R1_FB1_Msk
 (0x1UL << 
CAN_F0R1_FB1_Pos
Ë

	)

6334 
	#CAN_F0R1_FB1
 
CAN_F0R1_FB1_Msk


	)

6335 
	#CAN_F0R1_FB2_Pos
 (2U)

	)

6336 
	#CAN_F0R1_FB2_Msk
 (0x1UL << 
CAN_F0R1_FB2_Pos
Ë

	)

6337 
	#CAN_F0R1_FB2
 
CAN_F0R1_FB2_Msk


	)

6338 
	#CAN_F0R1_FB3_Pos
 (3U)

	)

6339 
	#CAN_F0R1_FB3_Msk
 (0x1UL << 
CAN_F0R1_FB3_Pos
Ë

	)

6340 
	#CAN_F0R1_FB3
 
CAN_F0R1_FB3_Msk


	)

6341 
	#CAN_F0R1_FB4_Pos
 (4U)

	)

6342 
	#CAN_F0R1_FB4_Msk
 (0x1UL << 
CAN_F0R1_FB4_Pos
Ë

	)

6343 
	#CAN_F0R1_FB4
 
CAN_F0R1_FB4_Msk


	)

6344 
	#CAN_F0R1_FB5_Pos
 (5U)

	)

6345 
	#CAN_F0R1_FB5_Msk
 (0x1UL << 
CAN_F0R1_FB5_Pos
Ë

	)

6346 
	#CAN_F0R1_FB5
 
CAN_F0R1_FB5_Msk


	)

6347 
	#CAN_F0R1_FB6_Pos
 (6U)

	)

6348 
	#CAN_F0R1_FB6_Msk
 (0x1UL << 
CAN_F0R1_FB6_Pos
Ë

	)

6349 
	#CAN_F0R1_FB6
 
CAN_F0R1_FB6_Msk


	)

6350 
	#CAN_F0R1_FB7_Pos
 (7U)

	)

6351 
	#CAN_F0R1_FB7_Msk
 (0x1UL << 
CAN_F0R1_FB7_Pos
Ë

	)

6352 
	#CAN_F0R1_FB7
 
CAN_F0R1_FB7_Msk


	)

6353 
	#CAN_F0R1_FB8_Pos
 (8U)

	)

6354 
	#CAN_F0R1_FB8_Msk
 (0x1UL << 
CAN_F0R1_FB8_Pos
Ë

	)

6355 
	#CAN_F0R1_FB8
 
CAN_F0R1_FB8_Msk


	)

6356 
	#CAN_F0R1_FB9_Pos
 (9U)

	)

6357 
	#CAN_F0R1_FB9_Msk
 (0x1UL << 
CAN_F0R1_FB9_Pos
Ë

	)

6358 
	#CAN_F0R1_FB9
 
CAN_F0R1_FB9_Msk


	)

6359 
	#CAN_F0R1_FB10_Pos
 (10U)

	)

6360 
	#CAN_F0R1_FB10_Msk
 (0x1UL << 
CAN_F0R1_FB10_Pos
Ë

	)

6361 
	#CAN_F0R1_FB10
 
CAN_F0R1_FB10_Msk


	)

6362 
	#CAN_F0R1_FB11_Pos
 (11U)

	)

6363 
	#CAN_F0R1_FB11_Msk
 (0x1UL << 
CAN_F0R1_FB11_Pos
Ë

	)

6364 
	#CAN_F0R1_FB11
 
CAN_F0R1_FB11_Msk


	)

6365 
	#CAN_F0R1_FB12_Pos
 (12U)

	)

6366 
	#CAN_F0R1_FB12_Msk
 (0x1UL << 
CAN_F0R1_FB12_Pos
Ë

	)

6367 
	#CAN_F0R1_FB12
 
CAN_F0R1_FB12_Msk


	)

6368 
	#CAN_F0R1_FB13_Pos
 (13U)

	)

6369 
	#CAN_F0R1_FB13_Msk
 (0x1UL << 
CAN_F0R1_FB13_Pos
Ë

	)

6370 
	#CAN_F0R1_FB13
 
CAN_F0R1_FB13_Msk


	)

6371 
	#CAN_F0R1_FB14_Pos
 (14U)

	)

6372 
	#CAN_F0R1_FB14_Msk
 (0x1UL << 
CAN_F0R1_FB14_Pos
Ë

	)

6373 
	#CAN_F0R1_FB14
 
CAN_F0R1_FB14_Msk


	)

6374 
	#CAN_F0R1_FB15_Pos
 (15U)

	)

6375 
	#CAN_F0R1_FB15_Msk
 (0x1UL << 
CAN_F0R1_FB15_Pos
Ë

	)

6376 
	#CAN_F0R1_FB15
 
CAN_F0R1_FB15_Msk


	)

6377 
	#CAN_F0R1_FB16_Pos
 (16U)

	)

6378 
	#CAN_F0R1_FB16_Msk
 (0x1UL << 
CAN_F0R1_FB16_Pos
Ë

	)

6379 
	#CAN_F0R1_FB16
 
CAN_F0R1_FB16_Msk


	)

6380 
	#CAN_F0R1_FB17_Pos
 (17U)

	)

6381 
	#CAN_F0R1_FB17_Msk
 (0x1UL << 
CAN_F0R1_FB17_Pos
Ë

	)

6382 
	#CAN_F0R1_FB17
 
CAN_F0R1_FB17_Msk


	)

6383 
	#CAN_F0R1_FB18_Pos
 (18U)

	)

6384 
	#CAN_F0R1_FB18_Msk
 (0x1UL << 
CAN_F0R1_FB18_Pos
Ë

	)

6385 
	#CAN_F0R1_FB18
 
CAN_F0R1_FB18_Msk


	)

6386 
	#CAN_F0R1_FB19_Pos
 (19U)

	)

6387 
	#CAN_F0R1_FB19_Msk
 (0x1UL << 
CAN_F0R1_FB19_Pos
Ë

	)

6388 
	#CAN_F0R1_FB19
 
CAN_F0R1_FB19_Msk


	)

6389 
	#CAN_F0R1_FB20_Pos
 (20U)

	)

6390 
	#CAN_F0R1_FB20_Msk
 (0x1UL << 
CAN_F0R1_FB20_Pos
Ë

	)

6391 
	#CAN_F0R1_FB20
 
CAN_F0R1_FB20_Msk


	)

6392 
	#CAN_F0R1_FB21_Pos
 (21U)

	)

6393 
	#CAN_F0R1_FB21_Msk
 (0x1UL << 
CAN_F0R1_FB21_Pos
Ë

	)

6394 
	#CAN_F0R1_FB21
 
CAN_F0R1_FB21_Msk


	)

6395 
	#CAN_F0R1_FB22_Pos
 (22U)

	)

6396 
	#CAN_F0R1_FB22_Msk
 (0x1UL << 
CAN_F0R1_FB22_Pos
Ë

	)

6397 
	#CAN_F0R1_FB22
 
CAN_F0R1_FB22_Msk


	)

6398 
	#CAN_F0R1_FB23_Pos
 (23U)

	)

6399 
	#CAN_F0R1_FB23_Msk
 (0x1UL << 
CAN_F0R1_FB23_Pos
Ë

	)

6400 
	#CAN_F0R1_FB23
 
CAN_F0R1_FB23_Msk


	)

6401 
	#CAN_F0R1_FB24_Pos
 (24U)

	)

6402 
	#CAN_F0R1_FB24_Msk
 (0x1UL << 
CAN_F0R1_FB24_Pos
Ë

	)

6403 
	#CAN_F0R1_FB24
 
CAN_F0R1_FB24_Msk


	)

6404 
	#CAN_F0R1_FB25_Pos
 (25U)

	)

6405 
	#CAN_F0R1_FB25_Msk
 (0x1UL << 
CAN_F0R1_FB25_Pos
Ë

	)

6406 
	#CAN_F0R1_FB25
 
CAN_F0R1_FB25_Msk


	)

6407 
	#CAN_F0R1_FB26_Pos
 (26U)

	)

6408 
	#CAN_F0R1_FB26_Msk
 (0x1UL << 
CAN_F0R1_FB26_Pos
Ë

	)

6409 
	#CAN_F0R1_FB26
 
CAN_F0R1_FB26_Msk


	)

6410 
	#CAN_F0R1_FB27_Pos
 (27U)

	)

6411 
	#CAN_F0R1_FB27_Msk
 (0x1UL << 
CAN_F0R1_FB27_Pos
Ë

	)

6412 
	#CAN_F0R1_FB27
 
CAN_F0R1_FB27_Msk


	)

6413 
	#CAN_F0R1_FB28_Pos
 (28U)

	)

6414 
	#CAN_F0R1_FB28_Msk
 (0x1UL << 
CAN_F0R1_FB28_Pos
Ë

	)

6415 
	#CAN_F0R1_FB28
 
CAN_F0R1_FB28_Msk


	)

6416 
	#CAN_F0R1_FB29_Pos
 (29U)

	)

6417 
	#CAN_F0R1_FB29_Msk
 (0x1UL << 
CAN_F0R1_FB29_Pos
Ë

	)

6418 
	#CAN_F0R1_FB29
 
CAN_F0R1_FB29_Msk


	)

6419 
	#CAN_F0R1_FB30_Pos
 (30U)

	)

6420 
	#CAN_F0R1_FB30_Msk
 (0x1UL << 
CAN_F0R1_FB30_Pos
Ë

	)

6421 
	#CAN_F0R1_FB30
 
CAN_F0R1_FB30_Msk


	)

6422 
	#CAN_F0R1_FB31_Pos
 (31U)

	)

6423 
	#CAN_F0R1_FB31_Msk
 (0x1UL << 
CAN_F0R1_FB31_Pos
Ë

	)

6424 
	#CAN_F0R1_FB31
 
CAN_F0R1_FB31_Msk


	)

6427 
	#CAN_F1R1_FB0_Pos
 (0U)

	)

6428 
	#CAN_F1R1_FB0_Msk
 (0x1UL << 
CAN_F1R1_FB0_Pos
Ë

	)

6429 
	#CAN_F1R1_FB0
 
CAN_F1R1_FB0_Msk


	)

6430 
	#CAN_F1R1_FB1_Pos
 (1U)

	)

6431 
	#CAN_F1R1_FB1_Msk
 (0x1UL << 
CAN_F1R1_FB1_Pos
Ë

	)

6432 
	#CAN_F1R1_FB1
 
CAN_F1R1_FB1_Msk


	)

6433 
	#CAN_F1R1_FB2_Pos
 (2U)

	)

6434 
	#CAN_F1R1_FB2_Msk
 (0x1UL << 
CAN_F1R1_FB2_Pos
Ë

	)

6435 
	#CAN_F1R1_FB2
 
CAN_F1R1_FB2_Msk


	)

6436 
	#CAN_F1R1_FB3_Pos
 (3U)

	)

6437 
	#CAN_F1R1_FB3_Msk
 (0x1UL << 
CAN_F1R1_FB3_Pos
Ë

	)

6438 
	#CAN_F1R1_FB3
 
CAN_F1R1_FB3_Msk


	)

6439 
	#CAN_F1R1_FB4_Pos
 (4U)

	)

6440 
	#CAN_F1R1_FB4_Msk
 (0x1UL << 
CAN_F1R1_FB4_Pos
Ë

	)

6441 
	#CAN_F1R1_FB4
 
CAN_F1R1_FB4_Msk


	)

6442 
	#CAN_F1R1_FB5_Pos
 (5U)

	)

6443 
	#CAN_F1R1_FB5_Msk
 (0x1UL << 
CAN_F1R1_FB5_Pos
Ë

	)

6444 
	#CAN_F1R1_FB5
 
CAN_F1R1_FB5_Msk


	)

6445 
	#CAN_F1R1_FB6_Pos
 (6U)

	)

6446 
	#CAN_F1R1_FB6_Msk
 (0x1UL << 
CAN_F1R1_FB6_Pos
Ë

	)

6447 
	#CAN_F1R1_FB6
 
CAN_F1R1_FB6_Msk


	)

6448 
	#CAN_F1R1_FB7_Pos
 (7U)

	)

6449 
	#CAN_F1R1_FB7_Msk
 (0x1UL << 
CAN_F1R1_FB7_Pos
Ë

	)

6450 
	#CAN_F1R1_FB7
 
CAN_F1R1_FB7_Msk


	)

6451 
	#CAN_F1R1_FB8_Pos
 (8U)

	)

6452 
	#CAN_F1R1_FB8_Msk
 (0x1UL << 
CAN_F1R1_FB8_Pos
Ë

	)

6453 
	#CAN_F1R1_FB8
 
CAN_F1R1_FB8_Msk


	)

6454 
	#CAN_F1R1_FB9_Pos
 (9U)

	)

6455 
	#CAN_F1R1_FB9_Msk
 (0x1UL << 
CAN_F1R1_FB9_Pos
Ë

	)

6456 
	#CAN_F1R1_FB9
 
CAN_F1R1_FB9_Msk


	)

6457 
	#CAN_F1R1_FB10_Pos
 (10U)

	)

6458 
	#CAN_F1R1_FB10_Msk
 (0x1UL << 
CAN_F1R1_FB10_Pos
Ë

	)

6459 
	#CAN_F1R1_FB10
 
CAN_F1R1_FB10_Msk


	)

6460 
	#CAN_F1R1_FB11_Pos
 (11U)

	)

6461 
	#CAN_F1R1_FB11_Msk
 (0x1UL << 
CAN_F1R1_FB11_Pos
Ë

	)

6462 
	#CAN_F1R1_FB11
 
CAN_F1R1_FB11_Msk


	)

6463 
	#CAN_F1R1_FB12_Pos
 (12U)

	)

6464 
	#CAN_F1R1_FB12_Msk
 (0x1UL << 
CAN_F1R1_FB12_Pos
Ë

	)

6465 
	#CAN_F1R1_FB12
 
CAN_F1R1_FB12_Msk


	)

6466 
	#CAN_F1R1_FB13_Pos
 (13U)

	)

6467 
	#CAN_F1R1_FB13_Msk
 (0x1UL << 
CAN_F1R1_FB13_Pos
Ë

	)

6468 
	#CAN_F1R1_FB13
 
CAN_F1R1_FB13_Msk


	)

6469 
	#CAN_F1R1_FB14_Pos
 (14U)

	)

6470 
	#CAN_F1R1_FB14_Msk
 (0x1UL << 
CAN_F1R1_FB14_Pos
Ë

	)

6471 
	#CAN_F1R1_FB14
 
CAN_F1R1_FB14_Msk


	)

6472 
	#CAN_F1R1_FB15_Pos
 (15U)

	)

6473 
	#CAN_F1R1_FB15_Msk
 (0x1UL << 
CAN_F1R1_FB15_Pos
Ë

	)

6474 
	#CAN_F1R1_FB15
 
CAN_F1R1_FB15_Msk


	)

6475 
	#CAN_F1R1_FB16_Pos
 (16U)

	)

6476 
	#CAN_F1R1_FB16_Msk
 (0x1UL << 
CAN_F1R1_FB16_Pos
Ë

	)

6477 
	#CAN_F1R1_FB16
 
CAN_F1R1_FB16_Msk


	)

6478 
	#CAN_F1R1_FB17_Pos
 (17U)

	)

6479 
	#CAN_F1R1_FB17_Msk
 (0x1UL << 
CAN_F1R1_FB17_Pos
Ë

	)

6480 
	#CAN_F1R1_FB17
 
CAN_F1R1_FB17_Msk


	)

6481 
	#CAN_F1R1_FB18_Pos
 (18U)

	)

6482 
	#CAN_F1R1_FB18_Msk
 (0x1UL << 
CAN_F1R1_FB18_Pos
Ë

	)

6483 
	#CAN_F1R1_FB18
 
CAN_F1R1_FB18_Msk


	)

6484 
	#CAN_F1R1_FB19_Pos
 (19U)

	)

6485 
	#CAN_F1R1_FB19_Msk
 (0x1UL << 
CAN_F1R1_FB19_Pos
Ë

	)

6486 
	#CAN_F1R1_FB19
 
CAN_F1R1_FB19_Msk


	)

6487 
	#CAN_F1R1_FB20_Pos
 (20U)

	)

6488 
	#CAN_F1R1_FB20_Msk
 (0x1UL << 
CAN_F1R1_FB20_Pos
Ë

	)

6489 
	#CAN_F1R1_FB20
 
CAN_F1R1_FB20_Msk


	)

6490 
	#CAN_F1R1_FB21_Pos
 (21U)

	)

6491 
	#CAN_F1R1_FB21_Msk
 (0x1UL << 
CAN_F1R1_FB21_Pos
Ë

	)

6492 
	#CAN_F1R1_FB21
 
CAN_F1R1_FB21_Msk


	)

6493 
	#CAN_F1R1_FB22_Pos
 (22U)

	)

6494 
	#CAN_F1R1_FB22_Msk
 (0x1UL << 
CAN_F1R1_FB22_Pos
Ë

	)

6495 
	#CAN_F1R1_FB22
 
CAN_F1R1_FB22_Msk


	)

6496 
	#CAN_F1R1_FB23_Pos
 (23U)

	)

6497 
	#CAN_F1R1_FB23_Msk
 (0x1UL << 
CAN_F1R1_FB23_Pos
Ë

	)

6498 
	#CAN_F1R1_FB23
 
CAN_F1R1_FB23_Msk


	)

6499 
	#CAN_F1R1_FB24_Pos
 (24U)

	)

6500 
	#CAN_F1R1_FB24_Msk
 (0x1UL << 
CAN_F1R1_FB24_Pos
Ë

	)

6501 
	#CAN_F1R1_FB24
 
CAN_F1R1_FB24_Msk


	)

6502 
	#CAN_F1R1_FB25_Pos
 (25U)

	)

6503 
	#CAN_F1R1_FB25_Msk
 (0x1UL << 
CAN_F1R1_FB25_Pos
Ë

	)

6504 
	#CAN_F1R1_FB25
 
CAN_F1R1_FB25_Msk


	)

6505 
	#CAN_F1R1_FB26_Pos
 (26U)

	)

6506 
	#CAN_F1R1_FB26_Msk
 (0x1UL << 
CAN_F1R1_FB26_Pos
Ë

	)

6507 
	#CAN_F1R1_FB26
 
CAN_F1R1_FB26_Msk


	)

6508 
	#CAN_F1R1_FB27_Pos
 (27U)

	)

6509 
	#CAN_F1R1_FB27_Msk
 (0x1UL << 
CAN_F1R1_FB27_Pos
Ë

	)

6510 
	#CAN_F1R1_FB27
 
CAN_F1R1_FB27_Msk


	)

6511 
	#CAN_F1R1_FB28_Pos
 (28U)

	)

6512 
	#CAN_F1R1_FB28_Msk
 (0x1UL << 
CAN_F1R1_FB28_Pos
Ë

	)

6513 
	#CAN_F1R1_FB28
 
CAN_F1R1_FB28_Msk


	)

6514 
	#CAN_F1R1_FB29_Pos
 (29U)

	)

6515 
	#CAN_F1R1_FB29_Msk
 (0x1UL << 
CAN_F1R1_FB29_Pos
Ë

	)

6516 
	#CAN_F1R1_FB29
 
CAN_F1R1_FB29_Msk


	)

6517 
	#CAN_F1R1_FB30_Pos
 (30U)

	)

6518 
	#CAN_F1R1_FB30_Msk
 (0x1UL << 
CAN_F1R1_FB30_Pos
Ë

	)

6519 
	#CAN_F1R1_FB30
 
CAN_F1R1_FB30_Msk


	)

6520 
	#CAN_F1R1_FB31_Pos
 (31U)

	)

6521 
	#CAN_F1R1_FB31_Msk
 (0x1UL << 
CAN_F1R1_FB31_Pos
Ë

	)

6522 
	#CAN_F1R1_FB31
 
CAN_F1R1_FB31_Msk


	)

6525 
	#CAN_F2R1_FB0_Pos
 (0U)

	)

6526 
	#CAN_F2R1_FB0_Msk
 (0x1UL << 
CAN_F2R1_FB0_Pos
Ë

	)

6527 
	#CAN_F2R1_FB0
 
CAN_F2R1_FB0_Msk


	)

6528 
	#CAN_F2R1_FB1_Pos
 (1U)

	)

6529 
	#CAN_F2R1_FB1_Msk
 (0x1UL << 
CAN_F2R1_FB1_Pos
Ë

	)

6530 
	#CAN_F2R1_FB1
 
CAN_F2R1_FB1_Msk


	)

6531 
	#CAN_F2R1_FB2_Pos
 (2U)

	)

6532 
	#CAN_F2R1_FB2_Msk
 (0x1UL << 
CAN_F2R1_FB2_Pos
Ë

	)

6533 
	#CAN_F2R1_FB2
 
CAN_F2R1_FB2_Msk


	)

6534 
	#CAN_F2R1_FB3_Pos
 (3U)

	)

6535 
	#CAN_F2R1_FB3_Msk
 (0x1UL << 
CAN_F2R1_FB3_Pos
Ë

	)

6536 
	#CAN_F2R1_FB3
 
CAN_F2R1_FB3_Msk


	)

6537 
	#CAN_F2R1_FB4_Pos
 (4U)

	)

6538 
	#CAN_F2R1_FB4_Msk
 (0x1UL << 
CAN_F2R1_FB4_Pos
Ë

	)

6539 
	#CAN_F2R1_FB4
 
CAN_F2R1_FB4_Msk


	)

6540 
	#CAN_F2R1_FB5_Pos
 (5U)

	)

6541 
	#CAN_F2R1_FB5_Msk
 (0x1UL << 
CAN_F2R1_FB5_Pos
Ë

	)

6542 
	#CAN_F2R1_FB5
 
CAN_F2R1_FB5_Msk


	)

6543 
	#CAN_F2R1_FB6_Pos
 (6U)

	)

6544 
	#CAN_F2R1_FB6_Msk
 (0x1UL << 
CAN_F2R1_FB6_Pos
Ë

	)

6545 
	#CAN_F2R1_FB6
 
CAN_F2R1_FB6_Msk


	)

6546 
	#CAN_F2R1_FB7_Pos
 (7U)

	)

6547 
	#CAN_F2R1_FB7_Msk
 (0x1UL << 
CAN_F2R1_FB7_Pos
Ë

	)

6548 
	#CAN_F2R1_FB7
 
CAN_F2R1_FB7_Msk


	)

6549 
	#CAN_F2R1_FB8_Pos
 (8U)

	)

6550 
	#CAN_F2R1_FB8_Msk
 (0x1UL << 
CAN_F2R1_FB8_Pos
Ë

	)

6551 
	#CAN_F2R1_FB8
 
CAN_F2R1_FB8_Msk


	)

6552 
	#CAN_F2R1_FB9_Pos
 (9U)

	)

6553 
	#CAN_F2R1_FB9_Msk
 (0x1UL << 
CAN_F2R1_FB9_Pos
Ë

	)

6554 
	#CAN_F2R1_FB9
 
CAN_F2R1_FB9_Msk


	)

6555 
	#CAN_F2R1_FB10_Pos
 (10U)

	)

6556 
	#CAN_F2R1_FB10_Msk
 (0x1UL << 
CAN_F2R1_FB10_Pos
Ë

	)

6557 
	#CAN_F2R1_FB10
 
CAN_F2R1_FB10_Msk


	)

6558 
	#CAN_F2R1_FB11_Pos
 (11U)

	)

6559 
	#CAN_F2R1_FB11_Msk
 (0x1UL << 
CAN_F2R1_FB11_Pos
Ë

	)

6560 
	#CAN_F2R1_FB11
 
CAN_F2R1_FB11_Msk


	)

6561 
	#CAN_F2R1_FB12_Pos
 (12U)

	)

6562 
	#CAN_F2R1_FB12_Msk
 (0x1UL << 
CAN_F2R1_FB12_Pos
Ë

	)

6563 
	#CAN_F2R1_FB12
 
CAN_F2R1_FB12_Msk


	)

6564 
	#CAN_F2R1_FB13_Pos
 (13U)

	)

6565 
	#CAN_F2R1_FB13_Msk
 (0x1UL << 
CAN_F2R1_FB13_Pos
Ë

	)

6566 
	#CAN_F2R1_FB13
 
CAN_F2R1_FB13_Msk


	)

6567 
	#CAN_F2R1_FB14_Pos
 (14U)

	)

6568 
	#CAN_F2R1_FB14_Msk
 (0x1UL << 
CAN_F2R1_FB14_Pos
Ë

	)

6569 
	#CAN_F2R1_FB14
 
CAN_F2R1_FB14_Msk


	)

6570 
	#CAN_F2R1_FB15_Pos
 (15U)

	)

6571 
	#CAN_F2R1_FB15_Msk
 (0x1UL << 
CAN_F2R1_FB15_Pos
Ë

	)

6572 
	#CAN_F2R1_FB15
 
CAN_F2R1_FB15_Msk


	)

6573 
	#CAN_F2R1_FB16_Pos
 (16U)

	)

6574 
	#CAN_F2R1_FB16_Msk
 (0x1UL << 
CAN_F2R1_FB16_Pos
Ë

	)

6575 
	#CAN_F2R1_FB16
 
CAN_F2R1_FB16_Msk


	)

6576 
	#CAN_F2R1_FB17_Pos
 (17U)

	)

6577 
	#CAN_F2R1_FB17_Msk
 (0x1UL << 
CAN_F2R1_FB17_Pos
Ë

	)

6578 
	#CAN_F2R1_FB17
 
CAN_F2R1_FB17_Msk


	)

6579 
	#CAN_F2R1_FB18_Pos
 (18U)

	)

6580 
	#CAN_F2R1_FB18_Msk
 (0x1UL << 
CAN_F2R1_FB18_Pos
Ë

	)

6581 
	#CAN_F2R1_FB18
 
CAN_F2R1_FB18_Msk


	)

6582 
	#CAN_F2R1_FB19_Pos
 (19U)

	)

6583 
	#CAN_F2R1_FB19_Msk
 (0x1UL << 
CAN_F2R1_FB19_Pos
Ë

	)

6584 
	#CAN_F2R1_FB19
 
CAN_F2R1_FB19_Msk


	)

6585 
	#CAN_F2R1_FB20_Pos
 (20U)

	)

6586 
	#CAN_F2R1_FB20_Msk
 (0x1UL << 
CAN_F2R1_FB20_Pos
Ë

	)

6587 
	#CAN_F2R1_FB20
 
CAN_F2R1_FB20_Msk


	)

6588 
	#CAN_F2R1_FB21_Pos
 (21U)

	)

6589 
	#CAN_F2R1_FB21_Msk
 (0x1UL << 
CAN_F2R1_FB21_Pos
Ë

	)

6590 
	#CAN_F2R1_FB21
 
CAN_F2R1_FB21_Msk


	)

6591 
	#CAN_F2R1_FB22_Pos
 (22U)

	)

6592 
	#CAN_F2R1_FB22_Msk
 (0x1UL << 
CAN_F2R1_FB22_Pos
Ë

	)

6593 
	#CAN_F2R1_FB22
 
CAN_F2R1_FB22_Msk


	)

6594 
	#CAN_F2R1_FB23_Pos
 (23U)

	)

6595 
	#CAN_F2R1_FB23_Msk
 (0x1UL << 
CAN_F2R1_FB23_Pos
Ë

	)

6596 
	#CAN_F2R1_FB23
 
CAN_F2R1_FB23_Msk


	)

6597 
	#CAN_F2R1_FB24_Pos
 (24U)

	)

6598 
	#CAN_F2R1_FB24_Msk
 (0x1UL << 
CAN_F2R1_FB24_Pos
Ë

	)

6599 
	#CAN_F2R1_FB24
 
CAN_F2R1_FB24_Msk


	)

6600 
	#CAN_F2R1_FB25_Pos
 (25U)

	)

6601 
	#CAN_F2R1_FB25_Msk
 (0x1UL << 
CAN_F2R1_FB25_Pos
Ë

	)

6602 
	#CAN_F2R1_FB25
 
CAN_F2R1_FB25_Msk


	)

6603 
	#CAN_F2R1_FB26_Pos
 (26U)

	)

6604 
	#CAN_F2R1_FB26_Msk
 (0x1UL << 
CAN_F2R1_FB26_Pos
Ë

	)

6605 
	#CAN_F2R1_FB26
 
CAN_F2R1_FB26_Msk


	)

6606 
	#CAN_F2R1_FB27_Pos
 (27U)

	)

6607 
	#CAN_F2R1_FB27_Msk
 (0x1UL << 
CAN_F2R1_FB27_Pos
Ë

	)

6608 
	#CAN_F2R1_FB27
 
CAN_F2R1_FB27_Msk


	)

6609 
	#CAN_F2R1_FB28_Pos
 (28U)

	)

6610 
	#CAN_F2R1_FB28_Msk
 (0x1UL << 
CAN_F2R1_FB28_Pos
Ë

	)

6611 
	#CAN_F2R1_FB28
 
CAN_F2R1_FB28_Msk


	)

6612 
	#CAN_F2R1_FB29_Pos
 (29U)

	)

6613 
	#CAN_F2R1_FB29_Msk
 (0x1UL << 
CAN_F2R1_FB29_Pos
Ë

	)

6614 
	#CAN_F2R1_FB29
 
CAN_F2R1_FB29_Msk


	)

6615 
	#CAN_F2R1_FB30_Pos
 (30U)

	)

6616 
	#CAN_F2R1_FB30_Msk
 (0x1UL << 
CAN_F2R1_FB30_Pos
Ë

	)

6617 
	#CAN_F2R1_FB30
 
CAN_F2R1_FB30_Msk


	)

6618 
	#CAN_F2R1_FB31_Pos
 (31U)

	)

6619 
	#CAN_F2R1_FB31_Msk
 (0x1UL << 
CAN_F2R1_FB31_Pos
Ë

	)

6620 
	#CAN_F2R1_FB31
 
CAN_F2R1_FB31_Msk


	)

6623 
	#CAN_F3R1_FB0_Pos
 (0U)

	)

6624 
	#CAN_F3R1_FB0_Msk
 (0x1UL << 
CAN_F3R1_FB0_Pos
Ë

	)

6625 
	#CAN_F3R1_FB0
 
CAN_F3R1_FB0_Msk


	)

6626 
	#CAN_F3R1_FB1_Pos
 (1U)

	)

6627 
	#CAN_F3R1_FB1_Msk
 (0x1UL << 
CAN_F3R1_FB1_Pos
Ë

	)

6628 
	#CAN_F3R1_FB1
 
CAN_F3R1_FB1_Msk


	)

6629 
	#CAN_F3R1_FB2_Pos
 (2U)

	)

6630 
	#CAN_F3R1_FB2_Msk
 (0x1UL << 
CAN_F3R1_FB2_Pos
Ë

	)

6631 
	#CAN_F3R1_FB2
 
CAN_F3R1_FB2_Msk


	)

6632 
	#CAN_F3R1_FB3_Pos
 (3U)

	)

6633 
	#CAN_F3R1_FB3_Msk
 (0x1UL << 
CAN_F3R1_FB3_Pos
Ë

	)

6634 
	#CAN_F3R1_FB3
 
CAN_F3R1_FB3_Msk


	)

6635 
	#CAN_F3R1_FB4_Pos
 (4U)

	)

6636 
	#CAN_F3R1_FB4_Msk
 (0x1UL << 
CAN_F3R1_FB4_Pos
Ë

	)

6637 
	#CAN_F3R1_FB4
 
CAN_F3R1_FB4_Msk


	)

6638 
	#CAN_F3R1_FB5_Pos
 (5U)

	)

6639 
	#CAN_F3R1_FB5_Msk
 (0x1UL << 
CAN_F3R1_FB5_Pos
Ë

	)

6640 
	#CAN_F3R1_FB5
 
CAN_F3R1_FB5_Msk


	)

6641 
	#CAN_F3R1_FB6_Pos
 (6U)

	)

6642 
	#CAN_F3R1_FB6_Msk
 (0x1UL << 
CAN_F3R1_FB6_Pos
Ë

	)

6643 
	#CAN_F3R1_FB6
 
CAN_F3R1_FB6_Msk


	)

6644 
	#CAN_F3R1_FB7_Pos
 (7U)

	)

6645 
	#CAN_F3R1_FB7_Msk
 (0x1UL << 
CAN_F3R1_FB7_Pos
Ë

	)

6646 
	#CAN_F3R1_FB7
 
CAN_F3R1_FB7_Msk


	)

6647 
	#CAN_F3R1_FB8_Pos
 (8U)

	)

6648 
	#CAN_F3R1_FB8_Msk
 (0x1UL << 
CAN_F3R1_FB8_Pos
Ë

	)

6649 
	#CAN_F3R1_FB8
 
CAN_F3R1_FB8_Msk


	)

6650 
	#CAN_F3R1_FB9_Pos
 (9U)

	)

6651 
	#CAN_F3R1_FB9_Msk
 (0x1UL << 
CAN_F3R1_FB9_Pos
Ë

	)

6652 
	#CAN_F3R1_FB9
 
CAN_F3R1_FB9_Msk


	)

6653 
	#CAN_F3R1_FB10_Pos
 (10U)

	)

6654 
	#CAN_F3R1_FB10_Msk
 (0x1UL << 
CAN_F3R1_FB10_Pos
Ë

	)

6655 
	#CAN_F3R1_FB10
 
CAN_F3R1_FB10_Msk


	)

6656 
	#CAN_F3R1_FB11_Pos
 (11U)

	)

6657 
	#CAN_F3R1_FB11_Msk
 (0x1UL << 
CAN_F3R1_FB11_Pos
Ë

	)

6658 
	#CAN_F3R1_FB11
 
CAN_F3R1_FB11_Msk


	)

6659 
	#CAN_F3R1_FB12_Pos
 (12U)

	)

6660 
	#CAN_F3R1_FB12_Msk
 (0x1UL << 
CAN_F3R1_FB12_Pos
Ë

	)

6661 
	#CAN_F3R1_FB12
 
CAN_F3R1_FB12_Msk


	)

6662 
	#CAN_F3R1_FB13_Pos
 (13U)

	)

6663 
	#CAN_F3R1_FB13_Msk
 (0x1UL << 
CAN_F3R1_FB13_Pos
Ë

	)

6664 
	#CAN_F3R1_FB13
 
CAN_F3R1_FB13_Msk


	)

6665 
	#CAN_F3R1_FB14_Pos
 (14U)

	)

6666 
	#CAN_F3R1_FB14_Msk
 (0x1UL << 
CAN_F3R1_FB14_Pos
Ë

	)

6667 
	#CAN_F3R1_FB14
 
CAN_F3R1_FB14_Msk


	)

6668 
	#CAN_F3R1_FB15_Pos
 (15U)

	)

6669 
	#CAN_F3R1_FB15_Msk
 (0x1UL << 
CAN_F3R1_FB15_Pos
Ë

	)

6670 
	#CAN_F3R1_FB15
 
CAN_F3R1_FB15_Msk


	)

6671 
	#CAN_F3R1_FB16_Pos
 (16U)

	)

6672 
	#CAN_F3R1_FB16_Msk
 (0x1UL << 
CAN_F3R1_FB16_Pos
Ë

	)

6673 
	#CAN_F3R1_FB16
 
CAN_F3R1_FB16_Msk


	)

6674 
	#CAN_F3R1_FB17_Pos
 (17U)

	)

6675 
	#CAN_F3R1_FB17_Msk
 (0x1UL << 
CAN_F3R1_FB17_Pos
Ë

	)

6676 
	#CAN_F3R1_FB17
 
CAN_F3R1_FB17_Msk


	)

6677 
	#CAN_F3R1_FB18_Pos
 (18U)

	)

6678 
	#CAN_F3R1_FB18_Msk
 (0x1UL << 
CAN_F3R1_FB18_Pos
Ë

	)

6679 
	#CAN_F3R1_FB18
 
CAN_F3R1_FB18_Msk


	)

6680 
	#CAN_F3R1_FB19_Pos
 (19U)

	)

6681 
	#CAN_F3R1_FB19_Msk
 (0x1UL << 
CAN_F3R1_FB19_Pos
Ë

	)

6682 
	#CAN_F3R1_FB19
 
CAN_F3R1_FB19_Msk


	)

6683 
	#CAN_F3R1_FB20_Pos
 (20U)

	)

6684 
	#CAN_F3R1_FB20_Msk
 (0x1UL << 
CAN_F3R1_FB20_Pos
Ë

	)

6685 
	#CAN_F3R1_FB20
 
CAN_F3R1_FB20_Msk


	)

6686 
	#CAN_F3R1_FB21_Pos
 (21U)

	)

6687 
	#CAN_F3R1_FB21_Msk
 (0x1UL << 
CAN_F3R1_FB21_Pos
Ë

	)

6688 
	#CAN_F3R1_FB21
 
CAN_F3R1_FB21_Msk


	)

6689 
	#CAN_F3R1_FB22_Pos
 (22U)

	)

6690 
	#CAN_F3R1_FB22_Msk
 (0x1UL << 
CAN_F3R1_FB22_Pos
Ë

	)

6691 
	#CAN_F3R1_FB22
 
CAN_F3R1_FB22_Msk


	)

6692 
	#CAN_F3R1_FB23_Pos
 (23U)

	)

6693 
	#CAN_F3R1_FB23_Msk
 (0x1UL << 
CAN_F3R1_FB23_Pos
Ë

	)

6694 
	#CAN_F3R1_FB23
 
CAN_F3R1_FB23_Msk


	)

6695 
	#CAN_F3R1_FB24_Pos
 (24U)

	)

6696 
	#CAN_F3R1_FB24_Msk
 (0x1UL << 
CAN_F3R1_FB24_Pos
Ë

	)

6697 
	#CAN_F3R1_FB24
 
CAN_F3R1_FB24_Msk


	)

6698 
	#CAN_F3R1_FB25_Pos
 (25U)

	)

6699 
	#CAN_F3R1_FB25_Msk
 (0x1UL << 
CAN_F3R1_FB25_Pos
Ë

	)

6700 
	#CAN_F3R1_FB25
 
CAN_F3R1_FB25_Msk


	)

6701 
	#CAN_F3R1_FB26_Pos
 (26U)

	)

6702 
	#CAN_F3R1_FB26_Msk
 (0x1UL << 
CAN_F3R1_FB26_Pos
Ë

	)

6703 
	#CAN_F3R1_FB26
 
CAN_F3R1_FB26_Msk


	)

6704 
	#CAN_F3R1_FB27_Pos
 (27U)

	)

6705 
	#CAN_F3R1_FB27_Msk
 (0x1UL << 
CAN_F3R1_FB27_Pos
Ë

	)

6706 
	#CAN_F3R1_FB27
 
CAN_F3R1_FB27_Msk


	)

6707 
	#CAN_F3R1_FB28_Pos
 (28U)

	)

6708 
	#CAN_F3R1_FB28_Msk
 (0x1UL << 
CAN_F3R1_FB28_Pos
Ë

	)

6709 
	#CAN_F3R1_FB28
 
CAN_F3R1_FB28_Msk


	)

6710 
	#CAN_F3R1_FB29_Pos
 (29U)

	)

6711 
	#CAN_F3R1_FB29_Msk
 (0x1UL << 
CAN_F3R1_FB29_Pos
Ë

	)

6712 
	#CAN_F3R1_FB29
 
CAN_F3R1_FB29_Msk


	)

6713 
	#CAN_F3R1_FB30_Pos
 (30U)

	)

6714 
	#CAN_F3R1_FB30_Msk
 (0x1UL << 
CAN_F3R1_FB30_Pos
Ë

	)

6715 
	#CAN_F3R1_FB30
 
CAN_F3R1_FB30_Msk


	)

6716 
	#CAN_F3R1_FB31_Pos
 (31U)

	)

6717 
	#CAN_F3R1_FB31_Msk
 (0x1UL << 
CAN_F3R1_FB31_Pos
Ë

	)

6718 
	#CAN_F3R1_FB31
 
CAN_F3R1_FB31_Msk


	)

6721 
	#CAN_F4R1_FB0_Pos
 (0U)

	)

6722 
	#CAN_F4R1_FB0_Msk
 (0x1UL << 
CAN_F4R1_FB0_Pos
Ë

	)

6723 
	#CAN_F4R1_FB0
 
CAN_F4R1_FB0_Msk


	)

6724 
	#CAN_F4R1_FB1_Pos
 (1U)

	)

6725 
	#CAN_F4R1_FB1_Msk
 (0x1UL << 
CAN_F4R1_FB1_Pos
Ë

	)

6726 
	#CAN_F4R1_FB1
 
CAN_F4R1_FB1_Msk


	)

6727 
	#CAN_F4R1_FB2_Pos
 (2U)

	)

6728 
	#CAN_F4R1_FB2_Msk
 (0x1UL << 
CAN_F4R1_FB2_Pos
Ë

	)

6729 
	#CAN_F4R1_FB2
 
CAN_F4R1_FB2_Msk


	)

6730 
	#CAN_F4R1_FB3_Pos
 (3U)

	)

6731 
	#CAN_F4R1_FB3_Msk
 (0x1UL << 
CAN_F4R1_FB3_Pos
Ë

	)

6732 
	#CAN_F4R1_FB3
 
CAN_F4R1_FB3_Msk


	)

6733 
	#CAN_F4R1_FB4_Pos
 (4U)

	)

6734 
	#CAN_F4R1_FB4_Msk
 (0x1UL << 
CAN_F4R1_FB4_Pos
Ë

	)

6735 
	#CAN_F4R1_FB4
 
CAN_F4R1_FB4_Msk


	)

6736 
	#CAN_F4R1_FB5_Pos
 (5U)

	)

6737 
	#CAN_F4R1_FB5_Msk
 (0x1UL << 
CAN_F4R1_FB5_Pos
Ë

	)

6738 
	#CAN_F4R1_FB5
 
CAN_F4R1_FB5_Msk


	)

6739 
	#CAN_F4R1_FB6_Pos
 (6U)

	)

6740 
	#CAN_F4R1_FB6_Msk
 (0x1UL << 
CAN_F4R1_FB6_Pos
Ë

	)

6741 
	#CAN_F4R1_FB6
 
CAN_F4R1_FB6_Msk


	)

6742 
	#CAN_F4R1_FB7_Pos
 (7U)

	)

6743 
	#CAN_F4R1_FB7_Msk
 (0x1UL << 
CAN_F4R1_FB7_Pos
Ë

	)

6744 
	#CAN_F4R1_FB7
 
CAN_F4R1_FB7_Msk


	)

6745 
	#CAN_F4R1_FB8_Pos
 (8U)

	)

6746 
	#CAN_F4R1_FB8_Msk
 (0x1UL << 
CAN_F4R1_FB8_Pos
Ë

	)

6747 
	#CAN_F4R1_FB8
 
CAN_F4R1_FB8_Msk


	)

6748 
	#CAN_F4R1_FB9_Pos
 (9U)

	)

6749 
	#CAN_F4R1_FB9_Msk
 (0x1UL << 
CAN_F4R1_FB9_Pos
Ë

	)

6750 
	#CAN_F4R1_FB9
 
CAN_F4R1_FB9_Msk


	)

6751 
	#CAN_F4R1_FB10_Pos
 (10U)

	)

6752 
	#CAN_F4R1_FB10_Msk
 (0x1UL << 
CAN_F4R1_FB10_Pos
Ë

	)

6753 
	#CAN_F4R1_FB10
 
CAN_F4R1_FB10_Msk


	)

6754 
	#CAN_F4R1_FB11_Pos
 (11U)

	)

6755 
	#CAN_F4R1_FB11_Msk
 (0x1UL << 
CAN_F4R1_FB11_Pos
Ë

	)

6756 
	#CAN_F4R1_FB11
 
CAN_F4R1_FB11_Msk


	)

6757 
	#CAN_F4R1_FB12_Pos
 (12U)

	)

6758 
	#CAN_F4R1_FB12_Msk
 (0x1UL << 
CAN_F4R1_FB12_Pos
Ë

	)

6759 
	#CAN_F4R1_FB12
 
CAN_F4R1_FB12_Msk


	)

6760 
	#CAN_F4R1_FB13_Pos
 (13U)

	)

6761 
	#CAN_F4R1_FB13_Msk
 (0x1UL << 
CAN_F4R1_FB13_Pos
Ë

	)

6762 
	#CAN_F4R1_FB13
 
CAN_F4R1_FB13_Msk


	)

6763 
	#CAN_F4R1_FB14_Pos
 (14U)

	)

6764 
	#CAN_F4R1_FB14_Msk
 (0x1UL << 
CAN_F4R1_FB14_Pos
Ë

	)

6765 
	#CAN_F4R1_FB14
 
CAN_F4R1_FB14_Msk


	)

6766 
	#CAN_F4R1_FB15_Pos
 (15U)

	)

6767 
	#CAN_F4R1_FB15_Msk
 (0x1UL << 
CAN_F4R1_FB15_Pos
Ë

	)

6768 
	#CAN_F4R1_FB15
 
CAN_F4R1_FB15_Msk


	)

6769 
	#CAN_F4R1_FB16_Pos
 (16U)

	)

6770 
	#CAN_F4R1_FB16_Msk
 (0x1UL << 
CAN_F4R1_FB16_Pos
Ë

	)

6771 
	#CAN_F4R1_FB16
 
CAN_F4R1_FB16_Msk


	)

6772 
	#CAN_F4R1_FB17_Pos
 (17U)

	)

6773 
	#CAN_F4R1_FB17_Msk
 (0x1UL << 
CAN_F4R1_FB17_Pos
Ë

	)

6774 
	#CAN_F4R1_FB17
 
CAN_F4R1_FB17_Msk


	)

6775 
	#CAN_F4R1_FB18_Pos
 (18U)

	)

6776 
	#CAN_F4R1_FB18_Msk
 (0x1UL << 
CAN_F4R1_FB18_Pos
Ë

	)

6777 
	#CAN_F4R1_FB18
 
CAN_F4R1_FB18_Msk


	)

6778 
	#CAN_F4R1_FB19_Pos
 (19U)

	)

6779 
	#CAN_F4R1_FB19_Msk
 (0x1UL << 
CAN_F4R1_FB19_Pos
Ë

	)

6780 
	#CAN_F4R1_FB19
 
CAN_F4R1_FB19_Msk


	)

6781 
	#CAN_F4R1_FB20_Pos
 (20U)

	)

6782 
	#CAN_F4R1_FB20_Msk
 (0x1UL << 
CAN_F4R1_FB20_Pos
Ë

	)

6783 
	#CAN_F4R1_FB20
 
CAN_F4R1_FB20_Msk


	)

6784 
	#CAN_F4R1_FB21_Pos
 (21U)

	)

6785 
	#CAN_F4R1_FB21_Msk
 (0x1UL << 
CAN_F4R1_FB21_Pos
Ë

	)

6786 
	#CAN_F4R1_FB21
 
CAN_F4R1_FB21_Msk


	)

6787 
	#CAN_F4R1_FB22_Pos
 (22U)

	)

6788 
	#CAN_F4R1_FB22_Msk
 (0x1UL << 
CAN_F4R1_FB22_Pos
Ë

	)

6789 
	#CAN_F4R1_FB22
 
CAN_F4R1_FB22_Msk


	)

6790 
	#CAN_F4R1_FB23_Pos
 (23U)

	)

6791 
	#CAN_F4R1_FB23_Msk
 (0x1UL << 
CAN_F4R1_FB23_Pos
Ë

	)

6792 
	#CAN_F4R1_FB23
 
CAN_F4R1_FB23_Msk


	)

6793 
	#CAN_F4R1_FB24_Pos
 (24U)

	)

6794 
	#CAN_F4R1_FB24_Msk
 (0x1UL << 
CAN_F4R1_FB24_Pos
Ë

	)

6795 
	#CAN_F4R1_FB24
 
CAN_F4R1_FB24_Msk


	)

6796 
	#CAN_F4R1_FB25_Pos
 (25U)

	)

6797 
	#CAN_F4R1_FB25_Msk
 (0x1UL << 
CAN_F4R1_FB25_Pos
Ë

	)

6798 
	#CAN_F4R1_FB25
 
CAN_F4R1_FB25_Msk


	)

6799 
	#CAN_F4R1_FB26_Pos
 (26U)

	)

6800 
	#CAN_F4R1_FB26_Msk
 (0x1UL << 
CAN_F4R1_FB26_Pos
Ë

	)

6801 
	#CAN_F4R1_FB26
 
CAN_F4R1_FB26_Msk


	)

6802 
	#CAN_F4R1_FB27_Pos
 (27U)

	)

6803 
	#CAN_F4R1_FB27_Msk
 (0x1UL << 
CAN_F4R1_FB27_Pos
Ë

	)

6804 
	#CAN_F4R1_FB27
 
CAN_F4R1_FB27_Msk


	)

6805 
	#CAN_F4R1_FB28_Pos
 (28U)

	)

6806 
	#CAN_F4R1_FB28_Msk
 (0x1UL << 
CAN_F4R1_FB28_Pos
Ë

	)

6807 
	#CAN_F4R1_FB28
 
CAN_F4R1_FB28_Msk


	)

6808 
	#CAN_F4R1_FB29_Pos
 (29U)

	)

6809 
	#CAN_F4R1_FB29_Msk
 (0x1UL << 
CAN_F4R1_FB29_Pos
Ë

	)

6810 
	#CAN_F4R1_FB29
 
CAN_F4R1_FB29_Msk


	)

6811 
	#CAN_F4R1_FB30_Pos
 (30U)

	)

6812 
	#CAN_F4R1_FB30_Msk
 (0x1UL << 
CAN_F4R1_FB30_Pos
Ë

	)

6813 
	#CAN_F4R1_FB30
 
CAN_F4R1_FB30_Msk


	)

6814 
	#CAN_F4R1_FB31_Pos
 (31U)

	)

6815 
	#CAN_F4R1_FB31_Msk
 (0x1UL << 
CAN_F4R1_FB31_Pos
Ë

	)

6816 
	#CAN_F4R1_FB31
 
CAN_F4R1_FB31_Msk


	)

6819 
	#CAN_F5R1_FB0_Pos
 (0U)

	)

6820 
	#CAN_F5R1_FB0_Msk
 (0x1UL << 
CAN_F5R1_FB0_Pos
Ë

	)

6821 
	#CAN_F5R1_FB0
 
CAN_F5R1_FB0_Msk


	)

6822 
	#CAN_F5R1_FB1_Pos
 (1U)

	)

6823 
	#CAN_F5R1_FB1_Msk
 (0x1UL << 
CAN_F5R1_FB1_Pos
Ë

	)

6824 
	#CAN_F5R1_FB1
 
CAN_F5R1_FB1_Msk


	)

6825 
	#CAN_F5R1_FB2_Pos
 (2U)

	)

6826 
	#CAN_F5R1_FB2_Msk
 (0x1UL << 
CAN_F5R1_FB2_Pos
Ë

	)

6827 
	#CAN_F5R1_FB2
 
CAN_F5R1_FB2_Msk


	)

6828 
	#CAN_F5R1_FB3_Pos
 (3U)

	)

6829 
	#CAN_F5R1_FB3_Msk
 (0x1UL << 
CAN_F5R1_FB3_Pos
Ë

	)

6830 
	#CAN_F5R1_FB3
 
CAN_F5R1_FB3_Msk


	)

6831 
	#CAN_F5R1_FB4_Pos
 (4U)

	)

6832 
	#CAN_F5R1_FB4_Msk
 (0x1UL << 
CAN_F5R1_FB4_Pos
Ë

	)

6833 
	#CAN_F5R1_FB4
 
CAN_F5R1_FB4_Msk


	)

6834 
	#CAN_F5R1_FB5_Pos
 (5U)

	)

6835 
	#CAN_F5R1_FB5_Msk
 (0x1UL << 
CAN_F5R1_FB5_Pos
Ë

	)

6836 
	#CAN_F5R1_FB5
 
CAN_F5R1_FB5_Msk


	)

6837 
	#CAN_F5R1_FB6_Pos
 (6U)

	)

6838 
	#CAN_F5R1_FB6_Msk
 (0x1UL << 
CAN_F5R1_FB6_Pos
Ë

	)

6839 
	#CAN_F5R1_FB6
 
CAN_F5R1_FB6_Msk


	)

6840 
	#CAN_F5R1_FB7_Pos
 (7U)

	)

6841 
	#CAN_F5R1_FB7_Msk
 (0x1UL << 
CAN_F5R1_FB7_Pos
Ë

	)

6842 
	#CAN_F5R1_FB7
 
CAN_F5R1_FB7_Msk


	)

6843 
	#CAN_F5R1_FB8_Pos
 (8U)

	)

6844 
	#CAN_F5R1_FB8_Msk
 (0x1UL << 
CAN_F5R1_FB8_Pos
Ë

	)

6845 
	#CAN_F5R1_FB8
 
CAN_F5R1_FB8_Msk


	)

6846 
	#CAN_F5R1_FB9_Pos
 (9U)

	)

6847 
	#CAN_F5R1_FB9_Msk
 (0x1UL << 
CAN_F5R1_FB9_Pos
Ë

	)

6848 
	#CAN_F5R1_FB9
 
CAN_F5R1_FB9_Msk


	)

6849 
	#CAN_F5R1_FB10_Pos
 (10U)

	)

6850 
	#CAN_F5R1_FB10_Msk
 (0x1UL << 
CAN_F5R1_FB10_Pos
Ë

	)

6851 
	#CAN_F5R1_FB10
 
CAN_F5R1_FB10_Msk


	)

6852 
	#CAN_F5R1_FB11_Pos
 (11U)

	)

6853 
	#CAN_F5R1_FB11_Msk
 (0x1UL << 
CAN_F5R1_FB11_Pos
Ë

	)

6854 
	#CAN_F5R1_FB11
 
CAN_F5R1_FB11_Msk


	)

6855 
	#CAN_F5R1_FB12_Pos
 (12U)

	)

6856 
	#CAN_F5R1_FB12_Msk
 (0x1UL << 
CAN_F5R1_FB12_Pos
Ë

	)

6857 
	#CAN_F5R1_FB12
 
CAN_F5R1_FB12_Msk


	)

6858 
	#CAN_F5R1_FB13_Pos
 (13U)

	)

6859 
	#CAN_F5R1_FB13_Msk
 (0x1UL << 
CAN_F5R1_FB13_Pos
Ë

	)

6860 
	#CAN_F5R1_FB13
 
CAN_F5R1_FB13_Msk


	)

6861 
	#CAN_F5R1_FB14_Pos
 (14U)

	)

6862 
	#CAN_F5R1_FB14_Msk
 (0x1UL << 
CAN_F5R1_FB14_Pos
Ë

	)

6863 
	#CAN_F5R1_FB14
 
CAN_F5R1_FB14_Msk


	)

6864 
	#CAN_F5R1_FB15_Pos
 (15U)

	)

6865 
	#CAN_F5R1_FB15_Msk
 (0x1UL << 
CAN_F5R1_FB15_Pos
Ë

	)

6866 
	#CAN_F5R1_FB15
 
CAN_F5R1_FB15_Msk


	)

6867 
	#CAN_F5R1_FB16_Pos
 (16U)

	)

6868 
	#CAN_F5R1_FB16_Msk
 (0x1UL << 
CAN_F5R1_FB16_Pos
Ë

	)

6869 
	#CAN_F5R1_FB16
 
CAN_F5R1_FB16_Msk


	)

6870 
	#CAN_F5R1_FB17_Pos
 (17U)

	)

6871 
	#CAN_F5R1_FB17_Msk
 (0x1UL << 
CAN_F5R1_FB17_Pos
Ë

	)

6872 
	#CAN_F5R1_FB17
 
CAN_F5R1_FB17_Msk


	)

6873 
	#CAN_F5R1_FB18_Pos
 (18U)

	)

6874 
	#CAN_F5R1_FB18_Msk
 (0x1UL << 
CAN_F5R1_FB18_Pos
Ë

	)

6875 
	#CAN_F5R1_FB18
 
CAN_F5R1_FB18_Msk


	)

6876 
	#CAN_F5R1_FB19_Pos
 (19U)

	)

6877 
	#CAN_F5R1_FB19_Msk
 (0x1UL << 
CAN_F5R1_FB19_Pos
Ë

	)

6878 
	#CAN_F5R1_FB19
 
CAN_F5R1_FB19_Msk


	)

6879 
	#CAN_F5R1_FB20_Pos
 (20U)

	)

6880 
	#CAN_F5R1_FB20_Msk
 (0x1UL << 
CAN_F5R1_FB20_Pos
Ë

	)

6881 
	#CAN_F5R1_FB20
 
CAN_F5R1_FB20_Msk


	)

6882 
	#CAN_F5R1_FB21_Pos
 (21U)

	)

6883 
	#CAN_F5R1_FB21_Msk
 (0x1UL << 
CAN_F5R1_FB21_Pos
Ë

	)

6884 
	#CAN_F5R1_FB21
 
CAN_F5R1_FB21_Msk


	)

6885 
	#CAN_F5R1_FB22_Pos
 (22U)

	)

6886 
	#CAN_F5R1_FB22_Msk
 (0x1UL << 
CAN_F5R1_FB22_Pos
Ë

	)

6887 
	#CAN_F5R1_FB22
 
CAN_F5R1_FB22_Msk


	)

6888 
	#CAN_F5R1_FB23_Pos
 (23U)

	)

6889 
	#CAN_F5R1_FB23_Msk
 (0x1UL << 
CAN_F5R1_FB23_Pos
Ë

	)

6890 
	#CAN_F5R1_FB23
 
CAN_F5R1_FB23_Msk


	)

6891 
	#CAN_F5R1_FB24_Pos
 (24U)

	)

6892 
	#CAN_F5R1_FB24_Msk
 (0x1UL << 
CAN_F5R1_FB24_Pos
Ë

	)

6893 
	#CAN_F5R1_FB24
 
CAN_F5R1_FB24_Msk


	)

6894 
	#CAN_F5R1_FB25_Pos
 (25U)

	)

6895 
	#CAN_F5R1_FB25_Msk
 (0x1UL << 
CAN_F5R1_FB25_Pos
Ë

	)

6896 
	#CAN_F5R1_FB25
 
CAN_F5R1_FB25_Msk


	)

6897 
	#CAN_F5R1_FB26_Pos
 (26U)

	)

6898 
	#CAN_F5R1_FB26_Msk
 (0x1UL << 
CAN_F5R1_FB26_Pos
Ë

	)

6899 
	#CAN_F5R1_FB26
 
CAN_F5R1_FB26_Msk


	)

6900 
	#CAN_F5R1_FB27_Pos
 (27U)

	)

6901 
	#CAN_F5R1_FB27_Msk
 (0x1UL << 
CAN_F5R1_FB27_Pos
Ë

	)

6902 
	#CAN_F5R1_FB27
 
CAN_F5R1_FB27_Msk


	)

6903 
	#CAN_F5R1_FB28_Pos
 (28U)

	)

6904 
	#CAN_F5R1_FB28_Msk
 (0x1UL << 
CAN_F5R1_FB28_Pos
Ë

	)

6905 
	#CAN_F5R1_FB28
 
CAN_F5R1_FB28_Msk


	)

6906 
	#CAN_F5R1_FB29_Pos
 (29U)

	)

6907 
	#CAN_F5R1_FB29_Msk
 (0x1UL << 
CAN_F5R1_FB29_Pos
Ë

	)

6908 
	#CAN_F5R1_FB29
 
CAN_F5R1_FB29_Msk


	)

6909 
	#CAN_F5R1_FB30_Pos
 (30U)

	)

6910 
	#CAN_F5R1_FB30_Msk
 (0x1UL << 
CAN_F5R1_FB30_Pos
Ë

	)

6911 
	#CAN_F5R1_FB30
 
CAN_F5R1_FB30_Msk


	)

6912 
	#CAN_F5R1_FB31_Pos
 (31U)

	)

6913 
	#CAN_F5R1_FB31_Msk
 (0x1UL << 
CAN_F5R1_FB31_Pos
Ë

	)

6914 
	#CAN_F5R1_FB31
 
CAN_F5R1_FB31_Msk


	)

6917 
	#CAN_F6R1_FB0_Pos
 (0U)

	)

6918 
	#CAN_F6R1_FB0_Msk
 (0x1UL << 
CAN_F6R1_FB0_Pos
Ë

	)

6919 
	#CAN_F6R1_FB0
 
CAN_F6R1_FB0_Msk


	)

6920 
	#CAN_F6R1_FB1_Pos
 (1U)

	)

6921 
	#CAN_F6R1_FB1_Msk
 (0x1UL << 
CAN_F6R1_FB1_Pos
Ë

	)

6922 
	#CAN_F6R1_FB1
 
CAN_F6R1_FB1_Msk


	)

6923 
	#CAN_F6R1_FB2_Pos
 (2U)

	)

6924 
	#CAN_F6R1_FB2_Msk
 (0x1UL << 
CAN_F6R1_FB2_Pos
Ë

	)

6925 
	#CAN_F6R1_FB2
 
CAN_F6R1_FB2_Msk


	)

6926 
	#CAN_F6R1_FB3_Pos
 (3U)

	)

6927 
	#CAN_F6R1_FB3_Msk
 (0x1UL << 
CAN_F6R1_FB3_Pos
Ë

	)

6928 
	#CAN_F6R1_FB3
 
CAN_F6R1_FB3_Msk


	)

6929 
	#CAN_F6R1_FB4_Pos
 (4U)

	)

6930 
	#CAN_F6R1_FB4_Msk
 (0x1UL << 
CAN_F6R1_FB4_Pos
Ë

	)

6931 
	#CAN_F6R1_FB4
 
CAN_F6R1_FB4_Msk


	)

6932 
	#CAN_F6R1_FB5_Pos
 (5U)

	)

6933 
	#CAN_F6R1_FB5_Msk
 (0x1UL << 
CAN_F6R1_FB5_Pos
Ë

	)

6934 
	#CAN_F6R1_FB5
 
CAN_F6R1_FB5_Msk


	)

6935 
	#CAN_F6R1_FB6_Pos
 (6U)

	)

6936 
	#CAN_F6R1_FB6_Msk
 (0x1UL << 
CAN_F6R1_FB6_Pos
Ë

	)

6937 
	#CAN_F6R1_FB6
 
CAN_F6R1_FB6_Msk


	)

6938 
	#CAN_F6R1_FB7_Pos
 (7U)

	)

6939 
	#CAN_F6R1_FB7_Msk
 (0x1UL << 
CAN_F6R1_FB7_Pos
Ë

	)

6940 
	#CAN_F6R1_FB7
 
CAN_F6R1_FB7_Msk


	)

6941 
	#CAN_F6R1_FB8_Pos
 (8U)

	)

6942 
	#CAN_F6R1_FB8_Msk
 (0x1UL << 
CAN_F6R1_FB8_Pos
Ë

	)

6943 
	#CAN_F6R1_FB8
 
CAN_F6R1_FB8_Msk


	)

6944 
	#CAN_F6R1_FB9_Pos
 (9U)

	)

6945 
	#CAN_F6R1_FB9_Msk
 (0x1UL << 
CAN_F6R1_FB9_Pos
Ë

	)

6946 
	#CAN_F6R1_FB9
 
CAN_F6R1_FB9_Msk


	)

6947 
	#CAN_F6R1_FB10_Pos
 (10U)

	)

6948 
	#CAN_F6R1_FB10_Msk
 (0x1UL << 
CAN_F6R1_FB10_Pos
Ë

	)

6949 
	#CAN_F6R1_FB10
 
CAN_F6R1_FB10_Msk


	)

6950 
	#CAN_F6R1_FB11_Pos
 (11U)

	)

6951 
	#CAN_F6R1_FB11_Msk
 (0x1UL << 
CAN_F6R1_FB11_Pos
Ë

	)

6952 
	#CAN_F6R1_FB11
 
CAN_F6R1_FB11_Msk


	)

6953 
	#CAN_F6R1_FB12_Pos
 (12U)

	)

6954 
	#CAN_F6R1_FB12_Msk
 (0x1UL << 
CAN_F6R1_FB12_Pos
Ë

	)

6955 
	#CAN_F6R1_FB12
 
CAN_F6R1_FB12_Msk


	)

6956 
	#CAN_F6R1_FB13_Pos
 (13U)

	)

6957 
	#CAN_F6R1_FB13_Msk
 (0x1UL << 
CAN_F6R1_FB13_Pos
Ë

	)

6958 
	#CAN_F6R1_FB13
 
CAN_F6R1_FB13_Msk


	)

6959 
	#CAN_F6R1_FB14_Pos
 (14U)

	)

6960 
	#CAN_F6R1_FB14_Msk
 (0x1UL << 
CAN_F6R1_FB14_Pos
Ë

	)

6961 
	#CAN_F6R1_FB14
 
CAN_F6R1_FB14_Msk


	)

6962 
	#CAN_F6R1_FB15_Pos
 (15U)

	)

6963 
	#CAN_F6R1_FB15_Msk
 (0x1UL << 
CAN_F6R1_FB15_Pos
Ë

	)

6964 
	#CAN_F6R1_FB15
 
CAN_F6R1_FB15_Msk


	)

6965 
	#CAN_F6R1_FB16_Pos
 (16U)

	)

6966 
	#CAN_F6R1_FB16_Msk
 (0x1UL << 
CAN_F6R1_FB16_Pos
Ë

	)

6967 
	#CAN_F6R1_FB16
 
CAN_F6R1_FB16_Msk


	)

6968 
	#CAN_F6R1_FB17_Pos
 (17U)

	)

6969 
	#CAN_F6R1_FB17_Msk
 (0x1UL << 
CAN_F6R1_FB17_Pos
Ë

	)

6970 
	#CAN_F6R1_FB17
 
CAN_F6R1_FB17_Msk


	)

6971 
	#CAN_F6R1_FB18_Pos
 (18U)

	)

6972 
	#CAN_F6R1_FB18_Msk
 (0x1UL << 
CAN_F6R1_FB18_Pos
Ë

	)

6973 
	#CAN_F6R1_FB18
 
CAN_F6R1_FB18_Msk


	)

6974 
	#CAN_F6R1_FB19_Pos
 (19U)

	)

6975 
	#CAN_F6R1_FB19_Msk
 (0x1UL << 
CAN_F6R1_FB19_Pos
Ë

	)

6976 
	#CAN_F6R1_FB19
 
CAN_F6R1_FB19_Msk


	)

6977 
	#CAN_F6R1_FB20_Pos
 (20U)

	)

6978 
	#CAN_F6R1_FB20_Msk
 (0x1UL << 
CAN_F6R1_FB20_Pos
Ë

	)

6979 
	#CAN_F6R1_FB20
 
CAN_F6R1_FB20_Msk


	)

6980 
	#CAN_F6R1_FB21_Pos
 (21U)

	)

6981 
	#CAN_F6R1_FB21_Msk
 (0x1UL << 
CAN_F6R1_FB21_Pos
Ë

	)

6982 
	#CAN_F6R1_FB21
 
CAN_F6R1_FB21_Msk


	)

6983 
	#CAN_F6R1_FB22_Pos
 (22U)

	)

6984 
	#CAN_F6R1_FB22_Msk
 (0x1UL << 
CAN_F6R1_FB22_Pos
Ë

	)

6985 
	#CAN_F6R1_FB22
 
CAN_F6R1_FB22_Msk


	)

6986 
	#CAN_F6R1_FB23_Pos
 (23U)

	)

6987 
	#CAN_F6R1_FB23_Msk
 (0x1UL << 
CAN_F6R1_FB23_Pos
Ë

	)

6988 
	#CAN_F6R1_FB23
 
CAN_F6R1_FB23_Msk


	)

6989 
	#CAN_F6R1_FB24_Pos
 (24U)

	)

6990 
	#CAN_F6R1_FB24_Msk
 (0x1UL << 
CAN_F6R1_FB24_Pos
Ë

	)

6991 
	#CAN_F6R1_FB24
 
CAN_F6R1_FB24_Msk


	)

6992 
	#CAN_F6R1_FB25_Pos
 (25U)

	)

6993 
	#CAN_F6R1_FB25_Msk
 (0x1UL << 
CAN_F6R1_FB25_Pos
Ë

	)

6994 
	#CAN_F6R1_FB25
 
CAN_F6R1_FB25_Msk


	)

6995 
	#CAN_F6R1_FB26_Pos
 (26U)

	)

6996 
	#CAN_F6R1_FB26_Msk
 (0x1UL << 
CAN_F6R1_FB26_Pos
Ë

	)

6997 
	#CAN_F6R1_FB26
 
CAN_F6R1_FB26_Msk


	)

6998 
	#CAN_F6R1_FB27_Pos
 (27U)

	)

6999 
	#CAN_F6R1_FB27_Msk
 (0x1UL << 
CAN_F6R1_FB27_Pos
Ë

	)

7000 
	#CAN_F6R1_FB27
 
CAN_F6R1_FB27_Msk


	)

7001 
	#CAN_F6R1_FB28_Pos
 (28U)

	)

7002 
	#CAN_F6R1_FB28_Msk
 (0x1UL << 
CAN_F6R1_FB28_Pos
Ë

	)

7003 
	#CAN_F6R1_FB28
 
CAN_F6R1_FB28_Msk


	)

7004 
	#CAN_F6R1_FB29_Pos
 (29U)

	)

7005 
	#CAN_F6R1_FB29_Msk
 (0x1UL << 
CAN_F6R1_FB29_Pos
Ë

	)

7006 
	#CAN_F6R1_FB29
 
CAN_F6R1_FB29_Msk


	)

7007 
	#CAN_F6R1_FB30_Pos
 (30U)

	)

7008 
	#CAN_F6R1_FB30_Msk
 (0x1UL << 
CAN_F6R1_FB30_Pos
Ë

	)

7009 
	#CAN_F6R1_FB30
 
CAN_F6R1_FB30_Msk


	)

7010 
	#CAN_F6R1_FB31_Pos
 (31U)

	)

7011 
	#CAN_F6R1_FB31_Msk
 (0x1UL << 
CAN_F6R1_FB31_Pos
Ë

	)

7012 
	#CAN_F6R1_FB31
 
CAN_F6R1_FB31_Msk


	)

7015 
	#CAN_F7R1_FB0_Pos
 (0U)

	)

7016 
	#CAN_F7R1_FB0_Msk
 (0x1UL << 
CAN_F7R1_FB0_Pos
Ë

	)

7017 
	#CAN_F7R1_FB0
 
CAN_F7R1_FB0_Msk


	)

7018 
	#CAN_F7R1_FB1_Pos
 (1U)

	)

7019 
	#CAN_F7R1_FB1_Msk
 (0x1UL << 
CAN_F7R1_FB1_Pos
Ë

	)

7020 
	#CAN_F7R1_FB1
 
CAN_F7R1_FB1_Msk


	)

7021 
	#CAN_F7R1_FB2_Pos
 (2U)

	)

7022 
	#CAN_F7R1_FB2_Msk
 (0x1UL << 
CAN_F7R1_FB2_Pos
Ë

	)

7023 
	#CAN_F7R1_FB2
 
CAN_F7R1_FB2_Msk


	)

7024 
	#CAN_F7R1_FB3_Pos
 (3U)

	)

7025 
	#CAN_F7R1_FB3_Msk
 (0x1UL << 
CAN_F7R1_FB3_Pos
Ë

	)

7026 
	#CAN_F7R1_FB3
 
CAN_F7R1_FB3_Msk


	)

7027 
	#CAN_F7R1_FB4_Pos
 (4U)

	)

7028 
	#CAN_F7R1_FB4_Msk
 (0x1UL << 
CAN_F7R1_FB4_Pos
Ë

	)

7029 
	#CAN_F7R1_FB4
 
CAN_F7R1_FB4_Msk


	)

7030 
	#CAN_F7R1_FB5_Pos
 (5U)

	)

7031 
	#CAN_F7R1_FB5_Msk
 (0x1UL << 
CAN_F7R1_FB5_Pos
Ë

	)

7032 
	#CAN_F7R1_FB5
 
CAN_F7R1_FB5_Msk


	)

7033 
	#CAN_F7R1_FB6_Pos
 (6U)

	)

7034 
	#CAN_F7R1_FB6_Msk
 (0x1UL << 
CAN_F7R1_FB6_Pos
Ë

	)

7035 
	#CAN_F7R1_FB6
 
CAN_F7R1_FB6_Msk


	)

7036 
	#CAN_F7R1_FB7_Pos
 (7U)

	)

7037 
	#CAN_F7R1_FB7_Msk
 (0x1UL << 
CAN_F7R1_FB7_Pos
Ë

	)

7038 
	#CAN_F7R1_FB7
 
CAN_F7R1_FB7_Msk


	)

7039 
	#CAN_F7R1_FB8_Pos
 (8U)

	)

7040 
	#CAN_F7R1_FB8_Msk
 (0x1UL << 
CAN_F7R1_FB8_Pos
Ë

	)

7041 
	#CAN_F7R1_FB8
 
CAN_F7R1_FB8_Msk


	)

7042 
	#CAN_F7R1_FB9_Pos
 (9U)

	)

7043 
	#CAN_F7R1_FB9_Msk
 (0x1UL << 
CAN_F7R1_FB9_Pos
Ë

	)

7044 
	#CAN_F7R1_FB9
 
CAN_F7R1_FB9_Msk


	)

7045 
	#CAN_F7R1_FB10_Pos
 (10U)

	)

7046 
	#CAN_F7R1_FB10_Msk
 (0x1UL << 
CAN_F7R1_FB10_Pos
Ë

	)

7047 
	#CAN_F7R1_FB10
 
CAN_F7R1_FB10_Msk


	)

7048 
	#CAN_F7R1_FB11_Pos
 (11U)

	)

7049 
	#CAN_F7R1_FB11_Msk
 (0x1UL << 
CAN_F7R1_FB11_Pos
Ë

	)

7050 
	#CAN_F7R1_FB11
 
CAN_F7R1_FB11_Msk


	)

7051 
	#CAN_F7R1_FB12_Pos
 (12U)

	)

7052 
	#CAN_F7R1_FB12_Msk
 (0x1UL << 
CAN_F7R1_FB12_Pos
Ë

	)

7053 
	#CAN_F7R1_FB12
 
CAN_F7R1_FB12_Msk


	)

7054 
	#CAN_F7R1_FB13_Pos
 (13U)

	)

7055 
	#CAN_F7R1_FB13_Msk
 (0x1UL << 
CAN_F7R1_FB13_Pos
Ë

	)

7056 
	#CAN_F7R1_FB13
 
CAN_F7R1_FB13_Msk


	)

7057 
	#CAN_F7R1_FB14_Pos
 (14U)

	)

7058 
	#CAN_F7R1_FB14_Msk
 (0x1UL << 
CAN_F7R1_FB14_Pos
Ë

	)

7059 
	#CAN_F7R1_FB14
 
CAN_F7R1_FB14_Msk


	)

7060 
	#CAN_F7R1_FB15_Pos
 (15U)

	)

7061 
	#CAN_F7R1_FB15_Msk
 (0x1UL << 
CAN_F7R1_FB15_Pos
Ë

	)

7062 
	#CAN_F7R1_FB15
 
CAN_F7R1_FB15_Msk


	)

7063 
	#CAN_F7R1_FB16_Pos
 (16U)

	)

7064 
	#CAN_F7R1_FB16_Msk
 (0x1UL << 
CAN_F7R1_FB16_Pos
Ë

	)

7065 
	#CAN_F7R1_FB16
 
CAN_F7R1_FB16_Msk


	)

7066 
	#CAN_F7R1_FB17_Pos
 (17U)

	)

7067 
	#CAN_F7R1_FB17_Msk
 (0x1UL << 
CAN_F7R1_FB17_Pos
Ë

	)

7068 
	#CAN_F7R1_FB17
 
CAN_F7R1_FB17_Msk


	)

7069 
	#CAN_F7R1_FB18_Pos
 (18U)

	)

7070 
	#CAN_F7R1_FB18_Msk
 (0x1UL << 
CAN_F7R1_FB18_Pos
Ë

	)

7071 
	#CAN_F7R1_FB18
 
CAN_F7R1_FB18_Msk


	)

7072 
	#CAN_F7R1_FB19_Pos
 (19U)

	)

7073 
	#CAN_F7R1_FB19_Msk
 (0x1UL << 
CAN_F7R1_FB19_Pos
Ë

	)

7074 
	#CAN_F7R1_FB19
 
CAN_F7R1_FB19_Msk


	)

7075 
	#CAN_F7R1_FB20_Pos
 (20U)

	)

7076 
	#CAN_F7R1_FB20_Msk
 (0x1UL << 
CAN_F7R1_FB20_Pos
Ë

	)

7077 
	#CAN_F7R1_FB20
 
CAN_F7R1_FB20_Msk


	)

7078 
	#CAN_F7R1_FB21_Pos
 (21U)

	)

7079 
	#CAN_F7R1_FB21_Msk
 (0x1UL << 
CAN_F7R1_FB21_Pos
Ë

	)

7080 
	#CAN_F7R1_FB21
 
CAN_F7R1_FB21_Msk


	)

7081 
	#CAN_F7R1_FB22_Pos
 (22U)

	)

7082 
	#CAN_F7R1_FB22_Msk
 (0x1UL << 
CAN_F7R1_FB22_Pos
Ë

	)

7083 
	#CAN_F7R1_FB22
 
CAN_F7R1_FB22_Msk


	)

7084 
	#CAN_F7R1_FB23_Pos
 (23U)

	)

7085 
	#CAN_F7R1_FB23_Msk
 (0x1UL << 
CAN_F7R1_FB23_Pos
Ë

	)

7086 
	#CAN_F7R1_FB23
 
CAN_F7R1_FB23_Msk


	)

7087 
	#CAN_F7R1_FB24_Pos
 (24U)

	)

7088 
	#CAN_F7R1_FB24_Msk
 (0x1UL << 
CAN_F7R1_FB24_Pos
Ë

	)

7089 
	#CAN_F7R1_FB24
 
CAN_F7R1_FB24_Msk


	)

7090 
	#CAN_F7R1_FB25_Pos
 (25U)

	)

7091 
	#CAN_F7R1_FB25_Msk
 (0x1UL << 
CAN_F7R1_FB25_Pos
Ë

	)

7092 
	#CAN_F7R1_FB25
 
CAN_F7R1_FB25_Msk


	)

7093 
	#CAN_F7R1_FB26_Pos
 (26U)

	)

7094 
	#CAN_F7R1_FB26_Msk
 (0x1UL << 
CAN_F7R1_FB26_Pos
Ë

	)

7095 
	#CAN_F7R1_FB26
 
CAN_F7R1_FB26_Msk


	)

7096 
	#CAN_F7R1_FB27_Pos
 (27U)

	)

7097 
	#CAN_F7R1_FB27_Msk
 (0x1UL << 
CAN_F7R1_FB27_Pos
Ë

	)

7098 
	#CAN_F7R1_FB27
 
CAN_F7R1_FB27_Msk


	)

7099 
	#CAN_F7R1_FB28_Pos
 (28U)

	)

7100 
	#CAN_F7R1_FB28_Msk
 (0x1UL << 
CAN_F7R1_FB28_Pos
Ë

	)

7101 
	#CAN_F7R1_FB28
 
CAN_F7R1_FB28_Msk


	)

7102 
	#CAN_F7R1_FB29_Pos
 (29U)

	)

7103 
	#CAN_F7R1_FB29_Msk
 (0x1UL << 
CAN_F7R1_FB29_Pos
Ë

	)

7104 
	#CAN_F7R1_FB29
 
CAN_F7R1_FB29_Msk


	)

7105 
	#CAN_F7R1_FB30_Pos
 (30U)

	)

7106 
	#CAN_F7R1_FB30_Msk
 (0x1UL << 
CAN_F7R1_FB30_Pos
Ë

	)

7107 
	#CAN_F7R1_FB30
 
CAN_F7R1_FB30_Msk


	)

7108 
	#CAN_F7R1_FB31_Pos
 (31U)

	)

7109 
	#CAN_F7R1_FB31_Msk
 (0x1UL << 
CAN_F7R1_FB31_Pos
Ë

	)

7110 
	#CAN_F7R1_FB31
 
CAN_F7R1_FB31_Msk


	)

7113 
	#CAN_F8R1_FB0_Pos
 (0U)

	)

7114 
	#CAN_F8R1_FB0_Msk
 (0x1UL << 
CAN_F8R1_FB0_Pos
Ë

	)

7115 
	#CAN_F8R1_FB0
 
CAN_F8R1_FB0_Msk


	)

7116 
	#CAN_F8R1_FB1_Pos
 (1U)

	)

7117 
	#CAN_F8R1_FB1_Msk
 (0x1UL << 
CAN_F8R1_FB1_Pos
Ë

	)

7118 
	#CAN_F8R1_FB1
 
CAN_F8R1_FB1_Msk


	)

7119 
	#CAN_F8R1_FB2_Pos
 (2U)

	)

7120 
	#CAN_F8R1_FB2_Msk
 (0x1UL << 
CAN_F8R1_FB2_Pos
Ë

	)

7121 
	#CAN_F8R1_FB2
 
CAN_F8R1_FB2_Msk


	)

7122 
	#CAN_F8R1_FB3_Pos
 (3U)

	)

7123 
	#CAN_F8R1_FB3_Msk
 (0x1UL << 
CAN_F8R1_FB3_Pos
Ë

	)

7124 
	#CAN_F8R1_FB3
 
CAN_F8R1_FB3_Msk


	)

7125 
	#CAN_F8R1_FB4_Pos
 (4U)

	)

7126 
	#CAN_F8R1_FB4_Msk
 (0x1UL << 
CAN_F8R1_FB4_Pos
Ë

	)

7127 
	#CAN_F8R1_FB4
 
CAN_F8R1_FB4_Msk


	)

7128 
	#CAN_F8R1_FB5_Pos
 (5U)

	)

7129 
	#CAN_F8R1_FB5_Msk
 (0x1UL << 
CAN_F8R1_FB5_Pos
Ë

	)

7130 
	#CAN_F8R1_FB5
 
CAN_F8R1_FB5_Msk


	)

7131 
	#CAN_F8R1_FB6_Pos
 (6U)

	)

7132 
	#CAN_F8R1_FB6_Msk
 (0x1UL << 
CAN_F8R1_FB6_Pos
Ë

	)

7133 
	#CAN_F8R1_FB6
 
CAN_F8R1_FB6_Msk


	)

7134 
	#CAN_F8R1_FB7_Pos
 (7U)

	)

7135 
	#CAN_F8R1_FB7_Msk
 (0x1UL << 
CAN_F8R1_FB7_Pos
Ë

	)

7136 
	#CAN_F8R1_FB7
 
CAN_F8R1_FB7_Msk


	)

7137 
	#CAN_F8R1_FB8_Pos
 (8U)

	)

7138 
	#CAN_F8R1_FB8_Msk
 (0x1UL << 
CAN_F8R1_FB8_Pos
Ë

	)

7139 
	#CAN_F8R1_FB8
 
CAN_F8R1_FB8_Msk


	)

7140 
	#CAN_F8R1_FB9_Pos
 (9U)

	)

7141 
	#CAN_F8R1_FB9_Msk
 (0x1UL << 
CAN_F8R1_FB9_Pos
Ë

	)

7142 
	#CAN_F8R1_FB9
 
CAN_F8R1_FB9_Msk


	)

7143 
	#CAN_F8R1_FB10_Pos
 (10U)

	)

7144 
	#CAN_F8R1_FB10_Msk
 (0x1UL << 
CAN_F8R1_FB10_Pos
Ë

	)

7145 
	#CAN_F8R1_FB10
 
CAN_F8R1_FB10_Msk


	)

7146 
	#CAN_F8R1_FB11_Pos
 (11U)

	)

7147 
	#CAN_F8R1_FB11_Msk
 (0x1UL << 
CAN_F8R1_FB11_Pos
Ë

	)

7148 
	#CAN_F8R1_FB11
 
CAN_F8R1_FB11_Msk


	)

7149 
	#CAN_F8R1_FB12_Pos
 (12U)

	)

7150 
	#CAN_F8R1_FB12_Msk
 (0x1UL << 
CAN_F8R1_FB12_Pos
Ë

	)

7151 
	#CAN_F8R1_FB12
 
CAN_F8R1_FB12_Msk


	)

7152 
	#CAN_F8R1_FB13_Pos
 (13U)

	)

7153 
	#CAN_F8R1_FB13_Msk
 (0x1UL << 
CAN_F8R1_FB13_Pos
Ë

	)

7154 
	#CAN_F8R1_FB13
 
CAN_F8R1_FB13_Msk


	)

7155 
	#CAN_F8R1_FB14_Pos
 (14U)

	)

7156 
	#CAN_F8R1_FB14_Msk
 (0x1UL << 
CAN_F8R1_FB14_Pos
Ë

	)

7157 
	#CAN_F8R1_FB14
 
CAN_F8R1_FB14_Msk


	)

7158 
	#CAN_F8R1_FB15_Pos
 (15U)

	)

7159 
	#CAN_F8R1_FB15_Msk
 (0x1UL << 
CAN_F8R1_FB15_Pos
Ë

	)

7160 
	#CAN_F8R1_FB15
 
CAN_F8R1_FB15_Msk


	)

7161 
	#CAN_F8R1_FB16_Pos
 (16U)

	)

7162 
	#CAN_F8R1_FB16_Msk
 (0x1UL << 
CAN_F8R1_FB16_Pos
Ë

	)

7163 
	#CAN_F8R1_FB16
 
CAN_F8R1_FB16_Msk


	)

7164 
	#CAN_F8R1_FB17_Pos
 (17U)

	)

7165 
	#CAN_F8R1_FB17_Msk
 (0x1UL << 
CAN_F8R1_FB17_Pos
Ë

	)

7166 
	#CAN_F8R1_FB17
 
CAN_F8R1_FB17_Msk


	)

7167 
	#CAN_F8R1_FB18_Pos
 (18U)

	)

7168 
	#CAN_F8R1_FB18_Msk
 (0x1UL << 
CAN_F8R1_FB18_Pos
Ë

	)

7169 
	#CAN_F8R1_FB18
 
CAN_F8R1_FB18_Msk


	)

7170 
	#CAN_F8R1_FB19_Pos
 (19U)

	)

7171 
	#CAN_F8R1_FB19_Msk
 (0x1UL << 
CAN_F8R1_FB19_Pos
Ë

	)

7172 
	#CAN_F8R1_FB19
 
CAN_F8R1_FB19_Msk


	)

7173 
	#CAN_F8R1_FB20_Pos
 (20U)

	)

7174 
	#CAN_F8R1_FB20_Msk
 (0x1UL << 
CAN_F8R1_FB20_Pos
Ë

	)

7175 
	#CAN_F8R1_FB20
 
CAN_F8R1_FB20_Msk


	)

7176 
	#CAN_F8R1_FB21_Pos
 (21U)

	)

7177 
	#CAN_F8R1_FB21_Msk
 (0x1UL << 
CAN_F8R1_FB21_Pos
Ë

	)

7178 
	#CAN_F8R1_FB21
 
CAN_F8R1_FB21_Msk


	)

7179 
	#CAN_F8R1_FB22_Pos
 (22U)

	)

7180 
	#CAN_F8R1_FB22_Msk
 (0x1UL << 
CAN_F8R1_FB22_Pos
Ë

	)

7181 
	#CAN_F8R1_FB22
 
CAN_F8R1_FB22_Msk


	)

7182 
	#CAN_F8R1_FB23_Pos
 (23U)

	)

7183 
	#CAN_F8R1_FB23_Msk
 (0x1UL << 
CAN_F8R1_FB23_Pos
Ë

	)

7184 
	#CAN_F8R1_FB23
 
CAN_F8R1_FB23_Msk


	)

7185 
	#CAN_F8R1_FB24_Pos
 (24U)

	)

7186 
	#CAN_F8R1_FB24_Msk
 (0x1UL << 
CAN_F8R1_FB24_Pos
Ë

	)

7187 
	#CAN_F8R1_FB24
 
CAN_F8R1_FB24_Msk


	)

7188 
	#CAN_F8R1_FB25_Pos
 (25U)

	)

7189 
	#CAN_F8R1_FB25_Msk
 (0x1UL << 
CAN_F8R1_FB25_Pos
Ë

	)

7190 
	#CAN_F8R1_FB25
 
CAN_F8R1_FB25_Msk


	)

7191 
	#CAN_F8R1_FB26_Pos
 (26U)

	)

7192 
	#CAN_F8R1_FB26_Msk
 (0x1UL << 
CAN_F8R1_FB26_Pos
Ë

	)

7193 
	#CAN_F8R1_FB26
 
CAN_F8R1_FB26_Msk


	)

7194 
	#CAN_F8R1_FB27_Pos
 (27U)

	)

7195 
	#CAN_F8R1_FB27_Msk
 (0x1UL << 
CAN_F8R1_FB27_Pos
Ë

	)

7196 
	#CAN_F8R1_FB27
 
CAN_F8R1_FB27_Msk


	)

7197 
	#CAN_F8R1_FB28_Pos
 (28U)

	)

7198 
	#CAN_F8R1_FB28_Msk
 (0x1UL << 
CAN_F8R1_FB28_Pos
Ë

	)

7199 
	#CAN_F8R1_FB28
 
CAN_F8R1_FB28_Msk


	)

7200 
	#CAN_F8R1_FB29_Pos
 (29U)

	)

7201 
	#CAN_F8R1_FB29_Msk
 (0x1UL << 
CAN_F8R1_FB29_Pos
Ë

	)

7202 
	#CAN_F8R1_FB29
 
CAN_F8R1_FB29_Msk


	)

7203 
	#CAN_F8R1_FB30_Pos
 (30U)

	)

7204 
	#CAN_F8R1_FB30_Msk
 (0x1UL << 
CAN_F8R1_FB30_Pos
Ë

	)

7205 
	#CAN_F8R1_FB30
 
CAN_F8R1_FB30_Msk


	)

7206 
	#CAN_F8R1_FB31_Pos
 (31U)

	)

7207 
	#CAN_F8R1_FB31_Msk
 (0x1UL << 
CAN_F8R1_FB31_Pos
Ë

	)

7208 
	#CAN_F8R1_FB31
 
CAN_F8R1_FB31_Msk


	)

7211 
	#CAN_F9R1_FB0_Pos
 (0U)

	)

7212 
	#CAN_F9R1_FB0_Msk
 (0x1UL << 
CAN_F9R1_FB0_Pos
Ë

	)

7213 
	#CAN_F9R1_FB0
 
CAN_F9R1_FB0_Msk


	)

7214 
	#CAN_F9R1_FB1_Pos
 (1U)

	)

7215 
	#CAN_F9R1_FB1_Msk
 (0x1UL << 
CAN_F9R1_FB1_Pos
Ë

	)

7216 
	#CAN_F9R1_FB1
 
CAN_F9R1_FB1_Msk


	)

7217 
	#CAN_F9R1_FB2_Pos
 (2U)

	)

7218 
	#CAN_F9R1_FB2_Msk
 (0x1UL << 
CAN_F9R1_FB2_Pos
Ë

	)

7219 
	#CAN_F9R1_FB2
 
CAN_F9R1_FB2_Msk


	)

7220 
	#CAN_F9R1_FB3_Pos
 (3U)

	)

7221 
	#CAN_F9R1_FB3_Msk
 (0x1UL << 
CAN_F9R1_FB3_Pos
Ë

	)

7222 
	#CAN_F9R1_FB3
 
CAN_F9R1_FB3_Msk


	)

7223 
	#CAN_F9R1_FB4_Pos
 (4U)

	)

7224 
	#CAN_F9R1_FB4_Msk
 (0x1UL << 
CAN_F9R1_FB4_Pos
Ë

	)

7225 
	#CAN_F9R1_FB4
 
CAN_F9R1_FB4_Msk


	)

7226 
	#CAN_F9R1_FB5_Pos
 (5U)

	)

7227 
	#CAN_F9R1_FB5_Msk
 (0x1UL << 
CAN_F9R1_FB5_Pos
Ë

	)

7228 
	#CAN_F9R1_FB5
 
CAN_F9R1_FB5_Msk


	)

7229 
	#CAN_F9R1_FB6_Pos
 (6U)

	)

7230 
	#CAN_F9R1_FB6_Msk
 (0x1UL << 
CAN_F9R1_FB6_Pos
Ë

	)

7231 
	#CAN_F9R1_FB6
 
CAN_F9R1_FB6_Msk


	)

7232 
	#CAN_F9R1_FB7_Pos
 (7U)

	)

7233 
	#CAN_F9R1_FB7_Msk
 (0x1UL << 
CAN_F9R1_FB7_Pos
Ë

	)

7234 
	#CAN_F9R1_FB7
 
CAN_F9R1_FB7_Msk


	)

7235 
	#CAN_F9R1_FB8_Pos
 (8U)

	)

7236 
	#CAN_F9R1_FB8_Msk
 (0x1UL << 
CAN_F9R1_FB8_Pos
Ë

	)

7237 
	#CAN_F9R1_FB8
 
CAN_F9R1_FB8_Msk


	)

7238 
	#CAN_F9R1_FB9_Pos
 (9U)

	)

7239 
	#CAN_F9R1_FB9_Msk
 (0x1UL << 
CAN_F9R1_FB9_Pos
Ë

	)

7240 
	#CAN_F9R1_FB9
 
CAN_F9R1_FB9_Msk


	)

7241 
	#CAN_F9R1_FB10_Pos
 (10U)

	)

7242 
	#CAN_F9R1_FB10_Msk
 (0x1UL << 
CAN_F9R1_FB10_Pos
Ë

	)

7243 
	#CAN_F9R1_FB10
 
CAN_F9R1_FB10_Msk


	)

7244 
	#CAN_F9R1_FB11_Pos
 (11U)

	)

7245 
	#CAN_F9R1_FB11_Msk
 (0x1UL << 
CAN_F9R1_FB11_Pos
Ë

	)

7246 
	#CAN_F9R1_FB11
 
CAN_F9R1_FB11_Msk


	)

7247 
	#CAN_F9R1_FB12_Pos
 (12U)

	)

7248 
	#CAN_F9R1_FB12_Msk
 (0x1UL << 
CAN_F9R1_FB12_Pos
Ë

	)

7249 
	#CAN_F9R1_FB12
 
CAN_F9R1_FB12_Msk


	)

7250 
	#CAN_F9R1_FB13_Pos
 (13U)

	)

7251 
	#CAN_F9R1_FB13_Msk
 (0x1UL << 
CAN_F9R1_FB13_Pos
Ë

	)

7252 
	#CAN_F9R1_FB13
 
CAN_F9R1_FB13_Msk


	)

7253 
	#CAN_F9R1_FB14_Pos
 (14U)

	)

7254 
	#CAN_F9R1_FB14_Msk
 (0x1UL << 
CAN_F9R1_FB14_Pos
Ë

	)

7255 
	#CAN_F9R1_FB14
 
CAN_F9R1_FB14_Msk


	)

7256 
	#CAN_F9R1_FB15_Pos
 (15U)

	)

7257 
	#CAN_F9R1_FB15_Msk
 (0x1UL << 
CAN_F9R1_FB15_Pos
Ë

	)

7258 
	#CAN_F9R1_FB15
 
CAN_F9R1_FB15_Msk


	)

7259 
	#CAN_F9R1_FB16_Pos
 (16U)

	)

7260 
	#CAN_F9R1_FB16_Msk
 (0x1UL << 
CAN_F9R1_FB16_Pos
Ë

	)

7261 
	#CAN_F9R1_FB16
 
CAN_F9R1_FB16_Msk


	)

7262 
	#CAN_F9R1_FB17_Pos
 (17U)

	)

7263 
	#CAN_F9R1_FB17_Msk
 (0x1UL << 
CAN_F9R1_FB17_Pos
Ë

	)

7264 
	#CAN_F9R1_FB17
 
CAN_F9R1_FB17_Msk


	)

7265 
	#CAN_F9R1_FB18_Pos
 (18U)

	)

7266 
	#CAN_F9R1_FB18_Msk
 (0x1UL << 
CAN_F9R1_FB18_Pos
Ë

	)

7267 
	#CAN_F9R1_FB18
 
CAN_F9R1_FB18_Msk


	)

7268 
	#CAN_F9R1_FB19_Pos
 (19U)

	)

7269 
	#CAN_F9R1_FB19_Msk
 (0x1UL << 
CAN_F9R1_FB19_Pos
Ë

	)

7270 
	#CAN_F9R1_FB19
 
CAN_F9R1_FB19_Msk


	)

7271 
	#CAN_F9R1_FB20_Pos
 (20U)

	)

7272 
	#CAN_F9R1_FB20_Msk
 (0x1UL << 
CAN_F9R1_FB20_Pos
Ë

	)

7273 
	#CAN_F9R1_FB20
 
CAN_F9R1_FB20_Msk


	)

7274 
	#CAN_F9R1_FB21_Pos
 (21U)

	)

7275 
	#CAN_F9R1_FB21_Msk
 (0x1UL << 
CAN_F9R1_FB21_Pos
Ë

	)

7276 
	#CAN_F9R1_FB21
 
CAN_F9R1_FB21_Msk


	)

7277 
	#CAN_F9R1_FB22_Pos
 (22U)

	)

7278 
	#CAN_F9R1_FB22_Msk
 (0x1UL << 
CAN_F9R1_FB22_Pos
Ë

	)

7279 
	#CAN_F9R1_FB22
 
CAN_F9R1_FB22_Msk


	)

7280 
	#CAN_F9R1_FB23_Pos
 (23U)

	)

7281 
	#CAN_F9R1_FB23_Msk
 (0x1UL << 
CAN_F9R1_FB23_Pos
Ë

	)

7282 
	#CAN_F9R1_FB23
 
CAN_F9R1_FB23_Msk


	)

7283 
	#CAN_F9R1_FB24_Pos
 (24U)

	)

7284 
	#CAN_F9R1_FB24_Msk
 (0x1UL << 
CAN_F9R1_FB24_Pos
Ë

	)

7285 
	#CAN_F9R1_FB24
 
CAN_F9R1_FB24_Msk


	)

7286 
	#CAN_F9R1_FB25_Pos
 (25U)

	)

7287 
	#CAN_F9R1_FB25_Msk
 (0x1UL << 
CAN_F9R1_FB25_Pos
Ë

	)

7288 
	#CAN_F9R1_FB25
 
CAN_F9R1_FB25_Msk


	)

7289 
	#CAN_F9R1_FB26_Pos
 (26U)

	)

7290 
	#CAN_F9R1_FB26_Msk
 (0x1UL << 
CAN_F9R1_FB26_Pos
Ë

	)

7291 
	#CAN_F9R1_FB26
 
CAN_F9R1_FB26_Msk


	)

7292 
	#CAN_F9R1_FB27_Pos
 (27U)

	)

7293 
	#CAN_F9R1_FB27_Msk
 (0x1UL << 
CAN_F9R1_FB27_Pos
Ë

	)

7294 
	#CAN_F9R1_FB27
 
CAN_F9R1_FB27_Msk


	)

7295 
	#CAN_F9R1_FB28_Pos
 (28U)

	)

7296 
	#CAN_F9R1_FB28_Msk
 (0x1UL << 
CAN_F9R1_FB28_Pos
Ë

	)

7297 
	#CAN_F9R1_FB28
 
CAN_F9R1_FB28_Msk


	)

7298 
	#CAN_F9R1_FB29_Pos
 (29U)

	)

7299 
	#CAN_F9R1_FB29_Msk
 (0x1UL << 
CAN_F9R1_FB29_Pos
Ë

	)

7300 
	#CAN_F9R1_FB29
 
CAN_F9R1_FB29_Msk


	)

7301 
	#CAN_F9R1_FB30_Pos
 (30U)

	)

7302 
	#CAN_F9R1_FB30_Msk
 (0x1UL << 
CAN_F9R1_FB30_Pos
Ë

	)

7303 
	#CAN_F9R1_FB30
 
CAN_F9R1_FB30_Msk


	)

7304 
	#CAN_F9R1_FB31_Pos
 (31U)

	)

7305 
	#CAN_F9R1_FB31_Msk
 (0x1UL << 
CAN_F9R1_FB31_Pos
Ë

	)

7306 
	#CAN_F9R1_FB31
 
CAN_F9R1_FB31_Msk


	)

7309 
	#CAN_F10R1_FB0_Pos
 (0U)

	)

7310 
	#CAN_F10R1_FB0_Msk
 (0x1UL << 
CAN_F10R1_FB0_Pos
Ë

	)

7311 
	#CAN_F10R1_FB0
 
CAN_F10R1_FB0_Msk


	)

7312 
	#CAN_F10R1_FB1_Pos
 (1U)

	)

7313 
	#CAN_F10R1_FB1_Msk
 (0x1UL << 
CAN_F10R1_FB1_Pos
Ë

	)

7314 
	#CAN_F10R1_FB1
 
CAN_F10R1_FB1_Msk


	)

7315 
	#CAN_F10R1_FB2_Pos
 (2U)

	)

7316 
	#CAN_F10R1_FB2_Msk
 (0x1UL << 
CAN_F10R1_FB2_Pos
Ë

	)

7317 
	#CAN_F10R1_FB2
 
CAN_F10R1_FB2_Msk


	)

7318 
	#CAN_F10R1_FB3_Pos
 (3U)

	)

7319 
	#CAN_F10R1_FB3_Msk
 (0x1UL << 
CAN_F10R1_FB3_Pos
Ë

	)

7320 
	#CAN_F10R1_FB3
 
CAN_F10R1_FB3_Msk


	)

7321 
	#CAN_F10R1_FB4_Pos
 (4U)

	)

7322 
	#CAN_F10R1_FB4_Msk
 (0x1UL << 
CAN_F10R1_FB4_Pos
Ë

	)

7323 
	#CAN_F10R1_FB4
 
CAN_F10R1_FB4_Msk


	)

7324 
	#CAN_F10R1_FB5_Pos
 (5U)

	)

7325 
	#CAN_F10R1_FB5_Msk
 (0x1UL << 
CAN_F10R1_FB5_Pos
Ë

	)

7326 
	#CAN_F10R1_FB5
 
CAN_F10R1_FB5_Msk


	)

7327 
	#CAN_F10R1_FB6_Pos
 (6U)

	)

7328 
	#CAN_F10R1_FB6_Msk
 (0x1UL << 
CAN_F10R1_FB6_Pos
Ë

	)

7329 
	#CAN_F10R1_FB6
 
CAN_F10R1_FB6_Msk


	)

7330 
	#CAN_F10R1_FB7_Pos
 (7U)

	)

7331 
	#CAN_F10R1_FB7_Msk
 (0x1UL << 
CAN_F10R1_FB7_Pos
Ë

	)

7332 
	#CAN_F10R1_FB7
 
CAN_F10R1_FB7_Msk


	)

7333 
	#CAN_F10R1_FB8_Pos
 (8U)

	)

7334 
	#CAN_F10R1_FB8_Msk
 (0x1UL << 
CAN_F10R1_FB8_Pos
Ë

	)

7335 
	#CAN_F10R1_FB8
 
CAN_F10R1_FB8_Msk


	)

7336 
	#CAN_F10R1_FB9_Pos
 (9U)

	)

7337 
	#CAN_F10R1_FB9_Msk
 (0x1UL << 
CAN_F10R1_FB9_Pos
Ë

	)

7338 
	#CAN_F10R1_FB9
 
CAN_F10R1_FB9_Msk


	)

7339 
	#CAN_F10R1_FB10_Pos
 (10U)

	)

7340 
	#CAN_F10R1_FB10_Msk
 (0x1UL << 
CAN_F10R1_FB10_Pos
Ë

	)

7341 
	#CAN_F10R1_FB10
 
CAN_F10R1_FB10_Msk


	)

7342 
	#CAN_F10R1_FB11_Pos
 (11U)

	)

7343 
	#CAN_F10R1_FB11_Msk
 (0x1UL << 
CAN_F10R1_FB11_Pos
Ë

	)

7344 
	#CAN_F10R1_FB11
 
CAN_F10R1_FB11_Msk


	)

7345 
	#CAN_F10R1_FB12_Pos
 (12U)

	)

7346 
	#CAN_F10R1_FB12_Msk
 (0x1UL << 
CAN_F10R1_FB12_Pos
Ë

	)

7347 
	#CAN_F10R1_FB12
 
CAN_F10R1_FB12_Msk


	)

7348 
	#CAN_F10R1_FB13_Pos
 (13U)

	)

7349 
	#CAN_F10R1_FB13_Msk
 (0x1UL << 
CAN_F10R1_FB13_Pos
Ë

	)

7350 
	#CAN_F10R1_FB13
 
CAN_F10R1_FB13_Msk


	)

7351 
	#CAN_F10R1_FB14_Pos
 (14U)

	)

7352 
	#CAN_F10R1_FB14_Msk
 (0x1UL << 
CAN_F10R1_FB14_Pos
Ë

	)

7353 
	#CAN_F10R1_FB14
 
CAN_F10R1_FB14_Msk


	)

7354 
	#CAN_F10R1_FB15_Pos
 (15U)

	)

7355 
	#CAN_F10R1_FB15_Msk
 (0x1UL << 
CAN_F10R1_FB15_Pos
Ë

	)

7356 
	#CAN_F10R1_FB15
 
CAN_F10R1_FB15_Msk


	)

7357 
	#CAN_F10R1_FB16_Pos
 (16U)

	)

7358 
	#CAN_F10R1_FB16_Msk
 (0x1UL << 
CAN_F10R1_FB16_Pos
Ë

	)

7359 
	#CAN_F10R1_FB16
 
CAN_F10R1_FB16_Msk


	)

7360 
	#CAN_F10R1_FB17_Pos
 (17U)

	)

7361 
	#CAN_F10R1_FB17_Msk
 (0x1UL << 
CAN_F10R1_FB17_Pos
Ë

	)

7362 
	#CAN_F10R1_FB17
 
CAN_F10R1_FB17_Msk


	)

7363 
	#CAN_F10R1_FB18_Pos
 (18U)

	)

7364 
	#CAN_F10R1_FB18_Msk
 (0x1UL << 
CAN_F10R1_FB18_Pos
Ë

	)

7365 
	#CAN_F10R1_FB18
 
CAN_F10R1_FB18_Msk


	)

7366 
	#CAN_F10R1_FB19_Pos
 (19U)

	)

7367 
	#CAN_F10R1_FB19_Msk
 (0x1UL << 
CAN_F10R1_FB19_Pos
Ë

	)

7368 
	#CAN_F10R1_FB19
 
CAN_F10R1_FB19_Msk


	)

7369 
	#CAN_F10R1_FB20_Pos
 (20U)

	)

7370 
	#CAN_F10R1_FB20_Msk
 (0x1UL << 
CAN_F10R1_FB20_Pos
Ë

	)

7371 
	#CAN_F10R1_FB20
 
CAN_F10R1_FB20_Msk


	)

7372 
	#CAN_F10R1_FB21_Pos
 (21U)

	)

7373 
	#CAN_F10R1_FB21_Msk
 (0x1UL << 
CAN_F10R1_FB21_Pos
Ë

	)

7374 
	#CAN_F10R1_FB21
 
CAN_F10R1_FB21_Msk


	)

7375 
	#CAN_F10R1_FB22_Pos
 (22U)

	)

7376 
	#CAN_F10R1_FB22_Msk
 (0x1UL << 
CAN_F10R1_FB22_Pos
Ë

	)

7377 
	#CAN_F10R1_FB22
 
CAN_F10R1_FB22_Msk


	)

7378 
	#CAN_F10R1_FB23_Pos
 (23U)

	)

7379 
	#CAN_F10R1_FB23_Msk
 (0x1UL << 
CAN_F10R1_FB23_Pos
Ë

	)

7380 
	#CAN_F10R1_FB23
 
CAN_F10R1_FB23_Msk


	)

7381 
	#CAN_F10R1_FB24_Pos
 (24U)

	)

7382 
	#CAN_F10R1_FB24_Msk
 (0x1UL << 
CAN_F10R1_FB24_Pos
Ë

	)

7383 
	#CAN_F10R1_FB24
 
CAN_F10R1_FB24_Msk


	)

7384 
	#CAN_F10R1_FB25_Pos
 (25U)

	)

7385 
	#CAN_F10R1_FB25_Msk
 (0x1UL << 
CAN_F10R1_FB25_Pos
Ë

	)

7386 
	#CAN_F10R1_FB25
 
CAN_F10R1_FB25_Msk


	)

7387 
	#CAN_F10R1_FB26_Pos
 (26U)

	)

7388 
	#CAN_F10R1_FB26_Msk
 (0x1UL << 
CAN_F10R1_FB26_Pos
Ë

	)

7389 
	#CAN_F10R1_FB26
 
CAN_F10R1_FB26_Msk


	)

7390 
	#CAN_F10R1_FB27_Pos
 (27U)

	)

7391 
	#CAN_F10R1_FB27_Msk
 (0x1UL << 
CAN_F10R1_FB27_Pos
Ë

	)

7392 
	#CAN_F10R1_FB27
 
CAN_F10R1_FB27_Msk


	)

7393 
	#CAN_F10R1_FB28_Pos
 (28U)

	)

7394 
	#CAN_F10R1_FB28_Msk
 (0x1UL << 
CAN_F10R1_FB28_Pos
Ë

	)

7395 
	#CAN_F10R1_FB28
 
CAN_F10R1_FB28_Msk


	)

7396 
	#CAN_F10R1_FB29_Pos
 (29U)

	)

7397 
	#CAN_F10R1_FB29_Msk
 (0x1UL << 
CAN_F10R1_FB29_Pos
Ë

	)

7398 
	#CAN_F10R1_FB29
 
CAN_F10R1_FB29_Msk


	)

7399 
	#CAN_F10R1_FB30_Pos
 (30U)

	)

7400 
	#CAN_F10R1_FB30_Msk
 (0x1UL << 
CAN_F10R1_FB30_Pos
Ë

	)

7401 
	#CAN_F10R1_FB30
 
CAN_F10R1_FB30_Msk


	)

7402 
	#CAN_F10R1_FB31_Pos
 (31U)

	)

7403 
	#CAN_F10R1_FB31_Msk
 (0x1UL << 
CAN_F10R1_FB31_Pos
Ë

	)

7404 
	#CAN_F10R1_FB31
 
CAN_F10R1_FB31_Msk


	)

7407 
	#CAN_F11R1_FB0_Pos
 (0U)

	)

7408 
	#CAN_F11R1_FB0_Msk
 (0x1UL << 
CAN_F11R1_FB0_Pos
Ë

	)

7409 
	#CAN_F11R1_FB0
 
CAN_F11R1_FB0_Msk


	)

7410 
	#CAN_F11R1_FB1_Pos
 (1U)

	)

7411 
	#CAN_F11R1_FB1_Msk
 (0x1UL << 
CAN_F11R1_FB1_Pos
Ë

	)

7412 
	#CAN_F11R1_FB1
 
CAN_F11R1_FB1_Msk


	)

7413 
	#CAN_F11R1_FB2_Pos
 (2U)

	)

7414 
	#CAN_F11R1_FB2_Msk
 (0x1UL << 
CAN_F11R1_FB2_Pos
Ë

	)

7415 
	#CAN_F11R1_FB2
 
CAN_F11R1_FB2_Msk


	)

7416 
	#CAN_F11R1_FB3_Pos
 (3U)

	)

7417 
	#CAN_F11R1_FB3_Msk
 (0x1UL << 
CAN_F11R1_FB3_Pos
Ë

	)

7418 
	#CAN_F11R1_FB3
 
CAN_F11R1_FB3_Msk


	)

7419 
	#CAN_F11R1_FB4_Pos
 (4U)

	)

7420 
	#CAN_F11R1_FB4_Msk
 (0x1UL << 
CAN_F11R1_FB4_Pos
Ë

	)

7421 
	#CAN_F11R1_FB4
 
CAN_F11R1_FB4_Msk


	)

7422 
	#CAN_F11R1_FB5_Pos
 (5U)

	)

7423 
	#CAN_F11R1_FB5_Msk
 (0x1UL << 
CAN_F11R1_FB5_Pos
Ë

	)

7424 
	#CAN_F11R1_FB5
 
CAN_F11R1_FB5_Msk


	)

7425 
	#CAN_F11R1_FB6_Pos
 (6U)

	)

7426 
	#CAN_F11R1_FB6_Msk
 (0x1UL << 
CAN_F11R1_FB6_Pos
Ë

	)

7427 
	#CAN_F11R1_FB6
 
CAN_F11R1_FB6_Msk


	)

7428 
	#CAN_F11R1_FB7_Pos
 (7U)

	)

7429 
	#CAN_F11R1_FB7_Msk
 (0x1UL << 
CAN_F11R1_FB7_Pos
Ë

	)

7430 
	#CAN_F11R1_FB7
 
CAN_F11R1_FB7_Msk


	)

7431 
	#CAN_F11R1_FB8_Pos
 (8U)

	)

7432 
	#CAN_F11R1_FB8_Msk
 (0x1UL << 
CAN_F11R1_FB8_Pos
Ë

	)

7433 
	#CAN_F11R1_FB8
 
CAN_F11R1_FB8_Msk


	)

7434 
	#CAN_F11R1_FB9_Pos
 (9U)

	)

7435 
	#CAN_F11R1_FB9_Msk
 (0x1UL << 
CAN_F11R1_FB9_Pos
Ë

	)

7436 
	#CAN_F11R1_FB9
 
CAN_F11R1_FB9_Msk


	)

7437 
	#CAN_F11R1_FB10_Pos
 (10U)

	)

7438 
	#CAN_F11R1_FB10_Msk
 (0x1UL << 
CAN_F11R1_FB10_Pos
Ë

	)

7439 
	#CAN_F11R1_FB10
 
CAN_F11R1_FB10_Msk


	)

7440 
	#CAN_F11R1_FB11_Pos
 (11U)

	)

7441 
	#CAN_F11R1_FB11_Msk
 (0x1UL << 
CAN_F11R1_FB11_Pos
Ë

	)

7442 
	#CAN_F11R1_FB11
 
CAN_F11R1_FB11_Msk


	)

7443 
	#CAN_F11R1_FB12_Pos
 (12U)

	)

7444 
	#CAN_F11R1_FB12_Msk
 (0x1UL << 
CAN_F11R1_FB12_Pos
Ë

	)

7445 
	#CAN_F11R1_FB12
 
CAN_F11R1_FB12_Msk


	)

7446 
	#CAN_F11R1_FB13_Pos
 (13U)

	)

7447 
	#CAN_F11R1_FB13_Msk
 (0x1UL << 
CAN_F11R1_FB13_Pos
Ë

	)

7448 
	#CAN_F11R1_FB13
 
CAN_F11R1_FB13_Msk


	)

7449 
	#CAN_F11R1_FB14_Pos
 (14U)

	)

7450 
	#CAN_F11R1_FB14_Msk
 (0x1UL << 
CAN_F11R1_FB14_Pos
Ë

	)

7451 
	#CAN_F11R1_FB14
 
CAN_F11R1_FB14_Msk


	)

7452 
	#CAN_F11R1_FB15_Pos
 (15U)

	)

7453 
	#CAN_F11R1_FB15_Msk
 (0x1UL << 
CAN_F11R1_FB15_Pos
Ë

	)

7454 
	#CAN_F11R1_FB15
 
CAN_F11R1_FB15_Msk


	)

7455 
	#CAN_F11R1_FB16_Pos
 (16U)

	)

7456 
	#CAN_F11R1_FB16_Msk
 (0x1UL << 
CAN_F11R1_FB16_Pos
Ë

	)

7457 
	#CAN_F11R1_FB16
 
CAN_F11R1_FB16_Msk


	)

7458 
	#CAN_F11R1_FB17_Pos
 (17U)

	)

7459 
	#CAN_F11R1_FB17_Msk
 (0x1UL << 
CAN_F11R1_FB17_Pos
Ë

	)

7460 
	#CAN_F11R1_FB17
 
CAN_F11R1_FB17_Msk


	)

7461 
	#CAN_F11R1_FB18_Pos
 (18U)

	)

7462 
	#CAN_F11R1_FB18_Msk
 (0x1UL << 
CAN_F11R1_FB18_Pos
Ë

	)

7463 
	#CAN_F11R1_FB18
 
CAN_F11R1_FB18_Msk


	)

7464 
	#CAN_F11R1_FB19_Pos
 (19U)

	)

7465 
	#CAN_F11R1_FB19_Msk
 (0x1UL << 
CAN_F11R1_FB19_Pos
Ë

	)

7466 
	#CAN_F11R1_FB19
 
CAN_F11R1_FB19_Msk


	)

7467 
	#CAN_F11R1_FB20_Pos
 (20U)

	)

7468 
	#CAN_F11R1_FB20_Msk
 (0x1UL << 
CAN_F11R1_FB20_Pos
Ë

	)

7469 
	#CAN_F11R1_FB20
 
CAN_F11R1_FB20_Msk


	)

7470 
	#CAN_F11R1_FB21_Pos
 (21U)

	)

7471 
	#CAN_F11R1_FB21_Msk
 (0x1UL << 
CAN_F11R1_FB21_Pos
Ë

	)

7472 
	#CAN_F11R1_FB21
 
CAN_F11R1_FB21_Msk


	)

7473 
	#CAN_F11R1_FB22_Pos
 (22U)

	)

7474 
	#CAN_F11R1_FB22_Msk
 (0x1UL << 
CAN_F11R1_FB22_Pos
Ë

	)

7475 
	#CAN_F11R1_FB22
 
CAN_F11R1_FB22_Msk


	)

7476 
	#CAN_F11R1_FB23_Pos
 (23U)

	)

7477 
	#CAN_F11R1_FB23_Msk
 (0x1UL << 
CAN_F11R1_FB23_Pos
Ë

	)

7478 
	#CAN_F11R1_FB23
 
CAN_F11R1_FB23_Msk


	)

7479 
	#CAN_F11R1_FB24_Pos
 (24U)

	)

7480 
	#CAN_F11R1_FB24_Msk
 (0x1UL << 
CAN_F11R1_FB24_Pos
Ë

	)

7481 
	#CAN_F11R1_FB24
 
CAN_F11R1_FB24_Msk


	)

7482 
	#CAN_F11R1_FB25_Pos
 (25U)

	)

7483 
	#CAN_F11R1_FB25_Msk
 (0x1UL << 
CAN_F11R1_FB25_Pos
Ë

	)

7484 
	#CAN_F11R1_FB25
 
CAN_F11R1_FB25_Msk


	)

7485 
	#CAN_F11R1_FB26_Pos
 (26U)

	)

7486 
	#CAN_F11R1_FB26_Msk
 (0x1UL << 
CAN_F11R1_FB26_Pos
Ë

	)

7487 
	#CAN_F11R1_FB26
 
CAN_F11R1_FB26_Msk


	)

7488 
	#CAN_F11R1_FB27_Pos
 (27U)

	)

7489 
	#CAN_F11R1_FB27_Msk
 (0x1UL << 
CAN_F11R1_FB27_Pos
Ë

	)

7490 
	#CAN_F11R1_FB27
 
CAN_F11R1_FB27_Msk


	)

7491 
	#CAN_F11R1_FB28_Pos
 (28U)

	)

7492 
	#CAN_F11R1_FB28_Msk
 (0x1UL << 
CAN_F11R1_FB28_Pos
Ë

	)

7493 
	#CAN_F11R1_FB28
 
CAN_F11R1_FB28_Msk


	)

7494 
	#CAN_F11R1_FB29_Pos
 (29U)

	)

7495 
	#CAN_F11R1_FB29_Msk
 (0x1UL << 
CAN_F11R1_FB29_Pos
Ë

	)

7496 
	#CAN_F11R1_FB29
 
CAN_F11R1_FB29_Msk


	)

7497 
	#CAN_F11R1_FB30_Pos
 (30U)

	)

7498 
	#CAN_F11R1_FB30_Msk
 (0x1UL << 
CAN_F11R1_FB30_Pos
Ë

	)

7499 
	#CAN_F11R1_FB30
 
CAN_F11R1_FB30_Msk


	)

7500 
	#CAN_F11R1_FB31_Pos
 (31U)

	)

7501 
	#CAN_F11R1_FB31_Msk
 (0x1UL << 
CAN_F11R1_FB31_Pos
Ë

	)

7502 
	#CAN_F11R1_FB31
 
CAN_F11R1_FB31_Msk


	)

7505 
	#CAN_F12R1_FB0_Pos
 (0U)

	)

7506 
	#CAN_F12R1_FB0_Msk
 (0x1UL << 
CAN_F12R1_FB0_Pos
Ë

	)

7507 
	#CAN_F12R1_FB0
 
CAN_F12R1_FB0_Msk


	)

7508 
	#CAN_F12R1_FB1_Pos
 (1U)

	)

7509 
	#CAN_F12R1_FB1_Msk
 (0x1UL << 
CAN_F12R1_FB1_Pos
Ë

	)

7510 
	#CAN_F12R1_FB1
 
CAN_F12R1_FB1_Msk


	)

7511 
	#CAN_F12R1_FB2_Pos
 (2U)

	)

7512 
	#CAN_F12R1_FB2_Msk
 (0x1UL << 
CAN_F12R1_FB2_Pos
Ë

	)

7513 
	#CAN_F12R1_FB2
 
CAN_F12R1_FB2_Msk


	)

7514 
	#CAN_F12R1_FB3_Pos
 (3U)

	)

7515 
	#CAN_F12R1_FB3_Msk
 (0x1UL << 
CAN_F12R1_FB3_Pos
Ë

	)

7516 
	#CAN_F12R1_FB3
 
CAN_F12R1_FB3_Msk


	)

7517 
	#CAN_F12R1_FB4_Pos
 (4U)

	)

7518 
	#CAN_F12R1_FB4_Msk
 (0x1UL << 
CAN_F12R1_FB4_Pos
Ë

	)

7519 
	#CAN_F12R1_FB4
 
CAN_F12R1_FB4_Msk


	)

7520 
	#CAN_F12R1_FB5_Pos
 (5U)

	)

7521 
	#CAN_F12R1_FB5_Msk
 (0x1UL << 
CAN_F12R1_FB5_Pos
Ë

	)

7522 
	#CAN_F12R1_FB5
 
CAN_F12R1_FB5_Msk


	)

7523 
	#CAN_F12R1_FB6_Pos
 (6U)

	)

7524 
	#CAN_F12R1_FB6_Msk
 (0x1UL << 
CAN_F12R1_FB6_Pos
Ë

	)

7525 
	#CAN_F12R1_FB6
 
CAN_F12R1_FB6_Msk


	)

7526 
	#CAN_F12R1_FB7_Pos
 (7U)

	)

7527 
	#CAN_F12R1_FB7_Msk
 (0x1UL << 
CAN_F12R1_FB7_Pos
Ë

	)

7528 
	#CAN_F12R1_FB7
 
CAN_F12R1_FB7_Msk


	)

7529 
	#CAN_F12R1_FB8_Pos
 (8U)

	)

7530 
	#CAN_F12R1_FB8_Msk
 (0x1UL << 
CAN_F12R1_FB8_Pos
Ë

	)

7531 
	#CAN_F12R1_FB8
 
CAN_F12R1_FB8_Msk


	)

7532 
	#CAN_F12R1_FB9_Pos
 (9U)

	)

7533 
	#CAN_F12R1_FB9_Msk
 (0x1UL << 
CAN_F12R1_FB9_Pos
Ë

	)

7534 
	#CAN_F12R1_FB9
 
CAN_F12R1_FB9_Msk


	)

7535 
	#CAN_F12R1_FB10_Pos
 (10U)

	)

7536 
	#CAN_F12R1_FB10_Msk
 (0x1UL << 
CAN_F12R1_FB10_Pos
Ë

	)

7537 
	#CAN_F12R1_FB10
 
CAN_F12R1_FB10_Msk


	)

7538 
	#CAN_F12R1_FB11_Pos
 (11U)

	)

7539 
	#CAN_F12R1_FB11_Msk
 (0x1UL << 
CAN_F12R1_FB11_Pos
Ë

	)

7540 
	#CAN_F12R1_FB11
 
CAN_F12R1_FB11_Msk


	)

7541 
	#CAN_F12R1_FB12_Pos
 (12U)

	)

7542 
	#CAN_F12R1_FB12_Msk
 (0x1UL << 
CAN_F12R1_FB12_Pos
Ë

	)

7543 
	#CAN_F12R1_FB12
 
CAN_F12R1_FB12_Msk


	)

7544 
	#CAN_F12R1_FB13_Pos
 (13U)

	)

7545 
	#CAN_F12R1_FB13_Msk
 (0x1UL << 
CAN_F12R1_FB13_Pos
Ë

	)

7546 
	#CAN_F12R1_FB13
 
CAN_F12R1_FB13_Msk


	)

7547 
	#CAN_F12R1_FB14_Pos
 (14U)

	)

7548 
	#CAN_F12R1_FB14_Msk
 (0x1UL << 
CAN_F12R1_FB14_Pos
Ë

	)

7549 
	#CAN_F12R1_FB14
 
CAN_F12R1_FB14_Msk


	)

7550 
	#CAN_F12R1_FB15_Pos
 (15U)

	)

7551 
	#CAN_F12R1_FB15_Msk
 (0x1UL << 
CAN_F12R1_FB15_Pos
Ë

	)

7552 
	#CAN_F12R1_FB15
 
CAN_F12R1_FB15_Msk


	)

7553 
	#CAN_F12R1_FB16_Pos
 (16U)

	)

7554 
	#CAN_F12R1_FB16_Msk
 (0x1UL << 
CAN_F12R1_FB16_Pos
Ë

	)

7555 
	#CAN_F12R1_FB16
 
CAN_F12R1_FB16_Msk


	)

7556 
	#CAN_F12R1_FB17_Pos
 (17U)

	)

7557 
	#CAN_F12R1_FB17_Msk
 (0x1UL << 
CAN_F12R1_FB17_Pos
Ë

	)

7558 
	#CAN_F12R1_FB17
 
CAN_F12R1_FB17_Msk


	)

7559 
	#CAN_F12R1_FB18_Pos
 (18U)

	)

7560 
	#CAN_F12R1_FB18_Msk
 (0x1UL << 
CAN_F12R1_FB18_Pos
Ë

	)

7561 
	#CAN_F12R1_FB18
 
CAN_F12R1_FB18_Msk


	)

7562 
	#CAN_F12R1_FB19_Pos
 (19U)

	)

7563 
	#CAN_F12R1_FB19_Msk
 (0x1UL << 
CAN_F12R1_FB19_Pos
Ë

	)

7564 
	#CAN_F12R1_FB19
 
CAN_F12R1_FB19_Msk


	)

7565 
	#CAN_F12R1_FB20_Pos
 (20U)

	)

7566 
	#CAN_F12R1_FB20_Msk
 (0x1UL << 
CAN_F12R1_FB20_Pos
Ë

	)

7567 
	#CAN_F12R1_FB20
 
CAN_F12R1_FB20_Msk


	)

7568 
	#CAN_F12R1_FB21_Pos
 (21U)

	)

7569 
	#CAN_F12R1_FB21_Msk
 (0x1UL << 
CAN_F12R1_FB21_Pos
Ë

	)

7570 
	#CAN_F12R1_FB21
 
CAN_F12R1_FB21_Msk


	)

7571 
	#CAN_F12R1_FB22_Pos
 (22U)

	)

7572 
	#CAN_F12R1_FB22_Msk
 (0x1UL << 
CAN_F12R1_FB22_Pos
Ë

	)

7573 
	#CAN_F12R1_FB22
 
CAN_F12R1_FB22_Msk


	)

7574 
	#CAN_F12R1_FB23_Pos
 (23U)

	)

7575 
	#CAN_F12R1_FB23_Msk
 (0x1UL << 
CAN_F12R1_FB23_Pos
Ë

	)

7576 
	#CAN_F12R1_FB23
 
CAN_F12R1_FB23_Msk


	)

7577 
	#CAN_F12R1_FB24_Pos
 (24U)

	)

7578 
	#CAN_F12R1_FB24_Msk
 (0x1UL << 
CAN_F12R1_FB24_Pos
Ë

	)

7579 
	#CAN_F12R1_FB24
 
CAN_F12R1_FB24_Msk


	)

7580 
	#CAN_F12R1_FB25_Pos
 (25U)

	)

7581 
	#CAN_F12R1_FB25_Msk
 (0x1UL << 
CAN_F12R1_FB25_Pos
Ë

	)

7582 
	#CAN_F12R1_FB25
 
CAN_F12R1_FB25_Msk


	)

7583 
	#CAN_F12R1_FB26_Pos
 (26U)

	)

7584 
	#CAN_F12R1_FB26_Msk
 (0x1UL << 
CAN_F12R1_FB26_Pos
Ë

	)

7585 
	#CAN_F12R1_FB26
 
CAN_F12R1_FB26_Msk


	)

7586 
	#CAN_F12R1_FB27_Pos
 (27U)

	)

7587 
	#CAN_F12R1_FB27_Msk
 (0x1UL << 
CAN_F12R1_FB27_Pos
Ë

	)

7588 
	#CAN_F12R1_FB27
 
CAN_F12R1_FB27_Msk


	)

7589 
	#CAN_F12R1_FB28_Pos
 (28U)

	)

7590 
	#CAN_F12R1_FB28_Msk
 (0x1UL << 
CAN_F12R1_FB28_Pos
Ë

	)

7591 
	#CAN_F12R1_FB28
 
CAN_F12R1_FB28_Msk


	)

7592 
	#CAN_F12R1_FB29_Pos
 (29U)

	)

7593 
	#CAN_F12R1_FB29_Msk
 (0x1UL << 
CAN_F12R1_FB29_Pos
Ë

	)

7594 
	#CAN_F12R1_FB29
 
CAN_F12R1_FB29_Msk


	)

7595 
	#CAN_F12R1_FB30_Pos
 (30U)

	)

7596 
	#CAN_F12R1_FB30_Msk
 (0x1UL << 
CAN_F12R1_FB30_Pos
Ë

	)

7597 
	#CAN_F12R1_FB30
 
CAN_F12R1_FB30_Msk


	)

7598 
	#CAN_F12R1_FB31_Pos
 (31U)

	)

7599 
	#CAN_F12R1_FB31_Msk
 (0x1UL << 
CAN_F12R1_FB31_Pos
Ë

	)

7600 
	#CAN_F12R1_FB31
 
CAN_F12R1_FB31_Msk


	)

7603 
	#CAN_F13R1_FB0_Pos
 (0U)

	)

7604 
	#CAN_F13R1_FB0_Msk
 (0x1UL << 
CAN_F13R1_FB0_Pos
Ë

	)

7605 
	#CAN_F13R1_FB0
 
CAN_F13R1_FB0_Msk


	)

7606 
	#CAN_F13R1_FB1_Pos
 (1U)

	)

7607 
	#CAN_F13R1_FB1_Msk
 (0x1UL << 
CAN_F13R1_FB1_Pos
Ë

	)

7608 
	#CAN_F13R1_FB1
 
CAN_F13R1_FB1_Msk


	)

7609 
	#CAN_F13R1_FB2_Pos
 (2U)

	)

7610 
	#CAN_F13R1_FB2_Msk
 (0x1UL << 
CAN_F13R1_FB2_Pos
Ë

	)

7611 
	#CAN_F13R1_FB2
 
CAN_F13R1_FB2_Msk


	)

7612 
	#CAN_F13R1_FB3_Pos
 (3U)

	)

7613 
	#CAN_F13R1_FB3_Msk
 (0x1UL << 
CAN_F13R1_FB3_Pos
Ë

	)

7614 
	#CAN_F13R1_FB3
 
CAN_F13R1_FB3_Msk


	)

7615 
	#CAN_F13R1_FB4_Pos
 (4U)

	)

7616 
	#CAN_F13R1_FB4_Msk
 (0x1UL << 
CAN_F13R1_FB4_Pos
Ë

	)

7617 
	#CAN_F13R1_FB4
 
CAN_F13R1_FB4_Msk


	)

7618 
	#CAN_F13R1_FB5_Pos
 (5U)

	)

7619 
	#CAN_F13R1_FB5_Msk
 (0x1UL << 
CAN_F13R1_FB5_Pos
Ë

	)

7620 
	#CAN_F13R1_FB5
 
CAN_F13R1_FB5_Msk


	)

7621 
	#CAN_F13R1_FB6_Pos
 (6U)

	)

7622 
	#CAN_F13R1_FB6_Msk
 (0x1UL << 
CAN_F13R1_FB6_Pos
Ë

	)

7623 
	#CAN_F13R1_FB6
 
CAN_F13R1_FB6_Msk


	)

7624 
	#CAN_F13R1_FB7_Pos
 (7U)

	)

7625 
	#CAN_F13R1_FB7_Msk
 (0x1UL << 
CAN_F13R1_FB7_Pos
Ë

	)

7626 
	#CAN_F13R1_FB7
 
CAN_F13R1_FB7_Msk


	)

7627 
	#CAN_F13R1_FB8_Pos
 (8U)

	)

7628 
	#CAN_F13R1_FB8_Msk
 (0x1UL << 
CAN_F13R1_FB8_Pos
Ë

	)

7629 
	#CAN_F13R1_FB8
 
CAN_F13R1_FB8_Msk


	)

7630 
	#CAN_F13R1_FB9_Pos
 (9U)

	)

7631 
	#CAN_F13R1_FB9_Msk
 (0x1UL << 
CAN_F13R1_FB9_Pos
Ë

	)

7632 
	#CAN_F13R1_FB9
 
CAN_F13R1_FB9_Msk


	)

7633 
	#CAN_F13R1_FB10_Pos
 (10U)

	)

7634 
	#CAN_F13R1_FB10_Msk
 (0x1UL << 
CAN_F13R1_FB10_Pos
Ë

	)

7635 
	#CAN_F13R1_FB10
 
CAN_F13R1_FB10_Msk


	)

7636 
	#CAN_F13R1_FB11_Pos
 (11U)

	)

7637 
	#CAN_F13R1_FB11_Msk
 (0x1UL << 
CAN_F13R1_FB11_Pos
Ë

	)

7638 
	#CAN_F13R1_FB11
 
CAN_F13R1_FB11_Msk


	)

7639 
	#CAN_F13R1_FB12_Pos
 (12U)

	)

7640 
	#CAN_F13R1_FB12_Msk
 (0x1UL << 
CAN_F13R1_FB12_Pos
Ë

	)

7641 
	#CAN_F13R1_FB12
 
CAN_F13R1_FB12_Msk


	)

7642 
	#CAN_F13R1_FB13_Pos
 (13U)

	)

7643 
	#CAN_F13R1_FB13_Msk
 (0x1UL << 
CAN_F13R1_FB13_Pos
Ë

	)

7644 
	#CAN_F13R1_FB13
 
CAN_F13R1_FB13_Msk


	)

7645 
	#CAN_F13R1_FB14_Pos
 (14U)

	)

7646 
	#CAN_F13R1_FB14_Msk
 (0x1UL << 
CAN_F13R1_FB14_Pos
Ë

	)

7647 
	#CAN_F13R1_FB14
 
CAN_F13R1_FB14_Msk


	)

7648 
	#CAN_F13R1_FB15_Pos
 (15U)

	)

7649 
	#CAN_F13R1_FB15_Msk
 (0x1UL << 
CAN_F13R1_FB15_Pos
Ë

	)

7650 
	#CAN_F13R1_FB15
 
CAN_F13R1_FB15_Msk


	)

7651 
	#CAN_F13R1_FB16_Pos
 (16U)

	)

7652 
	#CAN_F13R1_FB16_Msk
 (0x1UL << 
CAN_F13R1_FB16_Pos
Ë

	)

7653 
	#CAN_F13R1_FB16
 
CAN_F13R1_FB16_Msk


	)

7654 
	#CAN_F13R1_FB17_Pos
 (17U)

	)

7655 
	#CAN_F13R1_FB17_Msk
 (0x1UL << 
CAN_F13R1_FB17_Pos
Ë

	)

7656 
	#CAN_F13R1_FB17
 
CAN_F13R1_FB17_Msk


	)

7657 
	#CAN_F13R1_FB18_Pos
 (18U)

	)

7658 
	#CAN_F13R1_FB18_Msk
 (0x1UL << 
CAN_F13R1_FB18_Pos
Ë

	)

7659 
	#CAN_F13R1_FB18
 
CAN_F13R1_FB18_Msk


	)

7660 
	#CAN_F13R1_FB19_Pos
 (19U)

	)

7661 
	#CAN_F13R1_FB19_Msk
 (0x1UL << 
CAN_F13R1_FB19_Pos
Ë

	)

7662 
	#CAN_F13R1_FB19
 
CAN_F13R1_FB19_Msk


	)

7663 
	#CAN_F13R1_FB20_Pos
 (20U)

	)

7664 
	#CAN_F13R1_FB20_Msk
 (0x1UL << 
CAN_F13R1_FB20_Pos
Ë

	)

7665 
	#CAN_F13R1_FB20
 
CAN_F13R1_FB20_Msk


	)

7666 
	#CAN_F13R1_FB21_Pos
 (21U)

	)

7667 
	#CAN_F13R1_FB21_Msk
 (0x1UL << 
CAN_F13R1_FB21_Pos
Ë

	)

7668 
	#CAN_F13R1_FB21
 
CAN_F13R1_FB21_Msk


	)

7669 
	#CAN_F13R1_FB22_Pos
 (22U)

	)

7670 
	#CAN_F13R1_FB22_Msk
 (0x1UL << 
CAN_F13R1_FB22_Pos
Ë

	)

7671 
	#CAN_F13R1_FB22
 
CAN_F13R1_FB22_Msk


	)

7672 
	#CAN_F13R1_FB23_Pos
 (23U)

	)

7673 
	#CAN_F13R1_FB23_Msk
 (0x1UL << 
CAN_F13R1_FB23_Pos
Ë

	)

7674 
	#CAN_F13R1_FB23
 
CAN_F13R1_FB23_Msk


	)

7675 
	#CAN_F13R1_FB24_Pos
 (24U)

	)

7676 
	#CAN_F13R1_FB24_Msk
 (0x1UL << 
CAN_F13R1_FB24_Pos
Ë

	)

7677 
	#CAN_F13R1_FB24
 
CAN_F13R1_FB24_Msk


	)

7678 
	#CAN_F13R1_FB25_Pos
 (25U)

	)

7679 
	#CAN_F13R1_FB25_Msk
 (0x1UL << 
CAN_F13R1_FB25_Pos
Ë

	)

7680 
	#CAN_F13R1_FB25
 
CAN_F13R1_FB25_Msk


	)

7681 
	#CAN_F13R1_FB26_Pos
 (26U)

	)

7682 
	#CAN_F13R1_FB26_Msk
 (0x1UL << 
CAN_F13R1_FB26_Pos
Ë

	)

7683 
	#CAN_F13R1_FB26
 
CAN_F13R1_FB26_Msk


	)

7684 
	#CAN_F13R1_FB27_Pos
 (27U)

	)

7685 
	#CAN_F13R1_FB27_Msk
 (0x1UL << 
CAN_F13R1_FB27_Pos
Ë

	)

7686 
	#CAN_F13R1_FB27
 
CAN_F13R1_FB27_Msk


	)

7687 
	#CAN_F13R1_FB28_Pos
 (28U)

	)

7688 
	#CAN_F13R1_FB28_Msk
 (0x1UL << 
CAN_F13R1_FB28_Pos
Ë

	)

7689 
	#CAN_F13R1_FB28
 
CAN_F13R1_FB28_Msk


	)

7690 
	#CAN_F13R1_FB29_Pos
 (29U)

	)

7691 
	#CAN_F13R1_FB29_Msk
 (0x1UL << 
CAN_F13R1_FB29_Pos
Ë

	)

7692 
	#CAN_F13R1_FB29
 
CAN_F13R1_FB29_Msk


	)

7693 
	#CAN_F13R1_FB30_Pos
 (30U)

	)

7694 
	#CAN_F13R1_FB30_Msk
 (0x1UL << 
CAN_F13R1_FB30_Pos
Ë

	)

7695 
	#CAN_F13R1_FB30
 
CAN_F13R1_FB30_Msk


	)

7696 
	#CAN_F13R1_FB31_Pos
 (31U)

	)

7697 
	#CAN_F13R1_FB31_Msk
 (0x1UL << 
CAN_F13R1_FB31_Pos
Ë

	)

7698 
	#CAN_F13R1_FB31
 
CAN_F13R1_FB31_Msk


	)

7701 
	#CAN_F0R2_FB0_Pos
 (0U)

	)

7702 
	#CAN_F0R2_FB0_Msk
 (0x1UL << 
CAN_F0R2_FB0_Pos
Ë

	)

7703 
	#CAN_F0R2_FB0
 
CAN_F0R2_FB0_Msk


	)

7704 
	#CAN_F0R2_FB1_Pos
 (1U)

	)

7705 
	#CAN_F0R2_FB1_Msk
 (0x1UL << 
CAN_F0R2_FB1_Pos
Ë

	)

7706 
	#CAN_F0R2_FB1
 
CAN_F0R2_FB1_Msk


	)

7707 
	#CAN_F0R2_FB2_Pos
 (2U)

	)

7708 
	#CAN_F0R2_FB2_Msk
 (0x1UL << 
CAN_F0R2_FB2_Pos
Ë

	)

7709 
	#CAN_F0R2_FB2
 
CAN_F0R2_FB2_Msk


	)

7710 
	#CAN_F0R2_FB3_Pos
 (3U)

	)

7711 
	#CAN_F0R2_FB3_Msk
 (0x1UL << 
CAN_F0R2_FB3_Pos
Ë

	)

7712 
	#CAN_F0R2_FB3
 
CAN_F0R2_FB3_Msk


	)

7713 
	#CAN_F0R2_FB4_Pos
 (4U)

	)

7714 
	#CAN_F0R2_FB4_Msk
 (0x1UL << 
CAN_F0R2_FB4_Pos
Ë

	)

7715 
	#CAN_F0R2_FB4
 
CAN_F0R2_FB4_Msk


	)

7716 
	#CAN_F0R2_FB5_Pos
 (5U)

	)

7717 
	#CAN_F0R2_FB5_Msk
 (0x1UL << 
CAN_F0R2_FB5_Pos
Ë

	)

7718 
	#CAN_F0R2_FB5
 
CAN_F0R2_FB5_Msk


	)

7719 
	#CAN_F0R2_FB6_Pos
 (6U)

	)

7720 
	#CAN_F0R2_FB6_Msk
 (0x1UL << 
CAN_F0R2_FB6_Pos
Ë

	)

7721 
	#CAN_F0R2_FB6
 
CAN_F0R2_FB6_Msk


	)

7722 
	#CAN_F0R2_FB7_Pos
 (7U)

	)

7723 
	#CAN_F0R2_FB7_Msk
 (0x1UL << 
CAN_F0R2_FB7_Pos
Ë

	)

7724 
	#CAN_F0R2_FB7
 
CAN_F0R2_FB7_Msk


	)

7725 
	#CAN_F0R2_FB8_Pos
 (8U)

	)

7726 
	#CAN_F0R2_FB8_Msk
 (0x1UL << 
CAN_F0R2_FB8_Pos
Ë

	)

7727 
	#CAN_F0R2_FB8
 
CAN_F0R2_FB8_Msk


	)

7728 
	#CAN_F0R2_FB9_Pos
 (9U)

	)

7729 
	#CAN_F0R2_FB9_Msk
 (0x1UL << 
CAN_F0R2_FB9_Pos
Ë

	)

7730 
	#CAN_F0R2_FB9
 
CAN_F0R2_FB9_Msk


	)

7731 
	#CAN_F0R2_FB10_Pos
 (10U)

	)

7732 
	#CAN_F0R2_FB10_Msk
 (0x1UL << 
CAN_F0R2_FB10_Pos
Ë

	)

7733 
	#CAN_F0R2_FB10
 
CAN_F0R2_FB10_Msk


	)

7734 
	#CAN_F0R2_FB11_Pos
 (11U)

	)

7735 
	#CAN_F0R2_FB11_Msk
 (0x1UL << 
CAN_F0R2_FB11_Pos
Ë

	)

7736 
	#CAN_F0R2_FB11
 
CAN_F0R2_FB11_Msk


	)

7737 
	#CAN_F0R2_FB12_Pos
 (12U)

	)

7738 
	#CAN_F0R2_FB12_Msk
 (0x1UL << 
CAN_F0R2_FB12_Pos
Ë

	)

7739 
	#CAN_F0R2_FB12
 
CAN_F0R2_FB12_Msk


	)

7740 
	#CAN_F0R2_FB13_Pos
 (13U)

	)

7741 
	#CAN_F0R2_FB13_Msk
 (0x1UL << 
CAN_F0R2_FB13_Pos
Ë

	)

7742 
	#CAN_F0R2_FB13
 
CAN_F0R2_FB13_Msk


	)

7743 
	#CAN_F0R2_FB14_Pos
 (14U)

	)

7744 
	#CAN_F0R2_FB14_Msk
 (0x1UL << 
CAN_F0R2_FB14_Pos
Ë

	)

7745 
	#CAN_F0R2_FB14
 
CAN_F0R2_FB14_Msk


	)

7746 
	#CAN_F0R2_FB15_Pos
 (15U)

	)

7747 
	#CAN_F0R2_FB15_Msk
 (0x1UL << 
CAN_F0R2_FB15_Pos
Ë

	)

7748 
	#CAN_F0R2_FB15
 
CAN_F0R2_FB15_Msk


	)

7749 
	#CAN_F0R2_FB16_Pos
 (16U)

	)

7750 
	#CAN_F0R2_FB16_Msk
 (0x1UL << 
CAN_F0R2_FB16_Pos
Ë

	)

7751 
	#CAN_F0R2_FB16
 
CAN_F0R2_FB16_Msk


	)

7752 
	#CAN_F0R2_FB17_Pos
 (17U)

	)

7753 
	#CAN_F0R2_FB17_Msk
 (0x1UL << 
CAN_F0R2_FB17_Pos
Ë

	)

7754 
	#CAN_F0R2_FB17
 
CAN_F0R2_FB17_Msk


	)

7755 
	#CAN_F0R2_FB18_Pos
 (18U)

	)

7756 
	#CAN_F0R2_FB18_Msk
 (0x1UL << 
CAN_F0R2_FB18_Pos
Ë

	)

7757 
	#CAN_F0R2_FB18
 
CAN_F0R2_FB18_Msk


	)

7758 
	#CAN_F0R2_FB19_Pos
 (19U)

	)

7759 
	#CAN_F0R2_FB19_Msk
 (0x1UL << 
CAN_F0R2_FB19_Pos
Ë

	)

7760 
	#CAN_F0R2_FB19
 
CAN_F0R2_FB19_Msk


	)

7761 
	#CAN_F0R2_FB20_Pos
 (20U)

	)

7762 
	#CAN_F0R2_FB20_Msk
 (0x1UL << 
CAN_F0R2_FB20_Pos
Ë

	)

7763 
	#CAN_F0R2_FB20
 
CAN_F0R2_FB20_Msk


	)

7764 
	#CAN_F0R2_FB21_Pos
 (21U)

	)

7765 
	#CAN_F0R2_FB21_Msk
 (0x1UL << 
CAN_F0R2_FB21_Pos
Ë

	)

7766 
	#CAN_F0R2_FB21
 
CAN_F0R2_FB21_Msk


	)

7767 
	#CAN_F0R2_FB22_Pos
 (22U)

	)

7768 
	#CAN_F0R2_FB22_Msk
 (0x1UL << 
CAN_F0R2_FB22_Pos
Ë

	)

7769 
	#CAN_F0R2_FB22
 
CAN_F0R2_FB22_Msk


	)

7770 
	#CAN_F0R2_FB23_Pos
 (23U)

	)

7771 
	#CAN_F0R2_FB23_Msk
 (0x1UL << 
CAN_F0R2_FB23_Pos
Ë

	)

7772 
	#CAN_F0R2_FB23
 
CAN_F0R2_FB23_Msk


	)

7773 
	#CAN_F0R2_FB24_Pos
 (24U)

	)

7774 
	#CAN_F0R2_FB24_Msk
 (0x1UL << 
CAN_F0R2_FB24_Pos
Ë

	)

7775 
	#CAN_F0R2_FB24
 
CAN_F0R2_FB24_Msk


	)

7776 
	#CAN_F0R2_FB25_Pos
 (25U)

	)

7777 
	#CAN_F0R2_FB25_Msk
 (0x1UL << 
CAN_F0R2_FB25_Pos
Ë

	)

7778 
	#CAN_F0R2_FB25
 
CAN_F0R2_FB25_Msk


	)

7779 
	#CAN_F0R2_FB26_Pos
 (26U)

	)

7780 
	#CAN_F0R2_FB26_Msk
 (0x1UL << 
CAN_F0R2_FB26_Pos
Ë

	)

7781 
	#CAN_F0R2_FB26
 
CAN_F0R2_FB26_Msk


	)

7782 
	#CAN_F0R2_FB27_Pos
 (27U)

	)

7783 
	#CAN_F0R2_FB27_Msk
 (0x1UL << 
CAN_F0R2_FB27_Pos
Ë

	)

7784 
	#CAN_F0R2_FB27
 
CAN_F0R2_FB27_Msk


	)

7785 
	#CAN_F0R2_FB28_Pos
 (28U)

	)

7786 
	#CAN_F0R2_FB28_Msk
 (0x1UL << 
CAN_F0R2_FB28_Pos
Ë

	)

7787 
	#CAN_F0R2_FB28
 
CAN_F0R2_FB28_Msk


	)

7788 
	#CAN_F0R2_FB29_Pos
 (29U)

	)

7789 
	#CAN_F0R2_FB29_Msk
 (0x1UL << 
CAN_F0R2_FB29_Pos
Ë

	)

7790 
	#CAN_F0R2_FB29
 
CAN_F0R2_FB29_Msk


	)

7791 
	#CAN_F0R2_FB30_Pos
 (30U)

	)

7792 
	#CAN_F0R2_FB30_Msk
 (0x1UL << 
CAN_F0R2_FB30_Pos
Ë

	)

7793 
	#CAN_F0R2_FB30
 
CAN_F0R2_FB30_Msk


	)

7794 
	#CAN_F0R2_FB31_Pos
 (31U)

	)

7795 
	#CAN_F0R2_FB31_Msk
 (0x1UL << 
CAN_F0R2_FB31_Pos
Ë

	)

7796 
	#CAN_F0R2_FB31
 
CAN_F0R2_FB31_Msk


	)

7799 
	#CAN_F1R2_FB0_Pos
 (0U)

	)

7800 
	#CAN_F1R2_FB0_Msk
 (0x1UL << 
CAN_F1R2_FB0_Pos
Ë

	)

7801 
	#CAN_F1R2_FB0
 
CAN_F1R2_FB0_Msk


	)

7802 
	#CAN_F1R2_FB1_Pos
 (1U)

	)

7803 
	#CAN_F1R2_FB1_Msk
 (0x1UL << 
CAN_F1R2_FB1_Pos
Ë

	)

7804 
	#CAN_F1R2_FB1
 
CAN_F1R2_FB1_Msk


	)

7805 
	#CAN_F1R2_FB2_Pos
 (2U)

	)

7806 
	#CAN_F1R2_FB2_Msk
 (0x1UL << 
CAN_F1R2_FB2_Pos
Ë

	)

7807 
	#CAN_F1R2_FB2
 
CAN_F1R2_FB2_Msk


	)

7808 
	#CAN_F1R2_FB3_Pos
 (3U)

	)

7809 
	#CAN_F1R2_FB3_Msk
 (0x1UL << 
CAN_F1R2_FB3_Pos
Ë

	)

7810 
	#CAN_F1R2_FB3
 
CAN_F1R2_FB3_Msk


	)

7811 
	#CAN_F1R2_FB4_Pos
 (4U)

	)

7812 
	#CAN_F1R2_FB4_Msk
 (0x1UL << 
CAN_F1R2_FB4_Pos
Ë

	)

7813 
	#CAN_F1R2_FB4
 
CAN_F1R2_FB4_Msk


	)

7814 
	#CAN_F1R2_FB5_Pos
 (5U)

	)

7815 
	#CAN_F1R2_FB5_Msk
 (0x1UL << 
CAN_F1R2_FB5_Pos
Ë

	)

7816 
	#CAN_F1R2_FB5
 
CAN_F1R2_FB5_Msk


	)

7817 
	#CAN_F1R2_FB6_Pos
 (6U)

	)

7818 
	#CAN_F1R2_FB6_Msk
 (0x1UL << 
CAN_F1R2_FB6_Pos
Ë

	)

7819 
	#CAN_F1R2_FB6
 
CAN_F1R2_FB6_Msk


	)

7820 
	#CAN_F1R2_FB7_Pos
 (7U)

	)

7821 
	#CAN_F1R2_FB7_Msk
 (0x1UL << 
CAN_F1R2_FB7_Pos
Ë

	)

7822 
	#CAN_F1R2_FB7
 
CAN_F1R2_FB7_Msk


	)

7823 
	#CAN_F1R2_FB8_Pos
 (8U)

	)

7824 
	#CAN_F1R2_FB8_Msk
 (0x1UL << 
CAN_F1R2_FB8_Pos
Ë

	)

7825 
	#CAN_F1R2_FB8
 
CAN_F1R2_FB8_Msk


	)

7826 
	#CAN_F1R2_FB9_Pos
 (9U)

	)

7827 
	#CAN_F1R2_FB9_Msk
 (0x1UL << 
CAN_F1R2_FB9_Pos
Ë

	)

7828 
	#CAN_F1R2_FB9
 
CAN_F1R2_FB9_Msk


	)

7829 
	#CAN_F1R2_FB10_Pos
 (10U)

	)

7830 
	#CAN_F1R2_FB10_Msk
 (0x1UL << 
CAN_F1R2_FB10_Pos
Ë

	)

7831 
	#CAN_F1R2_FB10
 
CAN_F1R2_FB10_Msk


	)

7832 
	#CAN_F1R2_FB11_Pos
 (11U)

	)

7833 
	#CAN_F1R2_FB11_Msk
 (0x1UL << 
CAN_F1R2_FB11_Pos
Ë

	)

7834 
	#CAN_F1R2_FB11
 
CAN_F1R2_FB11_Msk


	)

7835 
	#CAN_F1R2_FB12_Pos
 (12U)

	)

7836 
	#CAN_F1R2_FB12_Msk
 (0x1UL << 
CAN_F1R2_FB12_Pos
Ë

	)

7837 
	#CAN_F1R2_FB12
 
CAN_F1R2_FB12_Msk


	)

7838 
	#CAN_F1R2_FB13_Pos
 (13U)

	)

7839 
	#CAN_F1R2_FB13_Msk
 (0x1UL << 
CAN_F1R2_FB13_Pos
Ë

	)

7840 
	#CAN_F1R2_FB13
 
CAN_F1R2_FB13_Msk


	)

7841 
	#CAN_F1R2_FB14_Pos
 (14U)

	)

7842 
	#CAN_F1R2_FB14_Msk
 (0x1UL << 
CAN_F1R2_FB14_Pos
Ë

	)

7843 
	#CAN_F1R2_FB14
 
CAN_F1R2_FB14_Msk


	)

7844 
	#CAN_F1R2_FB15_Pos
 (15U)

	)

7845 
	#CAN_F1R2_FB15_Msk
 (0x1UL << 
CAN_F1R2_FB15_Pos
Ë

	)

7846 
	#CAN_F1R2_FB15
 
CAN_F1R2_FB15_Msk


	)

7847 
	#CAN_F1R2_FB16_Pos
 (16U)

	)

7848 
	#CAN_F1R2_FB16_Msk
 (0x1UL << 
CAN_F1R2_FB16_Pos
Ë

	)

7849 
	#CAN_F1R2_FB16
 
CAN_F1R2_FB16_Msk


	)

7850 
	#CAN_F1R2_FB17_Pos
 (17U)

	)

7851 
	#CAN_F1R2_FB17_Msk
 (0x1UL << 
CAN_F1R2_FB17_Pos
Ë

	)

7852 
	#CAN_F1R2_FB17
 
CAN_F1R2_FB17_Msk


	)

7853 
	#CAN_F1R2_FB18_Pos
 (18U)

	)

7854 
	#CAN_F1R2_FB18_Msk
 (0x1UL << 
CAN_F1R2_FB18_Pos
Ë

	)

7855 
	#CAN_F1R2_FB18
 
CAN_F1R2_FB18_Msk


	)

7856 
	#CAN_F1R2_FB19_Pos
 (19U)

	)

7857 
	#CAN_F1R2_FB19_Msk
 (0x1UL << 
CAN_F1R2_FB19_Pos
Ë

	)

7858 
	#CAN_F1R2_FB19
 
CAN_F1R2_FB19_Msk


	)

7859 
	#CAN_F1R2_FB20_Pos
 (20U)

	)

7860 
	#CAN_F1R2_FB20_Msk
 (0x1UL << 
CAN_F1R2_FB20_Pos
Ë

	)

7861 
	#CAN_F1R2_FB20
 
CAN_F1R2_FB20_Msk


	)

7862 
	#CAN_F1R2_FB21_Pos
 (21U)

	)

7863 
	#CAN_F1R2_FB21_Msk
 (0x1UL << 
CAN_F1R2_FB21_Pos
Ë

	)

7864 
	#CAN_F1R2_FB21
 
CAN_F1R2_FB21_Msk


	)

7865 
	#CAN_F1R2_FB22_Pos
 (22U)

	)

7866 
	#CAN_F1R2_FB22_Msk
 (0x1UL << 
CAN_F1R2_FB22_Pos
Ë

	)

7867 
	#CAN_F1R2_FB22
 
CAN_F1R2_FB22_Msk


	)

7868 
	#CAN_F1R2_FB23_Pos
 (23U)

	)

7869 
	#CAN_F1R2_FB23_Msk
 (0x1UL << 
CAN_F1R2_FB23_Pos
Ë

	)

7870 
	#CAN_F1R2_FB23
 
CAN_F1R2_FB23_Msk


	)

7871 
	#CAN_F1R2_FB24_Pos
 (24U)

	)

7872 
	#CAN_F1R2_FB24_Msk
 (0x1UL << 
CAN_F1R2_FB24_Pos
Ë

	)

7873 
	#CAN_F1R2_FB24
 
CAN_F1R2_FB24_Msk


	)

7874 
	#CAN_F1R2_FB25_Pos
 (25U)

	)

7875 
	#CAN_F1R2_FB25_Msk
 (0x1UL << 
CAN_F1R2_FB25_Pos
Ë

	)

7876 
	#CAN_F1R2_FB25
 
CAN_F1R2_FB25_Msk


	)

7877 
	#CAN_F1R2_FB26_Pos
 (26U)

	)

7878 
	#CAN_F1R2_FB26_Msk
 (0x1UL << 
CAN_F1R2_FB26_Pos
Ë

	)

7879 
	#CAN_F1R2_FB26
 
CAN_F1R2_FB26_Msk


	)

7880 
	#CAN_F1R2_FB27_Pos
 (27U)

	)

7881 
	#CAN_F1R2_FB27_Msk
 (0x1UL << 
CAN_F1R2_FB27_Pos
Ë

	)

7882 
	#CAN_F1R2_FB27
 
CAN_F1R2_FB27_Msk


	)

7883 
	#CAN_F1R2_FB28_Pos
 (28U)

	)

7884 
	#CAN_F1R2_FB28_Msk
 (0x1UL << 
CAN_F1R2_FB28_Pos
Ë

	)

7885 
	#CAN_F1R2_FB28
 
CAN_F1R2_FB28_Msk


	)

7886 
	#CAN_F1R2_FB29_Pos
 (29U)

	)

7887 
	#CAN_F1R2_FB29_Msk
 (0x1UL << 
CAN_F1R2_FB29_Pos
Ë

	)

7888 
	#CAN_F1R2_FB29
 
CAN_F1R2_FB29_Msk


	)

7889 
	#CAN_F1R2_FB30_Pos
 (30U)

	)

7890 
	#CAN_F1R2_FB30_Msk
 (0x1UL << 
CAN_F1R2_FB30_Pos
Ë

	)

7891 
	#CAN_F1R2_FB30
 
CAN_F1R2_FB30_Msk


	)

7892 
	#CAN_F1R2_FB31_Pos
 (31U)

	)

7893 
	#CAN_F1R2_FB31_Msk
 (0x1UL << 
CAN_F1R2_FB31_Pos
Ë

	)

7894 
	#CAN_F1R2_FB31
 
CAN_F1R2_FB31_Msk


	)

7897 
	#CAN_F2R2_FB0_Pos
 (0U)

	)

7898 
	#CAN_F2R2_FB0_Msk
 (0x1UL << 
CAN_F2R2_FB0_Pos
Ë

	)

7899 
	#CAN_F2R2_FB0
 
CAN_F2R2_FB0_Msk


	)

7900 
	#CAN_F2R2_FB1_Pos
 (1U)

	)

7901 
	#CAN_F2R2_FB1_Msk
 (0x1UL << 
CAN_F2R2_FB1_Pos
Ë

	)

7902 
	#CAN_F2R2_FB1
 
CAN_F2R2_FB1_Msk


	)

7903 
	#CAN_F2R2_FB2_Pos
 (2U)

	)

7904 
	#CAN_F2R2_FB2_Msk
 (0x1UL << 
CAN_F2R2_FB2_Pos
Ë

	)

7905 
	#CAN_F2R2_FB2
 
CAN_F2R2_FB2_Msk


	)

7906 
	#CAN_F2R2_FB3_Pos
 (3U)

	)

7907 
	#CAN_F2R2_FB3_Msk
 (0x1UL << 
CAN_F2R2_FB3_Pos
Ë

	)

7908 
	#CAN_F2R2_FB3
 
CAN_F2R2_FB3_Msk


	)

7909 
	#CAN_F2R2_FB4_Pos
 (4U)

	)

7910 
	#CAN_F2R2_FB4_Msk
 (0x1UL << 
CAN_F2R2_FB4_Pos
Ë

	)

7911 
	#CAN_F2R2_FB4
 
CAN_F2R2_FB4_Msk


	)

7912 
	#CAN_F2R2_FB5_Pos
 (5U)

	)

7913 
	#CAN_F2R2_FB5_Msk
 (0x1UL << 
CAN_F2R2_FB5_Pos
Ë

	)

7914 
	#CAN_F2R2_FB5
 
CAN_F2R2_FB5_Msk


	)

7915 
	#CAN_F2R2_FB6_Pos
 (6U)

	)

7916 
	#CAN_F2R2_FB6_Msk
 (0x1UL << 
CAN_F2R2_FB6_Pos
Ë

	)

7917 
	#CAN_F2R2_FB6
 
CAN_F2R2_FB6_Msk


	)

7918 
	#CAN_F2R2_FB7_Pos
 (7U)

	)

7919 
	#CAN_F2R2_FB7_Msk
 (0x1UL << 
CAN_F2R2_FB7_Pos
Ë

	)

7920 
	#CAN_F2R2_FB7
 
CAN_F2R2_FB7_Msk


	)

7921 
	#CAN_F2R2_FB8_Pos
 (8U)

	)

7922 
	#CAN_F2R2_FB8_Msk
 (0x1UL << 
CAN_F2R2_FB8_Pos
Ë

	)

7923 
	#CAN_F2R2_FB8
 
CAN_F2R2_FB8_Msk


	)

7924 
	#CAN_F2R2_FB9_Pos
 (9U)

	)

7925 
	#CAN_F2R2_FB9_Msk
 (0x1UL << 
CAN_F2R2_FB9_Pos
Ë

	)

7926 
	#CAN_F2R2_FB9
 
CAN_F2R2_FB9_Msk


	)

7927 
	#CAN_F2R2_FB10_Pos
 (10U)

	)

7928 
	#CAN_F2R2_FB10_Msk
 (0x1UL << 
CAN_F2R2_FB10_Pos
Ë

	)

7929 
	#CAN_F2R2_FB10
 
CAN_F2R2_FB10_Msk


	)

7930 
	#CAN_F2R2_FB11_Pos
 (11U)

	)

7931 
	#CAN_F2R2_FB11_Msk
 (0x1UL << 
CAN_F2R2_FB11_Pos
Ë

	)

7932 
	#CAN_F2R2_FB11
 
CAN_F2R2_FB11_Msk


	)

7933 
	#CAN_F2R2_FB12_Pos
 (12U)

	)

7934 
	#CAN_F2R2_FB12_Msk
 (0x1UL << 
CAN_F2R2_FB12_Pos
Ë

	)

7935 
	#CAN_F2R2_FB12
 
CAN_F2R2_FB12_Msk


	)

7936 
	#CAN_F2R2_FB13_Pos
 (13U)

	)

7937 
	#CAN_F2R2_FB13_Msk
 (0x1UL << 
CAN_F2R2_FB13_Pos
Ë

	)

7938 
	#CAN_F2R2_FB13
 
CAN_F2R2_FB13_Msk


	)

7939 
	#CAN_F2R2_FB14_Pos
 (14U)

	)

7940 
	#CAN_F2R2_FB14_Msk
 (0x1UL << 
CAN_F2R2_FB14_Pos
Ë

	)

7941 
	#CAN_F2R2_FB14
 
CAN_F2R2_FB14_Msk


	)

7942 
	#CAN_F2R2_FB15_Pos
 (15U)

	)

7943 
	#CAN_F2R2_FB15_Msk
 (0x1UL << 
CAN_F2R2_FB15_Pos
Ë

	)

7944 
	#CAN_F2R2_FB15
 
CAN_F2R2_FB15_Msk


	)

7945 
	#CAN_F2R2_FB16_Pos
 (16U)

	)

7946 
	#CAN_F2R2_FB16_Msk
 (0x1UL << 
CAN_F2R2_FB16_Pos
Ë

	)

7947 
	#CAN_F2R2_FB16
 
CAN_F2R2_FB16_Msk


	)

7948 
	#CAN_F2R2_FB17_Pos
 (17U)

	)

7949 
	#CAN_F2R2_FB17_Msk
 (0x1UL << 
CAN_F2R2_FB17_Pos
Ë

	)

7950 
	#CAN_F2R2_FB17
 
CAN_F2R2_FB17_Msk


	)

7951 
	#CAN_F2R2_FB18_Pos
 (18U)

	)

7952 
	#CAN_F2R2_FB18_Msk
 (0x1UL << 
CAN_F2R2_FB18_Pos
Ë

	)

7953 
	#CAN_F2R2_FB18
 
CAN_F2R2_FB18_Msk


	)

7954 
	#CAN_F2R2_FB19_Pos
 (19U)

	)

7955 
	#CAN_F2R2_FB19_Msk
 (0x1UL << 
CAN_F2R2_FB19_Pos
Ë

	)

7956 
	#CAN_F2R2_FB19
 
CAN_F2R2_FB19_Msk


	)

7957 
	#CAN_F2R2_FB20_Pos
 (20U)

	)

7958 
	#CAN_F2R2_FB20_Msk
 (0x1UL << 
CAN_F2R2_FB20_Pos
Ë

	)

7959 
	#CAN_F2R2_FB20
 
CAN_F2R2_FB20_Msk


	)

7960 
	#CAN_F2R2_FB21_Pos
 (21U)

	)

7961 
	#CAN_F2R2_FB21_Msk
 (0x1UL << 
CAN_F2R2_FB21_Pos
Ë

	)

7962 
	#CAN_F2R2_FB21
 
CAN_F2R2_FB21_Msk


	)

7963 
	#CAN_F2R2_FB22_Pos
 (22U)

	)

7964 
	#CAN_F2R2_FB22_Msk
 (0x1UL << 
CAN_F2R2_FB22_Pos
Ë

	)

7965 
	#CAN_F2R2_FB22
 
CAN_F2R2_FB22_Msk


	)

7966 
	#CAN_F2R2_FB23_Pos
 (23U)

	)

7967 
	#CAN_F2R2_FB23_Msk
 (0x1UL << 
CAN_F2R2_FB23_Pos
Ë

	)

7968 
	#CAN_F2R2_FB23
 
CAN_F2R2_FB23_Msk


	)

7969 
	#CAN_F2R2_FB24_Pos
 (24U)

	)

7970 
	#CAN_F2R2_FB24_Msk
 (0x1UL << 
CAN_F2R2_FB24_Pos
Ë

	)

7971 
	#CAN_F2R2_FB24
 
CAN_F2R2_FB24_Msk


	)

7972 
	#CAN_F2R2_FB25_Pos
 (25U)

	)

7973 
	#CAN_F2R2_FB25_Msk
 (0x1UL << 
CAN_F2R2_FB25_Pos
Ë

	)

7974 
	#CAN_F2R2_FB25
 
CAN_F2R2_FB25_Msk


	)

7975 
	#CAN_F2R2_FB26_Pos
 (26U)

	)

7976 
	#CAN_F2R2_FB26_Msk
 (0x1UL << 
CAN_F2R2_FB26_Pos
Ë

	)

7977 
	#CAN_F2R2_FB26
 
CAN_F2R2_FB26_Msk


	)

7978 
	#CAN_F2R2_FB27_Pos
 (27U)

	)

7979 
	#CAN_F2R2_FB27_Msk
 (0x1UL << 
CAN_F2R2_FB27_Pos
Ë

	)

7980 
	#CAN_F2R2_FB27
 
CAN_F2R2_FB27_Msk


	)

7981 
	#CAN_F2R2_FB28_Pos
 (28U)

	)

7982 
	#CAN_F2R2_FB28_Msk
 (0x1UL << 
CAN_F2R2_FB28_Pos
Ë

	)

7983 
	#CAN_F2R2_FB28
 
CAN_F2R2_FB28_Msk


	)

7984 
	#CAN_F2R2_FB29_Pos
 (29U)

	)

7985 
	#CAN_F2R2_FB29_Msk
 (0x1UL << 
CAN_F2R2_FB29_Pos
Ë

	)

7986 
	#CAN_F2R2_FB29
 
CAN_F2R2_FB29_Msk


	)

7987 
	#CAN_F2R2_FB30_Pos
 (30U)

	)

7988 
	#CAN_F2R2_FB30_Msk
 (0x1UL << 
CAN_F2R2_FB30_Pos
Ë

	)

7989 
	#CAN_F2R2_FB30
 
CAN_F2R2_FB30_Msk


	)

7990 
	#CAN_F2R2_FB31_Pos
 (31U)

	)

7991 
	#CAN_F2R2_FB31_Msk
 (0x1UL << 
CAN_F2R2_FB31_Pos
Ë

	)

7992 
	#CAN_F2R2_FB31
 
CAN_F2R2_FB31_Msk


	)

7995 
	#CAN_F3R2_FB0_Pos
 (0U)

	)

7996 
	#CAN_F3R2_FB0_Msk
 (0x1UL << 
CAN_F3R2_FB0_Pos
Ë

	)

7997 
	#CAN_F3R2_FB0
 
CAN_F3R2_FB0_Msk


	)

7998 
	#CAN_F3R2_FB1_Pos
 (1U)

	)

7999 
	#CAN_F3R2_FB1_Msk
 (0x1UL << 
CAN_F3R2_FB1_Pos
Ë

	)

8000 
	#CAN_F3R2_FB1
 
CAN_F3R2_FB1_Msk


	)

8001 
	#CAN_F3R2_FB2_Pos
 (2U)

	)

8002 
	#CAN_F3R2_FB2_Msk
 (0x1UL << 
CAN_F3R2_FB2_Pos
Ë

	)

8003 
	#CAN_F3R2_FB2
 
CAN_F3R2_FB2_Msk


	)

8004 
	#CAN_F3R2_FB3_Pos
 (3U)

	)

8005 
	#CAN_F3R2_FB3_Msk
 (0x1UL << 
CAN_F3R2_FB3_Pos
Ë

	)

8006 
	#CAN_F3R2_FB3
 
CAN_F3R2_FB3_Msk


	)

8007 
	#CAN_F3R2_FB4_Pos
 (4U)

	)

8008 
	#CAN_F3R2_FB4_Msk
 (0x1UL << 
CAN_F3R2_FB4_Pos
Ë

	)

8009 
	#CAN_F3R2_FB4
 
CAN_F3R2_FB4_Msk


	)

8010 
	#CAN_F3R2_FB5_Pos
 (5U)

	)

8011 
	#CAN_F3R2_FB5_Msk
 (0x1UL << 
CAN_F3R2_FB5_Pos
Ë

	)

8012 
	#CAN_F3R2_FB5
 
CAN_F3R2_FB5_Msk


	)

8013 
	#CAN_F3R2_FB6_Pos
 (6U)

	)

8014 
	#CAN_F3R2_FB6_Msk
 (0x1UL << 
CAN_F3R2_FB6_Pos
Ë

	)

8015 
	#CAN_F3R2_FB6
 
CAN_F3R2_FB6_Msk


	)

8016 
	#CAN_F3R2_FB7_Pos
 (7U)

	)

8017 
	#CAN_F3R2_FB7_Msk
 (0x1UL << 
CAN_F3R2_FB7_Pos
Ë

	)

8018 
	#CAN_F3R2_FB7
 
CAN_F3R2_FB7_Msk


	)

8019 
	#CAN_F3R2_FB8_Pos
 (8U)

	)

8020 
	#CAN_F3R2_FB8_Msk
 (0x1UL << 
CAN_F3R2_FB8_Pos
Ë

	)

8021 
	#CAN_F3R2_FB8
 
CAN_F3R2_FB8_Msk


	)

8022 
	#CAN_F3R2_FB9_Pos
 (9U)

	)

8023 
	#CAN_F3R2_FB9_Msk
 (0x1UL << 
CAN_F3R2_FB9_Pos
Ë

	)

8024 
	#CAN_F3R2_FB9
 
CAN_F3R2_FB9_Msk


	)

8025 
	#CAN_F3R2_FB10_Pos
 (10U)

	)

8026 
	#CAN_F3R2_FB10_Msk
 (0x1UL << 
CAN_F3R2_FB10_Pos
Ë

	)

8027 
	#CAN_F3R2_FB10
 
CAN_F3R2_FB10_Msk


	)

8028 
	#CAN_F3R2_FB11_Pos
 (11U)

	)

8029 
	#CAN_F3R2_FB11_Msk
 (0x1UL << 
CAN_F3R2_FB11_Pos
Ë

	)

8030 
	#CAN_F3R2_FB11
 
CAN_F3R2_FB11_Msk


	)

8031 
	#CAN_F3R2_FB12_Pos
 (12U)

	)

8032 
	#CAN_F3R2_FB12_Msk
 (0x1UL << 
CAN_F3R2_FB12_Pos
Ë

	)

8033 
	#CAN_F3R2_FB12
 
CAN_F3R2_FB12_Msk


	)

8034 
	#CAN_F3R2_FB13_Pos
 (13U)

	)

8035 
	#CAN_F3R2_FB13_Msk
 (0x1UL << 
CAN_F3R2_FB13_Pos
Ë

	)

8036 
	#CAN_F3R2_FB13
 
CAN_F3R2_FB13_Msk


	)

8037 
	#CAN_F3R2_FB14_Pos
 (14U)

	)

8038 
	#CAN_F3R2_FB14_Msk
 (0x1UL << 
CAN_F3R2_FB14_Pos
Ë

	)

8039 
	#CAN_F3R2_FB14
 
CAN_F3R2_FB14_Msk


	)

8040 
	#CAN_F3R2_FB15_Pos
 (15U)

	)

8041 
	#CAN_F3R2_FB15_Msk
 (0x1UL << 
CAN_F3R2_FB15_Pos
Ë

	)

8042 
	#CAN_F3R2_FB15
 
CAN_F3R2_FB15_Msk


	)

8043 
	#CAN_F3R2_FB16_Pos
 (16U)

	)

8044 
	#CAN_F3R2_FB16_Msk
 (0x1UL << 
CAN_F3R2_FB16_Pos
Ë

	)

8045 
	#CAN_F3R2_FB16
 
CAN_F3R2_FB16_Msk


	)

8046 
	#CAN_F3R2_FB17_Pos
 (17U)

	)

8047 
	#CAN_F3R2_FB17_Msk
 (0x1UL << 
CAN_F3R2_FB17_Pos
Ë

	)

8048 
	#CAN_F3R2_FB17
 
CAN_F3R2_FB17_Msk


	)

8049 
	#CAN_F3R2_FB18_Pos
 (18U)

	)

8050 
	#CAN_F3R2_FB18_Msk
 (0x1UL << 
CAN_F3R2_FB18_Pos
Ë

	)

8051 
	#CAN_F3R2_FB18
 
CAN_F3R2_FB18_Msk


	)

8052 
	#CAN_F3R2_FB19_Pos
 (19U)

	)

8053 
	#CAN_F3R2_FB19_Msk
 (0x1UL << 
CAN_F3R2_FB19_Pos
Ë

	)

8054 
	#CAN_F3R2_FB19
 
CAN_F3R2_FB19_Msk


	)

8055 
	#CAN_F3R2_FB20_Pos
 (20U)

	)

8056 
	#CAN_F3R2_FB20_Msk
 (0x1UL << 
CAN_F3R2_FB20_Pos
Ë

	)

8057 
	#CAN_F3R2_FB20
 
CAN_F3R2_FB20_Msk


	)

8058 
	#CAN_F3R2_FB21_Pos
 (21U)

	)

8059 
	#CAN_F3R2_FB21_Msk
 (0x1UL << 
CAN_F3R2_FB21_Pos
Ë

	)

8060 
	#CAN_F3R2_FB21
 
CAN_F3R2_FB21_Msk


	)

8061 
	#CAN_F3R2_FB22_Pos
 (22U)

	)

8062 
	#CAN_F3R2_FB22_Msk
 (0x1UL << 
CAN_F3R2_FB22_Pos
Ë

	)

8063 
	#CAN_F3R2_FB22
 
CAN_F3R2_FB22_Msk


	)

8064 
	#CAN_F3R2_FB23_Pos
 (23U)

	)

8065 
	#CAN_F3R2_FB23_Msk
 (0x1UL << 
CAN_F3R2_FB23_Pos
Ë

	)

8066 
	#CAN_F3R2_FB23
 
CAN_F3R2_FB23_Msk


	)

8067 
	#CAN_F3R2_FB24_Pos
 (24U)

	)

8068 
	#CAN_F3R2_FB24_Msk
 (0x1UL << 
CAN_F3R2_FB24_Pos
Ë

	)

8069 
	#CAN_F3R2_FB24
 
CAN_F3R2_FB24_Msk


	)

8070 
	#CAN_F3R2_FB25_Pos
 (25U)

	)

8071 
	#CAN_F3R2_FB25_Msk
 (0x1UL << 
CAN_F3R2_FB25_Pos
Ë

	)

8072 
	#CAN_F3R2_FB25
 
CAN_F3R2_FB25_Msk


	)

8073 
	#CAN_F3R2_FB26_Pos
 (26U)

	)

8074 
	#CAN_F3R2_FB26_Msk
 (0x1UL << 
CAN_F3R2_FB26_Pos
Ë

	)

8075 
	#CAN_F3R2_FB26
 
CAN_F3R2_FB26_Msk


	)

8076 
	#CAN_F3R2_FB27_Pos
 (27U)

	)

8077 
	#CAN_F3R2_FB27_Msk
 (0x1UL << 
CAN_F3R2_FB27_Pos
Ë

	)

8078 
	#CAN_F3R2_FB27
 
CAN_F3R2_FB27_Msk


	)

8079 
	#CAN_F3R2_FB28_Pos
 (28U)

	)

8080 
	#CAN_F3R2_FB28_Msk
 (0x1UL << 
CAN_F3R2_FB28_Pos
Ë

	)

8081 
	#CAN_F3R2_FB28
 
CAN_F3R2_FB28_Msk


	)

8082 
	#CAN_F3R2_FB29_Pos
 (29U)

	)

8083 
	#CAN_F3R2_FB29_Msk
 (0x1UL << 
CAN_F3R2_FB29_Pos
Ë

	)

8084 
	#CAN_F3R2_FB29
 
CAN_F3R2_FB29_Msk


	)

8085 
	#CAN_F3R2_FB30_Pos
 (30U)

	)

8086 
	#CAN_F3R2_FB30_Msk
 (0x1UL << 
CAN_F3R2_FB30_Pos
Ë

	)

8087 
	#CAN_F3R2_FB30
 
CAN_F3R2_FB30_Msk


	)

8088 
	#CAN_F3R2_FB31_Pos
 (31U)

	)

8089 
	#CAN_F3R2_FB31_Msk
 (0x1UL << 
CAN_F3R2_FB31_Pos
Ë

	)

8090 
	#CAN_F3R2_FB31
 
CAN_F3R2_FB31_Msk


	)

8093 
	#CAN_F4R2_FB0_Pos
 (0U)

	)

8094 
	#CAN_F4R2_FB0_Msk
 (0x1UL << 
CAN_F4R2_FB0_Pos
Ë

	)

8095 
	#CAN_F4R2_FB0
 
CAN_F4R2_FB0_Msk


	)

8096 
	#CAN_F4R2_FB1_Pos
 (1U)

	)

8097 
	#CAN_F4R2_FB1_Msk
 (0x1UL << 
CAN_F4R2_FB1_Pos
Ë

	)

8098 
	#CAN_F4R2_FB1
 
CAN_F4R2_FB1_Msk


	)

8099 
	#CAN_F4R2_FB2_Pos
 (2U)

	)

8100 
	#CAN_F4R2_FB2_Msk
 (0x1UL << 
CAN_F4R2_FB2_Pos
Ë

	)

8101 
	#CAN_F4R2_FB2
 
CAN_F4R2_FB2_Msk


	)

8102 
	#CAN_F4R2_FB3_Pos
 (3U)

	)

8103 
	#CAN_F4R2_FB3_Msk
 (0x1UL << 
CAN_F4R2_FB3_Pos
Ë

	)

8104 
	#CAN_F4R2_FB3
 
CAN_F4R2_FB3_Msk


	)

8105 
	#CAN_F4R2_FB4_Pos
 (4U)

	)

8106 
	#CAN_F4R2_FB4_Msk
 (0x1UL << 
CAN_F4R2_FB4_Pos
Ë

	)

8107 
	#CAN_F4R2_FB4
 
CAN_F4R2_FB4_Msk


	)

8108 
	#CAN_F4R2_FB5_Pos
 (5U)

	)

8109 
	#CAN_F4R2_FB5_Msk
 (0x1UL << 
CAN_F4R2_FB5_Pos
Ë

	)

8110 
	#CAN_F4R2_FB5
 
CAN_F4R2_FB5_Msk


	)

8111 
	#CAN_F4R2_FB6_Pos
 (6U)

	)

8112 
	#CAN_F4R2_FB6_Msk
 (0x1UL << 
CAN_F4R2_FB6_Pos
Ë

	)

8113 
	#CAN_F4R2_FB6
 
CAN_F4R2_FB6_Msk


	)

8114 
	#CAN_F4R2_FB7_Pos
 (7U)

	)

8115 
	#CAN_F4R2_FB7_Msk
 (0x1UL << 
CAN_F4R2_FB7_Pos
Ë

	)

8116 
	#CAN_F4R2_FB7
 
CAN_F4R2_FB7_Msk


	)

8117 
	#CAN_F4R2_FB8_Pos
 (8U)

	)

8118 
	#CAN_F4R2_FB8_Msk
 (0x1UL << 
CAN_F4R2_FB8_Pos
Ë

	)

8119 
	#CAN_F4R2_FB8
 
CAN_F4R2_FB8_Msk


	)

8120 
	#CAN_F4R2_FB9_Pos
 (9U)

	)

8121 
	#CAN_F4R2_FB9_Msk
 (0x1UL << 
CAN_F4R2_FB9_Pos
Ë

	)

8122 
	#CAN_F4R2_FB9
 
CAN_F4R2_FB9_Msk


	)

8123 
	#CAN_F4R2_FB10_Pos
 (10U)

	)

8124 
	#CAN_F4R2_FB10_Msk
 (0x1UL << 
CAN_F4R2_FB10_Pos
Ë

	)

8125 
	#CAN_F4R2_FB10
 
CAN_F4R2_FB10_Msk


	)

8126 
	#CAN_F4R2_FB11_Pos
 (11U)

	)

8127 
	#CAN_F4R2_FB11_Msk
 (0x1UL << 
CAN_F4R2_FB11_Pos
Ë

	)

8128 
	#CAN_F4R2_FB11
 
CAN_F4R2_FB11_Msk


	)

8129 
	#CAN_F4R2_FB12_Pos
 (12U)

	)

8130 
	#CAN_F4R2_FB12_Msk
 (0x1UL << 
CAN_F4R2_FB12_Pos
Ë

	)

8131 
	#CAN_F4R2_FB12
 
CAN_F4R2_FB12_Msk


	)

8132 
	#CAN_F4R2_FB13_Pos
 (13U)

	)

8133 
	#CAN_F4R2_FB13_Msk
 (0x1UL << 
CAN_F4R2_FB13_Pos
Ë

	)

8134 
	#CAN_F4R2_FB13
 
CAN_F4R2_FB13_Msk


	)

8135 
	#CAN_F4R2_FB14_Pos
 (14U)

	)

8136 
	#CAN_F4R2_FB14_Msk
 (0x1UL << 
CAN_F4R2_FB14_Pos
Ë

	)

8137 
	#CAN_F4R2_FB14
 
CAN_F4R2_FB14_Msk


	)

8138 
	#CAN_F4R2_FB15_Pos
 (15U)

	)

8139 
	#CAN_F4R2_FB15_Msk
 (0x1UL << 
CAN_F4R2_FB15_Pos
Ë

	)

8140 
	#CAN_F4R2_FB15
 
CAN_F4R2_FB15_Msk


	)

8141 
	#CAN_F4R2_FB16_Pos
 (16U)

	)

8142 
	#CAN_F4R2_FB16_Msk
 (0x1UL << 
CAN_F4R2_FB16_Pos
Ë

	)

8143 
	#CAN_F4R2_FB16
 
CAN_F4R2_FB16_Msk


	)

8144 
	#CAN_F4R2_FB17_Pos
 (17U)

	)

8145 
	#CAN_F4R2_FB17_Msk
 (0x1UL << 
CAN_F4R2_FB17_Pos
Ë

	)

8146 
	#CAN_F4R2_FB17
 
CAN_F4R2_FB17_Msk


	)

8147 
	#CAN_F4R2_FB18_Pos
 (18U)

	)

8148 
	#CAN_F4R2_FB18_Msk
 (0x1UL << 
CAN_F4R2_FB18_Pos
Ë

	)

8149 
	#CAN_F4R2_FB18
 
CAN_F4R2_FB18_Msk


	)

8150 
	#CAN_F4R2_FB19_Pos
 (19U)

	)

8151 
	#CAN_F4R2_FB19_Msk
 (0x1UL << 
CAN_F4R2_FB19_Pos
Ë

	)

8152 
	#CAN_F4R2_FB19
 
CAN_F4R2_FB19_Msk


	)

8153 
	#CAN_F4R2_FB20_Pos
 (20U)

	)

8154 
	#CAN_F4R2_FB20_Msk
 (0x1UL << 
CAN_F4R2_FB20_Pos
Ë

	)

8155 
	#CAN_F4R2_FB20
 
CAN_F4R2_FB20_Msk


	)

8156 
	#CAN_F4R2_FB21_Pos
 (21U)

	)

8157 
	#CAN_F4R2_FB21_Msk
 (0x1UL << 
CAN_F4R2_FB21_Pos
Ë

	)

8158 
	#CAN_F4R2_FB21
 
CAN_F4R2_FB21_Msk


	)

8159 
	#CAN_F4R2_FB22_Pos
 (22U)

	)

8160 
	#CAN_F4R2_FB22_Msk
 (0x1UL << 
CAN_F4R2_FB22_Pos
Ë

	)

8161 
	#CAN_F4R2_FB22
 
CAN_F4R2_FB22_Msk


	)

8162 
	#CAN_F4R2_FB23_Pos
 (23U)

	)

8163 
	#CAN_F4R2_FB23_Msk
 (0x1UL << 
CAN_F4R2_FB23_Pos
Ë

	)

8164 
	#CAN_F4R2_FB23
 
CAN_F4R2_FB23_Msk


	)

8165 
	#CAN_F4R2_FB24_Pos
 (24U)

	)

8166 
	#CAN_F4R2_FB24_Msk
 (0x1UL << 
CAN_F4R2_FB24_Pos
Ë

	)

8167 
	#CAN_F4R2_FB24
 
CAN_F4R2_FB24_Msk


	)

8168 
	#CAN_F4R2_FB25_Pos
 (25U)

	)

8169 
	#CAN_F4R2_FB25_Msk
 (0x1UL << 
CAN_F4R2_FB25_Pos
Ë

	)

8170 
	#CAN_F4R2_FB25
 
CAN_F4R2_FB25_Msk


	)

8171 
	#CAN_F4R2_FB26_Pos
 (26U)

	)

8172 
	#CAN_F4R2_FB26_Msk
 (0x1UL << 
CAN_F4R2_FB26_Pos
Ë

	)

8173 
	#CAN_F4R2_FB26
 
CAN_F4R2_FB26_Msk


	)

8174 
	#CAN_F4R2_FB27_Pos
 (27U)

	)

8175 
	#CAN_F4R2_FB27_Msk
 (0x1UL << 
CAN_F4R2_FB27_Pos
Ë

	)

8176 
	#CAN_F4R2_FB27
 
CAN_F4R2_FB27_Msk


	)

8177 
	#CAN_F4R2_FB28_Pos
 (28U)

	)

8178 
	#CAN_F4R2_FB28_Msk
 (0x1UL << 
CAN_F4R2_FB28_Pos
Ë

	)

8179 
	#CAN_F4R2_FB28
 
CAN_F4R2_FB28_Msk


	)

8180 
	#CAN_F4R2_FB29_Pos
 (29U)

	)

8181 
	#CAN_F4R2_FB29_Msk
 (0x1UL << 
CAN_F4R2_FB29_Pos
Ë

	)

8182 
	#CAN_F4R2_FB29
 
CAN_F4R2_FB29_Msk


	)

8183 
	#CAN_F4R2_FB30_Pos
 (30U)

	)

8184 
	#CAN_F4R2_FB30_Msk
 (0x1UL << 
CAN_F4R2_FB30_Pos
Ë

	)

8185 
	#CAN_F4R2_FB30
 
CAN_F4R2_FB30_Msk


	)

8186 
	#CAN_F4R2_FB31_Pos
 (31U)

	)

8187 
	#CAN_F4R2_FB31_Msk
 (0x1UL << 
CAN_F4R2_FB31_Pos
Ë

	)

8188 
	#CAN_F4R2_FB31
 
CAN_F4R2_FB31_Msk


	)

8191 
	#CAN_F5R2_FB0_Pos
 (0U)

	)

8192 
	#CAN_F5R2_FB0_Msk
 (0x1UL << 
CAN_F5R2_FB0_Pos
Ë

	)

8193 
	#CAN_F5R2_FB0
 
CAN_F5R2_FB0_Msk


	)

8194 
	#CAN_F5R2_FB1_Pos
 (1U)

	)

8195 
	#CAN_F5R2_FB1_Msk
 (0x1UL << 
CAN_F5R2_FB1_Pos
Ë

	)

8196 
	#CAN_F5R2_FB1
 
CAN_F5R2_FB1_Msk


	)

8197 
	#CAN_F5R2_FB2_Pos
 (2U)

	)

8198 
	#CAN_F5R2_FB2_Msk
 (0x1UL << 
CAN_F5R2_FB2_Pos
Ë

	)

8199 
	#CAN_F5R2_FB2
 
CAN_F5R2_FB2_Msk


	)

8200 
	#CAN_F5R2_FB3_Pos
 (3U)

	)

8201 
	#CAN_F5R2_FB3_Msk
 (0x1UL << 
CAN_F5R2_FB3_Pos
Ë

	)

8202 
	#CAN_F5R2_FB3
 
CAN_F5R2_FB3_Msk


	)

8203 
	#CAN_F5R2_FB4_Pos
 (4U)

	)

8204 
	#CAN_F5R2_FB4_Msk
 (0x1UL << 
CAN_F5R2_FB4_Pos
Ë

	)

8205 
	#CAN_F5R2_FB4
 
CAN_F5R2_FB4_Msk


	)

8206 
	#CAN_F5R2_FB5_Pos
 (5U)

	)

8207 
	#CAN_F5R2_FB5_Msk
 (0x1UL << 
CAN_F5R2_FB5_Pos
Ë

	)

8208 
	#CAN_F5R2_FB5
 
CAN_F5R2_FB5_Msk


	)

8209 
	#CAN_F5R2_FB6_Pos
 (6U)

	)

8210 
	#CAN_F5R2_FB6_Msk
 (0x1UL << 
CAN_F5R2_FB6_Pos
Ë

	)

8211 
	#CAN_F5R2_FB6
 
CAN_F5R2_FB6_Msk


	)

8212 
	#CAN_F5R2_FB7_Pos
 (7U)

	)

8213 
	#CAN_F5R2_FB7_Msk
 (0x1UL << 
CAN_F5R2_FB7_Pos
Ë

	)

8214 
	#CAN_F5R2_FB7
 
CAN_F5R2_FB7_Msk


	)

8215 
	#CAN_F5R2_FB8_Pos
 (8U)

	)

8216 
	#CAN_F5R2_FB8_Msk
 (0x1UL << 
CAN_F5R2_FB8_Pos
Ë

	)

8217 
	#CAN_F5R2_FB8
 
CAN_F5R2_FB8_Msk


	)

8218 
	#CAN_F5R2_FB9_Pos
 (9U)

	)

8219 
	#CAN_F5R2_FB9_Msk
 (0x1UL << 
CAN_F5R2_FB9_Pos
Ë

	)

8220 
	#CAN_F5R2_FB9
 
CAN_F5R2_FB9_Msk


	)

8221 
	#CAN_F5R2_FB10_Pos
 (10U)

	)

8222 
	#CAN_F5R2_FB10_Msk
 (0x1UL << 
CAN_F5R2_FB10_Pos
Ë

	)

8223 
	#CAN_F5R2_FB10
 
CAN_F5R2_FB10_Msk


	)

8224 
	#CAN_F5R2_FB11_Pos
 (11U)

	)

8225 
	#CAN_F5R2_FB11_Msk
 (0x1UL << 
CAN_F5R2_FB11_Pos
Ë

	)

8226 
	#CAN_F5R2_FB11
 
CAN_F5R2_FB11_Msk


	)

8227 
	#CAN_F5R2_FB12_Pos
 (12U)

	)

8228 
	#CAN_F5R2_FB12_Msk
 (0x1UL << 
CAN_F5R2_FB12_Pos
Ë

	)

8229 
	#CAN_F5R2_FB12
 
CAN_F5R2_FB12_Msk


	)

8230 
	#CAN_F5R2_FB13_Pos
 (13U)

	)

8231 
	#CAN_F5R2_FB13_Msk
 (0x1UL << 
CAN_F5R2_FB13_Pos
Ë

	)

8232 
	#CAN_F5R2_FB13
 
CAN_F5R2_FB13_Msk


	)

8233 
	#CAN_F5R2_FB14_Pos
 (14U)

	)

8234 
	#CAN_F5R2_FB14_Msk
 (0x1UL << 
CAN_F5R2_FB14_Pos
Ë

	)

8235 
	#CAN_F5R2_FB14
 
CAN_F5R2_FB14_Msk


	)

8236 
	#CAN_F5R2_FB15_Pos
 (15U)

	)

8237 
	#CAN_F5R2_FB15_Msk
 (0x1UL << 
CAN_F5R2_FB15_Pos
Ë

	)

8238 
	#CAN_F5R2_FB15
 
CAN_F5R2_FB15_Msk


	)

8239 
	#CAN_F5R2_FB16_Pos
 (16U)

	)

8240 
	#CAN_F5R2_FB16_Msk
 (0x1UL << 
CAN_F5R2_FB16_Pos
Ë

	)

8241 
	#CAN_F5R2_FB16
 
CAN_F5R2_FB16_Msk


	)

8242 
	#CAN_F5R2_FB17_Pos
 (17U)

	)

8243 
	#CAN_F5R2_FB17_Msk
 (0x1UL << 
CAN_F5R2_FB17_Pos
Ë

	)

8244 
	#CAN_F5R2_FB17
 
CAN_F5R2_FB17_Msk


	)

8245 
	#CAN_F5R2_FB18_Pos
 (18U)

	)

8246 
	#CAN_F5R2_FB18_Msk
 (0x1UL << 
CAN_F5R2_FB18_Pos
Ë

	)

8247 
	#CAN_F5R2_FB18
 
CAN_F5R2_FB18_Msk


	)

8248 
	#CAN_F5R2_FB19_Pos
 (19U)

	)

8249 
	#CAN_F5R2_FB19_Msk
 (0x1UL << 
CAN_F5R2_FB19_Pos
Ë

	)

8250 
	#CAN_F5R2_FB19
 
CAN_F5R2_FB19_Msk


	)

8251 
	#CAN_F5R2_FB20_Pos
 (20U)

	)

8252 
	#CAN_F5R2_FB20_Msk
 (0x1UL << 
CAN_F5R2_FB20_Pos
Ë

	)

8253 
	#CAN_F5R2_FB20
 
CAN_F5R2_FB20_Msk


	)

8254 
	#CAN_F5R2_FB21_Pos
 (21U)

	)

8255 
	#CAN_F5R2_FB21_Msk
 (0x1UL << 
CAN_F5R2_FB21_Pos
Ë

	)

8256 
	#CAN_F5R2_FB21
 
CAN_F5R2_FB21_Msk


	)

8257 
	#CAN_F5R2_FB22_Pos
 (22U)

	)

8258 
	#CAN_F5R2_FB22_Msk
 (0x1UL << 
CAN_F5R2_FB22_Pos
Ë

	)

8259 
	#CAN_F5R2_FB22
 
CAN_F5R2_FB22_Msk


	)

8260 
	#CAN_F5R2_FB23_Pos
 (23U)

	)

8261 
	#CAN_F5R2_FB23_Msk
 (0x1UL << 
CAN_F5R2_FB23_Pos
Ë

	)

8262 
	#CAN_F5R2_FB23
 
CAN_F5R2_FB23_Msk


	)

8263 
	#CAN_F5R2_FB24_Pos
 (24U)

	)

8264 
	#CAN_F5R2_FB24_Msk
 (0x1UL << 
CAN_F5R2_FB24_Pos
Ë

	)

8265 
	#CAN_F5R2_FB24
 
CAN_F5R2_FB24_Msk


	)

8266 
	#CAN_F5R2_FB25_Pos
 (25U)

	)

8267 
	#CAN_F5R2_FB25_Msk
 (0x1UL << 
CAN_F5R2_FB25_Pos
Ë

	)

8268 
	#CAN_F5R2_FB25
 
CAN_F5R2_FB25_Msk


	)

8269 
	#CAN_F5R2_FB26_Pos
 (26U)

	)

8270 
	#CAN_F5R2_FB26_Msk
 (0x1UL << 
CAN_F5R2_FB26_Pos
Ë

	)

8271 
	#CAN_F5R2_FB26
 
CAN_F5R2_FB26_Msk


	)

8272 
	#CAN_F5R2_FB27_Pos
 (27U)

	)

8273 
	#CAN_F5R2_FB27_Msk
 (0x1UL << 
CAN_F5R2_FB27_Pos
Ë

	)

8274 
	#CAN_F5R2_FB27
 
CAN_F5R2_FB27_Msk


	)

8275 
	#CAN_F5R2_FB28_Pos
 (28U)

	)

8276 
	#CAN_F5R2_FB28_Msk
 (0x1UL << 
CAN_F5R2_FB28_Pos
Ë

	)

8277 
	#CAN_F5R2_FB28
 
CAN_F5R2_FB28_Msk


	)

8278 
	#CAN_F5R2_FB29_Pos
 (29U)

	)

8279 
	#CAN_F5R2_FB29_Msk
 (0x1UL << 
CAN_F5R2_FB29_Pos
Ë

	)

8280 
	#CAN_F5R2_FB29
 
CAN_F5R2_FB29_Msk


	)

8281 
	#CAN_F5R2_FB30_Pos
 (30U)

	)

8282 
	#CAN_F5R2_FB30_Msk
 (0x1UL << 
CAN_F5R2_FB30_Pos
Ë

	)

8283 
	#CAN_F5R2_FB30
 
CAN_F5R2_FB30_Msk


	)

8284 
	#CAN_F5R2_FB31_Pos
 (31U)

	)

8285 
	#CAN_F5R2_FB31_Msk
 (0x1UL << 
CAN_F5R2_FB31_Pos
Ë

	)

8286 
	#CAN_F5R2_FB31
 
CAN_F5R2_FB31_Msk


	)

8289 
	#CAN_F6R2_FB0_Pos
 (0U)

	)

8290 
	#CAN_F6R2_FB0_Msk
 (0x1UL << 
CAN_F6R2_FB0_Pos
Ë

	)

8291 
	#CAN_F6R2_FB0
 
CAN_F6R2_FB0_Msk


	)

8292 
	#CAN_F6R2_FB1_Pos
 (1U)

	)

8293 
	#CAN_F6R2_FB1_Msk
 (0x1UL << 
CAN_F6R2_FB1_Pos
Ë

	)

8294 
	#CAN_F6R2_FB1
 
CAN_F6R2_FB1_Msk


	)

8295 
	#CAN_F6R2_FB2_Pos
 (2U)

	)

8296 
	#CAN_F6R2_FB2_Msk
 (0x1UL << 
CAN_F6R2_FB2_Pos
Ë

	)

8297 
	#CAN_F6R2_FB2
 
CAN_F6R2_FB2_Msk


	)

8298 
	#CAN_F6R2_FB3_Pos
 (3U)

	)

8299 
	#CAN_F6R2_FB3_Msk
 (0x1UL << 
CAN_F6R2_FB3_Pos
Ë

	)

8300 
	#CAN_F6R2_FB3
 
CAN_F6R2_FB3_Msk


	)

8301 
	#CAN_F6R2_FB4_Pos
 (4U)

	)

8302 
	#CAN_F6R2_FB4_Msk
 (0x1UL << 
CAN_F6R2_FB4_Pos
Ë

	)

8303 
	#CAN_F6R2_FB4
 
CAN_F6R2_FB4_Msk


	)

8304 
	#CAN_F6R2_FB5_Pos
 (5U)

	)

8305 
	#CAN_F6R2_FB5_Msk
 (0x1UL << 
CAN_F6R2_FB5_Pos
Ë

	)

8306 
	#CAN_F6R2_FB5
 
CAN_F6R2_FB5_Msk


	)

8307 
	#CAN_F6R2_FB6_Pos
 (6U)

	)

8308 
	#CAN_F6R2_FB6_Msk
 (0x1UL << 
CAN_F6R2_FB6_Pos
Ë

	)

8309 
	#CAN_F6R2_FB6
 
CAN_F6R2_FB6_Msk


	)

8310 
	#CAN_F6R2_FB7_Pos
 (7U)

	)

8311 
	#CAN_F6R2_FB7_Msk
 (0x1UL << 
CAN_F6R2_FB7_Pos
Ë

	)

8312 
	#CAN_F6R2_FB7
 
CAN_F6R2_FB7_Msk


	)

8313 
	#CAN_F6R2_FB8_Pos
 (8U)

	)

8314 
	#CAN_F6R2_FB8_Msk
 (0x1UL << 
CAN_F6R2_FB8_Pos
Ë

	)

8315 
	#CAN_F6R2_FB8
 
CAN_F6R2_FB8_Msk


	)

8316 
	#CAN_F6R2_FB9_Pos
 (9U)

	)

8317 
	#CAN_F6R2_FB9_Msk
 (0x1UL << 
CAN_F6R2_FB9_Pos
Ë

	)

8318 
	#CAN_F6R2_FB9
 
CAN_F6R2_FB9_Msk


	)

8319 
	#CAN_F6R2_FB10_Pos
 (10U)

	)

8320 
	#CAN_F6R2_FB10_Msk
 (0x1UL << 
CAN_F6R2_FB10_Pos
Ë

	)

8321 
	#CAN_F6R2_FB10
 
CAN_F6R2_FB10_Msk


	)

8322 
	#CAN_F6R2_FB11_Pos
 (11U)

	)

8323 
	#CAN_F6R2_FB11_Msk
 (0x1UL << 
CAN_F6R2_FB11_Pos
Ë

	)

8324 
	#CAN_F6R2_FB11
 
CAN_F6R2_FB11_Msk


	)

8325 
	#CAN_F6R2_FB12_Pos
 (12U)

	)

8326 
	#CAN_F6R2_FB12_Msk
 (0x1UL << 
CAN_F6R2_FB12_Pos
Ë

	)

8327 
	#CAN_F6R2_FB12
 
CAN_F6R2_FB12_Msk


	)

8328 
	#CAN_F6R2_FB13_Pos
 (13U)

	)

8329 
	#CAN_F6R2_FB13_Msk
 (0x1UL << 
CAN_F6R2_FB13_Pos
Ë

	)

8330 
	#CAN_F6R2_FB13
 
CAN_F6R2_FB13_Msk


	)

8331 
	#CAN_F6R2_FB14_Pos
 (14U)

	)

8332 
	#CAN_F6R2_FB14_Msk
 (0x1UL << 
CAN_F6R2_FB14_Pos
Ë

	)

8333 
	#CAN_F6R2_FB14
 
CAN_F6R2_FB14_Msk


	)

8334 
	#CAN_F6R2_FB15_Pos
 (15U)

	)

8335 
	#CAN_F6R2_FB15_Msk
 (0x1UL << 
CAN_F6R2_FB15_Pos
Ë

	)

8336 
	#CAN_F6R2_FB15
 
CAN_F6R2_FB15_Msk


	)

8337 
	#CAN_F6R2_FB16_Pos
 (16U)

	)

8338 
	#CAN_F6R2_FB16_Msk
 (0x1UL << 
CAN_F6R2_FB16_Pos
Ë

	)

8339 
	#CAN_F6R2_FB16
 
CAN_F6R2_FB16_Msk


	)

8340 
	#CAN_F6R2_FB17_Pos
 (17U)

	)

8341 
	#CAN_F6R2_FB17_Msk
 (0x1UL << 
CAN_F6R2_FB17_Pos
Ë

	)

8342 
	#CAN_F6R2_FB17
 
CAN_F6R2_FB17_Msk


	)

8343 
	#CAN_F6R2_FB18_Pos
 (18U)

	)

8344 
	#CAN_F6R2_FB18_Msk
 (0x1UL << 
CAN_F6R2_FB18_Pos
Ë

	)

8345 
	#CAN_F6R2_FB18
 
CAN_F6R2_FB18_Msk


	)

8346 
	#CAN_F6R2_FB19_Pos
 (19U)

	)

8347 
	#CAN_F6R2_FB19_Msk
 (0x1UL << 
CAN_F6R2_FB19_Pos
Ë

	)

8348 
	#CAN_F6R2_FB19
 
CAN_F6R2_FB19_Msk


	)

8349 
	#CAN_F6R2_FB20_Pos
 (20U)

	)

8350 
	#CAN_F6R2_FB20_Msk
 (0x1UL << 
CAN_F6R2_FB20_Pos
Ë

	)

8351 
	#CAN_F6R2_FB20
 
CAN_F6R2_FB20_Msk


	)

8352 
	#CAN_F6R2_FB21_Pos
 (21U)

	)

8353 
	#CAN_F6R2_FB21_Msk
 (0x1UL << 
CAN_F6R2_FB21_Pos
Ë

	)

8354 
	#CAN_F6R2_FB21
 
CAN_F6R2_FB21_Msk


	)

8355 
	#CAN_F6R2_FB22_Pos
 (22U)

	)

8356 
	#CAN_F6R2_FB22_Msk
 (0x1UL << 
CAN_F6R2_FB22_Pos
Ë

	)

8357 
	#CAN_F6R2_FB22
 
CAN_F6R2_FB22_Msk


	)

8358 
	#CAN_F6R2_FB23_Pos
 (23U)

	)

8359 
	#CAN_F6R2_FB23_Msk
 (0x1UL << 
CAN_F6R2_FB23_Pos
Ë

	)

8360 
	#CAN_F6R2_FB23
 
CAN_F6R2_FB23_Msk


	)

8361 
	#CAN_F6R2_FB24_Pos
 (24U)

	)

8362 
	#CAN_F6R2_FB24_Msk
 (0x1UL << 
CAN_F6R2_FB24_Pos
Ë

	)

8363 
	#CAN_F6R2_FB24
 
CAN_F6R2_FB24_Msk


	)

8364 
	#CAN_F6R2_FB25_Pos
 (25U)

	)

8365 
	#CAN_F6R2_FB25_Msk
 (0x1UL << 
CAN_F6R2_FB25_Pos
Ë

	)

8366 
	#CAN_F6R2_FB25
 
CAN_F6R2_FB25_Msk


	)

8367 
	#CAN_F6R2_FB26_Pos
 (26U)

	)

8368 
	#CAN_F6R2_FB26_Msk
 (0x1UL << 
CAN_F6R2_FB26_Pos
Ë

	)

8369 
	#CAN_F6R2_FB26
 
CAN_F6R2_FB26_Msk


	)

8370 
	#CAN_F6R2_FB27_Pos
 (27U)

	)

8371 
	#CAN_F6R2_FB27_Msk
 (0x1UL << 
CAN_F6R2_FB27_Pos
Ë

	)

8372 
	#CAN_F6R2_FB27
 
CAN_F6R2_FB27_Msk


	)

8373 
	#CAN_F6R2_FB28_Pos
 (28U)

	)

8374 
	#CAN_F6R2_FB28_Msk
 (0x1UL << 
CAN_F6R2_FB28_Pos
Ë

	)

8375 
	#CAN_F6R2_FB28
 
CAN_F6R2_FB28_Msk


	)

8376 
	#CAN_F6R2_FB29_Pos
 (29U)

	)

8377 
	#CAN_F6R2_FB29_Msk
 (0x1UL << 
CAN_F6R2_FB29_Pos
Ë

	)

8378 
	#CAN_F6R2_FB29
 
CAN_F6R2_FB29_Msk


	)

8379 
	#CAN_F6R2_FB30_Pos
 (30U)

	)

8380 
	#CAN_F6R2_FB30_Msk
 (0x1UL << 
CAN_F6R2_FB30_Pos
Ë

	)

8381 
	#CAN_F6R2_FB30
 
CAN_F6R2_FB30_Msk


	)

8382 
	#CAN_F6R2_FB31_Pos
 (31U)

	)

8383 
	#CAN_F6R2_FB31_Msk
 (0x1UL << 
CAN_F6R2_FB31_Pos
Ë

	)

8384 
	#CAN_F6R2_FB31
 
CAN_F6R2_FB31_Msk


	)

8387 
	#CAN_F7R2_FB0_Pos
 (0U)

	)

8388 
	#CAN_F7R2_FB0_Msk
 (0x1UL << 
CAN_F7R2_FB0_Pos
Ë

	)

8389 
	#CAN_F7R2_FB0
 
CAN_F7R2_FB0_Msk


	)

8390 
	#CAN_F7R2_FB1_Pos
 (1U)

	)

8391 
	#CAN_F7R2_FB1_Msk
 (0x1UL << 
CAN_F7R2_FB1_Pos
Ë

	)

8392 
	#CAN_F7R2_FB1
 
CAN_F7R2_FB1_Msk


	)

8393 
	#CAN_F7R2_FB2_Pos
 (2U)

	)

8394 
	#CAN_F7R2_FB2_Msk
 (0x1UL << 
CAN_F7R2_FB2_Pos
Ë

	)

8395 
	#CAN_F7R2_FB2
 
CAN_F7R2_FB2_Msk


	)

8396 
	#CAN_F7R2_FB3_Pos
 (3U)

	)

8397 
	#CAN_F7R2_FB3_Msk
 (0x1UL << 
CAN_F7R2_FB3_Pos
Ë

	)

8398 
	#CAN_F7R2_FB3
 
CAN_F7R2_FB3_Msk


	)

8399 
	#CAN_F7R2_FB4_Pos
 (4U)

	)

8400 
	#CAN_F7R2_FB4_Msk
 (0x1UL << 
CAN_F7R2_FB4_Pos
Ë

	)

8401 
	#CAN_F7R2_FB4
 
CAN_F7R2_FB4_Msk


	)

8402 
	#CAN_F7R2_FB5_Pos
 (5U)

	)

8403 
	#CAN_F7R2_FB5_Msk
 (0x1UL << 
CAN_F7R2_FB5_Pos
Ë

	)

8404 
	#CAN_F7R2_FB5
 
CAN_F7R2_FB5_Msk


	)

8405 
	#CAN_F7R2_FB6_Pos
 (6U)

	)

8406 
	#CAN_F7R2_FB6_Msk
 (0x1UL << 
CAN_F7R2_FB6_Pos
Ë

	)

8407 
	#CAN_F7R2_FB6
 
CAN_F7R2_FB6_Msk


	)

8408 
	#CAN_F7R2_FB7_Pos
 (7U)

	)

8409 
	#CAN_F7R2_FB7_Msk
 (0x1UL << 
CAN_F7R2_FB7_Pos
Ë

	)

8410 
	#CAN_F7R2_FB7
 
CAN_F7R2_FB7_Msk


	)

8411 
	#CAN_F7R2_FB8_Pos
 (8U)

	)

8412 
	#CAN_F7R2_FB8_Msk
 (0x1UL << 
CAN_F7R2_FB8_Pos
Ë

	)

8413 
	#CAN_F7R2_FB8
 
CAN_F7R2_FB8_Msk


	)

8414 
	#CAN_F7R2_FB9_Pos
 (9U)

	)

8415 
	#CAN_F7R2_FB9_Msk
 (0x1UL << 
CAN_F7R2_FB9_Pos
Ë

	)

8416 
	#CAN_F7R2_FB9
 
CAN_F7R2_FB9_Msk


	)

8417 
	#CAN_F7R2_FB10_Pos
 (10U)

	)

8418 
	#CAN_F7R2_FB10_Msk
 (0x1UL << 
CAN_F7R2_FB10_Pos
Ë

	)

8419 
	#CAN_F7R2_FB10
 
CAN_F7R2_FB10_Msk


	)

8420 
	#CAN_F7R2_FB11_Pos
 (11U)

	)

8421 
	#CAN_F7R2_FB11_Msk
 (0x1UL << 
CAN_F7R2_FB11_Pos
Ë

	)

8422 
	#CAN_F7R2_FB11
 
CAN_F7R2_FB11_Msk


	)

8423 
	#CAN_F7R2_FB12_Pos
 (12U)

	)

8424 
	#CAN_F7R2_FB12_Msk
 (0x1UL << 
CAN_F7R2_FB12_Pos
Ë

	)

8425 
	#CAN_F7R2_FB12
 
CAN_F7R2_FB12_Msk


	)

8426 
	#CAN_F7R2_FB13_Pos
 (13U)

	)

8427 
	#CAN_F7R2_FB13_Msk
 (0x1UL << 
CAN_F7R2_FB13_Pos
Ë

	)

8428 
	#CAN_F7R2_FB13
 
CAN_F7R2_FB13_Msk


	)

8429 
	#CAN_F7R2_FB14_Pos
 (14U)

	)

8430 
	#CAN_F7R2_FB14_Msk
 (0x1UL << 
CAN_F7R2_FB14_Pos
Ë

	)

8431 
	#CAN_F7R2_FB14
 
CAN_F7R2_FB14_Msk


	)

8432 
	#CAN_F7R2_FB15_Pos
 (15U)

	)

8433 
	#CAN_F7R2_FB15_Msk
 (0x1UL << 
CAN_F7R2_FB15_Pos
Ë

	)

8434 
	#CAN_F7R2_FB15
 
CAN_F7R2_FB15_Msk


	)

8435 
	#CAN_F7R2_FB16_Pos
 (16U)

	)

8436 
	#CAN_F7R2_FB16_Msk
 (0x1UL << 
CAN_F7R2_FB16_Pos
Ë

	)

8437 
	#CAN_F7R2_FB16
 
CAN_F7R2_FB16_Msk


	)

8438 
	#CAN_F7R2_FB17_Pos
 (17U)

	)

8439 
	#CAN_F7R2_FB17_Msk
 (0x1UL << 
CAN_F7R2_FB17_Pos
Ë

	)

8440 
	#CAN_F7R2_FB17
 
CAN_F7R2_FB17_Msk


	)

8441 
	#CAN_F7R2_FB18_Pos
 (18U)

	)

8442 
	#CAN_F7R2_FB18_Msk
 (0x1UL << 
CAN_F7R2_FB18_Pos
Ë

	)

8443 
	#CAN_F7R2_FB18
 
CAN_F7R2_FB18_Msk


	)

8444 
	#CAN_F7R2_FB19_Pos
 (19U)

	)

8445 
	#CAN_F7R2_FB19_Msk
 (0x1UL << 
CAN_F7R2_FB19_Pos
Ë

	)

8446 
	#CAN_F7R2_FB19
 
CAN_F7R2_FB19_Msk


	)

8447 
	#CAN_F7R2_FB20_Pos
 (20U)

	)

8448 
	#CAN_F7R2_FB20_Msk
 (0x1UL << 
CAN_F7R2_FB20_Pos
Ë

	)

8449 
	#CAN_F7R2_FB20
 
CAN_F7R2_FB20_Msk


	)

8450 
	#CAN_F7R2_FB21_Pos
 (21U)

	)

8451 
	#CAN_F7R2_FB21_Msk
 (0x1UL << 
CAN_F7R2_FB21_Pos
Ë

	)

8452 
	#CAN_F7R2_FB21
 
CAN_F7R2_FB21_Msk


	)

8453 
	#CAN_F7R2_FB22_Pos
 (22U)

	)

8454 
	#CAN_F7R2_FB22_Msk
 (0x1UL << 
CAN_F7R2_FB22_Pos
Ë

	)

8455 
	#CAN_F7R2_FB22
 
CAN_F7R2_FB22_Msk


	)

8456 
	#CAN_F7R2_FB23_Pos
 (23U)

	)

8457 
	#CAN_F7R2_FB23_Msk
 (0x1UL << 
CAN_F7R2_FB23_Pos
Ë

	)

8458 
	#CAN_F7R2_FB23
 
CAN_F7R2_FB23_Msk


	)

8459 
	#CAN_F7R2_FB24_Pos
 (24U)

	)

8460 
	#CAN_F7R2_FB24_Msk
 (0x1UL << 
CAN_F7R2_FB24_Pos
Ë

	)

8461 
	#CAN_F7R2_FB24
 
CAN_F7R2_FB24_Msk


	)

8462 
	#CAN_F7R2_FB25_Pos
 (25U)

	)

8463 
	#CAN_F7R2_FB25_Msk
 (0x1UL << 
CAN_F7R2_FB25_Pos
Ë

	)

8464 
	#CAN_F7R2_FB25
 
CAN_F7R2_FB25_Msk


	)

8465 
	#CAN_F7R2_FB26_Pos
 (26U)

	)

8466 
	#CAN_F7R2_FB26_Msk
 (0x1UL << 
CAN_F7R2_FB26_Pos
Ë

	)

8467 
	#CAN_F7R2_FB26
 
CAN_F7R2_FB26_Msk


	)

8468 
	#CAN_F7R2_FB27_Pos
 (27U)

	)

8469 
	#CAN_F7R2_FB27_Msk
 (0x1UL << 
CAN_F7R2_FB27_Pos
Ë

	)

8470 
	#CAN_F7R2_FB27
 
CAN_F7R2_FB27_Msk


	)

8471 
	#CAN_F7R2_FB28_Pos
 (28U)

	)

8472 
	#CAN_F7R2_FB28_Msk
 (0x1UL << 
CAN_F7R2_FB28_Pos
Ë

	)

8473 
	#CAN_F7R2_FB28
 
CAN_F7R2_FB28_Msk


	)

8474 
	#CAN_F7R2_FB29_Pos
 (29U)

	)

8475 
	#CAN_F7R2_FB29_Msk
 (0x1UL << 
CAN_F7R2_FB29_Pos
Ë

	)

8476 
	#CAN_F7R2_FB29
 
CAN_F7R2_FB29_Msk


	)

8477 
	#CAN_F7R2_FB30_Pos
 (30U)

	)

8478 
	#CAN_F7R2_FB30_Msk
 (0x1UL << 
CAN_F7R2_FB30_Pos
Ë

	)

8479 
	#CAN_F7R2_FB30
 
CAN_F7R2_FB30_Msk


	)

8480 
	#CAN_F7R2_FB31_Pos
 (31U)

	)

8481 
	#CAN_F7R2_FB31_Msk
 (0x1UL << 
CAN_F7R2_FB31_Pos
Ë

	)

8482 
	#CAN_F7R2_FB31
 
CAN_F7R2_FB31_Msk


	)

8485 
	#CAN_F8R2_FB0_Pos
 (0U)

	)

8486 
	#CAN_F8R2_FB0_Msk
 (0x1UL << 
CAN_F8R2_FB0_Pos
Ë

	)

8487 
	#CAN_F8R2_FB0
 
CAN_F8R2_FB0_Msk


	)

8488 
	#CAN_F8R2_FB1_Pos
 (1U)

	)

8489 
	#CAN_F8R2_FB1_Msk
 (0x1UL << 
CAN_F8R2_FB1_Pos
Ë

	)

8490 
	#CAN_F8R2_FB1
 
CAN_F8R2_FB1_Msk


	)

8491 
	#CAN_F8R2_FB2_Pos
 (2U)

	)

8492 
	#CAN_F8R2_FB2_Msk
 (0x1UL << 
CAN_F8R2_FB2_Pos
Ë

	)

8493 
	#CAN_F8R2_FB2
 
CAN_F8R2_FB2_Msk


	)

8494 
	#CAN_F8R2_FB3_Pos
 (3U)

	)

8495 
	#CAN_F8R2_FB3_Msk
 (0x1UL << 
CAN_F8R2_FB3_Pos
Ë

	)

8496 
	#CAN_F8R2_FB3
 
CAN_F8R2_FB3_Msk


	)

8497 
	#CAN_F8R2_FB4_Pos
 (4U)

	)

8498 
	#CAN_F8R2_FB4_Msk
 (0x1UL << 
CAN_F8R2_FB4_Pos
Ë

	)

8499 
	#CAN_F8R2_FB4
 
CAN_F8R2_FB4_Msk


	)

8500 
	#CAN_F8R2_FB5_Pos
 (5U)

	)

8501 
	#CAN_F8R2_FB5_Msk
 (0x1UL << 
CAN_F8R2_FB5_Pos
Ë

	)

8502 
	#CAN_F8R2_FB5
 
CAN_F8R2_FB5_Msk


	)

8503 
	#CAN_F8R2_FB6_Pos
 (6U)

	)

8504 
	#CAN_F8R2_FB6_Msk
 (0x1UL << 
CAN_F8R2_FB6_Pos
Ë

	)

8505 
	#CAN_F8R2_FB6
 
CAN_F8R2_FB6_Msk


	)

8506 
	#CAN_F8R2_FB7_Pos
 (7U)

	)

8507 
	#CAN_F8R2_FB7_Msk
 (0x1UL << 
CAN_F8R2_FB7_Pos
Ë

	)

8508 
	#CAN_F8R2_FB7
 
CAN_F8R2_FB7_Msk


	)

8509 
	#CAN_F8R2_FB8_Pos
 (8U)

	)

8510 
	#CAN_F8R2_FB8_Msk
 (0x1UL << 
CAN_F8R2_FB8_Pos
Ë

	)

8511 
	#CAN_F8R2_FB8
 
CAN_F8R2_FB8_Msk


	)

8512 
	#CAN_F8R2_FB9_Pos
 (9U)

	)

8513 
	#CAN_F8R2_FB9_Msk
 (0x1UL << 
CAN_F8R2_FB9_Pos
Ë

	)

8514 
	#CAN_F8R2_FB9
 
CAN_F8R2_FB9_Msk


	)

8515 
	#CAN_F8R2_FB10_Pos
 (10U)

	)

8516 
	#CAN_F8R2_FB10_Msk
 (0x1UL << 
CAN_F8R2_FB10_Pos
Ë

	)

8517 
	#CAN_F8R2_FB10
 
CAN_F8R2_FB10_Msk


	)

8518 
	#CAN_F8R2_FB11_Pos
 (11U)

	)

8519 
	#CAN_F8R2_FB11_Msk
 (0x1UL << 
CAN_F8R2_FB11_Pos
Ë

	)

8520 
	#CAN_F8R2_FB11
 
CAN_F8R2_FB11_Msk


	)

8521 
	#CAN_F8R2_FB12_Pos
 (12U)

	)

8522 
	#CAN_F8R2_FB12_Msk
 (0x1UL << 
CAN_F8R2_FB12_Pos
Ë

	)

8523 
	#CAN_F8R2_FB12
 
CAN_F8R2_FB12_Msk


	)

8524 
	#CAN_F8R2_FB13_Pos
 (13U)

	)

8525 
	#CAN_F8R2_FB13_Msk
 (0x1UL << 
CAN_F8R2_FB13_Pos
Ë

	)

8526 
	#CAN_F8R2_FB13
 
CAN_F8R2_FB13_Msk


	)

8527 
	#CAN_F8R2_FB14_Pos
 (14U)

	)

8528 
	#CAN_F8R2_FB14_Msk
 (0x1UL << 
CAN_F8R2_FB14_Pos
Ë

	)

8529 
	#CAN_F8R2_FB14
 
CAN_F8R2_FB14_Msk


	)

8530 
	#CAN_F8R2_FB15_Pos
 (15U)

	)

8531 
	#CAN_F8R2_FB15_Msk
 (0x1UL << 
CAN_F8R2_FB15_Pos
Ë

	)

8532 
	#CAN_F8R2_FB15
 
CAN_F8R2_FB15_Msk


	)

8533 
	#CAN_F8R2_FB16_Pos
 (16U)

	)

8534 
	#CAN_F8R2_FB16_Msk
 (0x1UL << 
CAN_F8R2_FB16_Pos
Ë

	)

8535 
	#CAN_F8R2_FB16
 
CAN_F8R2_FB16_Msk


	)

8536 
	#CAN_F8R2_FB17_Pos
 (17U)

	)

8537 
	#CAN_F8R2_FB17_Msk
 (0x1UL << 
CAN_F8R2_FB17_Pos
Ë

	)

8538 
	#CAN_F8R2_FB17
 
CAN_F8R2_FB17_Msk


	)

8539 
	#CAN_F8R2_FB18_Pos
 (18U)

	)

8540 
	#CAN_F8R2_FB18_Msk
 (0x1UL << 
CAN_F8R2_FB18_Pos
Ë

	)

8541 
	#CAN_F8R2_FB18
 
CAN_F8R2_FB18_Msk


	)

8542 
	#CAN_F8R2_FB19_Pos
 (19U)

	)

8543 
	#CAN_F8R2_FB19_Msk
 (0x1UL << 
CAN_F8R2_FB19_Pos
Ë

	)

8544 
	#CAN_F8R2_FB19
 
CAN_F8R2_FB19_Msk


	)

8545 
	#CAN_F8R2_FB20_Pos
 (20U)

	)

8546 
	#CAN_F8R2_FB20_Msk
 (0x1UL << 
CAN_F8R2_FB20_Pos
Ë

	)

8547 
	#CAN_F8R2_FB20
 
CAN_F8R2_FB20_Msk


	)

8548 
	#CAN_F8R2_FB21_Pos
 (21U)

	)

8549 
	#CAN_F8R2_FB21_Msk
 (0x1UL << 
CAN_F8R2_FB21_Pos
Ë

	)

8550 
	#CAN_F8R2_FB21
 
CAN_F8R2_FB21_Msk


	)

8551 
	#CAN_F8R2_FB22_Pos
 (22U)

	)

8552 
	#CAN_F8R2_FB22_Msk
 (0x1UL << 
CAN_F8R2_FB22_Pos
Ë

	)

8553 
	#CAN_F8R2_FB22
 
CAN_F8R2_FB22_Msk


	)

8554 
	#CAN_F8R2_FB23_Pos
 (23U)

	)

8555 
	#CAN_F8R2_FB23_Msk
 (0x1UL << 
CAN_F8R2_FB23_Pos
Ë

	)

8556 
	#CAN_F8R2_FB23
 
CAN_F8R2_FB23_Msk


	)

8557 
	#CAN_F8R2_FB24_Pos
 (24U)

	)

8558 
	#CAN_F8R2_FB24_Msk
 (0x1UL << 
CAN_F8R2_FB24_Pos
Ë

	)

8559 
	#CAN_F8R2_FB24
 
CAN_F8R2_FB24_Msk


	)

8560 
	#CAN_F8R2_FB25_Pos
 (25U)

	)

8561 
	#CAN_F8R2_FB25_Msk
 (0x1UL << 
CAN_F8R2_FB25_Pos
Ë

	)

8562 
	#CAN_F8R2_FB25
 
CAN_F8R2_FB25_Msk


	)

8563 
	#CAN_F8R2_FB26_Pos
 (26U)

	)

8564 
	#CAN_F8R2_FB26_Msk
 (0x1UL << 
CAN_F8R2_FB26_Pos
Ë

	)

8565 
	#CAN_F8R2_FB26
 
CAN_F8R2_FB26_Msk


	)

8566 
	#CAN_F8R2_FB27_Pos
 (27U)

	)

8567 
	#CAN_F8R2_FB27_Msk
 (0x1UL << 
CAN_F8R2_FB27_Pos
Ë

	)

8568 
	#CAN_F8R2_FB27
 
CAN_F8R2_FB27_Msk


	)

8569 
	#CAN_F8R2_FB28_Pos
 (28U)

	)

8570 
	#CAN_F8R2_FB28_Msk
 (0x1UL << 
CAN_F8R2_FB28_Pos
Ë

	)

8571 
	#CAN_F8R2_FB28
 
CAN_F8R2_FB28_Msk


	)

8572 
	#CAN_F8R2_FB29_Pos
 (29U)

	)

8573 
	#CAN_F8R2_FB29_Msk
 (0x1UL << 
CAN_F8R2_FB29_Pos
Ë

	)

8574 
	#CAN_F8R2_FB29
 
CAN_F8R2_FB29_Msk


	)

8575 
	#CAN_F8R2_FB30_Pos
 (30U)

	)

8576 
	#CAN_F8R2_FB30_Msk
 (0x1UL << 
CAN_F8R2_FB30_Pos
Ë

	)

8577 
	#CAN_F8R2_FB30
 
CAN_F8R2_FB30_Msk


	)

8578 
	#CAN_F8R2_FB31_Pos
 (31U)

	)

8579 
	#CAN_F8R2_FB31_Msk
 (0x1UL << 
CAN_F8R2_FB31_Pos
Ë

	)

8580 
	#CAN_F8R2_FB31
 
CAN_F8R2_FB31_Msk


	)

8583 
	#CAN_F9R2_FB0_Pos
 (0U)

	)

8584 
	#CAN_F9R2_FB0_Msk
 (0x1UL << 
CAN_F9R2_FB0_Pos
Ë

	)

8585 
	#CAN_F9R2_FB0
 
CAN_F9R2_FB0_Msk


	)

8586 
	#CAN_F9R2_FB1_Pos
 (1U)

	)

8587 
	#CAN_F9R2_FB1_Msk
 (0x1UL << 
CAN_F9R2_FB1_Pos
Ë

	)

8588 
	#CAN_F9R2_FB1
 
CAN_F9R2_FB1_Msk


	)

8589 
	#CAN_F9R2_FB2_Pos
 (2U)

	)

8590 
	#CAN_F9R2_FB2_Msk
 (0x1UL << 
CAN_F9R2_FB2_Pos
Ë

	)

8591 
	#CAN_F9R2_FB2
 
CAN_F9R2_FB2_Msk


	)

8592 
	#CAN_F9R2_FB3_Pos
 (3U)

	)

8593 
	#CAN_F9R2_FB3_Msk
 (0x1UL << 
CAN_F9R2_FB3_Pos
Ë

	)

8594 
	#CAN_F9R2_FB3
 
CAN_F9R2_FB3_Msk


	)

8595 
	#CAN_F9R2_FB4_Pos
 (4U)

	)

8596 
	#CAN_F9R2_FB4_Msk
 (0x1UL << 
CAN_F9R2_FB4_Pos
Ë

	)

8597 
	#CAN_F9R2_FB4
 
CAN_F9R2_FB4_Msk


	)

8598 
	#CAN_F9R2_FB5_Pos
 (5U)

	)

8599 
	#CAN_F9R2_FB5_Msk
 (0x1UL << 
CAN_F9R2_FB5_Pos
Ë

	)

8600 
	#CAN_F9R2_FB5
 
CAN_F9R2_FB5_Msk


	)

8601 
	#CAN_F9R2_FB6_Pos
 (6U)

	)

8602 
	#CAN_F9R2_FB6_Msk
 (0x1UL << 
CAN_F9R2_FB6_Pos
Ë

	)

8603 
	#CAN_F9R2_FB6
 
CAN_F9R2_FB6_Msk


	)

8604 
	#CAN_F9R2_FB7_Pos
 (7U)

	)

8605 
	#CAN_F9R2_FB7_Msk
 (0x1UL << 
CAN_F9R2_FB7_Pos
Ë

	)

8606 
	#CAN_F9R2_FB7
 
CAN_F9R2_FB7_Msk


	)

8607 
	#CAN_F9R2_FB8_Pos
 (8U)

	)

8608 
	#CAN_F9R2_FB8_Msk
 (0x1UL << 
CAN_F9R2_FB8_Pos
Ë

	)

8609 
	#CAN_F9R2_FB8
 
CAN_F9R2_FB8_Msk


	)

8610 
	#CAN_F9R2_FB9_Pos
 (9U)

	)

8611 
	#CAN_F9R2_FB9_Msk
 (0x1UL << 
CAN_F9R2_FB9_Pos
Ë

	)

8612 
	#CAN_F9R2_FB9
 
CAN_F9R2_FB9_Msk


	)

8613 
	#CAN_F9R2_FB10_Pos
 (10U)

	)

8614 
	#CAN_F9R2_FB10_Msk
 (0x1UL << 
CAN_F9R2_FB10_Pos
Ë

	)

8615 
	#CAN_F9R2_FB10
 
CAN_F9R2_FB10_Msk


	)

8616 
	#CAN_F9R2_FB11_Pos
 (11U)

	)

8617 
	#CAN_F9R2_FB11_Msk
 (0x1UL << 
CAN_F9R2_FB11_Pos
Ë

	)

8618 
	#CAN_F9R2_FB11
 
CAN_F9R2_FB11_Msk


	)

8619 
	#CAN_F9R2_FB12_Pos
 (12U)

	)

8620 
	#CAN_F9R2_FB12_Msk
 (0x1UL << 
CAN_F9R2_FB12_Pos
Ë

	)

8621 
	#CAN_F9R2_FB12
 
CAN_F9R2_FB12_Msk


	)

8622 
	#CAN_F9R2_FB13_Pos
 (13U)

	)

8623 
	#CAN_F9R2_FB13_Msk
 (0x1UL << 
CAN_F9R2_FB13_Pos
Ë

	)

8624 
	#CAN_F9R2_FB13
 
CAN_F9R2_FB13_Msk


	)

8625 
	#CAN_F9R2_FB14_Pos
 (14U)

	)

8626 
	#CAN_F9R2_FB14_Msk
 (0x1UL << 
CAN_F9R2_FB14_Pos
Ë

	)

8627 
	#CAN_F9R2_FB14
 
CAN_F9R2_FB14_Msk


	)

8628 
	#CAN_F9R2_FB15_Pos
 (15U)

	)

8629 
	#CAN_F9R2_FB15_Msk
 (0x1UL << 
CAN_F9R2_FB15_Pos
Ë

	)

8630 
	#CAN_F9R2_FB15
 
CAN_F9R2_FB15_Msk


	)

8631 
	#CAN_F9R2_FB16_Pos
 (16U)

	)

8632 
	#CAN_F9R2_FB16_Msk
 (0x1UL << 
CAN_F9R2_FB16_Pos
Ë

	)

8633 
	#CAN_F9R2_FB16
 
CAN_F9R2_FB16_Msk


	)

8634 
	#CAN_F9R2_FB17_Pos
 (17U)

	)

8635 
	#CAN_F9R2_FB17_Msk
 (0x1UL << 
CAN_F9R2_FB17_Pos
Ë

	)

8636 
	#CAN_F9R2_FB17
 
CAN_F9R2_FB17_Msk


	)

8637 
	#CAN_F9R2_FB18_Pos
 (18U)

	)

8638 
	#CAN_F9R2_FB18_Msk
 (0x1UL << 
CAN_F9R2_FB18_Pos
Ë

	)

8639 
	#CAN_F9R2_FB18
 
CAN_F9R2_FB18_Msk


	)

8640 
	#CAN_F9R2_FB19_Pos
 (19U)

	)

8641 
	#CAN_F9R2_FB19_Msk
 (0x1UL << 
CAN_F9R2_FB19_Pos
Ë

	)

8642 
	#CAN_F9R2_FB19
 
CAN_F9R2_FB19_Msk


	)

8643 
	#CAN_F9R2_FB20_Pos
 (20U)

	)

8644 
	#CAN_F9R2_FB20_Msk
 (0x1UL << 
CAN_F9R2_FB20_Pos
Ë

	)

8645 
	#CAN_F9R2_FB20
 
CAN_F9R2_FB20_Msk


	)

8646 
	#CAN_F9R2_FB21_Pos
 (21U)

	)

8647 
	#CAN_F9R2_FB21_Msk
 (0x1UL << 
CAN_F9R2_FB21_Pos
Ë

	)

8648 
	#CAN_F9R2_FB21
 
CAN_F9R2_FB21_Msk


	)

8649 
	#CAN_F9R2_FB22_Pos
 (22U)

	)

8650 
	#CAN_F9R2_FB22_Msk
 (0x1UL << 
CAN_F9R2_FB22_Pos
Ë

	)

8651 
	#CAN_F9R2_FB22
 
CAN_F9R2_FB22_Msk


	)

8652 
	#CAN_F9R2_FB23_Pos
 (23U)

	)

8653 
	#CAN_F9R2_FB23_Msk
 (0x1UL << 
CAN_F9R2_FB23_Pos
Ë

	)

8654 
	#CAN_F9R2_FB23
 
CAN_F9R2_FB23_Msk


	)

8655 
	#CAN_F9R2_FB24_Pos
 (24U)

	)

8656 
	#CAN_F9R2_FB24_Msk
 (0x1UL << 
CAN_F9R2_FB24_Pos
Ë

	)

8657 
	#CAN_F9R2_FB24
 
CAN_F9R2_FB24_Msk


	)

8658 
	#CAN_F9R2_FB25_Pos
 (25U)

	)

8659 
	#CAN_F9R2_FB25_Msk
 (0x1UL << 
CAN_F9R2_FB25_Pos
Ë

	)

8660 
	#CAN_F9R2_FB25
 
CAN_F9R2_FB25_Msk


	)

8661 
	#CAN_F9R2_FB26_Pos
 (26U)

	)

8662 
	#CAN_F9R2_FB26_Msk
 (0x1UL << 
CAN_F9R2_FB26_Pos
Ë

	)

8663 
	#CAN_F9R2_FB26
 
CAN_F9R2_FB26_Msk


	)

8664 
	#CAN_F9R2_FB27_Pos
 (27U)

	)

8665 
	#CAN_F9R2_FB27_Msk
 (0x1UL << 
CAN_F9R2_FB27_Pos
Ë

	)

8666 
	#CAN_F9R2_FB27
 
CAN_F9R2_FB27_Msk


	)

8667 
	#CAN_F9R2_FB28_Pos
 (28U)

	)

8668 
	#CAN_F9R2_FB28_Msk
 (0x1UL << 
CAN_F9R2_FB28_Pos
Ë

	)

8669 
	#CAN_F9R2_FB28
 
CAN_F9R2_FB28_Msk


	)

8670 
	#CAN_F9R2_FB29_Pos
 (29U)

	)

8671 
	#CAN_F9R2_FB29_Msk
 (0x1UL << 
CAN_F9R2_FB29_Pos
Ë

	)

8672 
	#CAN_F9R2_FB29
 
CAN_F9R2_FB29_Msk


	)

8673 
	#CAN_F9R2_FB30_Pos
 (30U)

	)

8674 
	#CAN_F9R2_FB30_Msk
 (0x1UL << 
CAN_F9R2_FB30_Pos
Ë

	)

8675 
	#CAN_F9R2_FB30
 
CAN_F9R2_FB30_Msk


	)

8676 
	#CAN_F9R2_FB31_Pos
 (31U)

	)

8677 
	#CAN_F9R2_FB31_Msk
 (0x1UL << 
CAN_F9R2_FB31_Pos
Ë

	)

8678 
	#CAN_F9R2_FB31
 
CAN_F9R2_FB31_Msk


	)

8681 
	#CAN_F10R2_FB0_Pos
 (0U)

	)

8682 
	#CAN_F10R2_FB0_Msk
 (0x1UL << 
CAN_F10R2_FB0_Pos
Ë

	)

8683 
	#CAN_F10R2_FB0
 
CAN_F10R2_FB0_Msk


	)

8684 
	#CAN_F10R2_FB1_Pos
 (1U)

	)

8685 
	#CAN_F10R2_FB1_Msk
 (0x1UL << 
CAN_F10R2_FB1_Pos
Ë

	)

8686 
	#CAN_F10R2_FB1
 
CAN_F10R2_FB1_Msk


	)

8687 
	#CAN_F10R2_FB2_Pos
 (2U)

	)

8688 
	#CAN_F10R2_FB2_Msk
 (0x1UL << 
CAN_F10R2_FB2_Pos
Ë

	)

8689 
	#CAN_F10R2_FB2
 
CAN_F10R2_FB2_Msk


	)

8690 
	#CAN_F10R2_FB3_Pos
 (3U)

	)

8691 
	#CAN_F10R2_FB3_Msk
 (0x1UL << 
CAN_F10R2_FB3_Pos
Ë

	)

8692 
	#CAN_F10R2_FB3
 
CAN_F10R2_FB3_Msk


	)

8693 
	#CAN_F10R2_FB4_Pos
 (4U)

	)

8694 
	#CAN_F10R2_FB4_Msk
 (0x1UL << 
CAN_F10R2_FB4_Pos
Ë

	)

8695 
	#CAN_F10R2_FB4
 
CAN_F10R2_FB4_Msk


	)

8696 
	#CAN_F10R2_FB5_Pos
 (5U)

	)

8697 
	#CAN_F10R2_FB5_Msk
 (0x1UL << 
CAN_F10R2_FB5_Pos
Ë

	)

8698 
	#CAN_F10R2_FB5
 
CAN_F10R2_FB5_Msk


	)

8699 
	#CAN_F10R2_FB6_Pos
 (6U)

	)

8700 
	#CAN_F10R2_FB6_Msk
 (0x1UL << 
CAN_F10R2_FB6_Pos
Ë

	)

8701 
	#CAN_F10R2_FB6
 
CAN_F10R2_FB6_Msk


	)

8702 
	#CAN_F10R2_FB7_Pos
 (7U)

	)

8703 
	#CAN_F10R2_FB7_Msk
 (0x1UL << 
CAN_F10R2_FB7_Pos
Ë

	)

8704 
	#CAN_F10R2_FB7
 
CAN_F10R2_FB7_Msk


	)

8705 
	#CAN_F10R2_FB8_Pos
 (8U)

	)

8706 
	#CAN_F10R2_FB8_Msk
 (0x1UL << 
CAN_F10R2_FB8_Pos
Ë

	)

8707 
	#CAN_F10R2_FB8
 
CAN_F10R2_FB8_Msk


	)

8708 
	#CAN_F10R2_FB9_Pos
 (9U)

	)

8709 
	#CAN_F10R2_FB9_Msk
 (0x1UL << 
CAN_F10R2_FB9_Pos
Ë

	)

8710 
	#CAN_F10R2_FB9
 
CAN_F10R2_FB9_Msk


	)

8711 
	#CAN_F10R2_FB10_Pos
 (10U)

	)

8712 
	#CAN_F10R2_FB10_Msk
 (0x1UL << 
CAN_F10R2_FB10_Pos
Ë

	)

8713 
	#CAN_F10R2_FB10
 
CAN_F10R2_FB10_Msk


	)

8714 
	#CAN_F10R2_FB11_Pos
 (11U)

	)

8715 
	#CAN_F10R2_FB11_Msk
 (0x1UL << 
CAN_F10R2_FB11_Pos
Ë

	)

8716 
	#CAN_F10R2_FB11
 
CAN_F10R2_FB11_Msk


	)

8717 
	#CAN_F10R2_FB12_Pos
 (12U)

	)

8718 
	#CAN_F10R2_FB12_Msk
 (0x1UL << 
CAN_F10R2_FB12_Pos
Ë

	)

8719 
	#CAN_F10R2_FB12
 
CAN_F10R2_FB12_Msk


	)

8720 
	#CAN_F10R2_FB13_Pos
 (13U)

	)

8721 
	#CAN_F10R2_FB13_Msk
 (0x1UL << 
CAN_F10R2_FB13_Pos
Ë

	)

8722 
	#CAN_F10R2_FB13
 
CAN_F10R2_FB13_Msk


	)

8723 
	#CAN_F10R2_FB14_Pos
 (14U)

	)

8724 
	#CAN_F10R2_FB14_Msk
 (0x1UL << 
CAN_F10R2_FB14_Pos
Ë

	)

8725 
	#CAN_F10R2_FB14
 
CAN_F10R2_FB14_Msk


	)

8726 
	#CAN_F10R2_FB15_Pos
 (15U)

	)

8727 
	#CAN_F10R2_FB15_Msk
 (0x1UL << 
CAN_F10R2_FB15_Pos
Ë

	)

8728 
	#CAN_F10R2_FB15
 
CAN_F10R2_FB15_Msk


	)

8729 
	#CAN_F10R2_FB16_Pos
 (16U)

	)

8730 
	#CAN_F10R2_FB16_Msk
 (0x1UL << 
CAN_F10R2_FB16_Pos
Ë

	)

8731 
	#CAN_F10R2_FB16
 
CAN_F10R2_FB16_Msk


	)

8732 
	#CAN_F10R2_FB17_Pos
 (17U)

	)

8733 
	#CAN_F10R2_FB17_Msk
 (0x1UL << 
CAN_F10R2_FB17_Pos
Ë

	)

8734 
	#CAN_F10R2_FB17
 
CAN_F10R2_FB17_Msk


	)

8735 
	#CAN_F10R2_FB18_Pos
 (18U)

	)

8736 
	#CAN_F10R2_FB18_Msk
 (0x1UL << 
CAN_F10R2_FB18_Pos
Ë

	)

8737 
	#CAN_F10R2_FB18
 
CAN_F10R2_FB18_Msk


	)

8738 
	#CAN_F10R2_FB19_Pos
 (19U)

	)

8739 
	#CAN_F10R2_FB19_Msk
 (0x1UL << 
CAN_F10R2_FB19_Pos
Ë

	)

8740 
	#CAN_F10R2_FB19
 
CAN_F10R2_FB19_Msk


	)

8741 
	#CAN_F10R2_FB20_Pos
 (20U)

	)

8742 
	#CAN_F10R2_FB20_Msk
 (0x1UL << 
CAN_F10R2_FB20_Pos
Ë

	)

8743 
	#CAN_F10R2_FB20
 
CAN_F10R2_FB20_Msk


	)

8744 
	#CAN_F10R2_FB21_Pos
 (21U)

	)

8745 
	#CAN_F10R2_FB21_Msk
 (0x1UL << 
CAN_F10R2_FB21_Pos
Ë

	)

8746 
	#CAN_F10R2_FB21
 
CAN_F10R2_FB21_Msk


	)

8747 
	#CAN_F10R2_FB22_Pos
 (22U)

	)

8748 
	#CAN_F10R2_FB22_Msk
 (0x1UL << 
CAN_F10R2_FB22_Pos
Ë

	)

8749 
	#CAN_F10R2_FB22
 
CAN_F10R2_FB22_Msk


	)

8750 
	#CAN_F10R2_FB23_Pos
 (23U)

	)

8751 
	#CAN_F10R2_FB23_Msk
 (0x1UL << 
CAN_F10R2_FB23_Pos
Ë

	)

8752 
	#CAN_F10R2_FB23
 
CAN_F10R2_FB23_Msk


	)

8753 
	#CAN_F10R2_FB24_Pos
 (24U)

	)

8754 
	#CAN_F10R2_FB24_Msk
 (0x1UL << 
CAN_F10R2_FB24_Pos
Ë

	)

8755 
	#CAN_F10R2_FB24
 
CAN_F10R2_FB24_Msk


	)

8756 
	#CAN_F10R2_FB25_Pos
 (25U)

	)

8757 
	#CAN_F10R2_FB25_Msk
 (0x1UL << 
CAN_F10R2_FB25_Pos
Ë

	)

8758 
	#CAN_F10R2_FB25
 
CAN_F10R2_FB25_Msk


	)

8759 
	#CAN_F10R2_FB26_Pos
 (26U)

	)

8760 
	#CAN_F10R2_FB26_Msk
 (0x1UL << 
CAN_F10R2_FB26_Pos
Ë

	)

8761 
	#CAN_F10R2_FB26
 
CAN_F10R2_FB26_Msk


	)

8762 
	#CAN_F10R2_FB27_Pos
 (27U)

	)

8763 
	#CAN_F10R2_FB27_Msk
 (0x1UL << 
CAN_F10R2_FB27_Pos
Ë

	)

8764 
	#CAN_F10R2_FB27
 
CAN_F10R2_FB27_Msk


	)

8765 
	#CAN_F10R2_FB28_Pos
 (28U)

	)

8766 
	#CAN_F10R2_FB28_Msk
 (0x1UL << 
CAN_F10R2_FB28_Pos
Ë

	)

8767 
	#CAN_F10R2_FB28
 
CAN_F10R2_FB28_Msk


	)

8768 
	#CAN_F10R2_FB29_Pos
 (29U)

	)

8769 
	#CAN_F10R2_FB29_Msk
 (0x1UL << 
CAN_F10R2_FB29_Pos
Ë

	)

8770 
	#CAN_F10R2_FB29
 
CAN_F10R2_FB29_Msk


	)

8771 
	#CAN_F10R2_FB30_Pos
 (30U)

	)

8772 
	#CAN_F10R2_FB30_Msk
 (0x1UL << 
CAN_F10R2_FB30_Pos
Ë

	)

8773 
	#CAN_F10R2_FB30
 
CAN_F10R2_FB30_Msk


	)

8774 
	#CAN_F10R2_FB31_Pos
 (31U)

	)

8775 
	#CAN_F10R2_FB31_Msk
 (0x1UL << 
CAN_F10R2_FB31_Pos
Ë

	)

8776 
	#CAN_F10R2_FB31
 
CAN_F10R2_FB31_Msk


	)

8779 
	#CAN_F11R2_FB0_Pos
 (0U)

	)

8780 
	#CAN_F11R2_FB0_Msk
 (0x1UL << 
CAN_F11R2_FB0_Pos
Ë

	)

8781 
	#CAN_F11R2_FB0
 
CAN_F11R2_FB0_Msk


	)

8782 
	#CAN_F11R2_FB1_Pos
 (1U)

	)

8783 
	#CAN_F11R2_FB1_Msk
 (0x1UL << 
CAN_F11R2_FB1_Pos
Ë

	)

8784 
	#CAN_F11R2_FB1
 
CAN_F11R2_FB1_Msk


	)

8785 
	#CAN_F11R2_FB2_Pos
 (2U)

	)

8786 
	#CAN_F11R2_FB2_Msk
 (0x1UL << 
CAN_F11R2_FB2_Pos
Ë

	)

8787 
	#CAN_F11R2_FB2
 
CAN_F11R2_FB2_Msk


	)

8788 
	#CAN_F11R2_FB3_Pos
 (3U)

	)

8789 
	#CAN_F11R2_FB3_Msk
 (0x1UL << 
CAN_F11R2_FB3_Pos
Ë

	)

8790 
	#CAN_F11R2_FB3
 
CAN_F11R2_FB3_Msk


	)

8791 
	#CAN_F11R2_FB4_Pos
 (4U)

	)

8792 
	#CAN_F11R2_FB4_Msk
 (0x1UL << 
CAN_F11R2_FB4_Pos
Ë

	)

8793 
	#CAN_F11R2_FB4
 
CAN_F11R2_FB4_Msk


	)

8794 
	#CAN_F11R2_FB5_Pos
 (5U)

	)

8795 
	#CAN_F11R2_FB5_Msk
 (0x1UL << 
CAN_F11R2_FB5_Pos
Ë

	)

8796 
	#CAN_F11R2_FB5
 
CAN_F11R2_FB5_Msk


	)

8797 
	#CAN_F11R2_FB6_Pos
 (6U)

	)

8798 
	#CAN_F11R2_FB6_Msk
 (0x1UL << 
CAN_F11R2_FB6_Pos
Ë

	)

8799 
	#CAN_F11R2_FB6
 
CAN_F11R2_FB6_Msk


	)

8800 
	#CAN_F11R2_FB7_Pos
 (7U)

	)

8801 
	#CAN_F11R2_FB7_Msk
 (0x1UL << 
CAN_F11R2_FB7_Pos
Ë

	)

8802 
	#CAN_F11R2_FB7
 
CAN_F11R2_FB7_Msk


	)

8803 
	#CAN_F11R2_FB8_Pos
 (8U)

	)

8804 
	#CAN_F11R2_FB8_Msk
 (0x1UL << 
CAN_F11R2_FB8_Pos
Ë

	)

8805 
	#CAN_F11R2_FB8
 
CAN_F11R2_FB8_Msk


	)

8806 
	#CAN_F11R2_FB9_Pos
 (9U)

	)

8807 
	#CAN_F11R2_FB9_Msk
 (0x1UL << 
CAN_F11R2_FB9_Pos
Ë

	)

8808 
	#CAN_F11R2_FB9
 
CAN_F11R2_FB9_Msk


	)

8809 
	#CAN_F11R2_FB10_Pos
 (10U)

	)

8810 
	#CAN_F11R2_FB10_Msk
 (0x1UL << 
CAN_F11R2_FB10_Pos
Ë

	)

8811 
	#CAN_F11R2_FB10
 
CAN_F11R2_FB10_Msk


	)

8812 
	#CAN_F11R2_FB11_Pos
 (11U)

	)

8813 
	#CAN_F11R2_FB11_Msk
 (0x1UL << 
CAN_F11R2_FB11_Pos
Ë

	)

8814 
	#CAN_F11R2_FB11
 
CAN_F11R2_FB11_Msk


	)

8815 
	#CAN_F11R2_FB12_Pos
 (12U)

	)

8816 
	#CAN_F11R2_FB12_Msk
 (0x1UL << 
CAN_F11R2_FB12_Pos
Ë

	)

8817 
	#CAN_F11R2_FB12
 
CAN_F11R2_FB12_Msk


	)

8818 
	#CAN_F11R2_FB13_Pos
 (13U)

	)

8819 
	#CAN_F11R2_FB13_Msk
 (0x1UL << 
CAN_F11R2_FB13_Pos
Ë

	)

8820 
	#CAN_F11R2_FB13
 
CAN_F11R2_FB13_Msk


	)

8821 
	#CAN_F11R2_FB14_Pos
 (14U)

	)

8822 
	#CAN_F11R2_FB14_Msk
 (0x1UL << 
CAN_F11R2_FB14_Pos
Ë

	)

8823 
	#CAN_F11R2_FB14
 
CAN_F11R2_FB14_Msk


	)

8824 
	#CAN_F11R2_FB15_Pos
 (15U)

	)

8825 
	#CAN_F11R2_FB15_Msk
 (0x1UL << 
CAN_F11R2_FB15_Pos
Ë

	)

8826 
	#CAN_F11R2_FB15
 
CAN_F11R2_FB15_Msk


	)

8827 
	#CAN_F11R2_FB16_Pos
 (16U)

	)

8828 
	#CAN_F11R2_FB16_Msk
 (0x1UL << 
CAN_F11R2_FB16_Pos
Ë

	)

8829 
	#CAN_F11R2_FB16
 
CAN_F11R2_FB16_Msk


	)

8830 
	#CAN_F11R2_FB17_Pos
 (17U)

	)

8831 
	#CAN_F11R2_FB17_Msk
 (0x1UL << 
CAN_F11R2_FB17_Pos
Ë

	)

8832 
	#CAN_F11R2_FB17
 
CAN_F11R2_FB17_Msk


	)

8833 
	#CAN_F11R2_FB18_Pos
 (18U)

	)

8834 
	#CAN_F11R2_FB18_Msk
 (0x1UL << 
CAN_F11R2_FB18_Pos
Ë

	)

8835 
	#CAN_F11R2_FB18
 
CAN_F11R2_FB18_Msk


	)

8836 
	#CAN_F11R2_FB19_Pos
 (19U)

	)

8837 
	#CAN_F11R2_FB19_Msk
 (0x1UL << 
CAN_F11R2_FB19_Pos
Ë

	)

8838 
	#CAN_F11R2_FB19
 
CAN_F11R2_FB19_Msk


	)

8839 
	#CAN_F11R2_FB20_Pos
 (20U)

	)

8840 
	#CAN_F11R2_FB20_Msk
 (0x1UL << 
CAN_F11R2_FB20_Pos
Ë

	)

8841 
	#CAN_F11R2_FB20
 
CAN_F11R2_FB20_Msk


	)

8842 
	#CAN_F11R2_FB21_Pos
 (21U)

	)

8843 
	#CAN_F11R2_FB21_Msk
 (0x1UL << 
CAN_F11R2_FB21_Pos
Ë

	)

8844 
	#CAN_F11R2_FB21
 
CAN_F11R2_FB21_Msk


	)

8845 
	#CAN_F11R2_FB22_Pos
 (22U)

	)

8846 
	#CAN_F11R2_FB22_Msk
 (0x1UL << 
CAN_F11R2_FB22_Pos
Ë

	)

8847 
	#CAN_F11R2_FB22
 
CAN_F11R2_FB22_Msk


	)

8848 
	#CAN_F11R2_FB23_Pos
 (23U)

	)

8849 
	#CAN_F11R2_FB23_Msk
 (0x1UL << 
CAN_F11R2_FB23_Pos
Ë

	)

8850 
	#CAN_F11R2_FB23
 
CAN_F11R2_FB23_Msk


	)

8851 
	#CAN_F11R2_FB24_Pos
 (24U)

	)

8852 
	#CAN_F11R2_FB24_Msk
 (0x1UL << 
CAN_F11R2_FB24_Pos
Ë

	)

8853 
	#CAN_F11R2_FB24
 
CAN_F11R2_FB24_Msk


	)

8854 
	#CAN_F11R2_FB25_Pos
 (25U)

	)

8855 
	#CAN_F11R2_FB25_Msk
 (0x1UL << 
CAN_F11R2_FB25_Pos
Ë

	)

8856 
	#CAN_F11R2_FB25
 
CAN_F11R2_FB25_Msk


	)

8857 
	#CAN_F11R2_FB26_Pos
 (26U)

	)

8858 
	#CAN_F11R2_FB26_Msk
 (0x1UL << 
CAN_F11R2_FB26_Pos
Ë

	)

8859 
	#CAN_F11R2_FB26
 
CAN_F11R2_FB26_Msk


	)

8860 
	#CAN_F11R2_FB27_Pos
 (27U)

	)

8861 
	#CAN_F11R2_FB27_Msk
 (0x1UL << 
CAN_F11R2_FB27_Pos
Ë

	)

8862 
	#CAN_F11R2_FB27
 
CAN_F11R2_FB27_Msk


	)

8863 
	#CAN_F11R2_FB28_Pos
 (28U)

	)

8864 
	#CAN_F11R2_FB28_Msk
 (0x1UL << 
CAN_F11R2_FB28_Pos
Ë

	)

8865 
	#CAN_F11R2_FB28
 
CAN_F11R2_FB28_Msk


	)

8866 
	#CAN_F11R2_FB29_Pos
 (29U)

	)

8867 
	#CAN_F11R2_FB29_Msk
 (0x1UL << 
CAN_F11R2_FB29_Pos
Ë

	)

8868 
	#CAN_F11R2_FB29
 
CAN_F11R2_FB29_Msk


	)

8869 
	#CAN_F11R2_FB30_Pos
 (30U)

	)

8870 
	#CAN_F11R2_FB30_Msk
 (0x1UL << 
CAN_F11R2_FB30_Pos
Ë

	)

8871 
	#CAN_F11R2_FB30
 
CAN_F11R2_FB30_Msk


	)

8872 
	#CAN_F11R2_FB31_Pos
 (31U)

	)

8873 
	#CAN_F11R2_FB31_Msk
 (0x1UL << 
CAN_F11R2_FB31_Pos
Ë

	)

8874 
	#CAN_F11R2_FB31
 
CAN_F11R2_FB31_Msk


	)

8877 
	#CAN_F12R2_FB0_Pos
 (0U)

	)

8878 
	#CAN_F12R2_FB0_Msk
 (0x1UL << 
CAN_F12R2_FB0_Pos
Ë

	)

8879 
	#CAN_F12R2_FB0
 
CAN_F12R2_FB0_Msk


	)

8880 
	#CAN_F12R2_FB1_Pos
 (1U)

	)

8881 
	#CAN_F12R2_FB1_Msk
 (0x1UL << 
CAN_F12R2_FB1_Pos
Ë

	)

8882 
	#CAN_F12R2_FB1
 
CAN_F12R2_FB1_Msk


	)

8883 
	#CAN_F12R2_FB2_Pos
 (2U)

	)

8884 
	#CAN_F12R2_FB2_Msk
 (0x1UL << 
CAN_F12R2_FB2_Pos
Ë

	)

8885 
	#CAN_F12R2_FB2
 
CAN_F12R2_FB2_Msk


	)

8886 
	#CAN_F12R2_FB3_Pos
 (3U)

	)

8887 
	#CAN_F12R2_FB3_Msk
 (0x1UL << 
CAN_F12R2_FB3_Pos
Ë

	)

8888 
	#CAN_F12R2_FB3
 
CAN_F12R2_FB3_Msk


	)

8889 
	#CAN_F12R2_FB4_Pos
 (4U)

	)

8890 
	#CAN_F12R2_FB4_Msk
 (0x1UL << 
CAN_F12R2_FB4_Pos
Ë

	)

8891 
	#CAN_F12R2_FB4
 
CAN_F12R2_FB4_Msk


	)

8892 
	#CAN_F12R2_FB5_Pos
 (5U)

	)

8893 
	#CAN_F12R2_FB5_Msk
 (0x1UL << 
CAN_F12R2_FB5_Pos
Ë

	)

8894 
	#CAN_F12R2_FB5
 
CAN_F12R2_FB5_Msk


	)

8895 
	#CAN_F12R2_FB6_Pos
 (6U)

	)

8896 
	#CAN_F12R2_FB6_Msk
 (0x1UL << 
CAN_F12R2_FB6_Pos
Ë

	)

8897 
	#CAN_F12R2_FB6
 
CAN_F12R2_FB6_Msk


	)

8898 
	#CAN_F12R2_FB7_Pos
 (7U)

	)

8899 
	#CAN_F12R2_FB7_Msk
 (0x1UL << 
CAN_F12R2_FB7_Pos
Ë

	)

8900 
	#CAN_F12R2_FB7
 
CAN_F12R2_FB7_Msk


	)

8901 
	#CAN_F12R2_FB8_Pos
 (8U)

	)

8902 
	#CAN_F12R2_FB8_Msk
 (0x1UL << 
CAN_F12R2_FB8_Pos
Ë

	)

8903 
	#CAN_F12R2_FB8
 
CAN_F12R2_FB8_Msk


	)

8904 
	#CAN_F12R2_FB9_Pos
 (9U)

	)

8905 
	#CAN_F12R2_FB9_Msk
 (0x1UL << 
CAN_F12R2_FB9_Pos
Ë

	)

8906 
	#CAN_F12R2_FB9
 
CAN_F12R2_FB9_Msk


	)

8907 
	#CAN_F12R2_FB10_Pos
 (10U)

	)

8908 
	#CAN_F12R2_FB10_Msk
 (0x1UL << 
CAN_F12R2_FB10_Pos
Ë

	)

8909 
	#CAN_F12R2_FB10
 
CAN_F12R2_FB10_Msk


	)

8910 
	#CAN_F12R2_FB11_Pos
 (11U)

	)

8911 
	#CAN_F12R2_FB11_Msk
 (0x1UL << 
CAN_F12R2_FB11_Pos
Ë

	)

8912 
	#CAN_F12R2_FB11
 
CAN_F12R2_FB11_Msk


	)

8913 
	#CAN_F12R2_FB12_Pos
 (12U)

	)

8914 
	#CAN_F12R2_FB12_Msk
 (0x1UL << 
CAN_F12R2_FB12_Pos
Ë

	)

8915 
	#CAN_F12R2_FB12
 
CAN_F12R2_FB12_Msk


	)

8916 
	#CAN_F12R2_FB13_Pos
 (13U)

	)

8917 
	#CAN_F12R2_FB13_Msk
 (0x1UL << 
CAN_F12R2_FB13_Pos
Ë

	)

8918 
	#CAN_F12R2_FB13
 
CAN_F12R2_FB13_Msk


	)

8919 
	#CAN_F12R2_FB14_Pos
 (14U)

	)

8920 
	#CAN_F12R2_FB14_Msk
 (0x1UL << 
CAN_F12R2_FB14_Pos
Ë

	)

8921 
	#CAN_F12R2_FB14
 
CAN_F12R2_FB14_Msk


	)

8922 
	#CAN_F12R2_FB15_Pos
 (15U)

	)

8923 
	#CAN_F12R2_FB15_Msk
 (0x1UL << 
CAN_F12R2_FB15_Pos
Ë

	)

8924 
	#CAN_F12R2_FB15
 
CAN_F12R2_FB15_Msk


	)

8925 
	#CAN_F12R2_FB16_Pos
 (16U)

	)

8926 
	#CAN_F12R2_FB16_Msk
 (0x1UL << 
CAN_F12R2_FB16_Pos
Ë

	)

8927 
	#CAN_F12R2_FB16
 
CAN_F12R2_FB16_Msk


	)

8928 
	#CAN_F12R2_FB17_Pos
 (17U)

	)

8929 
	#CAN_F12R2_FB17_Msk
 (0x1UL << 
CAN_F12R2_FB17_Pos
Ë

	)

8930 
	#CAN_F12R2_FB17
 
CAN_F12R2_FB17_Msk


	)

8931 
	#CAN_F12R2_FB18_Pos
 (18U)

	)

8932 
	#CAN_F12R2_FB18_Msk
 (0x1UL << 
CAN_F12R2_FB18_Pos
Ë

	)

8933 
	#CAN_F12R2_FB18
 
CAN_F12R2_FB18_Msk


	)

8934 
	#CAN_F12R2_FB19_Pos
 (19U)

	)

8935 
	#CAN_F12R2_FB19_Msk
 (0x1UL << 
CAN_F12R2_FB19_Pos
Ë

	)

8936 
	#CAN_F12R2_FB19
 
CAN_F12R2_FB19_Msk


	)

8937 
	#CAN_F12R2_FB20_Pos
 (20U)

	)

8938 
	#CAN_F12R2_FB20_Msk
 (0x1UL << 
CAN_F12R2_FB20_Pos
Ë

	)

8939 
	#CAN_F12R2_FB20
 
CAN_F12R2_FB20_Msk


	)

8940 
	#CAN_F12R2_FB21_Pos
 (21U)

	)

8941 
	#CAN_F12R2_FB21_Msk
 (0x1UL << 
CAN_F12R2_FB21_Pos
Ë

	)

8942 
	#CAN_F12R2_FB21
 
CAN_F12R2_FB21_Msk


	)

8943 
	#CAN_F12R2_FB22_Pos
 (22U)

	)

8944 
	#CAN_F12R2_FB22_Msk
 (0x1UL << 
CAN_F12R2_FB22_Pos
Ë

	)

8945 
	#CAN_F12R2_FB22
 
CAN_F12R2_FB22_Msk


	)

8946 
	#CAN_F12R2_FB23_Pos
 (23U)

	)

8947 
	#CAN_F12R2_FB23_Msk
 (0x1UL << 
CAN_F12R2_FB23_Pos
Ë

	)

8948 
	#CAN_F12R2_FB23
 
CAN_F12R2_FB23_Msk


	)

8949 
	#CAN_F12R2_FB24_Pos
 (24U)

	)

8950 
	#CAN_F12R2_FB24_Msk
 (0x1UL << 
CAN_F12R2_FB24_Pos
Ë

	)

8951 
	#CAN_F12R2_FB24
 
CAN_F12R2_FB24_Msk


	)

8952 
	#CAN_F12R2_FB25_Pos
 (25U)

	)

8953 
	#CAN_F12R2_FB25_Msk
 (0x1UL << 
CAN_F12R2_FB25_Pos
Ë

	)

8954 
	#CAN_F12R2_FB25
 
CAN_F12R2_FB25_Msk


	)

8955 
	#CAN_F12R2_FB26_Pos
 (26U)

	)

8956 
	#CAN_F12R2_FB26_Msk
 (0x1UL << 
CAN_F12R2_FB26_Pos
Ë

	)

8957 
	#CAN_F12R2_FB26
 
CAN_F12R2_FB26_Msk


	)

8958 
	#CAN_F12R2_FB27_Pos
 (27U)

	)

8959 
	#CAN_F12R2_FB27_Msk
 (0x1UL << 
CAN_F12R2_FB27_Pos
Ë

	)

8960 
	#CAN_F12R2_FB27
 
CAN_F12R2_FB27_Msk


	)

8961 
	#CAN_F12R2_FB28_Pos
 (28U)

	)

8962 
	#CAN_F12R2_FB28_Msk
 (0x1UL << 
CAN_F12R2_FB28_Pos
Ë

	)

8963 
	#CAN_F12R2_FB28
 
CAN_F12R2_FB28_Msk


	)

8964 
	#CAN_F12R2_FB29_Pos
 (29U)

	)

8965 
	#CAN_F12R2_FB29_Msk
 (0x1UL << 
CAN_F12R2_FB29_Pos
Ë

	)

8966 
	#CAN_F12R2_FB29
 
CAN_F12R2_FB29_Msk


	)

8967 
	#CAN_F12R2_FB30_Pos
 (30U)

	)

8968 
	#CAN_F12R2_FB30_Msk
 (0x1UL << 
CAN_F12R2_FB30_Pos
Ë

	)

8969 
	#CAN_F12R2_FB30
 
CAN_F12R2_FB30_Msk


	)

8970 
	#CAN_F12R2_FB31_Pos
 (31U)

	)

8971 
	#CAN_F12R2_FB31_Msk
 (0x1UL << 
CAN_F12R2_FB31_Pos
Ë

	)

8972 
	#CAN_F12R2_FB31
 
CAN_F12R2_FB31_Msk


	)

8975 
	#CAN_F13R2_FB0_Pos
 (0U)

	)

8976 
	#CAN_F13R2_FB0_Msk
 (0x1UL << 
CAN_F13R2_FB0_Pos
Ë

	)

8977 
	#CAN_F13R2_FB0
 
CAN_F13R2_FB0_Msk


	)

8978 
	#CAN_F13R2_FB1_Pos
 (1U)

	)

8979 
	#CAN_F13R2_FB1_Msk
 (0x1UL << 
CAN_F13R2_FB1_Pos
Ë

	)

8980 
	#CAN_F13R2_FB1
 
CAN_F13R2_FB1_Msk


	)

8981 
	#CAN_F13R2_FB2_Pos
 (2U)

	)

8982 
	#CAN_F13R2_FB2_Msk
 (0x1UL << 
CAN_F13R2_FB2_Pos
Ë

	)

8983 
	#CAN_F13R2_FB2
 
CAN_F13R2_FB2_Msk


	)

8984 
	#CAN_F13R2_FB3_Pos
 (3U)

	)

8985 
	#CAN_F13R2_FB3_Msk
 (0x1UL << 
CAN_F13R2_FB3_Pos
Ë

	)

8986 
	#CAN_F13R2_FB3
 
CAN_F13R2_FB3_Msk


	)

8987 
	#CAN_F13R2_FB4_Pos
 (4U)

	)

8988 
	#CAN_F13R2_FB4_Msk
 (0x1UL << 
CAN_F13R2_FB4_Pos
Ë

	)

8989 
	#CAN_F13R2_FB4
 
CAN_F13R2_FB4_Msk


	)

8990 
	#CAN_F13R2_FB5_Pos
 (5U)

	)

8991 
	#CAN_F13R2_FB5_Msk
 (0x1UL << 
CAN_F13R2_FB5_Pos
Ë

	)

8992 
	#CAN_F13R2_FB5
 
CAN_F13R2_FB5_Msk


	)

8993 
	#CAN_F13R2_FB6_Pos
 (6U)

	)

8994 
	#CAN_F13R2_FB6_Msk
 (0x1UL << 
CAN_F13R2_FB6_Pos
Ë

	)

8995 
	#CAN_F13R2_FB6
 
CAN_F13R2_FB6_Msk


	)

8996 
	#CAN_F13R2_FB7_Pos
 (7U)

	)

8997 
	#CAN_F13R2_FB7_Msk
 (0x1UL << 
CAN_F13R2_FB7_Pos
Ë

	)

8998 
	#CAN_F13R2_FB7
 
CAN_F13R2_FB7_Msk


	)

8999 
	#CAN_F13R2_FB8_Pos
 (8U)

	)

9000 
	#CAN_F13R2_FB8_Msk
 (0x1UL << 
CAN_F13R2_FB8_Pos
Ë

	)

9001 
	#CAN_F13R2_FB8
 
CAN_F13R2_FB8_Msk


	)

9002 
	#CAN_F13R2_FB9_Pos
 (9U)

	)

9003 
	#CAN_F13R2_FB9_Msk
 (0x1UL << 
CAN_F13R2_FB9_Pos
Ë

	)

9004 
	#CAN_F13R2_FB9
 
CAN_F13R2_FB9_Msk


	)

9005 
	#CAN_F13R2_FB10_Pos
 (10U)

	)

9006 
	#CAN_F13R2_FB10_Msk
 (0x1UL << 
CAN_F13R2_FB10_Pos
Ë

	)

9007 
	#CAN_F13R2_FB10
 
CAN_F13R2_FB10_Msk


	)

9008 
	#CAN_F13R2_FB11_Pos
 (11U)

	)

9009 
	#CAN_F13R2_FB11_Msk
 (0x1UL << 
CAN_F13R2_FB11_Pos
Ë

	)

9010 
	#CAN_F13R2_FB11
 
CAN_F13R2_FB11_Msk


	)

9011 
	#CAN_F13R2_FB12_Pos
 (12U)

	)

9012 
	#CAN_F13R2_FB12_Msk
 (0x1UL << 
CAN_F13R2_FB12_Pos
Ë

	)

9013 
	#CAN_F13R2_FB12
 
CAN_F13R2_FB12_Msk


	)

9014 
	#CAN_F13R2_FB13_Pos
 (13U)

	)

9015 
	#CAN_F13R2_FB13_Msk
 (0x1UL << 
CAN_F13R2_FB13_Pos
Ë

	)

9016 
	#CAN_F13R2_FB13
 
CAN_F13R2_FB13_Msk


	)

9017 
	#CAN_F13R2_FB14_Pos
 (14U)

	)

9018 
	#CAN_F13R2_FB14_Msk
 (0x1UL << 
CAN_F13R2_FB14_Pos
Ë

	)

9019 
	#CAN_F13R2_FB14
 
CAN_F13R2_FB14_Msk


	)

9020 
	#CAN_F13R2_FB15_Pos
 (15U)

	)

9021 
	#CAN_F13R2_FB15_Msk
 (0x1UL << 
CAN_F13R2_FB15_Pos
Ë

	)

9022 
	#CAN_F13R2_FB15
 
CAN_F13R2_FB15_Msk


	)

9023 
	#CAN_F13R2_FB16_Pos
 (16U)

	)

9024 
	#CAN_F13R2_FB16_Msk
 (0x1UL << 
CAN_F13R2_FB16_Pos
Ë

	)

9025 
	#CAN_F13R2_FB16
 
CAN_F13R2_FB16_Msk


	)

9026 
	#CAN_F13R2_FB17_Pos
 (17U)

	)

9027 
	#CAN_F13R2_FB17_Msk
 (0x1UL << 
CAN_F13R2_FB17_Pos
Ë

	)

9028 
	#CAN_F13R2_FB17
 
CAN_F13R2_FB17_Msk


	)

9029 
	#CAN_F13R2_FB18_Pos
 (18U)

	)

9030 
	#CAN_F13R2_FB18_Msk
 (0x1UL << 
CAN_F13R2_FB18_Pos
Ë

	)

9031 
	#CAN_F13R2_FB18
 
CAN_F13R2_FB18_Msk


	)

9032 
	#CAN_F13R2_FB19_Pos
 (19U)

	)

9033 
	#CAN_F13R2_FB19_Msk
 (0x1UL << 
CAN_F13R2_FB19_Pos
Ë

	)

9034 
	#CAN_F13R2_FB19
 
CAN_F13R2_FB19_Msk


	)

9035 
	#CAN_F13R2_FB20_Pos
 (20U)

	)

9036 
	#CAN_F13R2_FB20_Msk
 (0x1UL << 
CAN_F13R2_FB20_Pos
Ë

	)

9037 
	#CAN_F13R2_FB20
 
CAN_F13R2_FB20_Msk


	)

9038 
	#CAN_F13R2_FB21_Pos
 (21U)

	)

9039 
	#CAN_F13R2_FB21_Msk
 (0x1UL << 
CAN_F13R2_FB21_Pos
Ë

	)

9040 
	#CAN_F13R2_FB21
 
CAN_F13R2_FB21_Msk


	)

9041 
	#CAN_F13R2_FB22_Pos
 (22U)

	)

9042 
	#CAN_F13R2_FB22_Msk
 (0x1UL << 
CAN_F13R2_FB22_Pos
Ë

	)

9043 
	#CAN_F13R2_FB22
 
CAN_F13R2_FB22_Msk


	)

9044 
	#CAN_F13R2_FB23_Pos
 (23U)

	)

9045 
	#CAN_F13R2_FB23_Msk
 (0x1UL << 
CAN_F13R2_FB23_Pos
Ë

	)

9046 
	#CAN_F13R2_FB23
 
CAN_F13R2_FB23_Msk


	)

9047 
	#CAN_F13R2_FB24_Pos
 (24U)

	)

9048 
	#CAN_F13R2_FB24_Msk
 (0x1UL << 
CAN_F13R2_FB24_Pos
Ë

	)

9049 
	#CAN_F13R2_FB24
 
CAN_F13R2_FB24_Msk


	)

9050 
	#CAN_F13R2_FB25_Pos
 (25U)

	)

9051 
	#CAN_F13R2_FB25_Msk
 (0x1UL << 
CAN_F13R2_FB25_Pos
Ë

	)

9052 
	#CAN_F13R2_FB25
 
CAN_F13R2_FB25_Msk


	)

9053 
	#CAN_F13R2_FB26_Pos
 (26U)

	)

9054 
	#CAN_F13R2_FB26_Msk
 (0x1UL << 
CAN_F13R2_FB26_Pos
Ë

	)

9055 
	#CAN_F13R2_FB26
 
CAN_F13R2_FB26_Msk


	)

9056 
	#CAN_F13R2_FB27_Pos
 (27U)

	)

9057 
	#CAN_F13R2_FB27_Msk
 (0x1UL << 
CAN_F13R2_FB27_Pos
Ë

	)

9058 
	#CAN_F13R2_FB27
 
CAN_F13R2_FB27_Msk


	)

9059 
	#CAN_F13R2_FB28_Pos
 (28U)

	)

9060 
	#CAN_F13R2_FB28_Msk
 (0x1UL << 
CAN_F13R2_FB28_Pos
Ë

	)

9061 
	#CAN_F13R2_FB28
 
CAN_F13R2_FB28_Msk


	)

9062 
	#CAN_F13R2_FB29_Pos
 (29U)

	)

9063 
	#CAN_F13R2_FB29_Msk
 (0x1UL << 
CAN_F13R2_FB29_Pos
Ë

	)

9064 
	#CAN_F13R2_FB29
 
CAN_F13R2_FB29_Msk


	)

9065 
	#CAN_F13R2_FB30_Pos
 (30U)

	)

9066 
	#CAN_F13R2_FB30_Msk
 (0x1UL << 
CAN_F13R2_FB30_Pos
Ë

	)

9067 
	#CAN_F13R2_FB30
 
CAN_F13R2_FB30_Msk


	)

9068 
	#CAN_F13R2_FB31_Pos
 (31U)

	)

9069 
	#CAN_F13R2_FB31_Msk
 (0x1UL << 
CAN_F13R2_FB31_Pos
Ë

	)

9070 
	#CAN_F13R2_FB31
 
CAN_F13R2_FB31_Msk


	)

9079 
	#SPI_CR1_CPHA_Pos
 (0U)

	)

9080 
	#SPI_CR1_CPHA_Msk
 (0x1UL << 
SPI_CR1_CPHA_Pos
Ë

	)

9081 
	#SPI_CR1_CPHA
 
SPI_CR1_CPHA_Msk


	)

9082 
	#SPI_CR1_CPOL_Pos
 (1U)

	)

9083 
	#SPI_CR1_CPOL_Msk
 (0x1UL << 
SPI_CR1_CPOL_Pos
Ë

	)

9084 
	#SPI_CR1_CPOL
 
SPI_CR1_CPOL_Msk


	)

9085 
	#SPI_CR1_MSTR_Pos
 (2U)

	)

9086 
	#SPI_CR1_MSTR_Msk
 (0x1UL << 
SPI_CR1_MSTR_Pos
Ë

	)

9087 
	#SPI_CR1_MSTR
 
SPI_CR1_MSTR_Msk


	)

9089 
	#SPI_CR1_BR_Pos
 (3U)

	)

9090 
	#SPI_CR1_BR_Msk
 (0x7UL << 
SPI_CR1_BR_Pos
Ë

	)

9091 
	#SPI_CR1_BR
 
SPI_CR1_BR_Msk


	)

9092 
	#SPI_CR1_BR_0
 (0x1UL << 
SPI_CR1_BR_Pos
Ë

	)

9093 
	#SPI_CR1_BR_1
 (0x2UL << 
SPI_CR1_BR_Pos
Ë

	)

9094 
	#SPI_CR1_BR_2
 (0x4UL << 
SPI_CR1_BR_Pos
Ë

	)

9096 
	#SPI_CR1_SPE_Pos
 (6U)

	)

9097 
	#SPI_CR1_SPE_Msk
 (0x1UL << 
SPI_CR1_SPE_Pos
Ë

	)

9098 
	#SPI_CR1_SPE
 
SPI_CR1_SPE_Msk


	)

9099 
	#SPI_CR1_LSBFIRST_Pos
 (7U)

	)

9100 
	#SPI_CR1_LSBFIRST_Msk
 (0x1UL << 
SPI_CR1_LSBFIRST_Pos
Ë

	)

9101 
	#SPI_CR1_LSBFIRST
 
SPI_CR1_LSBFIRST_Msk


	)

9102 
	#SPI_CR1_SSI_Pos
 (8U)

	)

9103 
	#SPI_CR1_SSI_Msk
 (0x1UL << 
SPI_CR1_SSI_Pos
Ë

	)

9104 
	#SPI_CR1_SSI
 
SPI_CR1_SSI_Msk


	)

9105 
	#SPI_CR1_SSM_Pos
 (9U)

	)

9106 
	#SPI_CR1_SSM_Msk
 (0x1UL << 
SPI_CR1_SSM_Pos
Ë

	)

9107 
	#SPI_CR1_SSM
 
SPI_CR1_SSM_Msk


	)

9108 
	#SPI_CR1_RXONLY_Pos
 (10U)

	)

9109 
	#SPI_CR1_RXONLY_Msk
 (0x1UL << 
SPI_CR1_RXONLY_Pos
Ë

	)

9110 
	#SPI_CR1_RXONLY
 
SPI_CR1_RXONLY_Msk


	)

9111 
	#SPI_CR1_DFF_Pos
 (11U)

	)

9112 
	#SPI_CR1_DFF_Msk
 (0x1UL << 
SPI_CR1_DFF_Pos
Ë

	)

9113 
	#SPI_CR1_DFF
 
SPI_CR1_DFF_Msk


	)

9114 
	#SPI_CR1_CRCNEXT_Pos
 (12U)

	)

9115 
	#SPI_CR1_CRCNEXT_Msk
 (0x1UL << 
SPI_CR1_CRCNEXT_Pos
Ë

	)

9116 
	#SPI_CR1_CRCNEXT
 
SPI_CR1_CRCNEXT_Msk


	)

9117 
	#SPI_CR1_CRCEN_Pos
 (13U)

	)

9118 
	#SPI_CR1_CRCEN_Msk
 (0x1UL << 
SPI_CR1_CRCEN_Pos
Ë

	)

9119 
	#SPI_CR1_CRCEN
 
SPI_CR1_CRCEN_Msk


	)

9120 
	#SPI_CR1_BIDIOE_Pos
 (14U)

	)

9121 
	#SPI_CR1_BIDIOE_Msk
 (0x1UL << 
SPI_CR1_BIDIOE_Pos
Ë

	)

9122 
	#SPI_CR1_BIDIOE
 
SPI_CR1_BIDIOE_Msk


	)

9123 
	#SPI_CR1_BIDIMODE_Pos
 (15U)

	)

9124 
	#SPI_CR1_BIDIMODE_Msk
 (0x1UL << 
SPI_CR1_BIDIMODE_Pos
Ë

	)

9125 
	#SPI_CR1_BIDIMODE
 
SPI_CR1_BIDIMODE_Msk


	)

9128 
	#SPI_CR2_RXDMAEN_Pos
 (0U)

	)

9129 
	#SPI_CR2_RXDMAEN_Msk
 (0x1UL << 
SPI_CR2_RXDMAEN_Pos
Ë

	)

9130 
	#SPI_CR2_RXDMAEN
 
SPI_CR2_RXDMAEN_Msk


	)

9131 
	#SPI_CR2_TXDMAEN_Pos
 (1U)

	)

9132 
	#SPI_CR2_TXDMAEN_Msk
 (0x1UL << 
SPI_CR2_TXDMAEN_Pos
Ë

	)

9133 
	#SPI_CR2_TXDMAEN
 
SPI_CR2_TXDMAEN_Msk


	)

9134 
	#SPI_CR2_SSOE_Pos
 (2U)

	)

9135 
	#SPI_CR2_SSOE_Msk
 (0x1UL << 
SPI_CR2_SSOE_Pos
Ë

	)

9136 
	#SPI_CR2_SSOE
 
SPI_CR2_SSOE_Msk


	)

9137 
	#SPI_CR2_ERRIE_Pos
 (5U)

	)

9138 
	#SPI_CR2_ERRIE_Msk
 (0x1UL << 
SPI_CR2_ERRIE_Pos
Ë

	)

9139 
	#SPI_CR2_ERRIE
 
SPI_CR2_ERRIE_Msk


	)

9140 
	#SPI_CR2_RXNEIE_Pos
 (6U)

	)

9141 
	#SPI_CR2_RXNEIE_Msk
 (0x1UL << 
SPI_CR2_RXNEIE_Pos
Ë

	)

9142 
	#SPI_CR2_RXNEIE
 
SPI_CR2_RXNEIE_Msk


	)

9143 
	#SPI_CR2_TXEIE_Pos
 (7U)

	)

9144 
	#SPI_CR2_TXEIE_Msk
 (0x1UL << 
SPI_CR2_TXEIE_Pos
Ë

	)

9145 
	#SPI_CR2_TXEIE
 
SPI_CR2_TXEIE_Msk


	)

9148 
	#SPI_SR_RXNE_Pos
 (0U)

	)

9149 
	#SPI_SR_RXNE_Msk
 (0x1UL << 
SPI_SR_RXNE_Pos
Ë

	)

9150 
	#SPI_SR_RXNE
 
SPI_SR_RXNE_Msk


	)

9151 
	#SPI_SR_TXE_Pos
 (1U)

	)

9152 
	#SPI_SR_TXE_Msk
 (0x1UL << 
SPI_SR_TXE_Pos
Ë

	)

9153 
	#SPI_SR_TXE
 
SPI_SR_TXE_Msk


	)

9154 
	#SPI_SR_CHSIDE_Pos
 (2U)

	)

9155 
	#SPI_SR_CHSIDE_Msk
 (0x1UL << 
SPI_SR_CHSIDE_Pos
Ë

	)

9156 
	#SPI_SR_CHSIDE
 
SPI_SR_CHSIDE_Msk


	)

9157 
	#SPI_SR_UDR_Pos
 (3U)

	)

9158 
	#SPI_SR_UDR_Msk
 (0x1UL << 
SPI_SR_UDR_Pos
Ë

	)

9159 
	#SPI_SR_UDR
 
SPI_SR_UDR_Msk


	)

9160 
	#SPI_SR_CRCERR_Pos
 (4U)

	)

9161 
	#SPI_SR_CRCERR_Msk
 (0x1UL << 
SPI_SR_CRCERR_Pos
Ë

	)

9162 
	#SPI_SR_CRCERR
 
SPI_SR_CRCERR_Msk


	)

9163 
	#SPI_SR_MODF_Pos
 (5U)

	)

9164 
	#SPI_SR_MODF_Msk
 (0x1UL << 
SPI_SR_MODF_Pos
Ë

	)

9165 
	#SPI_SR_MODF
 
SPI_SR_MODF_Msk


	)

9166 
	#SPI_SR_OVR_Pos
 (6U)

	)

9167 
	#SPI_SR_OVR_Msk
 (0x1UL << 
SPI_SR_OVR_Pos
Ë

	)

9168 
	#SPI_SR_OVR
 
SPI_SR_OVR_Msk


	)

9169 
	#SPI_SR_BSY_Pos
 (7U)

	)

9170 
	#SPI_SR_BSY_Msk
 (0x1UL << 
SPI_SR_BSY_Pos
Ë

	)

9171 
	#SPI_SR_BSY
 
SPI_SR_BSY_Msk


	)

9174 
	#SPI_DR_DR_Pos
 (0U)

	)

9175 
	#SPI_DR_DR_Msk
 (0xFFFFUL << 
SPI_DR_DR_Pos
Ë

	)

9176 
	#SPI_DR_DR
 
SPI_DR_DR_Msk


	)

9179 
	#SPI_CRCPR_CRCPOLY_Pos
 (0U)

	)

9180 
	#SPI_CRCPR_CRCPOLY_Msk
 (0xFFFFUL << 
SPI_CRCPR_CRCPOLY_Pos
Ë

	)

9181 
	#SPI_CRCPR_CRCPOLY
 
SPI_CRCPR_CRCPOLY_Msk


	)

9184 
	#SPI_RXCRCR_RXCRC_Pos
 (0U)

	)

9185 
	#SPI_RXCRCR_RXCRC_Msk
 (0xFFFFUL << 
SPI_RXCRCR_RXCRC_Pos
Ë

	)

9186 
	#SPI_RXCRCR_RXCRC
 
SPI_RXCRCR_RXCRC_Msk


	)

9189 
	#SPI_TXCRCR_TXCRC_Pos
 (0U)

	)

9190 
	#SPI_TXCRCR_TXCRC_Msk
 (0xFFFFUL << 
SPI_TXCRCR_TXCRC_Pos
Ë

	)

9191 
	#SPI_TXCRCR_TXCRC
 
SPI_TXCRCR_TXCRC_Msk


	)

9194 
	#SPI_I2SCFGR_I2SMOD_Pos
 (11U)

	)

9195 
	#SPI_I2SCFGR_I2SMOD_Msk
 (0x1UL << 
SPI_I2SCFGR_I2SMOD_Pos
Ë

	)

9196 
	#SPI_I2SCFGR_I2SMOD
 
SPI_I2SCFGR_I2SMOD_Msk


	)

9206 
	#I2C_CR1_PE_Pos
 (0U)

	)

9207 
	#I2C_CR1_PE_Msk
 (0x1UL << 
I2C_CR1_PE_Pos
Ë

	)

9208 
	#I2C_CR1_PE
 
I2C_CR1_PE_Msk


	)

9209 
	#I2C_CR1_SMBUS_Pos
 (1U)

	)

9210 
	#I2C_CR1_SMBUS_Msk
 (0x1UL << 
I2C_CR1_SMBUS_Pos
Ë

	)

9211 
	#I2C_CR1_SMBUS
 
I2C_CR1_SMBUS_Msk


	)

9212 
	#I2C_CR1_SMBTYPE_Pos
 (3U)

	)

9213 
	#I2C_CR1_SMBTYPE_Msk
 (0x1UL << 
I2C_CR1_SMBTYPE_Pos
Ë

	)

9214 
	#I2C_CR1_SMBTYPE
 
I2C_CR1_SMBTYPE_Msk


	)

9215 
	#I2C_CR1_ENARP_Pos
 (4U)

	)

9216 
	#I2C_CR1_ENARP_Msk
 (0x1UL << 
I2C_CR1_ENARP_Pos
Ë

	)

9217 
	#I2C_CR1_ENARP
 
I2C_CR1_ENARP_Msk


	)

9218 
	#I2C_CR1_ENPEC_Pos
 (5U)

	)

9219 
	#I2C_CR1_ENPEC_Msk
 (0x1UL << 
I2C_CR1_ENPEC_Pos
Ë

	)

9220 
	#I2C_CR1_ENPEC
 
I2C_CR1_ENPEC_Msk


	)

9221 
	#I2C_CR1_ENGC_Pos
 (6U)

	)

9222 
	#I2C_CR1_ENGC_Msk
 (0x1UL << 
I2C_CR1_ENGC_Pos
Ë

	)

9223 
	#I2C_CR1_ENGC
 
I2C_CR1_ENGC_Msk


	)

9224 
	#I2C_CR1_NOSTRETCH_Pos
 (7U)

	)

9225 
	#I2C_CR1_NOSTRETCH_Msk
 (0x1UL << 
I2C_CR1_NOSTRETCH_Pos
Ë

	)

9226 
	#I2C_CR1_NOSTRETCH
 
I2C_CR1_NOSTRETCH_Msk


	)

9227 
	#I2C_CR1_START_Pos
 (8U)

	)

9228 
	#I2C_CR1_START_Msk
 (0x1UL << 
I2C_CR1_START_Pos
Ë

	)

9229 
	#I2C_CR1_START
 
I2C_CR1_START_Msk


	)

9230 
	#I2C_CR1_STOP_Pos
 (9U)

	)

9231 
	#I2C_CR1_STOP_Msk
 (0x1UL << 
I2C_CR1_STOP_Pos
Ë

	)

9232 
	#I2C_CR1_STOP
 
I2C_CR1_STOP_Msk


	)

9233 
	#I2C_CR1_ACK_Pos
 (10U)

	)

9234 
	#I2C_CR1_ACK_Msk
 (0x1UL << 
I2C_CR1_ACK_Pos
Ë

	)

9235 
	#I2C_CR1_ACK
 
I2C_CR1_ACK_Msk


	)

9236 
	#I2C_CR1_POS_Pos
 (11U)

	)

9237 
	#I2C_CR1_POS_Msk
 (0x1UL << 
I2C_CR1_POS_Pos
Ë

	)

9238 
	#I2C_CR1_POS
 
I2C_CR1_POS_Msk


	)

9239 
	#I2C_CR1_PEC_Pos
 (12U)

	)

9240 
	#I2C_CR1_PEC_Msk
 (0x1UL << 
I2C_CR1_PEC_Pos
Ë

	)

9241 
	#I2C_CR1_PEC
 
I2C_CR1_PEC_Msk


	)

9242 
	#I2C_CR1_ALERT_Pos
 (13U)

	)

9243 
	#I2C_CR1_ALERT_Msk
 (0x1UL << 
I2C_CR1_ALERT_Pos
Ë

	)

9244 
	#I2C_CR1_ALERT
 
I2C_CR1_ALERT_Msk


	)

9245 
	#I2C_CR1_SWRST_Pos
 (15U)

	)

9246 
	#I2C_CR1_SWRST_Msk
 (0x1UL << 
I2C_CR1_SWRST_Pos
Ë

	)

9247 
	#I2C_CR1_SWRST
 
I2C_CR1_SWRST_Msk


	)

9250 
	#I2C_CR2_FREQ_Pos
 (0U)

	)

9251 
	#I2C_CR2_FREQ_Msk
 (0x3FUL << 
I2C_CR2_FREQ_Pos
Ë

	)

9252 
	#I2C_CR2_FREQ
 
I2C_CR2_FREQ_Msk


	)

9253 
	#I2C_CR2_FREQ_0
 (0x01UL << 
I2C_CR2_FREQ_Pos
Ë

	)

9254 
	#I2C_CR2_FREQ_1
 (0x02UL << 
I2C_CR2_FREQ_Pos
Ë

	)

9255 
	#I2C_CR2_FREQ_2
 (0x04UL << 
I2C_CR2_FREQ_Pos
Ë

	)

9256 
	#I2C_CR2_FREQ_3
 (0x08UL << 
I2C_CR2_FREQ_Pos
Ë

	)

9257 
	#I2C_CR2_FREQ_4
 (0x10UL << 
I2C_CR2_FREQ_Pos
Ë

	)

9258 
	#I2C_CR2_FREQ_5
 (0x20UL << 
I2C_CR2_FREQ_Pos
Ë

	)

9260 
	#I2C_CR2_ITERREN_Pos
 (8U)

	)

9261 
	#I2C_CR2_ITERREN_Msk
 (0x1UL << 
I2C_CR2_ITERREN_Pos
Ë

	)

9262 
	#I2C_CR2_ITERREN
 
I2C_CR2_ITERREN_Msk


	)

9263 
	#I2C_CR2_ITEVTEN_Pos
 (9U)

	)

9264 
	#I2C_CR2_ITEVTEN_Msk
 (0x1UL << 
I2C_CR2_ITEVTEN_Pos
Ë

	)

9265 
	#I2C_CR2_ITEVTEN
 
I2C_CR2_ITEVTEN_Msk


	)

9266 
	#I2C_CR2_ITBUFEN_Pos
 (10U)

	)

9267 
	#I2C_CR2_ITBUFEN_Msk
 (0x1UL << 
I2C_CR2_ITBUFEN_Pos
Ë

	)

9268 
	#I2C_CR2_ITBUFEN
 
I2C_CR2_ITBUFEN_Msk


	)

9269 
	#I2C_CR2_DMAEN_Pos
 (11U)

	)

9270 
	#I2C_CR2_DMAEN_Msk
 (0x1UL << 
I2C_CR2_DMAEN_Pos
Ë

	)

9271 
	#I2C_CR2_DMAEN
 
I2C_CR2_DMAEN_Msk


	)

9272 
	#I2C_CR2_LAST_Pos
 (12U)

	)

9273 
	#I2C_CR2_LAST_Msk
 (0x1UL << 
I2C_CR2_LAST_Pos
Ë

	)

9274 
	#I2C_CR2_LAST
 
I2C_CR2_LAST_Msk


	)

9277 
	#I2C_OAR1_ADD1_7
 0x000000FEU

	)

9278 
	#I2C_OAR1_ADD8_9
 0x00000300U

	)

9280 
	#I2C_OAR1_ADD0_Pos
 (0U)

	)

9281 
	#I2C_OAR1_ADD0_Msk
 (0x1UL << 
I2C_OAR1_ADD0_Pos
Ë

	)

9282 
	#I2C_OAR1_ADD0
 
I2C_OAR1_ADD0_Msk


	)

9283 
	#I2C_OAR1_ADD1_Pos
 (1U)

	)

9284 
	#I2C_OAR1_ADD1_Msk
 (0x1UL << 
I2C_OAR1_ADD1_Pos
Ë

	)

9285 
	#I2C_OAR1_ADD1
 
I2C_OAR1_ADD1_Msk


	)

9286 
	#I2C_OAR1_ADD2_Pos
 (2U)

	)

9287 
	#I2C_OAR1_ADD2_Msk
 (0x1UL << 
I2C_OAR1_ADD2_Pos
Ë

	)

9288 
	#I2C_OAR1_ADD2
 
I2C_OAR1_ADD2_Msk


	)

9289 
	#I2C_OAR1_ADD3_Pos
 (3U)

	)

9290 
	#I2C_OAR1_ADD3_Msk
 (0x1UL << 
I2C_OAR1_ADD3_Pos
Ë

	)

9291 
	#I2C_OAR1_ADD3
 
I2C_OAR1_ADD3_Msk


	)

9292 
	#I2C_OAR1_ADD4_Pos
 (4U)

	)

9293 
	#I2C_OAR1_ADD4_Msk
 (0x1UL << 
I2C_OAR1_ADD4_Pos
Ë

	)

9294 
	#I2C_OAR1_ADD4
 
I2C_OAR1_ADD4_Msk


	)

9295 
	#I2C_OAR1_ADD5_Pos
 (5U)

	)

9296 
	#I2C_OAR1_ADD5_Msk
 (0x1UL << 
I2C_OAR1_ADD5_Pos
Ë

	)

9297 
	#I2C_OAR1_ADD5
 
I2C_OAR1_ADD5_Msk


	)

9298 
	#I2C_OAR1_ADD6_Pos
 (6U)

	)

9299 
	#I2C_OAR1_ADD6_Msk
 (0x1UL << 
I2C_OAR1_ADD6_Pos
Ë

	)

9300 
	#I2C_OAR1_ADD6
 
I2C_OAR1_ADD6_Msk


	)

9301 
	#I2C_OAR1_ADD7_Pos
 (7U)

	)

9302 
	#I2C_OAR1_ADD7_Msk
 (0x1UL << 
I2C_OAR1_ADD7_Pos
Ë

	)

9303 
	#I2C_OAR1_ADD7
 
I2C_OAR1_ADD7_Msk


	)

9304 
	#I2C_OAR1_ADD8_Pos
 (8U)

	)

9305 
	#I2C_OAR1_ADD8_Msk
 (0x1UL << 
I2C_OAR1_ADD8_Pos
Ë

	)

9306 
	#I2C_OAR1_ADD8
 
I2C_OAR1_ADD8_Msk


	)

9307 
	#I2C_OAR1_ADD9_Pos
 (9U)

	)

9308 
	#I2C_OAR1_ADD9_Msk
 (0x1UL << 
I2C_OAR1_ADD9_Pos
Ë

	)

9309 
	#I2C_OAR1_ADD9
 
I2C_OAR1_ADD9_Msk


	)

9311 
	#I2C_OAR1_ADDMODE_Pos
 (15U)

	)

9312 
	#I2C_OAR1_ADDMODE_Msk
 (0x1UL << 
I2C_OAR1_ADDMODE_Pos
Ë

	)

9313 
	#I2C_OAR1_ADDMODE
 
I2C_OAR1_ADDMODE_Msk


	)

9316 
	#I2C_OAR2_ENDUAL_Pos
 (0U)

	)

9317 
	#I2C_OAR2_ENDUAL_Msk
 (0x1UL << 
I2C_OAR2_ENDUAL_Pos
Ë

	)

9318 
	#I2C_OAR2_ENDUAL
 
I2C_OAR2_ENDUAL_Msk


	)

9319 
	#I2C_OAR2_ADD2_Pos
 (1U)

	)

9320 
	#I2C_OAR2_ADD2_Msk
 (0x7FUL << 
I2C_OAR2_ADD2_Pos
Ë

	)

9321 
	#I2C_OAR2_ADD2
 
I2C_OAR2_ADD2_Msk


	)

9324 
	#I2C_DR_DR_Pos
 (0U)

	)

9325 
	#I2C_DR_DR_Msk
 (0xFFUL << 
I2C_DR_DR_Pos
Ë

	)

9326 
	#I2C_DR_DR
 
I2C_DR_DR_Msk


	)

9329 
	#I2C_SR1_SB_Pos
 (0U)

	)

9330 
	#I2C_SR1_SB_Msk
 (0x1UL << 
I2C_SR1_SB_Pos
Ë

	)

9331 
	#I2C_SR1_SB
 
I2C_SR1_SB_Msk


	)

9332 
	#I2C_SR1_ADDR_Pos
 (1U)

	)

9333 
	#I2C_SR1_ADDR_Msk
 (0x1UL << 
I2C_SR1_ADDR_Pos
Ë

	)

9334 
	#I2C_SR1_ADDR
 
I2C_SR1_ADDR_Msk


	)

9335 
	#I2C_SR1_BTF_Pos
 (2U)

	)

9336 
	#I2C_SR1_BTF_Msk
 (0x1UL << 
I2C_SR1_BTF_Pos
Ë

	)

9337 
	#I2C_SR1_BTF
 
I2C_SR1_BTF_Msk


	)

9338 
	#I2C_SR1_ADD10_Pos
 (3U)

	)

9339 
	#I2C_SR1_ADD10_Msk
 (0x1UL << 
I2C_SR1_ADD10_Pos
Ë

	)

9340 
	#I2C_SR1_ADD10
 
I2C_SR1_ADD10_Msk


	)

9341 
	#I2C_SR1_STOPF_Pos
 (4U)

	)

9342 
	#I2C_SR1_STOPF_Msk
 (0x1UL << 
I2C_SR1_STOPF_Pos
Ë

	)

9343 
	#I2C_SR1_STOPF
 
I2C_SR1_STOPF_Msk


	)

9344 
	#I2C_SR1_RXNE_Pos
 (6U)

	)

9345 
	#I2C_SR1_RXNE_Msk
 (0x1UL << 
I2C_SR1_RXNE_Pos
Ë

	)

9346 
	#I2C_SR1_RXNE
 
I2C_SR1_RXNE_Msk


	)

9347 
	#I2C_SR1_TXE_Pos
 (7U)

	)

9348 
	#I2C_SR1_TXE_Msk
 (0x1UL << 
I2C_SR1_TXE_Pos
Ë

	)

9349 
	#I2C_SR1_TXE
 
I2C_SR1_TXE_Msk


	)

9350 
	#I2C_SR1_BERR_Pos
 (8U)

	)

9351 
	#I2C_SR1_BERR_Msk
 (0x1UL << 
I2C_SR1_BERR_Pos
Ë

	)

9352 
	#I2C_SR1_BERR
 
I2C_SR1_BERR_Msk


	)

9353 
	#I2C_SR1_ARLO_Pos
 (9U)

	)

9354 
	#I2C_SR1_ARLO_Msk
 (0x1UL << 
I2C_SR1_ARLO_Pos
Ë

	)

9355 
	#I2C_SR1_ARLO
 
I2C_SR1_ARLO_Msk


	)

9356 
	#I2C_SR1_AF_Pos
 (10U)

	)

9357 
	#I2C_SR1_AF_Msk
 (0x1UL << 
I2C_SR1_AF_Pos
Ë

	)

9358 
	#I2C_SR1_AF
 
I2C_SR1_AF_Msk


	)

9359 
	#I2C_SR1_OVR_Pos
 (11U)

	)

9360 
	#I2C_SR1_OVR_Msk
 (0x1UL << 
I2C_SR1_OVR_Pos
Ë

	)

9361 
	#I2C_SR1_OVR
 
I2C_SR1_OVR_Msk


	)

9362 
	#I2C_SR1_PECERR_Pos
 (12U)

	)

9363 
	#I2C_SR1_PECERR_Msk
 (0x1UL << 
I2C_SR1_PECERR_Pos
Ë

	)

9364 
	#I2C_SR1_PECERR
 
I2C_SR1_PECERR_Msk


	)

9365 
	#I2C_SR1_TIMEOUT_Pos
 (14U)

	)

9366 
	#I2C_SR1_TIMEOUT_Msk
 (0x1UL << 
I2C_SR1_TIMEOUT_Pos
Ë

	)

9367 
	#I2C_SR1_TIMEOUT
 
I2C_SR1_TIMEOUT_Msk


	)

9368 
	#I2C_SR1_SMBALERT_Pos
 (15U)

	)

9369 
	#I2C_SR1_SMBALERT_Msk
 (0x1UL << 
I2C_SR1_SMBALERT_Pos
Ë

	)

9370 
	#I2C_SR1_SMBALERT
 
I2C_SR1_SMBALERT_Msk


	)

9373 
	#I2C_SR2_MSL_Pos
 (0U)

	)

9374 
	#I2C_SR2_MSL_Msk
 (0x1UL << 
I2C_SR2_MSL_Pos
Ë

	)

9375 
	#I2C_SR2_MSL
 
I2C_SR2_MSL_Msk


	)

9376 
	#I2C_SR2_BUSY_Pos
 (1U)

	)

9377 
	#I2C_SR2_BUSY_Msk
 (0x1UL << 
I2C_SR2_BUSY_Pos
Ë

	)

9378 
	#I2C_SR2_BUSY
 
I2C_SR2_BUSY_Msk


	)

9379 
	#I2C_SR2_TRA_Pos
 (2U)

	)

9380 
	#I2C_SR2_TRA_Msk
 (0x1UL << 
I2C_SR2_TRA_Pos
Ë

	)

9381 
	#I2C_SR2_TRA
 
I2C_SR2_TRA_Msk


	)

9382 
	#I2C_SR2_GENCALL_Pos
 (4U)

	)

9383 
	#I2C_SR2_GENCALL_Msk
 (0x1UL << 
I2C_SR2_GENCALL_Pos
Ë

	)

9384 
	#I2C_SR2_GENCALL
 
I2C_SR2_GENCALL_Msk


	)

9385 
	#I2C_SR2_SMBDEFAULT_Pos
 (5U)

	)

9386 
	#I2C_SR2_SMBDEFAULT_Msk
 (0x1UL << 
I2C_SR2_SMBDEFAULT_Pos
Ë

	)

9387 
	#I2C_SR2_SMBDEFAULT
 
I2C_SR2_SMBDEFAULT_Msk


	)

9388 
	#I2C_SR2_SMBHOST_Pos
 (6U)

	)

9389 
	#I2C_SR2_SMBHOST_Msk
 (0x1UL << 
I2C_SR2_SMBHOST_Pos
Ë

	)

9390 
	#I2C_SR2_SMBHOST
 
I2C_SR2_SMBHOST_Msk


	)

9391 
	#I2C_SR2_DUALF_Pos
 (7U)

	)

9392 
	#I2C_SR2_DUALF_Msk
 (0x1UL << 
I2C_SR2_DUALF_Pos
Ë

	)

9393 
	#I2C_SR2_DUALF
 
I2C_SR2_DUALF_Msk


	)

9394 
	#I2C_SR2_PEC_Pos
 (8U)

	)

9395 
	#I2C_SR2_PEC_Msk
 (0xFFUL << 
I2C_SR2_PEC_Pos
Ë

	)

9396 
	#I2C_SR2_PEC
 
I2C_SR2_PEC_Msk


	)

9399 
	#I2C_CCR_CCR_Pos
 (0U)

	)

9400 
	#I2C_CCR_CCR_Msk
 (0xFFFUL << 
I2C_CCR_CCR_Pos
Ë

	)

9401 
	#I2C_CCR_CCR
 
I2C_CCR_CCR_Msk


	)

9402 
	#I2C_CCR_DUTY_Pos
 (14U)

	)

9403 
	#I2C_CCR_DUTY_Msk
 (0x1UL << 
I2C_CCR_DUTY_Pos
Ë

	)

9404 
	#I2C_CCR_DUTY
 
I2C_CCR_DUTY_Msk


	)

9405 
	#I2C_CCR_FS_Pos
 (15U)

	)

9406 
	#I2C_CCR_FS_Msk
 (0x1UL << 
I2C_CCR_FS_Pos
Ë

	)

9407 
	#I2C_CCR_FS
 
I2C_CCR_FS_Msk


	)

9410 
	#I2C_TRISE_TRISE_Pos
 (0U)

	)

9411 
	#I2C_TRISE_TRISE_Msk
 (0x3FUL << 
I2C_TRISE_TRISE_Pos
Ë

	)

9412 
	#I2C_TRISE_TRISE
 
I2C_TRISE_TRISE_Msk


	)

9421 
	#USART_SR_PE_Pos
 (0U)

	)

9422 
	#USART_SR_PE_Msk
 (0x1UL << 
USART_SR_PE_Pos
Ë

	)

9423 
	#USART_SR_PE
 
USART_SR_PE_Msk


	)

9424 
	#USART_SR_FE_Pos
 (1U)

	)

9425 
	#USART_SR_FE_Msk
 (0x1UL << 
USART_SR_FE_Pos
Ë

	)

9426 
	#USART_SR_FE
 
USART_SR_FE_Msk


	)

9427 
	#USART_SR_NE_Pos
 (2U)

	)

9428 
	#USART_SR_NE_Msk
 (0x1UL << 
USART_SR_NE_Pos
Ë

	)

9429 
	#USART_SR_NE
 
USART_SR_NE_Msk


	)

9430 
	#USART_SR_ORE_Pos
 (3U)

	)

9431 
	#USART_SR_ORE_Msk
 (0x1UL << 
USART_SR_ORE_Pos
Ë

	)

9432 
	#USART_SR_ORE
 
USART_SR_ORE_Msk


	)

9433 
	#USART_SR_IDLE_Pos
 (4U)

	)

9434 
	#USART_SR_IDLE_Msk
 (0x1UL << 
USART_SR_IDLE_Pos
Ë

	)

9435 
	#USART_SR_IDLE
 
USART_SR_IDLE_Msk


	)

9436 
	#USART_SR_RXNE_Pos
 (5U)

	)

9437 
	#USART_SR_RXNE_Msk
 (0x1UL << 
USART_SR_RXNE_Pos
Ë

	)

9438 
	#USART_SR_RXNE
 
USART_SR_RXNE_Msk


	)

9439 
	#USART_SR_TC_Pos
 (6U)

	)

9440 
	#USART_SR_TC_Msk
 (0x1UL << 
USART_SR_TC_Pos
Ë

	)

9441 
	#USART_SR_TC
 
USART_SR_TC_Msk


	)

9442 
	#USART_SR_TXE_Pos
 (7U)

	)

9443 
	#USART_SR_TXE_Msk
 (0x1UL << 
USART_SR_TXE_Pos
Ë

	)

9444 
	#USART_SR_TXE
 
USART_SR_TXE_Msk


	)

9445 
	#USART_SR_LBD_Pos
 (8U)

	)

9446 
	#USART_SR_LBD_Msk
 (0x1UL << 
USART_SR_LBD_Pos
Ë

	)

9447 
	#USART_SR_LBD
 
USART_SR_LBD_Msk


	)

9448 
	#USART_SR_CTS_Pos
 (9U)

	)

9449 
	#USART_SR_CTS_Msk
 (0x1UL << 
USART_SR_CTS_Pos
Ë

	)

9450 
	#USART_SR_CTS
 
USART_SR_CTS_Msk


	)

9453 
	#USART_DR_DR_Pos
 (0U)

	)

9454 
	#USART_DR_DR_Msk
 (0x1FFUL << 
USART_DR_DR_Pos
Ë

	)

9455 
	#USART_DR_DR
 
USART_DR_DR_Msk


	)

9458 
	#USART_BRR_DIV_Fø˘i⁄_Pos
 (0U)

	)

9459 
	#USART_BRR_DIV_Fø˘i⁄_Msk
 (0xFUL << 
USART_BRR_DIV_Fø˘i⁄_Pos
Ë

	)

9460 
	#USART_BRR_DIV_Fø˘i⁄
 
USART_BRR_DIV_Fø˘i⁄_Msk


	)

9461 
	#USART_BRR_DIV_M™tisß_Pos
 (4U)

	)

9462 
	#USART_BRR_DIV_M™tisß_Msk
 (0xFFFUL << 
USART_BRR_DIV_M™tisß_Pos
Ë

	)

9463 
	#USART_BRR_DIV_M™tisß
 
USART_BRR_DIV_M™tisß_Msk


	)

9466 
	#USART_CR1_SBK_Pos
 (0U)

	)

9467 
	#USART_CR1_SBK_Msk
 (0x1UL << 
USART_CR1_SBK_Pos
Ë

	)

9468 
	#USART_CR1_SBK
 
USART_CR1_SBK_Msk


	)

9469 
	#USART_CR1_RWU_Pos
 (1U)

	)

9470 
	#USART_CR1_RWU_Msk
 (0x1UL << 
USART_CR1_RWU_Pos
Ë

	)

9471 
	#USART_CR1_RWU
 
USART_CR1_RWU_Msk


	)

9472 
	#USART_CR1_RE_Pos
 (2U)

	)

9473 
	#USART_CR1_RE_Msk
 (0x1UL << 
USART_CR1_RE_Pos
Ë

	)

9474 
	#USART_CR1_RE
 
USART_CR1_RE_Msk


	)

9475 
	#USART_CR1_TE_Pos
 (3U)

	)

9476 
	#USART_CR1_TE_Msk
 (0x1UL << 
USART_CR1_TE_Pos
Ë

	)

9477 
	#USART_CR1_TE
 
USART_CR1_TE_Msk


	)

9478 
	#USART_CR1_IDLEIE_Pos
 (4U)

	)

9479 
	#USART_CR1_IDLEIE_Msk
 (0x1UL << 
USART_CR1_IDLEIE_Pos
Ë

	)

9480 
	#USART_CR1_IDLEIE
 
USART_CR1_IDLEIE_Msk


	)

9481 
	#USART_CR1_RXNEIE_Pos
 (5U)

	)

9482 
	#USART_CR1_RXNEIE_Msk
 (0x1UL << 
USART_CR1_RXNEIE_Pos
Ë

	)

9483 
	#USART_CR1_RXNEIE
 
USART_CR1_RXNEIE_Msk


	)

9484 
	#USART_CR1_TCIE_Pos
 (6U)

	)

9485 
	#USART_CR1_TCIE_Msk
 (0x1UL << 
USART_CR1_TCIE_Pos
Ë

	)

9486 
	#USART_CR1_TCIE
 
USART_CR1_TCIE_Msk


	)

9487 
	#USART_CR1_TXEIE_Pos
 (7U)

	)

9488 
	#USART_CR1_TXEIE_Msk
 (0x1UL << 
USART_CR1_TXEIE_Pos
Ë

	)

9489 
	#USART_CR1_TXEIE
 
USART_CR1_TXEIE_Msk


	)

9490 
	#USART_CR1_PEIE_Pos
 (8U)

	)

9491 
	#USART_CR1_PEIE_Msk
 (0x1UL << 
USART_CR1_PEIE_Pos
Ë

	)

9492 
	#USART_CR1_PEIE
 
USART_CR1_PEIE_Msk


	)

9493 
	#USART_CR1_PS_Pos
 (9U)

	)

9494 
	#USART_CR1_PS_Msk
 (0x1UL << 
USART_CR1_PS_Pos
Ë

	)

9495 
	#USART_CR1_PS
 
USART_CR1_PS_Msk


	)

9496 
	#USART_CR1_PCE_Pos
 (10U)

	)

9497 
	#USART_CR1_PCE_Msk
 (0x1UL << 
USART_CR1_PCE_Pos
Ë

	)

9498 
	#USART_CR1_PCE
 
USART_CR1_PCE_Msk


	)

9499 
	#USART_CR1_WAKE_Pos
 (11U)

	)

9500 
	#USART_CR1_WAKE_Msk
 (0x1UL << 
USART_CR1_WAKE_Pos
Ë

	)

9501 
	#USART_CR1_WAKE
 
USART_CR1_WAKE_Msk


	)

9502 
	#USART_CR1_M_Pos
 (12U)

	)

9503 
	#USART_CR1_M_Msk
 (0x1UL << 
USART_CR1_M_Pos
Ë

	)

9504 
	#USART_CR1_M
 
USART_CR1_M_Msk


	)

9505 
	#USART_CR1_UE_Pos
 (13U)

	)

9506 
	#USART_CR1_UE_Msk
 (0x1UL << 
USART_CR1_UE_Pos
Ë

	)

9507 
	#USART_CR1_UE
 
USART_CR1_UE_Msk


	)

9510 
	#USART_CR2_ADD_Pos
 (0U)

	)

9511 
	#USART_CR2_ADD_Msk
 (0xFUL << 
USART_CR2_ADD_Pos
Ë

	)

9512 
	#USART_CR2_ADD
 
USART_CR2_ADD_Msk


	)

9513 
	#USART_CR2_LBDL_Pos
 (5U)

	)

9514 
	#USART_CR2_LBDL_Msk
 (0x1UL << 
USART_CR2_LBDL_Pos
Ë

	)

9515 
	#USART_CR2_LBDL
 
USART_CR2_LBDL_Msk


	)

9516 
	#USART_CR2_LBDIE_Pos
 (6U)

	)

9517 
	#USART_CR2_LBDIE_Msk
 (0x1UL << 
USART_CR2_LBDIE_Pos
Ë

	)

9518 
	#USART_CR2_LBDIE
 
USART_CR2_LBDIE_Msk


	)

9519 
	#USART_CR2_LBCL_Pos
 (8U)

	)

9520 
	#USART_CR2_LBCL_Msk
 (0x1UL << 
USART_CR2_LBCL_Pos
Ë

	)

9521 
	#USART_CR2_LBCL
 
USART_CR2_LBCL_Msk


	)

9522 
	#USART_CR2_CPHA_Pos
 (9U)

	)

9523 
	#USART_CR2_CPHA_Msk
 (0x1UL << 
USART_CR2_CPHA_Pos
Ë

	)

9524 
	#USART_CR2_CPHA
 
USART_CR2_CPHA_Msk


	)

9525 
	#USART_CR2_CPOL_Pos
 (10U)

	)

9526 
	#USART_CR2_CPOL_Msk
 (0x1UL << 
USART_CR2_CPOL_Pos
Ë

	)

9527 
	#USART_CR2_CPOL
 
USART_CR2_CPOL_Msk


	)

9528 
	#USART_CR2_CLKEN_Pos
 (11U)

	)

9529 
	#USART_CR2_CLKEN_Msk
 (0x1UL << 
USART_CR2_CLKEN_Pos
Ë

	)

9530 
	#USART_CR2_CLKEN
 
USART_CR2_CLKEN_Msk


	)

9532 
	#USART_CR2_STOP_Pos
 (12U)

	)

9533 
	#USART_CR2_STOP_Msk
 (0x3UL << 
USART_CR2_STOP_Pos
Ë

	)

9534 
	#USART_CR2_STOP
 
USART_CR2_STOP_Msk


	)

9535 
	#USART_CR2_STOP_0
 (0x1UL << 
USART_CR2_STOP_Pos
Ë

	)

9536 
	#USART_CR2_STOP_1
 (0x2UL << 
USART_CR2_STOP_Pos
Ë

	)

9538 
	#USART_CR2_LINEN_Pos
 (14U)

	)

9539 
	#USART_CR2_LINEN_Msk
 (0x1UL << 
USART_CR2_LINEN_Pos
Ë

	)

9540 
	#USART_CR2_LINEN
 
USART_CR2_LINEN_Msk


	)

9543 
	#USART_CR3_EIE_Pos
 (0U)

	)

9544 
	#USART_CR3_EIE_Msk
 (0x1UL << 
USART_CR3_EIE_Pos
Ë

	)

9545 
	#USART_CR3_EIE
 
USART_CR3_EIE_Msk


	)

9546 
	#USART_CR3_IREN_Pos
 (1U)

	)

9547 
	#USART_CR3_IREN_Msk
 (0x1UL << 
USART_CR3_IREN_Pos
Ë

	)

9548 
	#USART_CR3_IREN
 
USART_CR3_IREN_Msk


	)

9549 
	#USART_CR3_IRLP_Pos
 (2U)

	)

9550 
	#USART_CR3_IRLP_Msk
 (0x1UL << 
USART_CR3_IRLP_Pos
Ë

	)

9551 
	#USART_CR3_IRLP
 
USART_CR3_IRLP_Msk


	)

9552 
	#USART_CR3_HDSEL_Pos
 (3U)

	)

9553 
	#USART_CR3_HDSEL_Msk
 (0x1UL << 
USART_CR3_HDSEL_Pos
Ë

	)

9554 
	#USART_CR3_HDSEL
 
USART_CR3_HDSEL_Msk


	)

9555 
	#USART_CR3_NACK_Pos
 (4U)

	)

9556 
	#USART_CR3_NACK_Msk
 (0x1UL << 
USART_CR3_NACK_Pos
Ë

	)

9557 
	#USART_CR3_NACK
 
USART_CR3_NACK_Msk


	)

9558 
	#USART_CR3_SCEN_Pos
 (5U)

	)

9559 
	#USART_CR3_SCEN_Msk
 (0x1UL << 
USART_CR3_SCEN_Pos
Ë

	)

9560 
	#USART_CR3_SCEN
 
USART_CR3_SCEN_Msk


	)

9561 
	#USART_CR3_DMAR_Pos
 (6U)

	)

9562 
	#USART_CR3_DMAR_Msk
 (0x1UL << 
USART_CR3_DMAR_Pos
Ë

	)

9563 
	#USART_CR3_DMAR
 
USART_CR3_DMAR_Msk


	)

9564 
	#USART_CR3_DMAT_Pos
 (7U)

	)

9565 
	#USART_CR3_DMAT_Msk
 (0x1UL << 
USART_CR3_DMAT_Pos
Ë

	)

9566 
	#USART_CR3_DMAT
 
USART_CR3_DMAT_Msk


	)

9567 
	#USART_CR3_RTSE_Pos
 (8U)

	)

9568 
	#USART_CR3_RTSE_Msk
 (0x1UL << 
USART_CR3_RTSE_Pos
Ë

	)

9569 
	#USART_CR3_RTSE
 
USART_CR3_RTSE_Msk


	)

9570 
	#USART_CR3_CTSE_Pos
 (9U)

	)

9571 
	#USART_CR3_CTSE_Msk
 (0x1UL << 
USART_CR3_CTSE_Pos
Ë

	)

9572 
	#USART_CR3_CTSE
 
USART_CR3_CTSE_Msk


	)

9573 
	#USART_CR3_CTSIE_Pos
 (10U)

	)

9574 
	#USART_CR3_CTSIE_Msk
 (0x1UL << 
USART_CR3_CTSIE_Pos
Ë

	)

9575 
	#USART_CR3_CTSIE
 
USART_CR3_CTSIE_Msk


	)

9578 
	#USART_GTPR_PSC_Pos
 (0U)

	)

9579 
	#USART_GTPR_PSC_Msk
 (0xFFUL << 
USART_GTPR_PSC_Pos
Ë

	)

9580 
	#USART_GTPR_PSC
 
USART_GTPR_PSC_Msk


	)

9581 
	#USART_GTPR_PSC_0
 (0x01UL << 
USART_GTPR_PSC_Pos
Ë

	)

9582 
	#USART_GTPR_PSC_1
 (0x02UL << 
USART_GTPR_PSC_Pos
Ë

	)

9583 
	#USART_GTPR_PSC_2
 (0x04UL << 
USART_GTPR_PSC_Pos
Ë

	)

9584 
	#USART_GTPR_PSC_3
 (0x08UL << 
USART_GTPR_PSC_Pos
Ë

	)

9585 
	#USART_GTPR_PSC_4
 (0x10UL << 
USART_GTPR_PSC_Pos
Ë

	)

9586 
	#USART_GTPR_PSC_5
 (0x20UL << 
USART_GTPR_PSC_Pos
Ë

	)

9587 
	#USART_GTPR_PSC_6
 (0x40UL << 
USART_GTPR_PSC_Pos
Ë

	)

9588 
	#USART_GTPR_PSC_7
 (0x80UL << 
USART_GTPR_PSC_Pos
Ë

	)

9590 
	#USART_GTPR_GT_Pos
 (8U)

	)

9591 
	#USART_GTPR_GT_Msk
 (0xFFUL << 
USART_GTPR_GT_Pos
Ë

	)

9592 
	#USART_GTPR_GT
 
USART_GTPR_GT_Msk


	)

9601 
	#DBGMCU_IDCODE_DEV_ID_Pos
 (0U)

	)

9602 
	#DBGMCU_IDCODE_DEV_ID_Msk
 (0xFFFUL << 
DBGMCU_IDCODE_DEV_ID_Pos
Ë

	)

9603 
	#DBGMCU_IDCODE_DEV_ID
 
DBGMCU_IDCODE_DEV_ID_Msk


	)

9605 
	#DBGMCU_IDCODE_REV_ID_Pos
 (16U)

	)

9606 
	#DBGMCU_IDCODE_REV_ID_Msk
 (0xFFFFUL << 
DBGMCU_IDCODE_REV_ID_Pos
Ë

	)

9607 
	#DBGMCU_IDCODE_REV_ID
 
DBGMCU_IDCODE_REV_ID_Msk


	)

9608 
	#DBGMCU_IDCODE_REV_ID_0
 (0x0001UL << 
DBGMCU_IDCODE_REV_ID_Pos
Ë

	)

9609 
	#DBGMCU_IDCODE_REV_ID_1
 (0x0002UL << 
DBGMCU_IDCODE_REV_ID_Pos
Ë

	)

9610 
	#DBGMCU_IDCODE_REV_ID_2
 (0x0004UL << 
DBGMCU_IDCODE_REV_ID_Pos
Ë

	)

9611 
	#DBGMCU_IDCODE_REV_ID_3
 (0x0008UL << 
DBGMCU_IDCODE_REV_ID_Pos
Ë

	)

9612 
	#DBGMCU_IDCODE_REV_ID_4
 (0x0010UL << 
DBGMCU_IDCODE_REV_ID_Pos
Ë

	)

9613 
	#DBGMCU_IDCODE_REV_ID_5
 (0x0020UL << 
DBGMCU_IDCODE_REV_ID_Pos
Ë

	)

9614 
	#DBGMCU_IDCODE_REV_ID_6
 (0x0040UL << 
DBGMCU_IDCODE_REV_ID_Pos
Ë

	)

9615 
	#DBGMCU_IDCODE_REV_ID_7
 (0x0080UL << 
DBGMCU_IDCODE_REV_ID_Pos
Ë

	)

9616 
	#DBGMCU_IDCODE_REV_ID_8
 (0x0100UL << 
DBGMCU_IDCODE_REV_ID_Pos
Ë

	)

9617 
	#DBGMCU_IDCODE_REV_ID_9
 (0x0200UL << 
DBGMCU_IDCODE_REV_ID_Pos
Ë

	)

9618 
	#DBGMCU_IDCODE_REV_ID_10
 (0x0400UL << 
DBGMCU_IDCODE_REV_ID_Pos
Ë

	)

9619 
	#DBGMCU_IDCODE_REV_ID_11
 (0x0800UL << 
DBGMCU_IDCODE_REV_ID_Pos
Ë

	)

9620 
	#DBGMCU_IDCODE_REV_ID_12
 (0x1000UL << 
DBGMCU_IDCODE_REV_ID_Pos
Ë

	)

9621 
	#DBGMCU_IDCODE_REV_ID_13
 (0x2000UL << 
DBGMCU_IDCODE_REV_ID_Pos
Ë

	)

9622 
	#DBGMCU_IDCODE_REV_ID_14
 (0x4000UL << 
DBGMCU_IDCODE_REV_ID_Pos
Ë

	)

9623 
	#DBGMCU_IDCODE_REV_ID_15
 (0x8000UL << 
DBGMCU_IDCODE_REV_ID_Pos
Ë

	)

9626 
	#DBGMCU_CR_DBG_SLEEP_Pos
 (0U)

	)

9627 
	#DBGMCU_CR_DBG_SLEEP_Msk
 (0x1UL << 
DBGMCU_CR_DBG_SLEEP_Pos
Ë

	)

9628 
	#DBGMCU_CR_DBG_SLEEP
 
DBGMCU_CR_DBG_SLEEP_Msk


	)

9629 
	#DBGMCU_CR_DBG_STOP_Pos
 (1U)

	)

9630 
	#DBGMCU_CR_DBG_STOP_Msk
 (0x1UL << 
DBGMCU_CR_DBG_STOP_Pos
Ë

	)

9631 
	#DBGMCU_CR_DBG_STOP
 
DBGMCU_CR_DBG_STOP_Msk


	)

9632 
	#DBGMCU_CR_DBG_STANDBY_Pos
 (2U)

	)

9633 
	#DBGMCU_CR_DBG_STANDBY_Msk
 (0x1UL << 
DBGMCU_CR_DBG_STANDBY_Pos
Ë

	)

9634 
	#DBGMCU_CR_DBG_STANDBY
 
DBGMCU_CR_DBG_STANDBY_Msk


	)

9635 
	#DBGMCU_CR_TRACE_IOEN_Pos
 (5U)

	)

9636 
	#DBGMCU_CR_TRACE_IOEN_Msk
 (0x1UL << 
DBGMCU_CR_TRACE_IOEN_Pos
Ë

	)

9637 
	#DBGMCU_CR_TRACE_IOEN
 
DBGMCU_CR_TRACE_IOEN_Msk


	)

9639 
	#DBGMCU_CR_TRACE_MODE_Pos
 (6U)

	)

9640 
	#DBGMCU_CR_TRACE_MODE_Msk
 (0x3UL << 
DBGMCU_CR_TRACE_MODE_Pos
Ë

	)

9641 
	#DBGMCU_CR_TRACE_MODE
 
DBGMCU_CR_TRACE_MODE_Msk


	)

9642 
	#DBGMCU_CR_TRACE_MODE_0
 (0x1UL << 
DBGMCU_CR_TRACE_MODE_Pos
Ë

	)

9643 
	#DBGMCU_CR_TRACE_MODE_1
 (0x2UL << 
DBGMCU_CR_TRACE_MODE_Pos
Ë

	)

9645 
	#DBGMCU_CR_DBG_IWDG_STOP_Pos
 (8U)

	)

9646 
	#DBGMCU_CR_DBG_IWDG_STOP_Msk
 (0x1UL << 
DBGMCU_CR_DBG_IWDG_STOP_Pos
Ë

	)

9647 
	#DBGMCU_CR_DBG_IWDG_STOP
 
DBGMCU_CR_DBG_IWDG_STOP_Msk


	)

9648 
	#DBGMCU_CR_DBG_WWDG_STOP_Pos
 (9U)

	)

9649 
	#DBGMCU_CR_DBG_WWDG_STOP_Msk
 (0x1UL << 
DBGMCU_CR_DBG_WWDG_STOP_Pos
Ë

	)

9650 
	#DBGMCU_CR_DBG_WWDG_STOP
 
DBGMCU_CR_DBG_WWDG_STOP_Msk


	)

9651 
	#DBGMCU_CR_DBG_TIM1_STOP_Pos
 (10U)

	)

9652 
	#DBGMCU_CR_DBG_TIM1_STOP_Msk
 (0x1UL << 
DBGMCU_CR_DBG_TIM1_STOP_Pos
Ë

	)

9653 
	#DBGMCU_CR_DBG_TIM1_STOP
 
DBGMCU_CR_DBG_TIM1_STOP_Msk


	)

9654 
	#DBGMCU_CR_DBG_TIM2_STOP_Pos
 (11U)

	)

9655 
	#DBGMCU_CR_DBG_TIM2_STOP_Msk
 (0x1UL << 
DBGMCU_CR_DBG_TIM2_STOP_Pos
Ë

	)

9656 
	#DBGMCU_CR_DBG_TIM2_STOP
 
DBGMCU_CR_DBG_TIM2_STOP_Msk


	)

9657 
	#DBGMCU_CR_DBG_TIM3_STOP_Pos
 (12U)

	)

9658 
	#DBGMCU_CR_DBG_TIM3_STOP_Msk
 (0x1UL << 
DBGMCU_CR_DBG_TIM3_STOP_Pos
Ë

	)

9659 
	#DBGMCU_CR_DBG_TIM3_STOP
 
DBGMCU_CR_DBG_TIM3_STOP_Msk


	)

9660 
	#DBGMCU_CR_DBG_TIM4_STOP_Pos
 (13U)

	)

9661 
	#DBGMCU_CR_DBG_TIM4_STOP_Msk
 (0x1UL << 
DBGMCU_CR_DBG_TIM4_STOP_Pos
Ë

	)

9662 
	#DBGMCU_CR_DBG_TIM4_STOP
 
DBGMCU_CR_DBG_TIM4_STOP_Msk


	)

9663 
	#DBGMCU_CR_DBG_CAN1_STOP_Pos
 (14U)

	)

9664 
	#DBGMCU_CR_DBG_CAN1_STOP_Msk
 (0x1UL << 
DBGMCU_CR_DBG_CAN1_STOP_Pos
Ë

	)

9665 
	#DBGMCU_CR_DBG_CAN1_STOP
 
DBGMCU_CR_DBG_CAN1_STOP_Msk


	)

9666 
	#DBGMCU_CR_DBG_I2C1_SMBUS_TIMEOUT_Pos
 (15U)

	)

9667 
	#DBGMCU_CR_DBG_I2C1_SMBUS_TIMEOUT_Msk
 (0x1UL << 
DBGMCU_CR_DBG_I2C1_SMBUS_TIMEOUT_Pos
Ë

	)

9668 
	#DBGMCU_CR_DBG_I2C1_SMBUS_TIMEOUT
 
DBGMCU_CR_DBG_I2C1_SMBUS_TIMEOUT_Msk


	)

9669 
	#DBGMCU_CR_DBG_I2C2_SMBUS_TIMEOUT_Pos
 (16U)

	)

9670 
	#DBGMCU_CR_DBG_I2C2_SMBUS_TIMEOUT_Msk
 (0x1UL << 
DBGMCU_CR_DBG_I2C2_SMBUS_TIMEOUT_Pos
Ë

	)

9671 
	#DBGMCU_CR_DBG_I2C2_SMBUS_TIMEOUT
 
DBGMCU_CR_DBG_I2C2_SMBUS_TIMEOUT_Msk


	)

9679 
	#FLASH_ACR_LATENCY_Pos
 (0U)

	)

9680 
	#FLASH_ACR_LATENCY_Msk
 (0x7UL << 
FLASH_ACR_LATENCY_Pos
Ë

	)

9681 
	#FLASH_ACR_LATENCY
 
FLASH_ACR_LATENCY_Msk


	)

9682 
	#FLASH_ACR_LATENCY_0
 (0x1UL << 
FLASH_ACR_LATENCY_Pos
Ë

	)

9683 
	#FLASH_ACR_LATENCY_1
 (0x2UL << 
FLASH_ACR_LATENCY_Pos
Ë

	)

9684 
	#FLASH_ACR_LATENCY_2
 (0x4UL << 
FLASH_ACR_LATENCY_Pos
Ë

	)

9686 
	#FLASH_ACR_HLFCYA_Pos
 (3U)

	)

9687 
	#FLASH_ACR_HLFCYA_Msk
 (0x1UL << 
FLASH_ACR_HLFCYA_Pos
Ë

	)

9688 
	#FLASH_ACR_HLFCYA
 
FLASH_ACR_HLFCYA_Msk


	)

9689 
	#FLASH_ACR_PRFTBE_Pos
 (4U)

	)

9690 
	#FLASH_ACR_PRFTBE_Msk
 (0x1UL << 
FLASH_ACR_PRFTBE_Pos
Ë

	)

9691 
	#FLASH_ACR_PRFTBE
 
FLASH_ACR_PRFTBE_Msk


	)

9692 
	#FLASH_ACR_PRFTBS_Pos
 (5U)

	)

9693 
	#FLASH_ACR_PRFTBS_Msk
 (0x1UL << 
FLASH_ACR_PRFTBS_Pos
Ë

	)

9694 
	#FLASH_ACR_PRFTBS
 
FLASH_ACR_PRFTBS_Msk


	)

9697 
	#FLASH_KEYR_FKEYR_Pos
 (0U)

	)

9698 
	#FLASH_KEYR_FKEYR_Msk
 (0xFFFFFFFFUL << 
FLASH_KEYR_FKEYR_Pos
Ë

	)

9699 
	#FLASH_KEYR_FKEYR
 
FLASH_KEYR_FKEYR_Msk


	)

9701 
	#RDP_KEY_Pos
 (0U)

	)

9702 
	#RDP_KEY_Msk
 (0xA5UL << 
RDP_KEY_Pos
Ë

	)

9703 
	#RDP_KEY
 
RDP_KEY_Msk


	)

9704 
	#FLASH_KEY1_Pos
 (0U)

	)

9705 
	#FLASH_KEY1_Msk
 (0x45670123UL << 
FLASH_KEY1_Pos
Ë

	)

9706 
	#FLASH_KEY1
 
FLASH_KEY1_Msk


	)

9707 
	#FLASH_KEY2_Pos
 (0U)

	)

9708 
	#FLASH_KEY2_Msk
 (0xCDEF89ABUL << 
FLASH_KEY2_Pos
Ë

	)

9709 
	#FLASH_KEY2
 
FLASH_KEY2_Msk


	)

9712 
	#FLASH_OPTKEYR_OPTKEYR_Pos
 (0U)

	)

9713 
	#FLASH_OPTKEYR_OPTKEYR_Msk
 (0xFFFFFFFFUL << 
FLASH_OPTKEYR_OPTKEYR_Pos
Ë

	)

9714 
	#FLASH_OPTKEYR_OPTKEYR
 
FLASH_OPTKEYR_OPTKEYR_Msk


	)

9716 
	#FLASH_OPTKEY1
 
FLASH_KEY1


	)

9717 
	#FLASH_OPTKEY2
 
FLASH_KEY2


	)

9720 
	#FLASH_SR_BSY_Pos
 (0U)

	)

9721 
	#FLASH_SR_BSY_Msk
 (0x1UL << 
FLASH_SR_BSY_Pos
Ë

	)

9722 
	#FLASH_SR_BSY
 
FLASH_SR_BSY_Msk


	)

9723 
	#FLASH_SR_PGERR_Pos
 (2U)

	)

9724 
	#FLASH_SR_PGERR_Msk
 (0x1UL << 
FLASH_SR_PGERR_Pos
Ë

	)

9725 
	#FLASH_SR_PGERR
 
FLASH_SR_PGERR_Msk


	)

9726 
	#FLASH_SR_WRPRTERR_Pos
 (4U)

	)

9727 
	#FLASH_SR_WRPRTERR_Msk
 (0x1UL << 
FLASH_SR_WRPRTERR_Pos
Ë

	)

9728 
	#FLASH_SR_WRPRTERR
 
FLASH_SR_WRPRTERR_Msk


	)

9729 
	#FLASH_SR_EOP_Pos
 (5U)

	)

9730 
	#FLASH_SR_EOP_Msk
 (0x1UL << 
FLASH_SR_EOP_Pos
Ë

	)

9731 
	#FLASH_SR_EOP
 
FLASH_SR_EOP_Msk


	)

9734 
	#FLASH_CR_PG_Pos
 (0U)

	)

9735 
	#FLASH_CR_PG_Msk
 (0x1UL << 
FLASH_CR_PG_Pos
Ë

	)

9736 
	#FLASH_CR_PG
 
FLASH_CR_PG_Msk


	)

9737 
	#FLASH_CR_PER_Pos
 (1U)

	)

9738 
	#FLASH_CR_PER_Msk
 (0x1UL << 
FLASH_CR_PER_Pos
Ë

	)

9739 
	#FLASH_CR_PER
 
FLASH_CR_PER_Msk


	)

9740 
	#FLASH_CR_MER_Pos
 (2U)

	)

9741 
	#FLASH_CR_MER_Msk
 (0x1UL << 
FLASH_CR_MER_Pos
Ë

	)

9742 
	#FLASH_CR_MER
 
FLASH_CR_MER_Msk


	)

9743 
	#FLASH_CR_OPTPG_Pos
 (4U)

	)

9744 
	#FLASH_CR_OPTPG_Msk
 (0x1UL << 
FLASH_CR_OPTPG_Pos
Ë

	)

9745 
	#FLASH_CR_OPTPG
 
FLASH_CR_OPTPG_Msk


	)

9746 
	#FLASH_CR_OPTER_Pos
 (5U)

	)

9747 
	#FLASH_CR_OPTER_Msk
 (0x1UL << 
FLASH_CR_OPTER_Pos
Ë

	)

9748 
	#FLASH_CR_OPTER
 
FLASH_CR_OPTER_Msk


	)

9749 
	#FLASH_CR_STRT_Pos
 (6U)

	)

9750 
	#FLASH_CR_STRT_Msk
 (0x1UL << 
FLASH_CR_STRT_Pos
Ë

	)

9751 
	#FLASH_CR_STRT
 
FLASH_CR_STRT_Msk


	)

9752 
	#FLASH_CR_LOCK_Pos
 (7U)

	)

9753 
	#FLASH_CR_LOCK_Msk
 (0x1UL << 
FLASH_CR_LOCK_Pos
Ë

	)

9754 
	#FLASH_CR_LOCK
 
FLASH_CR_LOCK_Msk


	)

9755 
	#FLASH_CR_OPTWRE_Pos
 (9U)

	)

9756 
	#FLASH_CR_OPTWRE_Msk
 (0x1UL << 
FLASH_CR_OPTWRE_Pos
Ë

	)

9757 
	#FLASH_CR_OPTWRE
 
FLASH_CR_OPTWRE_Msk


	)

9758 
	#FLASH_CR_ERRIE_Pos
 (10U)

	)

9759 
	#FLASH_CR_ERRIE_Msk
 (0x1UL << 
FLASH_CR_ERRIE_Pos
Ë

	)

9760 
	#FLASH_CR_ERRIE
 
FLASH_CR_ERRIE_Msk


	)

9761 
	#FLASH_CR_EOPIE_Pos
 (12U)

	)

9762 
	#FLASH_CR_EOPIE_Msk
 (0x1UL << 
FLASH_CR_EOPIE_Pos
Ë

	)

9763 
	#FLASH_CR_EOPIE
 
FLASH_CR_EOPIE_Msk


	)

9766 
	#FLASH_AR_FAR_Pos
 (0U)

	)

9767 
	#FLASH_AR_FAR_Msk
 (0xFFFFFFFFUL << 
FLASH_AR_FAR_Pos
Ë

	)

9768 
	#FLASH_AR_FAR
 
FLASH_AR_FAR_Msk


	)

9771 
	#FLASH_OBR_OPTERR_Pos
 (0U)

	)

9772 
	#FLASH_OBR_OPTERR_Msk
 (0x1UL << 
FLASH_OBR_OPTERR_Pos
Ë

	)

9773 
	#FLASH_OBR_OPTERR
 
FLASH_OBR_OPTERR_Msk


	)

9774 
	#FLASH_OBR_RDPRT_Pos
 (1U)

	)

9775 
	#FLASH_OBR_RDPRT_Msk
 (0x1UL << 
FLASH_OBR_RDPRT_Pos
Ë

	)

9776 
	#FLASH_OBR_RDPRT
 
FLASH_OBR_RDPRT_Msk


	)

9778 
	#FLASH_OBR_IWDG_SW_Pos
 (2U)

	)

9779 
	#FLASH_OBR_IWDG_SW_Msk
 (0x1UL << 
FLASH_OBR_IWDG_SW_Pos
Ë

	)

9780 
	#FLASH_OBR_IWDG_SW
 
FLASH_OBR_IWDG_SW_Msk


	)

9781 
	#FLASH_OBR_nRST_STOP_Pos
 (3U)

	)

9782 
	#FLASH_OBR_nRST_STOP_Msk
 (0x1UL << 
FLASH_OBR_nRST_STOP_Pos
Ë

	)

9783 
	#FLASH_OBR_nRST_STOP
 
FLASH_OBR_nRST_STOP_Msk


	)

9784 
	#FLASH_OBR_nRST_STDBY_Pos
 (4U)

	)

9785 
	#FLASH_OBR_nRST_STDBY_Msk
 (0x1UL << 
FLASH_OBR_nRST_STDBY_Pos
Ë

	)

9786 
	#FLASH_OBR_nRST_STDBY
 
FLASH_OBR_nRST_STDBY_Msk


	)

9787 
	#FLASH_OBR_USER_Pos
 (2U)

	)

9788 
	#FLASH_OBR_USER_Msk
 (0x7UL << 
FLASH_OBR_USER_Pos
Ë

	)

9789 
	#FLASH_OBR_USER
 
FLASH_OBR_USER_Msk


	)

9790 
	#FLASH_OBR_DATA0_Pos
 (10U)

	)

9791 
	#FLASH_OBR_DATA0_Msk
 (0xFFUL << 
FLASH_OBR_DATA0_Pos
Ë

	)

9792 
	#FLASH_OBR_DATA0
 
FLASH_OBR_DATA0_Msk


	)

9793 
	#FLASH_OBR_DATA1_Pos
 (18U)

	)

9794 
	#FLASH_OBR_DATA1_Msk
 (0xFFUL << 
FLASH_OBR_DATA1_Pos
Ë

	)

9795 
	#FLASH_OBR_DATA1
 
FLASH_OBR_DATA1_Msk


	)

9798 
	#FLASH_WRPR_WRP_Pos
 (0U)

	)

9799 
	#FLASH_WRPR_WRP_Msk
 (0xFFFFFFFFUL << 
FLASH_WRPR_WRP_Pos
Ë

	)

9800 
	#FLASH_WRPR_WRP
 
FLASH_WRPR_WRP_Msk


	)

9805 
	#FLASH_RDP_RDP_Pos
 (0U)

	)

9806 
	#FLASH_RDP_RDP_Msk
 (0xFFUL << 
FLASH_RDP_RDP_Pos
Ë

	)

9807 
	#FLASH_RDP_RDP
 
FLASH_RDP_RDP_Msk


	)

9808 
	#FLASH_RDP_nRDP_Pos
 (8U)

	)

9809 
	#FLASH_RDP_nRDP_Msk
 (0xFFUL << 
FLASH_RDP_nRDP_Pos
Ë

	)

9810 
	#FLASH_RDP_nRDP
 
FLASH_RDP_nRDP_Msk


	)

9813 
	#FLASH_USER_USER_Pos
 (16U)

	)

9814 
	#FLASH_USER_USER_Msk
 (0xFFUL << 
FLASH_USER_USER_Pos
Ë

	)

9815 
	#FLASH_USER_USER
 
FLASH_USER_USER_Msk


	)

9816 
	#FLASH_USER_nUSER_Pos
 (24U)

	)

9817 
	#FLASH_USER_nUSER_Msk
 (0xFFUL << 
FLASH_USER_nUSER_Pos
Ë

	)

9818 
	#FLASH_USER_nUSER
 
FLASH_USER_nUSER_Msk


	)

9821 
	#FLASH_DATA0_DATA0_Pos
 (0U)

	)

9822 
	#FLASH_DATA0_DATA0_Msk
 (0xFFUL << 
FLASH_DATA0_DATA0_Pos
Ë

	)

9823 
	#FLASH_DATA0_DATA0
 
FLASH_DATA0_DATA0_Msk


	)

9824 
	#FLASH_DATA0_nDATA0_Pos
 (8U)

	)

9825 
	#FLASH_DATA0_nDATA0_Msk
 (0xFFUL << 
FLASH_DATA0_nDATA0_Pos
Ë

	)

9826 
	#FLASH_DATA0_nDATA0
 
FLASH_DATA0_nDATA0_Msk


	)

9829 
	#FLASH_DATA1_DATA1_Pos
 (16U)

	)

9830 
	#FLASH_DATA1_DATA1_Msk
 (0xFFUL << 
FLASH_DATA1_DATA1_Pos
Ë

	)

9831 
	#FLASH_DATA1_DATA1
 
FLASH_DATA1_DATA1_Msk


	)

9832 
	#FLASH_DATA1_nDATA1_Pos
 (24U)

	)

9833 
	#FLASH_DATA1_nDATA1_Msk
 (0xFFUL << 
FLASH_DATA1_nDATA1_Pos
Ë

	)

9834 
	#FLASH_DATA1_nDATA1
 
FLASH_DATA1_nDATA1_Msk


	)

9837 
	#FLASH_WRP0_WRP0_Pos
 (0U)

	)

9838 
	#FLASH_WRP0_WRP0_Msk
 (0xFFUL << 
FLASH_WRP0_WRP0_Pos
Ë

	)

9839 
	#FLASH_WRP0_WRP0
 
FLASH_WRP0_WRP0_Msk


	)

9840 
	#FLASH_WRP0_nWRP0_Pos
 (8U)

	)

9841 
	#FLASH_WRP0_nWRP0_Msk
 (0xFFUL << 
FLASH_WRP0_nWRP0_Pos
Ë

	)

9842 
	#FLASH_WRP0_nWRP0
 
FLASH_WRP0_nWRP0_Msk


	)

9845 
	#FLASH_WRP1_WRP1_Pos
 (16U)

	)

9846 
	#FLASH_WRP1_WRP1_Msk
 (0xFFUL << 
FLASH_WRP1_WRP1_Pos
Ë

	)

9847 
	#FLASH_WRP1_WRP1
 
FLASH_WRP1_WRP1_Msk


	)

9848 
	#FLASH_WRP1_nWRP1_Pos
 (24U)

	)

9849 
	#FLASH_WRP1_nWRP1_Msk
 (0xFFUL << 
FLASH_WRP1_nWRP1_Pos
Ë

	)

9850 
	#FLASH_WRP1_nWRP1
 
FLASH_WRP1_nWRP1_Msk


	)

9853 
	#FLASH_WRP2_WRP2_Pos
 (0U)

	)

9854 
	#FLASH_WRP2_WRP2_Msk
 (0xFFUL << 
FLASH_WRP2_WRP2_Pos
Ë

	)

9855 
	#FLASH_WRP2_WRP2
 
FLASH_WRP2_WRP2_Msk


	)

9856 
	#FLASH_WRP2_nWRP2_Pos
 (8U)

	)

9857 
	#FLASH_WRP2_nWRP2_Msk
 (0xFFUL << 
FLASH_WRP2_nWRP2_Pos
Ë

	)

9858 
	#FLASH_WRP2_nWRP2
 
FLASH_WRP2_nWRP2_Msk


	)

9861 
	#FLASH_WRP3_WRP3_Pos
 (16U)

	)

9862 
	#FLASH_WRP3_WRP3_Msk
 (0xFFUL << 
FLASH_WRP3_WRP3_Pos
Ë

	)

9863 
	#FLASH_WRP3_WRP3
 
FLASH_WRP3_WRP3_Msk


	)

9864 
	#FLASH_WRP3_nWRP3_Pos
 (24U)

	)

9865 
	#FLASH_WRP3_nWRP3_Msk
 (0xFFUL << 
FLASH_WRP3_nWRP3_Pos
Ë

	)

9866 
	#FLASH_WRP3_nWRP3
 
FLASH_WRP3_nWRP3_Msk


	)

9883 
	#IS_ADC_ALL_INSTANCE
(
INSTANCE
Ë(((INSTANCEË=
ADC1
) || \

9884 ((
INSTANCE
Ë=
ADC2
))

	)

9886 
	#IS_ADC_COMMON_INSTANCE
(
INSTANCE
Ë((INSTANCEË=
ADC12_COMMON
)

	)

9888 
	#IS_ADC_MULTIMODE_MASTER_INSTANCE
(
INSTANCE
Ë((INSTANCEË=
ADC1
)

	)

9890 
	#IS_ADC_DMA_CAPABILITY_INSTANCE
(
INSTANCE
Ë((INSTANCEË=
ADC1
)

	)

9893 
	#IS_CAN_ALL_INSTANCE
(
INSTANCE
Ë((INSTANCEË=
CAN1
)

	)

9896 
	#IS_CRC_ALL_INSTANCE
(
INSTANCE
Ë((INSTANCEË=
CRC
)

	)

9901 
	#IS_DMA_ALL_INSTANCE
(
INSTANCE
Ë(((INSTANCEË=
DMA1_Ch™√l1
) || \

9902 ((
INSTANCE
Ë=
DMA1_Ch™√l2
) || \

9903 ((
INSTANCE
Ë=
DMA1_Ch™√l3
) || \

9904 ((
INSTANCE
Ë=
DMA1_Ch™√l4
) || \

9905 ((
INSTANCE
Ë=
DMA1_Ch™√l5
) || \

9906 ((
INSTANCE
Ë=
DMA1_Ch™√l6
) || \

9907 ((
INSTANCE
Ë=
DMA1_Ch™√l7
))

	)

9910 
	#IS_GPIO_ALL_INSTANCE
(
INSTANCE
Ë(((INSTANCEË=
GPIOA
) || \

9911 ((
INSTANCE
Ë=
GPIOB
) || \

9912 ((
INSTANCE
Ë=
GPIOC
) || \

9913 ((
INSTANCE
Ë=
GPIOD
) || \

9914 ((
INSTANCE
Ë=
GPIOE
))

	)

9917 
	#IS_GPIO_AF_INSTANCE
(
INSTANCE
Ë
	`IS_GPIO_ALL_INSTANCE
(INSTANCE)

	)

9920 
	#IS_GPIO_LOCK_INSTANCE
(
INSTANCE
Ë
	`IS_GPIO_ALL_INSTANCE
(INSTANCE)

	)

9923 
	#IS_I2C_ALL_INSTANCE
(
INSTANCE
Ë(((INSTANCEË=
I2C1
) || \

9924 ((
INSTANCE
Ë=
I2C2
))

	)

9927 
	#IS_SMBUS_ALL_INSTANCE
 
IS_I2C_ALL_INSTANCE


	)

9930 
	#IS_IWDG_ALL_INSTANCE
(
INSTANCE
Ë((INSTANCEË=
IWDG
)

	)

9933 
	#IS_SPI_ALL_INSTANCE
(
INSTANCE
Ë(((INSTANCEË=
SPI1
) || \

9934 ((
INSTANCE
Ë=
SPI2
))

	)

9938 
	#IS_TIM_INSTANCE
(
INSTANCE
)\

9939 (((
INSTANCE
Ë=
TIM1
) || \

9940 ((
INSTANCE
Ë=
TIM2
) || \

9941 ((
INSTANCE
Ë=
TIM3
) || \

9942 ((
INSTANCE
Ë=
TIM4
))

	)

9944 
	#IS_TIM_ADVANCED_INSTANCE
(
INSTANCE
Ë((INSTANCEË=
TIM1
)

	)

9946 
	#IS_TIM_CC1_INSTANCE
(
INSTANCE
)\

9947 (((
INSTANCE
Ë=
TIM1
) || \

9948 ((
INSTANCE
Ë=
TIM2
) || \

9949 ((
INSTANCE
Ë=
TIM3
) || \

9950 ((
INSTANCE
Ë=
TIM4
))

	)

9952 
	#IS_TIM_CC2_INSTANCE
(
INSTANCE
)\

9953 (((
INSTANCE
Ë=
TIM1
) || \

9954 ((
INSTANCE
Ë=
TIM2
) || \

9955 ((
INSTANCE
Ë=
TIM3
) || \

9956 ((
INSTANCE
Ë=
TIM4
))

	)

9958 
	#IS_TIM_CC3_INSTANCE
(
INSTANCE
)\

9959 (((
INSTANCE
Ë=
TIM1
) || \

9960 ((
INSTANCE
Ë=
TIM2
) || \

9961 ((
INSTANCE
Ë=
TIM3
) || \

9962 ((
INSTANCE
Ë=
TIM4
))

	)

9964 
	#IS_TIM_CC4_INSTANCE
(
INSTANCE
)\

9965 (((
INSTANCE
Ë=
TIM1
) || \

9966 ((
INSTANCE
Ë=
TIM2
) || \

9967 ((
INSTANCE
Ë=
TIM3
) || \

9968 ((
INSTANCE
Ë=
TIM4
))

	)

9970 
	#IS_TIM_CLOCKSOURCE_ETRMODE1_INSTANCE
(
INSTANCE
)\

9971 (((
INSTANCE
Ë=
TIM1
) || \

9972 ((
INSTANCE
Ë=
TIM2
) || \

9973 ((
INSTANCE
Ë=
TIM3
) || \

9974 ((
INSTANCE
Ë=
TIM4
))

	)

9976 
	#IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE
(
INSTANCE
)\

9977 (((
INSTANCE
Ë=
TIM1
) || \

9978 ((
INSTANCE
Ë=
TIM2
) || \

9979 ((
INSTANCE
Ë=
TIM3
) || \

9980 ((
INSTANCE
Ë=
TIM4
))

	)

9982 
	#IS_TIM_CLOCKSOURCE_TIX_INSTANCE
(
INSTANCE
)\

9983 (((
INSTANCE
Ë=
TIM1
) || \

9984 ((
INSTANCE
Ë=
TIM2
) || \

9985 ((
INSTANCE
Ë=
TIM3
) || \

9986 ((
INSTANCE
Ë=
TIM4
))

	)

9988 
	#IS_TIM_CLOCKSOURCE_ITRX_INSTANCE
(
INSTANCE
)\

9989 (((
INSTANCE
Ë=
TIM1
) || \

9990 ((
INSTANCE
Ë=
TIM2
) || \

9991 ((
INSTANCE
Ë=
TIM3
) || \

9992 ((
INSTANCE
Ë=
TIM4
))

	)

9994 
	#IS_TIM_OCXREF_CLEAR_INSTANCE
(
INSTANCE
)\

9995 (((
INSTANCE
Ë=
TIM1
) || \

9996 ((
INSTANCE
Ë=
TIM2
) || \

9997 ((
INSTANCE
Ë=
TIM3
) || \

9998 ((
INSTANCE
Ë=
TIM4
))

	)

10000 
	#IS_TIM_ENCODER_INTERFACE_INSTANCE
(
INSTANCE
)\

10001 (((
INSTANCE
Ë=
TIM1
) || \

10002 ((
INSTANCE
Ë=
TIM2
) || \

10003 ((
INSTANCE
Ë=
TIM3
) || \

10004 ((
INSTANCE
Ë=
TIM4
))

	)

10006 
	#IS_TIM_XOR_INSTANCE
(
INSTANCE
)\

10007 (((
INSTANCE
Ë=
TIM1
) || \

10008 ((
INSTANCE
Ë=
TIM2
) || \

10009 ((
INSTANCE
Ë=
TIM3
) || \

10010 ((
INSTANCE
Ë=
TIM4
))

	)

10012 
	#IS_TIM_MASTER_INSTANCE
(
INSTANCE
)\

10013 (((
INSTANCE
Ë=
TIM1
) || \

10014 ((
INSTANCE
Ë=
TIM2
) || \

10015 ((
INSTANCE
Ë=
TIM3
) || \

10016 ((
INSTANCE
Ë=
TIM4
))

	)

10018 
	#IS_TIM_SLAVE_INSTANCE
(
INSTANCE
)\

10019 (((
INSTANCE
Ë=
TIM1
) || \

10020 ((
INSTANCE
Ë=
TIM2
) || \

10021 ((
INSTANCE
Ë=
TIM3
) || \

10022 ((
INSTANCE
Ë=
TIM4
))

	)

10024 
	#IS_TIM_SYNCHRO_INSTANCE
(
INSTANCE
Ë
	`IS_TIM_MASTER_INSTANCE
(INSTANCE)

	)

10026 
	#IS_TIM_DMABURST_INSTANCE
(
INSTANCE
)\

10027 (((
INSTANCE
Ë=
TIM1
) || \

10028 ((
INSTANCE
Ë=
TIM2
) || \

10029 ((
INSTANCE
Ë=
TIM3
) || \

10030 ((
INSTANCE
Ë=
TIM4
))

	)

10032 
	#IS_TIM_BREAK_INSTANCE
(
INSTANCE
)\

10033 ((
INSTANCE
Ë=
TIM1
)

	)

10035 
	#IS_TIM_CCX_INSTANCE
(
INSTANCE
, 
CHANNEL
) \

10036 ((((
INSTANCE
Ë=
TIM1
) && \

10037 (((
CHANNEL
Ë=
TIM_CHANNEL_1
) || \

10038 ((
CHANNEL
Ë=
TIM_CHANNEL_2
) || \

10039 ((
CHANNEL
Ë=
TIM_CHANNEL_3
) || \

10040 ((
CHANNEL
Ë=
TIM_CHANNEL_4
))) \

10042 (((
INSTANCE
Ë=
TIM2
) && \

10043 (((
CHANNEL
Ë=
TIM_CHANNEL_1
) || \

10044 ((
CHANNEL
Ë=
TIM_CHANNEL_2
) || \

10045 ((
CHANNEL
Ë=
TIM_CHANNEL_3
) || \

10046 ((
CHANNEL
Ë=
TIM_CHANNEL_4
))) \

10048 (((
INSTANCE
Ë=
TIM3
) && \

10049 (((
CHANNEL
Ë=
TIM_CHANNEL_1
) || \

10050 ((
CHANNEL
Ë=
TIM_CHANNEL_2
) || \

10051 ((
CHANNEL
Ë=
TIM_CHANNEL_3
) || \

10052 ((
CHANNEL
Ë=
TIM_CHANNEL_4
))) \

10054 (((
INSTANCE
Ë=
TIM4
) && \

10055 (((
CHANNEL
Ë=
TIM_CHANNEL_1
) || \

10056 ((
CHANNEL
Ë=
TIM_CHANNEL_2
) || \

10057 ((
CHANNEL
Ë=
TIM_CHANNEL_3
) || \

10058 ((
CHANNEL
Ë=
TIM_CHANNEL_4
))))

	)

10060 
	#IS_TIM_CCXN_INSTANCE
(
INSTANCE
, 
CHANNEL
) \

10061 (((
INSTANCE
Ë=
TIM1
) && \

10062 (((
CHANNEL
Ë=
TIM_CHANNEL_1
) || \

10063 ((
CHANNEL
Ë=
TIM_CHANNEL_2
) || \

10064 ((
CHANNEL
Ë=
TIM_CHANNEL_3
)))

	)

10066 
	#IS_TIM_COUNTER_MODE_SELECT_INSTANCE
(
INSTANCE
)\

10067 (((
INSTANCE
Ë=
TIM1
) || \

10068 ((
INSTANCE
Ë=
TIM2
) || \

10069 ((
INSTANCE
Ë=
TIM3
) || \

10070 ((
INSTANCE
Ë=
TIM4
))

	)

10072 
	#IS_TIM_REPETITION_COUNTER_INSTANCE
(
INSTANCE
)\

10073 ((
INSTANCE
Ë=
TIM1
)

	)

10075 
	#IS_TIM_CLOCK_DIVISION_INSTANCE
(
INSTANCE
)\

10076 (((
INSTANCE
Ë=
TIM1
) || \

10077 ((
INSTANCE
Ë=
TIM2
) || \

10078 ((
INSTANCE
Ë=
TIM3
) || \

10079 ((
INSTANCE
Ë=
TIM4
))

	)

10081 
	#IS_TIM_DMA_INSTANCE
(
INSTANCE
)\

10082 (((
INSTANCE
Ë=
TIM1
) || \

10083 ((
INSTANCE
Ë=
TIM2
) || \

10084 ((
INSTANCE
Ë=
TIM3
) || \

10085 ((
INSTANCE
Ë=
TIM4
))

	)

10087 
	#IS_TIM_DMA_CC_INSTANCE
(
INSTANCE
)\

10088 (((
INSTANCE
Ë=
TIM1
) || \

10089 ((
INSTANCE
Ë=
TIM2
) || \

10090 ((
INSTANCE
Ë=
TIM3
) || \

10091 ((
INSTANCE
Ë=
TIM4
))

	)

10093 
	#IS_TIM_COMMUTATION_EVENT_INSTANCE
(
INSTANCE
)\

10094 ((
INSTANCE
Ë=
TIM1
)

	)

10096 
	#IS_TIM_ETR_INSTANCE
(
INSTANCE
Ë(((INSTANCEË=
TIM1
) || \

10097 ((
INSTANCE
Ë=
TIM2
) || \

10098 ((
INSTANCE
Ë=
TIM3
) || \

10099 ((
INSTANCE
Ë=
TIM4
))

	)

10101 
	#IS_TIM_HALL_SENSOR_INTERFACE_INSTANCE
(
INSTANCE
Ë(((INSTANCEË=
TIM1
) || \

10102 ((
INSTANCE
Ë=
TIM2
) || \

10103 ((
INSTANCE
Ë=
TIM3
) || \

10104 ((
INSTANCE
Ë=
TIM4
))

	)

10106 
	#IS_TIM_32B_COUNTER_INSTANCE
(
INSTANCE
Ë0U

	)

10112 
	#IS_USART_INSTANCE
(
INSTANCE
Ë(((INSTANCEË=
USART1
) || \

10113 ((
INSTANCE
Ë=
USART2
) || \

10114 ((
INSTANCE
Ë=
USART3
))

	)

10117 
	#IS_UART_INSTANCE
(
INSTANCE
Ë(((INSTANCEË=
USART1
) || \

10118 ((
INSTANCE
Ë=
USART2
) || \

10119 ((
INSTANCE
Ë=
USART3
))

	)

10122 
	#IS_UART_HALFDUPLEX_INSTANCE
(
INSTANCE
Ë(((INSTANCEË=
USART1
) || \

10123 ((
INSTANCE
Ë=
USART2
) || \

10124 ((
INSTANCE
Ë=
USART3
))

	)

10127 
	#IS_UART_LIN_INSTANCE
(
INSTANCE
Ë(((INSTANCEË=
USART1
) || \

10128 ((
INSTANCE
Ë=
USART2
) || \

10129 ((
INSTANCE
Ë=
USART3
))

	)

10132 
	#IS_UART_HWFLOW_INSTANCE
(
INSTANCE
Ë(((INSTANCEË=
USART1
) || \

10133 ((
INSTANCE
Ë=
USART2
) || \

10134 ((
INSTANCE
Ë=
USART3
))

	)

10137 
	#IS_SMARTCARD_INSTANCE
(
INSTANCE
Ë(((INSTANCEË=
USART1
) || \

10138 ((
INSTANCE
Ë=
USART2
) || \

10139 ((
INSTANCE
Ë=
USART3
))

	)

10142 
	#IS_IRDA_INSTANCE
(
INSTANCE
Ë(((INSTANCEË=
USART1
) || \

10143 ((
INSTANCE
Ë=
USART2
) || \

10144 ((
INSTANCE
Ë=
USART3
))

	)

10147 
	#IS_UART_MULTIPROCESSOR_INSTANCE
(
INSTANCE
Ë(((INSTANCEË=
USART1
) || \

10148 ((
INSTANCE
Ë=
USART2
) || \

10149 ((
INSTANCE
Ë=
USART3
))

	)

10152 
	#IS_UART_DMA_INSTANCE
(
INSTANCE
Ë(((INSTANCEË=
USART1
) || \

10153 ((
INSTANCE
Ë=
USART2
) || \

10154 ((
INSTANCE
Ë=
USART3
))

	)

10157 
	#IS_RTC_ALL_INSTANCE
(
INSTANCE
Ë((INSTANCEË=
RTC
)

	)

10160 
	#IS_WWDG_ALL_INSTANCE
(
INSTANCE
Ë((INSTANCEË=
WWDG
)

	)

10163 
	#IS_PCD_ALL_INSTANCE
(
INSTANCE
Ë((INSTANCEË=
USB
)

	)

10167 
	#RCC_HSE_MIN
 4000000U

	)

10168 
	#RCC_HSE_MAX
 16000000U

	)

10170 
	#RCC_MAX_FREQUENCY
 72000000U

	)

10184 
	#ADC1_IRQn
 
ADC1_2_IRQn


	)

10185 
	#TIM1_BRK_TIM9_IRQn
 
TIM1_BRK_IRQn


	)

10186 
	#TIM9_IRQn
 
TIM1_BRK_IRQn


	)

10187 
	#TIM1_BRK_TIM15_IRQn
 
TIM1_BRK_IRQn


	)

10188 
	#TIM11_IRQn
 
TIM1_TRG_COM_IRQn


	)

10189 
	#TIM1_TRG_COM_TIM11_IRQn
 
TIM1_TRG_COM_IRQn


	)

10190 
	#TIM1_TRG_COM_TIM17_IRQn
 
TIM1_TRG_COM_IRQn


	)

10191 
	#TIM10_IRQn
 
TIM1_UP_IRQn


	)

10192 
	#TIM1_UP_TIM10_IRQn
 
TIM1_UP_IRQn


	)

10193 
	#TIM1_UP_TIM16_IRQn
 
TIM1_UP_IRQn


	)

10194 
	#OTG_FS_WKUP_IRQn
 
USBWakeUp_IRQn


	)

10195 
	#CEC_IRQn
 
USBWakeUp_IRQn


	)

10196 
	#CAN1_TX_IRQn
 
USB_HP_CAN1_TX_IRQn


	)

10197 
	#USB_HP_IRQn
 
USB_HP_CAN1_TX_IRQn


	)

10198 
	#USB_LP_IRQn
 
USB_LP_CAN1_RX0_IRQn


	)

10199 
	#CAN1_RX0_IRQn
 
USB_LP_CAN1_RX0_IRQn


	)

10203 
	#ADC1_IRQH™dÀr
 
ADC1_2_IRQH™dÀr


	)

10204 
	#TIM1_BRK_TIM9_IRQH™dÀr
 
TIM1_BRK_IRQH™dÀr


	)

10205 
	#TIM9_IRQH™dÀr
 
TIM1_BRK_IRQH™dÀr


	)

10206 
	#TIM1_BRK_TIM15_IRQH™dÀr
 
TIM1_BRK_IRQH™dÀr


	)

10207 
	#TIM11_IRQH™dÀr
 
TIM1_TRG_COM_IRQH™dÀr


	)

10208 
	#TIM1_TRG_COM_TIM11_IRQH™dÀr
 
TIM1_TRG_COM_IRQH™dÀr


	)

10209 
	#TIM1_TRG_COM_TIM17_IRQH™dÀr
 
TIM1_TRG_COM_IRQH™dÀr


	)

10210 
	#TIM10_IRQH™dÀr
 
TIM1_UP_IRQH™dÀr


	)

10211 
	#TIM1_UP_TIM10_IRQH™dÀr
 
TIM1_UP_IRQH™dÀr


	)

10212 
	#TIM1_UP_TIM16_IRQH™dÀr
 
TIM1_UP_IRQH™dÀr


	)

10213 
	#OTG_FS_WKUP_IRQH™dÀr
 
USBWakeUp_IRQH™dÀr


	)

10214 
	#CEC_IRQH™dÀr
 
USBWakeUp_IRQH™dÀr


	)

10215 
	#CAN1_TX_IRQH™dÀr
 
USB_HP_CAN1_TX_IRQH™dÀr


	)

10216 
	#USB_HP_IRQH™dÀr
 
USB_HP_CAN1_TX_IRQH™dÀr


	)

10217 
	#USB_LP_IRQH™dÀr
 
USB_LP_CAN1_RX0_IRQH™dÀr


	)

10218 
	#CAN1_RX0_IRQH™dÀr
 
USB_LP_CAN1_RX0_IRQH™dÀr


	)

10230 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\inc\stm32f1xx.h

38 #i‚de‡
__STM32F1XX_H


39 
	#__STM32F1XX_H


	)

41 #ifde‡
__˝lu•lus


52 #i‡!
deföed
 (
STM32F1
)

53 
	#STM32F1


	)

60 #i‡!
deföed
 (
STM32F100xB
Ë&& !deföed (
STM32F100xE
Ë&& !deföed (
STM32F101x6
) && \

61 !
deföed
 (
STM32F101xB
Ë&& !deföed (
STM32F101xE
Ë&& !deföed (
STM32F101xG
Ë&& !deföed (
STM32F102x6
Ë&& !deföed (
STM32F102xB
Ë&& !deföed (
STM32F103x6
) && \

62 !
deföed
 (
STM32F103xB
Ë&& !deföed (
STM32F103xE
Ë&& !deföed (
STM32F103xG
Ë&& !deföed (
STM32F105xC
Ë&& !
	$deföed
 (
STM32F107xC
)

83 #i‡!
	`deföed
 (
USE_HAL_DRIVER
)

95 
	#__STM32F1_CMSIS_VERSION_MAIN
 (0x04Ë

	)

96 
	#__STM32F1_CMSIS_VERSION_SUB1
 (0x03Ë

	)

97 
	#__STM32F1_CMSIS_VERSION_SUB2
 (0x01Ë

	)

98 
	#__STM32F1_CMSIS_VERSION_RC
 (0x00Ë

	)

99 
	#__STM32F1_CMSIS_VERSION
 ((
__STM32F1_CMSIS_VERSION_MAIN
 << 24)\

100 |(
__STM32F1_CMSIS_VERSION_SUB1
 << 16)\

101 |(
__STM32F1_CMSIS_VERSION_SUB2
 << 8 )\

102 |(
__STM32F1_CMSIS_VERSION_RC
))

	)

111 #i‡
	`deföed
(
STM32F100xB
)

112 
	~"°m32f100xb.h
"

113 #ñi‡
	`deföed
(
STM32F100xE
)

114 
	~"°m32f100xe.h
"

115 #ñi‡
	`deföed
(
STM32F101x6
)

116 
	~"°m32f101x6.h
"

117 #ñi‡
	`deföed
(
STM32F101xB
)

118 
	~"°m32f101xb.h
"

119 #ñi‡
	`deföed
(
STM32F101xE
)

120 
	~"°m32f101xe.h
"

121 #ñi‡
	`deföed
(
STM32F101xG
)

122 
	~"°m32f101xg.h
"

123 #ñi‡
	`deföed
(
STM32F102x6
)

124 
	~"°m32f102x6.h
"

125 #ñi‡
	`deföed
(
STM32F102xB
)

126 
	~"°m32f102xb.h
"

127 #ñi‡
	`deföed
(
STM32F103x6
)

128 
	~"°m32f103x6.h
"

129 #ñi‡
	`deföed
(
STM32F103xB
)

130 
	~"°m32f103xb.h
"

131 #ñi‡
	`deföed
(
STM32F103xE
)

132 
	~"°m32f103xe.h
"

133 #ñi‡
	`deföed
(
STM32F103xG
)

134 
	~"°m32f103xg.h
"

135 #ñi‡
	`deföed
(
STM32F105xC
)

136 
	~"°m32f105xc.h
"

137 #ñi‡
	`deföed
(
STM32F107xC
)

138 
	~"°m32f107xc.h
"

152 
RESET
 = 0,

153 
SET
 = !
RESET


154 } 
	tFœgSètus
, 
	tITSètus
;

158 
DISABLE
 = 0,

159 
ENABLE
 = !
DISABLE


160 } 
	tFun˘i⁄ÆSèã
;

161 
	#IS_FUNCTIONAL_STATE
(
STATE
Ë(((STATEË=
DISABLE
Ë|| ((STATEË=
ENABLE
))

	)

165 
SUCCESS
 = 0U,

166 
ERROR
 = !
SUCCESS


167 } 
	tEº‹Sètus
;

177 
	#SET_BIT
(
REG
, 
BIT
Ë((REGË|(BIT))

	)

179 
	#CLEAR_BIT
(
REG
, 
BIT
Ë((REGË&~(BIT))

	)

181 
	#READ_BIT
(
REG
, 
BIT
Ë((REGË& (BIT))

	)

183 
	#CLEAR_REG
(
REG
Ë((REGË(0x0))

	)

185 
	#WRITE_REG
(
REG
, 
VAL
Ë((REGË(VAL))

	)

187 
	#READ_REG
(
REG
Ë((REG))

	)

189 
	#MODIFY_REG
(
REG
, 
CLEARMASK
, 
SETMASK
Ë
	`WRITE_REG
((REG), (((
	`READ_REG
(REG)Ë& (~(CLEARMASK))Ë| (SETMASK)))

	)

191 
	#POSITION_VAL
(
VAL
Ë(
	`__CLZ
(
	`__RBIT
(VAL)))

	)

198 #i‡
	`deföed
 (
USE_HAL_DRIVER
)

199 
	~"°m32f1xx_hÆ.h
"

203 #ifde‡
__˝lu•lus


204 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\inc\system_stm32f1xx.h

31 #i‚de‡
__SYSTEM_STM32F10X_H


32 
	#__SYSTEM_STM32F10X_H


	)

34 #ifde‡
__˝lu•lus


51 
uöt32_t
 
Sy°emC‹eClock
;

52 c⁄° 
uöt8_t
 
AHBPªscTabÀ
[16U];

53 c⁄° 
uöt8_t
 
APBPªscTabÀ
[8U];

79 
Sy°emInô
();

80 
Sy°emC‹eClockUpd©e
();

85 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\Clock.c

1 
	~"°m32f1xx_Œ_rcc.h
"

5 #i‡
SYSCLK_FREQ
 > 
HSE_VALUE


6 
	#USE_PLL


	)

15 
	$ClockInô
()

17 #ifde‡
USE_HSE


18 
	`LL_RCC_HSE_E«bÀ
();

21 !
	`LL_RCC_HSE_IsRódy
 ())

25 
	`LL_RCC_SëSysClkSour˚
(
LL_RCC_SYS_CLKSOURCE_HSE
);

29 
	`LL_RCC_SëAHBPªsˇÀr
(
LL_RCC_SYSCLK_DIV_1
);

30 
	`LL_RCC_SëAPB1PªsˇÀr
(
LL_RCC_APB1_DIV_2
);

31 
	`LL_RCC_SëAPB2PªsˇÀr
(
LL_RCC_APB2_DIV_1
);

32 
	`LL_RCC_SëUSBClockSour˚
(
LL_RCC_USB_CLKSOURCE_PLL_DIV_1_5
);

33 
	`LL_RCC_SëADCClockSour˚
(
LL_RCC_ADC_CLKSRC_PCLK2_DIV_8
);

37 #ifde‡
USE_PLL


38 
	`LL_RCC_PLL_C⁄figDomaö_SYS
(
LL_RCC_PLLSOURCE_HSE_DIV_1
,
LL_RCC_PLL_MUL_9
);

39 
	`LL_RCC_PLL_E«bÀ
();

41 !
	`LL_RCC_PLL_IsRódy
())

47 #i‚de‡
SYSCLK_FREQ


48 
	#SYSCLK_FREQ
 72000000U

	)

49 #w¨nög 
SYSCLK_FREQ
 
£t
 
up
 
to
 
MAX
 
autom©iˇŒy
!!! 
Check
 
this
 
shô
!

53 
FLASH
->
ACR
 |
FLASH_ACR_PRFTBE
;

56 
FLASH
->
ACR
 &(
uöt32_t
)((uöt32_t)~
FLASH_ACR_LATENCY
);

58 #i‡
SYSCLK_FREQ
<24000000U

59 
FLASH
->
ACR
 |(
uöt32_t
)
FLASH_ACR_LATENCY_0
;

62 #i‡
SYSCLK_FREQ
>=24000000U && SYSCLK_FREQ<48000000U

63 
FLASH
->
ACR
 |(
uöt32_t
)
FLASH_ACR_LATENCY_1
;

66 #i‡
SYSCLK_FREQ
>=48000000U

67 
FLASH
->
ACR
 |(
uöt32_t
)
FLASH_ACR_LATENCY_2
;

70 
	`LL_RCC_SëSysClkSour˚
(
LL_RCC_SYS_CLKSOURCE_PLL
);

75 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\Clock.h

1 #i‚de‡
CLOCK_H


2 
	#CLOCK_H


	)

5 
ClockInô
();

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\IO.c

2 
	~<°döt.h
>

3 
	~<°dboﬁ.h
>

5 
	~<°m32f1xx.h
>

6 
	~<IO.h
>

7 
	~<dma_103.h
>

8 
	~<maö.h
>

10 vﬁ©ûê
uöt16_t
 
	gADC_DMA
[
ADC_CHANNEL_ALL
 * 9];

13 c⁄° 
tGPIO_Löe
 
	gIOs
[
NUM_IO
] =

15 
	#X_IO
(
a
,
b
,
c
,
d
,
e
,
f
,
g
Ë{b,c,d+e,f,g},

	)

16 
IO_TABLE


17 #unde‡
X_IO


21 
	$IO_dñay_ms
(
uöt32_t
 
ms
)

23 vﬁ©ûê
uöt32_t
 
nCou¡
;

27 
nCou¡
=(
SYSCLK_FREQ
/10000)*
ms
;

28 ; 
nCou¡
!=0;ÇCount--);

29 
	}
}

31 
	$IO_SëLöe
(
tIOLöe
 
Löe
, 
boﬁ
 
Sèã
)

33 i‡(
Sèã
)

34 
IOs
[
Löe
].
GPIOx
->
BSRR
 = 1 << (IOs[Löe].
GPIO_Pö
);

36 
IOs
[
Löe
].
GPIOx
->
BRR
 = 1 << (IOs[Löe].
GPIO_Pö
);

37 
	}
}

39 
boﬁ
 
	$IO_GëLöe
(
tIOLöe
 
Löe
)

41 i‡(
Löe
 < 
NUM_IO
)

42  (((
IOs
[
Löe
].
GPIOx
->
IDR
Ë& (1<<(IOs[Löe].
GPIO_Pö
))) != 0);

44  
Ál£
;

45 
	}
}

48 
boﬁ
 
	$IO_GëLöeA˘ive
(
tIOLöe
 
Löe
)

50 i‡(
Löe
 < 
NUM_IO
)

52 
boﬁ
 
pö_£t
 = (((
IOs
[
Löe
].
GPIOx
->
IDR
Ë& (1<<(IOs[Löe].
GPIO_Pö
))Ë? 
åue
 : 
Ál£
);

53  (
pö_£t
 =–
IOs
[
Löe
].
A˘iveSèã
 ? 
åue
 : 
Ál£
));

56  
Ál£
;

57 
	}
}

59 
	$IO_SëLöeA˘ive
(
tIOLöe
 
Löe
, 
boﬁ
 
Sèã
)

61 i‡(
Sèã
 ^ 
IOs
[
Löe
].
A˘iveSèã
)

63 
IOs
[
Löe
].
GPIOx
->
BRR
 = 1 << (IOs[Löe].
GPIO_Pö
);

67 
IOs
[
Löe
].
GPIOx
->
BSRR
 = 1 << (IOs[Löe].
GPIO_Pö
);

69 
	}
}

72 
	$IO_C⁄figLöe
(
tIOLöe
 
Löe
, 
uöt8_t
 
Mode
, uöt8_à
Sèã
)

74 if(
IOs
[
Löe
].
GPIO_Pö
 < 8)

76 
IOs
[
Löe
].
GPIOx
->
CRL
 &~(0x0F << (IOs[Löe].
GPIO_Pö
 * 4));

77 
IOs
[
Löe
].
GPIOx
->
CRL
 |
Mode
<<(IOs[Löe].
GPIO_Pö
 * 4);

81 
IOs
[
Löe
].
GPIOx
->
CRH
 &~(0x0F << ((IOs[Löe].
GPIO_Pö
 - 8)* 4));

82 
IOs
[
Löe
].
GPIOx
->
CRH
 |
Mode
<<((IOs[Löe].
GPIO_Pö
 - 8)* 4);

85 
IOs
[
Löe
].
GPIOx
->
ODR
 &~(1<<IOs[Löe].
GPIO_Pö
);

86 
IOs
[
Löe
].
GPIOx
->
ODR
 |
Sèã
<<IOs[Löe].
GPIO_Pö
;

87 
	}
}

89 
	$IO_SPI_Inô
()

91 
SPI2
->
CR1
 |(
SPI_CR1_SSM


92 |
SPI_CR1_BR_1


93 |
SPI_CR1_MSTR


94 |
SPI_CR1_SSI
);

96 
SPI2
->
CR1
 |
SPI_CR1_SPE
;

97 
	}
}

99 
	$IO_ADC_Inô
()

102 
ADC1
->
SMPR2
 |
ADC_SMPR2_SMP0
|
ADC_SMPR2_SMP1
|
ADC_SMPR2_SMP2


103 |
ADC_SMPR2_SMP3
|
ADC_SMPR2_SMP4
|
ADC_SMPR2_SMP5


104 |
ADC_SMPR2_SMP6
|
ADC_SMPR2_SMP7
|
ADC_SMPR2_SMP8
;

105 
ADC1
->
SMPR1
 |=
ADC_SMPR1_SMP16
;

115 
ADC1
->
SQR1
 |
ADC_SQR1_L_3
|
ADC_SQR1_L_0
;

116 
ADC1
->
SQR2
 |
ADC_SQR2_SQ7_1
|
ADC_SQR2_SQ8_0
|
ADC_SQR2_SQ10_4
;

117 
ADC1
->
SQR3
 |
ADC_SQR3_SQ1_3
|
ADC_SQR3_SQ2_0
|
ADC_SQR3_SQ2_1


118 |
ADC_SQR3_SQ2_2
|
ADC_SQR3_SQ3_1
|
ADC_SQR3_SQ3_2


119 |
ADC_SQR3_SQ4_0
|
ADC_SQR3_SQ4_2
|
ADC_SQR3_SQ5_2


120 |
ADC_SQR3_SQ6_0
|
ADC_SQR3_SQ6_1
;

122 
ADC1
->
CR1
 |
ADC_CR1_SCAN
;

124 
ADC1
->
CR2
 |
ADC_CR2_DMA
|
ADC_CR2_EXTTRIG
|
ADC_CR2_EXTSEL
|
ADC_CR2_CONT
|
ADC_CR2_TSVREFE
;

127 
ADC2
->
CR1
 |
ADC_CR1_JEOCIE
;

128 
ADC2
->
CR2
 |
ADC_CR2_JEXTTRIG
|
ADC_CR2_JEXTSEL
;

129 
ADC2
->
SMPR2
 |
ADC_SMPR2_SMP9_2
;

130 
ADC2
->
JSQR
 |
ADC_JSQR_JSQ4_0
|
ADC_JSQR_JSQ4_3
;

133 
ADC1
->
CR2
 |(
ADC_CR2_ADON
);

134 
ADC2
->
CR2
 |(
ADC_CR2_ADON
);

137 
	`IO_dñay_ms
(1);

138 
ADC1
->
CR2
 |(
ADC_CR2_RSTCAL
);

139  
ADC1
->
CR2
 & (
ADC_CR2_RSTCAL
))

142 
ADC1
->
CR2
 |(
ADC_CR2_CAL
);

143  
ADC1
->
CR2
 & (
ADC_CR2_CAL
))

146 
ADC2
->
CR2
 |(
ADC_CR2_RSTCAL
);

147  
ADC2
->
CR2
 & (
ADC_CR2_RSTCAL
))

150 
ADC2
->
CR2
 |(
ADC_CR2_CAL
);

151  
ADC2
->
CR2
 & (
ADC_CR2_CAL
))

153 
	}
}

161 
uöt16_t
 
	$IO_gëADCvÆ
(
nch
)

163 
i
, 
addr
 = 
nch
;

164 
	#PIX_SORT
(
a
,
b
Ë{ i‡(◊)>(b)Ë
	`PIX_SWAP
(◊),(b)); }

	)

165 
	#PIX_SWAP
(
a
,
b
Ë{
uöt16_t
 
ãmp
=◊);◊)=(b);(b)Òemp; }

	)

166 
uöt16_t
 
p
[9];

167 
i
 = 0; i < 9; ++i, 
addr
 +
ADC_CHANNEL_ALL
)

168 
p
[
i
] = 
ADC_DMA
[
addr
];

169 
	`PIX_SORT
(
p
[1],Ö[2]) ;

170 
	`PIX_SORT
(
p
[4],Ö[5]) ;

171 
	`PIX_SORT
(
p
[7],Ö[8]) ;

172 
	`PIX_SORT
(
p
[0],Ö[1]) ;

173 
	`PIX_SORT
(
p
[3],Ö[4]) ;

174 
	`PIX_SORT
(
p
[6],Ö[7]) ;

175 
	`PIX_SORT
(
p
[1],Ö[2]) ;

176 
	`PIX_SORT
(
p
[4],Ö[5]) ;

177 
	`PIX_SORT
(
p
[7],Ö[8]) ;

178 
	`PIX_SORT
(
p
[0],Ö[3]) ;

179 
	`PIX_SORT
(
p
[5],Ö[8]) ;

180 
	`PIX_SORT
(
p
[4],Ö[7]) ;

181 
	`PIX_SORT
(
p
[3],Ö[6]) ;

182 
	`PIX_SORT
(
p
[1],Ö[4]) ;

183 
	`PIX_SORT
(
p
[2],Ö[5]) ;

184 
	`PIX_SORT
(
p
[4],Ö[7]) ;

185 
	`PIX_SORT
(
p
[4],Ö[2]) ;

186 
	`PIX_SORT
(
p
[6],Ö[4]) ;

187 
	`PIX_SORT
(
p
[4],Ö[2]) ;

188  
p
[4];

189 #unde‡
PIX_SORT


190 #unde‡
PIX_SWAP


191 
	}
}

195 
öt32_t
 
	$IO_gëMCUãmp
()

197 
öt32_t
 
ADvÆ
 = 
	`IO_gëADCvÆ
(
ADC_N_CHANNEL_T_MCU
);

198 
öt32_t
 
ãm≥øtuª
 = (1430-((
mV_ADC
*
ADvÆ
)/
ADC_COUNTS
));

199 
ãm≥øtuª
 *(
öt32_t
)(10);

200 
ãm≥øtuª
 /(
öt32_t
)(43);

201 
ãm≥øtuª
 += 25;

202 (
ãm≥øtuª
);

203 
	}
}

205 
	$IO_Inô
()

209 
RCC
->
APB2ENR
 |
RCC_APB2ENR_IOPAEN
;

210 
RCC
->
APB2ENR
 |
RCC_APB2ENR_IOPBEN
;

217 
RCC
->
APB2ENR
 |
RCC_APB2ENR_AFIOEN
;

220 
AFIO
->
MAPR
|=
AFIO_MAPR_SWJ_CFG_JTAGDISABLE
;

223 
Löe
 = 0; Löê< 
NUM_IO
; Line++)

225 
	`IO_C⁄figLöe
(
Löe
, 
IOs
[Löe].
MODE
, IOs[Löe].
DefSèã
);

229 
RCC
->
APB1ENR
 |
RCC_APB1ENR_SPI2EN
;

230 
	`IO_SPI_Inô
();

235 
RCC
->
APB2ENR
 |
RCC_APB2ENR_ADC1EN
|
RCC_APB2ENR_ADC2EN
;

237 
	`IO_ADC_Inô
();

239 
	`NVIC_SëPri‹ôy
(
ADC1_2_IRQn
,14);

240 
	`NVIC_E«bÀIRQ
(
ADC1_2_IRQn
);

243 
RCC
->
AHBENR
 |
RCC_AHBENR_DMA1EN
;

245 
	`DMA_DißbÀ
(
DMA1_Ch™√l1
);

246 
	`DMA_DeInôDi
(
DMA1_Ch™√l1
);

248 
	`DMA_InôDi
–
DMA1_Ch™√l1
,

249 (
uöt32_t
)&
ADC1
->
DR
,

250 (
uöt32_t
)&
ADC_DMA
[0],

251 (
ADC_CHANNEL_ALL
*9),

252 
TønsCom∂_I¡_DißbÀ
 +

253 
HÆfCom∂_I¡_DißbÀ
 +

254 
TønsEº‹_I¡_DißbÀ
 +

255 
RódPîif
 +

256 
CúcuœrMode_E«bÀ
 +

257 
PîùhîÆInc_DißbÀ
 +

258 
Mem‹yInc_E«bÀ
 +

259 
PD©aSize_W
 +

260 
MD©aSize_W
 +

261 
DMA_Pri‹ôy_Hi
 +

262 
M2M_DißbÀ
 );

264 
	`DMA_E«bÀ
(
DMA1_Ch™√l1
);

265 
ADC1
->
CR2
 |
ADC_CR2_SWSTART
;

268 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\IO.h

1 #i‚de‡
_IO_H


2 
	#_IO_H


	)

4 
	~<°döt.h
>

5 
	~<°dboﬁ.h
>

6 
	~<°m32f1xx.h
>

8 
	#IN
 (0x00)

9 
	#OUT_10MHz
 (0x01)

10 
	#OUT_2MHz
 (0x02)

11 
	#OUT_50MHz
 (0x03)

12 

	)

14 
	#OUT_PP
 (0x00)

15 
	#OUT_OD
 (0x04)

16 
	#OUT_APP
 (0x08)

17 
	#OUT_AOD
 (0x0C)

18 

	)

19 
	#IN_ADC
 (0x00)

20 
	#IN_HIZ
 (0x04)

21 
	#IN_PULL
 (0x08)

22 

	)

25 
GPIO_Ty≥Def
* 
	mGPIOx
;

26 
uöt16_t
 
	mGPIO_Pö
;

27 
uöt8_t
 
	mMODE
;

28 
uöt8_t
 
	mDefSèã
;

29 
uöt8_t
 
	mA˘iveSèã
;

30 } 
	ttGPIO_Löe
;

44 
	#ADC_Cuºít_Sèπ
(Ëdÿ{
ADC2
->
CR2
 |(
ADC_CR2_JSWSTART
);} 0)

	)

45 
	#ADC_Cuºít_Off
(Ëdÿ{
ADC2
->
CR2
 &(~(
ADC_CR2_ADON
));} 0)

	)

46 
	#ADC_Cuºít_On
(Ëdÿ{
ADC2
->
CR2
 |
ADC_CR2_ADON
;} 0)

	)

48 
	#ADC_CHANNEL_ALL
 10

	)

49 
	#ADC_CHANNEL_T
 9

	)

50 
	#ADC_N_CHANNEL_T_MCU
 9

	)

52 
	#mV_ADC
 3300

	)

53 
	#ADC_COUNTS
 (1<<12)

	)

54 
	#OFFSET_I
 (
ADC_COUNTS
>>1)

	)

58 
	#IO_TABLE
\

59 
	`X_IO
(
io_LED
, 
GPIOA
, 15, 
OUT_2MHz
, 
OUT_PP
, 
LOW
, 
HIGH
) \

60 
	`X_IO
(
io_RS485_Swôch
, 
GPIOA
, 8, 
OUT_2MHz
, 
OUT_PP
, 
LOW
, 
HIGH
) \

61 
	`X_IO
(
io_RX
, 
GPIOA
, 10, 
IN
, 
IN_HIZ
, 
HIGH
, HIGH) \

62 
	`X_IO
(
io_TX
, 
GPIOA
, 9, 
OUT_50MHz
, 
OUT_APP
, 
HIGH
, HIGH) \

63 
	`X_IO
(
io_DI_1
, 
GPIOB
, 4, 
IN
, 
IN_PULL
, 
HIGH
, 
LOW
) \

64 
	`X_IO
(
io_DI_2
, 
GPIOB
, 5, 
IN
, 
IN_PULL
, 
HIGH
, 
LOW
) \

65 
	`X_IO
(
io_DI_3
, 
GPIOB
, 6, 
IN
, 
IN_PULL
, 
HIGH
, 
LOW
) \

66 
	`X_IO
(
io_DI_4
, 
GPIOB
, 7, 
IN
, 
IN_PULL
, 
HIGH
, 
LOW
) \

67 
	`X_IO
(
io_DOut_1
, 
GPIOB
, 8, 
OUT_2MHz
, 
OUT_PP
, 
LOW
, 
HIGH
) \

68 
	`X_IO
(
io_DOut_2
, 
GPIOB
, 9, 
OUT_2MHz
, 
OUT_PP
, 
LOW
, 
HIGH
) \

69 
	`X_IO
(
io_Eïrom_CS
, 
GPIOB
, 12, 
OUT_50MHz
, 
OUT_PP
, 
HIGH
, HIGH) \

70 
	`X_IO
(
io_Eïrom_SCK
, 
GPIOB
, 13, 
OUT_50MHz
, 
OUT_APP
, 
LOW
, 
HIGH
) \

71 
	`X_IO
(
io_Eïrom_MISO
, 
GPIOB
, 14, 
IN
, 
IN_PULL
, 
HIGH
, HIGH) \

72 
	`X_IO
(
io_Eïrom_MOSI
, 
GPIOB
, 15, 
OUT_50MHz
, 
OUT_APP
, 
HIGH
, HIGH) \

73 
	`X_IO
(
io_ADC_1
, 
GPIOB
, 0, 
IN
, 
IN_ADC
, 
LOW
, 
HIGH
) \

74 
	`X_IO
(
io_ADC_2
, 
GPIOB
, 1, 
IN
, 
IN_ADC
, 
LOW
, 
HIGH
) \

75 
	`X_IO
(
io_ADC_3
, 
GPIOA
, 0, 
IN
, 
IN_ADC
, 
LOW
, 
HIGH
) \

76 
	`X_IO
(
io_ADC_4
, 
GPIOA
, 1, 
IN
, 
IN_ADC
, 
LOW
, 
HIGH
) \

77 
	`X_IO
(
io_ADC_5
, 
GPIOA
, 2, 
IN
, 
IN_ADC
, 
LOW
, 
HIGH
) \

78 
	`X_IO
(
io_ADC_6
, 
GPIOA
, 3, 
IN
, 
IN_ADC
, 
LOW
, 
HIGH
) \

79 
	`X_IO
(
io_ADC_7
, 
GPIOA
, 4, 
IN
, 
IN_ADC
, 
LOW
, 
HIGH
) \

80 
	`X_IO
(
io_ADC_8
, 
GPIOA
, 5, 
IN
, 
IN_ADC
, 
LOW
, 
HIGH
) \

81 
	`X_IO
(
io_ADC_9
, 
GPIOA
, 6, 
IN
, 
IN_ADC
, 
LOW
, 
HIGH
) \

82 
	`X_IO
(
io_ADC_10
, 
GPIOA
, 7, 
IN
, 
IN_ADC
, 
LOW
, 
HIGH
) \

83 

	)

89 
	#X_IO
(
a
,
b
,
c
,
d
,
e
,
f
,
g
Ëa,

	)

90 
	mIO_TABLE


91 #unde‡
X_IO


92 
	mNUM_IO


93 } 
	ttIOLöe
;

97 
	mOFF
 = 0,

98 
	mON
 = 1,

99 
	mLOW
 = 0,

100 
	mHIGH
 =1,

101 } 
	ttIOSèã
;

103 
IO_Inô
();

104 
IO_SëLöe
(
tIOLöe
 
Löe
, 
boﬁ
 
Sèã
);

105 
boﬁ
 
IO_GëLöe
(
uöt8_t
 
I≈ut
);

106 
IO_SëLöeA˘ive
(
tIOLöe
 
Löe
, 
boﬁ
 
Sèã
);

107 
boﬁ
 
IO_GëLöeA˘ive
(
uöt8_t
 
I≈ut
);

108 
IO_C⁄figLöe
(
tIOLöe
 
Löe
, 
uöt8_t
 
Mode
, uöt8_à
Sèã
);

109 
IO_SPI_Inô
();

110 
IO_ADC_Inô
();

111 
IO_dñay_ms
(
uöt32_t
 
ms
);

112 
uöt16_t
 
IO_gëADCvÆ
(
nch
);

113 
öt32_t
 
IO_gëMCUãmp
();

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\App\usb_device.c

23 
	~"usb_devi˚.h
"

24 
	~"usbd_c‹e.h
"

25 
	~"usbd_desc.h
"

26 
	~"usbd_cdc.h
"

27 
	~"usbd_cdc_if.h
"

28 
	~"usbd_msc_cdc.h
"

29 
	~"usbd_°‹age_if.h
"

46 
USBD_H™dÀTy≥Def
 
	ghUsbDevi˚FS
;

66 
	$MX_USB_DEVICE_Inô
()

72 i‡(
	`USBD_Inô
(&
hUsbDevi˚FS
, &
FS_Desc
, 
DEVICE_FS
Ë!
USBD_OK
)

74 
	`Eº‹_H™dÀr
();

76 i‡(
	`USBD_Regi°îCœss
(&
hUsbDevi˚FS
, &
USBD_MSC_CDC_CœssDrivî
Ë!
USBD_OK
)

78 
	`Eº‹_H™dÀr
();

80 i‡(
	`USBD_CDC_Regi°îI¡îÁ˚
(&
hUsbDevi˚FS
, &
USBD_I¡îÁ˚_f›s_FS
Ë!
USBD_OK
)

82 
	`Eº‹_H™dÀr
();

84 i‡(
	`USBD_MSC_Regi°îSt‹age
(&
hUsbDevi˚FS
, &
USBD_St‹age_I¡îÁ˚_f›s_FS
Ë!
USBD_OK
)

86 
	`Eº‹_H™dÀr
();

89 i‡(
	`USBD_Sèπ
(&
hUsbDevi˚FS
Ë!
USBD_OK
)

91 
	`Eº‹_H™dÀr
();

96 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\App\usb_device.h

22 #i‚de‡
__USB_DEVICE__H__


23 
	#__USB_DEVICE__H__


	)

25 #ifde‡
__˝lu•lus


30 
	~"°m32f1xx.h
"

31 
	~"°m32f1xx_hÆ.h
"

32 
	~"usbd_def.h
"

78 
MX_USB_DEVICE_Inô
();

98 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\App\usbd_cdc_if.c

22 
	~"usbd_cdc_if.h
"

23 
	~"modbus_h¨d.h
"

91 
uöt8_t
 
	gU£rRxBuf„rFS
[
APP_RX_DATA_SIZE
];

94 
uöt8_t
 
	gU£rTxBuf„rFS
[
APP_TX_DATA_SIZE
];

109 
USBD_H™dÀTy≥Def
 
hUsbDevi˚FS
;

124 
öt8_t
 
CDC_Inô_FS
();

125 
öt8_t
 
CDC_DeInô_FS
();

126 
öt8_t
 
CDC_C⁄åﬁ_FS
(
uöt8_t
 
cmd
, uöt8_t* 
pbuf
, 
uöt16_t
 
Àngth
);

127 
öt8_t
 
CDC_Re˚ive_FS
(
uöt8_t
* 
pbuf
, 
uöt32_t
 *
Lí
);

137 
USBD_CDC_ItfTy≥Def
 
	gUSBD_I¡îÁ˚_f›s_FS
 =

139 
CDC_Inô_FS
,

140 
CDC_DeInô_FS
,

141 
CDC_C⁄åﬁ_FS
,

142 
CDC_Re˚ive_FS


150 
öt8_t
 
	$CDC_Inô_FS
()

154 
	`USBD_CDC_SëTxBuf„r
(&
hUsbDevi˚FS
, 
U£rTxBuf„rFS
, 0);

155 
	`USBD_CDC_SëRxBuf„r
(&
hUsbDevi˚FS
, 
U£rRxBuf„rFS
);

156  (
USBD_OK
);

158 
	}
}

164 
öt8_t
 
	$CDC_DeInô_FS
()

167  (
USBD_OK
);

169 
	}
}

178 
öt8_t
 
	$CDC_C⁄åﬁ_FS
(
uöt8_t
 
cmd
, uöt8_t* 
pbuf
, 
uöt16_t
 
Àngth
)

181 
cmd
)

183 
CDC_SEND_ENCAPSULATED_COMMAND
:

187 
CDC_GET_ENCAPSULATED_RESPONSE
:

191 
CDC_SET_COMM_FEATURE
:

195 
CDC_GET_COMM_FEATURE
:

199 
CDC_CLEAR_COMM_FEATURE
:

220 
CDC_SET_LINE_CODING
:

224 
CDC_GET_LINE_CODING
:

228 
CDC_SET_CONTROL_LINE_STATE
:

232 
CDC_SEND_BREAK
:

240  (
USBD_OK
);

242 
	}
}

259 
öt8_t
 
	$CDC_Re˚ive_FS
(
uöt8_t
* 
Buf
, 
uöt32_t
 *
Lí
)

261 
	`mh_USB_Recõve
(
Buf
, *
Lí
);

263 
	`USBD_CDC_SëRxBuf„r
(&
hUsbDevi˚FS
, &
Buf
[0]);

264 
	`USBD_CDC_Re˚ivePackë
(&
hUsbDevi˚FS
);

265  (
USBD_OK
);

267 
	}
}

280 
uöt8_t
 
	$CDC_Tønsmô_FS
(
uöt8_t
* 
Buf
, 
uöt16_t
 
Lí
)

282 
uöt8_t
 
ªsu…
 = 
USBD_OK
;

284 
USBD_CDC_H™dÀTy≥Def
 *
hcdc
 = (USBD_CDC_H™dÀTy≥Def*)
hUsbDevi˚FS
.
pCœssD©a
;

285 i‡(
hcdc
->
TxSèã
 != 0){

286  
USBD_BUSY
;

288 
	`USBD_CDC_SëTxBuf„r
(&
hUsbDevi˚FS
, 
Buf
, 
Lí
);

289 
ªsu…
 = 
	`USBD_CDC_TønsmôPackë
(&
hUsbDevi˚FS
);

291  
ªsu…
;

292 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\App\usbd_cdc_if.h

22 #i‚de‡
__USBD_CDC_IF_H__


23 
	#__USBD_CDC_IF_H__


	)

25 #ifde‡
__˝lu•lus


30 
	~"usbd_cdc.h
"

51 
	#APP_RX_DATA_SIZE
 64

	)

52 
	#APP_TX_DATA_SIZE
 64

	)

93 
USBD_CDC_ItfTy≥Def
 
USBD_I¡îÁ˚_f›s_FS
;

108 
uöt8_t
 
CDC_Tønsmô_FS
(uöt8_t* 
Buf
, 
uöt16_t
 
Lí
);

126 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\App\usbd_desc.c

22 
	~"usbd_c‹e.h
"

23 
	~"usbd_desc.h
"

24 
	~"usbd_c⁄f.h
"

25 
	~"°m32f1xx_hÆ.h
"

26 
	~"°m32f1xx.h
"

67 
	#USBD_VID
 0x0483

	)

68 
	#USBD_LANGID_STRING
 1033

	)

69 
	#USBD_PID_FS
 0x5741

	)

114 
uöt8_t
 * 
USBD_FS_Devi˚Des¸ùt‹
(
USBD_S≥edTy≥Def
 
•ìd
, 
uöt16_t
 *
Àngth
);

115 
uöt8_t
 * 
USBD_FS_L™gIDSåDes¸ùt‹
(
USBD_S≥edTy≥Def
 
•ìd
, 
uöt16_t
 *
Àngth
);

116 
uöt8_t
 * 
USBD_FS_M™uÁ˘uªrSåDes¸ùt‹
(
USBD_S≥edTy≥Def
 
•ìd
, 
uöt16_t
 *
Àngth
);

117 
uöt8_t
 * 
USBD_FS_Produ˘SåDes¸ùt‹
(
USBD_S≥edTy≥Def
 
•ìd
, 
uöt16_t
 *
Àngth
);

118 
uöt8_t
 * 
USBD_FS_SîülSåDes¸ùt‹
(
USBD_S≥edTy≥Def
 
•ìd
, 
uöt16_t
 *
Àngth
);

119 
uöt8_t
 * 
USBD_FS_C⁄figSåDes¸ùt‹
(
USBD_S≥edTy≥Def
 
•ìd
, 
uöt16_t
 *
Àngth
);

120 
uöt8_t
 * 
USBD_FS_I¡îÁ˚SåDes¸ùt‹
(
USBD_S≥edTy≥Def
 
•ìd
, 
uöt16_t
 *
Àngth
);

131 c⁄° 
USBD_Des¸ùt‹sTy≥Def
 
	gFS_Desc
 =

133 
USBD_FS_Devi˚Des¸ùt‹


134 , 
USBD_FS_L™gIDSåDes¸ùt‹


135 , 
USBD_FS_M™uÁ˘uªrSåDes¸ùt‹


136 , 
USBD_FS_Produ˘SåDes¸ùt‹


137 , 
USBD_FS_SîülSåDes¸ùt‹


138 , 
USBD_FS_C⁄figSåDes¸ùt‹


139 , 
USBD_FS_I¡îÁ˚SåDes¸ùt‹


142 #i‡
deföed
 ( 
__ICCARM__
 )

143 #¥agm®
d©a_Æignmít
=4

146 
__ALIGN_BEGIN
 c⁄° 
uöt8_t
 
	gUSBD_FS_Devi˚Desc
[
USB_LEN_DEV_DESC
] 
	g__ALIGN_END
 =

149 
USB_DESC_TYPE_DEVICE
,

155 
USB_MAX_EP0_SIZE
,

156 
LOBYTE
(
USBD_VID
),

157 
HIBYTE
(
USBD_VID
),

158 
LOBYTE
(
USBD_PID_FS
),

159 
HIBYTE
(
USBD_PID_FS
),

162 
USBD_IDX_MFC_STR
,

163 
USBD_IDX_PRODUCT_STR
,

164 
USBD_IDX_SERIAL_STR
,

165 
USBD_MAX_NUM_CONFIGURATION


179 #i‡
deföed
 ( 
__ICCARM__
 )

180 #¥agm®
d©a_Æignmít
=4

186 
__ALIGN_BEGIN
 c⁄° 
uöt8_t
 
	gUSBD_L™gIDDesc
[
USB_LEN_LANGID_STR_DESC
] 
	g__ALIGN_END
 =

188 
USB_LEN_LANGID_STR_DESC
,

189 
USB_DESC_TYPE_STRING
,

190 
LOBYTE
(
USBD_LANGID_STRING
),

191 
HIBYTE
(
USBD_LANGID_STRING
)

211 
uöt8_t
 * 
	$USBD_FS_Devi˚Des¸ùt‹
(
USBD_S≥edTy≥Def
 
•ìd
, 
uöt16_t
 *
Àngth
)

213 
	`UNUSED
(
•ìd
);

214 *
Àngth
 = (
USBD_FS_Devi˚Desc
);

215  (
uöt8_t
 *Ë
USBD_FS_Devi˚Desc
;

216 
	}
}

224 
uöt8_t
 * 
	$USBD_FS_L™gIDSåDes¸ùt‹
(
USBD_S≥edTy≥Def
 
•ìd
, 
uöt16_t
 *
Àngth
)

226 
	`UNUSED
(
•ìd
);

227 *
Àngth
 = (
USBD_L™gIDDesc
);

228  (
uöt8_t
 *Ë
USBD_L™gIDDesc
;

229 
	}
}

237 
__ALIGN_BEGIN
 c⁄° 
uöt8_t
 
	gCOMPOSITE_SåögProdu˘
[
COMPOSITE_SIZ_STRING_PRODUCT
] 
	g__ALIGN_END
 =

239 
COMPOSITE_SIZ_STRING_PRODUCT
,

240 
USB_DESC_TYPE_STRING
,

246 
uöt8_t
 * 
	$USBD_FS_Produ˘SåDes¸ùt‹
(
USBD_S≥edTy≥Def
 
•ìd
, 
uöt16_t
 *
Àngth
)

248 
	`UNUSED
(
•ìd
);

249 *
Àngth
 = (
COMPOSITE_SåögProdu˘
);

258  (
uöt8_t
 *Ë
COMPOSITE_SåögProdu˘
;

259 
	}
}

267 
__ALIGN_BEGIN
 c⁄° 
uöt8_t
 
	gUSBD_FS_SåögM™uÁ˘uªr
[
COMPOSITE_SIZ_STRING_VENDOR
] 
	g__ALIGN_END
=

269 
COMPOSITE_SIZ_STRING_VENDOR
,

270 
USB_DESC_TYPE_STRING
,

275 
uöt8_t
 * 
	$USBD_FS_M™uÁ˘uªrSåDes¸ùt‹
(
USBD_S≥edTy≥Def
 
•ìd
, 
uöt16_t
 *
Àngth
)

277 
	`UNUSED
(
•ìd
);

278 *
Àngth
 = (
USBD_FS_SåögM™uÁ˘uªr
);

281  (
uöt8_t
 *Ë
USBD_FS_SåögM™uÁ˘uªr
;

282 
	}
}

290 
__ALIGN_BEGIN
 c⁄° 
uöt8_t
 
	gComposôe_SåögSîül
[
COMPOSITE_SIZ_STRING_SERIAL
] 
	g__ALIGN_END
=

292 
COMPOSITE_SIZ_STRING_SERIAL
,

293 
USB_DESC_TYPE_STRING
,

297 
uöt8_t
 * 
	$USBD_FS_SîülSåDes¸ùt‹
(
USBD_S≥edTy≥Def
 
•ìd
, 
uöt16_t
 *
Àngth
)

299 *
Àngth
 = (
Composôe_SåögSîül
);

309  (
uöt8_t
 *Ë
Composôe_SåögSîül
;

310 
	}
}

319 
uöt8_t
 * 
	$USBD_FS_C⁄figSåDes¸ùt‹
(
USBD_S≥edTy≥Def
 
•ìd
, 
uöt16_t
 *
Àngth
)

321 *
Àngth
 = (
Composôe_SåögSîül
);

330  (
uöt8_t
 *Ë
Composôe_SåögSîül
;

331 
	}
}

340 
uöt8_t
 * 
	$USBD_FS_I¡îÁ˚SåDes¸ùt‹
(
USBD_S≥edTy≥Def
 
•ìd
, 
uöt16_t
 *
Àngth
)

342 *
Àngth
 = (
Composôe_SåögSîül
);

352  (
uöt8_t
 *Ë
Composôe_SåögSîül
;

353 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\App\usbd_desc.h

21 #i‚de‡
__USBD_DESC__C__


22 
	#__USBD_DESC__C__


	)

24 #ifde‡
__˝lu•lus


29 
	~"usbd_def.h
"

48 
	#DEVICE_ID1
 (
UID_BASE
)

	)

49 
	#DEVICE_ID2
 (
UID_BASE
 + 0x4)

	)

50 
	#DEVICE_ID3
 (
UID_BASE
 + 0x8)

	)

52 
	#USB_SIZ_STRING_SERIAL
 0x1A

	)

54 
	#COMPOSITE_SIZ_STRING_VENDOR
 12

	)

55 
	#COMPOSITE_SIZ_STRING_PRODUCT
 48

	)

56 
	#COMPOSITE_SIZ_STRING_SERIAL
 12

	)

57 
	#COMPOSITE_SIZ_STRING_LANGID
 4

	)

112 c⁄° 
USBD_Des¸ùt‹sTy≥Def
 
FS_Desc
;

143 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\App\usbd_storage_if.c

22 
	~"usbd_°‹age_if.h
"

23 
	~"emÁt.h
"

65 
	#STORAGE_LUN_NBR
 1

	)

66 
	#STORAGE_BLK_NBR
 0x10000

	)

67 
	#STORAGE_BLK_SIZ
 0x200

	)

90 
emÁt_t
 
emÁt
;

99 c⁄° 
öt8_t
 
	gSTORAGE_Inquúyd©a_FS
[] = {

106 (
STANDARD_INQUIRY_DATA_LEN
 - 5),

130 
USBD_H™dÀTy≥Def
 
hUsbDevi˚FS
;

145 
öt8_t
 
STORAGE_Inô_FS
(
uöt8_t
 
lun
);

146 
öt8_t
 
STORAGE_GëC≠acôy_FS
(
uöt8_t
 
lun
, 
uöt32_t
 *
block_num
, 
uöt16_t
 *
block_size
);

147 
öt8_t
 
STORAGE_IsRódy_FS
(
uöt8_t
 
lun
);

148 
öt8_t
 
STORAGE_IsWrôePrŸe˘ed_FS
(
uöt8_t
 
lun
);

149 
öt8_t
 
STORAGE_Ród_FS
(
uöt8_t
 
lun
, uöt8_à*
buf
, 
uöt32_t
 
blk_addr
, 
uöt16_t
 
blk_Àn
);

150 
öt8_t
 
STORAGE_Wrôe_FS
(
uöt8_t
 
lun
, uöt8_à*
buf
, 
uöt32_t
 
blk_addr
, 
uöt16_t
 
blk_Àn
);

151 
öt8_t
 
STORAGE_GëMaxLun_FS
();

161 
USBD_St‹ageTy≥Def
 
	gUSBD_St‹age_I¡îÁ˚_f›s_FS
 =

163 
STORAGE_Inô_FS
,

164 
STORAGE_GëC≠acôy_FS
,

165 
STORAGE_IsRódy_FS
,

166 
STORAGE_IsWrôePrŸe˘ed_FS
,

167 
STORAGE_Ród_FS
,

168 
STORAGE_Wrôe_FS
,

169 
STORAGE_GëMaxLun_FS
,

170 (
öt8_t
 *)
STORAGE_Inquúyd©a_FS


179 
öt8_t
 
	$STORAGE_Inô_FS
(
uöt8_t
 
lun
)

182  (
USBD_OK
);

184 
	}
}

193 
öt8_t
 
	$STORAGE_GëC≠acôy_FS
(
uöt8_t
 
lun
, 
uöt32_t
 *
block_num
, 
uöt16_t
 *
block_size
)

196 *
block_num
 = 
STORAGE_BLK_NBR
;

197 *
block_size
 = 
STORAGE_BLK_SIZ
;

198  (
USBD_OK
);

200 
	}
}

207 
öt8_t
 
	$STORAGE_IsRódy_FS
(
uöt8_t
 
lun
)

210  (
USBD_OK
);

212 
	}
}

219 
öt8_t
 
	$STORAGE_IsWrôePrŸe˘ed_FS
(
uöt8_t
 
lun
)

222  (
USBD_OK
);

224 
	}
}

231 
öt8_t
 
	$STORAGE_Ród_FS
(
uöt8_t
 
lun
, uöt8_à*
buf
, 
uöt32_t
 
blk_addr
, 
uöt16_t
 
blk_Àn
)

234 
	`emÁt_ªad
(&
emÁt
, (
uöt8_t
*)
buf
, 
blk_addr
, 
blk_Àn
);

235  (
USBD_OK
);

237 
	}
}

244 
öt8_t
 
	$STORAGE_Wrôe_FS
(
uöt8_t
 
lun
, uöt8_à*
buf
, 
uöt32_t
 
blk_addr
, 
uöt16_t
 
blk_Àn
)

247  (
USBD_OK
);

249 
	}
}

256 
öt8_t
 
	$STORAGE_GëMaxLun_FS
()

259  (
STORAGE_LUN_NBR
 - 1);

261 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\App\usbd_storage_if.h

22 #i‚de‡
__USBD_STORAGE_IF_H__


23 
	#__USBD_STORAGE_IF_H__


	)

25 #ifde‡
__˝lu•lus


30 
	~"usbd_msc.h
"

91 
USBD_St‹ageTy≥Def
 
USBD_St‹age_I¡îÁ˚_f›s_FS
;

122 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\Target\usbd_conf.c

22 
	~"°m32f1xx.h
"

23 
	~"°m32f1xx_hÆ.h
"

24 
	~"usbd_def.h
"

25 
	~"usbd_c‹e.h
"

26 
	~"usbd_cdc.h
"

27 
	~"maö.h
"

41 
PCD_H™dÀTy≥Def
 
	ghpcd_USB_FS
;

42 
Eº‹_H™dÀr
();

46 
	$USB_LP_CAN1_RX0_IRQH™dÀr
()

48 
	`HAL_PCD_IRQH™dÀr
(&
hpcd_USB_FS
);

49 
	}
}

59 
USBD_SètusTy≥Def
 
USBD_Gë_USB_Sètus
(
HAL_SètusTy≥Def
 
hÆ_°©us
);

63 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

64 
PCDEx_SëC⁄√˘i⁄Sèã
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
°©e
);

66 
HAL_PCDEx_SëC⁄√˘i⁄Sèã
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
°©e
);

74 
	$HAL_PCD_M•Inô
(
PCD_H™dÀTy≥Def
* 
pcdH™dÀ
)

77 if(
pcdH™dÀ
->
In°™˚
==
USB
)

85 
RCC
->
APB1ENR
 |
RCC_APB1ENR_USBEN
;

89 
	`NVIC_SëPri‹ôy
(
USB_LP_CAN1_RX0_IRQn
,14);

91 
	`NVIC_E«bÀIRQ
(
USB_LP_CAN1_RX0_IRQn
);

98 
	}
}

100 
	$HAL_PCD_M•DeInô
(
PCD_H™dÀTy≥Def
* 
pcdH™dÀ
)

102 if(
pcdH™dÀ
->
In°™˚
==
USB
)

109 
RCC
->
APB1ENR
 &~
RCC_APB1ENR_USBEN
;

111 
	`NVIC_DißbÀIRQ
(
USB_LP_CAN1_RX0_IRQn
);

117 
	}
}

124 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

125 
	$PCD_SëupSègeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

127 
	$HAL_PCD_SëupSègeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

130 
	`USBD_LL_SëupSège
((
USBD_H™dÀTy≥Def
*)
hpcd
->
pD©a
, (
uöt8_t
 *)hpcd->
Sëup
);

131 
	}
}

139 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

140 
	$PCD_D©aOutSègeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ïnum
)

142 
	$HAL_PCD_D©aOutSègeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ïnum
)

145 
	`USBD_LL_D©aOutSège
((
USBD_H™dÀTy≥Def
*)
hpcd
->
pD©a
, 
ïnum
, hpcd->
OUT_ï
[ïnum].
x„r_buff
);

146 
	}
}

154 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

155 
	$PCD_D©aInSègeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ïnum
)

157 
	$HAL_PCD_D©aInSègeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ïnum
)

160 
	`USBD_LL_D©aInSège
((
USBD_H™dÀTy≥Def
*)
hpcd
->
pD©a
, 
ïnum
, hpcd->
IN_ï
[ïnum].
x„r_buff
);

161 
	}
}

168 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

169 
	$PCD_SOFCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

171 
	$HAL_PCD_SOFCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

174 
	`USBD_LL_SOF
((
USBD_H™dÀTy≥Def
*)
hpcd
->
pD©a
);

175 
	}
}

182 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

183 
	$PCD_Re£tCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

185 
	$HAL_PCD_Re£tCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

188 
USBD_S≥edTy≥Def
 
•ìd
 = 
USBD_SPEED_FULL
;

190 i‡–
hpcd
->
Inô
.
•ìd
 !
PCD_SPEED_FULL
)

192 
	`Eº‹_H™dÀr
();

195 
	`USBD_LL_SëS≥ed
((
USBD_H™dÀTy≥Def
*)
hpcd
->
pD©a
, 
•ìd
);

198 
	`USBD_LL_Re£t
((
USBD_H™dÀTy≥Def
*)
hpcd
->
pD©a
);

199 
	}
}

207 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

208 
	$PCD_Su•ídCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

210 
	$HAL_PCD_Su•ídCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

214 
	`USBD_LL_Su•íd
((
USBD_H™dÀTy≥Def
*)
hpcd
->
pD©a
);

217 
	`Së_Time_F‹_Blök
(
TIME_ON_NO_USB
, 
TIME_OFF_NO_USB
);

224 
	}
}

232 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

233 
	$PCD_ResumeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

235 
	$HAL_PCD_ResumeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

239 
	`Së_Time_F‹_Blök
(
TIME_ON_USB
, 
TIME_OFF_USB
);

241 
	`USBD_LL_Resume
((
USBD_H™dÀTy≥Def
*)
hpcd
->
pD©a
);

242 
	}
}

250 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

251 
	$PCD_ISOOUTIncom∂ëeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ïnum
)

253 
	$HAL_PCD_ISOOUTIncom∂ëeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ïnum
)

256 
	`USBD_LL_IsoOUTIncom∂ëe
((
USBD_H™dÀTy≥Def
*)
hpcd
->
pD©a
, 
ïnum
);

257 
	}
}

265 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

266 
	$PCD_ISOINIncom∂ëeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ïnum
)

268 
	$HAL_PCD_ISOINIncom∂ëeCÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
ïnum
)

271 
	`USBD_LL_IsoINIncom∂ëe
((
USBD_H™dÀTy≥Def
*)
hpcd
->
pD©a
, 
ïnum
);

272 
	}
}

279 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

280 
	$PCD_C⁄√˘CÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

282 
	$HAL_PCD_C⁄√˘CÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

285 
	`USBD_LL_DevC⁄√˘ed
((
USBD_H™dÀTy≥Def
*)
hpcd
->
pD©a
);

286 
	}
}

293 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

294 
	$PCD_Disc⁄√˘CÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

296 
	$HAL_PCD_Disc⁄√˘CÆlback
(
PCD_H™dÀTy≥Def
 *
hpcd
)

299 
	`USBD_LL_DevDisc⁄√˘ed
((
USBD_H™dÀTy≥Def
*)
hpcd
->
pD©a
);

300 
	}
}

311 
USBD_SètusTy≥Def
 
	$USBD_LL_Inô
(
USBD_H™dÀTy≥Def
 *
pdev
)

315 
hpcd_USB_FS
.
pD©a
 = 
pdev
;

316 
pdev
->
pD©a
 = &
hpcd_USB_FS
;

318 
hpcd_USB_FS
.
In°™˚
 = 
USB
;

319 
hpcd_USB_FS
.
Inô
.
dev_ídpoöts
 = 8;

320 
hpcd_USB_FS
.
Inô
.
•ìd
 = 
PCD_SPEED_FULL
;

321 
hpcd_USB_FS
.
Inô
.
low_powî_íabÀ
 = 
DISABLE
;

322 
hpcd_USB_FS
.
Inô
.
Õm_íabÀ
 = 
DISABLE
;

323 
hpcd_USB_FS
.
Inô
.
b©ãry_ch¨gög_íabÀ
 = 
DISABLE
;

324 i‡(
	`HAL_PCD_Inô
(&
hpcd_USB_FS
Ë!
HAL_OK
)

326 
	`Eº‹_H™dÀr
( );

329 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

331 
	`HAL_PCD_Regi°îCÆlback
(&
hpcd_USB_FS
, 
HAL_PCD_SOF_CB_ID
, 
PCD_SOFCÆlback
);

332 
	`HAL_PCD_Regi°îCÆlback
(&
hpcd_USB_FS
, 
HAL_PCD_SETUPSTAGE_CB_ID
, 
PCD_SëupSègeCÆlback
);

333 
	`HAL_PCD_Regi°îCÆlback
(&
hpcd_USB_FS
, 
HAL_PCD_RESET_CB_ID
, 
PCD_Re£tCÆlback
);

334 
	`HAL_PCD_Regi°îCÆlback
(&
hpcd_USB_FS
, 
HAL_PCD_SUSPEND_CB_ID
, 
PCD_Su•ídCÆlback
);

335 
	`HAL_PCD_Regi°îCÆlback
(&
hpcd_USB_FS
, 
HAL_PCD_RESUME_CB_ID
, 
PCD_ResumeCÆlback
);

336 
	`HAL_PCD_Regi°îCÆlback
(&
hpcd_USB_FS
, 
HAL_PCD_CONNECT_CB_ID
, 
PCD_C⁄√˘CÆlback
);

337 
	`HAL_PCD_Regi°îCÆlback
(&
hpcd_USB_FS
, 
HAL_PCD_DISCONNECT_CB_ID
, 
PCD_Disc⁄√˘CÆlback
);

339 
	`HAL_PCD_Regi°îD©aOutSègeCÆlback
(&
hpcd_USB_FS
, 
PCD_D©aOutSègeCÆlback
);

340 
	`HAL_PCD_Regi°îD©aInSègeCÆlback
(&
hpcd_USB_FS
, 
PCD_D©aInSègeCÆlback
);

341 
	`HAL_PCD_Regi°îIsoOutIn˝…CÆlback
(&
hpcd_USB_FS
, 
PCD_ISOOUTIncom∂ëeCÆlback
);

342 
	`HAL_PCD_Regi°îIsoInIn˝…CÆlback
(&
hpcd_USB_FS
, 
PCD_ISOINIncom∂ëeCÆlback
);

344 
	`HAL_PCDEx_PMAC⁄fig
((
PCD_H™dÀTy≥Def
*)
pdev
->
pD©a
 , 0x00 , 
PCD_SNG_BUF
, 0x20);

345 
	`HAL_PCDEx_PMAC⁄fig
((
PCD_H™dÀTy≥Def
*)
pdev
->
pD©a
 , 0x80 , 
PCD_SNG_BUF
, 0x60);

346 
	`HAL_PCDEx_PMAC⁄fig
((
PCD_H™dÀTy≥Def
*)
pdev
->
pD©a
 , 
MSC_IN_EP
, 
PCD_SNG_BUF
, 0xA0);

347 
	`HAL_PCDEx_PMAC⁄fig
((
PCD_H™dÀTy≥Def
*)
pdev
->
pD©a
 , 
MSC_OUT_EP
, 
PCD_SNG_BUF
, 0xE0);

348 
	`HAL_PCDEx_PMAC⁄fig
((
PCD_H™dÀTy≥Def
*)
pdev
->
pD©a
 , 
CDC_CMD_EP
, 
PCD_SNG_BUF
, 0x100);

349 
	`HAL_PCDEx_PMAC⁄fig
((
PCD_H™dÀTy≥Def
*)
pdev
->
pD©a
 , 
CDC_IN_EP
, 
PCD_SNG_BUF
, 0x140);

350 
	`HAL_PCDEx_PMAC⁄fig
((
PCD_H™dÀTy≥Def
*)
pdev
->
pD©a
 , 
CDC_OUT_EP
, 
PCD_SNG_BUF
, 0x180);

360  
USBD_OK
;

361 
	}
}

368 
USBD_SètusTy≥Def
 
	$USBD_LL_DeInô
(
USBD_H™dÀTy≥Def
 *
pdev
)

370 
HAL_SètusTy≥Def
 
hÆ_°©us
 = 
HAL_OK
;

371 
USBD_SètusTy≥Def
 
usb_°©us
 = 
USBD_OK
;

373 
hÆ_°©us
 = 
	`HAL_PCD_DeInô
(
pdev
->
pD©a
);

375 
usb_°©us
 = 
	`USBD_Gë_USB_Sètus
(
hÆ_°©us
);

377  
usb_°©us
;

378 
	}
}

385 
USBD_SètusTy≥Def
 
	$USBD_LL_Sèπ
(
USBD_H™dÀTy≥Def
 *
pdev
)

387 
HAL_SètusTy≥Def
 
hÆ_°©us
 = 
HAL_OK
;

388 
USBD_SètusTy≥Def
 
usb_°©us
 = 
USBD_OK
;

390 
hÆ_°©us
 = 
	`HAL_PCD_Sèπ
(
pdev
->
pD©a
);

392 
usb_°©us
 = 
	`USBD_Gë_USB_Sètus
(
hÆ_°©us
);

394  
usb_°©us
;

395 
	}
}

402 
USBD_SètusTy≥Def
 
	$USBD_LL_St›
(
USBD_H™dÀTy≥Def
 *
pdev
)

404 
HAL_SètusTy≥Def
 
hÆ_°©us
 = 
HAL_OK
;

405 
USBD_SètusTy≥Def
 
usb_°©us
 = 
USBD_OK
;

407 
hÆ_°©us
 = 
	`HAL_PCD_St›
(
pdev
->
pD©a
);

409 
usb_°©us
 = 
	`USBD_Gë_USB_Sètus
(
hÆ_°©us
);

411  
usb_°©us
;

412 
	}
}

422 
USBD_SètusTy≥Def
 
	$USBD_LL_O≥nEP
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ï_addr
, uöt8_à
ï_ty≥
, 
uöt16_t
 
ï_mps
)

424 
HAL_SètusTy≥Def
 
hÆ_°©us
 = 
HAL_OK
;

425 
USBD_SètusTy≥Def
 
usb_°©us
 = 
USBD_OK
;

427 
hÆ_°©us
 = 
	`HAL_PCD_EP_O≥n
(
pdev
->
pD©a
, 
ï_addr
, 
ï_mps
, 
ï_ty≥
);

429 
usb_°©us
 = 
	`USBD_Gë_USB_Sètus
(
hÆ_°©us
);

431  
usb_°©us
;

432 
	}
}

440 
USBD_SètusTy≥Def
 
	$USBD_LL_Clo£EP
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ï_addr
)

442 
HAL_SètusTy≥Def
 
hÆ_°©us
 = 
HAL_OK
;

443 
USBD_SètusTy≥Def
 
usb_°©us
 = 
USBD_OK
;

445 
hÆ_°©us
 = 
	`HAL_PCD_EP_Clo£
(
pdev
->
pD©a
, 
ï_addr
);

447 
usb_°©us
 = 
	`USBD_Gë_USB_Sètus
(
hÆ_°©us
);

449  
usb_°©us
;

450 
	}
}

458 
USBD_SètusTy≥Def
 
	$USBD_LL_FlushEP
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ï_addr
)

460 
HAL_SètusTy≥Def
 
hÆ_°©us
 = 
HAL_OK
;

461 
USBD_SètusTy≥Def
 
usb_°©us
 = 
USBD_OK
;

463 
hÆ_°©us
 = 
	`HAL_PCD_EP_Flush
(
pdev
->
pD©a
, 
ï_addr
);

465 
usb_°©us
 = 
	`USBD_Gë_USB_Sètus
(
hÆ_°©us
);

467  
usb_°©us
;

468 
	}
}

476 
USBD_SètusTy≥Def
 
	$USBD_LL_SèŒEP
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ï_addr
)

478 
HAL_SètusTy≥Def
 
hÆ_°©us
 = 
HAL_OK
;

479 
USBD_SètusTy≥Def
 
usb_°©us
 = 
USBD_OK
;

481 
hÆ_°©us
 = 
	`HAL_PCD_EP_SëSèŒ
(
pdev
->
pD©a
, 
ï_addr
);

483 
usb_°©us
 = 
	`USBD_Gë_USB_Sètus
(
hÆ_°©us
);

485  
usb_°©us
;

486 
	}
}

494 
USBD_SètusTy≥Def
 
	$USBD_LL_CÀ¨SèŒEP
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ï_addr
)

496 
HAL_SètusTy≥Def
 
hÆ_°©us
 = 
HAL_OK
;

497 
USBD_SètusTy≥Def
 
usb_°©us
 = 
USBD_OK
;

499 
hÆ_°©us
 = 
	`HAL_PCD_EP_CÃSèŒ
(
pdev
->
pD©a
, 
ï_addr
);

501 
usb_°©us
 = 
	`USBD_Gë_USB_Sètus
(
hÆ_°©us
);

503  
usb_°©us
;

504 
	}
}

512 
uöt8_t
 
	$USBD_LL_IsSèŒEP
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ï_addr
)

514 
PCD_H™dÀTy≥Def
 *
hpcd
 = (PCD_H™dÀTy≥Def*Ë
pdev
->
pD©a
;

516 if((
ï_addr
 & 0x80) == 0x80)

518  
hpcd
->
IN_ï
[
ï_addr
 & 0x7F].
is_°Æl
;

522  
hpcd
->
OUT_ï
[
ï_addr
 & 0x7F].
is_°Æl
;

524 
	}
}

532 
USBD_SètusTy≥Def
 
	$USBD_LL_SëUSBAddªss
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
dev_addr
)

534 
HAL_SètusTy≥Def
 
hÆ_°©us
 = 
HAL_OK
;

535 
USBD_SètusTy≥Def
 
usb_°©us
 = 
USBD_OK
;

537 
hÆ_°©us
 = 
	`HAL_PCD_SëAddªss
(
pdev
->
pD©a
, 
dev_addr
);

539 
usb_°©us
 = 
	`USBD_Gë_USB_Sètus
(
hÆ_°©us
);

541  
usb_°©us
;

542 
	}
}

552 
USBD_SètusTy≥Def
 
	$USBD_LL_Tønsmô
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ï_addr
, uöt8_à*
pbuf
, 
uöt16_t
 
size
)

554 
HAL_SètusTy≥Def
 
hÆ_°©us
 = 
HAL_OK
;

555 
USBD_SètusTy≥Def
 
usb_°©us
 = 
USBD_OK
;

557 
hÆ_°©us
 = 
	`HAL_PCD_EP_Tønsmô
(
pdev
->
pD©a
, 
ï_addr
, 
pbuf
, 
size
);

559 
usb_°©us
 = 
	`USBD_Gë_USB_Sètus
(
hÆ_°©us
);

561  
usb_°©us
;

562 
	}
}

572 
USBD_SètusTy≥Def
 
	$USBD_LL_Pª∑ªRe˚ive
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ï_addr
, uöt8_à*
pbuf
, 
uöt16_t
 
size
)

574 
HAL_SètusTy≥Def
 
hÆ_°©us
 = 
HAL_OK
;

575 
USBD_SètusTy≥Def
 
usb_°©us
 = 
USBD_OK
;

577 
hÆ_°©us
 = 
	`HAL_PCD_EP_Re˚ive
(
pdev
->
pD©a
, 
ï_addr
, 
pbuf
, 
size
);

579 
usb_°©us
 = 
	`USBD_Gë_USB_Sètus
(
hÆ_°©us
);

581  
usb_°©us
;

582 
	}
}

590 
uöt32_t
 
	$USBD_LL_GëRxD©aSize
(
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
ï_addr
)

592  
	`HAL_PCD_EP_GëRxCou¡
((
PCD_H™dÀTy≥Def
*Ë
pdev
->
pD©a
, 
ï_addr
);

593 
	}
}

600 
	$USBD_LL_Dñay
(
uöt32_t
 
Dñay
)

602 
	`HAL_Dñay
(
Dñay
);

603 
	}
}

610 *
	$USBD_°©ic_mÆloc
(
uöt32_t
 
size
)

612 
uöt32_t
 
mem
[((
USBD_CDC_H™dÀTy≥Def
)/4)+1];

613  
mem
;

614 
	}
}

621 
	$USBD_°©ic_‰ì
(*
p
)

624 
	}
}

632 #i‡(
USE_HAL_PCD_REGISTER_CALLBACKS
 == 1U)

633 
	$PCDEx_SëC⁄√˘i⁄Sèã
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
°©e
)

635 
	$HAL_PCDEx_SëC⁄√˘i⁄Sèã
(
PCD_H™dÀTy≥Def
 *
hpcd
, 
uöt8_t
 
°©e
)

639 i‡(
°©e
 == 1)

648 
	}
}

655 
USBD_SètusTy≥Def
 
	$USBD_Gë_USB_Sètus
(
HAL_SètusTy≥Def
 
hÆ_°©us
)

657 
USBD_SètusTy≥Def
 
usb_°©us
 = 
USBD_OK
;

659 
hÆ_°©us
)

661 
HAL_OK
 :

662 
usb_°©us
 = 
USBD_OK
;

664 
HAL_ERROR
 :

665 
usb_°©us
 = 
USBD_FAIL
;

667 
HAL_BUSY
 :

668 
usb_°©us
 = 
USBD_BUSY
;

670 
HAL_TIMEOUT
 :

671 
usb_°©us
 = 
USBD_FAIL
;

674 
usb_°©us
 = 
USBD_FAIL
;

677  
usb_°©us
;

678 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\Target\usbd_conf.h

22 #i‚de‡
__USBD_CONF__H__


23 
	#__USBD_CONF__H__


	)

25 #ifde‡
__˝lu•lus


30 
	~<°dio.h
>

31 
	~<°dlib.h
>

32 
	~<°rög.h
>

33 
	~"maö.h
"

34 
	~"°m32f1xx.h
"

65 
	#USBD_MAX_NUM_INTERFACES
 3

	)

67 
	#USBD_MAX_NUM_CONFIGURATION
 1

	)

71 
	#USBD_DEBUG_LEVEL
 0

	)

73 
	#USBD_SELF_POWERED
 1

	)

79 
	#DEVICE_FS
 0

	)

82 
	#MSC_INTERFACE_IDX
 0x0

83 
	#CDC_INTERFACE_IDX
 0x1

84 

	)

86 
	#MSC_EP_IDX
 0x01

	)

87 
	#CDC_CMD_EP_IDX
 0x02

	)

88 
	#CDC_EP_IDX
 0x03

	)

90 
	#IN_EP_DIR
 0x80

91 

	)

92 
	#MSC_OUT_EP
 
MSC_EP_IDX


	)

93 
	#MSC_IN_EP
 (
MSC_EP_IDX
 | 
IN_EP_DIR
Ë

	)

94 
	#CDC_CMD_EP
 (
CDC_CMD_EP_IDX
 | 
IN_EP_DIR
Ë

	)

95 
	#CDC_OUT_EP
 
CDC_EP_IDX


	)

96 
	#CDC_IN_EP
 (
CDC_EP_IDX
 | 
IN_EP_DIR
Ë

	)

109 
	#USBD_mÆloc
 (
uöt32_t
 *)
USBD_°©ic_mÆloc


	)

112 
	#USBD_‰ì
 
USBD_°©ic_‰ì


	)

115 
	#USBD_mem£t


	)

118 
	#USBD_mem˝y


	)

121 
	#USBD_Dñay
 
HAL_Dñay


	)

125 *
USBD_°©ic_mÆloc
(
uöt32_t
 
size
);

126 
USBD_°©ic_‰ì
(*
p
);

130 #i‡(
USBD_DEBUG_LEVEL
 > 0)

131 
	#USBD_U§Log
(...Ë
	`¥ötf
(
__VA_ARGS__
);\

132 
	`¥ötf
("\n");

	)

134 
	#USBD_U§Log
(...)

	)

137 #i‡(
USBD_DEBUG_LEVEL
 > 1)

139 
	#USBD_EºLog
(...Ë
	`¥ötf
("ERROR: ") ;\

140 
	`¥ötf
(
__VA_ARGS__
);\

141 
	`¥ötf
("\n");

	)

143 
	#USBD_EºLog
(...)

	)

146 #i‡(
USBD_DEBUG_LEVEL
 > 2)

147 
	#USBD_DbgLog
(...Ë
	`¥ötf
("DEBUG : ") ;\

148 
	`¥ötf
(
__VA_ARGS__
);\

149 
	`¥ötf
("\n");

	)

151 
	#USBD_DbgLog
(...)

	)

186 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\app.c

1 
	~"maö.h
"

2 
	~"emÁt.h
"

3 
	~"°dlib.h
"

5 
	#README_SIZE
 256

6 
	#INDEX_SIZE
 256

	)

7 
	#TEST_SIZE
 868

	)

15 c⁄° 
	gªadme_fûe
[] =

19 c⁄° 
	gödex_fûe
 [] =

22 c⁄° 
	gã°_fûe
[
TEST_SIZE
] = {

81 
emÁt_t
 
	gemÁt
;

86 
ªadme_ªad_¥oc
(
uöt8_t
 *
de°
, 
size
, 
uöt32_t
 
off£t
, 
size_t
 
u£rd©a
);

87 
ödex_ªad_¥oc
(
uöt8_t
 *
de°
, 
size
, 
uöt32_t
 
off£t
, 
size_t
 
u£rd©a
);

88 
ã°_ªad_¥oc
(
uöt8_t
 *
de°
, 
size
, 
uöt32_t
 
off£t
, 
size_t
 
u£rd©a
);

89 
drivîs_ªad_¥oc
(
uöt8_t
 *
de°
, 
size
, 
uöt32_t
 
off£t
, 
size_t
 
u£rd©a
);

91 
	#CMA_TIME
 
	`EMFAT_ENCODE_CMA_TIME
(2,4,2019, 13,0,0)

	)

92 
	#CMA
 { 
CMA_TIME
, CMA_TIME, CMA_TIME }

	)

95 vﬁ©ûê
emÁt_íåy_t
 
	gíåõs
[] =

98 { "", 
åue
, 0, 0, 0, 0, 0, 
CMA
, 
NULL
, NULL },

99 { "ödex.htm", 
Ál£
, 1, 0, 
INDEX_SIZE
, 1024*1024, 0, 
CMA
, 
ödex_ªad_¥oc
, 
NULL
 },

100 { "ªadme.txt", 
Ál£
, 1, 0, 
README_SIZE
, README_SIZE, 0, 
CMA
, 
ªadme_ªad_¥oc
, 
NULL
 },

101 { "ã°.ør", 
Ál£
, 1, 0, 
TEST_SIZE
, TEST_SIZE, 0, 
CMA
, 
ã°_ªad_¥oc
, 
NULL
 },

102 { 
NULL
 }

140 
	$ã°_ªad_¥oc
(
uöt8_t
 *
de°
, 
size
, 
uöt32_t
 
off£t
, 
size_t
 
u£rd©a
)

142 
Àn
 = 0;

143 i‡(
off£t
 > 
TEST_SIZE
) ;

144 i‡(
off£t
 + 
size
 > 
TEST_SIZE
)

145 
Àn
 = 
TEST_SIZE
 - 
off£t
; 

146 
Àn
 = 
size
;

147 
	`mem˝y
(
de°
, &
ã°_fûe
[
off£t
], 
Àn
);

148 
	}
}

150 
	$ªadme_ªad_¥oc
(
uöt8_t
 *
de°
, 
size
, 
uöt32_t
 
off£t
, 
size_t
 
u£rd©a
)

152 
öt32_t
 
íd
=0, 
cur
, 
Àn
 = 0;

153 
öt32_t
 
Lí_Såög
;

154 i‡(
off£t
 > 
README_SIZE
) ;

155 i‡(
off£t
 + 
size
 > 
README_SIZE
)

156 
Àn
 = 
README_SIZE
 - 
off£t
; 

157 
Àn
 = 
size
;

158 
vî_s
[8];

159 
	`ôﬂ
 (
Vîsi⁄_MSD_2
, 
vî_s
, 10);

160 
íd
 = 
	`°æí
(&
vî_s
[0]);

161 
Lí_Såög
 = 
	`°æí
(&
ªadme_fûe
[0]);

162 
uöt32_t
 
i
 = 0; i < 
Àn
; i++)

164 i‡((
off£t
+
i
Ë< 
Lí_Såög
)

166 
de°
[
i
] = 
ªadme_fûe
[
off£t
+i];

170 
cur
 = (
off£t
+
i
Ë- 
Lí_Såög
;

171 i‡(
cur
<(1+
íd
))

173 if(
cur
==(1))

175 
de°
[
i
] = '.';

177 if(
cur
>(1))

179 
de°
[
i
] = 
vî_s
[
cur
-1];

183 
de°
[
i
] = 
vî_s
[
cur
];

188 
de°
[
i
]='\r';

192 
	}
}

194 
	$ödex_ªad_¥oc
(
uöt8_t
 *
de°
, 
size
, 
uöt32_t
 
off£t
, 
size_t
 
u£rd©a
)

196 
öt32_t
 
Lí_Såög
;

197 
Àn
 = 0;

198 i‡(
off£t
 > 
INDEX_SIZE
) ;

199 i‡(
off£t
 + 
size
 > 
INDEX_SIZE
)

200 
Àn
 = 
INDEX_SIZE
 - 
off£t
; 

201 
Àn
 = 
size
;

203 
Lí_Såög
 = 
	`°æí
(&
ödex_fûe
[0]);

204 
uöt32_t
 
i
 = 0; i < 
Àn
; i++)

206 i‡((
off£t
+
i
Ë< 
Lí_Såög
)

208 
de°
[
i
] = 
ödex_fûe
[
off£t
+i];

212 
de°
[
i
]=' ';

215 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\emfat.c

29 
	~"emÁt.h
"

31 #ifde‡
__˝lu•lus


35 
	#SECT
 512

	)

36 
	#CLUST
 4096

	)

37 
	#SECT_PER_CLUST
 (
CLUST
 / 
SECT
)

	)

38 
	#SIZE_TO_NSECT
(
s
Ë((sË=0 ? 1 : ((sË+ 
SECT
 - 1Ë/ SECT)

	)

39 
	#SIZE_TO_NCLUST
(
s
Ë((sË=0 ? 1 : ((sË+ 
CLUST
 - 1Ë/ CLUST)

	)

41 
	#CLUST_FREE
 0x00000000

	)

42 
	#CLUST_RESERVED
 0x00000001

	)

43 
	#CLUST_BAD
 0x0FFFFFF7

	)

44 
	#CLUST_ROOT_END
 0X0FFFFFF8

	)

45 
	#CLUST_EOF
 0x0FFFFFFF

	)

47 
	#MAX_DIR_ENTRY_CNT
 16

	)

48 
	#FILE_SYS_TYPE_OFF
 82

	)

49 
	#BYTES_PER_SEC_OFF
 11

	)

50 
	#SEC_PER_CLUS_OFF
 13

	)

51 
	#RES_SEC_CNT_OFF
 14

	)

52 
	#FAT_CNT_OFF
 16

	)

53 
	#TOT_SEC_CNT_OFF
 32

	)

54 
	#SEC_PER_FAT
 36

	)

55 
	#ROOT_DIR_STRT_CLUS_OFF
 44

	)

56 
	#FS_INFOSECTOR_OFF
 48

	)

57 
	#BACKUP_BOOT_SEC_OFF
 50

	)

58 
	#NXT_FREE_CLUS_OFF
 492

	)

59 
	#FILE_SYS_TYPE_LENGTH
 8

	)

60 
	#SHRT_FILE_NAME_LEN
 11

	)

61 
	#STRT_CLUS_LOW_OFF
 26

	)

62 
	#STRT_CLUS_HIGH_OFF
 20

	)

63 
	#FILE_SIZE_OFF
 28

	)

64 
	#ATTR_OFF
 11

	)

65 
	#FILE_STAT_LEN
 21

	)

66 
	#CHECK_SUM_OFF
 13

	)

67 
	#FILE_NAME_SHRT_LEN
 8

	)

68 
	#FILE_NAME_EXTN_LEN
 3

	)

69 
	#LONG_FILE_NAME_LEN
 255

	)

70 
	#LOW_CLUSWORD_MASK
 0x0000FFFF

	)

71 
	#HIGH_CLUSWORD_MASK
 0xFFFF0000

	)

72 
	#LONG_FNAME_MASK
 0x0F

	)

73 
	#LAST_ORD_FIELD_SEQ
 0x40

	)

74 
	#LFN_END_MARK
 0xFFFF

	)

75 
	#LFN_TERM_MARK
 0x0000

	)

76 
	#LFN_FIRST_OFF
 0x01

	)

77 
	#LFN_SIXTH_OFF
 0x0E

	)

78 
	#LFN_TWELVETH_OFF
 0x1C

	)

79 
	#LFN_FIRST_SET_CNT
 5

	)

80 
	#LFN_SEC_SET_CNT
 6

	)

81 
	#LFN_THIRD_SET_CNT
 2

	)

82 
	#LFN_FIRST_SET_LEN
 10

	)

83 
	#LFN_SEC_SET_LEN
 12

	)

84 
	#LFN_THIRD_SET_LEN
 4

	)

85 
	#LFN_EMPTY_LEN
 2

	)

86 
	#LFN_LEN_PER_ENTRY
 13

	)

87 
	#FNAME_EXTN_SEP_OFF
 6

	)

88 
	#FNAME_SEQ_NUM_OFF
 7

	)

89 
	#BYTES_PER_CLUSTER_ENTRY
 4

	)

90 
	#DIR_ENTRY_LEN
 32

	)

91 
	#VOL_ID_LEN
 4

	)

92 
	#VOL_LABEL_LEN
 11

	)

93 
	#RESERV_LEN
 12

	)

94 
	#FS_VER_LEN
 2

	)

95 
	#OEM_NAME_LEN
 8

	)

96 
	#JUMP_INS_LEN
 3

	)

97 
	#MAX_FAT_CNT
 2

	)

98 
	#SPACE_VAL
 32

	)

99 
	#FILE_READ
 0x01

	)

100 
	#FILE_WRITE
 0X02

	)

101 
	#FILE_CREATE_NEW
 0x04

	)

102 
	#FILE_CREATE_ALWAYS
 0x08

	)

103 
	#FILE_APPEND
 0x10

	)

104 
	#ATTR_READ
 0x01

	)

105 
	#ATTR_HIDDEN
 0x02

	)

106 
	#ATTR_SYSTEM
 0x04

	)

107 
	#ATTR_VOL_LABEL
 0x08

	)

108 
	#ATTR_DIR
 0x10

	)

109 
	#ATTR_ARCHIVE
 0x20

	)

110 
	#ATTR_LONG_FNAME
 0x0F

	)

111 
	#FREE_DIR_ENTRY
 0x00

	)

112 
	#DEL_DIR_ENTRY
 0xE5

	)

113 
	#DOT_DIR_ENTRY
 0x2E

	)

114 
	#ASCII_DIFF
 32

	)

115 
	#FILE_SEEK_SET
 0

	)

116 
	#FILE_SEEK_CUR
 1

	)

117 
	#FILE_SEEK_END
 2

	)

118 
	#DELIMITER
 '/'

	)

119 
	#EXTN_DELIMITER
 '.'

	)

120 
	#TILDE
 '~'

	)

121 
	#FULL_SHRT_NAME_LEN
 13

	)

123 #¥agm®
∑ck
(
push
, 1)

127 
uöt8_t
 
°©us
;

128 
uöt8_t
 
°¨t_hód
;

129 
uöt8_t
 
°¨t_£˘‹
;

130 
uöt8_t
 
°¨t_cylödî
;

131 
uöt8_t
 
P¨tTy≥
;

132 
uöt8_t
 
íd_hód
;

133 
uöt8_t
 
íd_£˘‹
;

134 
uöt8_t
 
íd_cylödî
;

135 
uöt32_t
 
SèπLBA
;

136 
uöt32_t
 
EndLBA
;

137 } 
	tmbr_∑π_t
;

141 
uöt8_t
 
Code
[440];

142 
uöt32_t
 
DiskSig
;

143 
uöt16_t
 
Re£rved
;

144 
mbr_∑π_t
 
P¨tTabÀ
[4];

145 
uöt8_t
 
BoŸSig«tuª
[2];

146 } 
	tmbr_t
;

150 
uöt8_t
 
jump
[
JUMP_INS_LEN
];

151 
uöt8_t
 
OEM_«me
[
OEM_NAME_LEN
];

152 
uöt16_t
 
byãs_≥r_£c
;

153 
uöt8_t
 
£c_≥r_˛us
;

154 
uöt16_t
 
ª£rved_£c_˙t
;

155 
uöt8_t
 
Át_˙t
;

156 
uöt16_t
 
roŸ_dú_max_˙t
;

157 
uöt16_t
 
tŸ_£˘‹s
;

158 
uöt8_t
 
medü_desc
;

159 
uöt16_t
 
£c_≥r_Át_Át16
;

160 
uöt16_t
 
£c_≥r_åack
;

161 
uöt16_t
 
numbî_of_hóds
;

162 
uöt32_t
 
hiddí_£c_˙t
;

163 
uöt32_t
 
tﬁ_£˘‹_˙t
;

164 
uöt32_t
 
£˘‹s_≥r_Át
;

165 
uöt16_t
 
ext_Êags
;

166 
uöt8_t
 
fs_vîsi⁄
[
FS_VER_LEN
];

167 
uöt32_t
 
roŸ_dú_°π_˛u°î
;

168 
uöt16_t
 
fs_öfo_£˘‹
;

169 
uöt16_t
 
backup_boŸ_£˘‹
;

170 
uöt8_t
 
ª£rved
[
RESERV_LEN
];

171 
uöt8_t
 
drive_numbî
;

172 
uöt8_t
 
ª£rved1
;

173 
uöt8_t
 
boŸ_sig
;

174 
uöt8_t
 
vﬁume_id
[
VOL_ID_LEN
];

175 
uöt8_t
 
vﬁume_œbñ
[
VOL_LABEL_LEN
];

176 
uöt8_t
 
fûe_sy°em_ty≥
[
FILE_SYS_TYPE_LENGTH
];

177 } 
	tboŸ_£˘‹
;

181 
uöt32_t
 
sig«tuª1
;

182 
uöt32_t
 
ª£rved1
[120];

183 
uöt32_t
 
sig«tuª2
;

184 
uöt32_t
 
‰ì_˛u°îs
;

185 
uöt32_t
 
√xt_˛u°î
;

186 
uöt32_t
 
ª£rved2
[3];

187 
uöt32_t
 
sig«tuª3
;

188 } 
	tfsöfo_t
;

192 
uöt8_t
 
«me
[
FILE_NAME_SHRT_LEN
];

193 
uöt8_t
 
exä
[
FILE_NAME_EXTN_LEN
];

194 
uöt8_t
 
©å
;

195 
uöt8_t
 
ª£rved
;

196 
uöt8_t
 
¸t_time_ã¡h
;

197 
uöt16_t
 
¸t_time
;

198 
uöt16_t
 
¸t_d©e
;

199 
uöt16_t
 
l°_ac˚ss_d©e
;

200 
uöt16_t
 
°π_˛us_hw‹d
;

201 
uöt16_t
 
l°_mod_time
;

202 
uöt16_t
 
l°_mod_d©e
;

203 
uöt16_t
 
°π_˛us_lw‹d
;

204 
uöt32_t
 
size
;

205 } 
	tdú_íåy
;

209 
uöt8_t
 
‹d_fõld
;

210 
uöt8_t
 
‚ame0_4
[
LFN_FIRST_SET_LEN
];

211 
uöt8_t
 
Êag
;

212 
uöt8_t
 
ª£rved
;

213 
uöt8_t
 
chksum
;

214 
uöt8_t
 
‚ame6_11
[
LFN_SEC_SET_LEN
];

215 
uöt8_t
 
em±y
[
LFN_EMPTY_LEN
];

216 
uöt8_t
 
‚ame12_13
[
LFN_THIRD_SET_LEN
];

217 } 
	tl‚_íåy
;

219 #¥agm®
∑ck
(
p›
)

221 
boﬁ
 
emÁt_öô_íåõs
(
emÁt_íåy_t
 *
íåõs
)

223 
emÁt_íåy_t
 *
e
;

224 
i
, 
n
;

226 
e
 = &
íåõs
[0];

227 i‡(
e
->
Àvñ
 !0 || !e->
dú
 ||É->
«me
 =
NULL
Ë 
Ál£
;

229 
e
->
¥iv
.
t›
 = 
NULL
;

230 
e
->
¥iv
.
√xt
 = 
NULL
;

231 
e
->
¥iv
.
sub
 = 
NULL
;

232 
e
->
¥iv
.
num_subíåy
 = 0;

234 
n
 = 0;

235 
i
 = 1; 
íåõs
[i].
«me
 !
NULL
; i++)

237 
íåõs
[
i
].
¥iv
.
t›
 = 
NULL
;

238 
íåõs
[
i
].
¥iv
.
√xt
 = 
NULL
;

239 
íåõs
[
i
].
¥iv
.
sub
 = 
NULL
;

240 
íåõs
[
i
].
¥iv
.
num_subíåy
 = 0;

241 i‡(
íåõs
[
i
].
Àvñ
 =
n
 - 1)

243 i‡(
n
 =0Ë 
Ál£
;

244 
e
 =É->
¥iv
.
t›
;

245 
n
--;

247 i‡(
íåõs
[
i
].
Àvñ
 =
n
 + 1)

249 i‡(!
e
->
dú
Ë 
Ál£
;

250 
e
->
¥iv
.
sub
 = &
íåõs
[
i
];

251 
íåõs
[
i
].
¥iv
.
t›
 = 
e
;

252 
e
 = &
íåõs
[
i
];

253 
n
++;

256 i‡(
íåõs
[
i
].
Àvñ
 =
n
)

258 i‡(
n
 =0Ë 
Ál£
;

259 
e
->
¥iv
.
t›
->¥iv.
num_subíåy
++;

260 
íåõs
[
i
].
¥iv
.
t›
 = 
e
->priv.top;

261 
e
->
¥iv
.
√xt
 = &
íåõs
[
i
];

262 
e
 = &
íåõs
[
i
];

265  
Ál£
;

267  
åue
;

270 
lba_to_chs
(
lba
, 
uöt8_t
 *
˛
, uöt8_à*
ch
, uöt8_à*
dh
)

272 
cylödî
, 
hód
, 
£˘‹
;

273 
£˘‹s
 = 63;

274 
hóds
 = 255;

275 
cylödîs
 = 1024;

276 
£˘‹
 = 
lba
 % 
£˘‹s
 + 1;

277 
hód
 = (
lba
 / 
£˘‹s
Ë% 
hóds
;

278 
cylödî
 = 
lba
 / (
£˘‹s
 * 
hóds
);

279 i‡(
cylödî
 >
cylödîs
)

281 *
˛
 = *
ch
 = *
dh
 = 0xff;

284 *
˛
 = 
£˘‹
 | ((
cylödî
 & 0x300) >> 2);

285 *
ch
 = 
cylödî
 & 0xFF;

286 *
dh
 = 
hód
;

289 
boﬁ
 
emÁt_öô
(
emÁt_t
 *
emÁt
, c⁄° *
œbñ
, 
emÁt_íåy_t
 *
íåõs
)

291 
uöt32_t
 
£˘_≥r_Át
;

292 
uöt32_t
 
˛u°
;

293 
emÁt_íåy_t
 *
e
;

294 
i
;

296 i‡(
emÁt
 =
NULL
 || 
œbñ
 =NULL || 
íåõs
 == NULL)

297  
Ál£
;

299 i‡(!
emÁt_öô_íåõs
(
íåõs
))

300  
Ál£
;

302 
˛u°
 = 2;

303 
i
 = 0; 
íåõs
[i].
«me
 !
NULL
; i++)

305 
e
 = &
íåõs
[
i
];

306 i‡(
e
->
dú
)

308 
e
->
cuº_size
 = 0;

309 
e
->
max_size
 = 0;

310 
e
->
¥iv
.
fú°_˛u°
 = 
˛u°
;

311 
e
->
¥iv
.
œ°_˛u°
 = 
˛u°
 + 
SIZE_TO_NCLUST
”->¥iv.
num_subíåy
 * (
dú_íåy
)) - 1;

312 
e
->
¥iv
.
œ°_ª£rved
 =É->¥iv.
œ°_˛u°
;

316 
e
->
¥iv
.
fú°_˛u°
 = 
˛u°
;

317 
e
->
¥iv
.
œ°_˛u°
 =É->¥iv.
fú°_˛u°
 + 
SIZE_TO_NCLUST
(
íåõs
[
i
].
cuº_size
) - 1;

318 
e
->
¥iv
.
œ°_ª£rved
 =É->¥iv.
fú°_˛u°
 + 
SIZE_TO_NCLUST
(
íåõs
[
i
].
max_size
) - 1;

320 
˛u°
 = 
e
->
¥iv
.
œ°_ª£rved
 + 1;

322 
˛u°
 -= 2;

324 
emÁt
->
vﬁ_œbñ
 = 
œbñ
;

325 
emÁt
->
¥iv
.
num_íåõs
 = 
i
;

326 
emÁt
->
¥iv
.
boŸ_lba
 = 62;

327 
emÁt
->
¥iv
.
fsöfo_lba
 =ÉmÁt->¥iv.
boŸ_lba
 + 1;

328 
emÁt
->
¥iv
.
Át1_lba
 =ÉmÁt->¥iv.
fsöfo_lba
 + 1;

329 
emÁt
->
¥iv
.
num_˛u°
 = 
˛u°
;

330 
£˘_≥r_Át
 = 
SIZE_TO_NSECT
((
uöt64_t
)
emÁt
->
¥iv
.
num_˛u°
 * 4);

331 
emÁt
->
¥iv
.
Át2_lba
 =ÉmÁt->¥iv.
Át1_lba
 + 
£˘_≥r_Át
;

332 
emÁt
->
¥iv
.
roŸ_lba
 =ÉmÁt->¥iv.
Át2_lba
 + 
£˘_≥r_Át
;

333 
emÁt
->
¥iv
.
íåõs
 =Éntries;

334 
emÁt
->
¥iv
.
œ°_íåy
 = 
íåõs
;

335 
emÁt
->
disk_£˘‹s
 = 
˛u°
 * 
SECT_PER_CLUST
 +ÉmÁt->
¥iv
.
roŸ_lba
;

336 
emÁt
->
vﬁ_size
 = (
uöt64_t
ÎmÁt->
disk_£˘‹s
 * 
SECT
;

340  
åue
;

343 
ªad_mbr_£˘‹
(c⁄° 
emÁt_t
 *
emÁt
, 
uöt8_t
 *
£˘
)

345 
mbr_t
 *
mbr
;

346 
mem£t
(
£˘
, 0, 
SECT
);

347 
mbr
 = (
mbr_t
 *)
£˘
;

348 
mbr
->
DiskSig
 = 0;

349 
mbr
->
Re£rved
 = 0;

350 
mbr
->
P¨tTabÀ
[0].
°©us
 = 0x80;

351 
mbr
->
P¨tTabÀ
[0].
P¨tTy≥
 = 0x0C;

352 
mbr
->
P¨tTabÀ
[0].
SèπLBA
 = 
emÁt
->
¥iv
.
boŸ_lba
;

353 
mbr
->
P¨tTabÀ
[0].
EndLBA
 = 
emÁt
->
disk_£˘‹s
;

354 
lba_to_chs
(
mbr
->
P¨tTabÀ
[0].
SèπLBA
, &mbr->P¨tTabÀ[0].
°¨t_£˘‹
, &mbr->P¨tTabÀ[0].
°¨t_cylödî
, &mbr->P¨tTabÀ[0].
°¨t_hód
);

355 
lba_to_chs
(
emÁt
->
disk_£˘‹s
 - 1, &
mbr
->
P¨tTabÀ
[0].
íd_£˘‹
, &mbr->P¨tTabÀ[0].
íd_cylödî
, &mbr->P¨tTabÀ[0].
íd_hód
);

356 
mbr
->
BoŸSig«tuª
[0] = 0x55;

357 
mbr
->
BoŸSig«tuª
[1] = 0xAA;

360 
ªad_boŸ_£˘‹
(c⁄° 
emÁt_t
 *
emÁt
, 
uöt8_t
 *
£˘
)

362 
boŸ_£˘‹
 *
bs
;

363 
mem£t
(
£˘
, 0, 
SECT
);

364 
bs
 = (
boŸ_£˘‹
 *)
£˘
;

365 
bs
->
jump
[0] = 0xEB;

366 
bs
->
jump
[1] = 0x58;

367 
bs
->
jump
[2] = 0x90;

368 
mem˝y
(
bs
->
OEM_«me
, "MSDOS5.0", 8);

369 
bs
->
byãs_≥r_£c
 = 
SECT
;

370 
bs
->
£c_≥r_˛us
 = 8;

371 
bs
->
ª£rved_£c_˙t
 = 2;

372 
bs
->
Át_˙t
 = 2;

373 
bs
->
roŸ_dú_max_˙t
 = 0;

374 
bs
->
tŸ_£˘‹s
 = 0;

375 
bs
->
medü_desc
 = 0xF8;

376 
bs
->
£c_≥r_Át_Át16
 = 0;

377 
bs
->
£c_≥r_åack
 = 63;

378 
bs
->
numbî_of_hóds
 = 0xFF;

379 
bs
->
hiddí_£c_˙t
 = 62;

380 
bs
->
tﬁ_£˘‹_˙t
 = 
emÁt
->
disk_£˘‹s
 -ÉmÁt->
¥iv
.
boŸ_lba
;

381 
bs
->
£˘‹s_≥r_Át
 = 
emÁt
->
¥iv
.
Át2_lba
 -ÉmÁt->¥iv.
Át1_lba
;

382 
bs
->
ext_Êags
 = 0;

383 
bs
->
fs_vîsi⁄
[0] = 0;

384 
bs
->
fs_vîsi⁄
[1] = 0;

385 
bs
->
roŸ_dú_°π_˛u°î
 = 2;

386 
bs
->
fs_öfo_£˘‹
 = 1;

387 
bs
->
backup_boŸ_£˘‹
 = 0;

388 
bs
->
drive_numbî
 = 128;

389 
bs
->
boŸ_sig
 = 0x29;

390 
bs
->
vﬁume_id
[0] = 148;

391 
bs
->
vﬁume_id
[1] = 14;

392 
bs
->
vﬁume_id
[2] = 13;

393 
bs
->
vﬁume_id
[3] = 8;

394 
mem˝y
(
bs
->
vﬁume_œbñ
, "NO NAME ", 12);

395 
mem˝y
(
bs
->
fûe_sy°em_ty≥
, "FAT32 ", 8);

396 
£˘
[
SECT
 - 2] = 0x55;

397 
£˘
[
SECT
 - 1] = 0xAA;

400 
	#IS_CLUST_OF
(
˛u°
, 
íåy
Ë((˛u°Ë>”¡ry)->
¥iv
.
fú°_˛u°
 && (˛u°Ë<”¡ry)->¥iv.
œ°_ª£rved
)

	)

402 
emÁt_íåy_t
 *
föd_íåy
(c⁄° 
emÁt_t
 *
emÁt
, 
uöt32_t
 
˛u°
,ÉmÁt_íåy_à*
√¨e°
)

404 i‡(
√¨e°
 =
NULL
)

405 
√¨e°
 = 
emÁt
->
¥iv
.
íåõs
;

407 i‡(
√¨e°
->
¥iv
.
fú°_˛u°
 > 
˛u°
)

408 
√¨e°
 >
emÁt
->
¥iv
.
íåõs
)

410 i‡(
IS_CLUST_OF
(
˛u°
, 
√¨e°
))

411  
√¨e°
;

412 
√¨e°
--;

415 
√¨e°
->
«me
 !
NULL
)

417 i‡(
IS_CLUST_OF
(
˛u°
, 
√¨e°
))

418  
√¨e°
;

419 
√¨e°
++;

421  
NULL
;

424 
ªad_fsöfo_£˘‹
(c⁄° 
emÁt_t
 *
emÁt
, 
uöt8_t
 *
£˘
)

426 
fsöfo_t
 *
öfo
 = (fsöfo_à*)
£˘
;

427 
öfo
->
sig«tuª1
 = 0x41615252L;

428 
öfo
->
sig«tuª2
 = 0x61417272L;

429 
öfo
->
‰ì_˛u°îs
 = 0;

430 
öfo
->
√xt_˛u°î
 = 
emÁt
->
¥iv
.
num_˛u°
 + 2;

431 
mem£t
(
öfo
->
ª£rved1
, 0, (info->reserved1));

432 
mem£t
(
öfo
->
ª£rved2
, 0, (info->reserved2));

433 
öfo
->
sig«tuª3
 = 0xAA550000;

436 
ªad_Át_£˘‹
(
emÁt_t
 *
emÁt
, 
uöt8_t
 *
£˘
, 
uöt32_t
 
ödex
)

438 
emÁt_íåy_t
 *
À
;

439 
uöt32_t
 *
vÆues
;

440 
uöt32_t
 
cou¡
;

441 
uöt32_t
 
cuº
;

443 
vÆues
 = (
uöt32_t
 *)
£˘
;

444 
cuº
 = 
ödex
 * 128;

445 
cou¡
 = 128;

447 i‡(
cuº
 == 0)

449 *
vÆues
++ = 
CLUST_ROOT_END
;

450 *
vÆues
++ = 0xFFFFFFFF;

451 
cou¡
 -= 2;

452 
cuº
 += 2;

455 
À
 = 
emÁt
->
¥iv
.
œ°_íåy
;

456 
cou¡
 != 0)

458 i‡(!
IS_CLUST_OF
(
cuº
, 
À
))

460 
À
 = 
föd_íåy
(
emÁt
, 
cuº
,Üe);

461 i‡(
À
 =
NULL
)

463 
À
 = 
emÁt
->
¥iv
.
œ°_íåy
;

464 *
vÆues
 = 
CLUST_RESERVED
;

465 
vÆues
++;

466 
cou¡
--;

467 
cuº
++;

471 i‡(
À
->
dú
)

473 i‡(
cuº
 =
À
->
¥iv
.
œ°_˛u°
)

474 *
vÆues
 = 
CLUST_EOF
; 

475 *
vÆues
 = 
cuº
 + 1;

479 i‡(
cuº
 =
À
->
¥iv
.
œ°_˛u°
)

480 *
vÆues
 = 
CLUST_EOF
; 

481 i‡(
cuº
 > 
À
->
¥iv
.
œ°_˛u°
)

482 *
vÆues
 = 
CLUST_FREE
; 

483 *
vÆues
 = 
cuº
 + 1;

485 
vÆues
++;

486 
cou¡
--;

487 
cuº
++;

489 
emÁt
->
¥iv
.
œ°_íåy
 = 
À
;

492 
fûl_íåy
(
dú_íåy
 *
íåy
, c⁄° *
«me
, 
uöt8_t
 
©å
, 
uöt32_t
 
˛u°
, c⁄° uöt32_à
cma
[3], uöt32_à
size
)

494 
i
, 
l
, 
l1
, 
l2
;

495 
dŸ_pos
;

497 
mem£t
(
íåy
, 0, (
dú_íåy
));

499 i‡(
cma
)

501 
íåy
->
¸t_d©e
 = 
cma
[0] >> 16;

502 
íåy
->
¸t_time
 = 
cma
[0] & 0xFFFF;

503 
íåy
->
l°_mod_d©e
 = 
cma
[1] >> 16;

504 
íåy
->
l°_mod_time
 = 
cma
[1] & 0xFFFF;

505 
íåy
->
l°_ac˚ss_d©e
 = 
cma
[2] >> 16;

508 
l
 = 
°æí
(
«me
);

509 
dŸ_pos
 = -1;

510 i‡((
©å
 & 
ATTR_DIR
) == 0)

511 
i
 = 
l
 - 1; i >= 0; i--)

512 i‡(
«me
[
i
] == '.')

514 
dŸ_pos
 = 
i
;

517 i‡(
dŸ_pos
 == -1)

519 
l1
 = 
l
 > 
FILE_NAME_SHRT_LEN
 ? FILE_NAME_SHRT_LEN :Ü;

520 
l2
 = 0;

524 
l1
 = 
dŸ_pos
;

525 
l1
 =Ü1 > 
FILE_NAME_SHRT_LEN
 ? FILE_NAME_SHRT_LEN :Ü1;

526 
l2
 = 
l
 - 
dŸ_pos
 - 1;

527 
l2
 =Ü2 > 
FILE_NAME_EXTN_LEN
 ? FILE_NAME_EXTN_LEN :Ü2;

529 
mem£t
(
íåy
->
«me
, ' ', 
FILE_NAME_SHRT_LEN
 + 
FILE_NAME_EXTN_LEN
);

530 
mem˝y
(
íåy
->
«me
,Çame, 
l1
);

531 
mem˝y
(
íåy
->
exä
, 
«me
 + 
dŸ_pos
 + 1, 
l2
);

532 
i
 = 0; i < 
FILE_NAME_SHRT_LEN
 + 
FILE_NAME_EXTN_LEN
; i++)

534 i‡(
i
<
FILE_NAME_SHRT_LEN
)

536 i‡(
íåy
->
«me
[
i
] >= 'a' &&Éntry->name[i] <= 'z')

537 
íåy
->
«me
[
i
] -= 0x20;

539 i‡((
i
-
FILE_NAME_SHRT_LEN
)<
FILE_NAME_EXTN_LEN
)

541 i‡(
íåy
->
exä
[
i
-
FILE_NAME_SHRT_LEN
] >= 'a' &&Éntry->extn[i-FILE_NAME_SHRT_LEN] <= 'z')

542 
íåy
->
exä
[
i
-
FILE_NAME_SHRT_LEN
] -= 0x20;

546 
íåy
->
©å
 =áttr;

547 
íåy
->
ª£rved
 = 24;

548 
íåy
->
°π_˛us_hw‹d
 = 
˛u°
 >> 16;

549 
íåy
->
°π_˛us_lw‹d
 = 
˛u°
;

550 
íåy
->
size
 = size;

554 
fûl_dú_£˘‹
(
emÁt_t
 *
emÁt
, 
uöt8_t
 *
d©a
, 
emÁt_íåy_t
 *
íåy
, 
uöt32_t
 
ªl_£˘
)

556 
dú_íåy
 *
de
;

557 
uöt32_t
 
avaû
;

559 
mem£t
(
d©a
, 0, 
SECT
);

560 
de
 = (
dú_íåy
 *)
d©a
;

561 
avaû
 = 
SECT
;

563 i‡(
ªl_£˘
 == 0)

566 i‡(
íåy
->
¥iv
.
t›
 =
NULL
)

568 
fûl_íåy
(
de
++, 
emÁt
->
vﬁ_œbñ
, 
ATTR_VOL_LABEL
, 0, 0, 0);

569 
avaû
 -(
dú_íåy
);

573 
fûl_íåy
(
de
++, ".", 
ATTR_DIR
 | 
ATTR_READ
, 
íåy
->
¥iv
.
fú°_˛u°
, 0, 0);

574 
fûl_íåy
(
de
++, "..", 
ATTR_DIR
 | 
ATTR_READ
, 
íåy
->
¥iv
.
t›
->¥iv.
fú°_˛u°
, 0, 0);

575 
avaû
 -(
dú_íåy
) * 2;

577 
íåy
 =É¡ry->
¥iv
.
sub
;

582 
n
;

583 
n
 = 
ªl_£˘
 * (
SECT
 / (
dú_íåy
));

584 
n
 -
íåy
->
¥iv
.
t›
 =
NULL
 ? 1 : 2;

585 
íåy
 =É¡ry->
¥iv
.
sub
;

586 
n
 > 0 && 
íåy
 !
NULL
)

588 
íåy
 =É¡ry->
¥iv
.
√xt
;

589 
n
--;

592 
íåy
 !
NULL
 && 
avaû
 >(
dú_íåy
))

594 i‡(
íåy
->
dú
)

595 
fûl_íåy
(
de
++, 
íåy
->
«me
, 
ATTR_DIR
 | 
ATTR_READ
,É¡ry->
¥iv
.
fú°_˛u°
,É¡ry->
cma_time
, 0); 

596 
fûl_íåy
(
de
++, 
íåy
->
«me
, 
ATTR_ARCHIVE
 | 
ATTR_READ
,É¡ry->
¥iv
.
fú°_˛u°
,É¡ry->
cma_time
,É¡ry->
cuº_size
);

597 
íåy
 =É¡ry->
¥iv
.
√xt
;

598 
avaû
 -(
dú_íåy
);

602 
ªad_d©a_£˘‹
(
emÁt_t
 *
emÁt
, 
uöt8_t
 *
d©a
, 
uöt32_t
 
ªl_£˘
)

604 
emÁt_íåy_t
 *
À
;

605 
uöt32_t
 
˛u°î
;

606 
˛u°î
 = 
ªl_£˘
 / 8 + 2;

607 
ªl_£˘
 =Ñel_sect % 8;

609 
À
 = 
emÁt
->
¥iv
.
œ°_íåy
;

610 i‡(!
IS_CLUST_OF
(
˛u°î
, 
À
))

612 
À
 = 
föd_íåy
(
emÁt
, 
˛u°î
,Üe);

613 i‡(
À
 =
NULL
)

615 
i
;

616 
i
 = 0; i < 
SECT
 / 4; i++)

617 ((
uöt32_t
 *)
d©a
)[
i
] = 0xEFBEADDE;

620 
emÁt
->
¥iv
.
œ°_íåy
 = 
À
;

622 i‡(
À
->
dú
)

624 
fûl_dú_£˘‹
(
emÁt
, 
d©a
, 
À
, 
ªl_£˘
);

627 i‡(
À
->
ªadcb
 =
NULL
)

628 
mem£t
(
d©a
, 0, 
SECT
);

631 
uöt32_t
 
off£t
 = 
˛u°î
 - 
À
->
¥iv
.
fú°_˛u°
;

632 
off£t
 = off£à* 
CLUST
 + 
ªl_£˘
 * 
SECT
;

633 
À
->
ªadcb
(
d©a
, 
SECT
, 
off£t
 +Üe->off£t,Üe->
u£r_d©a
);

638 
emÁt_ªad
(
emÁt_t
 *
emÁt
, 
uöt8_t
 *
d©a
, 
uöt32_t
 
£˘‹
, 
num_£˘‹s
)

640 
num_£˘‹s
 > 0)

642 i‡(
£˘‹
 >
emÁt
->
¥iv
.
roŸ_lba
)

643 
ªad_d©a_£˘‹
(
emÁt
, 
d©a
, 
£˘‹
 -ÉmÁt->
¥iv
.
roŸ_lba
);

645 i‡(
£˘‹
 == 0)

646 
ªad_mbr_£˘‹
(
emÁt
, 
d©a
);

648 i‡(
£˘‹
 =
emÁt
->
¥iv
.
fsöfo_lba
)

649 
ªad_fsöfo_£˘‹
(
emÁt
, 
d©a
);

651 i‡(
£˘‹
 =
emÁt
->
¥iv
.
boŸ_lba
)

652 
ªad_boŸ_£˘‹
(
emÁt
, 
d©a
);

654 i‡(
£˘‹
 >
emÁt
->
¥iv
.
Át1_lba
 && se˘‹ <ÉmÁt->¥iv.
Át2_lba
)

655 
ªad_Át_£˘‹
(
emÁt
, 
d©a
, 
£˘‹
 -ÉmÁt->
¥iv
.
Át1_lba
);

657 i‡(
£˘‹
 >
emÁt
->
¥iv
.
Át2_lba
 && se˘‹ <ÉmÁt->¥iv.
roŸ_lba
)

658 
ªad_Át_£˘‹
(
emÁt
, 
d©a
, 
£˘‹
 -ÉmÁt->
¥iv
.
Át2_lba
);

660 
mem£t
(
d©a
, 0, 
SECT
);

661 
d©a
 +
SECT
;

662 
num_£˘‹s
--;

663 
£˘‹
++;

667 
wrôe_d©a_£˘‹
(
emÁt_t
 *
emÁt
, c⁄° 
uöt8_t
 *
d©a
, 
uöt32_t
 
ªl_£˘
)

669 
emÁt_íåy_t
 *
À
;

670 
uöt32_t
 
˛u°î
;

671 
˛u°î
 = 
ªl_£˘
 / 8 + 2;

672 
ªl_£˘
 =Ñel_sect % 8;

674 
À
 = 
emÁt
->
¥iv
.
œ°_íåy
;

675 i‡(!
IS_CLUST_OF
(
˛u°î
, 
À
))

677 
À
 = 
föd_íåy
(
emÁt
, 
˛u°î
,Üe);

678 i‡(
À
 =
NULL
) ;

679 
emÁt
->
¥iv
.
œ°_íåy
 = 
À
;

681 i‡(
À
->
dú
)

686 i‡(
À
->
wrôecb
 !
NULL
)

687 
À
->
wrôecb
(
d©a
, 
SECT
, 
ªl_£˘
 * SECT +Üe->
off£t
,Üe->
u£r_d©a
);

690 
wrôe_Át_£˘‹
(
emÁt_t
 *
emÁt
, c⁄° 
uöt8_t
 *
d©a
, 
uöt32_t
 
ªl_£˘
)

694 
emÁt_wrôe
(
emÁt_t
 *
emÁt
, c⁄° 
uöt8_t
 *
d©a
, 
uöt32_t
 
£˘‹
, 
num_£˘‹s
)

696 
num_£˘‹s
 > 0)

698 i‡(
£˘‹
 >
emÁt
->
¥iv
.
roŸ_lba
)

699 
wrôe_d©a_£˘‹
(
emÁt
, 
d©a
, 
£˘‹
 -ÉmÁt->
¥iv
.
roŸ_lba
);

701 i‡(
£˘‹
 >
emÁt
->
¥iv
.
Át1_lba
 && se˘‹ <ÉmÁt->¥iv.
Át2_lba
)

702 
wrôe_Át_£˘‹
(
emÁt
, 
d©a
, 
£˘‹
 -ÉmÁt->
¥iv
.
Át1_lba
);

704 i‡(
£˘‹
 >
emÁt
->
¥iv
.
Át2_lba
 && se˘‹ <ÉmÁt->¥iv.
roŸ_lba
)

705 
wrôe_Át_£˘‹
(
emÁt
, 
d©a
, 
£˘‹
 -ÉmÁt->
¥iv
.
Át2_lba
);

706 
d©a
 +
SECT
;

707 
num_£˘‹s
--;

708 
£˘‹
++;

712 
	#FEBRUARY
 2

	)

713 
	#STARTOFTIME
 1970

	)

714 
	#SECDAY
 86400L

	)

715 
	#SECYR
 (
SECDAY
 * 365)

	)

716 
	#À≠yór
(
yór
Ë((yórË% 4 =0)

	)

717 
	#days_ö_yór
(
a
Ë(
	`À≠yór
◊Ë? 366 : 365)

	)

718 
	#days_ö_m⁄th
(
a
Ë(
m⁄th_days
[◊Ë- 1])

	)

720 
m⁄th_days
[12] = {

724 
uöt32_t
 
emÁt_cma_time_‰om_unix
(uöt32_à
tim
)

726 
i
;

727 
tmp
, 
day
;

728 
ymd
[3];

729 
hms
[3];

731 
day
 = 
tim
 / 
SECDAY
;

732 
tmp
 = 
tim
 % 
SECDAY
;

736 
hms
[0] = 
tmp
 / 3600;

737 
hms
[1] = (
tmp
 % 3600) / 60;

738 
hms
[2] = (
tmp
 % 3600) % 60;

741 
i
 = 
STARTOFTIME
; 
day
 >
days_ö_yór
(i); i++)

742 
day
 -
days_ö_yór
(
i
);

743 
ymd
[0] = 
i
;

746 i‡(
À≠yór
(
ymd
[0])) {

747 
days_ö_m⁄th
(
FEBRUARY
) = 29;

749 
i
 = 1; 
day
 >
days_ö_m⁄th
(i); i++) {

750 
day
 -
days_ö_m⁄th
(
i
);

752 
days_ö_m⁄th
(
FEBRUARY
) = 28;

753 
ymd
[1] = 
i
;

756 
ymd
[2] = 
day
 + 1;

758  
EMFAT_ENCODE_CMA_TIME
(
ymd
[2], ymd[1], ymd[0], 
hms
[0], hms[1], hms[2]);

761 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\emfat.h

29 #i‚de‡
EMFAT_H


30 
	#EMFAT_H


	)

32 
	~<°ddef.h
>

33 
	~<°döt.h
>

34 
	~<°rög.h
>

35 
	~<°dboﬁ.h
>

37 #ifde‡
__˝lu•lus


41 (*
emÁt_ªadcb_t
)(
	tuöt8_t
 *
	tde°
, 
	tsize
, 
	tuöt32_t
 
	toff£t
, 
	tsize_t
 
	tu£rd©a
);

42 (*
emÁt_wrôecb_t
)(c⁄° 
	tuöt8_t
 *
	td©a
, 
	tsize
, 
	tuöt32_t
 
	toff£t
, 
	tsize_t
 
	tu£rd©a
);

44 
emÁt_íåy
 
	temÁt_íåy_t
;

46 
	semÁt_íåy


48 c⁄° *
«me
;

49 
boﬁ
 
dú
;

50 
Àvñ
;

51 
uöt32_t
 
off£t
;

52 
uöt32_t
 
cuº_size
;

53 
uöt32_t
 
max_size
;

54 
size_t
 
u£r_d©a
;

55 
uöt32_t
 
cma_time
[3];

56 
emÁt_ªadcb_t
 
ªadcb
;

57 
emÁt_wrôecb_t
 
wrôecb
;

60 
uöt32_t
 
fú°_˛u°
;

61 
uöt32_t
 
œ°_˛u°
;

62 
uöt32_t
 
œ°_ª£rved
;

63 
uöt32_t
 
num_subíåy
;

64 
emÁt_íåy_t
 *
t›
;

65 
emÁt_íåy_t
 *
sub
;

66 
emÁt_íåy_t
 *
√xt
;

67 } 
¥iv
;

72 
uöt64_t
 
vﬁ_size
;

73 
uöt32_t
 
disk_£˘‹s
;

74 c⁄° *
vﬁ_œbñ
;

77 
uöt32_t
 
boŸ_lba
;

78 
uöt32_t
 
fsöfo_lba
;

79 
uöt32_t
 
Át1_lba
;

80 
uöt32_t
 
Át2_lba
;

81 
uöt32_t
 
roŸ_lba
;

82 
uöt32_t
 
num_˛u°
;

83 
emÁt_íåy_t
 *
íåõs
;

84 
emÁt_íåy_t
 *
œ°_íåy
;

85 
num_íåõs
;

86 } 
¥iv
;

87 } 
	temÁt_t
;

89 
boﬁ
 
emÁt_öô
(
emÁt_t
 *
emÁt
, c⁄° *
œbñ
, 
emÁt_íåy_t
 *
íåõs
);

90 
emÁt_ªad
(
emÁt_t
 *
emÁt
, 
uöt8_t
 *
d©a
, 
uöt32_t
 
£˘‹
, 
num_£˘‹s
);

91 
emÁt_wrôe
(
emÁt_t
 *
emÁt
, c⁄° 
uöt8_t
 *
d©a
, 
uöt32_t
 
£˘‹
, 
num_£˘‹s
);

93 
	#EMFAT_ENCODE_CMA_TIME
(
D
,
M
,
Y
,
h
,
m
,
s
) \

94 ((((((
Y
)-1980Ë<< 9Ë| ((
M
Ë<< 5Ë| (
D
)) << 16) | \

95 (((
h
Ë<< 11Ë| ((
m
Ë<< 5Ë| (
s
 >> 1)))

	)

97 
ölöe
 
uöt32_t
 
emÁt_ícode_cma_time
(
D
, 
M
, 
Y
, 
h
, 
m
, 
s
)

99  
EMFAT_ENCODE_CMA_TIME
(
D
,
M
,
Y
,
h
,
m
,
s
);

102 
uöt32_t
 
emÁt_cma_time_‰om_unix
(uöt32_à
unix_time
);

104 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\usbd_msc_cdc.c

2 
	~"usbd_msc_cdc.h
"

3 
	~"usbd_desc.h
"

4 
	~"usbd_˘Ãeq.h
"

6 
	~"usbd_cdc.h
"

7 
	~"usbd_msc.h
"

52 
uöt8_t
 
USBD_MSC_CDC_Inô
 (
USBD_H™dÀTy≥Def
 *
pdev
,

53 
uöt8_t
 
cfgidx
);

55 
uöt8_t
 
USBD_MSC_CDC_DeInô
 (
USBD_H™dÀTy≥Def
 *
pdev
,

56 
uöt8_t
 
cfgidx
);

58 
uöt8_t
 
USBD_MSC_CDC_Sëup
 (
USBD_H™dÀTy≥Def
 *
pdev
,

59 
USBD_SëupReqTy≥def
 *
ªq
);

61 
uöt8_t
 *
USBD_MSC_CDC_GëCfgDesc
 (
uöt16_t
 *
Àngth
);

63 
uöt8_t
 *
USBD_MSC_CDC_GëDevi˚QuÆifõrDesc
 (
uöt16_t
 *
Àngth
);

65 
uöt8_t
 
USBD_MSC_CDC_D©aIn
 (
USBD_H™dÀTy≥Def
 *
pdev
, uöt8_à
ïnum
);

67 
uöt8_t
 
USBD_MSC_CDC_D©aOut
 (
USBD_H™dÀTy≥Def
 *
pdev
, uöt8_à
ïnum
);

69 
uöt8_t
 
USBD_MSC_CDC_EP0_RxRódy
 (
USBD_H™dÀTy≥Def
 *
pdev
);

79 c⁄° 
USBD_CœssTy≥Def
 
	gUSBD_MSC_CDC_CœssDrivî
 =

81 
USBD_MSC_CDC_Inô
,

82 
USBD_MSC_CDC_DeInô
,

83 
USBD_MSC_CDC_Sëup
,

84 
NULL
,

85 
USBD_MSC_CDC_EP0_RxRódy
,

86 
USBD_MSC_CDC_D©aIn
,

87 
USBD_MSC_CDC_D©aOut
,

88 
NULL
,

89 
NULL
,

90 
NULL
,

91 
USBD_MSC_CDC_GëCfgDesc
,

92 
USBD_MSC_CDC_GëCfgDesc
,

93 
USBD_MSC_CDC_GëCfgDesc
,

94 
USBD_MSC_CDC_GëDevi˚QuÆifõrDesc
,

97 #i‡
deföed
 ( 
__ICCARM__
 )

98 #¥agm®
d©a_Æignmít
=4

101 
	#USB_MSC_CDC_CONFIG_DESC_SIZ
 98

	)

104 c⁄° 
uöt8_t
 
	gUSBD_MSC_CDC_CfgDesc
[
USB_MSC_CDC_CONFIG_DESC_SIZ
] =

107 
USB_DESC_TYPE_CONFIGURATION
,

108 
USB_MSC_CDC_CONFIG_DESC_SIZ
,

120 
MSC_INTERFACE_IDX
,

126 
USBD_IDX_INTERFACE_STR
,

132 
MSC_IN_EP
,

134 
LOBYTE
(
MSC_MAX_FS_PACKET
),

135 
HIBYTE
(
MSC_MAX_FS_PACKET
),

141 
MSC_OUT_EP
,

143 
LOBYTE
(
MSC_MAX_FS_PACKET
),

144 
HIBYTE
(
MSC_MAX_FS_PACKET
),

153 
CDC_INTERFACE_IDX
,

165 
USB_DESC_TYPE_INTERFACE
,

167 
CDC_INTERFACE_IDX
,

189 
CDC_INTERFACE_IDX
 + 1,

203 
CDC_INTERFACE_IDX
,

204 
CDC_INTERFACE_IDX
 + 1,

209 
USB_DESC_TYPE_ENDPOINT
,

210 
CDC_CMD_EP
,

212 
LOBYTE
(
CDC_CMD_PACKET_SIZE
),

213 
HIBYTE
(
CDC_CMD_PACKET_SIZE
),

219 
USB_DESC_TYPE_INTERFACE
,

220 
CDC_INTERFACE_IDX
 + 1,

231 
USB_DESC_TYPE_ENDPOINT
,

232 
CDC_OUT_EP
,

234 
LOBYTE
(
CDC_DATA_FS_MAX_PACKET_SIZE
),

235 
HIBYTE
(
CDC_DATA_FS_MAX_PACKET_SIZE
),

241 
USB_DESC_TYPE_ENDPOINT
,

242 
CDC_IN_EP
,

244 
LOBYTE
(
CDC_DATA_FS_MAX_PACKET_SIZE
),

245 
HIBYTE
(
CDC_DATA_FS_MAX_PACKET_SIZE
),

251 #i‡
deföed
 ( 
__ICCARM__
 )

252 #¥agm®
d©a_Æignmít
=4

255 c⁄° 
uöt8_t
 
	gUSBD_MSC_CDC_Devi˚QuÆifõrDesc
[
USB_LEN_DEV_QUALIFIER_DESC
] =

257 
USB_LEN_DEV_QUALIFIER_DESC
,

258 
USB_DESC_TYPE_DEVICE_QUALIFIER
,

284 
uöt8_t
 
	$USBD_MSC_CDC_Inô
 (
USBD_H™dÀTy≥Def
 *
pdev
,

285 
uöt8_t
 
cfgidx
)

288 
uöt8_t
 
ªt
 = 
	`USBD_MSC_Inô
 (
pdev
, 
cfgidx
);

289 if(
ªt
 != 0)

290  
ªt
;

293 
ªt
 = 
	`USBD_CDC_Inô
 (
pdev
, 
cfgidx
);

294 if(
ªt
 != 0)

295  
ªt
;

297  
USBD_OK
;

298 
	}
}

307 
uöt8_t
 
	$USBD_MSC_CDC_DeInô
 (
USBD_H™dÀTy≥Def
 *
pdev
, 
uöt8_t
 
cfgidx
)

310 
	`USBD_MSC_DeInô
(
pdev
, 
cfgidx
);

313 
	`USBD_CDC_DeInô
(
pdev
, 
cfgidx
);

315  
USBD_OK
;

316 
	}
}

325 
uöt8_t
 
	$USBD_MSC_CDC_Sëup
 (
USBD_H™dÀTy≥Def
 *
pdev
, 
USBD_SëupReqTy≥def
 *
ªq
)

328 if(((
ªq
->
bmReque°
 & 
USB_REQ_RECIPIENT_MASK
Ë=
USB_REQ_RECIPIENT_INTERFACE
 &&Ñeq->
wIndex
 =
MSC_INTERFACE_IDX
) ||

329 ((
ªq
->
bmReque°
 & 
USB_REQ_RECIPIENT_MASK
Ë=
USB_REQ_RECIPIENT_ENDPOINT
 && (‘eq->
wIndex
 & 0x7FË=
MSC_EP_IDX
)))

331  
	`USBD_MSC_Sëup
(
pdev
, 
ªq
);

334  
	`USBD_CDC_Sëup
(
pdev
, 
ªq
);

335 
	}
}

344 
uöt8_t
 
	$USBD_MSC_CDC_D©aIn
 (
USBD_H™dÀTy≥Def
 *
pdev
,

345 
uöt8_t
 
ïnum
)

347 if(
ïnum
 =
MSC_EP_IDX
)

348  
	`USBD_MSC_D©aIn
(
pdev
, 
ïnum
);

350  
	`USBD_CDC_D©aIn
(
pdev
, 
ïnum
);

351 
	}
}

360 
uöt8_t
 
	$USBD_MSC_CDC_D©aOut
 (
USBD_H™dÀTy≥Def
 *
pdev
,

361 
uöt8_t
 
ïnum
)

363 if(
ïnum
 =
MSC_EP_IDX
)

364  
	`USBD_MSC_D©aOut
(
pdev
, 
ïnum
);

366  
	`USBD_CDC_D©aOut
(
pdev
, 
ïnum
);

367 
	}
}

376 
uöt8_t
 *
	$USBD_MSC_CDC_GëCfgDesc
 (
uöt16_t
 *
Àngth
)

378 *
Àngth
 =  (
USBD_MSC_CDC_CfgDesc
);

379  (
uöt8_t
 *Ë
USBD_MSC_CDC_CfgDesc
;

380 
	}
}

388 
uöt8_t
 *
	$USBD_MSC_CDC_Devi˚QuÆifõrDes¸ùt‹
 (
uöt16_t
 *
Àngth
)

390 *
Àngth
 =  (
USBD_MSC_CDC_Devi˚QuÆifõrDesc
);

391  (
uöt8_t
 *Ë
USBD_MSC_CDC_Devi˚QuÆifõrDesc
;

392 
	}
}

401 
uöt8_t
 
	$USBD_MSC_CDC_EP0_RxRódy
 (
USBD_H™dÀTy≥Def
 *
pdev
)

403  
	`USBD_CDC_EP0_RxRódy
(
pdev
);

404 
	}
}

412 
uöt8_t
 *
	$USBD_MSC_CDC_GëDevi˚QuÆifõrDesc
 (
uöt16_t
 *
Àngth
)

414 *
Àngth
 =  (
USBD_MSC_CDC_Devi˚QuÆifõrDesc
);

415  (
uöt8_t
 *Ë
USBD_MSC_CDC_Devi˚QuÆifõrDesc
;

416 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\usbd_msc_cdc.h

1 #i‚de‡
USBD_MSC_CDC_H_INCLUDED


2 
	#USBD_MSC_CDC_H_INCLUDED


	)

4 #ifde‡
__˝lu•lus


9 
	~"usbd_i‹eq.h
"

49 c⁄° 
USBD_CœssTy≥Def
 
USBD_MSC_CDC_CœssDrivî
;

61 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\dma_103.c

1 
	~<dma_103.h
>

5 
	#DMA1_Ch™√l1_IT_Mask
 ((
uöt32_t
)(
DMA_ISR_GIF1
 | 
DMA_ISR_TCIF1
 | 
DMA_ISR_HTIF1
 | 
DMA_ISR_TEIF1
))

	)

6 
	#DMA1_Ch™√l2_IT_Mask
 ((
uöt32_t
)(
DMA_ISR_GIF2
 | 
DMA_ISR_TCIF2
 | 
DMA_ISR_HTIF2
 | 
DMA_ISR_TEIF2
))

	)

7 
	#DMA1_Ch™√l3_IT_Mask
 ((
uöt32_t
)(
DMA_ISR_GIF3
 | 
DMA_ISR_TCIF3
 | 
DMA_ISR_HTIF3
 | 
DMA_ISR_TEIF3
))

	)

8 
	#DMA1_Ch™√l4_IT_Mask
 ((
uöt32_t
)(
DMA_ISR_GIF4
 | 
DMA_ISR_TCIF4
 | 
DMA_ISR_HTIF4
 | 
DMA_ISR_TEIF4
))

	)

9 
	#DMA1_Ch™√l5_IT_Mask
 ((
uöt32_t
)(
DMA_ISR_GIF5
 | 
DMA_ISR_TCIF5
 | 
DMA_ISR_HTIF5
 | 
DMA_ISR_TEIF5
))

	)

10 
	#DMA1_Ch™√l6_IT_Mask
 ((
uöt32_t
)(
DMA_ISR_GIF6
 | 
DMA_ISR_TCIF6
 | 
DMA_ISR_HTIF6
 | 
DMA_ISR_TEIF6
))

	)

11 
	#DMA1_Ch™√l7_IT_Mask
 ((
uöt32_t
)(
DMA_ISR_GIF7
 | 
DMA_ISR_TCIF7
 | 
DMA_ISR_HTIF7
 | 
DMA_ISR_TEIF7
))

	)

14 
	#DMA2_Ch™√l1_IT_Mask
 ((
uöt32_t
)(
DMA_ISR_GIF1
 | 
DMA_ISR_TCIF1
 | 
DMA_ISR_HTIF1
 | 
DMA_ISR_TEIF1
))

	)

15 
	#DMA2_Ch™√l2_IT_Mask
 ((
uöt32_t
)(
DMA_ISR_GIF2
 | 
DMA_ISR_TCIF2
 | 
DMA_ISR_HTIF2
 | 
DMA_ISR_TEIF2
))

	)

16 
	#DMA2_Ch™√l3_IT_Mask
 ((
uöt32_t
)(
DMA_ISR_GIF3
 | 
DMA_ISR_TCIF3
 | 
DMA_ISR_HTIF3
 | 
DMA_ISR_TEIF3
))

	)

17 
	#DMA2_Ch™√l4_IT_Mask
 ((
uöt32_t
)(
DMA_ISR_GIF4
 | 
DMA_ISR_TCIF4
 | 
DMA_ISR_HTIF4
 | 
DMA_ISR_TEIF4
))

	)

18 
	#DMA2_Ch™√l5_IT_Mask
 ((
uöt32_t
)(
DMA_ISR_GIF5
 | 
DMA_ISR_TCIF5
 | 
DMA_ISR_HTIF5
 | 
DMA_ISR_TEIF5
))

	)

22 
	#CCR_CLEAR_Mask
 ((
uöt32_t
)0xFFFF8001)

	)

26 
	$DMA_InôDi
(
DMA_Ch™√l_Ty≥Def
* 
Ch™√l
, 
uöt32_t
 
Pîif
, uöt32_à
Mem
, 
uöt16_t
 
Size
, uöt16_à
C⁄f
)

28 
uöt32_t
 
tmp
 = 0;

30 
tmp
 = 
Ch™√l
->
CCR
;

31 
tmp
 &
CCR_CLEAR_Mask
;

32 
tmp
 |
C⁄f
;

34 
Ch™√l
->
CNDTR
 = 
Size
;

35 
Ch™√l
->
CPAR
 = 
Pîif
;

36 
Ch™√l
->
CMAR
 = 
Mem
;

37 
Ch™√l
->
CCR
 = 
tmp
;

38 
	}
}

40 
uöt32_t
 
	$DMA_GëCuºítD©aCou¡î
(
DMA_Ch™√l_Ty≥Def
* 
Ch™√l
)

42  
Ch™√l
->
CNDTR
;

43 
	}
}

46 
	$DMA_E«bÀ
(
DMA_Ch™√l_Ty≥Def
* 
Ch™√l
)

48 
Ch™√l
->
CCR
 |
DMA_CCR_EN
;

49 
	}
}

51 
	$DMA_DißbÀ
(
DMA_Ch™√l_Ty≥Def
* 
Ch™√l
)

53 
Ch™√l
->
CCR
 &(
uöt16_t
)(~
DMA_CCR_EN
);

54 
	}
}

56 
	$DMA_DeInôDi
(
DMA_Ch™√l_Ty≥Def
* 
Ch™√l
)

58 
Ch™√l
->
CCR
 &(
uöt16_t
)(~
DMA_CCR_EN
);

59 
Ch™√l
->
CCR
 = 0;

60 
Ch™√l
->
CNDTR
 = 0;

61 
Ch™√l
->
CPAR
 = 0;

62 
Ch™√l
->
CMAR
 = 0;

65 i‡(
Ch™√l
 =
DMA1_Ch™√l1
)

68 
DMA1
->
IFCR
 |
DMA1_Ch™√l1_IT_Mask
;

70 i‡(
Ch™√l
 =
DMA1_Ch™√l2
)

73 
DMA1
->
IFCR
 |
DMA1_Ch™√l2_IT_Mask
;

75 i‡(
Ch™√l
 =
DMA1_Ch™√l3
)

78 
DMA1
->
IFCR
 |
DMA1_Ch™√l3_IT_Mask
;

80 i‡(
Ch™√l
 =
DMA1_Ch™√l4
)

83 
DMA1
->
IFCR
 |
DMA1_Ch™√l4_IT_Mask
;

85 i‡(
Ch™√l
 =
DMA1_Ch™√l5
)

88 
DMA1
->
IFCR
 |
DMA1_Ch™√l5_IT_Mask
;

90 i‡(
Ch™√l
 =
DMA1_Ch™√l6
)

93 
DMA1
->
IFCR
 |
DMA1_Ch™√l6_IT_Mask
;

95 i‡(
Ch™√l
 =
DMA1_Ch™√l7
)

98 
DMA1
->
IFCR
 |
DMA1_Ch™√l7_IT_Mask
;

100 #ifde‡
DMA2


102 i‡(
Ch™√l
 =
DMA2_Ch™√l1
)

105 
DMA2
->
IFCR
 |
DMA2_Ch™√l1_IT_Mask
;

107 i‡(
Ch™√l
 =
DMA2_Ch™√l2
)

110 
DMA2
->
IFCR
 |
DMA2_Ch™√l2_IT_Mask
;

112 i‡(
Ch™√l
 =
DMA2_Ch™√l3
)

115 
DMA2
->
IFCR
 |
DMA2_Ch™√l3_IT_Mask
;

117 i‡(
Ch™√l
 =
DMA2_Ch™√l4
)

120 
DMA2
->
IFCR
 |
DMA2_Ch™√l4_IT_Mask
;

124 i‡(
Ch™√l
 =
DMA2_Ch™√l5
)

127 
DMA2
->
IFCR
 |
DMA2_Ch™√l5_IT_Mask
;

132 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\dma_103.h

1 #i‚de‡
DMA_H_INCLUDED


2 
	#DMA_H_INCLUDED


	)

4 
	~<°dboﬁ.h
>

5 
	~"öây≥s.h
"

6 
	~"sy°em_°m32f1xx.h
"

7 
	~"°m32f1xx.h
"

8 
	~<°dio.h
>

10 
	#DMAE«bÀ
 ((
uöt16_t
)(1<<0))

	)

11 
	#DMADißbÀ
 ((
uöt16_t
)0)

	)

13 
	#TønsCom∂_I¡_E«bÀ
 ((
uöt16_t
)(1<<1))

	)

14 
	#TønsCom∂_I¡_DißbÀ
 ((
uöt16_t
)0)

	)

16 
	#HÆfCom∂_I¡_E«bÀ
 ((
uöt16_t
)1<<2)

	)

17 
	#HÆfCom∂_I¡_DißbÀ
 ((
uöt16_t
)0)

	)

19 
	#TønsEº‹_I¡_E«bÀ
 ((
uöt16_t
)(1<<3))

	)

20 
	#TønsEº‹_I¡_DißbÀ
 ((
uöt16_t
)0)

	)

22 
	#RódMem‹y
 ((
uöt16_t
)(1<<4))

	)

23 
	#RódPîif
 ((
uöt16_t
)0)

	)

25 
	#CúcuœrMode_E«bÀ
 ((
uöt16_t
)1<<5)

	)

26 
	#CúcuœrMode_DißbÀ
 ((
uöt16_t
)0)

	)

29 
	#PîùhîÆInc_E«bÀ
 ((
uöt16_t
)(1<<6))

	)

30 
	#PîùhîÆInc_DißbÀ
 ((
uöt16_t
)0)

	)

32 
	#Mem‹yInc_E«bÀ
 ((
uöt16_t
)(1<<7))

	)

33 
	#Mem‹yInc_DißbÀ
 ((
uöt16_t
)0)

	)

35 
	#PD©aSize_B
 ((
uöt16_t
)0)

	)

36 
	#PD©aSize_W
 ((
uöt16_t
)0x0100)

	)

37 
	#PD©aSize_DW
 ((
uöt16_t
)0x0200)

	)

39 
	#MD©aSize_B
 ((
uöt16_t
)0)

	)

40 
	#MD©aSize_W
 ((
uöt16_t
)0x0400)

	)

41 
	#MD©aSize_DW
 ((
uöt16_t
)0x0800)

	)

44 
	#DMA_Pri‹ôy_Med
 ((
uöt16_t
)(1<<12))

	)

45 
	#DMA_Pri‹ôy_Hi
 ((
uöt16_t
)(2<<12))

	)

46 
	#DMA_Pri‹ôy_VHi
 ((
uöt16_t
)(3<<12))

	)

48 
	#M2M_E«bÀ
 (1<<14)

	)

49 
	#M2M_DißbÀ
 0

	)

51 
DMA_InôDi
(
DMA_Ch™√l_Ty≥Def
* 
Ch™√l
, 
uöt32_t
 
Pîif
, uöt32_à
Mem
, 
uöt16_t
 
Size
, uöt16_à
C⁄f
);

52 
DMA_E«bÀ
(
DMA_Ch™√l_Ty≥Def
* 
Ch™√l
);

53 
DMA_DißbÀ
(
DMA_Ch™√l_Ty≥Def
* 
Ch™√l
);

55 
uöt32_t
 
DMA_GëCuºítD©aCou¡î
(
DMA_Ch™√l_Ty≥Def
* 
Ch™√l
);

56 
DMA_DeInôDi
(
DMA_Ch™√l_Ty≥Def
* 
Ch™√l
);

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\eeprom_AT25.c

6 
	~<ì¥om_AT25.h
>

7 
	~<°m32f1xx.h
>

8 
	~<°döt.h
>

9 
	~<IO.h
>

11 
	~"FªeRTOS.h
"

12 
	~"£mphr.h
"

14 
	#AT25_£À˘
(Ë
	`IO_SëLöe
(
io_Eïrom_CS
,
OFF
)

	)

15 
	#AT25_ªÀa£
(Ë
	`IO_SëLöe
(
io_Eïrom_CS
,
ON
)

	)

17 
Sem≠h‹eH™dÀ_t
 
	gxMuãx
;

19 
uöt16_t
 
	$AT25_rxtx
(
uöt16_t
 
d©a
)

21 
SPI2
->
DR
 = (
d©a
);

23 !(
SPI2
->
SR
 & 
SPI_SR_RXNE
))

25 i‡(
	`xTaskGëScheduÀrSèã
()==
èskSCHEDULER_RUNNING
)

27 
	`èskYIELD
();

30  
SPI2
->
DR
;

31 
	}
}

33 
	#AT25_rx
(Ë
	`AT25_rxtx
(0xFF)

	)

34 
	#AT25_tx
(
d©a
Ë
	`AT25_rxtx
(d©a)

	)

36 
uöt8_t
 
	$AT25_gë_°©us_bô
()

38 
uöt8_t
 
d©a
;

40 
	`AT25_£À˘
();

41 
	`AT25_tx
(
AT25_READ_STATUS_COM
);

42 
d©a
 = 
	`AT25_rx
();

43 
	`AT25_ªÀa£
();

45  ((
uöt8_t
Ë
d©a
);

46 
	}
}

50 
	$AT25_waô_ªady_bô
()

52 
	`AT25_gë_°©us_bô
()&(
AT_25_RDY_BIT
))

54 i‡(
	`xTaskGëScheduÀrSèã
()==
èskSCHEDULER_RUNNING
)

56 
	`èskYIELD
();

59 
	}
}

62 
	$AT25_ªad_byã
(
uöt16_t
 
adr
, 
uöt8_t
 *
d©a_out
, uöt16_à
Àn
)

64 
	`AT25_waô_ªady_bô
();

65 
	`AT25_£À˘
();

66 
	`AT25_tx
(
AT25_READ_COM
);

67 
	`AT25_tx
((
adr
>>8));

68 
	`AT25_tx
((
adr
 & 0xFF));

69 
uöt32_t
 
i
=0; i<
Àn
; i++)

71 
d©a_out
[
i
] = 
	`AT25_rx
();

73 
	`AT25_ªÀa£
();

74 
	}
}

76 
	$AT25_wrôe_byã
(
uöt16_t
 
adr
, 
uöt8_t
 *
d©a_ö
, uöt16_à
Àn
)

78 
uöt32_t
 
i
=0; i<
Àn
; i++)

80 
	`AT25_waô_ªady_bô
();

81 
	`AT25_£À˘
();

82 
	`AT25_tx
(
AT25_SET_WRITE_COM
);

83 
	`AT25_ªÀa£
();

85 
	`AT25_£À˘
();

86 
	`AT25_tx
(
AT25_WRITE_COM
);

87 
	`AT25_tx
(
adr
>>8);

88 
	`AT25_tx
((
adr
 & 0xFF));

89 
	`AT25_tx
(
d©a_ö
[
i
]);

90 
	`AT25_ªÀa£
();

92 
adr
++;

94 
	}
}

97 
	$AT25_muãx_upd©e_byã
(
uöt16_t
 
adr
, 
uöt8_t
 *
d©a_ö
, uöt16_à
Àn
)

99 
uöt8_t
 
check
;

100 
	`xSem≠h‹eTake
–
xMuãx
, 
p‹tMAX_DELAY
);

101 
uöt32_t
 
i
=0; i<
Àn
; i++)

103 
	`AT25_waô_ªady_bô
();

104 
	`AT25_£À˘
();

105 
	`AT25_tx
(
AT25_READ_COM
);

106 
	`AT25_tx
((
adr
>>8));

107 
	`AT25_tx
((
adr
 & 0xFF));

109 
check
 = 
	`AT25_rx
();

111 
	`AT25_ªÀa£
();

113 i‡(
check
 !=
d©a_ö
[
i
])

115 
	`AT25_waô_ªady_bô
();

116 
	`AT25_£À˘
();

117 
	`AT25_tx
(
AT25_SET_WRITE_COM
);

118 
	`AT25_ªÀa£
();

120 
	`AT25_£À˘
();

121 
	`AT25_tx
(
AT25_WRITE_COM
);

122 
	`AT25_tx
(
adr
>>8);

123 
	`AT25_tx
((
adr
 & 0xFF));

124 
	`AT25_tx
(
d©a_ö
[
i
]);

125 
	`AT25_ªÀa£
();

127 
adr
++;

129 
	`xSem≠h‹eGive
–
xMuãx
 );

130 
	}
}

132 
	$AT25_upd©e_byã
(
uöt16_t
 
adr
, 
uöt8_t
 *
d©a_ö
, uöt16_à
Àn
)

134 
uöt8_t
 
check
;

136 
uöt32_t
 
i
=0; i<
Àn
; i++)

138 
	`AT25_waô_ªady_bô
();

139 
	`AT25_£À˘
();

140 
	`AT25_tx
(
AT25_READ_COM
);

141 
	`AT25_tx
((
adr
>>8));

142 
	`AT25_tx
((
adr
 & 0xFF));

144 
check
 = 
	`AT25_rx
();

146 
	`AT25_ªÀa£
();

148 i‡(
check
 !=
d©a_ö
[
i
])

150 
	`AT25_waô_ªady_bô
();

151 
	`AT25_£À˘
();

152 
	`AT25_tx
(
AT25_SET_WRITE_COM
);

153 
	`AT25_ªÀa£
();

155 
	`AT25_£À˘
();

156 
	`AT25_tx
(
AT25_WRITE_COM
);

157 
	`AT25_tx
(
adr
>>8);

158 
	`AT25_tx
((
adr
 & 0xFF));

159 
	`AT25_tx
(
d©a_ö
[
i
]);

160 
	`AT25_ªÀa£
();

162 
adr
++;

164 
	}
}

167 
	$AT25_Inô
 ()

169 
xMuãx
 = 
	`xSem≠h‹eCª©eMuãx
();

171 
	`AT25_waô_ªady_bô
();

172 
	`AT25_£À˘
();

173 
	`AT25_tx
(
AT25_SET_WRITE_COM
);

174 
	`AT25_ªÀa£
();

176 
	`AT25_£À˘
();

177 
	`AT25_tx
(
AT25_WRITE_STATUS_COM
);

178 
	`AT25_tx
(0x00);

179 
	`AT25_ªÀa£
();

180 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\eeprom_AT25.h

1 #i‚de‡
_EE_AT25_H


2 
	#_EE_AT25_H


	)

4 
	~<°döt.h
>

6 
	#AT25_READ_COM
 0x3

	)

7 
	#AT25_WRITE_COM
 0x2

	)

8 
	#AT25_READ_STATUS_COM
 0x5

	)

9 
	#AT25_SET_WRITE_COM
 0x6

	)

10 
	#AT25_RESET_WRITE_COM
 0x4

	)

11 
	#AT25_WRITE_STATUS_COM
 0x1

	)

13 
	#AT_25_RDY_BIT
 0x1

	)

14 
	#AT_25_WEN_BIT
 0x2

	)

17 
AT25_Inô
 ();

18 
AT25_wrôe_byã
(
uöt16_t
 
adr
, 
uöt8_t
 *
d©a_ö
, uöt16_à
Àn
);

19 
AT25_ªad_byã
(
uöt16_t
 
adr
, 
uöt8_t
 *
d©a_out
, uöt16_à
Àn
);

20 
AT25_muãx_upd©e_byã
(
uöt16_t
 
adr
, 
uöt8_t
 *
d©a_out
, uöt16_à
Àn
);

21 
AT25_upd©e_byã
(
uöt16_t
 
adr
, 
uöt8_t
 *
d©a_ö
, uöt16_à
Àn
);

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\main.c

10 
	~"maö.h
"

11 
	~<modbus_ªg.h
>

12 
	~<modbus_h¨d.h
>

14 
	~"˛ock.h
"

16 
	~<ì¥om_AT25.h
>

17 
	~<mósuª_NTC.h
>

19 
	~<°dboﬁ.h
>

20 
	~"öây≥s.h
"

21 
	~"sy°em_°m32f1xx.h
"

22 
	~"°m32f1xx.h
"

23 
	~<°dio.h
>

25 
	~"FªeRTOS.h
"

26 
	~"èsk.h
"

27 
	~"queue.h
"

28 
	~"£mphr.h
"

29 
	~"timîs.h
"

30 
	~"limôs.h
"

32 
	~"IO.h
"

33 
	~"dma_103.h
"

34 
	~"m©h.h
"

35 
	~<°rög.h
>

36 
	~"°m32f1xx_hÆ.h
"

38 
	~"emÁt.h
"

40 
	~"usb_devi˚.h
"

45 
uöt16_t
 
MBbuf_maö
[];

47 c⁄° 
RegP¨amëîs_t
 
MBRegP¨am
[
MB_NUM_BUF
] ;

49 c⁄° 
uöt32_t
 
	gDŸ_cou¡
 [4]= {1,10,100,1000};

51 vﬁ©ûê
uöt32_t
 
	gEº‹
=0;

52 vﬁ©ûê
uöt32_t
 
	gNumbî_Of_Sam∂es
=0;

53 vﬁ©ûê
öt32_t
 
	gInow
=0;

54 
uöt32_t
 
	gItŸÆ
 = 0;

55 
boﬁ
 
	gX_DI
[
MAX_DI
];

56 
öt32_t
 
	gTime_Blök_On
 = 
TIME_ON_NO_USB
;

57 
öt32_t
 
	gTime_Blök_Off
 = 
TIME_OFF_NO_USB
;

59 
xTimîH™dÀ
 
	gxCuºít_Timî
;

60 
xTimîH™dÀ
 
	gxO√_ShŸ_Timîs
 [
MAX_DO
];

61 
TaskH™dÀ_t
 
	gCuºít_Task
;

62 
TaskH™dÀ_t
 
	gTem≥øtuª_Task
;

63 
TaskH™dÀ_t
 
	gRS485_Task
;

64 
TaskH™dÀ_t
 
	gUSB_CDC_Task
;

65 
TaskH™dÀ_t
 
	gCou¡_In_EE_Task
;

67 
emÁt_t
 
emÁt
;

68 
emÁt_íåy_t
 
íåõs
[];

71 
	$ADC1_2_IRQH™dÀr
 ()

73 
p‹tBASE_TYPE
 
xHighîPri‹ôyTaskWokí
 = 
pdFALSE
;

74 i‡(
ADC2
->
SR
 & 
ADC_SR_JEOC
)

76 
ADC2
->
SR
 = ~(
ADC_SR_JEOC
);

77 
Numbî_Of_Sam∂es
++;

78 
Inow
 = (
ADC2
->
JDR1
);

79 
	`xTaskNŸifyFromISR
(
Cuºít_Task
, 
ADC_CURRENT_SAMPLE
, 
eSëBôs
, &
xHighîPri‹ôyTaskWokí
);

82 
Eº‹
|=0x1;

83 
	}
}

88 
	$vMósuª_Tem≥øtuª
 (*
pvP¨amëîs
)

90 
öt32_t
 
i
=0;

91 
uöt32_t
 
Adc_Fûãr_VÆue
[
ADC_CHANNEL_T
];

92 
uöt32_t
 
Adc_Fûãr_T_MCU
=0;

93 
uöt32_t
 
ADC_VÆ
;

94 
i
 =0; i<
ADC_CHANNEL_T
; i++)

96 
Adc_Fûãr_VÆue
[
i
]=0;

97 
MBbuf_maö
[(
i
+
Reg_T_0_Ch™√l
)] = 
TEMPERATURE_NO_MEASURE
;

99 
MBbuf_maö
[(
Reg_T_Aœrm_bô
)]=0;

100 
MBbuf_maö
[(
Reg_T_W¨nög_bô
)]=0;

101 
	`£ns‹_∑øm_öô
();

104 
i
 =0; i<
ADC_CHANNEL_T
; i++)

106 
ADC_VÆ
=(
uöt16_t
)
	`IO_gëADCvÆ
(
i
);

107 
Adc_Fûãr_VÆue
[
i
]=(Adc_Fûãr_VÆue[i]*7+
ADC_VÆ
)>>3;

108 
MBbuf_maö
[(
i
+
Reg_T_0_Ch™√l
)] = 
	`ˇlc_ãm≥øtuª
(
Adc_Fûãr_VÆue
[i]);

109 i‡((
öt16_t
)
MBbuf_maö
[(
i
+
Reg_T_0_Ch™√l
)]>=(öt16_t)MBbuf_maö[(
Reg_T_Àvñ_W¨nög
)]ËMBbuf_maö[
Reg_T_W¨nög_bô
]|=1<<i;

110 
MBbuf_maö
[
Reg_T_W¨nög_bô
] &=~(1<<
i
);

112 i‡((
öt16_t
)
MBbuf_maö
[(
i
+
Reg_T_0_Ch™√l
)]>=(öt16_t)MBbuf_maö[(
Reg_T_Àvñ_Aœrm
)]ËMBbuf_maö[
Reg_T_Aœrm_bô
]|=1<<i;

113 
MBbuf_maö
[
Reg_T_Aœrm_bô
] &=~(1<<
i
);

115 
Adc_Fûãr_T_MCU
=((Adc_Fûãr_T_MCU*3 + 
	`IO_gëMCUãmp
())>>2);

116 
MBbuf_maö
[
Reg_T_MSD
]=
Adc_Fûãr_T_MCU
;

117 
	`vTaskDñay
(29/
p‹tTICK_RATE_MS
);

119 
	}
}

122 
	$vMósuª_Cuºít
 (*
pvP¨amëîs
)

124 
öt64_t
 
Isum
=0;

125 
uöt32_t
 
Fûãr_R©io
 = 0;

126 
uöt32_t
 
Cross_Cou¡
=0;

127 
uöt32_t
 
ulNŸifõdVÆue
;

128 
boﬁ
 
œ°VCross
=0;

129 
boﬁ
 
checkVCross
=0;

130 
öt32_t
 
I¡îmedüã_I
=0;

131 
öt32_t
 
Fûãªd_I
=0;

132 
uöt32_t
 
Irms
=0;

134 
MBbuf_maö
[
Reg_Cur_RMS_W1
] = 0;

135 
MBbuf_maö
[
Reg_Cur_RMS_W2
] = 0;

139 i‡(!
MBbuf_maö
[
Reg_Mode_Cur
])

141 
MBbuf_maö
[
Reg_Cur_RMS_W1
] = 0;

142 
MBbuf_maö
[
Reg_Cur_RMS_W2
] = 0;

143 
	`ADC_Cuºít_Off
();

144 
	`vTaskSu•íd
(
NULL
);

145 
	`ADC_Cuºít_On
();

147 
Isum
=0;

148 
Numbî_Of_Sam∂es
=0;

149 
Cross_Cou¡
 = 0;

150 
Inow
=0;

151 
I¡îmedüã_I
=0;

152 
Fûãªd_I
=0;

154 
	`xTimîCh™gePîiod
(
xCuºít_Timî
, (
MBbuf_maö
[
Reg_Cur_Time_Mósuª
]/
p‹tTICK_RATE_MS
), 0);

155 
	`xTimîSèπ
(
xCuºít_Timî
, 0);

156 
	`ADC_Cuºít_Sèπ
();

160 
	`xTaskNŸifyWaô
(0x00, 
ULONG_MAX
, &
ulNŸifõdVÆue
, 
p‹tMAX_DELAY
);

161 if(
ulNŸifõdVÆue
&
ADC_CURRENT_SAMPLE
)

163 
I¡îmedüã_I
 +((
Inow
-
OFFSET_I
Ë- 
Fûãªd_I
);

164 
Fûãªd_I
 = (–
I¡îmedüã_I
 * 
MBbuf_maö
[
Reg_Cur_Fûãr_R©io
]) >> 8);

165 
Isum
+(
Fûãªd_I
)*(Filtered_I);

166 
œ°VCross
 = 
checkVCross
;

167 i‡(
Fûãªd_I
 > 
OFFSET_I_Plus
Ë
checkVCross
 = 
åue
;

168 i‡(
Fûãªd_I
 < 
OFFSET_I_Möus
Ë
checkVCross
 = 
Ál£
;

169 i‡(
Numbî_Of_Sam∂es
==1Ë
œ°VCross
 = 
checkVCross
;

170 i‡(
œ°VCross
 !
checkVCross
Ë
Cross_Cou¡
++;

172 if(!(
ulNŸifõdVÆue
&
ADC_CURRENT_FIN
))

174 
	`ADC_Cuºít_Sèπ
();

177 !(
ulNŸifõdVÆue
&
ADC_CURRENT_FIN
));

179 
Fûãr_R©io
 = 
ADC_COUNTS
 * 
MBbuf_maö
[
Reg_Cur_Sís_HÆl_R©io
];

180 
Irms
 = (((
	`sqπ
(
Isum
 / 
Numbî_Of_Sam∂es
)Ë*
MBbuf_maö
[
Reg_Cur_SˇÀ
] * 
DŸ_cou¡
[MBbuf_maö[
Reg_Cur_DŸ
]&0x03]*
mV_ADC
)+(
Fûãr_R©io
>>1))/Filter_Ratio;

182 
Fûãr_R©io
 = ((
MBbuf_maö
[
Reg_Cur_Zîo_Levñ
]*
DŸ_cou¡
[MBbuf_maö[
Reg_Cur_DŸ
]&0x03]*MBbuf_maö[
Reg_Cur_SˇÀ
])/1000);

183 i‡(
Irms
 < 
Fûãr_R©io
) Irms=0;

185 
MBbuf_maö
[
Reg_Cur_Cross_Cou¡
] = (
uöt16_t
)
Cross_Cou¡
;

186 
MBbuf_maö
[
Reg_Cur_RMS_W1
] = (
uöt16_t
)(
Irms
 & 0xFFFF);

187 
MBbuf_maö
[
Reg_Cur_RMS_W2
] = (
uöt16_t
)((
Irms
 >>16) & 0xFFFF);

188 
MBbuf_maö
[
Reg_Cur_N_Mósuª_W1
] = (
uöt16_t
Ë
Numbî_Of_Sam∂es
 & 0xFFFF;

189 
MBbuf_maö
[
Reg_Cur_N_Mósuª_W2
] = (
uöt16_t
)((
Numbî_Of_Sam∂es
 >>16) & 0xFFFF);

190 
ItŸÆ
=
Irms
;

191 
	`vTaskDñay
((199/
p‹tTICK_RATE_MS
));

193 
	}
}

196 
	$vRód_DI
 (*
pvP¨amëîs
)

198 
uöt32_t
 
i
 = 0;

199 
boﬁ
 
DI_Check
[
MAX_DI
];

200 
boﬁ
 
Pªvious_Sèã
[
MAX_DI
];

201 
boﬁ
 
La°_Sèã
[
MAX_DI
];

203 
MBbuf_maö
[(
Reg_Sètus_DI_Bô
)]=0;

204 
i
 = 0; i<
MAX_DI
; i++)

206 
X_DI
[
i
] = 
	`IO_GëLöeA˘ive
(
io_DI_1
+i);

207 
Pªvious_Sèã
[
i
] = 
X_DI
[i];

208 
La°_Sèã
[
i
] = 
X_DI
[i];

209 
DI_Check
[
i
] = 
X_DI
[i];

210 i‡(!
X_DI
[
i
])

212 
MBbuf_maö
[
Reg_Sètus_DI_Bô
] &~(1<<
i
);

216 
MBbuf_maö
[
Reg_Sètus_DI_Bô
] |
X_DI
[
i
]<<i;

219 
	`vTaskDñay
(20/
p‹tTICK_RATE_MS
);

222 
	`IWDG_ªs
();

223 
i
 = 0; i<
MAX_DI
; i++)

225 
Pªvious_Sèã
[
i
] = 
La°_Sèã
[i];

226 
La°_Sèã
[
i
] = 
	`IO_GëLöeA˘ive
(
io_DI_1
+i);

227 i‡(
La°_Sèã
[
i
] =
Pªvious_Sèã
[i])

229 if(
DI_Check
[
i
] !
La°_Sèã
[i])

231 
X_DI
[
i
] = 
La°_Sèã
[i];

232 i‡(!
X_DI
[
i
])

234 
MBbuf_maö
[
Reg_Sètus_DI_Bô
] &~(1<<
i
);

238 
MBbuf_maö
[
Reg_Sètus_DI_Bô
] |
X_DI
[
i
]<<i;

240 
DI_Check
[
i
] = 
X_DI
[i];

244 
	`vTaskDñay
(71/
p‹tTICK_RATE_MS
);

246 
	}
}

249 
	$vBlökî
 (*
pvP¨amëîs
)

251 
uöt32_t
 
i
=0; i<(
START_BLINK_TIME_MS
/
START_BLINK_PERIOD_MS
); i++)

253 
	`IO_SëLöe
(
io_LED
,
ON
);

254 
	`vTaskDñay
((
START_BLINK_PERIOD_MS
>>1)/
p‹tTICK_RATE_MS
);

255 
	`IO_SëLöe
(
io_LED
,
OFF
);

256 
	`vTaskDñay
((
START_BLINK_PERIOD_MS
>>1)/
p‹tTICK_RATE_MS
);

260 
	`IO_SëLöe
(
io_LED
,
ON
);

261 
	`vTaskDñay
(
Time_Blök_On
/
p‹tTICK_RATE_MS
);

262 
	`IO_SëLöe
(
io_LED
,
OFF
);

263 
	`vTaskDñay
(
Time_Blök_Off
/
p‹tTICK_RATE_MS
);

265 i‡(
	`eTaskGëSèã
(
Cuºít_Task
)==
eSu•íded
)

267 i‡(
MBbuf_maö
[
Reg_Mode_Cur
]Ë
	`vTaskResume
(
Cuºít_Task
);

269 i‡(
MBbuf_maö
[
Reg_Së_DeÁu…_Re£t
])

271 i‡(
MBbuf_maö
[
Reg_Së_DeÁu…_Re£t
]==
RESET_VALUE
)

273 
	`NVIC_Sy°emRe£t
();

275 i‡(
MBbuf_maö
[
Reg_Së_DeÁu…_Re£t
]==
FACTORY_SET_VALUE
)

277 
	`mh_Fa˘‹y
();

279 
MBbuf_maö
[
Reg_Së_DeÁu…_Re£t
]=0;

281 #ifde‡
DEBU_USER


282 
	`¥ötf
 ( "1 sec \n" );

284 
MBbuf_maö
[
MB_ERROR‹_Cou¡
] = 
Eº‹
;

285 
MBbuf_maö
[
Reg_T_Max
] = 
	`max_ãm≥øtuª
();

287 
	}
}

290 
	$vUpd©e_DO
 (*
pvP¨amëîs
)

292 
uöt32_t
 
Mode_DO
 = 0;

293 
uöt32_t
 
i
=0;

294 
uöt16_t
 
Temp_Mask
=0;

295 
uöt32_t
 
x_d
=0;

296 
uöt32_t
 
I_Com∑ris⁄_Max
 = 0;

297 
uöt32_t
 
I_Com∑ris⁄_Mö
 = 0;

299 
MBbuf_maö
[(
Reg_Sètus_DO_Bô
)]=0;

300 
MBbuf_maö
[
Reg_DO_On_Bô
]=0;

301 
MBbuf_maö
[
Reg_DO_Off_Bô
]=0;

302 
	`vTaskDñay
(3000/
p‹tTICK_RATE_MS
);

305 if(
Mode_DO
!
MBbuf_maö
[
Reg_Mode_DO
])

307 
Mode_DO
 = 
MBbuf_maö
[
Reg_Mode_DO
];

308 
i
 = 0; i<
MAX_DO
; i++)

310 
	`IO_SëLöe
((
io_DOut_1
 + 
i
), 
OFF
);

311 
	`xTimîSt›
(
xO√_ShŸ_Timîs
[
i
], 0);

313 
MBbuf_maö
[
Reg_DO_On_Bô
]=0;

314 
MBbuf_maö
[
Reg_DO_Off_Bô
]=0;

316 
Mode_DO
)

325 
i
=0; i<
MAX_DO
; i++)

327 i‡(
MBbuf_maö
[
Reg_T_Numbî_Sís‹_1
+
i
] & (MBbuf_maö[
Reg_T_Aœrm_bô
] & MBbuf_maö[
Reg_T_W¨nög_bô
]))

330 
	`IO_SëLöe
((
io_DOut_1
 + 
i
), 
ON
);

332 i‡((!(
MBbuf_maö
[
Reg_T_Numbî_Sís‹_1
+
i
] & (MBbuf_maö[
Reg_T_W¨nög_bô
] | MBbuf_maö[
Reg_T_Aœrm_bô
])))||((MBbuf_maö[
Reg_DO_Off_Bô
]>>i)&1))

335 
	`IO_SëLöe
((
io_DOut_1
 + 
i
), 
OFF
);

338 i‡(
MBbuf_maö
[
Reg_DO_Off_Bô
]) MBbuf_main[Reg_DO_Off_Bit] = 0;

343 
I_Com∑ris⁄_Max
 = 
MBbuf_maö
[
Reg_Cur_Levñ_Aœrm_W1
]|(MBbuf_maö[
Reg_Cur_Levñ_Aœrm_W2
]<<16);

344 
I_Com∑ris⁄_Mö
 = 
MBbuf_maö
[
Reg_Cur_Lev_W¨n_W1
]|(MBbuf_main[Reg_Cur_Lev_Warn_W1]<<16);

345 i‡((
ItŸÆ
 >
I_Com∑ris⁄_Mö
Ë&& (ItŸÆ >
I_Com∑ris⁄_Max
))

347 
	`IO_SëLöe
((
io_DOut_1
 ), 
ON
);

349 i‡(((
ItŸÆ
 < 
I_Com∑ris⁄_Mö
Ë&& (ItŸÆ < 
I_Com∑ris⁄_Max
))||(
MBbuf_maö
[
Reg_DO_Off_Bô
]))

351 
	`IO_SëLöe
((
io_DOut_1
 ), 
OFF
);

353 i‡(
MBbuf_maö
[
Reg_DO_Off_Bô
]) MBbuf_main[Reg_DO_Off_Bit]=0;

360 
I_Com∑ris⁄_Max
 = 
MBbuf_maö
[
Reg_Cur_Levñ_Aœrm_W1
]|(MBbuf_maö[
Reg_Cur_Levñ_Aœrm_W2
]<<16);

361 
I_Com∑ris⁄_Mö
 = 
MBbuf_maö
[
Reg_Cur_Lev_W¨n_W1
]|(MBbuf_main[Reg_Cur_Lev_Warn_W1]<<16);

362 i‡((
ItŸÆ
 >
I_Com∑ris⁄_Mö
Ë&& (ItŸÆ >
I_Com∑ris⁄_Max
))

364 
	`IO_SëLöe
((
io_DOut_1
 ), 
ON
);

366 i‡(((
ItŸÆ
 < 
I_Com∑ris⁄_Mö
Ë&& (ItŸÆ < 
I_Com∑ris⁄_Max
))||(
MBbuf_maö
[
Reg_DO_Off_Bô
] & 1))

368 
	`IO_SëLöe
((
io_DOut_1
 ), 
OFF
);

371 i‡(
MBbuf_maö
[
Reg_T_Numbî_Sís‹_2
] & (MBbuf_maö[
Reg_T_Aœrm_bô
] & MBbuf_maö[
Reg_T_W¨nög_bô
]))

373 
	`IO_SëLöe
((
io_DOut_2
), 
ON
);

375 i‡((!(
MBbuf_maö
[
Reg_T_Numbî_Sís‹_2
] & (MBbuf_maö[
Reg_T_W¨nög_bô
] | MBbuf_maö[
Reg_T_Aœrm_bô
])))||(MBbuf_maö[
Reg_DO_Off_Bô
]&2))

377 
	`IO_SëLöe
((
io_DOut_2
), 
OFF
);

379 i‡(
MBbuf_maö
[
Reg_DO_Off_Bô
]) MBbuf_main[Reg_DO_Off_Bit]=0;

385 if(
MBbuf_maö
[
Reg_DO_On_Bô
]||MBbuf_maö[
Reg_DO_Off_Bô
])

387 
Temp_Mask
 = 
MBbuf_maö
[
Reg_DO_On_Bô
]&(~MBbuf_maö[
Reg_DO_Off_Bô
]);

388 
i
=0; i<
MAX_DO
; i++)

390 i‡((
Temp_Mask
>>
i
Ë& 1Ë
	`IO_SëLöe
((
io_DOut_1
 + i), 
ON
);

391 i‡((
MBbuf_maö
[
Reg_DO_Off_Bô
]>>
i
Ë& 1Ë
	`IO_SëLöe
((
io_DOut_1
 + i), 
OFF
);

394 
MBbuf_maö
[
Reg_DO_Off_Bô
]=0;

395 
MBbuf_maö
[
Reg_DO_On_Bô
]=0;

401 if(
MBbuf_maö
[
Reg_DO_On_Bô
]||MBbuf_maö[
Reg_DO_Off_Bô
])

403 
Temp_Mask
 = 
MBbuf_maö
[
Reg_DO_On_Bô
]&(~MBbuf_maö[
Reg_DO_Off_Bô
]);

404 
i
=0; i<
MAX_DO
; i++)

406 i‡((
Temp_Mask
>>
i
) & 1)

408 
	`xTimîCh™gePîiod
(
xO√_ShŸ_Timîs
[
i
],
MBbuf_maö
[
Reg_DO_1_Dñay
]*100/(
p‹tTICK_RATE_MS
),0);

409 i‡(
	`xTimîRe£t
(
xO√_ShŸ_Timîs
[
i
], 0)==
pdTRUE
)

411 
	`IO_SëLöe
((
io_DOut_1
 + 
i
), 
ON
);

414 i‡((
MBbuf_maö
[
Reg_DO_Off_Bô
]>>
i
) & 1)

416 
	`IO_SëLöe
((
io_DOut_1
 + 
i
), 
OFF
);

417 
	`xTimîSt›
(
xO√_ShŸ_Timîs
[
i
], 0);

420 
MBbuf_maö
[
Reg_DO_Off_Bô
]=0;

421 
MBbuf_maö
[
Reg_DO_On_Bô
]=0;

428 
i
=0; i<
MAX_DO
; i++)

430 
x_d
 = 
i
 & 1;

431 
Temp_Mask
 = 
MBbuf_maö
[
Reg_DO_On_Bô
]&(~MBbuf_maö[
Reg_DO_Off_Bô
]);

432 i‡((
Temp_Mask
>>
i
) & 1)

434 if(
x_d
 && 
X_DI
[
i
>>1])

436 
	`xTimîCh™gePîiod
(
xO√_ShŸ_Timîs
[
i
],
MBbuf_maö
[
Reg_DO_1_Dñay
]*100/(
p‹tTICK_RATE_MS
),0);

437 i‡(
	`xTimîRe£t
(
xO√_ShŸ_Timîs
[
i
], 0)==
pdTRUE
)

439 
	`IO_SëLöe
((
io_DOut_1
 + 
i
), 
ON
);

442 if((!
x_d
Ë&& (!
X_DI
[
i
>>1]))

444 
	`xTimîCh™gePîiod
(
xO√_ShŸ_Timîs
[
i
],
MBbuf_maö
[
Reg_DO_1_Dñay
]*100/(
p‹tTICK_RATE_MS
),0);

445 i‡(
	`xTimîRe£t
(
xO√_ShŸ_Timîs
[
i
], 0)==
pdTRUE
)

447 
	`IO_SëLöe
((
io_DOut_1
 + 
i
), 
ON
);

451 if(
	`IO_GëLöeA˘ive
(
io_DOut_1
 + 
i
))

453 i‡(((
MBbuf_maö
[
Reg_DO_Off_Bô
]>>
i
Ë& 1)||(
x_d
 && (!
X_DI
[i>>1]))||((!x_d) && (X_DI[i>>1])))

455 
	`IO_SëLöe
((
io_DOut_1
 + 
i
), 
OFF
);

456 
	`xTimîSt›
(
xO√_ShŸ_Timîs
[
i
], 0);

460 
MBbuf_maö
[
Reg_DO_Off_Bô
]=0;

461 
MBbuf_maö
[
Reg_DO_On_Bô
]=0;

470 
i
=0; i<
MAX_DO
; i++)

472 if(
	`IO_GëLöeA˘ive
(
io_DOut_1
 + 
i
)Ë
MBbuf_maö
[
Reg_Sètus_DO_Bô
]|=1<<i;

473 
MBbuf_maö
[
Reg_Sètus_DO_Bô
]&~(1<<
i
);

475 
	`vTaskDñay
(311/
p‹tTICK_RATE_MS
);

477 
	}
}

496 
öt16_t
 
	$max_ãm≥øtuª
()

498 
öt16_t
 
ãm≥r_ãmp
, 
ãm≥r_√w
;

499 
ãm≥r_ãmp
 = (-100);

500 
öt32_t
 
i
=0; i<
ADC_CHANNEL_T
; i++)

502 
ãm≥r_√w
 = 
MBbuf_maö
[
Reg_T_0_Ch™√l
+
i
];

503 i‡((
ãm≥r_√w
>
ãm≥r_ãmp
)&&(
MBbuf_maö
[
Reg_T_Numbî_Sís‹_1
]&(1<<
i
)))

505 
ãm≥r_ãmp
 = 
ãm≥r_√w
;

508 if(
ãm≥r_ãmp
 == (-100))

510 
ãm≥r_ãmp
 = 
TEMPERATURE_NO_MEASURE
;

512  
ãm≥r_ãmp
;

513 
	}
}

515 
	$£ns‹_∑øm_öô
()

517 
NTC_CÆcuœti⁄_D©a_t
 
NTC
;

519 
NTC
.
NTC_r2
=(
MBbuf_maö
[
Reg_NTC_R2_VÆue_W1
]&0xFFFF)|((MBbuf_maö[
Reg_NTC_R2_VÆue_W2
]&0xFFFF)<<16);

520 
NTC
.
NTC_r_dividî
=(
MBbuf_maö
[
Reg_NTC_R_Dividî_W1
]&0xFFFF)|((MBbuf_maö[
Reg_NTC_R_Dividî_W2
]&0xFFFF)<<16);

521 
NTC
.
NTC_adc_mu…ùÀr
=1;

522 
NTC
.
NTC_adc_ªsﬁuti⁄
=
ADC_COUNTS
;

523 
NTC
.
NTC_b
=(
öt16_t
)
MBbuf_maö
[
Reg_NTC_B_VÆue
];

524 
NTC
.
NTC_t2
=(
öt16_t
)
MBbuf_maö
[
Reg_NTC_T2_VÆue
];

525 
NTC
.
NTC_°¨t_ãm≥øtuª
=(
öt16_t
)
MBbuf_maö
[
Reg_NTC_Sèπ_Tem≥r
];

526 
NTC
.
NTC_°ï_ãm≥øtuª
=(
öt16_t
)
MBbuf_maö
[
Reg_NTC_Sãp_Tem≥r
];

527 
NTC
.
NTC_ãm≥r_numbî_°ï
=
MBbuf_maö
[
Reg_NTC_Tem≥r_N_Sãp
];

528 
	`ˇlcuœã_èbÀ_NTC
(
NTC
);

529 
	}
}

532 
	$Së_Time_F‹_Blök
 (
uöt32_t
 
On_Timî
, uöt32_à
Off_Timî
)

534 
Time_Blök_On
 = 
On_Timî
;

535 
Time_Blök_Off
 = 
Off_Timî
;

536 
	}
}

539 
	$vO√_ShŸ_Timîs_Fun˘i⁄
 (
xTimîH™dÀ
 
xTimî
)

541 
uöt32_t
 
pxTimîID
;

544 
pxTimîID
 = (
uöt32_t
Ë
	`pvTimîGëTimîID
(
xTimî
);

545 
öt32_t
 
i
=0; i<
MAX_DO
; i++)

547 i‡(
pxTimîID
 =
i
)

549 
	`IO_SëLöe
((
io_DOut_1
 + 
i
), 
OFF
);

553 
	}
}

556 
	$vCuºít_Timîs_Fun˘i⁄
 (
xTimîH™dÀ
 
xTimî
)

558 
	`xTaskNŸify
(
Cuºít_Task
, 
ADC_CURRENT_FIN
, 
eSëBôs
);

560 
	}
}

563 
	$Êash_btock
()

565 i‡(!(
FLASH
->
OBR
 & 
FLASH_OBR_RDPRT
))

567 
	`mh_Fa˘‹y
();

569 
FLASH
->
KEYR
 = 
FLASH_KEY1
;

570 
FLASH
->
KEYR
 = 
FLASH_KEY2
;

572 
FLASH
->
OPTKEYR
 = 
FLASH_KEY1
;

573 
FLASH
->
OPTKEYR
 = 
FLASH_KEY2
;

574 
FLASH
->
CR
 |
FLASH_CR_OPTER
;

575 
FLASH
->
CR
|
FLASH_CR_STRT
;

576 (
FLASH
->
SR
 & 
FLASH_SR_BSY
) != 0 );

578 
FLASH
->
CR
 |
FLASH_CR_LOCK
;

590 
	}
}

593 
	$Inô_IWDG
(
uöt16_t
 
tw
)

596 
IWDG
->
KR
=0x5555;

597 
IWDG
->
PR
=7;

598 
IWDG
->
RLR
=
tw
*40/256;

599 
IWDG
->
KR
=0xAAAA;

600 
IWDG
->
KR
=0xCCCC;

601 
	}
}

606 
	$IWDG_ªs
()

608 
IWDG
->
KR
=0xAAAA;

609 
	}
}

618 
	$maö
()

620 
	`ClockInô
();

621 
	`IO_Inô
();

622 
	`Êash_btock
();

623 
	`emÁt_öô
(&
emÁt
, "MSD_2", 
íåõs
);

624 
	`mh_Buf_Inô
();

625 
	`MX_USB_DEVICE_Inô
();

626 
	`Inô_IWDG
(
WATCH_DOG_TIME_MS
);

629 
uöt32_t
 
i
 = 0; i<
MAX_DO
; i++)

631 
xO√_ShŸ_Timîs
[
i
]=
	`xTimîCª©e
("O√_ShŸ_Timî_n", 10000/
p‹tTICK_RATE_MS
, 
pdFALSE
, (*)i, 
vO√_ShŸ_Timîs_Fun˘i⁄
);

633 
xCuºít_Timî
=
	`xTimîCª©e
("xCuºít_T", 1200/
p‹tTICK_RATE_MS
, 
pdFALSE
, 
NULL
, 
vCuºít_Timîs_Fun˘i⁄
);

637 if(
pdTRUE
 !
	`xTaskCª©e
(
vMósuª_Tem≥øtuª
, "Tem≥øtuª", 
c⁄figMINIMAL_STACK_SIZE
*2, 
NULL
, 
tskIDLE_PRIORITY
 + 3, &
Tem≥øtuª_Task
)Ë
	`ERROR_ACTION
(
TASK_NOT_CREATE
,0);

638 if(
pdTRUE
 !
	`xTaskCª©e
(
vMósuª_Cuºít
, "Cuºít", 
c⁄figMINIMAL_STACK_SIZE
*2, 
NULL
, 
tskIDLE_PRIORITY
 + 2, &
Cuºít_Task
)Ë
	`ERROR_ACTION
(
TASK_NOT_CREATE
,0);

640 if(
pdTRUE
 !
	`xTaskCª©e
(
vBlökî
, "Blökî", 
c⁄figMINIMAL_STACK_SIZE
, 
NULL
, 
tskIDLE_PRIORITY
 + 3, NULL)Ë
	`ERROR_ACTION
(
TASK_NOT_CREATE
,0);

641 if(
pdTRUE
 !
	`xTaskCª©e
(
vRód_DI
, "DI", 
c⁄figMINIMAL_STACK_SIZE
, 
NULL
, 
tskIDLE_PRIORITY
 + 3, NULL)Ë
	`ERROR_ACTION
(
TASK_NOT_CREATE
,0);

642 if(
pdTRUE
 !
	`xTaskCª©e
(
vUpd©e_DO
,"DO", 
c⁄figMINIMAL_STACK_SIZE
, 
NULL
, 
tskIDLE_PRIORITY
 + 3, NULL)Ë
	`ERROR_ACTION
(
TASK_NOT_CREATE
,0);

644 
	`mh_Modbus_Inô
();

647 #ifde‡
DEBU_USER


648 
	`¥ötf
 ( "[ INFO ] Program startÇow\n" );

650 
	`vTaskSèπScheduÀr
();

652 
	}
}

653 
	$Eº‹_H™dÀr
()

657 
	`__dißbÀ_úq
();

662 
	}
}

664 
	$vAµliˇti⁄IdÀHook
( )

666 
	}
}

668 
	$vAµliˇti⁄MÆlocFaûedHook
( )

671 
	}
}

673 
	$vAµliˇti⁄SèckOvîÊowHook
–
TaskH™dÀ_t
 
xTask
, * 
pcTaskName
 )

675 –Ë
pcTaskName
;

676 –Ë
xTask
;

678 
	}
}

680 
	$vAµliˇti⁄TickHook
( )

682 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\main.h

8 #i‚de‡
MAIN_H_


9 
	#MAIN_H_


	)

11 
	~"FªeRTOS.h
"

12 
	~"timîs.h
"

14 
	#Vîsi⁄_MSD_2
 218

	)

16 
	#WATCH_DOG_TIME_MS
 500

	)

17 
	#MAX_DI
 4

	)

18 
	#MAX_DO
 2

	)

20 
	#OFFSET_I_Plus
 (+15)

	)

21 
	#OFFSET_I_Möus
 (-15)

	)

23 
	#ADC_CURRENT_SAMPLE
 0x01

24 
	#ADC_CURRENT_FIN
 0x02

25 

	)

26 
	#SIZE_NTC_TABLE
 166

	)

28 
	#RESET_VALUE
 0xA01

29 
	#FACTORY_SET_VALUE
 0xB01

30 

	)

32 
	#START_BLINK_TIME_MS
 3000

	)

33 
	#START_BLINK_PERIOD_MS
 150

	)

34 
	#TIME_ON_USB
 950

	)

35 
	#TIME_OFF_USB
 50

	)

36 
	#TIME_ON_NO_USB
 500

	)

37 
	#TIME_OFF_NO_USB
 500

	)

39 
	#M_MODBUS_TASK_PRIORITY
 (
tskIDLE_PRIORITY
 + 3)

	)

40 
	#M_MODBUS_TASK_STACK_SIZE
 (
c⁄figMINIMAL_STACK_SIZE
*2)

	)

42 
vMósuª_Tem≥øtuª
 (*
pvP¨amëîs
);

43 
vMósuª_Cuºít
 (*
pvP¨amëîs
);

44 
vRód_DI
 (*
pvP¨amëîs
);

45 
vBlökî
 (*
pvP¨amëîs
);

46 
vUpd©e_DO
 (*
pvP¨amëîs
);

47 
vCuºít_Timîs_Fun˘i⁄
 (
xTimîH™dÀ
 
xTimî
);

48 
vO√_ShŸ_Timîs_Fun˘i⁄
 (
xTimîH™dÀ
 
xTimî
);

49 
Inô_IWDG
(
uöt16_t
 
tw
);

50 
IWDG_ªs
();

51 
Së_Time_F‹_Blök
 (
uöt32_t
 
On_Timî
, uöt32_à
Off_Timî
);

52 
£ns‹_∑øm_öô
();

53 
öt16_t
 
max_ãm≥øtuª
();

54 
Eº‹_H™dÀr
();

61 
	#ERROR_ACTION
(
CODE
,
POS
Ëdo{}1)

	)

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\measure_NTC.c

9 
	~<mósuª_NTC.h
>

10 
	~<°rög.h
>

21 
ãm≥øtuª_èbÀ_íåy_ty≥
 
	gãrmo_èbÀ
[
TEMPERATURE_TABLE_SIZE
];

23 
öt16_t
 
	gNTC_°¨t_ãm≥øtuª
;

24 
öt16_t
 
	gNTC_°ï_ãm≥øtuª
;

25 
uöt16_t
 
	gNTC_ãm≥r_numbî_°ï
;

32 
	$ˇlcuœã_èbÀ_NTC
 (
NTC_CÆcuœti⁄_D©a_t
 
NTC_D©a
)

34 
uöt32_t
 
i
;

35 
r_VÆue
, 
Temp_t1
, 
Temp_t2
;

37 
NTC_°¨t_ãm≥øtuª
 = 
NTC_D©a
.NTC_start_temperature;

38 
NTC_°ï_ãm≥øtuª
 = 
NTC_D©a
.NTC_step_temperature;

39 
NTC_ãm≥r_numbî_°ï
 = 
NTC_D©a
.NTC_temper_number_step;

40 
Temp_t2
=(Ë
NTC_D©a
.
NTC_t2
+273.15;

42 i‡(
NTC_D©a
.
NTC_ãm≥r_numbî_°ï
>
TEMPERATURE_TABLE_SIZE
)

44 
NTC_D©a
.
NTC_ãm≥r_numbî_°ï
 = 
TEMPERATURE_TABLE_SIZE
;

47 
i
=0; i < 
NTC_D©a
.
NTC_ãm≥r_numbî_°ï
; i++)

49 
Temp_t1
=((()
NTC_D©a
.
NTC_°¨t_ãm≥øtuª
+()
i
*()NTC_D©a.
NTC_°ï_ãm≥øtuª
))+273.15;

50 
r_VÆue
=(()
NTC_D©a
.
NTC_r2
*
	`exp
((()NTC_D©a.
NTC_b
/
Temp_t1
)-(()NTC_D©a.NTC_b/
Temp_t2
)));

51 
ãrmo_èbÀ
[
i
] = (
ãm≥øtuª_èbÀ_íåy_ty≥
)((
r_VÆue
*()
NTC_D©a
.
NTC_adc_mu…ùÀr
*()NTC_D©a.
NTC_adc_ªsﬁuti⁄
*2+r_VÆue+()NTC_D©a.
NTC_r_dividî
)/

52 (2*(
r_VÆue
 + ()
NTC_D©a
.
NTC_r_dividî
)));

54 
	}
}

56 
öt16_t
 
	$ˇlc_ãm≥øtuª
(
ãm≥øtuª_èbÀ_íåy_ty≥
 
adcsum
)

58 
ãm≥øtuª_èbÀ_ödex_ty≥
 
l
 = 0;

59 
ãm≥øtuª_èbÀ_ödex_ty≥
 
r
 = ( 
NTC_ãm≥r_numbî_°ï
) - 1;

60 
ãm≥øtuª_èbÀ_íåy_ty≥
 
thigh
 = 
	`TEMPERATURE_TABLE_READ
(
r
);

61 
öt32_t
 
TEMPERATURE_TABLE_START_RATE
;

62 
öt32_t
 
TEMPERATURE_TABLE_STEP_RATE
;

64 
TEMPERATURE_TABLE_START_RATE
 = 
NTC_°¨t_ãm≥øtuª
;

65 
TEMPERATURE_TABLE_STEP_RATE
 = 
NTC_°ï_ãm≥øtuª
;

67 i‡(
adcsum
 <
thigh
)

69 i‡(
adcsum
 < 
thigh
)

71  
TEMPERATURE_OVER
;

73  (
TEMPERATURE_TABLE_STEP_RATE
 * 
r
 + 
TEMPERATURE_TABLE_START_RATE
);

75 
ãm≥øtuª_èbÀ_íåy_ty≥
 
éow
 = 
	`TEMPERATURE_TABLE_READ
(0);

76 i‡(
adcsum
 >
éow
)

79 i‡(
adcsum
 > 
éow
)

80  
TEMPERATURE_UNDER
;

82  
TEMPERATURE_TABLE_START_RATE
;

85 (
r
 - 
l
) > 1)

87 
ãm≥øtuª_èbÀ_ödex_ty≥
 
m
 = (
l
 + 
r
) >> 1;

88 
ãm≥øtuª_èbÀ_íåy_ty≥
 
mid
 = 
	`TEMPERATURE_TABLE_READ
(
m
);

89 i‡(
adcsum
 > 
mid
)

91 
r
 = 
m
;

95 
l
 = 
m
;

98 
ãm≥øtuª_èbÀ_íåy_ty≥
 
vl
 = 
	`TEMPERATURE_TABLE_READ
(
l
);

99 i‡(
adcsum
 >
vl
)

101  (
l
 * 
TEMPERATURE_TABLE_STEP_RATE
 + 
TEMPERATURE_TABLE_START_RATE
);

103 
ãm≥øtuª_èbÀ_íåy_ty≥
 
vr
 = 
	`TEMPERATURE_TABLE_READ
(
r
);

104 
ãm≥øtuª_èbÀ_íåy_ty≥
 
vd
 = 
vl
 - 
vr
;

105 
öt16_t
 
ªs
 = 
TEMPERATURE_TABLE_START_RATE
 + 
r
 * 
TEMPERATURE_TABLE_STEP_RATE
;

106 i‡(
vd
)

109 
ªs
 -((
TEMPERATURE_TABLE_STEP_RATE
 * (
öt32_t
)(
adcsum
 - 
vr
Ë+ (
vd
 >> 1)) / vd);

111  
ªs
;

112 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\measure_NTC.h

8 #i‚de‡
MEASURE_NTC_H_


9 
	#MEASURE_NTC_H_


	)

11 
	~<°döt.h
>

12 
	~"m©h.h
"

13 
	~"maö.h
"

17 
	#TEMPERATURE_UNDER
 0x7001

	)

19 
	#TEMPERATURE_OVER
 0x7002

	)

20 
	#TEMPERATURE_NO_MEASURE
 0x7004

	)

21 
	#TEMPERATURE_ERROR_MASK
 0x7000

	)

23 
	#TEMPERATURE_TABLE_SIZE
 
SIZE_NTC_TABLE


	)

24 
	#TEMPERATURE_TABLE_READ
(
i
Ë(
ãrmo_èbÀ
[i])

	)

27 
uöt16_t
 
	tãm≥øtuª_èbÀ_íåy_ty≥
;

28 
uöt8_t
 
	tãm≥øtuª_èbÀ_ödex_ty≥
;

32 
uöt32_t
 
	mNTC_r2
;

33 
öt16_t
 
	mNTC_b
;

34 
öt16_t
 
	mNTC_t2
;

35 
uöt32_t
 
	mNTC_r_dividî
;

36 
öt16_t
 
	mNTC_°¨t_ãm≥øtuª
;

37 
öt16_t
 
	mNTC_°ï_ãm≥øtuª
;

38 
uöt16_t
 
	mNTC_ãm≥r_numbî_°ï
;

39 
uöt16_t
 
	mNTC_adc_ªsﬁuti⁄
;

40 
uöt16_t
 
	mNTC_adc_mu…ùÀr
;

41 } 
	tNTC_CÆcuœti⁄_D©a_t
;

46 
öt16_t
 
ˇlc_ãm≥øtuª
(
ãm≥øtuª_èbÀ_íåy_ty≥
 
adcsum
) ;

47 
ˇlcuœã_èbÀ_NTC
 (
NTC_CÆcuœti⁄_D©a_t
 
NTC_D©a
);

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\modbus.c

1 
	~"modbus.h
"

2 
	~"modbus_c⁄fig.h
"

3 
	~<°dio.h
>

5 #i‡((
MB_CALLBACK_REG
 =1Ë|| (
MB_LIMIT_REG
 == 1))

6 
	~"modbus_ªg.h
"

13 c⁄° 
uöt16_t
 
	gwCRCTabÀ
[] =

49 
	$mb_CRC16
 ( *
puchMsg
, 
usD©aLí
 )

51 
uöt8_t
 
nTemp
;

52 
uöt16_t
 
wCRCW‹d
 = 0xFFFF;

54 
usD©aLí
--)

56 
nTemp
 = *
puchMsg
++ ^ 
wCRCW‹d
;

57 
wCRCW‹d
 >>= 8;

58 
wCRCW‹d
 ^
wCRCTabÀ
[
nTemp
];

60  
wCRCW‹d
;

61 
	}
}

67 #i‡(
MB_CALLBACK_REG
 == 1)

68 
CBSèã_t
 
	$mb_cb_check_ö_ªque°
 (
uöt16_t
 
Sèπ_Reg
, uöt16_à
Cou¡
)

70 
öt32_t
 
i
 = 0; i < 
Cou¡
; i++)

72 if(
	`mb_ªg_CB_›ti⁄_check
(
Sèπ_Reg
+
i
)==
MB_OK
)

74  
MB_CB_PRESENT
;

77  
MB_CB_FREE
;

78 
	}
}

82 #i‡(
MB_LIMIT_REG
 == 1)

83 
MBEx˚p_t
 
	$mb_ªg_limô_check_ö_ªque°
 (
uöt16_t
 
Numbî_Reg
, uöt16_à
VÆue
)

85 i‡(
	`mb_ªg_wrôe_›ti⁄_check
(
Numbî_Reg
)==
MB_ERROR
)

87  
MBE_ILLEGAL_DATA_ADDRESS
;

90 i‡(
	`mb_ªg_limô_check
 (
Numbî_Reg
, 
VÆue
)==
MB_ERROR
)

92  
MBE_ILLEGAL_DATA_VALUE
;

94  
MBE_NONE
;

95 
	}
}

98 
boﬁ
 
	$övÆid_‰ame
–
MBSåu˘_t
 *
mbb
)

100 
uöt8_t
 
PDU_Àn
;

101 if–
EV_HAPPEND
 =
mbb
->
î_‰ame_bad
)

103  
åue
;

105 if–
mbb
->
mb_ödex
 < 
MB_FRAME_MIN
)

107  
åue
;

109 if((
mbb
->
¶ave_addªss
 !mbb->
p_mb_buff
[0])&(mbb->p_mb_buff[0]!=
MB_ADDRESS_BROADCAST
)&(mbb->slave_address!=0))

111  
åue
;

113 #i‡(
MB_CALLBACK_REG
 == 1)

114 if(
mbb
->
cb_°©e
!=
MB_CB_FREE
)

116  
åue
;

119 
PDU_Àn
 = 
mbb
->
mb_ödex
;

120 if–
	`mb_CRC16
–(
uöt8_t
*)
mbb
->
p_mb_buff
, 
PDU_Àn
))

122  
åue
;

124  
Ál£
;

125 
	}
}

128 
boﬁ
 
	$‰ame_∑r£
 (
MBSåu˘_t
 *
mbb
)

131 #i‡(
MB_LIMIT_REG
 == 1)

132 
uöt16_t
 
VÆue
, 
RegIndxI¡î
, 
j
;

134 
uöt16_t
 
RegIndx
, 
RegNmb
, 
RegLa°
, 
i
;

135 
uöt8_t
 
ByãsN
;

136 
MBEx˚p_t
 
Ex˚±i⁄
;

138 
boﬁ
 
NìdRe•⁄£
 = 
åue
;

139 if–
mbb
->
p_mb_buff
[0] =
MB_ADDRESS_BROADCAST
)

141 
NìdRe•⁄£
 = 
Ál£
;

144  
mbb
->
p_mb_buff
[1])

148 
MB_FUNC_READ_HOLDING_REGISTER
:

152 if–8 =
mbb
->
mb_ödex
)

155 
RegIndx
 = (
mbb
->
p_mb_buff
[2]<<8) | (mbb->p_mb_buff[3]&0xFF);

156 
RegNmb
 = (
mbb
->
p_mb_buff
[4]<<8) | (mbb->p_mb_buff[5]&0xFF);

157 
RegLa°
 = 
RegIndx
 + 
RegNmb
;

158 if–(
RegIndx
 > 
mbb
->
ªg_ªad_œ°
) ||

159 ((
RegLa°
-1Ë> 
mbb
->
ªg_ªad_œ°
) ||

160 (
RegNmb
>
MB_MAX_REG
) )

162 
Ex˚±i⁄
 = 
MBE_ILLEGAL_DATA_ADDRESS
;

166 
mbb
->
p_mb_buff
[2] = 
RegNmb
 << 1;

167 
mbb
->
mb_ödex
 = 3;

168  
RegIndx
 < 
RegLa°
 )

170 
mbb
->
p_mb_buff
[mbb->
mb_ödex
++] = (
uöt8_t
)(*(mbb->
p_ªad
+
RegIndx
) >> 8) ;

171 
mbb
->
p_mb_buff
[mbb->
mb_ödex
++] = (
uöt8_t
)(*(mbb->
p_ªad
+
RegIndx
) & 0xFF);

172 ++
RegIndx
;

174 
Ex˚±i⁄
 = 
MBE_NONE
;

177 
Ex˚±i⁄
 = 
MBE_ILLEGAL_DATA_VALUE
;

180 
MB_FUNC_WRITE_MULTIPLE_REGISTERS
:

185 if–
mbb
->
mb_ödex
 > 10)

187 
Ex˚±i⁄
 = 
MBE_NONE
;

189 
RegIndx
 = (
mbb
->
p_mb_buff
[2]<<8) | (mbb->p_mb_buff[3]&0xFF);

190 
RegNmb
 = (
mbb
->
p_mb_buff
[4]<<8) | (mbb->p_mb_buff[5]&0xFF);

191 
RegLa°
 = 
RegIndx
 + 
RegNmb
;

192 
ByãsN
 = 
mbb
->
p_mb_buff
[6];

193 if–(
RegIndx
 > 
mbb
->
ªg_wrôe_œ°
) ||

194 ((
RegLa°
-1Ë> 
mbb
->
ªg_wrôe_œ°
) ||

195 (
RegNmb
>
MB_MAX_REG
))

197 
Ex˚±i⁄
 = 
MBE_ILLEGAL_DATA_ADDRESS
;

200 if–
ByãsN
 !(
RegNmb
 << 1) ||

201 
mbb
->
mb_ödex
 !(9+
ByãsN
) )

204 
Ex˚±i⁄
 = 
MBE_ILLEGAL_DATA_VALUE
;

208 
i
 = 7;

209 #i‡(
MB_CALLBACK_REG
 == 1)

211 
mbb
->
cb_°©e
 = 
	`mb_cb_check_ö_ªque°
(
RegIndx
, 
RegNmb
);

212 if(
mbb
->
cb_°©e
==
MB_CB_PRESENT
)

214 
mbb
->
cb_ªg_°¨t
 = 
RegIndx
;

215 
mbb
->
cb_ödex
 = 
RegNmb
;

220 #i‡(
MB_LIMIT_REG
 == 1)

222 
j
 = 
i
;

223 
RegIndxI¡î
 = 
RegIndx
; RegIndxI¡î < 
RegLa°
; RegIndxInter++)

225 
VÆue
 = 
mbb
->
p_mb_buff
[
j
++]<<8;

226 
VÆue
 |
mbb
->
p_mb_buff
[
j
++];

227 
Ex˚±i⁄
 = 
	`mb_ªg_limô_check_ö_ªque°
(
RegIndxI¡î
, 
VÆue
);

228 i‡(
Ex˚±i⁄
 !
MBE_NONE
)

233 if(
Ex˚±i⁄
 !
MBE_NONE
)

239  
RegIndx
 < 
RegLa°
)

241 *(
mbb
->
p_wrôe
+
RegIndx
Ëmbb->
p_mb_buff
[
i
++]<<8;

242 *(
mbb
->
p_wrôe
+
RegIndx
Ë|mbb->
p_mb_buff
[
i
++] ;

243 ++
RegIndx
;

245 
mbb
->
mb_ödex
 = 6;

248 
Ex˚±i⁄
 = 
MBE_ILLEGAL_DATA_VALUE
;

252 
MB_FUNC_WRITE_REGISTER
:

257 if–
mbb
->
mb_ödex
 == 8)

259 
Ex˚±i⁄
 = 
MBE_NONE
;

260 
RegIndx
 = (
mbb
->
p_mb_buff
[2]<<8) | (mbb->p_mb_buff[3]&0xFF);

262 if((
RegIndx
 > 
mbb
->
ªg_wrôe_œ°
))

264 
Ex˚±i⁄
 = 
MBE_ILLEGAL_DATA_ADDRESS
;

268 
i
 = 4;

269 #i‡(
MB_CALLBACK_REG
 == 1)

271 
mbb
->
cb_°©e
 = 
	`mb_cb_check_ö_ªque°
(
RegIndx
, 1);

272 if(
mbb
->
cb_°©e
==
MB_CB_PRESENT
)

274 
mbb
->
cb_ªg_°¨t
 = 
RegIndx
;

275 
mbb
->
cb_ödex
 = 1;

280 #i‡(
MB_LIMIT_REG
 == 1)

282 
RegIndxI¡î
 = 
RegIndx
;

283 
j
 = 
i
;

285 
VÆue
 = 
mbb
->
p_mb_buff
[
j
++]<<8;

286 
VÆue
 |
mbb
->
p_mb_buff
[
j
++];

287 
Ex˚±i⁄
 = 
	`mb_ªg_limô_check_ö_ªque°
(
RegIndxI¡î
, 
VÆue
);

288 i‡(
Ex˚±i⁄
 !
MBE_NONE
)

295 *(
mbb
->
p_wrôe
+
RegIndx
Ëmbb->
p_mb_buff
[
i
++]<<8;

296 *(
mbb
->
p_wrôe
+
RegIndx
Ë|mbb->
p_mb_buff
[
i
++] ;

298 
mbb
->
mb_ödex
 = 6;

302 
Ex˚±i⁄
 = 
MBE_ILLEGAL_DATA_VALUE
;

306 
Ex˚±i⁄
 = 
MBE_ILLEGAL_FUNCTION
;

316 if–
Ex˚±i⁄
 !
MBE_NONE
)

319 
mbb
->
p_mb_buff
[1] |
MB_FUNC_ERROR
;

320 
mbb
->
p_mb_buff
[2] = 
Ex˚±i⁄
;

321 
mbb
->
mb_ödex
 = 3;

322 #i‡(
MB_CALLBACK_REG
 == 1)

323 
mbb
->
cb_°©e
 = 
MB_CB_FREE
;

326 
i
 = 
	`mb_CRC16
–(
uöt8_t
*)
mbb
->
p_mb_buff
, mbb->
mb_ödex
);

327 
mbb
->
p_mb_buff
[mbb->
mb_ödex
++] = 
i
 & 0xFF;

328 
mbb
->
p_mb_buff
[mbb->
mb_ödex
 ] = 
i
 >> 8;

329 
mbb
->
ª•⁄£_size
 = mbb->
mb_ödex
+1;

330  
NìdRe•⁄£
? 
åue
:
Ál£
;

331 
	}
}

333 
	$mb_∑rsög
(
MBSåu˘_t
 *
mbb
)

335 if–
	`övÆid_‰ame
(
mbb
))

337 
mbb
->
mb_°©e
 = 
MB_STATE_IDLE
;

338 i‡(
mbb
->
f_°¨t_ª˚ive
 !
NULL
)

340 
mbb
->
	`f_°¨t_ª˚ive
(mbb);

345 if–
	`‰ame_∑r£
(
mbb
))

347 
mbb
->
mb_°©e
 = 
MB_STATE_SEND
;

348 
mbb
->
mb_ödex
 = 0;

349 
mbb
->
	`f_°¨t_å™s
(mbb);

353 
mbb
->
mb_°©e
 = 
MB_STATE_IDLE
;

354 i‡(
mbb
->
f_°¨t_ª˚ive
 !
NULL
)

356 
mbb
->
	`f_°¨t_ª˚ive
(mbb);

359 #i‡(
MB_CALLBACK_REG
 == 1)

360 i‡(
mbb
->
cb_°©e
 =
MB_CB_PRESENT
)

362 
mbb
->
	`wr_ˇŒback
(mbb);

363 
mbb
->
cb_°©e
 = 
MB_CB_FREE
;

366 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\modbus.h

1 #i‚de‡
MODBUS_H_INCLUDED


2 
	#MODBUS_H_INCLUDED


	)

4 
	~<°döt.h
>

5 
	~<°dboﬁ.h
>

6 
	~"modbus_c⁄fig.h
"

8 #i‚de‡
MB_LIMIT_REG


9 
	#MB_LIMIT_REG
 0

	)

12 #i‚de‡
MB_CALLBACK_REG


13 
	#MB_CALLBACK_REG
 0

	)

16 #i‚de‡
MB_REG_END_TO_END


17 
	#MB_REG_END_TO_END
 0

	)

20 #i‚de‡
MB_USER_ARG1_REG


21 
	#MB_USER_ARG1_REG
 0

	)

24 #i‚de‡
MB_USER_ARG2_REG


25 
	#MB_USER_ARG2_REG
 0

	)

28 
	#MB_FRAME_MIN
 4

	)

29 
	#MB_FRAME_MAX
 256

	)

30 
	#MB_ADDRESS_BROADCAST
 00

	)

32 
	#MB_ANY_ADDRESS
 00

	)

33 
	#MB_MAX_REG
 120

	)

35 
	#MB_FUNC_NONE
 00

	)

36 
	#MB_FUNC_READ_COILS
 01

	)

37 
	#MB_FUNC_READ_DISCRETE_INPUTS
 02

	)

38 
	#MB_FUNC_WRITE_SINGLE_COIL
 05

	)

39 
	#MB_FUNC_WRITE_MULTIPLE_COILS
 15

	)

40 
	#MB_FUNC_READ_HOLDING_REGISTER
 03

	)

41 
	#MB_FUNC_READ_INPUT_REGISTER
 04

	)

42 
	#MB_FUNC_WRITE_REGISTER
 06

	)

43 
	#MB_FUNC_WRITE_MULTIPLE_REGISTERS
 16

	)

44 
	#MB_FUNC_READWRITE_MULTIPLE_REGISTERS
 23

	)

45 
	#MB_FUNC_ERROR
 0x80

	)

49 
	mEV_NOEVENT
,

50 
	mEV_HAPPEND


51 } 
	tMBEvíts_t
;

55 
	mMBE_NONE
 = 0x00,

56 
	mMBE_ILLEGAL_FUNCTION
 = 0x01,

57 
	mMBE_ILLEGAL_DATA_ADDRESS
 = 0x02,

58 
	mMBE_ILLEGAL_DATA_VALUE
 = 0x03

59 } 
	tMBEx˚p_t
;

63 
	mMB_STATE_IDLE
,

64 
	mMB_STATE_RCVE
,

65 
	mMB_STATE_WAIT
,

66 
	mMB_STATE_PARS
,

67 
	mMB_STATE_SEND
,

68 
	mMB_STATE_SENT


69 } 
	tMBSèã_t
;

73 
	mMB_CB_FREE
 = 0,

74 
	mMB_CB_PRESENT
 = 1

75 } 
	tCBSèã_t
;

79 
uöt16_t
 *
	mp_wrôe
;

80 
uöt16_t
 *
	mp_ªad
;

81 
uöt16_t
 
	mªg_ªad_œ°
;

82 
uöt16_t
 
	mªg_wrôe_œ°
;

83 #i‡(
MB_CALLBACK_REG
 == 1)

84 
uöt16_t
 
	mcb_ªg_°¨t
;

85 
uöt8_t
 
	mcb_ödex
;

86 
CBSèã_t
 
	mcb_°©e
;

88 
uöt8_t
 
	m¶ave_addªss
;

89 
uöt8_t
 
	mmb_ödex
;

90 
MBSèã_t
 
	mmb_°©e
;

91 
MBEvíts_t
 
	mî_‰ame_bad
;

92 
uöt8_t
 *
	mp_mb_buff
;

93 
uöt8_t
 
	mª•⁄£_size
;

94 #i‡(
MB_CALLBACK_REG
 == 1)

95 (*
	mwr_ˇŒback
Ë–*
	mmbb
);

97 (*
	mf_°¨t_å™s
Ë–*
	mmbb
);

98 (*
	mf_°¨t_ª˚ive
Ë–*
	mmbb
);

101 } 
	tMBSåu˘_t
;

103 
mb_∑rsög
(
MBSåu˘_t
 *
mbb
);

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\modbus_config.h

1 #i‚de‡
MODBUS_X_H_INCLUDED


2 
	#MODBUS_X_H_INCLUDED


	)

4 
	~<°döt.h
>

5 
	~"maö.h
"

6 
	~"modbus_h¨d.h
"

7 
	~<mósuª_NTC.h
>

15 
	#MB_LIMIT_REG
 1

16 
	#MB_CALLBACK_REG
 1

21 

	)

22 
	#REG_END_REGISTER
 
Reg_End


	)

25 
	#USER_FUNC
 (0x20)

	)

26 
	#USER_ARG
 (0x10)

	)

27 
	#READ_R
 (0)

	)

28 
	#WRITE_R
 (0x01)

29 
	#CB_WR
 (0x02)

30 
	#LIM_SIGN
 (0x04)

31 
	#LIM_UNSIGN
 (0x08)

32 
	#LIM_MASK
 (0x0C)

34 
	#LIM_BIT_MASK
 
LIM_MASK


	)

38 
	#MB_BUF_TABLE
\

39 
	`X_BUF
(0, 
Reg_Sèπ
, 0, 0, 0, 0, 
READ_R
)\

40 
	`X_BUF
(1, 
Reg_T_0_Ch™√l
, 0, 0, 0, 0, 
READ_R
)\

41 
	`X_BUF
(2, 
Reg_T_1_Ch™√l
, 0, 0, 0, 0, 
READ_R
)\

42 
	`X_BUF
(3, 
Reg_T_2_Ch™√l
, 0, 0, 0, 0, 
READ_R
)\

43 
	`X_BUF
(4, 
Reg_T_3_Ch™√l
, 0, 0, 0, 0, 
READ_R
)\

44 
	`X_BUF
(5, 
Reg_T_4_Ch™√l
, 0, 0, 0, 0, 
READ_R
)\

45 
	`X_BUF
(6, 
Reg_T_5_Ch™√l
, 0, 0, 0, 0, 
READ_R
)\

46 
	`X_BUF
(7, 
Reg_T_6_Ch™√l
, 0, 0, 0, 0, 
READ_R
)\

47 
	`X_BUF
(8, 
Reg_T_7_Ch™√l
, 0, 0, 0, 0, 
READ_R
)\

48 
	`X_BUF
(9, 
Reg_T_8_Ch™√l
, 0, 0, 0, 0, 
READ_R
)\

49 
	`X_BUF
(10, 
Reg_Cur_RMS_W1
, 0, 0, 0, 0, 
READ_R
)\

50 
	`X_BUF
(11, 
Reg_Cur_RMS_W2
, 0, 0, 0, 0, 
READ_R
)\

51 
	`X_BUF
(12, 
Reg_T_MSD
, 0, 0, 0, 0, 
READ_R
)\

52 
	`X_BUF
(13, 
Reg_T_Max
, 0, 0, 0, 0, 
READ_R
)\

53 
	`X_BUF
(14, 
Re£rved_3
, 0, 100, 0, 0xFFFF, 
READ_R
)\

54 
	`X_BUF
(15, 
Re£rved_4
, 0, 123, 0, 0xFFFF, 
READ_R
)\

55 
	`X_BUF
(16, 
Reg_16
, 0, 0, 0, 0, 
READ_R
)\

56 
	`X_BUF
(17, 
Reg_17
, 0, 0, 0, 0, 
READ_R
)\

57 
	`X_BUF
(18, 
Reg_Sètus_DI_Bô
, 0, 0, 0, 0, 
READ_R
)\

58 
	`X_BUF
(19, 
Reg_Sètus_DO_Bô
, 0, 0, 0, 0, 
READ_R
)\

59 
	`X_BUF
(20, 
Reg_T_W¨nög_bô
, 0, 0, 0, 0, 
READ_R
)\

60 
	`X_BUF
(21, 
Reg_T_Aœrm_bô
, 0, 0, 0, 0, 
READ_R
)\

61 
	`X_BUF
(22, 
Reg_Cur_N_Mósuª_W1
, 0, 0, 0, 0, 
READ_R
)\

62 
	`X_BUF
(23, 
Reg_Cur_N_Mósuª_W2
, 0, 0, 0, 0, 
READ_R
)\

63 
	`X_BUF
(24, 
Reg_Cur_Cross_Cou¡
, 0, 0, 0, 0, 
READ_R
)\

64 
	`X_BUF
(25, 
MB_ERROR‹_Cou¡
, 0, 0, 0, 0, 
READ_R
)\

65 
	`X_BUF
(26, 
Reg_DO_On_Bô
, 0, 0, 0, 0x03, 
WRITE_R
 | 
LIM_MASK
)\

66 
	`X_BUF
(27, 
Reg_DO_Off_Bô
, 0, 0, 0, 0x03, 
WRITE_R
 | 
LIM_MASK
)\

67 
	`X_BUF
(28, 
Reg_Së_DeÁu…_Re£t
, 0, 0, 0, 0, 
WRITE_R
)\

68 
	`X_BUF
(29, 
Re£rved_T
, 0, 0, 0, 0, 
READ_R
)\

69 
	`X_BUF
(30, 
Reg_Mode_Cur
, 0, 0, 0, 0x1, 
WRITE_R
 | 
CB_WR
 | 
LIM_UNSIGN
)\

70 
	`X_BUF
(31, 
Reg_Mode_DO
, 0, 0, 0, 0x6, 
WRITE_R
 | 
CB_WR
 | 
LIM_UNSIGN
)\

71 
	`X_BUF
(32, 
Re£rv32
, 0, 0, 0, 0x1, 
READ_R
)\

72 
	`X_BUF
(33, 
Reg_DO_1_Dñay
, 0, 100, 1, 0xFF, 
WRITE_R
 | 
CB_WR
 | 
LIM_UNSIGN
)\

73 
	`X_BUF
(35, 
Reg_T_Àvñ_W¨nög
, 0, 
TEMPERATURE_OVER
,\

74 0, 0, 
WRITE_R
 | 
CB_WR
)\

75 
	`X_BUF
(36, 
Reg_T_Àvñ_Aœrm
, 0, 
TEMPERATURE_OVER
,\

76 0, 0, 
WRITE_R
 | 
CB_WR
)\

77 
	`X_BUF
(37, 
Reg_T_Numbî_Sís‹_1
, 0, 0x1FF, 0, 0x1FF, 
WRITE_R
 | 
CB_WR
 | 
LIM_MASK
)\

78 
	`X_BUF
(38, 
Reg_T_Numbî_Sís‹_2
, 0, 0x1FF, 0, 0x1FF, 
WRITE_R
 | 
CB_WR
 | 
LIM_MASK
)\

79 
	`X_BUF
(39, 
Re£rved_5
, 0, 0, 0, 0, 
READ_R
)\

80 
	`X_BUF
(40, 
Reg_Cur_Sís_HÆl_R©io
,0, 132, 5, 1000, 
WRITE_R
 | 
CB_WR
 | 
LIM_UNSIGN
)\

81 
	`X_BUF
(41, 
Reg_Cur_Fûãr_R©io
, 0, 30, 1, 0xFF, 
WRITE_R
 | 
CB_WR
 | 
LIM_UNSIGN
)\

82 
	`X_BUF
(42, 
Reg_Cur_Time_Mósuª
, 0, 1200, 100, 2000, 
WRITE_R
 | 
CB_WR
 | 
LIM_UNSIGN
)\

83 
	`X_BUF
(43, 
Reg_Cur_SˇÀ
, 0, 1, 1, 1000, 
WRITE_R
 | 
CB_WR
 | 
LIM_UNSIGN
)\

84 
	`X_BUF
(44, 
Reg_Cur_DŸ
, 0, 0, 0, 3, 
WRITE_R
 | 
CB_WR
 | 
LIM_MASK
)\

85 
	`X_BUF
(45, 
Reg_Cur_Zîo_Levñ
, 0, 200, 0, 0, 
WRITE_R
 | 
CB_WR
)\

86 
	`X_BUF
(46, 
Reg_Cur_Lev_W¨n_W1
, 0, 40, 0, 0, 
WRITE_R
 | 
CB_WR
)\

87 
	`X_BUF
(47, 
Reg_Cur_Lev_W¨n_W2
, 0, 0, 0, 0, 
WRITE_R
 | 
CB_WR
)\

88 
	`X_BUF
(48, 
Reg_Cur_Levñ_Aœrm_W1
, 0, 45, 0, 0, 
WRITE_R
 | 
CB_WR
)\

89 
	`X_BUF
(49, 
Reg_Cur_Levñ_Aœrm_W2
, 0, 0, 0, 0, 
WRITE_R
 | 
CB_WR
)\

90 
	`X_BUF
(50, 
Reg_RS485_Baud_R©e
, 0, 1, 0, 0x03, 
WRITE_R
 | 
CB_WR
 | 
LIM_MASK
)\

91 
	`X_BUF
(51, 
Reg_RS485_Ans_Dñay
, 0, 5, 0, 100, 
WRITE_R
 | 
CB_WR
 | 
LIM_UNSIGN
)\

92 
	`X_BUF
(52, 
Reg_RS485_Modbus_Addr
, 0, 1, 1, 0xFA, 
WRITE_R
 | 
CB_WR
 | 
LIM_UNSIGN
)\

93 
	`X_BUF
(53, 
Reg_P¨ôy_St›_Bôs
, 0, 0, 0, 0x03, 
WRITE_R
 | 
CB_WR
 | 
LIM_UNSIGN
)\

94 
	`X_BUF
(56, 
Reg_NTC_R2_VÆue_W1
, 0, 5000, 0, 0, 
WRITE_R
 | 
CB_WR
)\

95 
	`X_BUF
(57, 
Reg_NTC_R2_VÆue_W2
, 0, 0, 0, 0, 
WRITE_R
 | 
CB_WR
)\

96 
	`X_BUF
(58, 
Reg_NTC_R_Dividî_W1
, 0, 5100, 0, 0, 
WRITE_R
 | 
CB_WR
)\

97 
	`X_BUF
(59, 
Reg_NTC_R_Dividî_W2
, 0, 0, 0, 0, 
WRITE_R
 | 
CB_WR
)\

98 
	`X_BUF
(60, 
Reg_NTC_B_VÆue
, 0, 3984, 0, 0, 
WRITE_R
 | 
CB_WR
)\

99 
	`X_BUF
(61, 
Reg_NTC_T2_VÆue
, 0, 25, 0, 0, 
WRITE_R
 | 
CB_WR
)\

100 
	`X_BUF
(62, 
Reg_NTC_Sèπ_Tem≥r
, 0, -10, -40, 20, 
WRITE_R
 | 
CB_WR
 | 
LIM_SIGN
)\

101 
	`X_BUF
(63, 
Reg_NTC_Sãp_Tem≥r
, 0, 1, 1, 5, 
WRITE_R
 | 
CB_WR
 | 
LIM_UNSIGN
)\

102 
	`X_BUF
(64, 
Reg_NTC_Tem≥r_N_Sãp
, 0, 136, 1, 
SIZE_NTC_TABLE
,\

103 
WRITE_R
 | 
CB_WR
 | 
LIM_UNSIGN
)\

104 
	`X_BUF
(65, 
Reg_End
, 0, 0, 0, 0, 
READ_R
)\

105 

	)

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\modbus_hard.c

1 
	~"modbus_h¨d.h
"

2 
	~"modbus.h
"

3 
	~"modbus_ªg.h
"

5 
	~"FªeRTOS.h
"

6 
	~"£mphr.h
"

7 
	~"èsk.h
"

8 
	~"queue.h
"

9 
	~"timîs.h
"

11 
	~"IO.h
"

12 
	~<dma_103.h
>

13 
	~"maö.h
"

14 
	~<ì¥om_AT25.h
>

16 
	~<°dboﬁ.h
>

17 
	~"öây≥s.h
"

18 
	~<°dio.h
>

19 
	~<°rög.h
>

21 
	~"usbd_cdc_if.h
"

27 
uöt16_t
 
	gMBbuf_maö
[
MB_NUM_BUF
]{
Vîsi⁄_MSD_2
};

28 
uöt32_t
 
Eº‹
;

30 
xQueueH™dÀ
 
	gxModbusQueue
;

31 
TimîH™dÀ_t
 
	grs485_timî_h™dÀ
;

32 
TaskH™dÀ_t
 
	gm_modbus_èsk_h™dÀ
;

34 vﬁ©ûê
MBSåu˘_t
 
	gMB_RS485
;

35 vﬁ©ûê
MBSåu˘_t
 
	gMB_USB
;

37 
uöt8_t
 
	gRS485_MB_Buf
[
MB_FRAME_MAX
];

38 
uöt8_t
 
	gUSB_MB_Buf
[
MB_FRAME_MAX
];

40 c⁄° 
uöt16_t
 
	gBaud_øã
[
BAUD_NUMBER
]
RS_485_BAUD_LIST
;

41 vﬁ©ûêc⁄° 
uöt16_t
 
	gSave_V¨_1
[100] 
__©åibuã__
 ((
£˘i⁄
(".mem_1")))={1,2,3,4};

42 c⁄° 
RegP¨amëîs_t
 
MBRegP¨am
[];

47 
	$mh_èsk_Modbus
 (*
pvP¨amëîs
)

49 
MBSåu˘_t
 *
°_mb
;

50 
	`vTaskDñay
(3000);

53 
	`xQueueRe˚ive
(
xModbusQueue
,&
°_mb
,
p‹tMAX_DELAY
);

54 
	`mb_∑rsög
((
MBSåu˘_t
*Ë
°_mb
);

56 
	}
}

61 
	$mh_E«bÀTønsmissi⁄
(c⁄° 
boﬁ
 
E«bÀ
)

63 i‡(
E«bÀ
)

64 
	`IO_SëLöe
(
io_RS485_Swôch
,
HIGH
);

66 
	`IO_SëLöe
(
io_RS485_Swôch
,
LOW
);

67 
	}
}

69 
	$USART1_IRQH™dÀr
 ()

71 
uöt8_t
 
˙t
;

72 (Ë
˙t
;

73 i‡(
USART1
->
SR
 & 
USART_SR_RXNE
)

76 if–
MB_STATE_RCVE
 =
MB_RS485
.
mb_°©e
)

78 if(
MB_RS485
.
mb_ödex
 >
MB_FRAME_MAX
-1)

80 
MB_RS485
.
î_‰ame_bad
 = 
EV_HAPPEND
;

81 
USART1
->
SR
 = ~
USART_SR_RXNE
;

85 
MB_RS485
.
p_mb_buff
[MB_RS485.
mb_ödex
++] = 
USART1
->
DR
;

88 if(
	`mb_ö°™˚_idÀ_check
((
MBSåu˘_t
*)&
MB_RS485
)==
MB_OK
)

91 
MB_RS485
.
p_mb_buff
[0] = 
USART1
->
DR
;

92 
MB_RS485
.
mb_ödex
 = 1;

93 
MB_RS485
.
î_‰ame_bad
 = 
EV_NOEVENT
;

94 
MB_RS485
.
mb_°©e
=
MB_STATE_RCVE
;

98 
Eº‹
|=0x80;

99 
USART1
->
SR
 = ~
USART_SR_RXNE
;

102 i‡(
USART1
->
SR
 & 
USART_SR_TC
)

104 
USART1
->
SR
 = ~(
USART_SR_TC
);

105 
MB_RS485
.
mb_°©e
=
MB_STATE_IDLE
;

106 
	`mh_E«bÀTønsmissi⁄
(
Ál£
);

108 i‡(
USART1
->
SR
 & 
USART_SR_TXE
)

110 if–
MB_STATE_SEND
 =
MB_RS485
.
mb_°©e
)

112 if–
MB_RS485
.
mb_ödex
 < MB_RS485.
ª•⁄£_size
)

115 
USART1
->
DR
 = 
MB_RS485
.
p_mb_buff
[MB_RS485.
mb_ödex
++];

119 
MB_RS485
.
mb_°©e
=
MB_STATE_SENT
;

120 
USART1
->
CR1
 &~
USART_CR1_TXEIE
;

125 
	`mh_E«bÀTønsmissi⁄
(
Ál£
);

126 
USART1
->
CR1
 &~
USART_CR1_TXEIE
;

130 i‡(
USART1
->
SR
 & 
USART_SR_IDLE
)

132 
˙t
 = 
USART1
->
DR
;

133 i‡(
MB_STATE_RCVE
 =
MB_RS485
.
mb_°©e
)

135 
	`xTimîRe£tFromISR
(
rs485_timî_h™dÀ
, 
NULL
);

138 
	}
}

141 
	$mh_USB_Recõve
(
uöt8_t
 *
USB_buf
, 
uöt16_t
 
Àn
)

143 i‡(
	`mb_ö°™˚_idÀ_check
((
MBSåu˘_t
*)&
MB_USB
)==
MB_OK
)

145 if(
Àn
>
MB_FRAME_MAX
)

147 
Àn
=
MB_FRAME_MAX
;

149 
MB_USB
.
mb_°©e
=
MB_STATE_PARS
;

150 
MB_USB
.
mb_ödex
=(
Àn
);

151 
	`mem˝y
 (
MB_USB
.
p_mb_buff
,
USB_buf
,
Àn
);

152 
MBSåu˘_t
 *
°_mb
=(MBSåu˘_t*)&
MB_USB
;

153 
	`xQueueSíd
(
xModbusQueue
, &
°_mb
, 0);

155 
	}
}

158 
	$mh_Modbus_Inô
()

161 
xModbusQueue
=
	`xQueueCª©e
(3,(
MBSåu˘_t
 *));

164 if(
pdTRUE
 !
	`xTaskCª©e
(
mh_èsk_Modbus
, "RS485", 
MODBUS_TASK_STACK_SIZE
, 
NULL
, 
MODBUS_TASK_PRIORITY
, &
m_modbus_èsk_h™dÀ
)Ë
	`ERROR_ACTION
(
TASK_NOT_CREATE
, 0);

166 
	`mh_USB_Inô
();

167 
	`mh_RS485_Inô
();

168 
	}
}

170 
	$mh_USB_Inô
()

172 
MB_USB
.
p_wrôe
 = 
MBbuf_maö
;

173 
MB_USB
.
p_ªad
 = 
MBbuf_maö
;

174 
MB_USB
.
ªg_ªad_œ°
=
MB_NUM_BUF
-1;

175 
MB_USB
.
ªg_wrôe_œ°
=
MB_NUM_BUF
-1;

176 
MB_USB
.
cb_°©e
=
MB_CB_FREE
;

177 
MB_USB
.
î_‰ame_bad
=
EV_NOEVENT
;

178 
MB_USB
.
¶ave_addªss
=
MB_ANY_ADDRESS
;

179 
MB_USB
.
mb_°©e
=
MB_STATE_IDLE
;

180 
MB_USB
.
p_mb_buff
=&
USB_MB_Buf
[0];

181 
MB_USB
.
wr_ˇŒback
 = 
mh_Wrôe_Eïrom
;

182 
MB_USB
.
f_°¨t_å™s
 = 
mh_USB_Tønsmô_Sèπ
;

183 
MB_USB
.
f_°¨t_ª˚ive
 = 
NULL
;

184 
	}
}

186 
	$mh_RS485_Inô
()

188 
uöt32_t
 
Rs485_Time_ms
;

190 
MB_RS485
.
p_wrôe
 = 
MBbuf_maö
;

191 
MB_RS485
.
p_ªad
 = 
MBbuf_maö
;

192 
MB_RS485
.
ªg_ªad_œ°
=
MB_NUM_BUF
-1;

193 
MB_RS485
.
ªg_wrôe_œ°
=
MB_NUM_BUF
-1;

194 
MB_RS485
.
cb_°©e
=
MB_CB_FREE
;

195 
MB_RS485
.
î_‰ame_bad
=
EV_NOEVENT
;

196 
MB_RS485
.
¶ave_addªss
=
MBbuf_maö
[
Reg_RS485_Modbus_Addr
];

197 
MB_RS485
.
mb_°©e
=
MB_STATE_IDLE
;

198 
MB_RS485
.
p_mb_buff
=&
RS485_MB_Buf
[0];

199 
MB_RS485
.
wr_ˇŒback
 = 
mh_Wrôe_Eïrom
;

200 
MB_RS485
.
f_°¨t_å™s
=
mh_Rs485_Tønsmô_Sèπ
;

201 
MB_RS485
.
f_°¨t_ª˚ive
 = 
NULL
;

203 
Rs485_Time_ms
 = (
MBbuf_maö
[
Reg_RS485_Ans_Dñay
]);

204 
rs485_timî_h™dÀ
 = 
	`xTimîCª©e
–"T_RS485", 
Rs485_Time_ms
/
p‹tTICK_RATE_MS
, 
pdFALSE
, 
NULL
, 
rs485_timî_ˇŒback
);

205 
	`IO_U¨t1_Inô
();

206 
	}
}

208 
	$rs485_timî_ˇŒback
 (
xTimîH™dÀ
 
xTimî
)

210 if–
MB_STATE_RCVE
 =
MB_RS485
.
mb_°©e
)

213 
MB_RS485
.
mb_°©e
=
MB_STATE_PARS
;

214 
MBSåu˘_t
 *
°_mb
=(MBSåu˘_t*)&
MB_RS485
;

215 
	`xQueueSíd
(
xModbusQueue
, &
°_mb
, 0);

217 
	}
}

219 
	$IO_U¨t1_Inô
()

221 
RCC
->
APB2ENR
 |
RCC_APB2ENR_USART1EN
;

222 
USART1
->
BRR
 = 
Baud_øã
[
MBbuf_maö
[
Reg_RS485_Baud_R©e
]&0x3];

223 
USART1
->
CR1
 |
USART_CR1_TE
 | 
USART_CR1_RE
 | 
USART_CR1_IDLEIE
 | 
USART_CR1_TCIE
 | 
USART_CR1_RXNEIE
;

225 
MBbuf_maö
[
Reg_P¨ôy_St›_Bôs
])

227 
NO_PARITY_1_STOP
:

230 
NO_PARITY_2_STOP
:

231 
USART1
->
CR2
 |
USART_CR2_STOP_1
;

234 
EVEN_PARITY_1_STOP
:

235 
USART1
->
CR1
 |
USART_CR1_PCE
 | 
USART_CR1_M
;

238 
ODD_PARITY_1_STOP
:

239 
USART1
->
CR1
 |
USART_CR1_PCE
 | 
USART_CR1_M
 | 
USART_CR1_PS
;

246 
USART1
->
CR1
 |
USART_CR1_UE
;

248 
	`NVIC_SëPri‹ôy
(
USART1_IRQn
,14);

249 
	`NVIC_E«bÀIRQ
 (
USART1_IRQn
);

250 
	}
}

252 
	$mh_Wrôe_Eïrom
 (*
mbb
)

254 
MBSåu˘_t
 *
°_mb
;

255 
°_mb
 = (*Ë
mbb
;

256 
uöt16_t
 
Àn
 = (
MBRegP¨am
[0].
DeÁu…_VÆue
);

258 
öt32_t
 
i
 = 0; i < (
°_mb
->
cb_ödex
); i++)

260 if((
	`mb_ªg_›ti⁄_check
(
i
+(
°_mb
->
cb_ªg_°¨t
), 
CB_WR
Ë=
MB_OK
))

262 
	`AT25_muãx_upd©e_byã
–((
°_mb
->
cb_ªg_°¨t
)+
i
)*
Àn
, (
uöt8_t
*Ë&(°_mb->
p_wrôe
[i+(st_mb->cb_reg_start)]),Üen);

265 
	}
}

267 
	$mh_USB_Tønsmô_Sèπ
 (*
mbb
)

269 
MBSåu˘_t
 *
°_mb
;

270 
°_mb
 = (*Ë
mbb
;

271 
	`CDC_Tønsmô_FS
 (
°_mb
->
p_mb_buff
, st_mb->
ª•⁄£_size
);

272 
MB_USB
.
mb_°©e
=
MB_STATE_IDLE
;

273 
	}
}

275 
	$mh_Rs485_Tønsmô_Sèπ
 (*
mbb
)

277 
	`mh_E«bÀTønsmissi⁄
(
åue
);

278 
USART1
->
CR1
 |
USART_CR1_TXEIE
;

279 
	}
}

281 
	$mh_Fa˘‹y
 ()

283 
	`èskENTER_CRITICAL
();

284 
uöt16_t
 
Àn
 = (
MBRegP¨am
[0].
DeÁu…_VÆue
);

285 
öt32_t
 
i
=0; i< 
MB_NUM_BUF
; i++)

287 i‡(
	`mb_ªg_›ti⁄_check
(
i
, 
CB_WR
)==
MB_OK
)

289 
MBbuf_maö
[
i
] = 
MBRegP¨am
[i].
DeÁu…_VÆue
;

290 
	`AT25_upd©e_byã
((
i
*
Àn
), (
uöt8_t
 *Ë&
MBbuf_maö
[i],Üen);

293 
	`èskEXIT_CRITICAL
();

294 
MBbuf_maö
[
Reg_Së_DeÁu…_Re£t
]=0;

295 
	}
}

297 
	$mh_Buf_Inô
 ()

299 
	`èskENTER_CRITICAL
();

300 
	`AT25_Inô
();

301 
uöt16_t
 
Àn
 = (
MBRegP¨am
[0].
DeÁu…_VÆue
);

302 
öt32_t
 
i
=0; i< 
MB_NUM_BUF
; i++)

304 if(
	`mb_ªg_›ti⁄_check
(
i
, 
CB_WR
)==
MB_OK
)

306 
	`AT25_ªad_byã
((
i
*
Àn
), (
uöt8_t
 *Ë&
MBbuf_maö
[i],Üen);

307 if(
	`mb_ªg_limô_check
(
i
, 
MBbuf_maö
[i])==
MB_ERROR
)

309 
MBbuf_maö
[
i
]=
MBRegP¨am
[i].
DeÁu…_VÆue
;

310 
	`AT25_upd©e_byã
((
i
)*
Àn
, (
uöt8_t
 *Ë&
MBbuf_maö
[i],Üen);

314 
MBbuf_maö
[
Reg_Së_DeÁu…_Re£t
]=0;

315 
	`èskEXIT_CRITICAL
();

316 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\modbus_hard.h

1 #i‚de‡
MODBUS_HARD_H_INCLUDED


2 
	#MODBUS_HARD_H_INCLUDED


	)

4 
	~"FªeRTOS.h
"

5 
	~"£mphr.h
"

6 
	~"èsk.h
"

7 
	~"queue.h
"

8 
	~"timîs.h
"

10 
	#UART_FRIQ
 72000000LL

	)

12 
	#MODBUS_TASK_PRIORITY
 
M_MODBUS_TASK_PRIORITY


	)

13 
	#MODBUS_TASK_STACK_SIZE
 
M_MODBUS_TASK_STACK_SIZE


	)

15 
	#BAUD_9600
 0x1D4C

	)

16 
	#BAUD_19200
 0xEA6

	)

17 
	#BAUD_57600
 0x4E2

	)

18 
	#BAUD_115200
 0x271

	)

19 
	#BAUD_NUMBER
 4

	)

20 
	#RS_485_BAUD_LIST
 {
BAUD_9600
, 
BAUD_19200
, 
BAUD_57600
, 
BAUD_115200
}

	)

24 
	mNO_PARITY_1_STOP
 = 0x00,

25 
	mNO_PARITY_2_STOP
 = 0x01,

26 
	mEVEN_PARITY_1_STOP
 = 0x02,

27 
	mODD_PARITY_1_STOP
 = 0x03,

29 } 
	tP¨ôy_St›_Bôs_t
;

31 
mh_Wrôe_Eïrom
 (*
mbb
);

32 
mh_Modbus_Inô
();

33 
mh_USB_Inô
();

34 
mh_USB_Tønsmô_Sèπ
 (*
mbb
);

35 
mh_USB_Recõve
(
uöt8_t
 *
USB_buf
, 
uöt16_t
 
Àn
);

36 
mh_RS485_Inô
();

37 
mh_Rs485_Tønsmô_Sèπ
 (*
mbb
);

38 
mh_Rs485_Recõve_Sèπ
 (*
mbb
);

39 
rs485_timî_ˇŒback
 (
xTimîH™dÀ
 
xTimî
);

40 
IO_U¨t1_Inô
();

41 
mh_èsk_Modbus
 (*
pvP¨amëîs
);

42 
mh_Fa˘‹y
 ();

43 
mh_Buf_Inô
 ();

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\modbus_reg.c

4 
	~"modbus_c⁄fig.h
"

5 
	~"modbus_ªg.h
"

6 
	~"modbus.h
"

12 #i‡((
MB_CALLBACK_REG
 =1Ë|| (
MB_LIMIT_REG
 == 1))

13 c⁄° 
RegP¨amëîs_t
 
	gMBRegP¨am
[
MB_NUM_BUF
] =

15 
	#X_BUF
(
a
,
b
,
c
,
d
,
e
,
f
,
g
Ë[b]={d,e,f,g},

	)

16 
MB_BUF_TABLE


17 #unde‡
X_BUF


21 #i‡(
MB_USER_ARG1_REG
 == 1)

22 c⁄° *
	gMBRegArg1
[
MB_NUM_BUF
] =

24 
	#X_BUF
(
a
,
b
,
c
,
d
,
e
,
f
,
g
Ë[b]=c,

	)

25 
MB_BUF_TABLE


26 #unde‡
X_BUF


33 #i‡((
MB_CALLBACK_REG
 =1Ë|| (
MB_LIMIT_REG
 == 1))

34 
MBEº‹_t
 
	$mb_ö°™˚_idÀ_check
 (
MBSåu˘_t
 *
°_mb
)

36 i‡((
°_mb
->
cb_°©e
 =
MB_CB_FREE
Ë&& (°_mb->
mb_°©e
 =
MB_STATE_IDLE
))

38  
MB_OK
;

40  
MB_ERROR
;

41 
	}
}

43 
MBEº‹_t
 
	$mb_ªg_limô_check
 (
uöt16_t
 
numbî
, uöt16_à
vÆue
)

45 
MBRegP¨am
[
numbî
].
O±i⁄s
 & 
LIM_BIT_MASK
)

50 
LIM_MASK
:

51 i‡(
vÆue
 & (~(
MBRegP¨am
[
numbî
].
Max_Levñ_Mask
)))

53  
MB_ERROR
;

57 
LIM_SIGN
:

58 i‡((
öt16_t
)
vÆue
 > (öt16_t)
MBRegP¨am
[
numbî
].
Max_Levñ_Mask
 ||

59 (
öt16_t
)
vÆue
 < (öt16_t)
MBRegP¨am
[
numbî
].
Mö_Levñ
)

61  
MB_ERROR
;

65 
LIM_UNSIGN
:

66 i‡((
uöt16_t
)
vÆue
 > (uöt16_t)
MBRegP¨am
[
numbî
].
Max_Levñ_Mask
 ||

67 (
uöt16_t
)
vÆue
 < (uöt16_t)
MBRegP¨am
[
numbî
].
Mö_Levñ
)

69  
MB_ERROR
;

76  
MB_OK
;

77 
	}
}

79 
MBEº‹_t
 
	$mb_ªg_›ti⁄_check
 (
uöt16_t
 
numbî
, uöt16_à
›ti⁄_mask
)

81 i‡((
MBRegP¨am
[
numbî
].
O±i⁄s
 & 
›ti⁄_mask
) == option_mask)

83  
MB_OK
;

85  
MB_ERROR
;

86 
	}
}

88 
RegP¨amëîs_t
 
	$mb_gëRegP¨am
 (
uöt16_t
 
numbî
)

90  
MBRegP¨am
[
numbî
];

91 
	}
}

94 #i‡(
MB_USER_ARG1_REG
 == 1)

95 c⁄° * 
	$mb_gëRegU£rArg1
 (
uöt16_t
 
numbî
)

97  
MBRegArg1
[
numbî
];

98 
	}
}

102 
MBEº‹_t
 
	$mb_ªg_wrôe_›ti⁄_check
 (
uöt16_t
 
numbî
)

104  
	`mb_ªg_›ti⁄_check
(
numbî
, 
WRITE_R
);

105 
	}
}

107 
MBEº‹_t
 
	$mb_ªg_CB_›ti⁄_check
 (
uöt16_t
 
numbî
)

109  
	`mb_ªg_›ti⁄_check
(
numbî
, 
CB_WR
);

110 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\modbus_reg.h

1 #i‚de‡
MODBUS_REG_H_INCLUDED


2 
	#MODBUS_REG_H_INCLUDED


	)

4 
	~<°döt.h
>

5 
	~"modbus_c⁄fig.h
"

6 
	~"modbus.h
"

10 
	mMB_ERROR
 = 0x00,

11 
	mMB_OK
 = 0x01

12 } 
	tMBEº‹_t
;

16 
uöt16_t
 
	mDeÁu…_VÆue
;

17 
uöt16_t
 
	mMö_Levñ
;

18 
uöt16_t
 
	mMax_Levñ_Mask
;

19 
uöt32_t
 
	mO±i⁄s
;

20 } 
	tRegP¨amëîs_t
;

22 #i‡(
MB_REG_END_TO_END
 == 1)

25 
	#X_BUF
(
a
,
b
,
c
,
d
,
e
,
f
Ëb,

	)

26 
	mMB_BUF_TABLE


27 #unde‡
X_BUF


28 
	mMB_NUM_BUF


33 
	#X_BUF
(
a
,
b
,
c
,
d
,
e
,
f
,
g
Ëb˜,

	)

34 
	mMB_BUF_TABLE


35 #unde‡
X_BUF


36 
	mMB_NUM_BUF
=(
REG_END_REGISTER
+1)

44 
MBEº‹_t
 
mb_ö°™˚_idÀ_check
 (
MBSåu˘_t
 *
°_mb
);

45 
MBEº‹_t
 
mb_ªg_limô_check
 (
uöt16_t
 
Numbî_Reg
, uöt16_à
VÆue
);

46 
MBEº‹_t
 
mb_ªg_›ti⁄_check
 (
uöt16_t
 
numbî
, uöt16_à
›ti⁄_mask
);

47 
RegP¨amëîs_t
 
mb_gëRegP¨am
 (
uöt16_t
 
numbî
);

48 c⁄° * 
mb_gëRegU£rArg1
 (
uöt16_t
 
numbî
);

50 
MBEº‹_t
 
mb_ªg_wrôe_›ti⁄_check
 (
uöt16_t
 
numbî
);

51 
MBEº‹_t
 
mb_ªg_CB_›ti⁄_check
 (
uöt16_t
 
numbî
);

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\startup_stm32f103xb.S

29 .
sy¡ax
 
	gunifõd


30 .
˝u
 
	gc‹ãx
-
	gm3


31 .
Âu
 
	gso·vÂ


32 .
	gthumb


34 .
globÆ
 
	gg_p‚Ve˘‹s


35 .
globÆ
 
	gDeÁu…_H™dÀr


39 .
w‹d
 
	g_sid©a


41 .
w‹d
 
	g_sd©a


43 .
w‹d
 
	g_ed©a


45 .
w‹d
 
	g_sbss


47 .
w‹d
 
	g_ebss


49 .
equ
 
	gBoŸRAM
, 0xF108F85F

59 .
	g£˘i⁄
 .
	gãxt
.
	gRe£t_H™dÀr


60 .
wók
 
	gRe£t_H™dÀr


61 .
ty≥
 
	gRe£t_H™dÀr
, %
fun˘i⁄


62 
	gRe£t_H™dÀr
:

65 
movs
 
r1
, #0

66 
b
 
Lo›C›yD©aInô


68 
	gC›yD©aInô
:

69 
ldr
 
r3
, =
_sid©a


70 
ldr
 
r3
, [r3, 
r1
]

71 
°r
 
	gr3
, [
r0
, 
r1
]

72 
adds
 
	gr1
,Ñ1, #4

74 
	gLo›C›yD©aInô
:

75 
ldr
 
r0
, =
_sd©a


76 
ldr
 
r3
, =
_ed©a


77 
adds
 
r2
, 
	gr0
, 
r1


78 
cmp
 
	gr2
, 
r3


79 
bcc
 
C›yD©aInô


80 
ldr
 
	gr2
, =
_sbss


81 
b
 
Lo›FûlZîobss


83 
FûlZîobss
:

84 
movs
 
r3
, #0

85 
°r
 
	gr3
, [
r2
], #4

87 
	gLo›FûlZîobss
:

88 
ldr
 
r3
, = 
_ebss


89 
cmp
 
r2
, 
r3


90 
bcc
 
FûlZîobss


93 
bl
 
	gSy°emInô


95 #ifde‡
PROJECT_CPP


96 
bl
 
	g__libc_öô_¨øy


99 
bl
 
maö


100 
bx
 
	gÃ


101 .
size
 
	gRe£t_H™dÀr
, .-Reset_Handler

111 .
	g£˘i⁄
 .
	gãxt
.
	gDeÁu…_H™dÀr
,"ax",%
¥ogbôs


112 
	gDeÁu…_H™dÀr
:

113 
Inföôe_Lo›
:

114 
b
 
Inföôe_Lo›


115 .
size
 
DeÁu…_H™dÀr
, .-
	gDeÁu…_H™dÀr


123 .
	g£˘i⁄
 .
	gi§_ve˘‹
,"a",%
	g¥ogbôs


124 .
ty≥
 
	gg_p‚Ve˘‹s
, %
	gobje˘


125 .
size
 
	gg_p‚Ve˘‹s
, .-
g_p‚Ve˘‹s


128 
	gg_p‚Ve˘‹s
:

130 .
w‹d
 
_e°ack


131 .
w‹d
 
Re£t_H™dÀr


132 .
w‹d
 
NMI_H™dÀr


133 .
w‹d
 
H¨dFau…_H™dÀr


134 .
w‹d
 
MemM™age_H™dÀr


135 .
w‹d
 
BusFau…_H™dÀr


136 .
w‹d
 
UßgeFau…_H™dÀr


137 .
w‹d
 0

138 .
w‹d
 0

139 .
w‹d
 0

140 .
w‹d
 0

141 .
w‹d
 
SVC_H™dÀr


142 .
w‹d
 
DebugM⁄_H™dÀr


143 .
w‹d
 0

144 .
w‹d
 
PídSV_H™dÀr


145 .
w‹d
 
SysTick_H™dÀr


146 .
w‹d
 
WWDG_IRQH™dÀr


147 .
w‹d
 
PVD_IRQH™dÀr


148 .
w‹d
 
TAMPER_IRQH™dÀr


149 .
w‹d
 
RTC_IRQH™dÀr


150 .
w‹d
 
FLASH_IRQH™dÀr


151 .
w‹d
 
RCC_IRQH™dÀr


152 .
w‹d
 
EXTI0_IRQH™dÀr


153 .
w‹d
 
EXTI1_IRQH™dÀr


154 .
w‹d
 
EXTI2_IRQH™dÀr


155 .
w‹d
 
EXTI3_IRQH™dÀr


156 .
w‹d
 
EXTI4_IRQH™dÀr


157 .
w‹d
 
DMA1_Ch™√l1_IRQH™dÀr


158 .
w‹d
 
DMA1_Ch™√l2_IRQH™dÀr


159 .
w‹d
 
DMA1_Ch™√l3_IRQH™dÀr


160 .
w‹d
 
DMA1_Ch™√l4_IRQH™dÀr


161 .
w‹d
 
DMA1_Ch™√l5_IRQH™dÀr


162 .
w‹d
 
DMA1_Ch™√l6_IRQH™dÀr


163 .
w‹d
 
DMA1_Ch™√l7_IRQH™dÀr


164 .
w‹d
 
ADC1_2_IRQH™dÀr


165 .
w‹d
 
USB_HP_CAN1_TX_IRQH™dÀr


166 .
w‹d
 
USB_LP_CAN1_RX0_IRQH™dÀr


167 .
w‹d
 
CAN1_RX1_IRQH™dÀr


168 .
w‹d
 
CAN1_SCE_IRQH™dÀr


169 .
w‹d
 
EXTI9_5_IRQH™dÀr


170 .
w‹d
 
TIM1_BRK_IRQH™dÀr


171 .
w‹d
 
TIM1_UP_IRQH™dÀr


172 .
w‹d
 
TIM1_TRG_COM_IRQH™dÀr


173 .
w‹d
 
TIM1_CC_IRQH™dÀr


174 .
w‹d
 
TIM2_IRQH™dÀr


175 .
w‹d
 
TIM3_IRQH™dÀr


176 .
w‹d
 
TIM4_IRQH™dÀr


177 .
w‹d
 
I2C1_EV_IRQH™dÀr


178 .
w‹d
 
I2C1_ER_IRQH™dÀr


179 .
w‹d
 
I2C2_EV_IRQH™dÀr


180 .
w‹d
 
I2C2_ER_IRQH™dÀr


181 .
w‹d
 
SPI1_IRQH™dÀr


182 .
w‹d
 
SPI2_IRQH™dÀr


183 .
w‹d
 
USART1_IRQH™dÀr


184 .
w‹d
 
USART2_IRQH™dÀr


185 .
w‹d
 
USART3_IRQH™dÀr


186 .
w‹d
 
EXTI15_10_IRQH™dÀr


187 .
w‹d
 
RTC_Aœrm_IRQH™dÀr


188 .
w‹d
 
USBWakeUp_IRQH™dÀr


189 .
w‹d
 0

190 .
w‹d
 0

191 .
w‹d
 0

192 .
w‹d
 0

193 .
w‹d
 0

194 .
w‹d
 0

195 .
w‹d
 0

196 .
w‹d
 
BoŸRAM


207 .
wók
 
NMI_H™dÀr


208 .
thumb_£t
 
NMI_H™dÀr
,
	gDeÁu…_H™dÀr


210 .
wók
 
	gH¨dFau…_H™dÀr


211 .
thumb_£t
 
	gH¨dFau…_H™dÀr
,
	gDeÁu…_H™dÀr


213 .
wók
 
	gMemM™age_H™dÀr


214 .
thumb_£t
 
	gMemM™age_H™dÀr
,
	gDeÁu…_H™dÀr


216 .
wók
 
	gBusFau…_H™dÀr


217 .
thumb_£t
 
	gBusFau…_H™dÀr
,
	gDeÁu…_H™dÀr


219 .
wók
 
	gUßgeFau…_H™dÀr


220 .
thumb_£t
 
	gUßgeFau…_H™dÀr
,
	gDeÁu…_H™dÀr


222 .
wók
 
	gSVC_H™dÀr


223 .
thumb_£t
 
	gSVC_H™dÀr
,
	gDeÁu…_H™dÀr


225 .
wók
 
	gDebugM⁄_H™dÀr


226 .
thumb_£t
 
	gDebugM⁄_H™dÀr
,
	gDeÁu…_H™dÀr


228 .
wók
 
	gPídSV_H™dÀr


229 .
thumb_£t
 
	gPídSV_H™dÀr
,
	gDeÁu…_H™dÀr


231 .
wók
 
	gSysTick_H™dÀr


232 .
thumb_£t
 
	gSysTick_H™dÀr
,
	gDeÁu…_H™dÀr


234 .
wók
 
	gWWDG_IRQH™dÀr


235 .
thumb_£t
 
	gWWDG_IRQH™dÀr
,
	gDeÁu…_H™dÀr


237 .
wók
 
	gPVD_IRQH™dÀr


238 .
thumb_£t
 
	gPVD_IRQH™dÀr
,
	gDeÁu…_H™dÀr


240 .
wók
 
	gTAMPER_IRQH™dÀr


241 .
thumb_£t
 
	gTAMPER_IRQH™dÀr
,
	gDeÁu…_H™dÀr


243 .
wók
 
	gRTC_IRQH™dÀr


244 .
thumb_£t
 
	gRTC_IRQH™dÀr
,
	gDeÁu…_H™dÀr


246 .
wók
 
	gFLASH_IRQH™dÀr


247 .
thumb_£t
 
	gFLASH_IRQH™dÀr
,
	gDeÁu…_H™dÀr


249 .
wók
 
	gRCC_IRQH™dÀr


250 .
thumb_£t
 
	gRCC_IRQH™dÀr
,
	gDeÁu…_H™dÀr


252 .
wók
 
	gEXTI0_IRQH™dÀr


253 .
thumb_£t
 
	gEXTI0_IRQH™dÀr
,
	gDeÁu…_H™dÀr


255 .
wók
 
	gEXTI1_IRQH™dÀr


256 .
thumb_£t
 
	gEXTI1_IRQH™dÀr
,
	gDeÁu…_H™dÀr


258 .
wók
 
	gEXTI2_IRQH™dÀr


259 .
thumb_£t
 
	gEXTI2_IRQH™dÀr
,
	gDeÁu…_H™dÀr


261 .
wók
 
	gEXTI3_IRQH™dÀr


262 .
thumb_£t
 
	gEXTI3_IRQH™dÀr
,
	gDeÁu…_H™dÀr


264 .
wók
 
	gEXTI4_IRQH™dÀr


265 .
thumb_£t
 
	gEXTI4_IRQH™dÀr
,
	gDeÁu…_H™dÀr


267 .
wók
 
	gDMA1_Ch™√l1_IRQH™dÀr


268 .
thumb_£t
 
	gDMA1_Ch™√l1_IRQH™dÀr
,
	gDeÁu…_H™dÀr


270 .
wók
 
	gDMA1_Ch™√l2_IRQH™dÀr


271 .
thumb_£t
 
	gDMA1_Ch™√l2_IRQH™dÀr
,
	gDeÁu…_H™dÀr


273 .
wók
 
	gDMA1_Ch™√l3_IRQH™dÀr


274 .
thumb_£t
 
	gDMA1_Ch™√l3_IRQH™dÀr
,
	gDeÁu…_H™dÀr


276 .
wók
 
	gDMA1_Ch™√l4_IRQH™dÀr


277 .
thumb_£t
 
	gDMA1_Ch™√l4_IRQH™dÀr
,
	gDeÁu…_H™dÀr


279 .
wók
 
	gDMA1_Ch™√l5_IRQH™dÀr


280 .
thumb_£t
 
	gDMA1_Ch™√l5_IRQH™dÀr
,
	gDeÁu…_H™dÀr


282 .
wók
 
	gDMA1_Ch™√l6_IRQH™dÀr


283 .
thumb_£t
 
	gDMA1_Ch™√l6_IRQH™dÀr
,
	gDeÁu…_H™dÀr


285 .
wók
 
	gDMA1_Ch™√l7_IRQH™dÀr


286 .
thumb_£t
 
	gDMA1_Ch™√l7_IRQH™dÀr
,
	gDeÁu…_H™dÀr


288 .
wók
 
	gADC1_2_IRQH™dÀr


289 .
thumb_£t
 
	gADC1_2_IRQH™dÀr
,
	gDeÁu…_H™dÀr


291 .
wók
 
	gUSB_HP_CAN1_TX_IRQH™dÀr


292 .
thumb_£t
 
	gUSB_HP_CAN1_TX_IRQH™dÀr
,
	gDeÁu…_H™dÀr


294 .
wók
 
	gUSB_LP_CAN1_RX0_IRQH™dÀr


295 .
thumb_£t
 
	gUSB_LP_CAN1_RX0_IRQH™dÀr
,
	gDeÁu…_H™dÀr


297 .
wók
 
	gCAN1_RX1_IRQH™dÀr


298 .
thumb_£t
 
	gCAN1_RX1_IRQH™dÀr
,
	gDeÁu…_H™dÀr


300 .
wók
 
	gCAN1_SCE_IRQH™dÀr


301 .
thumb_£t
 
	gCAN1_SCE_IRQH™dÀr
,
	gDeÁu…_H™dÀr


303 .
wók
 
	gEXTI9_5_IRQH™dÀr


304 .
thumb_£t
 
	gEXTI9_5_IRQH™dÀr
,
	gDeÁu…_H™dÀr


306 .
wók
 
	gTIM1_BRK_IRQH™dÀr


307 .
thumb_£t
 
	gTIM1_BRK_IRQH™dÀr
,
	gDeÁu…_H™dÀr


309 .
wók
 
	gTIM1_UP_IRQH™dÀr


310 .
thumb_£t
 
	gTIM1_UP_IRQH™dÀr
,
	gDeÁu…_H™dÀr


312 .
wók
 
	gTIM1_TRG_COM_IRQH™dÀr


313 .
thumb_£t
 
	gTIM1_TRG_COM_IRQH™dÀr
,
	gDeÁu…_H™dÀr


315 .
wók
 
	gTIM1_CC_IRQH™dÀr


316 .
thumb_£t
 
	gTIM1_CC_IRQH™dÀr
,
	gDeÁu…_H™dÀr


318 .
wók
 
	gTIM2_IRQH™dÀr


319 .
thumb_£t
 
	gTIM2_IRQH™dÀr
,
	gDeÁu…_H™dÀr


321 .
wók
 
	gTIM3_IRQH™dÀr


322 .
thumb_£t
 
	gTIM3_IRQH™dÀr
,
	gDeÁu…_H™dÀr


324 .
wók
 
	gTIM4_IRQH™dÀr


325 .
thumb_£t
 
	gTIM4_IRQH™dÀr
,
	gDeÁu…_H™dÀr


327 .
wók
 
	gI2C1_EV_IRQH™dÀr


328 .
thumb_£t
 
	gI2C1_EV_IRQH™dÀr
,
	gDeÁu…_H™dÀr


330 .
wók
 
	gI2C1_ER_IRQH™dÀr


331 .
thumb_£t
 
	gI2C1_ER_IRQH™dÀr
,
	gDeÁu…_H™dÀr


333 .
wók
 
	gI2C2_EV_IRQH™dÀr


334 .
thumb_£t
 
	gI2C2_EV_IRQH™dÀr
,
	gDeÁu…_H™dÀr


336 .
wók
 
	gI2C2_ER_IRQH™dÀr


337 .
thumb_£t
 
	gI2C2_ER_IRQH™dÀr
,
	gDeÁu…_H™dÀr


339 .
wók
 
	gSPI1_IRQH™dÀr


340 .
thumb_£t
 
	gSPI1_IRQH™dÀr
,
	gDeÁu…_H™dÀr


342 .
wók
 
	gSPI2_IRQH™dÀr


343 .
thumb_£t
 
	gSPI2_IRQH™dÀr
,
	gDeÁu…_H™dÀr


345 .
wók
 
	gUSART1_IRQH™dÀr


346 .
thumb_£t
 
	gUSART1_IRQH™dÀr
,
	gDeÁu…_H™dÀr


348 .
wók
 
	gUSART2_IRQH™dÀr


349 .
thumb_£t
 
	gUSART2_IRQH™dÀr
,
	gDeÁu…_H™dÀr


351 .
wók
 
	gUSART3_IRQH™dÀr


352 .
thumb_£t
 
	gUSART3_IRQH™dÀr
,
	gDeÁu…_H™dÀr


354 .
wók
 
	gEXTI15_10_IRQH™dÀr


355 .
thumb_£t
 
	gEXTI15_10_IRQH™dÀr
,
	gDeÁu…_H™dÀr


357 .
wók
 
	gRTC_Aœrm_IRQH™dÀr


358 .
thumb_£t
 
	gRTC_Aœrm_IRQH™dÀr
,
	gDeÁu…_H™dÀr


360 .
wók
 
	gUSBWakeUp_IRQH™dÀr


361 .
thumb_£t
 
	gUSBWakeUp_IRQH™dÀr
,
	gDeÁu…_H™dÀr


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\stm32f1xx_hal_conf.h

21 #i‚de‡
__STM32F1xx_HAL_CONF_H


22 
	#__STM32F1xx_HAL_CONF_H


	)

24 #ifde‡
__˝lu•lus


36 
	#HAL_MODULE_ENABLED


	)

56 
	#HAL_PCD_MODULE_ENABLED


	)

86 #i‡!
deföed
 (
HSE_VALUE
)

87 
	#HSE_VALUE
 8000000U

	)

90 #i‡!
deföed
 (
HSE_STARTUP_TIMEOUT
)

91 
	#HSE_STARTUP_TIMEOUT
 100U

	)

99 #i‡!
deföed
 (
HSI_VALUE
)

100 
	#HSI_VALUE
 8000000U

	)

106 #i‡!
deföed
 (
LSI_VALUE
)

107 
	#LSI_VALUE
 40000U

	)

109 
The
 
ªÆ
 
vÆue
 
may
 
v¨y
 
dïídög
 
⁄
 
the
 
v¨üti⁄s


110 
ö
 
vﬁège
 
™d
 
ãm≥øtuª
. */

116 #i‡!
deföed
 (
LSE_VALUE
)

117 
	#LSE_VALUE
 32768U

	)

120 #i‡!
deföed
 (
LSE_STARTUP_TIMEOUT
)

121 
	#LSE_STARTUP_TIMEOUT
 5000U

	)

131 
	#VDD_VALUE
 3300U

	)

132 
	#TICK_INT_PRIORITY
 15U

	)

133 
	#USE_RTOS
 0U

	)

134 
	#PREFETCH_ENABLE
 1U

	)

136 
	#USE_HAL_ADC_REGISTER_CALLBACKS
 0U

	)

137 
	#USE_HAL_CAN_REGISTER_CALLBACKS
 0U

	)

138 
	#USE_HAL_CEC_REGISTER_CALLBACKS
 0U

	)

139 
	#USE_HAL_DAC_REGISTER_CALLBACKS
 0U

	)

140 
	#USE_HAL_ETH_REGISTER_CALLBACKS
 0U

	)

141 
	#USE_HAL_HCD_REGISTER_CALLBACKS
 0U

	)

142 
	#USE_HAL_I2C_REGISTER_CALLBACKS
 0U

	)

143 
	#USE_HAL_I2S_REGISTER_CALLBACKS
 0U

	)

144 
	#USE_HAL_MMC_REGISTER_CALLBACKS
 0U

	)

145 
	#USE_HAL_NAND_REGISTER_CALLBACKS
 0U

	)

146 
	#USE_HAL_NOR_REGISTER_CALLBACKS
 0U

	)

147 
	#USE_HAL_PCCARD_REGISTER_CALLBACKS
 0U

	)

148 
	#USE_HAL_PCD_REGISTER_CALLBACKS
 0U

	)

149 
	#USE_HAL_RTC_REGISTER_CALLBACKS
 0U

	)

150 
	#USE_HAL_SD_REGISTER_CALLBACKS
 0U

	)

151 
	#USE_HAL_SMARTCARD_REGISTER_CALLBACKS
 0U

	)

152 
	#USE_HAL_IRDA_REGISTER_CALLBACKS
 0U

	)

153 
	#USE_HAL_SRAM_REGISTER_CALLBACKS
 0U

	)

154 
	#USE_HAL_SPI_REGISTER_CALLBACKS
 0U

	)

155 
	#USE_HAL_TIM_REGISTER_CALLBACKS
 0U

	)

156 
	#USE_HAL_UART_REGISTER_CALLBACKS
 0U

	)

157 
	#USE_HAL_USART_REGISTER_CALLBACKS
 0U

	)

158 
	#USE_HAL_WWDG_REGISTER_CALLBACKS
 0U

	)

172 
	#MAC_ADDR0
 2U

	)

173 
	#MAC_ADDR1
 0U

	)

174 
	#MAC_ADDR2
 0U

	)

175 
	#MAC_ADDR3
 0U

	)

176 
	#MAC_ADDR4
 0U

	)

177 
	#MAC_ADDR5
 0U

	)

180 
	#ETH_RX_BUF_SIZE
 
ETH_MAX_PACKET_SIZE


	)

181 
	#ETH_TX_BUF_SIZE
 
ETH_MAX_PACKET_SIZE


	)

182 
	#ETH_RXBUFNB
 8U

	)

183 
	#ETH_TXBUFNB
 4U

	)

188 
	#DP83848_PHY_ADDRESS
 0x01U

	)

190 
	#PHY_RESET_DELAY
 0x000000FFU

	)

192 
	#PHY_CONFIG_DELAY
 0x00000FFFU

	)

194 
	#PHY_READ_TO
 0x0000FFFFU

	)

195 
	#PHY_WRITE_TO
 0x0000FFFFU

	)

199 
	#PHY_BCR
 ((
uöt16_t
)0x00Ë

	)

200 
	#PHY_BSR
 ((
uöt16_t
)0x01Ë

	)

202 
	#PHY_RESET
 ((
uöt16_t
)0x8000Ë

	)

203 
	#PHY_LOOPBACK
 ((
uöt16_t
)0x4000Ë

	)

204 
	#PHY_FULLDUPLEX_100M
 ((
uöt16_t
)0x2100Ë

	)

205 
	#PHY_HALFDUPLEX_100M
 ((
uöt16_t
)0x2000Ë

	)

206 
	#PHY_FULLDUPLEX_10M
 ((
uöt16_t
)0x0100Ë

	)

207 
	#PHY_HALFDUPLEX_10M
 ((
uöt16_t
)0x0000Ë

	)

208 
	#PHY_AUTONEGOTIATION
 ((
uöt16_t
)0x1000Ë

	)

209 
	#PHY_RESTART_AUTONEGOTIATION
 ((
uöt16_t
)0x0200Ë

	)

210 
	#PHY_POWERDOWN
 ((
uöt16_t
)0x0800Ë

	)

211 
	#PHY_ISOLATE
 ((
uöt16_t
)0x0400Ë

	)

213 
	#PHY_AUTONEGO_COMPLETE
 ((
uöt16_t
)0x0020Ë

	)

214 
	#PHY_LINKED_STATUS
 ((
uöt16_t
)0x0004Ë

	)

215 
	#PHY_JABBER_DETECTION
 ((
uöt16_t
)0x0002Ë

	)

218 
	#PHY_SR
 ((
uöt16_t
)0x10UË

	)

220 
	#PHY_SPEED_STATUS
 ((
uöt16_t
)0x0002UË

	)

221 
	#PHY_DUPLEX_STATUS
 ((
uöt16_t
)0x0004UË

	)

230 
	#USE_SPI_CRC
 0U

	)

237 #ifde‡
HAL_RCC_MODULE_ENABLED


238 
	~"°m32f1xx_hÆ_rcc.h
"

241 #ifde‡
HAL_GPIO_MODULE_ENABLED


242 
	~"°m32f1xx_hÆ_gpio.h
"

245 #ifde‡
HAL_EXTI_MODULE_ENABLED


246 
	~"°m32f1xx_hÆ_exti.h
"

249 #ifde‡
HAL_DMA_MODULE_ENABLED


250 
	~"°m32f1xx_hÆ_dma.h
"

253 #ifde‡
HAL_ETH_MODULE_ENABLED


254 
	~"°m32f1xx_hÆ_ëh.h
"

257 #ifde‡
HAL_CAN_MODULE_ENABLED


258 
	~"°m32f1xx_hÆ_ˇn.h
"

261 #ifde‡
HAL_CAN_LEGACY_MODULE_ENABLED


262 
	~"Legacy/°m32f1xx_hÆ_ˇn_Àgacy.h
"

265 #ifde‡
HAL_CEC_MODULE_ENABLED


266 
	~"°m32f1xx_hÆ_˚c.h
"

269 #ifde‡
HAL_CORTEX_MODULE_ENABLED


270 
	~"°m32f1xx_hÆ_c‹ãx.h
"

273 #ifde‡
HAL_ADC_MODULE_ENABLED


274 
	~"°m32f1xx_hÆ_adc.h
"

277 #ifde‡
HAL_CRC_MODULE_ENABLED


278 
	~"°m32f1xx_hÆ_¸c.h
"

281 #ifde‡
HAL_DAC_MODULE_ENABLED


282 
	~"°m32f1xx_hÆ_dac.h
"

285 #ifde‡
HAL_FLASH_MODULE_ENABLED


286 
	~"°m32f1xx_hÆ_Êash.h
"

289 #ifde‡
HAL_SRAM_MODULE_ENABLED


290 
	~"°m32f1xx_hÆ_§am.h
"

293 #ifde‡
HAL_NOR_MODULE_ENABLED


294 
	~"°m32f1xx_hÆ_n‹.h
"

297 #ifde‡
HAL_I2C_MODULE_ENABLED


298 
	~"°m32f1xx_hÆ_i2c.h
"

301 #ifde‡
HAL_I2S_MODULE_ENABLED


302 
	~"°m32f1xx_hÆ_i2s.h
"

305 #ifde‡
HAL_IWDG_MODULE_ENABLED


306 
	~"°m32f1xx_hÆ_iwdg.h
"

309 #ifde‡
HAL_PWR_MODULE_ENABLED


310 
	~"°m32f1xx_hÆ_pwr.h
"

313 #ifde‡
HAL_RTC_MODULE_ENABLED


314 
	~"°m32f1xx_hÆ_πc.h
"

317 #ifde‡
HAL_PCCARD_MODULE_ENABLED


318 
	~"°m32f1xx_hÆ_pcˇrd.h
"

321 #ifde‡
HAL_SD_MODULE_ENABLED


322 
	~"°m32f1xx_hÆ_sd.h
"

325 #ifde‡
HAL_NAND_MODULE_ENABLED


326 
	~"°m32f1xx_hÆ_«nd.h
"

329 #ifde‡
HAL_SPI_MODULE_ENABLED


330 
	~"°m32f1xx_hÆ_•i.h
"

333 #ifde‡
HAL_TIM_MODULE_ENABLED


334 
	~"°m32f1xx_hÆ_tim.h
"

337 #ifde‡
HAL_UART_MODULE_ENABLED


338 
	~"°m32f1xx_hÆ_u¨t.h
"

341 #ifde‡
HAL_USART_MODULE_ENABLED


342 
	~"°m32f1xx_hÆ_ußπ.h
"

345 #ifde‡
HAL_IRDA_MODULE_ENABLED


346 
	~"°m32f1xx_hÆ_úda.h
"

349 #ifde‡
HAL_SMARTCARD_MODULE_ENABLED


350 
	~"°m32f1xx_hÆ_sm¨tˇrd.h
"

353 #ifde‡
HAL_WWDG_MODULE_ENABLED


354 
	~"°m32f1xx_hÆ_wwdg.h
"

357 #ifde‡
HAL_PCD_MODULE_ENABLED


358 
	~"°m32f1xx_hÆ_pcd.h
"

361 #ifde‡
HAL_HCD_MODULE_ENABLED


362 
	~"°m32f1xx_hÆ_hcd.h
"

365 #ifde‡
HAL_MMC_MODULE_ENABLED


366 
	~"°m32f1xx_hÆ_mmc.h
"

370 #ifde‡ 
USE_FULL_ASSERT


379 
	#as£π_∑øm
(
ex¥
Ë(”x¥Ë? ()0U : 
	`as£π_Áûed
((
uöt8_t
 *)
__FILE__
, 
__LINE__
))

	)

381 
as£π_Áûed
(
uöt8_t
* 
fûe
, 
uöt32_t
 
löe
);

383 
	#as£π_∑øm
(
ex¥
Ë(()0U)

	)

386 #ifde‡
__˝lu•lus


	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\system_stm32f1xx.c

59 
	~"°m32f1xx.h
"

77 #i‡!
deföed
 (
HSE_VALUE
)

78 
	#HSE_VALUE
 8000000U

	)

82 #i‡!
deföed
 (
HSI_VALUE
)

83 
	#HSI_VALUE
 8000000U

	)

88 #i‡
deföed
(
STM32F100xE
Ë|| deföed(
STM32F101xE
Ë|| deföed(
STM32F101xG
Ë|| deföed(
STM32F103xE
Ë|| deföed(
STM32F103xG
)

95 
	#VECT_TAB_OFFSET
 0x00000000U

	)

123 
uöt32_t
 
	gSy°emC‹eClock
 = 16000000;

124 c⁄° 
uöt8_t
 
	gAHBPªscTabÀ
[16U] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};

125 c⁄° 
uöt8_t
 
	gAPBPªscTabÀ
[8U] = {0, 0, 0, 0, 1, 2, 3, 4};

135 #i‡
deföed
(
STM32F100xE
Ë|| deföed(
STM32F101xE
Ë|| deföed(
STM32F101xG
Ë|| deföed(
STM32F103xE
Ë|| deföed(
STM32F103xG
)

136 #ifde‡
DATA_IN_ExtSRAM


137 
Sy°emInô_ExtMemCé
();

157 
	$Sy°emInô
 ()

161 
RCC
->
CR
 |= 0x00000001U;

164 #i‡!
	`deföed
(
STM32F105xC
Ë&& !deföed(
STM32F107xC
)

165 
RCC
->
CFGR
 &= 0xF8FF0000U;

167 
RCC
->
CFGR
 &= 0xF0FF0000U;

171 
RCC
->
CR
 &= 0xFEF6FFFFU;

174 
RCC
->
CR
 &= 0xFFFBFFFFU;

177 
RCC
->
CFGR
 &= 0xFF80FFFFU;

179 #i‡
	`deföed
(
STM32F105xC
Ë|| deföed(
STM32F107xC
)

181 
RCC
->
CR
 &= 0xEBFFFFFFU;

184 
RCC
->
CIR
 = 0x00FF0000U;

187 
RCC
->
CFGR2
 = 0x00000000U;

188 #ñi‡
	`deföed
(
STM32F100xB
Ë|| deföed(
STM32F100xE
)

190 
RCC
->
CIR
 = 0x009F0000U;

193 
RCC
->
CFGR2
 = 0x00000000U;

196 
RCC
->
CIR
 = 0x009F0000U;

199 #i‡
	`deföed
(
STM32F100xE
Ë|| deföed(
STM32F101xE
Ë|| deföed(
STM32F101xG
Ë|| deföed(
STM32F103xE
Ë|| deföed(
STM32F103xG
)

200 #ifde‡
DATA_IN_ExtSRAM


201 
	`Sy°emInô_ExtMemCé
();

205 #ifde‡
VECT_TAB_SRAM


206 
SCB
->
VTOR
 = 
SRAM_BASE
 | 
VECT_TAB_OFFSET
;

208 
SCB
->
VTOR
 = 
FLASH_BASE
 | 
VECT_TAB_OFFSET
;

210 
	}
}

247 
	$Sy°emC‹eClockUpd©e
 ()

249 
uöt32_t
 
tmp
 = 0U, 
∂lmuŒ
 = 0U, 
∂lsour˚
 = 0U;

251 #i‡
	`deföed
(
STM32F105xC
Ë|| deföed(
STM32F107xC
)

252 
uöt32_t
 
¥ediv1sour˚
 = 0U, 
¥ediv1Á˘‹
 = 0U, 
¥ediv2Á˘‹
 = 0U, 
∂l2muŒ
 = 0U;

255 #i‡
	`deföed
(
STM32F100xB
Ë|| deföed(
STM32F100xE
)

256 
uöt32_t
 
¥ediv1Á˘‹
 = 0U;

260 
tmp
 = 
RCC
->
CFGR
 & 
RCC_CFGR_SWS
;

262 
tmp
)

265 
Sy°emC‹eClock
 = 
HSI_VALUE
;

268 
Sy°emC‹eClock
 = 
HSE_VALUE
;

273 
∂lmuŒ
 = 
RCC
->
CFGR
 & 
RCC_CFGR_PLLMULL
;

274 
∂lsour˚
 = 
RCC
->
CFGR
 & 
RCC_CFGR_PLLSRC
;

276 #i‡!
	`deföed
(
STM32F105xC
Ë&& !deföed(
STM32F107xC
)

277 
∂lmuŒ
 = (Öllmull >> 18U) + 2U;

279 i‡(
∂lsour˚
 == 0x00U)

282 
Sy°emC‹eClock
 = (
HSI_VALUE
 >> 1UË* 
∂lmuŒ
;

286 #i‡
	`deföed
(
STM32F100xB
Ë|| deföed(
STM32F100xE
)

287 
¥ediv1Á˘‹
 = (
RCC
->
CFGR2
 & 
RCC_CFGR2_PREDIV1
) + 1U;

289 
Sy°emC‹eClock
 = (
HSE_VALUE
 / 
¥ediv1Á˘‹
Ë* 
∂lmuŒ
;

292 i‡((
RCC
->
CFGR
 & 
RCC_CFGR_PLLXTPRE
Ë!(
uöt32_t
)
RESET
)

294 
Sy°emC‹eClock
 = (
HSE_VALUE
 >> 1UË* 
∂lmuŒ
;

298 
Sy°emC‹eClock
 = 
HSE_VALUE
 * 
∂lmuŒ
;

303 
∂lmuŒ
 =Öllmull >> 18U;

305 i‡(
∂lmuŒ
 != 0x0DU)

307 
∂lmuŒ
 += 2U;

311 
∂lmuŒ
 = 13U / 2U;

314 i‡(
∂lsour˚
 == 0x00U)

317 
Sy°emC‹eClock
 = (
HSI_VALUE
 >> 1UË* 
∂lmuŒ
;

323 
¥ediv1sour˚
 = 
RCC
->
CFGR2
 & 
RCC_CFGR2_PREDIV1SRC
;

324 
¥ediv1Á˘‹
 = (
RCC
->
CFGR2
 & 
RCC_CFGR2_PREDIV1
) + 1U;

326 i‡(
¥ediv1sour˚
 == 0U)

329 
Sy°emC‹eClock
 = (
HSE_VALUE
 / 
¥ediv1Á˘‹
Ë* 
∂lmuŒ
;

335 
¥ediv2Á˘‹
 = ((
RCC
->
CFGR2
 & 
RCC_CFGR2_PREDIV2
) >> 4U) + 1U;

336 
∂l2muŒ
 = ((
RCC
->
CFGR2
 & 
RCC_CFGR2_PLL2MUL
) >> 8U) + 2U;

337 
Sy°emC‹eClock
 = (((
HSE_VALUE
 / 
¥ediv2Á˘‹
Ë* 
∂l2muŒ
Ë/ 
¥ediv1Á˘‹
Ë* 
∂lmuŒ
;

344 
Sy°emC‹eClock
 = 
HSI_VALUE
;

350 
tmp
 = 
AHBPªscTabÀ
[((
RCC
->
CFGR
 & 
RCC_CFGR_HPRE
) >> 4U)];

352 
Sy°emC‹eClock
 >>
tmp
;

353 
	}
}

355 #i‡
deföed
(
STM32F100xE
Ë|| deföed(
STM32F101xE
Ë|| deföed(
STM32F101xG
Ë|| deföed(
STM32F103xE
Ë|| deföed(
STM32F103xG
)

362 #ifde‡
DATA_IN_ExtSRAM


372 
	$Sy°emInô_ExtMemCé
()

374 
__IO
 
uöt32_t
 
tm¥eg
;

379 
RCC
->
AHBENR
 = 0x00000114U;

382 
tm¥eg
 = 
	`READ_BIT
(
RCC
->
AHBENR
, 
RCC_AHBENR_FSMCEN
);

385 
RCC
->
APB2ENR
 = 0x000001E0U;

388 
tm¥eg
 = 
	`READ_BIT
(
RCC
->
APB2ENR
, 
RCC_APB2ENR_IOPDEN
);

390 ()(
tm¥eg
);

398 
GPIOD
->
CRL
 = 0x44BB44BBU;

399 
GPIOD
->
CRH
 = 0xBBBBBBBBU;

401 
GPIOE
->
CRL
 = 0xB44444BBU;

402 
GPIOE
->
CRH
 = 0xBBBBBBBBU;

404 
GPIOF
->
CRL
 = 0x44BBBBBBU;

405 
GPIOF
->
CRH
 = 0xBBBB4444U;

407 
GPIOG
->
CRL
 = 0x44BBBBBBU;

408 
GPIOG
->
CRH
 = 0x444B4B44U;

413 
FSMC_B™k1
->
BTCR
[4U] = 0x00001091U;

414 
FSMC_B™k1
->
BTCR
[5U] = 0x00110212U;

415 
	}
}

	@D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\stm32f103c8_flash.ld

48 
	$ENTRY
(
Re£t_H™dÀr
)

52 
_Mö_Hóp_Size
 = 
__HEAP_SIZE
;

53 
_Mö_Sèck_Size
 = 
__STACK_SIZE
;

56 
MEMORY


58 
	`FLASH
 (
rx
Ë: 
ORIGIN
 = 0x08000000, 
LENGTH
 = 62
K


59 
	`RAM
 (
rwx
Ë: 
ORIGIN
 = 0x20000000, 
LENGTH
 = 20
K


60 
	`MEM_1
 (
rx
Ë: 
ORIGIN
 = 0x800F800, 
LENGTH
 = 2
K


61 
	}
}

63 
	g_e°ack
 = 
ORIGIN
(
RAM
Ë+ 
LENGTH
(RAM);

66 
	gSECTIONS


69 .
	gi§_ve˘‹
 :

71 . = 
ALIGN
(4);

72 
KEEP
(*(.
i§_ve˘‹
))

73 . = 
ALIGN
(4);

74 } >
	gFLASH


76 .
	gmem_1
 :

78 *(.
mem_1
*);

79 } > 
	gMEM_1


82 .
	gãxt
 :

84 . = 
ALIGN
(4);

85 *(.
	gãxt
)

86 *(.
	gãxt
*)

87 *(.
	gglue_7
)

88 *(.
	gglue_7t
)

89 *(.
	geh_‰ame
)

91 
KEEP
 (*(.
öô
))

92 
KEEP
 (*(.
föi
))

94 . = 
ALIGN
(4);

95 
	g_ëext
 = .;

96 } >
	gFLASH


99 .
	grod©a
 :

101 . = 
ALIGN
(4);

102 *(.
	grod©a
)

103 *(.
	grod©a
*)

104 . = 
ALIGN
(4);

105 } >
	gFLASH


107 .
	gARM
.
	gexèb
 : { *(.
ARM
.
exèb
* .
gnu
.
lök⁄˚
.
¨mexèb
.*Ë} >
FLASH


108 .
ARM
 : {

109 
__exidx_°¨t
 = .;

110 *(.
	gARM
.
	gexidx
*)

111 
	g__exidx_íd
 = .;

112 } >
	gFLASH


114 .
	g¥eöô_¨øy
 :

116 
PROVIDE_HIDDEN
 (
__¥eöô_¨øy_°¨t
 = .);

117 
KEEP
 (*(.
¥eöô_¨øy
*))

118 
PROVIDE_HIDDEN
 (
__¥eöô_¨øy_íd
 = .);

119 } >
	gFLASH


120 .
	göô_¨øy
 :

122 
PROVIDE_HIDDEN
 (
__öô_¨øy_°¨t
 = .);

123 
KEEP
 (*(
SORT
(.
öô_¨øy
.*)))

124 
KEEP
 (*(.
öô_¨øy
*))

125 
PROVIDE_HIDDEN
 (
__öô_¨øy_íd
 = .);

126 } >
	gFLASH


127 .
	gföi_¨øy
 :

129 
PROVIDE_HIDDEN
 (
__föi_¨øy_°¨t
 = .);

130 
KEEP
 (*(
SORT
(.
föi_¨øy
.*)))

131 
KEEP
 (*(.
föi_¨øy
*))

132 
PROVIDE_HIDDEN
 (
__föi_¨øy_íd
 = .);

133 } >
FLASH


136 
	g_sid©a
 = 
LOADADDR
(.
d©a
);

139 .
	gd©a
 :

141 . = 
ALIGN
(4);

142 
	g_sd©a
 = .;

143 *(.
	gd©a
)

144 *(.
	gd©a
*)

146 . = 
ALIGN
(4);

147 
	g_ed©a
 = .;

148 } >
RAM
 
	gAT
> 
	gFLASH


152 . = 
ALIGN
(4);

153 .
bss
 (
NOLOAD
) :

156 
_sbss
 = .;

157 
	g__bss_°¨t__
 = 
_sbss
;

158 *(.
	gbss
)

159 *(.
	gbss
*)

160 *(
	gCOMMON
)

162 . = 
ALIGN
(4);

163 
	g_ebss
 = .;

164 
	g__bss_íd__
 = 
_ebss
;

165 } >
	gRAM


168 .
hóp
 (
NOLOAD
) :

170 . = 
ALIGN
(4);

171 
PROVIDE
 ( 
íd
 = . );

172 
PROVIDE
 ( 
_íd
 = . );

173 *(.
	ghóp
*)

174 . = . + 
_Mö_Hóp_Size
;

175 
	g__HópLimô
 = .;

176 . = 
ALIGN
(4);

177 } >
	gRAM


179 .
	gARM
.
	g©åibuãs
 0 : { *(.
ARM
.
©åibuãs
) }

181 
__SèckLimô
 = 
_e°ack
 - 
_Mö_Sèck_Size
;

183 
ASSERT
(
__SèckLimô
 >
__HópLimô
, "Region RAM overflowed with stack")

	@
1
.
0
109
8914
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\croutine.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\event_groups.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\heap_1.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\FreeRTOS.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\FreeRTOSConfig.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\StackMacros.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\atomic.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\croutine.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\deprecated_definitions.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\event_groups.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\list.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\message_buffer.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\mpu_prototypes.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\mpu_wrappers.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\portable.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\portmacro.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\projdefs.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\queue.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\semphr.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\stack_macros.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\stream_buffer.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\task.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\include\timers.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\list.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\port.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\queue.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\stream_buffer.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\tasks.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\FreeRTOS\timers.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\LL\stm32f1xx_ll_bus.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\LL\stm32f1xx_ll_rcc.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\LL\stm32f1xx_ll_rcc.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\LL\stm32f1xx_ll_usart.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\LL\stm32f1xx_ll_usart.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32F1xx_HAL_Driver\Inc\Legacy\stm32_hal_legacy.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_pcd.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_pcd_ex.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32F1xx_HAL_Driver\Inc\stm32f1xx_ll_usb.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32F1xx_HAL_Driver\Src\stm32f1xx_hal_pcd.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32F1xx_HAL_Driver\Src\stm32f1xx_hal_pcd_ex.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32F1xx_HAL_Driver\Src\stm32f1xx_ll_usb.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Class\CDC\Inc\usbd_cdc.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Class\CDC\Src\usbd_cdc.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Class\MSC\Inc\usbd_msc.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Class\MSC\Inc\usbd_msc_bot.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Class\MSC\Inc\usbd_msc_data.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Class\MSC\Inc\usbd_msc_scsi.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Class\MSC\Src\usbd_msc.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Class\MSC\Src\usbd_msc_bot.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Class\MSC\Src\usbd_msc_data.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Class\MSC\Src\usbd_msc_scsi.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Core\Inc\usbd_core.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Core\Inc\usbd_ctlreq.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Core\Inc\usbd_def.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Core\Inc\usbd_ioreq.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Core\Src\usbd_core.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Core\Src\usbd_ctlreq.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\Libraries\STM32_USB_Device_Library\Core\Src\usbd_ioreq.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\STM32F103xx.svd
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\cmsis\cmsis_compiler.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\cmsis\cmsis_gcc.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\cmsis\cmsis_version.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\cmsis\core_cm3.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\cmsis\mpu_armv7.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\cmsis\mpu_armv8.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\cmsis\tz_context.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\inc\stm32f103xb.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\inc\stm32f1xx.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\inc\system_stm32f1xx.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\Clock.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\Clock.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\IO.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\IO.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\App\usb_device.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\App\usb_device.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\App\usbd_cdc_if.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\App\usbd_cdc_if.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\App\usbd_desc.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\App\usbd_desc.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\App\usbd_storage_if.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\App\usbd_storage_if.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\Target\usbd_conf.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\Target\usbd_conf.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\app.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\emfat.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\emfat.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\usbd_msc_cdc.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\USB_DEVICE\usbd_msc_cdc.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\dma_103.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\dma_103.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\eeprom_AT25.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\eeprom_AT25.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\main.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\main.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\measure_NTC.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\measure_NTC.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\modbus.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\modbus.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\modbus_config.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\modbus_hard.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\modbus_hard.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\modbus_reg.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\modbus_reg.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\startup_stm32f103xb.S
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\stm32f1xx_hal_conf.h
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\src\system_stm32f1xx.c
D:\Dropbox\gg\9T_MEAN_WELL\Embitz\MSD_2_Embitz\stm32f103c8_flash.ld
